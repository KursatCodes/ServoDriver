

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Fri Aug 25 14:09:54 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
     7                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    16                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text24,local,class=CODE,merge=1,delta=2
    35                           	psect	text25,local,class=CODE,merge=1,delta=2
    36                           	psect	text26,local,class=CODE,merge=1,delta=2
    37                           	psect	text27,local,class=CODE,merge=1,delta=2
    38                           	psect	text28,local,class=CODE,merge=1,delta=2
    39                           	psect	text29,local,class=CODE,merge=1,delta=2
    40                           	psect	text30,local,class=CODE,merge=1,delta=2
    41                           	psect	text31,local,class=CODE,merge=1,delta=2
    42                           	psect	text32,local,class=CODE,merge=1,delta=2
    43                           	psect	text33,local,class=CODE,merge=1,delta=2
    44                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    45                           	psect	text1_split_1,local,class=CODE,merge=1,delta=2
    46                           	dabs	1,0x7E,2
    47  0000                     
    48                           ; Generated 22/03/2023 GMT
    49                           ; 
    50                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution. Publication is not required when
    64                           ;        this file is used in an embedded application.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC16F877A Definitions
    80                           ; 
    81                           ; SFR Addresses
    82  0000                     	;# 
    83  0001                     	;# 
    84  0002                     	;# 
    85  0003                     	;# 
    86  0004                     	;# 
    87  0005                     	;# 
    88  0006                     	;# 
    89  0007                     	;# 
    90  0008                     	;# 
    91  0009                     	;# 
    92  000A                     	;# 
    93  000B                     	;# 
    94  000C                     	;# 
    95  000D                     	;# 
    96  000E                     	;# 
    97  000E                     	;# 
    98  000F                     	;# 
    99  0010                     	;# 
   100  0011                     	;# 
   101  0012                     	;# 
   102  0013                     	;# 
   103  0014                     	;# 
   104  0015                     	;# 
   105  0015                     	;# 
   106  0016                     	;# 
   107  0017                     	;# 
   108  0018                     	;# 
   109  0019                     	;# 
   110  001A                     	;# 
   111  001B                     	;# 
   112  001B                     	;# 
   113  001C                     	;# 
   114  001D                     	;# 
   115  001E                     	;# 
   116  001F                     	;# 
   117  0081                     	;# 
   118  0085                     	;# 
   119  0086                     	;# 
   120  0087                     	;# 
   121  0088                     	;# 
   122  0089                     	;# 
   123  008C                     	;# 
   124  008D                     	;# 
   125  008E                     	;# 
   126  0091                     	;# 
   127  0092                     	;# 
   128  0093                     	;# 
   129  0094                     	;# 
   130  0098                     	;# 
   131  0099                     	;# 
   132  009C                     	;# 
   133  009D                     	;# 
   134  009E                     	;# 
   135  009F                     	;# 
   136  010C                     	;# 
   137  010D                     	;# 
   138  010E                     	;# 
   139  010F                     	;# 
   140  018C                     	;# 
   141  018D                     	;# 
   142  0000                     	;# 
   143  0001                     	;# 
   144  0002                     	;# 
   145  0003                     	;# 
   146  0004                     	;# 
   147  0005                     	;# 
   148  0006                     	;# 
   149  0007                     	;# 
   150  0008                     	;# 
   151  0009                     	;# 
   152  000A                     	;# 
   153  000B                     	;# 
   154  000C                     	;# 
   155  000D                     	;# 
   156  000E                     	;# 
   157  000E                     	;# 
   158  000F                     	;# 
   159  0010                     	;# 
   160  0011                     	;# 
   161  0012                     	;# 
   162  0013                     	;# 
   163  0014                     	;# 
   164  0015                     	;# 
   165  0015                     	;# 
   166  0016                     	;# 
   167  0017                     	;# 
   168  0018                     	;# 
   169  0019                     	;# 
   170  001A                     	;# 
   171  001B                     	;# 
   172  001B                     	;# 
   173  001C                     	;# 
   174  001D                     	;# 
   175  001E                     	;# 
   176  001F                     	;# 
   177  0081                     	;# 
   178  0085                     	;# 
   179  0086                     	;# 
   180  0087                     	;# 
   181  0088                     	;# 
   182  0089                     	;# 
   183  008C                     	;# 
   184  008D                     	;# 
   185  008E                     	;# 
   186  0091                     	;# 
   187  0092                     	;# 
   188  0093                     	;# 
   189  0094                     	;# 
   190  0098                     	;# 
   191  0099                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009E                     	;# 
   195  009F                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  018C                     	;# 
   201  018D                     	;# 
   202  0000                     	;# 
   203  0001                     	;# 
   204  0002                     	;# 
   205  0003                     	;# 
   206  0004                     	;# 
   207  0005                     	;# 
   208  0006                     	;# 
   209  0007                     	;# 
   210  0008                     	;# 
   211  0009                     	;# 
   212  000A                     	;# 
   213  000B                     	;# 
   214  000C                     	;# 
   215  000D                     	;# 
   216  000E                     	;# 
   217  000E                     	;# 
   218  000F                     	;# 
   219  0010                     	;# 
   220  0011                     	;# 
   221  0012                     	;# 
   222  0013                     	;# 
   223  0014                     	;# 
   224  0015                     	;# 
   225  0015                     	;# 
   226  0016                     	;# 
   227  0017                     	;# 
   228  0018                     	;# 
   229  0019                     	;# 
   230  001A                     	;# 
   231  001B                     	;# 
   232  001B                     	;# 
   233  001C                     	;# 
   234  001D                     	;# 
   235  001E                     	;# 
   236  001F                     	;# 
   237  0081                     	;# 
   238  0085                     	;# 
   239  0086                     	;# 
   240  0087                     	;# 
   241  0088                     	;# 
   242  0089                     	;# 
   243  008C                     	;# 
   244  008D                     	;# 
   245  008E                     	;# 
   246  0091                     	;# 
   247  0092                     	;# 
   248  0093                     	;# 
   249  0094                     	;# 
   250  0098                     	;# 
   251  0099                     	;# 
   252  009C                     	;# 
   253  009D                     	;# 
   254  009E                     	;# 
   255  009F                     	;# 
   256  010C                     	;# 
   257  010D                     	;# 
   258  010E                     	;# 
   259  010F                     	;# 
   260  018C                     	;# 
   261  018D                     	;# 
   262                           
   263                           	psect	stringtext
   264  0000'                    __pstringtext:
   265  0000'                    stringtab:
   266  0000'                    __stringtab:
   267                           
   268                           ;	String table - string pointers are 2 bytes each
   269  0000' 1BFF               	btfsc	btemp+1,7
   270  0001' 2800'              	ljmp	stringcode
   271  0002' 1383               	bcf	3,7
   272  0003' 187F               	btfsc	btemp+1,0
   273  0004' 1783               	bsf	3,7
   274  0005' 0800               	movf	0,w
   275  0006' 0A84               	incf	4,f
   276  0007' 1903               	skipnz
   277  0008' 0AFF               	incf	btemp+1,f
   278  0009' 0008               	return
   279  000A'                    stringcode:
   280  000A' 087F               	movf	btemp+1,w
   281  000B' 397F               	andlw	127
   282  000C' 008A               	movwf	10
   283  000D' 0804               	movf	4,w
   284  000E' 0A84               	incf	4,f
   285  000F' 1903               	skipnz
   286  0010' 0AFF               	incf	btemp+1,f
   287  0011' 0082               	movwf	2
   288  0012'                    __stringbase:
   289  0012'                    __end_of__stringtab:
   290  0012'                    __powers_:
   291  0012' 3400               	retlw	0
   292  0013' 3400               	retlw	0
   293  0014' 3480               	retlw	128
   294  0015' 343F               	retlw	63
   295  0016' 3400               	retlw	0
   296  0017' 3400               	retlw	0
   297  0018' 3420               	retlw	32
   298  0019' 3441               	retlw	65
   299  001A' 3400               	retlw	0
   300  001B' 3400               	retlw	0
   301  001C' 34C8               	retlw	200
   302  001D' 3442               	retlw	66
   303  001E' 3400               	retlw	0
   304  001F' 3400               	retlw	0
   305  0020' 347A               	retlw	122
   306  0021' 3444               	retlw	68
   307  0022' 3400               	retlw	0
   308  0023' 3440               	retlw	64
   309  0024' 341C               	retlw	28
   310  0025' 3446               	retlw	70
   311  0026' 3400               	retlw	0
   312  0027' 3450               	retlw	80
   313  0028' 34C3               	retlw	195
   314  0029' 3447               	retlw	71
   315  002A' 3400               	retlw	0
   316  002B' 3424               	retlw	36
   317  002C' 3474               	retlw	116
   318  002D' 3449               	retlw	73
   319  002E' 3480               	retlw	128
   320  002F' 3496               	retlw	150
   321  0030' 3418               	retlw	24
   322  0031' 344B               	retlw	75
   323  0032' 3420               	retlw	32
   324  0033' 34BC               	retlw	188
   325  0034' 34BE               	retlw	190
   326  0035' 344C               	retlw	76
   327  0036' 3428               	retlw	40
   328  0037' 346B               	retlw	107
   329  0038' 346E               	retlw	110
   330  0039' 344E               	retlw	78
   331  003A' 34F9               	retlw	249
   332  003B' 3402               	retlw	2
   333  003C' 3415               	retlw	21
   334  003D' 3450               	retlw	80
   335  003E' 34EC               	retlw	236
   336  003F' 3478               	retlw	120
   337  0040' 34AD               	retlw	173
   338  0041' 3460               	retlw	96
   339  0042' 34CA               	retlw	202
   340  0043' 34F2               	retlw	242
   341  0044' 3449               	retlw	73
   342  0045' 3471               	retlw	113
   343  0046'                    __end_of__powers_:
   344  0046'                    __npowers_:
   345  0046' 3400               	retlw	0
   346  0047' 3400               	retlw	0
   347  0048' 3480               	retlw	128
   348  0049' 343F               	retlw	63
   349  004A' 34CD               	retlw	205
   350  004B' 34CC               	retlw	204
   351  004C' 34CC               	retlw	204
   352  004D' 343D               	retlw	61
   353  004E' 340A               	retlw	10
   354  004F' 34D7               	retlw	215
   355  0050' 3423               	retlw	35
   356  0051' 343C               	retlw	60
   357  0052' 346F               	retlw	111
   358  0053' 3412               	retlw	18
   359  0054' 3483               	retlw	131
   360  0055' 343A               	retlw	58
   361  0056' 3417               	retlw	23
   362  0057' 34B7               	retlw	183
   363  0058' 34D1               	retlw	209
   364  0059' 3438               	retlw	56
   365  005A' 34AC               	retlw	172
   366  005B' 34C5               	retlw	197
   367  005C' 3427               	retlw	39
   368  005D' 3437               	retlw	55
   369  005E' 34BD               	retlw	189
   370  005F' 3437               	retlw	55
   371  0060' 3486               	retlw	134
   372  0061' 3435               	retlw	53
   373  0062' 3495               	retlw	149
   374  0063' 34BF               	retlw	191
   375  0064' 34D6               	retlw	214
   376  0065' 3433               	retlw	51
   377  0066' 3477               	retlw	119
   378  0067' 34CC               	retlw	204
   379  0068' 342B               	retlw	43
   380  0069' 3432               	retlw	50
   381  006A' 345F               	retlw	95
   382  006B' 3470               	retlw	112
   383  006C' 3489               	retlw	137
   384  006D' 3430               	retlw	48
   385  006E' 34FF               	retlw	255
   386  006F' 34E6               	retlw	230
   387  0070' 34DB               	retlw	219
   388  0071' 342E               	retlw	46
   389  0072' 3408               	retlw	8
   390  0073' 34E5               	retlw	229
   391  0074' 343C               	retlw	60
   392  0075' 341E               	retlw	30
   393  0076' 3460               	retlw	96
   394  0077' 3442               	retlw	66
   395  0078' 34A2               	retlw	162
   396  0079' 340D               	retlw	13
   397  007A'                    __end_of__npowers_:
   398  007A'                    _dpowers:
   399  007A' 3401               	retlw	1
   400  007B' 3400               	retlw	0
   401  007C' 3400               	retlw	0
   402  007D' 3400               	retlw	0
   403  007E' 340A               	retlw	10
   404  007F' 3400               	retlw	0
   405  0080' 3400               	retlw	0
   406  0081' 3400               	retlw	0
   407  0082' 3464               	retlw	100
   408  0083' 3400               	retlw	0
   409  0084' 3400               	retlw	0
   410  0085' 3400               	retlw	0
   411  0086' 34E8               	retlw	232
   412  0087' 3403               	retlw	3
   413  0088' 3400               	retlw	0
   414  0089' 3400               	retlw	0
   415  008A' 3410               	retlw	16
   416  008B' 3427               	retlw	39
   417  008C' 3400               	retlw	0
   418  008D' 3400               	retlw	0
   419  008E' 34A0               	retlw	160
   420  008F' 3486               	retlw	134
   421  0090' 3401               	retlw	1
   422  0091' 3400               	retlw	0
   423  0092' 3440               	retlw	64
   424  0093' 3442               	retlw	66
   425  0094' 340F               	retlw	15
   426  0095' 3400               	retlw	0
   427  0096' 3480               	retlw	128
   428  0097' 3496               	retlw	150
   429  0098' 3498               	retlw	152
   430  0099' 3400               	retlw	0
   431  009A' 3400               	retlw	0
   432  009B' 34E1               	retlw	225
   433  009C' 34F5               	retlw	245
   434  009D' 3405               	retlw	5
   435  009E' 3400               	retlw	0
   436  009F' 34CA               	retlw	202
   437  00A0' 349A               	retlw	154
   438  00A1' 343B               	retlw	59
   439  00A2'                    __end_of_dpowers:
   440  0019                     _TXREG	set	25
   441  0018                     _RCSTA	set	24
   442  001E                     _ADRESH	set	30
   443  001F                     _ADCON0	set	31
   444  003B                     _RC3	set	59
   445  004A                     _RE2	set	74
   446  003A                     _RC2	set	58
   447  0048                     _RE0	set	72
   448  0038                     _RC0	set	56
   449  0049                     _RE1	set	73
   450  0039                     _RC1	set	57
   451  00FA                     _GO	set	250
   452  002C                     _RA4	set	44
   453  0034                     _RB4	set	52
   454  0035                     _RB5	set	53
   455  0030                     _RB0	set	48
   456  0031                     _RB1	set	49
   457  0032                     _RB2	set	50
   458  0033                     _RB3	set	51
   459  0098                     _TXSTA	set	152
   460  0099                     _SPBRG	set	153
   461  009F                     _ADCON1	set	159
   462  0086                     _TRISBbits	set	134
   463  04C1                     _TRMT	set	1217
   464  043F                     _TRISC7	set	1087
   465  043E                     _TRISC6	set	1086
   466  0429                     _TRISA1	set	1065
   467  043B                     _TRISC3	set	1083
   468  0438                     _TRISC0	set	1080
   469  044A                     _TRISE2	set	1098
   470  043A                     _TRISC2	set	1082
   471  0439                     _TRISC1	set	1081
   472  0449                     _TRISE1	set	1097
   473  0448                     _TRISE0	set	1096
   474  042C                     _TRISA4	set	1068
   475  00A2'                    STR_22:
   476  00A2' 3420               	retlw	32	;' '
   477  00A3' 3420               	retlw	32	;' '
   478  00A4' 3420               	retlw	32	;' '
   479  00A5' 3420               	retlw	32	;' '
   480  00A6' 3420               	retlw	32	;' '
   481  00A7' 3420               	retlw	32	;' '
   482  00A8' 3420               	retlw	32	;' '
   483  00A9' 3420               	retlw	32	;' '
   484  00AA' 3420               	retlw	32	;' '
   485  00AB' 3420               	retlw	32	;' '
   486  00AC' 3420               	retlw	32	;' '
   487  00AD' 3420               	retlw	32	;' '
   488  00AE' 3420               	retlw	32	;' '
   489  00AF' 3420               	retlw	32	;' '
   490  00B0' 3400               	retlw	0
   491  00B1'                    STR_24:
   492  00B1' 3444               	retlw	68	;'D'
   493  00B2' 3443               	retlw	67	;'C'
   494  00B3' 3420               	retlw	32	;' '
   495  00B4' 3453               	retlw	83	;'S'
   496  00B5' 3445               	retlw	69	;'E'
   497  00B6' 3452               	retlw	82	;'R'
   498  00B7' 3456               	retlw	86	;'V'
   499  00B8' 344F               	retlw	79	;'O'
   500  00B9' 3420               	retlw	32	;' '
   501  00BA' 3445               	retlw	69	;'E'
   502  00BB' 3452               	retlw	82	;'R'
   503  00BC' 3452               	retlw	82	;'R'
   504  00BD' 344F               	retlw	79	;'O'
   505  00BE' 3452               	retlw	82	;'R'
   506  00BF' 3400               	retlw	0
   507  00C0'                    STR_1:
   508  00C0' 3448               	retlw	72	;'H'
   509  00C1' 3469               	retlw	105	;'i'
   510  00C2' 344B               	retlw	75	;'K'
   511  00C3' 342D               	retlw	45	;'-'
   512  00C4' 3455               	retlw	85	;'U'
   513  00C5' 345A               	retlw	90	;'Z'
   514  00C6' 344D               	retlw	77	;'M'
   515  00C7' 3441               	retlw	65	;'A'
   516  00C8' 344E               	retlw	78	;'N'
   517  00C9' 344C               	retlw	76	;'L'
   518  00CA' 3441               	retlw	65	;'A'
   519  00CB' 3452               	retlw	82	;'R'
   520  00CC' 3400               	retlw	0
   521  00CD'                    STR_8:
   522  00CD' 3446               	retlw	70	;'F'
   523  00CE' 3457               	retlw	87	;'W'
   524  00CF' 3444               	retlw	68	;'D'
   525  00D0' 3420               	retlw	32	;' '
   526  00D1' 344C               	retlw	76	;'L'
   527  00D2' 3449               	retlw	73	;'I'
   528  00D3' 344D               	retlw	77	;'M'
   529  00D4' 3449               	retlw	73	;'I'
   530  00D5' 3454               	retlw	84	;'T'
   531  00D6' 3400               	retlw	0
   532  00D7'                    STR_14:
   533  00D7' 3452               	retlw	82	;'R'
   534  00D8' 3445               	retlw	69	;'E'
   535  00D9' 3457               	retlw	87	;'W'
   536  00DA' 3420               	retlw	32	;' '
   537  00DB' 344C               	retlw	76	;'L'
   538  00DC' 3449               	retlw	73	;'I'
   539  00DD' 344D               	retlw	77	;'M'
   540  00DE' 3449               	retlw	73	;'I'
   541  00DF' 3454               	retlw	84	;'T'
   542  00E0' 3400               	retlw	0
   543  00E1'                    STR_10:
   544  00E1' 3446               	retlw	70	;'F'
   545  00E2' 3445               	retlw	69	;'E'
   546  00E3' 3441               	retlw	65	;'A'
   547  00E4' 3444               	retlw	68	;'D'
   548  00E5' 3420               	retlw	32	;' '
   549  00E6' 3434               	retlw	52	;'4'
   550  00E7' 3430               	retlw	48	;'0'
   551  00E8' 3430               	retlw	48	;'0'
   552  00E9' 3400               	retlw	0
   553  00EA'                    STR_11:
   554  00EA' 3473               	retlw	115	;'s'
   555  00EB' 342D               	retlw	45	;'-'
   556  00EC' 3432               	retlw	50	;'2'
   557  00ED' 3435               	retlw	53	;'5'
   558  00EE' 3435               	retlw	53	;'5'
   559  00EF' 340D               	retlw	13
   560  00F0' 340A               	retlw	10
   561  00F1' 3400               	retlw	0
   562  00F2'                    STR_6:
   563  00F2' 3466               	retlw	102	;'f'
   564  00F3' 346C               	retlw	108	;'l'
   565  00F4' 346F               	retlw	111	;'o'
   566  00F5' 3461               	retlw	97	;'a'
   567  00F6' 3474               	retlw	116	;'t'
   568  00F7' 343A               	retlw	58	;':'
   569  00F8' 3420               	retlw	32	;' '
   570  00F9' 3400               	retlw	0
   571  00FA'                    STR_2:
   572  00FA' 3450               	retlw	80	;'P'
   573  00FB' 3472               	retlw	114	;'r'
   574  00FC' 346F               	retlw	111	;'o'
   575  00FD' 346A               	retlw	106	;'j'
   576  00FE' 3465               	retlw	101	;'e'
   577  00FF' 3463               	retlw	99	;'c'
   578  0100' 3474               	retlw	116	;'t'
   579  0101' 3400               	retlw	0
   580  0102'                    STR_17:
   581  0102' 3473               	retlw	115	;'s'
   582  0103' 3432               	retlw	50	;'2'
   583  0104' 3435               	retlw	53	;'5'
   584  0105' 3435               	retlw	53	;'5'
   585  0106' 340D               	retlw	13
   586  0107' 340A               	retlw	10
   587  0108' 3400               	retlw	0
   588  0109'                    STR_4:
   589  0109' 3472               	retlw	114	;'r'
   590  010A' 3461               	retlw	97	;'a'
   591  010B' 3474               	retlw	116	;'t'
   592  010C' 3465               	retlw	101	;'e'
   593  010D' 343A               	retlw	58	;':'
   594  010E' 3420               	retlw	32	;' '
   595  010F' 3400               	retlw	0
   596  0110'                    STR_13:
   597  0110' 3473               	retlw	115	;'s'
   598  0111' 3425               	retlw	37	;'%'
   599  0112' 3464               	retlw	100	;'d'
   600  0113' 340D               	retlw	13
   601  0114' 340A               	retlw	10
   602  0115' 3400               	retlw	0
   603  0116'                    STR_7:
   604  0116' 3425               	retlw	37	;'%'
   605  0117' 3433               	retlw	51	;'3'
   606  0118' 342E               	retlw	46	;'.'
   607  0119' 3431               	retlw	49	;'1'
   608  011A' 3466               	retlw	102	;'f'
   609  011B' 3400               	retlw	0
   610  011C'                    STR_9:
   611  011C' 3473               	retlw	115	;'s'
   612  011D' 3430               	retlw	48	;'0'
   613  011E' 340D               	retlw	13
   614  011F' 340A               	retlw	10
   615  0120' 3400               	retlw	0
   616  0121'                    STR_12:
   617  0121' 3446               	retlw	70	;'F'
   618  0122' 3457               	retlw	87	;'W'
   619  0123' 3444               	retlw	68	;'D'
   620  0124' 3420               	retlw	32	;' '
   621  0125' 3400               	retlw	0
   622  0126'                    STR_18:
   623  0126' 3452               	retlw	82	;'R'
   624  0127' 3445               	retlw	69	;'E'
   625  0128' 3457               	retlw	87	;'W'
   626  0129' 3420               	retlw	32	;' '
   627  012A' 3400               	retlw	0
   628  012B'                    STR_20:
   629  012B' 3453               	retlw	83	;'S'
   630  012C' 3454               	retlw	84	;'T'
   631  012D' 344F               	retlw	79	;'O'
   632  012E' 3450               	retlw	80	;'P'
   633  012F' 3400               	retlw	0
   634  0130'                    STR_5:
   635  0130' 3425               	retlw	37	;'%'
   636  0131' 3433               	retlw	51	;'3'
   637  0132' 3475               	retlw	117	;'u'
   638  0133' 3400               	retlw	0
   639  0134'                    STR_3:
   640  0134' 3456               	retlw	86	;'V'
   641  0135' 3432               	retlw	50	;'2'
   642  0136' 3400               	retlw	0
   643  011C'                    
   644                           	psect	cinit
   645  0000'                    start_initialization:	
   646                           ; #config settings
   647                           
   648  0000'                    __initialization:
   649  0000'                    end_of_initialization:	
   650                           ;End of C runtime variable initialization code
   651                           
   652  0000'                    __end_of__initialization:
   653  0000' 0183               	clrf	3
   654  0001' 120A' 118A' 2800'  	ljmp	_main	;jump to C main() function
   655                           
   656                           	psect	cstackBANK3
   657  0000'                    __pcstackBANK3:
   658  0000'                    main@combinedText:
   659                           
   660                           ; 20 bytes @ 0x0
   661  0000'                    	ds	20
   662  0014'                    main@combinedText_160:
   663                           
   664                           ; 20 bytes @ 0x14
   665  0014'                    	ds	20
   666  0028'                    main@floatVal:
   667                           
   668                           ; 4 bytes @ 0x28
   669  0028'                    	ds	4
   670  002C'                    main@adcValue1:
   671                           
   672                           ; 2 bytes @ 0x2C
   673  002C'                    	ds	2
   674  002E'                    main@adcValue2:
   675                           
   676                           ; 2 bytes @ 0x2E
   677  002E'                    	ds	2
   678  0030'                    main@negativeDisplayValue:
   679                           
   680                           ; 2 bytes @ 0x30
   681  0030'                    	ds	2
   682  0032'                    main@adcString1:
   683                           
   684                           ; 4 bytes @ 0x32
   685  0032'                    	ds	4
   686  0036'                    main@adcString2:
   687                           
   688                           ; 4 bytes @ 0x36
   689  0036'                    	ds	4
   690  003A'                    main@displayValue:
   691                           
   692                           ; 2 bytes @ 0x3A
   693  003A'                    	ds	2
   694                           
   695                           	psect	cstackBANK1
   696  0000'                    __pcstackBANK1:
   697  0000'                    ??_sprintf:
   698                           
   699                           ; 1 bytes @ 0x0
   700  0000'                    	ds	5
   701  0005'                    _sprintf$874:
   702                           
   703                           ; 4 bytes @ 0x5
   704  0005'                    	ds	4
   705  0009'                    sprintf@ap:
   706                           
   707                           ; 1 bytes @ 0x9
   708  0009'                    	ds	1
   709  000A'                    sprintf@flag:
   710                           
   711                           ; 2 bytes @ 0xA
   712  000A'                    	ds	2
   713  000C'                    sprintf@width:
   714                           
   715                           ; 2 bytes @ 0xC
   716  000C'                    	ds	2
   717  000E'                    sprintf@tmpval:
   718                           
   719                           ; 4 bytes @ 0xE
   720  000E'                    	ds	4
   721  0012'                    sprintf@val:
   722                           
   723                           ; 4 bytes @ 0x12
   724  0012'                    	ds	4
   725  0016'                    sprintf@eexp:
   726                           
   727                           ; 2 bytes @ 0x16
   728  0016'                    	ds	2
   729  0018'                    sprintf@fval:
   730                           
   731                           ; 4 bytes @ 0x18
   732  0018'                    	ds	4
   733  001C'                    sprintf@sp:
   734                           
   735                           ; 1 bytes @ 0x1C
   736  001C'                    	ds	1
   737  001D'                    sprintf@prec:
   738                           
   739                           ; 2 bytes @ 0x1D
   740  001D'                    	ds	2
   741  001F'                    sprintf@c:
   742                           
   743                           ; 1 bytes @ 0x1F
   744  001F'                    	ds	1
   745  0020'                    ??_main:
   746                           
   747                           ; 1 bytes @ 0x20
   748  0020'                    	ds	3
   749                           
   750                           	psect	cstackCOMMON
   751  0000'                    __pcstackCOMMON:
   752  0000'                    ?_isdigit:
   753  0000'                    ?___fleq:	
   754                           ; 1 bit 
   755                           
   756  0000'                    ?___flge:	
   757                           ; 1 bit 
   758                           
   759  0000'                    ?_UART_Initialize:	
   760                           ; 1 bit 
   761                           
   762  0000'                    ??_UART_Initialize:	
   763                           ; 1 bytes @ 0x0
   764                           
   765  0000'                    ??_isdigit:	
   766                           ; 1 bytes @ 0x0
   767                           
   768  0000'                    ?_Lcd_Port:	
   769                           ; 1 bytes @ 0x0
   770                           
   771  0000'                    ??_Lcd_Port:	
   772                           ; 1 bytes @ 0x0
   773                           
   774  0000'                    ?_Lcd_Cmd:	
   775                           ; 1 bytes @ 0x0
   776                           
   777  0000'                    ?_Lcd_Clear:	
   778                           ; 1 bytes @ 0x0
   779                           
   780  0000'                    ?_Lcd_Init:	
   781                           ; 1 bytes @ 0x0
   782                           
   783  0000'                    ?_Lcd_Write_Char:	
   784                           ; 1 bytes @ 0x0
   785                           
   786  0000'                    ?_UART_Write:	
   787                           ; 1 bytes @ 0x0
   788                           
   789  0000'                    ??_UART_Write:	
   790                           ; 1 bytes @ 0x0
   791                           
   792  0000'                    ?__Umul8_16:	
   793                           ; 1 bytes @ 0x0
   794                           
   795  0000'                    ?_main:	
   796                           ; 2 bytes @ 0x0
   797                           
   798  0000'                    ?___wmul:	
   799                           ; 2 bytes @ 0x0
   800                           
   801  0000'                    ?___awmod:	
   802                           ; 2 bytes @ 0x0
   803                           
   804  0000'                    ?___lwmod:	
   805                           ; 2 bytes @ 0x0
   806                           
   807  0000'                    ?__tdiv_to_l_:	
   808                           ; 2 bytes @ 0x0
   809                           
   810  0000'                    ?__div_to_l_:	
   811                           ; 4 bytes @ 0x0
   812                           
   813  0000'                    ?___lldiv:	
   814                           ; 4 bytes @ 0x0
   815                           
   816  0000'                    ?___flneg:	
   817                           ; 4 bytes @ 0x0
   818                           
   819  0000'                    ?___xxtofl:	
   820                           ; 4 bytes @ 0x0
   821                           
   822  0000'                    Lcd_Port@a:	
   823                           ; 4 bytes @ 0x0
   824                           
   825  0000'                    UART_Write@data:	
   826                           ; 1 bytes @ 0x0
   827                           
   828  0000'                    __Umul8_16@multiplicand:	
   829                           ; 1 bytes @ 0x0
   830                           
   831  0000'                    _isdigit$689:	
   832                           ; 1 bytes @ 0x0
   833                           
   834  0000'                    ___wmul@multiplier:	
   835                           ; 1 bytes @ 0x0
   836                           
   837  0000'                    ___awmod@divisor:	
   838                           ; 2 bytes @ 0x0
   839                           
   840  0000'                    ___lwmod@divisor:	
   841                           ; 2 bytes @ 0x0
   842                           
   843  0000'                    ___lldiv@divisor:	
   844                           ; 2 bytes @ 0x0
   845                           
   846  0000'                    __div_to_l_@f1:	
   847                           ; 4 bytes @ 0x0
   848                           
   849  0000'                    ___fleq@ff1:	
   850                           ; 4 bytes @ 0x0
   851                           
   852  0000'                    ___flge@ff1:	
   853                           ; 4 bytes @ 0x0
   854                           
   855  0000'                    ___flneg@f1:	
   856                           ; 4 bytes @ 0x0
   857                           
   858  0000'                    __tdiv_to_l_@f1:	
   859                           ; 4 bytes @ 0x0
   860                           
   861  0000'                    ___xxtofl@val:	
   862                           ; 4 bytes @ 0x0
   863                           
   864                           
   865                           ; 4 bytes @ 0x0
   866  0000'                    	ds	1
   867  0001'                    ?_UART_Write_Text:
   868  0001'                    ??_Lcd_Cmd:	
   869                           ; 1 bytes @ 0x1
   870                           
   871  0001'                    ??_Lcd_Write_Char:	
   872                           ; 1 bytes @ 0x1
   873                           
   874  0001'                    isdigit@c:	
   875                           ; 1 bytes @ 0x1
   876                           
   877  0001'                    UART_Write_Text@text:	
   878                           ; 1 bytes @ 0x1
   879                           
   880                           
   881                           ; 2 bytes @ 0x1
   882  0001'                    	ds	1
   883  0002'                    ??__Umul8_16:
   884  0002'                    Lcd_Write_Char@temp:	
   885                           ; 1 bytes @ 0x2
   886                           
   887  0002'                    ___wmul@multiplicand:	
   888                           ; 1 bytes @ 0x2
   889                           
   890  0002'                    ___awmod@dividend:	
   891                           ; 2 bytes @ 0x2
   892                           
   893  0002'                    ___lwmod@dividend:	
   894                           ; 2 bytes @ 0x2
   895                           
   896                           
   897                           ; 2 bytes @ 0x2
   898  0002'                    	ds	1
   899  0003'                    ??_UART_Write_Text:
   900  0003'                    Lcd_Cmd@a:	
   901                           ; 1 bytes @ 0x3
   902                           
   903  0003'                    Lcd_Write_Char@y:	
   904                           ; 1 bytes @ 0x3
   905                           
   906                           
   907                           ; 1 bytes @ 0x3
   908  0003'                    	ds	1
   909  0004'                    ??_Lcd_Clear:
   910  0004'                    ?_Lcd_Set_Cursor:	
   911                           ; 1 bytes @ 0x4
   912                           
   913  0004'                    ??_Lcd_Init:	
   914                           ; 1 bytes @ 0x4
   915                           
   916  0004'                    ??___wmul:	
   917                           ; 1 bytes @ 0x4
   918                           
   919  0004'                    ??___awmod:	
   920                           ; 1 bytes @ 0x4
   921                           
   922  0004'                    ??___flneg:	
   923                           ; 1 bytes @ 0x4
   924                           
   925  0004'                    ??___lwmod:	
   926                           ; 1 bytes @ 0x4
   927                           
   928  0004'                    ??___xxtofl:	
   929                           ; 1 bytes @ 0x4
   930                           
   931  0004'                    Lcd_Set_Cursor@b:	
   932                           ; 1 bytes @ 0x4
   933                           
   934  0004'                    Lcd_Write_Char@a:	
   935                           ; 1 bytes @ 0x4
   936                           
   937  0004'                    ___awmod@counter:	
   938                           ; 1 bytes @ 0x4
   939                           
   940  0004'                    ___lwmod@counter:	
   941                           ; 1 bytes @ 0x4
   942                           
   943  0004'                    ___wmul@product:	
   944                           ; 1 bytes @ 0x4
   945                           
   946  0004'                    __Umul8_16@product:	
   947                           ; 2 bytes @ 0x4
   948                           
   949  0004'                    ___lldiv@dividend:	
   950                           ; 2 bytes @ 0x4
   951                           
   952  0004'                    __div_to_l_@f2:	
   953                           ; 4 bytes @ 0x4
   954                           
   955  0004'                    ___fleq@ff2:	
   956                           ; 4 bytes @ 0x4
   957                           
   958  0004'                    ___flge@ff2:	
   959                           ; 4 bytes @ 0x4
   960                           
   961  0004'                    __tdiv_to_l_@f2:	
   962                           ; 4 bytes @ 0x4
   963                           
   964                           
   965                           ; 4 bytes @ 0x4
   966  0004'                    	ds	1
   967  0005'                    ??_Lcd_Set_Cursor:
   968  0005'                    ?_Lcd_Write_String:	
   969                           ; 1 bytes @ 0x5
   970                           
   971  0005'                    ?___lwdiv:	
   972                           ; 1 bytes @ 0x5
   973                           
   974  0005'                    ___awmod@sign:	
   975                           ; 2 bytes @ 0x5
   976                           
   977  0005'                    Lcd_Write_String@a:	
   978                           ; 1 bytes @ 0x5
   979                           
   980  0005'                    ___lwdiv@divisor:	
   981                           ; 2 bytes @ 0x5
   982                           
   983                           
   984                           ; 2 bytes @ 0x5
   985  0005'                    	ds	1
   986  0006'                    ?___awdiv:
   987  0006'                    Lcd_Set_Cursor@a:	
   988                           ; 2 bytes @ 0x6
   989                           
   990  0006'                    UART_Write_Text@i:	
   991                           ; 1 bytes @ 0x6
   992                           
   993  0006'                    ___awdiv@divisor:	
   994                           ; 2 bytes @ 0x6
   995                           
   996  0006'                    __Umul8_16@word_mpld:	
   997                           ; 2 bytes @ 0x6
   998                           
   999                           
  1000                           ; 2 bytes @ 0x6
  1001  0006'                    	ds	1
  1002  0007'                    ??_Lcd_Write_String:
  1003  0007'                    Lcd_Set_Cursor@z:	
  1004                           ; 1 bytes @ 0x7
  1005                           
  1006  0007'                    ___lwdiv@dividend:	
  1007                           ; 1 bytes @ 0x7
  1008                           
  1009                           
  1010                           ; 2 bytes @ 0x7
  1011  0007'                    	ds	1
  1012  0008'                    ??__tdiv_to_l_:
  1013  0008'                    ??__div_to_l_:	
  1014                           ; 1 bytes @ 0x8
  1015                           
  1016  0008'                    ??___lldiv:	
  1017                           ; 1 bytes @ 0x8
  1018                           
  1019  0008'                    ??___fleq:	
  1020                           ; 1 bytes @ 0x8
  1021                           
  1022  0008'                    ??___flge:	
  1023                           ; 1 bytes @ 0x8
  1024                           
  1025  0008'                    Lcd_Set_Cursor@y:	
  1026                           ; 1 bytes @ 0x8
  1027                           
  1028  0008'                    __Umul8_16@multiplier:	
  1029                           ; 1 bytes @ 0x8
  1030                           
  1031  0008'                    ___xxtofl@sign:	
  1032                           ; 1 bytes @ 0x8
  1033                           
  1034  0008'                    ___awdiv@dividend:	
  1035                           ; 1 bytes @ 0x8
  1036                           
  1037                           
  1038                           ; 2 bytes @ 0x8
  1039  0008'                    	ds	1
  1040  0009'                    ??___lwdiv:
  1041  0009'                    Lcd_Set_Cursor@temp:	
  1042                           ; 1 bytes @ 0x9
  1043                           
  1044  0009'                    ___xxtofl@exp:	
  1045                           ; 1 bytes @ 0x9
  1046                           
  1047  0009'                    ___lwdiv@quotient:	
  1048                           ; 1 bytes @ 0x9
  1049                           
  1050  0009'                    ___lldiv@quotient:	
  1051                           ; 2 bytes @ 0x9
  1052                           
  1053                           
  1054                           ; 4 bytes @ 0x9
  1055  0009'                    	ds	1
  1056  000A'                    ??___awdiv:
  1057  000A'                    ___awdiv@counter:	
  1058                           ; 1 bytes @ 0xA
  1059                           
  1060  000A'                    Lcd_Write_String@i:	
  1061                           ; 1 bytes @ 0xA
  1062                           
  1063  000A'                    ___xxtofl@arg:	
  1064                           ; 2 bytes @ 0xA
  1065                           
  1066                           
  1067                           ; 4 bytes @ 0xA
  1068  000A'                    	ds	1
  1069  000B'                    ___awdiv@sign:
  1070  000B'                    ___lwdiv@counter:	
  1071                           ; 1 bytes @ 0xB
  1072                           
  1073                           
  1074                           ; 1 bytes @ 0xB
  1075  000B'                    	ds	1
  1076  000C'                    ___awdiv@quotient:
  1077                           
  1078                           ; 2 bytes @ 0xC
  1079  000C'                    	ds	1
  1080  000D'                    ___lldiv@counter:
  1081                           
  1082                           ; 1 bytes @ 0xD
  1083  000D'                    	ds	1
  1084  000E'                    ??___flsub:
  1085                           
  1086                           	psect	cstackBANK0
  1087  0000'                    __pcstackBANK0:	
  1088                           ; 1 bytes @ 0xE
  1089                           
  1090  0000'                    ?___llmod:
  1091  0000'                    ?___fldiv:	
  1092                           ; 4 bytes @ 0x0
  1093                           
  1094  0000'                    ?___flmul:	
  1095                           ; 4 bytes @ 0x0
  1096                           
  1097  0000'                    __div_to_l_@quot:	
  1098                           ; 4 bytes @ 0x0
  1099                           
  1100  0000'                    __tdiv_to_l_@quot:	
  1101                           ; 4 bytes @ 0x0
  1102                           
  1103  0000'                    ___llmod@divisor:	
  1104                           ; 4 bytes @ 0x0
  1105                           
  1106  0000'                    ___fldiv@a:	
  1107                           ; 4 bytes @ 0x0
  1108                           
  1109  0000'                    ___flmul@b:	
  1110                           ; 4 bytes @ 0x0
  1111                           
  1112                           
  1113                           ; 4 bytes @ 0x0
  1114  0000'                    	ds	4
  1115  0004'                    __div_to_l_@cntr:
  1116  0004'                    __tdiv_to_l_@cntr:	
  1117                           ; 1 bytes @ 0x4
  1118                           
  1119  0004'                    ___llmod@dividend:	
  1120                           ; 1 bytes @ 0x4
  1121                           
  1122  0004'                    ___fldiv@b:	
  1123                           ; 4 bytes @ 0x4
  1124                           
  1125  0004'                    ___flmul@a:	
  1126                           ; 4 bytes @ 0x4
  1127                           
  1128                           
  1129                           ; 4 bytes @ 0x4
  1130  0004'                    	ds	1
  1131  0005'                    __div_to_l_@exp1:
  1132  0005'                    __tdiv_to_l_@exp1:	
  1133                           ; 1 bytes @ 0x5
  1134                           
  1135                           
  1136                           ; 1 bytes @ 0x5
  1137  0005'                    	ds	3
  1138  0008'                    ??___llmod:
  1139  0008'                    ??___fldiv:	
  1140                           ; 1 bytes @ 0x8
  1141                           
  1142  0008'                    ??___flmul:	
  1143                           ; 1 bytes @ 0x8
  1144                           
  1145                           
  1146                           ; 1 bytes @ 0x8
  1147  0008'                    	ds	1
  1148  0009'                    ___llmod@counter:
  1149                           
  1150                           ; 1 bytes @ 0x9
  1151  0009'                    	ds	4
  1152  000D'                    ___flmul@sign:
  1153  000D'                    ___fldiv@rem:	
  1154                           ; 1 bytes @ 0xD
  1155                           
  1156                           
  1157                           ; 4 bytes @ 0xD
  1158  000D'                    	ds	1
  1159  000E'                    ___flmul@grs:
  1160                           
  1161                           ; 4 bytes @ 0xE
  1162  000E'                    	ds	3
  1163  0011'                    ___fldiv@sign:
  1164                           
  1165                           ; 1 bytes @ 0x11
  1166  0011'                    	ds	1
  1167  0012'                    ___flmul@aexp:
  1168  0012'                    ___fldiv@new_exp:	
  1169                           ; 1 bytes @ 0x12
  1170                           
  1171                           
  1172                           ; 2 bytes @ 0x12
  1173  0012'                    	ds	1
  1174  0013'                    ___flmul@bexp:
  1175                           
  1176                           ; 1 bytes @ 0x13
  1177  0013'                    	ds	1
  1178  0014'                    ___fldiv@grs:
  1179  0014'                    ___flmul@prod:	
  1180                           ; 4 bytes @ 0x14
  1181                           
  1182                           
  1183                           ; 4 bytes @ 0x14
  1184  0014'                    	ds	4
  1185  0018'                    ___fldiv@bexp:
  1186  0018'                    ___flmul@temp:	
  1187                           ; 1 bytes @ 0x18
  1188                           
  1189                           
  1190                           ; 2 bytes @ 0x18
  1191  0018'                    	ds	1
  1192  0019'                    ___fldiv@aexp:
  1193                           
  1194                           ; 1 bytes @ 0x19
  1195  0019'                    	ds	1
  1196  001A'                    ?_fround:
  1197  001A'                    ?_scale:	
  1198                           ; 4 bytes @ 0x1A
  1199                           
  1200                           
  1201                           ; 4 bytes @ 0x1A
  1202  001A'                    	ds	4
  1203  001E'                    ??_fround:
  1204  001E'                    ??_scale:	
  1205                           ; 1 bytes @ 0x1E
  1206                           
  1207                           
  1208                           ; 1 bytes @ 0x1E
  1209  001E'                    	ds	7
  1210  0025'                    _fround$872:
  1211                           
  1212                           ; 4 bytes @ 0x25
  1213  0025'                    	ds	3
  1214  0028'                    _scale$873:
  1215                           
  1216                           ; 4 bytes @ 0x28
  1217  0028'                    	ds	1
  1218  0029'                    _fround$871:
  1219                           
  1220                           ; 4 bytes @ 0x29
  1221  0029'                    	ds	3
  1222  002C'                    scale@scl:
  1223                           
  1224                           ; 1 bytes @ 0x2C
  1225  002C'                    	ds	1
  1226  002D'                    ?___fltol:
  1227  002D'                    fround@prec:	
  1228                           ; 4 bytes @ 0x2D
  1229                           
  1230  002D'                    ___fltol@f1:	
  1231                           ; 1 bytes @ 0x2D
  1232                           
  1233                           
  1234                           ; 4 bytes @ 0x2D
  1235  002D'                    	ds	1
  1236  002E'                    ?___fladd:
  1237  002E'                    ___fladd@b:	
  1238                           ; 4 bytes @ 0x2E
  1239                           
  1240                           
  1241                           ; 4 bytes @ 0x2E
  1242  002E'                    	ds	3
  1243  0031'                    ??___fltol:
  1244                           
  1245                           ; 1 bytes @ 0x31
  1246  0031'                    	ds	1
  1247  0032'                    ___fladd@a:
  1248                           
  1249                           ; 4 bytes @ 0x32
  1250  0032'                    	ds	3
  1251  0035'                    ___fltol@sign1:
  1252                           
  1253                           ; 1 bytes @ 0x35
  1254  0035'                    	ds	1
  1255  0036'                    ??___fladd:
  1256  0036'                    ___fltol@exp1:	
  1257                           ; 1 bytes @ 0x36
  1258                           
  1259                           
  1260                           ; 1 bytes @ 0x36
  1261  0036'                    	ds	8
  1262  003E'                    ___fladd@signs:
  1263                           
  1264                           ; 1 bytes @ 0x3E
  1265  003E'                    	ds	1
  1266  003F'                    ___fladd@aexp:
  1267                           
  1268                           ; 1 bytes @ 0x3F
  1269  003F'                    	ds	1
  1270  0040'                    ___fladd@bexp:
  1271                           
  1272                           ; 1 bytes @ 0x40
  1273  0040'                    	ds	1
  1274  0041'                    ___fladd@grs:
  1275                           
  1276                           ; 1 bytes @ 0x41
  1277  0041'                    	ds	1
  1278  0042'                    ?___flsub:
  1279  0042'                    ___flsub@a:	
  1280                           ; 4 bytes @ 0x42
  1281                           
  1282                           
  1283                           ; 4 bytes @ 0x42
  1284  0042'                    	ds	4
  1285  0046'                    ___flsub@b:
  1286                           
  1287                           ; 4 bytes @ 0x46
  1288  0046'                    	ds	4
  1289  004A'                    ?_sprintf:
  1290  004A'                    sprintf@f:	
  1291                           ; 2 bytes @ 0x4A
  1292                           
  1293                           
  1294                           ; 2 bytes @ 0x4A
  1295  004A'                    	ds	6
  1296                           
  1297                           	psect	maintext
  1298  0000'                    __pmaintext:	
  1299 ;;
  1300 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1301 ;;
  1302 ;; *************** function _main *****************
  1303 ;; Defined at:
  1304 ;;		line 27 in file "main.c"
  1305 ;; Parameters:    Size  Location     Type
  1306 ;;		None
  1307 ;; Auto vars:     Size  Location     Type
  1308 ;;  combinedText   20   20[BANK3 ] unsigned char [20]
  1309 ;;  combinedText   20    0[BANK3 ] unsigned char [20]
  1310 ;;  negativeDisp    2   48[BANK3 ] int 
  1311 ;;  adcString2      4   54[BANK3 ] unsigned char [4]
  1312 ;;  adcString1      4   50[BANK3 ] unsigned char [4]
  1313 ;;  floatVal        4   40[BANK3 ] float 
  1314 ;;  adcValue2       2   46[BANK3 ] unsigned int 
  1315 ;;  adcValue1       2   44[BANK3 ] unsigned int 
  1316 ;;  displayValue    2   58[BANK3 ] unsigned int 
  1317 ;;  a               2    0        unsigned int 
  1318 ;; Return value:  Size  Location     Type
  1319 ;;                  2  109[None  ] int 
  1320 ;; Registers used:
  1321 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1322 ;; Tracked objects:
  1323 ;;		On entry : B00/0
  1324 ;;		On exit  : 0/0
  1325 ;;		Unchanged: 0/0
  1326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1327 ;;      Params:         0       0       0       0       0
  1328 ;;      Locals:         0       0       0      60       0
  1329 ;;      Temps:          0       0       3       0       0
  1330 ;;      Totals:         0       0       3      60       0
  1331 ;;Total ram usage:       63 bytes
  1332 ;; Hardware stack levels required when called: 4
  1333 ;; This function calls:
  1334 ;;		_Lcd_Clear
  1335 ;;		_Lcd_Init
  1336 ;;		_Lcd_Set_Cursor
  1337 ;;		_Lcd_Write_String
  1338 ;;		_UART_Initialize
  1339 ;;		_UART_Write_Text
  1340 ;;		___fldiv
  1341 ;;		___xxtofl
  1342 ;;		_sprintf
  1343 ;; This function is called by:
  1344 ;;		Startup code after reset
  1345 ;; This function uses a non-reentrant model
  1346 ;;
  1347                           
  1348  0000'                    _main:	
  1349                           ;psect for function _main
  1350                           
  1351                           
  1352                           ;main.c: 29:   unsigned int a;;main.c: 32:   TRISBbits.TRISB0 = 0;
  1353                           
  1354                           ;incstack = 0
  1355                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1356  0000' 1683               	bsf	3,5	;RP0=1, select bank1
  1357  0001' 1303               	bcf	3,6	;RP1=0, select bank1
  1358  0002' 1006               	bcf	6,0	;volatile
  1359                           
  1360                           ;main.c: 33:   TRISBbits.TRISB1 = 0;
  1361  0003' 1086               	bcf	6,1	;volatile
  1362                           
  1363                           ;main.c: 34:   TRISBbits.TRISB2 = 0;
  1364  0004' 1106               	bcf	6,2	;volatile
  1365                           
  1366                           ;main.c: 35:   TRISBbits.TRISB3 = 0;
  1367  0005' 1186               	bcf	6,3	;volatile
  1368                           
  1369                           ;main.c: 36:   TRISBbits.TRISB4 = 0;
  1370  0006' 1206               	bcf	6,4	;volatile
  1371                           
  1372                           ;main.c: 37:   TRISBbits.TRISB5 = 0;
  1373  0007' 1286               	bcf	6,5	;volatile
  1374                           
  1375                           ;main.c: 39:   TRISA4 = 0;
  1376  0008' 1205               	bcf	5,4	;volatile
  1377                           
  1378                           ;main.c: 41:  TRISE0 = 1;
  1379  0009' 1409               	bsf	9,0	;volatile
  1380                           
  1381                           ;main.c: 42:  TRISE1 = 1;
  1382  000A' 1489               	bsf	9,1	;volatile
  1383                           
  1384                           ;main.c: 43:  TRISC1 = 1;
  1385  000B' 1487               	bsf	7,1	;volatile
  1386                           
  1387                           ;main.c: 44:  TRISC2 = 1;
  1388  000C' 1507               	bsf	7,2	;volatile
  1389                           
  1390                           ;main.c: 45:  TRISE2 = 1;
  1391  000D' 1509               	bsf	9,2	;volatile
  1392                           
  1393                           ;main.c: 46:  TRISC0 = 1;
  1394  000E' 1407               	bsf	7,0	;volatile
  1395                           
  1396                           ;main.c: 47:  TRISC3 = 1;
  1397  000F' 1587               	bsf	7,3	;volatile
  1398                           
  1399                           ;main.c: 49:  TRISA1 = 1;
  1400  0010' 1485               	bsf	5,1	;volatile
  1401                           
  1402                           ;main.c: 50:     Lcd_Init();
  1403  0011' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Init
  1404                           
  1405                           ;main.c: 52:  TRISC6 = 0;
  1406  0016' 1683               	bsf	3,5	;RP0=1, select bank1
  1407  0017' 1303               	bcf	3,6	;RP1=0, select bank1
  1408  0018' 1307               	bcf	7,6	;volatile
  1409                           
  1410                           ;main.c: 53:  TRISC7 = 1;
  1411  0019' 1787               	bsf	7,7	;volatile
  1412                           
  1413                           ;main.c: 59:   _delay((unsigned long)((100)*(4000000/4000.0)));
  1414  001A' 3082               	movlw	130
  1415  001B' 1683               	bsf	3,5	;RP0=1, select bank1
  1416  001C' 1303               	bcf	3,6	;RP1=0, select bank1
  1417  001D' 0081'              	movwf	(??_main^(0+128)+1)
  1418  001E' 30DD               	movlw	221
  1419  001F' 0080'              	movwf	??_main^(0+128)
  1420  0020'                    u6937:
  1421  0020' 0B80'              	decfsz	??_main^(0+128),f
  1422  0021' 2800'              	goto	u6937
  1423  0022' 0B81'              	decfsz	(??_main^(0+128)+1),f
  1424  0023' 2800'              	goto	u6937
  1425                           
  1426                           ;main.c: 60:   RA4 = 0;
  1427  0024' 1283               	bcf	3,5	;RP0=0, select bank0
  1428  0025' 1303               	bcf	3,6	;RP1=0, select bank0
  1429  0026' 1205               	bcf	5,4	;volatile
  1430                           
  1431                           ;main.c: 64:     Lcd_Clear();
  1432  0027' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Clear
  1433                           
  1434                           ;main.c: 65:     Lcd_Set_Cursor(1,1);
  1435  002C' 0184'              	clrf	Lcd_Set_Cursor@b
  1436  002D' 0A84'              	incf	Lcd_Set_Cursor@b,f
  1437  002E' 3001               	movlw	1
  1438  002F' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Set_Cursor
  1439                           
  1440                           ;main.c: 66:     Lcd_Write_String("HiK-UZMANLAR");
  1441  0034' 3000'              	movlw	low (STR_1| (0+32768))
  1442  0035' 0085'              	movwf	Lcd_Write_String@a
  1443  0036' 3000'              	movlw	high (STR_1| (0+32768))
  1444  0037' 0086'              	movwf	Lcd_Write_String@a+1
  1445  0038' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Write_String
  1446                           
  1447                           ;main.c: 67:     Lcd_Set_Cursor(2,1);
  1448  003D' 0184'              	clrf	Lcd_Set_Cursor@b
  1449  003E' 0A84'              	incf	Lcd_Set_Cursor@b,f
  1450  003F' 3002               	movlw	2
  1451  0040' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Set_Cursor
  1452                           
  1453                           ;main.c: 68:     Lcd_Write_String("Project");
  1454  0045' 3000'              	movlw	low (STR_2| (0+32768))
  1455  0046' 0085'              	movwf	Lcd_Write_String@a
  1456  0047' 3000'              	movlw	high (STR_2| (0+32768))
  1457  0048' 0086'              	movwf	Lcd_Write_String@a+1
  1458  0049' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Write_String
  1459                           
  1460                           ;main.c: 69:     Lcd_Set_Cursor(2,17);
  1461  004E' 3011               	movlw	17
  1462  004F' 0084'              	movwf	Lcd_Set_Cursor@b
  1463  0050' 3002               	movlw	2
  1464  0051' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Set_Cursor
  1465                           
  1466                           ;main.c: 70:     Lcd_Write_String("V2");
  1467  0056' 3000'              	movlw	low (STR_3| (0+32768))
  1468  0057' 0085'              	movwf	Lcd_Write_String@a
  1469  0058' 3000'              	movlw	high (STR_3| (0+32768))
  1470  0059' 0086'              	movwf	Lcd_Write_String@a+1
  1471  005A' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Write_String
  1472                           
  1473                           ;main.c: 71:     _delay((unsigned long)((1000)*(4000000/4000.0)));
  1474  005F' 3006               	movlw	6
  1475  0060' 1683               	bsf	3,5	;RP0=1, select bank1
  1476  0061' 1303               	bcf	3,6	;RP1=0, select bank1
  1477  0062' 0082'              	movwf	(??_main^(0+128)+2)
  1478  0063' 3013               	movlw	19
  1479  0064' 0081'              	movwf	(??_main^(0+128)+1)
  1480  0065' 30AD               	movlw	173
  1481  0066' 0080'              	movwf	??_main^(0+128)
  1482  0067'                    u6947:
  1483  0067' 0B80'              	decfsz	??_main^(0+128),f
  1484  0068' 2800'              	goto	u6947
  1485  0069' 0B81'              	decfsz	(??_main^(0+128)+1),f
  1486  006A' 2800'              	goto	u6947
  1487  006B' 0B82'              	decfsz	(??_main^(0+128)+2),f
  1488  006C' 2800'              	goto	u6947
  1489                           
  1490                           ;main.c: 72:     Lcd_Clear();
  1491  006D' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Clear
  1492                           
  1493                           ;main.c: 77:     ADCON1 = 0x80;
  1494  0072' 3080               	movlw	128
  1495  0073' 1683               	bsf	3,5	;RP0=1, select bank1
  1496  0074' 1303               	bcf	3,6	;RP1=0, select bank1
  1497  0075' 009F               	movwf	31	;volatile
  1498                           
  1499                           ;main.c: 84:     SPBRG = ((4000000/16)/9600) - 1;
  1500  0076' 3019               	movlw	25
  1501  0077' 0099               	movwf	25	;volatile
  1502                           
  1503                           ;main.c: 85:     UART_Initialize();
  1504  0078' 120A' 118A' 2000' 120A' 118A' 	fcall	_UART_Initialize
  1505                           
  1506                           ;main.c: 86: unsigned int displayValue = 0;
  1507  007D' 1683               	bsf	3,5	;RP0=1, select bank3
  1508  007E' 1703               	bsf	3,6	;RP1=1, select bank3
  1509  007F' 0180'              	clrf	main@displayValue^(0+384)
  1510  0080' 0180'              	clrf	(main@displayValue+1)^(0+384)
  1511  0081'                    l3999:
  1512                           
  1513                           ;main.c: 93:   {;main.c: 97:         ADCON0 = 0b10000001;
  1514  0081' 3081               	movlw	129
  1515  0082' 1283               	bcf	3,5	;RP0=0, select bank0
  1516  0083' 1303               	bcf	3,6	;RP1=0, select bank0
  1517  0084' 009F               	movwf	31	;volatile
  1518                           
  1519                           ;main.c: 98:         GO = 1;
  1520  0085' 151F               	bsf	31,2	;volatile
  1521  0086'                    l111:	
  1522                           ;main.c: 99:         while (GO) ;
  1523                           
  1524  0086' 191F               	btfsc	31,2	;volatile
  1525  0087' 2800'              	goto	l111
  1526                           
  1527                           ;main.c: 100:         unsigned int adcValue1 = ADRESH;
  1528  0088' 081E               	movf	30,w	;volatile
  1529  0089' 1683               	bsf	3,5	;RP0=1, select bank1
  1530  008A' 1303               	bcf	3,6	;RP1=0, select bank1
  1531  008B' 0080'              	movwf	??_main^(0+128)
  1532  008C' 0181'              	clrf	(??_main^(0+128)+1)
  1533  008D' 0800'              	movf	??_main^(0+128),w
  1534  008E' 1683               	bsf	3,5	;RP0=1, select bank3
  1535  008F' 1703               	bsf	3,6	;RP1=1, select bank3
  1536  0090' 0080'              	movwf	main@adcValue1^(0+384)
  1537  0091' 1683               	bsf	3,5	;RP0=1, select bank1
  1538  0092' 1303               	bcf	3,6	;RP1=0, select bank1
  1539  0093' 0800'              	movf	(??_main+1)^(0+128),w
  1540  0094' 1683               	bsf	3,5	;RP0=1, select bank3
  1541  0095' 1703               	bsf	3,6	;RP1=1, select bank3
  1542  0096' 0080'              	movwf	(main@adcValue1+1)^(0+384)
  1543                           
  1544                           ;main.c: 103:         ADCON0 = 0b10001101;
  1545  0097' 308D               	movlw	141
  1546  0098' 1283               	bcf	3,5	;RP0=0, select bank0
  1547  0099' 1303               	bcf	3,6	;RP1=0, select bank0
  1548  009A' 009F               	movwf	31	;volatile
  1549                           
  1550                           ;main.c: 104:         GO = 1;
  1551  009B' 151F               	bsf	31,2	;volatile
  1552  009C'                    l114:	
  1553                           ;main.c: 105:         while (GO) ;
  1554                           
  1555  009C' 191F               	btfsc	31,2	;volatile
  1556  009D' 2800'              	goto	l114
  1557                           
  1558                           ;main.c: 106:         unsigned int adcValue2 = ADRESH;
  1559  009E' 081E               	movf	30,w	;volatile
  1560  009F' 1683               	bsf	3,5	;RP0=1, select bank1
  1561  00A0' 1303               	bcf	3,6	;RP1=0, select bank1
  1562  00A1' 0080'              	movwf	??_main^(0+128)
  1563  00A2' 0181'              	clrf	(??_main^(0+128)+1)
  1564  00A3' 0800'              	movf	??_main^(0+128),w
  1565  00A4' 1683               	bsf	3,5	;RP0=1, select bank3
  1566  00A5' 1703               	bsf	3,6	;RP1=1, select bank3
  1567  00A6' 0080'              	movwf	main@adcValue2^(0+384)
  1568  00A7' 1683               	bsf	3,5	;RP0=1, select bank1
  1569  00A8' 1303               	bcf	3,6	;RP1=0, select bank1
  1570  00A9' 0800'              	movf	(??_main+1)^(0+128),w
  1571  00AA' 1683               	bsf	3,5	;RP0=1, select bank3
  1572  00AB' 1703               	bsf	3,6	;RP1=1, select bank3
  1573  00AC' 0080'              	movwf	(main@adcValue2+1)^(0+384)
  1574                           
  1575                           ;main.c: 107:         float floatVal = adcValue2 / 255.0;
  1576  00AD' 3043               	movlw	67
  1577  00AE' 1283               	bcf	3,5	;RP0=0, select bank0
  1578  00AF' 1303               	bcf	3,6	;RP1=0, select bank0
  1579  00B0' 0083'              	movwf	___fldiv@a+3
  1580  00B1' 307F               	movlw	127
  1581  00B2' 0082'              	movwf	___fldiv@a+2
  1582  00B3' 3000               	movlw	0
  1583  00B4' 0081'              	movwf	___fldiv@a+1
  1584  00B5' 3000               	movlw	0
  1585  00B6' 0080'              	movwf	___fldiv@a
  1586  00B7' 1683               	bsf	3,5	;RP0=1, select bank3
  1587  00B8' 1703               	bsf	3,6	;RP1=1, select bank3
  1588  00B9' 0800'              	movf	main@adcValue2^(0+384),w
  1589  00BA' 0080'              	movwf	___xxtofl@val
  1590  00BB' 0800'              	movf	(main@adcValue2+1)^(0+384),w
  1591  00BC' 0081'              	movwf	___xxtofl@val+1
  1592  00BD' 0182'              	clrf	___xxtofl@val+2
  1593  00BE' 0183'              	clrf	___xxtofl@val+3
  1594  00BF' 3000               	movlw	0
  1595  00C0' 120A' 118A' 2000' 120A' 118A' 	fcall	___xxtofl
  1596  00C5' 0803'              	movf	?___xxtofl+3,w
  1597  00C6' 1283               	bcf	3,5	;RP0=0, select bank0
  1598  00C7' 1303               	bcf	3,6	;RP1=0, select bank0
  1599  00C8' 0087'              	movwf	___fldiv@b+3
  1600  00C9' 0802'              	movf	?___xxtofl+2,w
  1601  00CA' 0086'              	movwf	___fldiv@b+2
  1602  00CB' 0801'              	movf	?___xxtofl+1,w
  1603  00CC' 0085'              	movwf	___fldiv@b+1
  1604  00CD' 0800'              	movf	?___xxtofl,w
  1605  00CE' 0084'              	movwf	___fldiv@b
  1606  00CF' 120A' 118A' 2000' 120A' 118A' 	fcall	___fldiv
  1607  00D4' 1283               	bcf	3,5	;RP0=0, select bank0
  1608  00D5' 1303               	bcf	3,6	;RP1=0, select bank0
  1609  00D6' 0803'              	movf	?___fldiv+3,w
  1610  00D7' 1683               	bsf	3,5	;RP0=1, select bank3
  1611  00D8' 1703               	bsf	3,6	;RP1=1, select bank3
  1612  00D9' 0080'              	movwf	(main@floatVal+3)^(0+384)
  1613  00DA' 1283               	bcf	3,5	;RP0=0, select bank0
  1614  00DB' 1303               	bcf	3,6	;RP1=0, select bank0
  1615  00DC' 0802'              	movf	?___fldiv+2,w
  1616  00DD' 1683               	bsf	3,5	;RP0=1, select bank3
  1617  00DE' 1703               	bsf	3,6	;RP1=1, select bank3
  1618  00DF' 0080'              	movwf	(main@floatVal+2)^(0+384)
  1619  00E0' 1283               	bcf	3,5	;RP0=0, select bank0
  1620  00E1' 1303               	bcf	3,6	;RP1=0, select bank0
  1621  00E2' 0801'              	movf	?___fldiv+1,w
  1622  00E3' 1683               	bsf	3,5	;RP0=1, select bank3
  1623  00E4' 1703               	bsf	3,6	;RP1=1, select bank3
  1624  00E5' 0080'              	movwf	(main@floatVal+1)^(0+384)
  1625  00E6' 1283               	bcf	3,5	;RP0=0, select bank0
  1626  00E7' 1303               	bcf	3,6	;RP1=0, select bank0
  1627  00E8' 0800'              	movf	?___fldiv,w
  1628  00E9' 1683               	bsf	3,5	;RP0=1, select bank3
  1629  00EA' 1703               	bsf	3,6	;RP1=1, select bank3
  1630  00EB' 0080'              	movwf	main@floatVal^(0+384)
  1631                           
  1632                           ;main.c: 110:         Lcd_Set_Cursor(2, 1);
  1633  00EC' 0184'              	clrf	Lcd_Set_Cursor@b
  1634  00ED' 0A84'              	incf	Lcd_Set_Cursor@b,f
  1635  00EE' 3002               	movlw	2
  1636  00EF' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Set_Cursor
  1637                           
  1638                           ;main.c: 111:         Lcd_Write_String("rate: ");
  1639  00F4' 3000'              	movlw	low (STR_4| (0+32768))
  1640  00F5' 0085'              	movwf	Lcd_Write_String@a
  1641  00F6' 3000'              	movlw	high (STR_4| (0+32768))
  1642  00F7' 0086'              	movwf	Lcd_Write_String@a+1
  1643  00F8' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Write_String
  1644                           
  1645                           ;main.c: 112:         char adcString1[4];;main.c: 113:         sprintf(adcString1, "%3u"
      +                          , adcValue1);
  1646  00FD' 3000'              	movlw	low (STR_5| (0+32768))
  1647  00FE' 1283               	bcf	3,5	;RP0=0, select bank0
  1648  00FF' 1303               	bcf	3,6	;RP1=0, select bank0
  1649  0100' 00CA'              	movwf	sprintf@f
  1650  0101' 3000'              	movlw	high (STR_5| (0+32768))
  1651  0102' 00CB'              	movwf	sprintf@f+1
  1652  0103' 1683               	bsf	3,5	;RP0=1, select bank3
  1653  0104' 1703               	bsf	3,6	;RP1=1, select bank3
  1654  0105' 0800'              	movf	(main@adcValue1+1)^(0+384),w
  1655  0106' 1283               	bcf	3,5	;RP0=0, select bank0
  1656  0107' 1303               	bcf	3,6	;RP1=0, select bank0
  1657  0108' 00CD'              	movwf	?_sprintf+3
  1658  0109' 1683               	bsf	3,5	;RP0=1, select bank3
  1659  010A' 1703               	bsf	3,6	;RP1=1, select bank3
  1660  010B' 0800'              	movf	main@adcValue1^(0+384),w
  1661  010C' 1283               	bcf	3,5	;RP0=0, select bank0
  1662  010D' 1303               	bcf	3,6	;RP1=0, select bank0
  1663  010E' 00CC'              	movwf	?_sprintf+2
  1664  010F' 3000'              	movlw	(low (main@adcString1| (0+256)))& (0+255)
  1665  0110' 120A' 118A' 2000' 120A' 118A' 	fcall	_sprintf
  1666                           
  1667                           ;main.c: 114:         Lcd_Set_Cursor(2, 7);
  1668  0115' 3007               	movlw	7
  1669  0116' 0084'              	movwf	Lcd_Set_Cursor@b
  1670  0117' 3002               	movlw	2
  1671  0118' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Set_Cursor
  1672                           
  1673                           ;main.c: 115:         Lcd_Write_String(adcString1);
  1674  011D' 3000'              	movlw	(low (main@adcString1| (0+256)))& (0+255)
  1675  011E' 0085'              	movwf	Lcd_Write_String@a
  1676  011F' 3001               	movlw	1
  1677  0120' 0086'              	movwf	Lcd_Write_String@a+1
  1678  0121' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Write_String
  1679                           
  1680                           ;main.c: 118:         Lcd_Set_Cursor(2, 13);
  1681  0126' 300D               	movlw	13
  1682  0127' 0084'              	movwf	Lcd_Set_Cursor@b
  1683  0128' 3002               	movlw	2
  1684  0129' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Set_Cursor
  1685                           
  1686                           ;main.c: 119:         Lcd_Write_String("float: ");
  1687  012E' 3000'              	movlw	low (STR_6| (0+32768))
  1688  012F' 0085'              	movwf	Lcd_Write_String@a
  1689  0130' 3000'              	movlw	high (STR_6| (0+32768))
  1690  0131' 0086'              	movwf	Lcd_Write_String@a+1
  1691  0132' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Write_String
  1692                           
  1693                           ;main.c: 120:         char adcString2[4];;main.c: 121:         sprintf(adcString2, "%3.1
      +                          f", floatVal);
  1694  0137' 3000'              	movlw	low (STR_7| (0+32768))
  1695  0138' 1283               	bcf	3,5	;RP0=0, select bank0
  1696  0139' 1303               	bcf	3,6	;RP1=0, select bank0
  1697  013A' 00CA'              	movwf	sprintf@f
  1698  013B' 3000'              	movlw	high (STR_7| (0+32768))
  1699  013C' 00CB'              	movwf	sprintf@f+1
  1700  013D' 1683               	bsf	3,5	;RP0=1, select bank3
  1701  013E' 1703               	bsf	3,6	;RP1=1, select bank3
  1702  013F' 0800'              	movf	(main@floatVal+3)^(0+384),w
  1703  0140' 1283               	bcf	3,5	;RP0=0, select bank0
  1704  0141' 1303               	bcf	3,6	;RP1=0, select bank0
  1705  0142' 00CF'              	movwf	?_sprintf+5
  1706  0143' 1683               	bsf	3,5	;RP0=1, select bank3
  1707  0144' 1703               	bsf	3,6	;RP1=1, select bank3
  1708  0145' 0800'              	movf	(main@floatVal+2)^(0+384),w
  1709  0146' 1283               	bcf	3,5	;RP0=0, select bank0
  1710  0147' 1303               	bcf	3,6	;RP1=0, select bank0
  1711  0148' 00CE'              	movwf	?_sprintf+4
  1712  0149' 1683               	bsf	3,5	;RP0=1, select bank3
  1713  014A' 1703               	bsf	3,6	;RP1=1, select bank3
  1714  014B' 0800'              	movf	(main@floatVal+1)^(0+384),w
  1715  014C' 1283               	bcf	3,5	;RP0=0, select bank0
  1716  014D' 1303               	bcf	3,6	;RP1=0, select bank0
  1717  014E' 00CD'              	movwf	?_sprintf+3
  1718  014F' 1683               	bsf	3,5	;RP0=1, select bank3
  1719  0150' 1703               	bsf	3,6	;RP1=1, select bank3
  1720  0151' 0800'              	movf	main@floatVal^(0+384),w
  1721  0152' 1283               	bcf	3,5	;RP0=0, select bank0
  1722  0153' 1303               	bcf	3,6	;RP1=0, select bank0
  1723  0154' 00CC'              	movwf	?_sprintf+2
  1724  0155' 3000'              	movlw	(low (main@adcString2| (0+256)))& (0+255)
  1725  0156' 120A' 118A' 2000' 120A' 118A' 	fcall	_sprintf
  1726                           
  1727                           ;main.c: 122:         Lcd_Set_Cursor(2, 20);
  1728  015B' 3014               	movlw	20
  1729  015C' 0084'              	movwf	Lcd_Set_Cursor@b
  1730  015D' 3002               	movlw	2
  1731  015E' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Set_Cursor
  1732                           
  1733                           ;main.c: 123:         Lcd_Write_String(adcString2);
  1734  0163' 3000'              	movlw	(low (main@adcString2| (0+256)))& (0+255)
  1735  0164' 0085'              	movwf	Lcd_Write_String@a
  1736  0165' 3001               	movlw	1
  1737  0166' 0086'              	movwf	Lcd_Write_String@a+1
  1738  0167' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Write_String
  1739                           
  1740                           ;main.c: 125:         _delay((unsigned long)((500)*(4000000/4000.0)));
  1741  016C' 3003               	movlw	3
  1742  016D' 1683               	bsf	3,5	;RP0=1, select bank1
  1743  016E' 1303               	bcf	3,6	;RP1=0, select bank1
  1744  016F' 0082'              	movwf	(??_main^(0+128)+2)
  1745  0170' 308A               	movlw	138
  1746  0171' 0081'              	movwf	(??_main^(0+128)+1)
  1747  0172' 3055               	movlw	85
  1748  0173' 0080'              	movwf	??_main^(0+128)
  1749  0174'                    u6957:
  1750  0174' 0B80'              	decfsz	??_main^(0+128),f
  1751  0175' 2800'              	goto	u6957
  1752  0176' 0B81'              	decfsz	(??_main^(0+128)+1),f
  1753  0177' 2800'              	goto	u6957
  1754  0178' 0B82'              	decfsz	(??_main^(0+128)+2),f
  1755  0179' 2800'              	goto	u6957
  1756                           
  1757                           ;main.c: 130:        if (RC1 == 1 && RE1==1)
  1758  017A' 1283               	bcf	3,5	;RP0=0, select bank0
  1759  017B' 1303               	bcf	3,6	;RP1=0, select bank0
  1760  017C' 1887               	btfsc	7,1	;volatile
  1761  017D' 1C89               	btfss	9,1	;volatile
  1762  017E' 2800'              	goto	l117
  1763                           
  1764                           ;main.c: 131:         {;main.c: 132:             Lcd_Set_Cursor(1,10 );
  1765  017F' 300A               	movlw	10
  1766  0180' 0084'              	movwf	Lcd_Set_Cursor@b
  1767  0181' 3001               	movlw	1
  1768  0182' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Set_Cursor
  1769                           
  1770                           ;main.c: 133:             Lcd_Write_String("FWD LIMIT");
  1771  0187' 3000'              	movlw	low (STR_8| (0+32768))
  1772  0188' 0085'              	movwf	Lcd_Write_String@a
  1773  0189' 3000'              	movlw	high (STR_8| (0+32768))
  1774  018A' 0086'              	movwf	Lcd_Write_String@a+1
  1775  018B' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Write_String
  1776                           
  1777                           ;main.c: 134:             UART_Write_Text("s0\r\n");
  1778  0190' 3000'              	movlw	low (STR_9| (0+32768))
  1779  0191' 0081'              	movwf	UART_Write_Text@text
  1780  0192' 3000'              	movlw	high (STR_9| (0+32768))
  1781  0193' 0082'              	movwf	UART_Write_Text@text+1
  1782  0194' 120A' 118A' 2000' 120A' 118A' 	fcall	_UART_Write_Text
  1783                           
  1784                           ;main.c: 135:         }
  1785  0199' 2800'              	goto	l4097
  1786  019A'                    l117:	
  1787                           ;main.c: 137:         else if ((RC0 == 1 && RE1==1) || RC0==1 && RE0==0)
  1788                           
  1789  019A' 1C07               	btfss	7,0	;volatile
  1790  019B' 2800'              	goto	l123
  1791  019C' 1889               	btfsc	9,1	;volatile
  1792  019D' 2800'              	goto	l4047
  1793  019E'                    l123:
  1794  019E' 1807               	btfsc	7,0	;volatile
  1795  019F' 1809               	btfsc	9,0	;volatile
  1796  01A0' 2800'              	goto	l119
  1797  01A1'                    l4047:
  1798                           
  1799                           ;main.c: 138:         {;main.c: 139:             Lcd_Set_Cursor(1, 12);
  1800  01A1' 300C               	movlw	12
  1801  01A2' 0084'              	movwf	Lcd_Set_Cursor@b
  1802  01A3' 3001               	movlw	1
  1803  01A4' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Set_Cursor
  1804                           
  1805                           ;main.c: 140:             Lcd_Write_String("FEAD 400");
  1806  01A9' 3000'              	movlw	low (STR_10| (0+32768))
  1807  01AA' 0085'              	movwf	Lcd_Write_String@a
  1808  01AB' 3000'              	movlw	high (STR_10| (0+32768))
  1809  01AC' 0086'              	movwf	Lcd_Write_String@a+1
  1810  01AD' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Write_String
  1811                           
  1812                           ;main.c: 141:             UART_Write_Text("s-255\r\n");
  1813  01B2' 3000'              	movlw	low (STR_11| (0+32768))
  1814  01B3' 0081'              	movwf	UART_Write_Text@text
  1815  01B4' 3000'              	movlw	high (STR_11| (0+32768))
  1816  01B5' 0082'              	movwf	UART_Write_Text@text+1
  1817  01B6' 120A' 118A' 2000' 120A' 118A' 	fcall	_UART_Write_Text
  1818                           
  1819                           ;main.c: 142:         }
  1820  01BB' 2800'              	goto	l4097
  1821  01BC'                    l119:	
  1822                           ;main.c: 144:         else if (RE1 == 1)
  1823                           
  1824  01BC' 1C89               	btfss	9,1	;volatile
  1825  01BD' 2800'              	goto	l125
  1826                           
  1827                           ;main.c: 145:         {;main.c: 146:             Lcd_Set_Cursor(2, 16);
  1828  01BE' 3010               	movlw	16
  1829  01BF' 0084'              	movwf	Lcd_Set_Cursor@b
  1830  01C0' 3002               	movlw	2
  1831  01C1' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Set_Cursor
  1832                           
  1833                           ;main.c: 147:              Lcd_Write_String("FWD ");
  1834  01C6' 3000'              	movlw	low (STR_12| (0+32768))
  1835  01C7' 0085'              	movwf	Lcd_Write_String@a
  1836  01C8' 3000'              	movlw	high (STR_12| (0+32768))
  1837  01C9' 0086'              	movwf	Lcd_Write_String@a+1
  1838  01CA' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Write_String
  1839                           
  1840                           ;main.c: 148:     int negativeDisplayValue = -displayValue;
  1841  01CF' 1683               	bsf	3,5	;RP0=1, select bank3
  1842  01D0' 1703               	bsf	3,6	;RP1=1, select bank3
  1843  01D1' 0900'              	comf	main@displayValue^(0+384),w
  1844  01D2' 1683               	bsf	3,5	;RP0=1, select bank1
  1845  01D3' 1303               	bcf	3,6	;RP1=0, select bank1
  1846  01D4' 0080'              	movwf	??_main^(0+128)
  1847  01D5' 1683               	bsf	3,5	;RP0=1, select bank3
  1848  01D6' 1703               	bsf	3,6	;RP1=1, select bank3
  1849  01D7' 0900'              	comf	(main@displayValue+1)^(0+384),w
  1850  01D8' 1683               	bsf	3,5	;RP0=1, select bank1
  1851  01D9' 1303               	bcf	3,6	;RP1=0, select bank1
  1852  01DA' 0081'              	movwf	(??_main^(0+128)+1)
  1853  01DB' 0A80'              	incf	??_main^(0+128),f
  1854  01DC' 1903               	skipnz
  1855  01DD' 0A81'              	incf	(??_main^(0+128)+1),f
  1856  01DE' 0800'              	movf	??_main^(0+128),w
  1857  01DF' 1683               	bsf	3,5	;RP0=1, select bank3
  1858  01E0' 1703               	bsf	3,6	;RP1=1, select bank3
  1859  01E1' 0080'              	movwf	main@negativeDisplayValue^(0+384)
  1860  01E2' 1683               	bsf	3,5	;RP0=1, select bank1
  1861  01E3' 1303               	bcf	3,6	;RP1=0, select bank1
  1862  01E4' 0800'              	movf	(??_main+1)^(0+128),w
  1863  01E5' 1683               	bsf	3,5	;RP0=1, select bank3
  1864  01E6' 1703               	bsf	3,6	;RP1=1, select bank3
  1865  01E7' 0080'              	movwf	(main@negativeDisplayValue+1)^(0+384)
  1866                           
  1867                           ;main.c: 149:     char combinedText[20];;main.c: 150:     sprintf(combinedText, "s%d\r\n
      +                          ", negativeDisplayValue);
  1868  01E8' 3000'              	movlw	low (STR_13| (0+32768))
  1869  01E9' 1283               	bcf	3,5	;RP0=0, select bank0
  1870  01EA' 1303               	bcf	3,6	;RP1=0, select bank0
  1871  01EB' 00CA'              	movwf	sprintf@f
  1872  01EC' 3000'              	movlw	high (STR_13| (0+32768))
  1873  01ED' 00CB'              	movwf	sprintf@f+1
  1874  01EE' 1683               	bsf	3,5	;RP0=1, select bank3
  1875  01EF' 1703               	bsf	3,6	;RP1=1, select bank3
  1876  01F0' 0800'              	movf	(main@negativeDisplayValue+1)^(0+384),w
  1877  01F1' 1283               	bcf	3,5	;RP0=0, select bank0
  1878  01F2' 1303               	bcf	3,6	;RP1=0, select bank0
  1879  01F3' 00CD'              	movwf	?_sprintf+3
  1880  01F4' 1683               	bsf	3,5	;RP0=1, select bank3
  1881  01F5' 1703               	bsf	3,6	;RP1=1, select bank3
  1882  01F6' 0800'              	movf	main@negativeDisplayValue^(0+384),w
  1883  01F7' 1283               	bcf	3,5	;RP0=0, select bank0
  1884  01F8' 1303               	bcf	3,6	;RP1=0, select bank0
  1885  01F9' 00CC'              	movwf	?_sprintf+2
  1886  01FA' 3000'              	movlw	(low (main@combinedText| (0+256)))& (0+255)
  1887  01FB' 120A' 118A' 2000' 120A' 118A' 	fcall	_sprintf
  1888                           
  1889                           ;main.c: 151:     UART_Write_Text(combinedText);
  1890  0200' 3000'              	movlw	(low (main@combinedText| (0+256)))& (0+255)
  1891  0201' 0081'              	movwf	UART_Write_Text@text
  1892  0202' 3001               	movlw	1
  1893  0203' 0082'              	movwf	UART_Write_Text@text+1
  1894  0204' 120A' 118A' 2000' 120A' 118A' 	fcall	_UART_Write_Text
  1895                           
  1896                           ;main.c: 152:         }
  1897  0209' 2800'              	goto	l4097
  1898  020A'                    l125:	
  1899                           ;main.c: 155:         else if (RC2 == 1 && RE0==1)
  1900                           
  1901  020A' 1907               	btfsc	7,2	;volatile
  1902  020B' 1C09               	btfss	9,0	;volatile
  1903  020C' 2800'              	goto	l127
  1904                           
  1905                           ;main.c: 156:         {;main.c: 157:             Lcd_Set_Cursor(1, 10);
  1906  020D' 300A               	movlw	10
  1907  020E' 0084'              	movwf	Lcd_Set_Cursor@b
  1908  020F' 3001               	movlw	1
  1909  0210' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Set_Cursor
  1910                           
  1911                           ;main.c: 158:             Lcd_Write_String("REW LIMIT");
  1912  0215' 3000'              	movlw	low (STR_14| (0+32768))
  1913  0216' 0085'              	movwf	Lcd_Write_String@a
  1914  0217' 3000'              	movlw	high (STR_14| (0+32768))
  1915  0218' 0086'              	movwf	Lcd_Write_String@a+1
  1916  0219' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Write_String
  1917                           
  1918                           ;main.c: 159:             UART_Write_Text("s0\r\n");
  1919  021E' 3000'              	movlw	low (STR_9| (0+32768))
  1920  021F' 0081'              	movwf	UART_Write_Text@text
  1921  0220' 3000'              	movlw	high (STR_9| (0+32768))
  1922  0221' 0082'              	movwf	UART_Write_Text@text+1
  1923  0222' 120A' 118A' 2000' 120A' 118A' 	fcall	_UART_Write_Text
  1924                           
  1925                           ;main.c: 160:         }
  1926  0227' 2800'              	goto	l4097
  1927  0228'                    l127:	
  1928                           ;main.c: 161:         else if ((RE2 == 1 && RE0==1) || (RE2==1 && RE1==0) )
  1929                           
  1930  0228' 1D09               	btfss	9,2	;volatile
  1931  0229' 2800'              	goto	l133
  1932  022A' 1809               	btfsc	9,0	;volatile
  1933  022B' 2800'              	goto	l4075
  1934  022C'                    l133:
  1935  022C' 1909               	btfsc	9,2	;volatile
  1936  022D' 1889               	btfsc	9,1	;volatile
  1937  022E' 2800'              	goto	l129
  1938  022F'                    l4075:
  1939                           
  1940                           ;main.c: 162:         {;main.c: 163:             Lcd_Set_Cursor(1, 12);
  1941  022F' 300C               	movlw	12
  1942  0230' 0084'              	movwf	Lcd_Set_Cursor@b
  1943  0231' 3001               	movlw	1
  1944  0232' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Set_Cursor
  1945                           
  1946                           ;main.c: 164:             Lcd_Write_String("FEAD 400");
  1947  0237' 3000'              	movlw	low (STR_10| (0+32768))
  1948  0238' 0085'              	movwf	Lcd_Write_String@a
  1949  0239' 3000'              	movlw	high (STR_10| (0+32768))
  1950  023A' 0086'              	movwf	Lcd_Write_String@a+1
  1951  023B' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Write_String
  1952                           
  1953                           ;main.c: 165:             UART_Write_Text("s255\r\n");
  1954  0240' 3000'              	movlw	low (STR_17| (0+32768))
  1955  0241' 0081'              	movwf	UART_Write_Text@text
  1956  0242' 3000'              	movlw	high (STR_17| (0+32768))
  1957  0243' 0082'              	movwf	UART_Write_Text@text+1
  1958  0244' 120A' 118A' 2000' 120A' 118A' 	fcall	_UART_Write_Text
  1959                           
  1960                           ;main.c: 166:         }
  1961  0249' 2800'              	goto	l4097
  1962  024A'                    l129:	
  1963                           ;main.c: 167:         else if (RE0 == 1)
  1964                           
  1965  024A' 1C09               	btfss	9,0	;volatile
  1966  024B' 2800'              	goto	l4089
  1967                           
  1968                           ;main.c: 168:         {;main.c: 169:             Lcd_Set_Cursor(2, 16);
  1969  024C' 3010               	movlw	16
  1970  024D' 0084'              	movwf	Lcd_Set_Cursor@b
  1971  024E' 3002               	movlw	2
  1972  024F' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Set_Cursor
  1973                           
  1974                           ;main.c: 170:             Lcd_Write_String("REW ");
  1975  0254' 3000'              	movlw	low (STR_18| (0+32768))
  1976  0255' 0085'              	movwf	Lcd_Write_String@a
  1977  0256' 3000'              	movlw	high (STR_18| (0+32768))
  1978  0257' 0086'              	movwf	Lcd_Write_String@a+1
  1979  0258' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Write_String
  1980                           
  1981                           ;main.c: 171:     char combinedText[20];;main.c: 172:     sprintf(combinedText, "s%d\r\n
      +                          ", displayValue);
  1982  025D' 3000'              	movlw	low (STR_13| (0+32768))
  1983  025E' 1283               	bcf	3,5	;RP0=0, select bank0
  1984  025F' 1303               	bcf	3,6	;RP1=0, select bank0
  1985  0260' 00CA'              	movwf	sprintf@f
  1986  0261' 3000'              	movlw	high (STR_13| (0+32768))
  1987  0262' 00CB'              	movwf	sprintf@f+1
  1988  0263' 1683               	bsf	3,5	;RP0=1, select bank3
  1989  0264' 1703               	bsf	3,6	;RP1=1, select bank3
  1990  0265' 0800'              	movf	(main@displayValue+1)^(0+384),w
  1991  0266' 1283               	bcf	3,5	;RP0=0, select bank0
  1992  0267' 1303               	bcf	3,6	;RP1=0, select bank0
  1993  0268' 00CD'              	movwf	?_sprintf+3
  1994  0269' 1683               	bsf	3,5	;RP0=1, select bank3
  1995  026A' 1703               	bsf	3,6	;RP1=1, select bank3
  1996  026B' 0800'              	movf	main@displayValue^(0+384),w
  1997  026C' 1283               	bcf	3,5	;RP0=0, select bank0
  1998  026D' 1303               	bcf	3,6	;RP1=0, select bank0
  1999  026E' 00CC'              	movwf	?_sprintf+2
  2000  026F' 3000'              	movlw	(low (main@combinedText_160| (0+256)))& (0+255)
  2001  0270' 120A' 118A' 2000' 120A' 118A' 	fcall	_sprintf
  2002                           
  2003                           ;main.c: 173:     UART_Write_Text(combinedText);
  2004  0275' 3000'              	movlw	(low (main@combinedText_160| (0+256)))& (0+255)
  2005  0276' 0081'              	movwf	UART_Write_Text@text
  2006  0277' 3001               	movlw	1
  2007  0278' 0082'              	movwf	UART_Write_Text@text+1
  2008  0279' 120A' 118A' 2000' 120A' 118A' 	fcall	_UART_Write_Text
  2009                           
  2010                           ;main.c: 174:         }
  2011  027E' 2800'              	goto	l4097
  2012  027F'                    l4089:
  2013                           
  2014                           ;main.c: 178:         {;main.c: 180:             Lcd_Set_Cursor(2, 16);
  2015  027F' 3010               	movlw	16
  2016  0280' 0084'              	movwf	Lcd_Set_Cursor@b
  2017  0281' 3002               	movlw	2
  2018  0282' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Set_Cursor
  2019                           
  2020                           ;main.c: 181:             Lcd_Write_String("STOP");
  2021  0287' 3000'              	movlw	low (STR_20| (0+32768))
  2022  0288' 0085'              	movwf	Lcd_Write_String@a
  2023  0289' 3000'              	movlw	high (STR_20| (0+32768))
  2024  028A' 0086'              	movwf	Lcd_Write_String@a+1
  2025  028B' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Write_String
  2026                           
  2027                           ;main.c: 182:             UART_Write_Text("s0\r\n");
  2028  0290' 3000'              	movlw	low (STR_9| (0+32768))
  2029  0291' 0081'              	movwf	UART_Write_Text@text
  2030  0292' 3000'              	movlw	high (STR_9| (0+32768))
  2031  0293' 0082'              	movwf	UART_Write_Text@text+1
  2032  0294' 120A' 118A' 2000' 120A' 118A' 	fcall	_UART_Write_Text
  2033                           
  2034                           ;main.c: 183:             Lcd_Set_Cursor(1, 10);
  2035  0299' 300A               	movlw	10
  2036  029A' 0084'              	movwf	Lcd_Set_Cursor@b
  2037  029B' 3001               	movlw	1
  2038  029C' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Set_Cursor
  2039                           
  2040                           ;main.c: 184:             Lcd_Write_String("              ");
  2041  02A1' 3000'              	movlw	low (STR_22| (0+32768))
  2042  02A2' 0085'              	movwf	Lcd_Write_String@a
  2043  02A3' 3000'              	movlw	high (STR_22| (0+32768))
  2044  02A4' 0086'              	movwf	Lcd_Write_String@a+1
  2045  02A5' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Write_String
  2046  02AA'                    l4097:
  2047                           
  2048                           ;main.c: 191:             if(RC2==0 && RC1==0 && RE2==0 && RC0==0 && RC3==0){
  2049  02AA' 1283               	bcf	3,5	;RP0=0, select bank0
  2050  02AB' 1303               	bcf	3,6	;RP1=0, select bank0
  2051  02AC' 1D07               	btfss	7,2	;volatile
  2052  02AD' 1887               	btfsc	7,1	;volatile
  2053  02AE' 2800'              	goto	l4111
  2054  02AF' 1D09               	btfss	9,2	;volatile
  2055  02B0' 1807               	btfsc	7,0	;volatile
  2056  02B1' 2800'              	goto	l4111
  2057  02B2' 1987               	btfsc	7,3	;volatile
  2058  02B3' 2800'              	goto	l4111
  2059                           
  2060                           ;main.c: 193:                 Lcd_Set_Cursor(1, 8);
  2061  02B4' 3008               	movlw	8
  2062  02B5' 0084'              	movwf	Lcd_Set_Cursor@b
  2063  02B6' 3001               	movlw	1
  2064  02B7' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Set_Cursor
  2065                           
  2066                           ;main.c: 194:             Lcd_Write_String("              ");
  2067  02BC' 3000'              	movlw	low (STR_22| (0+32768))
  2068  02BD' 0085'              	movwf	Lcd_Write_String@a
  2069  02BE' 3000'              	movlw	high (STR_22| (0+32768))
  2070  02BF' 0086'              	movwf	Lcd_Write_String@a+1
  2071  02C0' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Write_String
  2072  02C5'                    l4111:
  2073                           
  2074                           ;main.c: 201:         if(RC1==1 || RC2==1){
  2075  02C5' 1283               	bcf	3,5	;RP0=0, select bank0
  2076  02C6' 1303               	bcf	3,6	;RP1=0, select bank0
  2077  02C7' 1887               	btfsc	7,1	;volatile
  2078  02C8' 2800'              	goto	l140
  2079  02C9' 1D07               	btfss	7,2	;volatile
  2080  02CA' 2800'              	goto	l138
  2081  02CB'                    l140:
  2082                           
  2083                           ;main.c: 203:             RA4=1;
  2084  02CB' 1605               	bsf	5,4	;volatile
  2085                           
  2086                           ;main.c: 204:         }
  2087  02CC' 2800'              	goto	l141
  2088  02CD'                    l138:	
  2089                           ;main.c: 205:         else {
  2090                           
  2091                           
  2092                           ;main.c: 206:             RA4=0;
  2093  02CD' 1205               	bcf	5,4	;volatile
  2094  02CE'                    l141:	
  2095                           ;main.c: 207:         }
  2096                           
  2097                           
  2098                           ;main.c: 212: if (RC3==1){
  2099  02CE' 1D87               	btfss	7,3	;volatile
  2100  02CF' 2800'              	goto	l3999
  2101                           
  2102                           ;main.c: 213:     RA4=1;
  2103  02D0' 1605               	bsf	5,4	;volatile
  2104                           
  2105                           ;main.c: 214:     Lcd_Set_Cursor(1,7);
  2106  02D1' 3007               	movlw	7
  2107  02D2' 0084'              	movwf	Lcd_Set_Cursor@b
  2108  02D3' 3001               	movlw	1
  2109  02D4' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Set_Cursor
  2110                           
  2111                           ;main.c: 215:             Lcd_Write_String("DC SERVO ERROR");
  2112  02D9' 3000'              	movlw	low (STR_24| (0+32768))
  2113  02DA' 0085'              	movwf	Lcd_Write_String@a
  2114  02DB' 3000'              	movlw	high (STR_24| (0+32768))
  2115  02DC' 0086'              	movwf	Lcd_Write_String@a+1
  2116  02DD' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Write_String
  2117  02E2' 2800'              	goto	l3999
  2118  02E3'                    __end_of_main:
  2119                           
  2120                           	psect	text1
  2121  0000'                    __ptext1:	
  2122 ;; *************** function _sprintf *****************
  2123 ;; Defined at:
  2124 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c"
  2125 ;; Parameters:    Size  Location     Type
  2126 ;;  sp              1    wreg     PTR unsigned char 
  2127 ;;		 -> main@combinedText_160(20), main@combinedText(20), main@adcString2(4), main@adcString1(4), 
  2128 ;;  f               2   74[BANK0 ] PTR const unsigned char 
  2129 ;;		 -> STR_19(6), STR_13(6), STR_7(6), STR_5(4), 
  2130 ;; Auto vars:     Size  Location     Type
  2131 ;;  sp              1   28[BANK1 ] PTR unsigned char 
  2132 ;;		 -> main@combinedText_160(20), main@combinedText(20), main@adcString2(4), main@adcString1(4), 
  2133 ;;  fval            4   24[BANK1 ] PTR unsigned char 
  2134 ;;  val             4   18[BANK1 ] unsigned long 
  2135 ;;  tmpval          4   14[BANK1 ] struct .
  2136 ;;  prec            2   29[BANK1 ] int 
  2137 ;;  eexp            2   22[BANK1 ] int 
  2138 ;;  width           2   12[BANK1 ] int 
  2139 ;;  flag            2   10[BANK1 ] unsigned short 
  2140 ;;  cp              2    0        PTR const unsigned char 
  2141 ;;  len             2    0        unsigned int 
  2142 ;;  c               1   31[BANK1 ] unsigned char 
  2143 ;;  ap              1    9[BANK1 ] PTR void [1]
  2144 ;;		 -> ?_sprintf(2), 
  2145 ;;  d               1    0        unsigned char 
  2146 ;; Return value:  Size  Location     Type
  2147 ;;                  2   74[BANK0 ] int 
  2148 ;; Registers used:
  2149 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2150 ;; Tracked objects:
  2151 ;;		On entry : 0/0
  2152 ;;		On exit  : 0/0
  2153 ;;		Unchanged: 0/0
  2154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2155 ;;      Params:         0       6       0       0       0
  2156 ;;      Locals:         0       0      27       0       0
  2157 ;;      Temps:          0       0       5       0       0
  2158 ;;      Totals:         0       6      32       0       0
  2159 ;;Total ram usage:       38 bytes
  2160 ;; Hardware stack levels used: 1
  2161 ;; Hardware stack levels required when called: 3
  2162 ;; This function calls:
  2163 ;;		___awdiv
  2164 ;;		___fladd
  2165 ;;		___fleq
  2166 ;;		___flge
  2167 ;;		___flmul
  2168 ;;		___flneg
  2169 ;;		___flsub
  2170 ;;		___fltol
  2171 ;;		___lldiv
  2172 ;;		___llmod
  2173 ;;		___wmul
  2174 ;;		___xxtofl
  2175 ;;		__div_to_l_
  2176 ;;		__tdiv_to_l_
  2177 ;;		_fround
  2178 ;;		_isdigit
  2179 ;;		_scale
  2180 ;; This function is called by:
  2181 ;;		_main
  2182 ;; This function uses a non-reentrant model
  2183 ;;
  2184                           
  2185  0000'                    _sprintf:	
  2186                           ;psect for function _sprintf
  2187                           
  2188                           
  2189                           ;incstack = 0
  2190                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2191                           ;sprintf@sp stored from wreg
  2192  0000' 1683               	bsf	3,5	;RP0=1, select bank1
  2193  0001' 1303               	bcf	3,6	;RP1=0, select bank1
  2194  0002' 0080'              	movwf	sprintf@sp^(0+128)
  2195                           
  2196                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  2197  0003' 3000'              	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  2198  0004' 0080'              	movwf	sprintf@ap^(0+128)
  2199  0005'                    l3795:	
  2200                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2201                           
  2202                           
  2203                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2204  0005' 1283               	bcf	3,5	;RP0=0, select bank0
  2205  0006' 1303               	bcf	3,6	;RP1=0, select bank0
  2206  0007' 084B'              	movf	sprintf@f+1,w
  2207  0008' 1683               	bsf	3,5	;RP0=1, select bank1
  2208  0009' 1303               	bcf	3,6	;RP1=0, select bank1
  2209  000A' 0081'              	movwf	(??_sprintf^(0+128)+1)
  2210  000B' 1283               	bcf	3,5	;RP0=0, select bank0
  2211  000C' 1303               	bcf	3,6	;RP1=0, select bank0
  2212  000D' 084A'              	movf	sprintf@f,w
  2213  000E' 1683               	bsf	3,5	;RP0=1, select bank1
  2214  000F' 1303               	bcf	3,6	;RP1=0, select bank1
  2215  0010' 0080'              	movwf	??_sprintf^(0+128)
  2216  0011' 1283               	bcf	3,5	;RP0=0, select bank0
  2217  0012' 1303               	bcf	3,6	;RP1=0, select bank0
  2218  0013' 0ACA'              	incf	sprintf@f,f
  2219  0014' 1903               	skipnz
  2220  0015' 0ACB'              	incf	sprintf@f+1,f
  2221  0016' 1683               	bsf	3,5	;RP0=1, select bank1
  2222  0017' 1303               	bcf	3,6	;RP1=0, select bank1
  2223  0018' 0800'              	movf	(??_sprintf+1)^(0+128),w
  2224  0019' 1283               	bcf	3,5	;RP0=0, select bank0
  2225  001A' 1303               	bcf	3,6	;RP1=0, select bank0
  2226  001B' 00FF               	movwf	127
  2227  001C' 1683               	bsf	3,5	;RP0=1, select bank1
  2228  001D' 1303               	bcf	3,6	;RP1=0, select bank1
  2229  001E' 0800'              	movf	??_sprintf^(0+128),w
  2230  001F' 0084               	movwf	4
  2231  0020' 1283               	bcf	3,5	;RP0=0, select bank0
  2232  0021' 1303               	bcf	3,6	;RP1=0, select bank0
  2233  0022' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  2234  0027' 1683               	bsf	3,5	;RP0=1, select bank1
  2235  0028' 1303               	bcf	3,6	;RP1=0, select bank1
  2236  0029' 0080'              	movwf	sprintf@c^(0+128)
  2237  002A' 0800'              	movf	sprintf@c^(0+128),w
  2238  002B' 1903               	btfsc	3,2
  2239  002C' 2800'              	goto	L10
  2240                           
  2241                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2242  002D' 3025               	movlw	37
  2243  002E' 0600'              	xorwf	sprintf@c^(0+128),w
  2244  002F' 1903               	btfsc	3,2
  2245  0030' 2800'              	goto	l3509
  2246                           
  2247                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2248  0031' 0800'              	movf	sprintf@sp^(0+128),w
  2249  0032' 0084               	movwf	4
  2250  0033' 0800'              	movf	sprintf@c^(0+128),w
  2251  0034' 1783               	bsf	3,7	;select IRP bank2
  2252  0035' 0080               	movwf	0
  2253  0036' 3001               	movlw	1
  2254  0037' 00FF               	movwf	127
  2255  0038' 087F               	movf	127,w
  2256  0039' 0780'              	addwf	sprintf@sp^(0+128),f
  2257                           
  2258                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 559:    continue;
  2259  003A' 2800'              	goto	l3795
  2260  003B'                    l3509:
  2261                           
  2262                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  2263  003B' 0180'              	clrf	sprintf@width^(0+128)
  2264  003C' 0180'              	clrf	(sprintf@width+1)^(0+128)
  2265                           
  2266                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2267  003D' 0180'              	clrf	sprintf@flag^(0+128)
  2268  003E' 0180'              	clrf	(sprintf@flag+1)^(0+128)
  2269                           
  2270                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  2271  003F' 1283               	bcf	3,5	;RP0=0, select bank0
  2272  0040' 1303               	bcf	3,6	;RP1=0, select bank0
  2273  0041' 084B'              	movf	sprintf@f+1,w
  2274  0042' 00FF               	movwf	127
  2275  0043' 084A'              	movf	sprintf@f,w
  2276  0044' 0084               	movwf	4
  2277  0045' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  2278  004A' 120A' 118A' 2000' 120A' 118A' 	fcall	_isdigit
  2279  004F' 1C03               	btfss	3,0
  2280  0050' 2800'              	goto	l3523
  2281                           
  2282                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  2283  0051' 1683               	bsf	3,5	;RP0=1, select bank1
  2284  0052' 1303               	bcf	3,6	;RP1=0, select bank1
  2285  0053' 0180'              	clrf	sprintf@width^(0+128)
  2286  0054' 0180'              	clrf	(sprintf@width+1)^(0+128)
  2287  0055'                    l3515:
  2288                           
  2289                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  2290  0055' 300A               	movlw	10
  2291  0056' 0080'              	movwf	___wmul@multiplier
  2292  0057' 3000               	movlw	0
  2293  0058' 0081'              	movwf	___wmul@multiplier+1
  2294  0059' 1683               	bsf	3,5	;RP0=1, select bank1
  2295  005A' 1303               	bcf	3,6	;RP1=0, select bank1
  2296  005B' 0800'              	movf	(sprintf@width+1)^(0+128),w
  2297  005C' 0083'              	movwf	___wmul@multiplicand+1
  2298  005D' 0800'              	movf	sprintf@width^(0+128),w
  2299  005E' 0082'              	movwf	___wmul@multiplicand
  2300  005F' 120A' 118A' 2000' 120A' 118A' 	fcall	___wmul
  2301  0064' 0801'              	movf	?___wmul+1,w
  2302  0065' 1683               	bsf	3,5	;RP0=1, select bank1
  2303  0066' 1303               	bcf	3,6	;RP1=0, select bank1
  2304  0067' 0080'              	movwf	(sprintf@width+1)^(0+128)
  2305  0068' 0800'              	movf	?___wmul,w
  2306  0069' 0080'              	movwf	sprintf@width^(0+128)
  2307                           
  2308                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  2309  006A' 1283               	bcf	3,5	;RP0=0, select bank0
  2310  006B' 1303               	bcf	3,6	;RP1=0, select bank0
  2311  006C' 084B'              	movf	sprintf@f+1,w
  2312  006D' 00FF               	movwf	127
  2313  006E' 084A'              	movf	sprintf@f,w
  2314  006F' 0084               	movwf	4
  2315  0070' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  2316  0075' 3ED0               	addlw	208
  2317  0076' 1683               	bsf	3,5	;RP0=1, select bank1
  2318  0077' 1303               	bcf	3,6	;RP1=0, select bank1
  2319  0078' 0080'              	movwf	??_sprintf^(0+128)
  2320  0079' 30FF               	movlw	255
  2321  007A' 1803               	skipnc
  2322  007B' 3000               	movlw	0
  2323  007C' 0081'              	movwf	(??_sprintf^(0+128)+1)
  2324  007D' 0800'              	movf	??_sprintf^(0+128),w
  2325  007E' 0780'              	addwf	sprintf@width^(0+128),f
  2326  007F' 1803               	skipnc
  2327  0080' 0A80'              	incf	(sprintf@width+1)^(0+128),f
  2328  0081' 0800'              	movf	(??_sprintf+1)^(0+128),w
  2329  0082' 0780'              	addwf	(sprintf@width+1)^(0+128),f
  2330  0083' 3001               	movlw	1
  2331  0084' 1283               	bcf	3,5	;RP0=0, select bank0
  2332  0085' 1303               	bcf	3,6	;RP1=0, select bank0
  2333  0086' 07CA'              	addwf	sprintf@f,f
  2334  0087' 1803               	skipnc
  2335  0088' 0ACB'              	incf	sprintf@f+1,f
  2336  0089' 3000               	movlw	0
  2337  008A' 07CB'              	addwf	sprintf@f+1,f
  2338                           
  2339                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  2340  008B' 084B'              	movf	sprintf@f+1,w
  2341  008C' 00FF               	movwf	127
  2342  008D' 084A'              	movf	sprintf@f,w
  2343  008E' 0084               	movwf	4
  2344  008F' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  2345  0094' 120A' 118A' 2000' 120A' 118A' 	fcall	_isdigit
  2346  0099' 1803               	btfsc	3,0
  2347  009A' 2800'              	goto	l3515
  2348  009B'                    l3523:
  2349                           
  2350                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  2351  009B' 1283               	bcf	3,5	;RP0=0, select bank0
  2352  009C' 1303               	bcf	3,6	;RP1=0, select bank0
  2353  009D' 084B'              	movf	sprintf@f+1,w
  2354  009E' 00FF               	movwf	127
  2355  009F' 084A'              	movf	sprintf@f,w
  2356  00A0' 0084               	movwf	4
  2357  00A1' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  2358  00A6' 3A2E               	xorlw	46
  2359  00A7' 1D03               	skipz
  2360  00A8' 2800'              	goto	l3539
  2361                           
  2362                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  2363  00A9' 1683               	bsf	3,5	;RP0=1, select bank1
  2364  00AA' 1303               	bcf	3,6	;RP1=0, select bank1
  2365  00AB' 1701'              	bsf	(sprintf@flag^(0+128)+1),6
  2366                           
  2367                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 630:    f++;
  2368  00AC' 3001               	movlw	1
  2369  00AD' 1283               	bcf	3,5	;RP0=0, select bank0
  2370  00AE' 1303               	bcf	3,6	;RP1=0, select bank0
  2371  00AF' 07CA'              	addwf	sprintf@f,f
  2372  00B0' 1803               	skipnc
  2373  00B1' 0ACB'              	incf	sprintf@f+1,f
  2374  00B2' 3000               	movlw	0
  2375  00B3' 07CB'              	addwf	sprintf@f+1,f
  2376                           
  2377                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  2378  00B4' 1683               	bsf	3,5	;RP0=1, select bank1
  2379  00B5' 1303               	bcf	3,6	;RP1=0, select bank1
  2380  00B6' 0180'              	clrf	sprintf@prec^(0+128)
  2381  00B7' 0180'              	clrf	(sprintf@prec+1)^(0+128)
  2382  00B8'                    l3537:	
  2383                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2384                           
  2385                           
  2386                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2387  00B8' 1283               	bcf	3,5	;RP0=0, select bank0
  2388  00B9' 084B'              	movf	sprintf@f+1,w
  2389  00BA' 00FF               	movwf	127
  2390  00BB' 084A'              	movf	sprintf@f,w
  2391  00BC' 0084               	movwf	4
  2392  00BD' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  2393  00C2' 120A' 118A' 2000' 120A' 118A' 	fcall	_isdigit
  2394  00C7' 1C03               	btfss	3,0
  2395  00C8' 2800'              	goto	l3545
  2396                           
  2397                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  2398  00C9' 300A               	movlw	10
  2399  00CA' 0080'              	movwf	___wmul@multiplier
  2400  00CB' 3000               	movlw	0
  2401  00CC' 0081'              	movwf	___wmul@multiplier+1
  2402  00CD' 1683               	bsf	3,5	;RP0=1, select bank1
  2403  00CE' 1303               	bcf	3,6	;RP1=0, select bank1
  2404  00CF' 0800'              	movf	(sprintf@prec+1)^(0+128),w
  2405  00D0' 0083'              	movwf	___wmul@multiplicand+1
  2406  00D1' 0800'              	movf	sprintf@prec^(0+128),w
  2407  00D2' 0082'              	movwf	___wmul@multiplicand
  2408  00D3' 120A' 118A' 2000' 120A' 118A' 	fcall	___wmul
  2409  00D8' 0801'              	movf	?___wmul+1,w
  2410  00D9' 1683               	bsf	3,5	;RP0=1, select bank1
  2411  00DA' 1303               	bcf	3,6	;RP1=0, select bank1
  2412  00DB' 0080'              	movwf	(sprintf@prec+1)^(0+128)
  2413  00DC' 0800'              	movf	?___wmul,w
  2414  00DD' 0080'              	movwf	sprintf@prec^(0+128)
  2415                           
  2416                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  2417  00DE' 1283               	bcf	3,5	;RP0=0, select bank0
  2418  00DF' 1303               	bcf	3,6	;RP1=0, select bank0
  2419  00E0' 084B'              	movf	sprintf@f+1,w
  2420  00E1' 00FF               	movwf	127
  2421  00E2' 084A'              	movf	sprintf@f,w
  2422  00E3' 0084               	movwf	4
  2423  00E4' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  2424  00E9' 3ED0               	addlw	208
  2425  00EA' 1683               	bsf	3,5	;RP0=1, select bank1
  2426  00EB' 1303               	bcf	3,6	;RP1=0, select bank1
  2427  00EC' 0080'              	movwf	??_sprintf^(0+128)
  2428  00ED' 30FF               	movlw	255
  2429  00EE' 1803               	skipnc
  2430  00EF' 3000               	movlw	0
  2431  00F0' 0081'              	movwf	(??_sprintf^(0+128)+1)
  2432  00F1' 0800'              	movf	??_sprintf^(0+128),w
  2433  00F2' 0780'              	addwf	sprintf@prec^(0+128),f
  2434  00F3' 1803               	skipnc
  2435  00F4' 0A80'              	incf	(sprintf@prec+1)^(0+128),f
  2436  00F5' 0800'              	movf	(??_sprintf+1)^(0+128),w
  2437  00F6' 0780'              	addwf	(sprintf@prec+1)^(0+128),f
  2438  00F7' 3001               	movlw	1
  2439  00F8' 1283               	bcf	3,5	;RP0=0, select bank0
  2440  00F9' 1303               	bcf	3,6	;RP1=0, select bank0
  2441  00FA' 07CA'              	addwf	sprintf@f,f
  2442  00FB' 1803               	skipnc
  2443  00FC' 0ACB'              	incf	sprintf@f+1,f
  2444  00FD' 3000               	movlw	0
  2445  00FE' 07CB'              	addwf	sprintf@f+1,f
  2446  00FF' 2800'              	goto	l3537
  2447  0100'                    l3539:
  2448                           
  2449                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  2450  0100' 1683               	bsf	3,5	;RP0=1, select bank1
  2451  0101' 1303               	bcf	3,6	;RP1=0, select bank1
  2452  0102' 0180'              	clrf	sprintf@prec^(0+128)
  2453  0103' 0180'              	clrf	(sprintf@prec+1)^(0+128)
  2454                           
  2455                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  2456  0104' 1601'              	bsf	(sprintf@flag^(0+128)+1),4
  2457  0105' 2800'              	goto	l3545
  2458  0106'                    l301:	
  2459                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  2460                           
  2461                           
  2462                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  2463  0106' 1501'              	bsf	(sprintf@flag^(0+128)+1),2
  2464                           
  2465                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 690:    break;
  2466  0107' 2800'              	goto	l3547
  2467  0108'                    l306:	
  2468                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 843:   case 'u':
  2469                           
  2470                           
  2471                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          x40;
  2472  0108' 1700'              	bsf	sprintf@flag^(0+128),6
  2473                           
  2474                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 845:    break;
  2475  0109' 2800'              	goto	l3547
  2476  010A'                    l3545:
  2477  010A' 1283               	bcf	3,5	;RP0=0, select bank0
  2478  010B' 1303               	bcf	3,6	;RP1=0, select bank0
  2479  010C' 084B'              	movf	sprintf@f+1,w
  2480  010D' 1683               	bsf	3,5	;RP0=1, select bank1
  2481  010E' 1303               	bcf	3,6	;RP1=0, select bank1
  2482  010F' 0081'              	movwf	(??_sprintf^(0+128)+1)
  2483  0110' 1283               	bcf	3,5	;RP0=0, select bank0
  2484  0111' 1303               	bcf	3,6	;RP1=0, select bank0
  2485  0112' 084A'              	movf	sprintf@f,w
  2486  0113' 1683               	bsf	3,5	;RP0=1, select bank1
  2487  0114' 1303               	bcf	3,6	;RP1=0, select bank1
  2488  0115' 0080'              	movwf	??_sprintf^(0+128)
  2489  0116' 1283               	bcf	3,5	;RP0=0, select bank0
  2490  0117' 1303               	bcf	3,6	;RP1=0, select bank0
  2491  0118' 0ACA'              	incf	sprintf@f,f
  2492  0119' 1903               	skipnz
  2493  011A' 0ACB'              	incf	sprintf@f+1,f
  2494  011B' 1683               	bsf	3,5	;RP0=1, select bank1
  2495  011C' 1303               	bcf	3,6	;RP1=0, select bank1
  2496  011D' 0800'              	movf	(??_sprintf+1)^(0+128),w
  2497  011E' 1283               	bcf	3,5	;RP0=0, select bank0
  2498  011F' 1303               	bcf	3,6	;RP1=0, select bank0
  2499  0120' 00FF               	movwf	127
  2500  0121' 1683               	bsf	3,5	;RP0=1, select bank1
  2501  0122' 1303               	bcf	3,6	;RP1=0, select bank1
  2502  0123' 0800'              	movf	??_sprintf^(0+128),w
  2503  0124' 0084               	movwf	4
  2504  0125' 1283               	bcf	3,5	;RP0=0, select bank0
  2505  0126' 1303               	bcf	3,6	;RP1=0, select bank0
  2506  0127' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  2507  012C' 1683               	bsf	3,5	;RP0=1, select bank1
  2508  012D' 1303               	bcf	3,6	;RP1=0, select bank1
  2509  012E' 0080'              	movwf	sprintf@c^(0+128)
  2510  012F' 0080'              	movwf	(??_sprintf+2)^(0+128)
  2511  0130' 0181'              	clrf	((??_sprintf+2)^(0+128)+1)
  2512                           
  2513                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2514                           ; Switch size 1, requested type "simple"
  2515                           ; Number of cases is 1, Range of values is 0 to 0
  2516                           ; switch strategies available:
  2517                           ; Name         Instructions Cycles
  2518                           ; simple_byte            4     3 (average)
  2519                           ; direct_byte           11     8 (fixed)
  2520                           ; jumptable            260     6 (fixed)
  2521                           ;	Chosen strategy is simple_byte
  2522  0131' 0800'              	movf	(??_sprintf+3)^(0+128),w
  2523  0132' 3A00               	xorlw	0	; case 0
  2524  0133' 1903               	skipnz
  2525  0134' 2800'              	goto	l4151
  2526  0135' 2800'              	goto	l3795
  2527  0136'                    l4151:
  2528                           
  2529                           ; Switch size 1, requested type "simple"
  2530                           ; Number of cases is 5, Range of values is 0 to 117
  2531                           ; switch strategies available:
  2532                           ; Name         Instructions Cycles
  2533                           ; simple_byte           16     9 (average)
  2534                           ; jumptable            260     6 (fixed)
  2535                           ;	Chosen strategy is simple_byte
  2536  0136' 0800'              	movf	(??_sprintf+2)^(0+128),w
  2537  0137' 3A00               	xorlw	0	; case 0
  2538  0138' 1903               	skipnz
  2539  0139' 2800'              	goto	L10
  2540  013A' 3A64               	xorlw	100	; case 100
  2541  013B' 1903               	skipnz
  2542  013C' 2800'              	goto	l3547
  2543  013D' 3A02               	xorlw	2	; case 102
  2544  013E' 1903               	skipnz
  2545  013F' 2800'              	goto	l301
  2546  0140' 3A0F               	xorlw	15	; case 105
  2547  0141' 1903               	skipnz
  2548  0142' 2800'              	goto	l3547
  2549  0143' 3A1C               	xorlw	28	; case 117
  2550  0144' 1903               	skipnz
  2551  0145' 2800'              	goto	l306
  2552  0146' 2800'              	goto	l3795
  2553  0147'                    l3547:
  2554                           
  2555                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  2556  0147' 3000               	movlw	0
  2557  0148' 0500'              	andwf	sprintf@flag^(0+128),w
  2558  0149' 0080'              	movwf	??_sprintf^(0+128)
  2559  014A' 3007               	movlw	7
  2560  014B' 0500'              	andwf	(sprintf@flag+1)^(0+128),w
  2561  014C' 0080'              	movwf	(??_sprintf+1)^(0+128)
  2562  014D' 0800'              	movf	??_sprintf^(0+128),w
  2563  014E' 0401'              	iorwf	(??_sprintf^(0+128)+1),w
  2564  014F' 1903               	btfsc	3,2
  2565  0150' 2800'              	goto	l307
  2566                           
  2567                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  2568  0151' 1E00'              	btfss	(sprintf@flag+1)^(0+128),4
  2569  0152' 2800'              	goto	l3553
  2570                           
  2571                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  2572  0153' 3006               	movlw	6
  2573  0154' 0080'              	movwf	sprintf@prec^(0+128)
  2574  0155' 3000               	movlw	0
  2575  0156' 0081'              	movwf	(sprintf@prec^(0+128)+1)
  2576  0157'                    l3553:
  2577                           
  2578                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  2579  0157' 0800'              	movf	sprintf@ap^(0+128),w
  2580  0158' 0084               	movwf	4
  2581  0159' 1383               	bcf	3,7	;select IRP bank0
  2582  015A' 0800               	movf	0,w
  2583  015B' 0080'              	movwf	sprintf@fval^(0+128)
  2584  015C' 0A84               	incf	4,f
  2585  015D' 0800               	movf	0,w
  2586  015E' 0080'              	movwf	(sprintf@fval+1)^(0+128)
  2587  015F' 0A84               	incf	4,f
  2588  0160' 0800               	movf	0,w
  2589  0161' 0080'              	movwf	(sprintf@fval+2)^(0+128)
  2590  0162' 0A84               	incf	4,f
  2591  0163' 0800               	movf	0,w
  2592  0164' 0080'              	movwf	(sprintf@fval+3)^(0+128)
  2593  0165' 3004               	movlw	4
  2594  0166' 00FF               	movwf	127
  2595  0167' 087F               	movf	127,w
  2596  0168' 0780'              	addwf	sprintf@ap^(0+128),f
  2597                           
  2598                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  2599  0169' 0800'              	movf	(sprintf@fval+3)^(0+128),w
  2600  016A' 0083'              	movwf	___flge@ff1+3
  2601  016B' 0800'              	movf	(sprintf@fval+2)^(0+128),w
  2602  016C' 0082'              	movwf	___flge@ff1+2
  2603  016D' 0800'              	movf	(sprintf@fval+1)^(0+128),w
  2604  016E' 0081'              	movwf	___flge@ff1+1
  2605  016F' 0800'              	movf	sprintf@fval^(0+128),w
  2606  0170' 0080'              	movwf	___flge@ff1
  2607  0171' 3000               	movlw	0
  2608  0172' 0087'              	movwf	___flge@ff2+3
  2609  0173' 3000               	movlw	0
  2610  0174' 0086'              	movwf	___flge@ff2+2
  2611  0175' 3000               	movlw	0
  2612  0176' 0085'              	movwf	___flge@ff2+1
  2613  0177' 3000               	movlw	0
  2614  0178' 0084'              	movwf	___flge@ff2
  2615  0179' 120A' 118A' 2000' 120A' 118A' 	fcall	___flge
  2616  017E' 1803               	btfsc	3,0
  2617  017F' 2800'              	goto	l3563
  2618                           
  2619                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  2620  0180' 1683               	bsf	3,5	;RP0=1, select bank1
  2621  0181' 1303               	bcf	3,6	;RP1=0, select bank1
  2622  0182' 0800'              	movf	(sprintf@fval+3)^(0+128),w
  2623  0183' 0083'              	movwf	___flneg@f1+3
  2624  0184' 0800'              	movf	(sprintf@fval+2)^(0+128),w
  2625  0185' 0082'              	movwf	___flneg@f1+2
  2626  0186' 0800'              	movf	(sprintf@fval+1)^(0+128),w
  2627  0187' 0081'              	movwf	___flneg@f1+1
  2628  0188' 0800'              	movf	sprintf@fval^(0+128),w
  2629  0189' 0080'              	movwf	___flneg@f1
  2630  018A' 120A' 118A' 2000' 120A' 118A' 	fcall	___flneg
  2631  018F' 0803'              	movf	?___flneg+3,w
  2632  0190' 1683               	bsf	3,5	;RP0=1, select bank1
  2633  0191' 1303               	bcf	3,6	;RP1=0, select bank1
  2634  0192' 0080'              	movwf	(sprintf@fval+3)^(0+128)
  2635  0193' 0802'              	movf	?___flneg+2,w
  2636  0194' 0080'              	movwf	(sprintf@fval+2)^(0+128)
  2637  0195' 0801'              	movf	?___flneg+1,w
  2638  0196' 0080'              	movwf	(sprintf@fval+1)^(0+128)
  2639  0197' 0800'              	movf	?___flneg,w
  2640  0198' 0080'              	movwf	sprintf@fval^(0+128)
  2641                           
  2642                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  2643  0199' 3003               	movlw	3
  2644  019A' 0480'              	iorwf	sprintf@flag^(0+128),f
  2645  019B' 3000               	movlw	0
  2646  019C' 0480'              	iorwf	(sprintf@flag+1)^(0+128),f
  2647  019D'                    l3563:
  2648                           
  2649                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2650  019D' 1683               	bsf	3,5	;RP0=1, select bank1
  2651  019E' 1303               	bcf	3,6	;RP1=0, select bank1
  2652  019F' 0180'              	clrf	sprintf@eexp^(0+128)
  2653  01A0' 0180'              	clrf	(sprintf@eexp+1)^(0+128)
  2654                           
  2655                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2656  01A1' 0800'              	movf	(sprintf@fval+3)^(0+128),w
  2657  01A2' 0083'              	movwf	___fleq@ff1+3
  2658  01A3' 0800'              	movf	(sprintf@fval+2)^(0+128),w
  2659  01A4' 0082'              	movwf	___fleq@ff1+2
  2660  01A5' 0800'              	movf	(sprintf@fval+1)^(0+128),w
  2661  01A6' 0081'              	movwf	___fleq@ff1+1
  2662  01A7' 0800'              	movf	sprintf@fval^(0+128),w
  2663  01A8' 0080'              	movwf	___fleq@ff1
  2664  01A9' 3000               	movlw	0
  2665  01AA' 0087'              	movwf	___fleq@ff2+3
  2666  01AB' 3000               	movlw	0
  2667  01AC' 0086'              	movwf	___fleq@ff2+2
  2668  01AD' 3000               	movlw	0
  2669  01AE' 0085'              	movwf	___fleq@ff2+1
  2670  01AF' 3000               	movlw	0
  2671  01B0' 0084'              	movwf	___fleq@ff2
  2672  01B1' 120A' 118A' 2000' 120A' 118A' 	fcall	___fleq
  2673  01B6' 1803               	btfsc	3,0
  2674  01B7' 2800'              	goto	l3591
  2675                           
  2676                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2677  01B8' 1003               	clrc
  2678  01B9' 1683               	bsf	3,5	;RP0=1, select bank1
  2679  01BA' 1303               	bcf	3,6	;RP1=0, select bank1
  2680  01BB' 0D00'              	rlf	(sprintf@fval+2)^(0+128),w
  2681  01BC' 0D00'              	rlf	(sprintf@fval+3)^(0+128),w
  2682  01BD' 3E82               	addlw	130
  2683  01BE' 0080'              	movwf	sprintf@eexp^(0+128)
  2684  01BF' 30FF               	movlw	255
  2685  01C0' 1803               	skipnc
  2686  01C1' 3000               	movlw	0
  2687  01C2' 0081'              	movwf	(sprintf@eexp^(0+128)+1)
  2688                           
  2689                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2690  01C3' 30FF               	movlw	255
  2691  01C4' 0780'              	addwf	sprintf@eexp^(0+128),f
  2692  01C5' 1803               	skipnc
  2693  01C6' 0A80'              	incf	(sprintf@eexp+1)^(0+128),f
  2694  01C7' 30FF               	movlw	255
  2695  01C8' 0780'              	addwf	(sprintf@eexp+1)^(0+128),f
  2696                           
  2697                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2698  01C9' 3003               	movlw	3
  2699  01CA' 0080'              	movwf	___wmul@multiplier
  2700  01CB' 3000               	movlw	0
  2701  01CC' 0081'              	movwf	___wmul@multiplier+1
  2702  01CD' 0800'              	movf	(sprintf@eexp+1)^(0+128),w
  2703  01CE' 0083'              	movwf	___wmul@multiplicand+1
  2704  01CF' 0800'              	movf	sprintf@eexp^(0+128),w
  2705  01D0' 0082'              	movwf	___wmul@multiplicand
  2706  01D1' 120A' 118A' 2000' 120A' 118A' 	fcall	___wmul
  2707  01D6' 0801'              	movf	?___wmul+1,w
  2708  01D7' 1683               	bsf	3,5	;RP0=1, select bank1
  2709  01D8' 1303               	bcf	3,6	;RP1=0, select bank1
  2710  01D9' 0080'              	movwf	(sprintf@eexp+1)^(0+128)
  2711  01DA' 0800'              	movf	?___wmul,w
  2712  01DB' 0080'              	movwf	sprintf@eexp^(0+128)
  2713                           
  2714                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2715  01DC' 300A               	movlw	10
  2716  01DD' 0086'              	movwf	___awdiv@divisor
  2717  01DE' 3000               	movlw	0
  2718  01DF' 0087'              	movwf	___awdiv@divisor+1
  2719  01E0' 0800'              	movf	(sprintf@eexp+1)^(0+128),w
  2720  01E1' 0089'              	movwf	___awdiv@dividend+1
  2721  01E2' 0800'              	movf	sprintf@eexp^(0+128),w
  2722  01E3' 0088'              	movwf	___awdiv@dividend
  2723  01E4' 120A' 118A' 2000' 120A' 118A' 	fcall	___awdiv
  2724  01E9' 0807'              	movf	?___awdiv+1,w
  2725  01EA' 1683               	bsf	3,5	;RP0=1, select bank1
  2726  01EB' 1303               	bcf	3,6	;RP1=0, select bank1
  2727  01EC' 0080'              	movwf	(sprintf@eexp+1)^(0+128)
  2728  01ED' 0806'              	movf	?___awdiv,w
  2729  01EE' 0080'              	movwf	sprintf@eexp^(0+128)
  2730                           
  2731                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2732  01EF' 1F80'              	btfss	(sprintf@eexp+1)^(0+128),7
  2733  01F0' 2800'              	goto	l3579
  2734                           
  2735                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2736  01F1' 30FF               	movlw	255
  2737  01F2' 0780'              	addwf	sprintf@eexp^(0+128),f
  2738  01F3' 1803               	skipnc
  2739  01F4' 0A80'              	incf	(sprintf@eexp+1)^(0+128),f
  2740  01F5' 30FF               	movlw	255
  2741  01F6' 0780'              	addwf	(sprintf@eexp+1)^(0+128),f
  2742  01F7'                    l3579:
  2743                           
  2744                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2745  01F7' 0300'              	decf	sprintf@eexp^(0+128),w
  2746  01F8' 3AFF               	xorlw	255
  2747  01F9' 120A' 118A' 2000' 120A' 118A' 	fcall	_scale
  2748  01FE' 1283               	bcf	3,5	;RP0=0, select bank0
  2749  01FF' 1303               	bcf	3,6	;RP1=0, select bank0
  2750  0200' 081D'              	movf	?_scale+3,w
  2751  0201' 1683               	bsf	3,5	;RP0=1, select bank1
  2752  0202' 1303               	bcf	3,6	;RP1=0, select bank1
  2753  0203' 0080'              	movwf	(sprintf@tmpval+3)^(0+128)
  2754  0204' 1283               	bcf	3,5	;RP0=0, select bank0
  2755  0205' 1303               	bcf	3,6	;RP1=0, select bank0
  2756  0206' 081C'              	movf	?_scale+2,w
  2757  0207' 1683               	bsf	3,5	;RP0=1, select bank1
  2758  0208' 1303               	bcf	3,6	;RP1=0, select bank1
  2759  0209' 0080'              	movwf	(sprintf@tmpval+2)^(0+128)
  2760  020A' 1283               	bcf	3,5	;RP0=0, select bank0
  2761  020B' 1303               	bcf	3,6	;RP1=0, select bank0
  2762  020C' 081B'              	movf	?_scale+1,w
  2763  020D' 1683               	bsf	3,5	;RP0=1, select bank1
  2764  020E' 1303               	bcf	3,6	;RP1=0, select bank1
  2765  020F' 0080'              	movwf	(sprintf@tmpval+1)^(0+128)
  2766  0210' 1283               	bcf	3,5	;RP0=0, select bank0
  2767  0211' 1303               	bcf	3,6	;RP1=0, select bank0
  2768  0212' 081A'              	movf	?_scale,w
  2769  0213' 1683               	bsf	3,5	;RP0=1, select bank1
  2770  0214' 1303               	bcf	3,6	;RP1=0, select bank1
  2771  0215' 0080'              	movwf	sprintf@tmpval^(0+128)
  2772                           
  2773                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2774  0216' 0800'              	movf	(sprintf@fval+3)^(0+128),w
  2775  0217' 1283               	bcf	3,5	;RP0=0, select bank0
  2776  0218' 1303               	bcf	3,6	;RP1=0, select bank0
  2777  0219' 0083'              	movwf	___flmul@b+3
  2778  021A' 1683               	bsf	3,5	;RP0=1, select bank1
  2779  021B' 1303               	bcf	3,6	;RP1=0, select bank1
  2780  021C' 0800'              	movf	(sprintf@fval+2)^(0+128),w
  2781  021D' 1283               	bcf	3,5	;RP0=0, select bank0
  2782  021E' 1303               	bcf	3,6	;RP1=0, select bank0
  2783  021F' 0082'              	movwf	___flmul@b+2
  2784  0220' 1683               	bsf	3,5	;RP0=1, select bank1
  2785  0221' 1303               	bcf	3,6	;RP1=0, select bank1
  2786  0222' 0800'              	movf	(sprintf@fval+1)^(0+128),w
  2787  0223' 1283               	bcf	3,5	;RP0=0, select bank0
  2788  0224' 1303               	bcf	3,6	;RP1=0, select bank0
  2789  0225' 0081'              	movwf	___flmul@b+1
  2790  0226' 1683               	bsf	3,5	;RP0=1, select bank1
  2791  0227' 1303               	bcf	3,6	;RP1=0, select bank1
  2792  0228' 0800'              	movf	sprintf@fval^(0+128),w
  2793  0229' 1283               	bcf	3,5	;RP0=0, select bank0
  2794  022A' 1303               	bcf	3,6	;RP1=0, select bank0
  2795  022B' 0080'              	movwf	___flmul@b
  2796  022C' 1683               	bsf	3,5	;RP0=1, select bank1
  2797  022D' 1303               	bcf	3,6	;RP1=0, select bank1
  2798  022E' 0800'              	movf	(sprintf@tmpval+3)^(0+128),w
  2799  022F' 1283               	bcf	3,5	;RP0=0, select bank0
  2800  0230' 1303               	bcf	3,6	;RP1=0, select bank0
  2801  0231' 0087'              	movwf	___flmul@a+3
  2802  0232' 1683               	bsf	3,5	;RP0=1, select bank1
  2803  0233' 1303               	bcf	3,6	;RP1=0, select bank1
  2804  0234' 0800'              	movf	(sprintf@tmpval+2)^(0+128),w
  2805  0235' 1283               	bcf	3,5	;RP0=0, select bank0
  2806  0236' 1303               	bcf	3,6	;RP1=0, select bank0
  2807  0237' 0086'              	movwf	___flmul@a+2
  2808  0238' 1683               	bsf	3,5	;RP0=1, select bank1
  2809  0239' 1303               	bcf	3,6	;RP1=0, select bank1
  2810  023A' 0800'              	movf	(sprintf@tmpval+1)^(0+128),w
  2811  023B' 1283               	bcf	3,5	;RP0=0, select bank0
  2812  023C' 1303               	bcf	3,6	;RP1=0, select bank0
  2813  023D' 0085'              	movwf	___flmul@a+1
  2814  023E' 1683               	bsf	3,5	;RP0=1, select bank1
  2815  023F' 1303               	bcf	3,6	;RP1=0, select bank1
  2816  0240' 0800'              	movf	sprintf@tmpval^(0+128),w
  2817  0241' 1283               	bcf	3,5	;RP0=0, select bank0
  2818  0242' 1303               	bcf	3,6	;RP1=0, select bank0
  2819  0243' 0084'              	movwf	___flmul@a
  2820  0244' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  2821  0249' 1283               	bcf	3,5	;RP0=0, select bank0
  2822  024A' 1303               	bcf	3,6	;RP1=0, select bank0
  2823  024B' 0803'              	movf	?___flmul+3,w
  2824  024C' 1683               	bsf	3,5	;RP0=1, select bank1
  2825  024D' 1303               	bcf	3,6	;RP1=0, select bank1
  2826  024E' 0080'              	movwf	(sprintf@tmpval+3)^(0+128)
  2827  024F' 1283               	bcf	3,5	;RP0=0, select bank0
  2828  0250' 1303               	bcf	3,6	;RP1=0, select bank0
  2829  0251' 0802'              	movf	?___flmul+2,w
  2830  0252' 1683               	bsf	3,5	;RP0=1, select bank1
  2831  0253' 1303               	bcf	3,6	;RP1=0, select bank1
  2832  0254' 0080'              	movwf	(sprintf@tmpval+2)^(0+128)
  2833  0255' 1283               	bcf	3,5	;RP0=0, select bank0
  2834  0256' 1303               	bcf	3,6	;RP1=0, select bank0
  2835  0257' 0801'              	movf	?___flmul+1,w
  2836  0258' 1683               	bsf	3,5	;RP0=1, select bank1
  2837  0259' 1303               	bcf	3,6	;RP1=0, select bank1
  2838  025A' 0080'              	movwf	(sprintf@tmpval+1)^(0+128)
  2839  025B' 1283               	bcf	3,5	;RP0=0, select bank0
  2840  025C' 1303               	bcf	3,6	;RP1=0, select bank0
  2841  025D' 0800'              	movf	?___flmul,w
  2842  025E' 1683               	bsf	3,5	;RP0=1, select bank1
  2843  025F' 1303               	bcf	3,6	;RP1=0, select bank1
  2844  0260' 0080'              	movwf	sprintf@tmpval^(0+128)
  2845                           
  2846                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2847  0261' 0800'              	movf	(sprintf@tmpval+3)^(0+128),w
  2848  0262' 0083'              	movwf	___flge@ff1+3
  2849  0263' 0800'              	movf	(sprintf@tmpval+2)^(0+128),w
  2850  0264' 0082'              	movwf	___flge@ff1+2
  2851  0265' 0800'              	movf	(sprintf@tmpval+1)^(0+128),w
  2852  0266' 0081'              	movwf	___flge@ff1+1
  2853  0267' 0800'              	movf	sprintf@tmpval^(0+128),w
  2854  0268' 0080'              	movwf	___flge@ff1
  2855  0269' 303F               	movlw	63
  2856  026A' 0087'              	movwf	___flge@ff2+3
  2857  026B' 3080               	movlw	128
  2858  026C' 0086'              	movwf	___flge@ff2+2
  2859  026D' 3000               	movlw	0
  2860  026E' 0085'              	movwf	___flge@ff2+1
  2861  026F' 3000               	movlw	0
  2862  0270' 0084'              	movwf	___flge@ff2
  2863  0271' 120A' 118A' 2000' 120A' 118A' 	fcall	___flge
  2864  0276' 1803               	btfsc	3,0
  2865  0277' 2800'              	goto	l3587
  2866                           
  2867                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2868  0278' 30FF               	movlw	255
  2869  0279' 1683               	bsf	3,5	;RP0=1, select bank1
  2870  027A' 1303               	bcf	3,6	;RP1=0, select bank1
  2871  027B' 0780'              	addwf	sprintf@eexp^(0+128),f
  2872  027C' 1803               	skipnc
  2873  027D' 0A80'              	incf	(sprintf@eexp+1)^(0+128),f
  2874  027E' 30FF               	movlw	255
  2875  027F' 2800'              	goto	L1
  2876  0280'                    l3587:
  2877  0280' 1683               	bsf	3,5	;RP0=1, select bank1
  2878  0281' 1303               	bcf	3,6	;RP1=0, select bank1
  2879  0282' 0800'              	movf	(sprintf@tmpval+3)^(0+128),w
  2880  0283' 0083'              	movwf	___flge@ff1+3
  2881  0284' 0800'              	movf	(sprintf@tmpval+2)^(0+128),w
  2882  0285' 0082'              	movwf	___flge@ff1+2
  2883  0286' 0800'              	movf	(sprintf@tmpval+1)^(0+128),w
  2884  0287' 0081'              	movwf	___flge@ff1+1
  2885  0288' 0800'              	movf	sprintf@tmpval^(0+128),w
  2886  0289' 0080'              	movwf	___flge@ff1
  2887  028A' 3041               	movlw	65
  2888  028B' 0087'              	movwf	___flge@ff2+3
  2889  028C' 3020               	movlw	32
  2890  028D' 0086'              	movwf	___flge@ff2+2
  2891  028E' 3000               	movlw	0
  2892  028F' 0085'              	movwf	___flge@ff2+1
  2893  0290' 3000               	movlw	0
  2894  0291' 0084'              	movwf	___flge@ff2
  2895  0292' 120A' 118A' 2000' 120A' 118A' 	fcall	___flge
  2896  0297' 1C03               	btfss	3,0
  2897  0298' 2800'              	goto	l3591
  2898                           
  2899                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2900  0299' 3001               	movlw	1
  2901  029A' 1683               	bsf	3,5	;RP0=1, select bank1
  2902  029B' 1303               	bcf	3,6	;RP1=0, select bank1
  2903  029C' 0780'              	addwf	sprintf@eexp^(0+128),f
  2904  029D' 1803               	skipnc
  2905  029E' 0A80'              	incf	(sprintf@eexp+1)^(0+128),f
  2906  029F' 3000               	movlw	0
  2907  02A0'                    L1:
  2908  02A0' 0780'              	addwf	(sprintf@eexp+1)^(0+128),f
  2909  02A1'                    l3591:
  2910                           
  2911                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2912  02A1' 1683               	bsf	3,5	;RP0=1, select bank1
  2913  02A2' 1303               	bcf	3,6	;RP1=0, select bank1
  2914  02A3' 0800'              	movf	(sprintf@prec+1)^(0+128),w
  2915  02A4' 3A80               	xorlw	128
  2916  02A5' 00FF               	movwf	127
  2917  02A6' 3080               	movlw	128
  2918  02A7' 027F               	subwf	127,w
  2919  02A8' 1D03               	skipz
  2920  02A9' 2800'              	goto	u5955
  2921  02AA' 300D               	movlw	13
  2922  02AB' 0200'              	subwf	sprintf@prec^(0+128),w
  2923  02AC'                    u5955:
  2924  02AC' 1803               	skipnc
  2925  02AD' 2800'              	goto	l3595
  2926                           
  2927                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2928  02AE' 1683               	bsf	3,5	;RP0=1, select bank1
  2929  02AF' 1303               	bcf	3,6	;RP1=0, select bank1
  2930  02B0' 0800'              	movf	sprintf@prec^(0+128),w
  2931  02B1' 120A' 118A' 2000' 120A' 118A' 	fcall	_fround
  2932  02B6' 1283               	bcf	3,5	;RP0=0, select bank0
  2933  02B7' 1303               	bcf	3,6	;RP1=0, select bank0
  2934  02B8' 081D'              	movf	?_fround+3,w
  2935  02B9' 00B1'              	movwf	___fladd@b+3
  2936  02BA' 081C'              	movf	?_fround+2,w
  2937  02BB' 00B0'              	movwf	___fladd@b+2
  2938  02BC' 081B'              	movf	?_fround+1,w
  2939  02BD' 00AF'              	movwf	___fladd@b+1
  2940  02BE' 081A'              	movf	?_fround,w
  2941  02BF' 00AE'              	movwf	___fladd@b
  2942  02C0' 1683               	bsf	3,5	;RP0=1, select bank1
  2943  02C1' 1303               	bcf	3,6	;RP1=0, select bank1
  2944  02C2' 0800'              	movf	(sprintf@fval+3)^(0+128),w
  2945  02C3' 1283               	bcf	3,5	;RP0=0, select bank0
  2946  02C4' 1303               	bcf	3,6	;RP1=0, select bank0
  2947  02C5' 00B5'              	movwf	___fladd@a+3
  2948  02C6' 1683               	bsf	3,5	;RP0=1, select bank1
  2949  02C7' 1303               	bcf	3,6	;RP1=0, select bank1
  2950  02C8' 0800'              	movf	(sprintf@fval+2)^(0+128),w
  2951  02C9' 1283               	bcf	3,5	;RP0=0, select bank0
  2952  02CA' 1303               	bcf	3,6	;RP1=0, select bank0
  2953  02CB' 00B4'              	movwf	___fladd@a+2
  2954  02CC' 1683               	bsf	3,5	;RP0=1, select bank1
  2955  02CD' 1303               	bcf	3,6	;RP1=0, select bank1
  2956  02CE' 0800'              	movf	(sprintf@fval+1)^(0+128),w
  2957  02CF' 1283               	bcf	3,5	;RP0=0, select bank0
  2958  02D0' 1303               	bcf	3,6	;RP1=0, select bank0
  2959  02D1' 00B3'              	movwf	___fladd@a+1
  2960  02D2' 1683               	bsf	3,5	;RP0=1, select bank1
  2961  02D3' 1303               	bcf	3,6	;RP1=0, select bank1
  2962  02D4' 0800'              	movf	sprintf@fval^(0+128),w
  2963  02D5' 1283               	bcf	3,5	;RP0=0, select bank0
  2964  02D6' 1303               	bcf	3,6	;RP1=0, select bank0
  2965  02D7' 00B2'              	movwf	___fladd@a
  2966  02D8' 120A' 118A' 2000' 120A' 118A' 	fcall	___fladd
  2967  02DD' 1283               	bcf	3,5	;RP0=0, select bank0
  2968  02DE' 1303               	bcf	3,6	;RP1=0, select bank0
  2969  02DF' 0831'              	movf	?___fladd+3,w
  2970  02E0' 1683               	bsf	3,5	;RP0=1, select bank1
  2971  02E1' 1303               	bcf	3,6	;RP1=0, select bank1
  2972  02E2' 0080'              	movwf	(sprintf@fval+3)^(0+128)
  2973  02E3' 1283               	bcf	3,5	;RP0=0, select bank0
  2974  02E4' 1303               	bcf	3,6	;RP1=0, select bank0
  2975  02E5' 0830'              	movf	?___fladd+2,w
  2976  02E6' 1683               	bsf	3,5	;RP0=1, select bank1
  2977  02E7' 1303               	bcf	3,6	;RP1=0, select bank1
  2978  02E8' 0080'              	movwf	(sprintf@fval+2)^(0+128)
  2979  02E9' 1283               	bcf	3,5	;RP0=0, select bank0
  2980  02EA' 1303               	bcf	3,6	;RP1=0, select bank0
  2981  02EB' 082F'              	movf	?___fladd+1,w
  2982  02EC' 1683               	bsf	3,5	;RP0=1, select bank1
  2983  02ED' 1303               	bcf	3,6	;RP1=0, select bank1
  2984  02EE' 0080'              	movwf	(sprintf@fval+1)^(0+128)
  2985  02EF' 1283               	bcf	3,5	;RP0=0, select bank0
  2986  02F0' 1303               	bcf	3,6	;RP1=0, select bank0
  2987  02F1' 082E'              	movf	?___fladd,w
  2988  02F2' 1683               	bsf	3,5	;RP0=1, select bank1
  2989  02F3' 1303               	bcf	3,6	;RP1=0, select bank1
  2990  02F4' 0080'              	movwf	sprintf@fval^(0+128)
  2991  02F5'                    l3595:
  2992                           
  2993                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2994  02F5' 1683               	bsf	3,5	;RP0=1, select bank1
  2995  02F6' 1303               	bcf	3,6	;RP1=0, select bank1
  2996  02F7' 0800'              	movf	(sprintf@eexp+1)^(0+128),w
  2997  02F8' 3A80               	xorlw	128
  2998  02F9' 00FF               	movwf	127
  2999  02FA' 3080               	movlw	128
  3000  02FB' 027F               	subwf	127,w
  3001  02FC' 1D03               	skipz
  3002  02FD' 2800'              	goto	u5965
  3003  02FE' 300A               	movlw	10
  3004  02FF' 0200'              	subwf	sprintf@eexp^(0+128),w
  3005  0300'                    u5965:
  3006  0300' 1803               	skipnc
  3007  0301' 2800'              	goto	l3603
  3008  0302' 1683               	bsf	3,5	;RP0=1, select bank1
  3009  0303' 1303               	bcf	3,6	;RP1=0, select bank1
  3010  0304' 0800'              	movf	(sprintf@fval+3)^(0+128),w
  3011  0305' 0083'              	movwf	___fleq@ff1+3
  3012  0306' 0800'              	movf	(sprintf@fval+2)^(0+128),w
  3013  0307' 0082'              	movwf	___fleq@ff1+2
  3014  0308' 0800'              	movf	(sprintf@fval+1)^(0+128),w
  3015  0309' 0081'              	movwf	___fleq@ff1+1
  3016  030A' 0800'              	movf	sprintf@fval^(0+128),w
  3017  030B' 0080'              	movwf	___fleq@ff1
  3018  030C' 3000               	movlw	0
  3019  030D' 0087'              	movwf	___fleq@ff2+3
  3020  030E' 3000               	movlw	0
  3021  030F' 0086'              	movwf	___fleq@ff2+2
  3022  0310' 3000               	movlw	0
  3023  0311' 0085'              	movwf	___fleq@ff2+1
  3024  0312' 3000               	movlw	0
  3025  0313' 0084'              	movwf	___fleq@ff2
  3026  0314' 120A' 118A' 2000' 120A' 118A' 	fcall	___fleq
  3027  0319' 1803               	btfsc	3,0
  3028  031A' 2800'              	goto	l3617
  3029  031B' 1683               	bsf	3,5	;RP0=1, select bank1
  3030  031C' 1303               	bcf	3,6	;RP1=0, select bank1
  3031  031D' 0800'              	movf	(sprintf@fval+3)^(0+128),w
  3032  031E' 1283               	bcf	3,5	;RP0=0, select bank0
  3033  031F' 1303               	bcf	3,6	;RP1=0, select bank0
  3034  0320' 00B0'              	movwf	___fltol@f1+3
  3035  0321' 1683               	bsf	3,5	;RP0=1, select bank1
  3036  0322' 1303               	bcf	3,6	;RP1=0, select bank1
  3037  0323' 0800'              	movf	(sprintf@fval+2)^(0+128),w
  3038  0324' 1283               	bcf	3,5	;RP0=0, select bank0
  3039  0325' 1303               	bcf	3,6	;RP1=0, select bank0
  3040  0326' 00AF'              	movwf	___fltol@f1+2
  3041  0327' 1683               	bsf	3,5	;RP0=1, select bank1
  3042  0328' 1303               	bcf	3,6	;RP1=0, select bank1
  3043  0329' 0800'              	movf	(sprintf@fval+1)^(0+128),w
  3044  032A' 1283               	bcf	3,5	;RP0=0, select bank0
  3045  032B' 1303               	bcf	3,6	;RP1=0, select bank0
  3046  032C' 00AE'              	movwf	___fltol@f1+1
  3047  032D' 1683               	bsf	3,5	;RP0=1, select bank1
  3048  032E' 1303               	bcf	3,6	;RP1=0, select bank1
  3049  032F' 0800'              	movf	sprintf@fval^(0+128),w
  3050  0330' 1283               	bcf	3,5	;RP0=0, select bank0
  3051  0331' 1303               	bcf	3,6	;RP1=0, select bank0
  3052  0332' 00AD'              	movwf	___fltol@f1
  3053  0333' 120A' 118A' 2000' 120A' 118A' 	fcall	___fltol
  3054  0338' 1283               	bcf	3,5	;RP0=0, select bank0
  3055  0339' 1303               	bcf	3,6	;RP1=0, select bank0
  3056  033A' 0830'              	movf	?___fltol+3,w
  3057  033B' 042F'              	iorwf	?___fltol+2,w
  3058  033C' 042E'              	iorwf	?___fltol+1,w
  3059  033D' 042D'              	iorwf	?___fltol,w
  3060  033E' 1D03               	skipz
  3061  033F' 2800'              	goto	l3617
  3062  0340' 1683               	bsf	3,5	;RP0=1, select bank1
  3063  0341' 1303               	bcf	3,6	;RP1=0, select bank1
  3064  0342' 0800'              	movf	(sprintf@eexp+1)^(0+128),w
  3065  0343' 3A80               	xorlw	128
  3066  0344' 00FF               	movwf	127
  3067  0345' 3080               	movlw	128
  3068  0346' 027F               	subwf	127,w
  3069  0347' 1D03               	skipz
  3070  0348' 2800'              	goto	u5995
  3071  0349' 3002               	movlw	2
  3072  034A' 0200'              	subwf	sprintf@eexp^(0+128),w
  3073  034B'                    u5995:
  3074  034B' 1C03               	skipc
  3075  034C' 2800'              	goto	l3617
  3076  034D'                    l3603:
  3077                           
  3078                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  3079  034D' 1683               	bsf	3,5	;RP0=1, select bank1
  3080  034E' 1303               	bcf	3,6	;RP1=0, select bank1
  3081  034F' 0800'              	movf	(sprintf@tmpval+3)^(0+128),w
  3082  0350' 0083'              	movwf	___flge@ff1+3
  3083  0351' 0800'              	movf	(sprintf@tmpval+2)^(0+128),w
  3084  0352' 0082'              	movwf	___flge@ff1+2
  3085  0353' 0800'              	movf	(sprintf@tmpval+1)^(0+128),w
  3086  0354' 0081'              	movwf	___flge@ff1+1
  3087  0355' 0800'              	movf	sprintf@tmpval^(0+128),w
  3088  0356' 0080'              	movwf	___flge@ff1
  3089  0357' 3040               	movlw	64
  3090  0358' 0087'              	movwf	___flge@ff2+3
  3091  0359' 3089               	movlw	137
  3092  035A' 0086'              	movwf	___flge@ff2+2
  3093  035B' 3070               	movlw	112
  3094  035C' 0085'              	movwf	___flge@ff2+1
  3095  035D' 305F               	movlw	95
  3096  035E' 0084'              	movwf	___flge@ff2
  3097  035F' 120A' 118A' 2000' 120A' 118A' 	fcall	___flge
  3098  0364' 1803               	btfsc	3,0
  3099  0365' 2800'              	goto	l3607
  3100                           
  3101                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  3102  0366' 30F7               	movlw	247
  3103  0367' 2800'              	goto	L2
  3104  0368'                    l3607:	
  3105                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1148:      }else{
  3106                           
  3107                           
  3108                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  3109  0368' 30F8               	movlw	248
  3110  0369'                    L2:
  3111  0369' 1683               	bsf	3,5	;RP0=1, select bank1
  3112  036A' 1303               	bcf	3,6	;RP1=0, select bank1
  3113  036B' 0780'              	addwf	sprintf@eexp^(0+128),f
  3114  036C' 1803               	skipnc
  3115  036D' 0A80'              	incf	(sprintf@eexp+1)^(0+128),f
  3116  036E' 30FF               	movlw	255
  3117  036F' 0780'              	addwf	(sprintf@eexp+1)^(0+128),f
  3118                           
  3119                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  3120  0370' 0800'              	movf	sprintf@eexp^(0+128),w
  3121  0371' 120A' 118A' 2000' 120A' 118A' 	fcall	_scale
  3122  0376' 1283               	bcf	3,5	;RP0=0, select bank0
  3123  0377' 1303               	bcf	3,6	;RP1=0, select bank0
  3124  0378' 081D'              	movf	?_scale+3,w
  3125  0379' 1683               	bsf	3,5	;RP0=1, select bank1
  3126  037A' 1303               	bcf	3,6	;RP1=0, select bank1
  3127  037B' 0080'              	movwf	(sprintf@tmpval+3)^(0+128)
  3128  037C' 1283               	bcf	3,5	;RP0=0, select bank0
  3129  037D' 1303               	bcf	3,6	;RP1=0, select bank0
  3130  037E' 081C'              	movf	?_scale+2,w
  3131  037F' 1683               	bsf	3,5	;RP0=1, select bank1
  3132  0380' 1303               	bcf	3,6	;RP1=0, select bank1
  3133  0381' 0080'              	movwf	(sprintf@tmpval+2)^(0+128)
  3134  0382' 1283               	bcf	3,5	;RP0=0, select bank0
  3135  0383' 1303               	bcf	3,6	;RP1=0, select bank0
  3136  0384' 081B'              	movf	?_scale+1,w
  3137  0385' 1683               	bsf	3,5	;RP0=1, select bank1
  3138  0386' 1303               	bcf	3,6	;RP1=0, select bank1
  3139  0387' 0080'              	movwf	(sprintf@tmpval+1)^(0+128)
  3140  0388' 1283               	bcf	3,5	;RP0=0, select bank0
  3141  0389' 1303               	bcf	3,6	;RP1=0, select bank0
  3142  038A' 081A'              	movf	?_scale,w
  3143  038B' 1683               	bsf	3,5	;RP0=1, select bank1
  3144  038C' 1303               	bcf	3,6	;RP1=0, select bank1
  3145  038D' 0080'              	movwf	sprintf@tmpval^(0+128)
  3146  038E' 0800'              	movf	(sprintf@fval+3)^(0+128),w
  3147  038F' 0083'              	movwf	__div_to_l_@f1+3
  3148  0390' 0800'              	movf	(sprintf@fval+2)^(0+128),w
  3149  0391' 0082'              	movwf	__div_to_l_@f1+2
  3150  0392' 0800'              	movf	(sprintf@fval+1)^(0+128),w
  3151  0393' 0081'              	movwf	__div_to_l_@f1+1
  3152  0394' 0800'              	movf	sprintf@fval^(0+128),w
  3153  0395' 0080'              	movwf	__div_to_l_@f1
  3154  0396' 0800'              	movf	(sprintf@tmpval+3)^(0+128),w
  3155  0397' 0087'              	movwf	__div_to_l_@f2+3
  3156  0398' 0800'              	movf	(sprintf@tmpval+2)^(0+128),w
  3157  0399' 0086'              	movwf	__div_to_l_@f2+2
  3158  039A' 0800'              	movf	(sprintf@tmpval+1)^(0+128),w
  3159  039B' 0085'              	movwf	__div_to_l_@f2+1
  3160  039C' 0800'              	movf	sprintf@tmpval^(0+128),w
  3161  039D' 0084'              	movwf	__div_to_l_@f2
  3162  039E' 120A' 118A' 2000' 120A' 118A' 	fcall	__div_to_l_
  3163  03A3' 0803'              	movf	?__div_to_l_+3,w
  3164  03A4' 1683               	bsf	3,5	;RP0=1, select bank1
  3165  03A5' 1303               	bcf	3,6	;RP1=0, select bank1
  3166  03A6' 0080'              	movwf	(sprintf@val+3)^(0+128)
  3167  03A7' 0802'              	movf	?__div_to_l_+2,w
  3168  03A8' 0080'              	movwf	(sprintf@val+2)^(0+128)
  3169  03A9' 0801'              	movf	?__div_to_l_+1,w
  3170  03AA' 0080'              	movwf	(sprintf@val+1)^(0+128)
  3171  03AB' 0800'              	movf	?__div_to_l_,w
  3172  03AC' 0080'              	movwf	sprintf@val^(0+128)
  3173                           
  3174                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  3175  03AD' 3000               	movlw	0
  3176  03AE' 0080'              	movwf	(sprintf@fval+3)^(0+128)
  3177  03AF' 3000               	movlw	0
  3178  03B0' 0080'              	movwf	(sprintf@fval+2)^(0+128)
  3179  03B1' 3000               	movlw	0
  3180  03B2' 0080'              	movwf	(sprintf@fval+1)^(0+128)
  3181  03B3' 3000               	movlw	0
  3182  03B4' 0080'              	movwf	sprintf@fval^(0+128)
  3183                           
  3184                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  3185  03B5' 2800'              	goto	l3621
  3186  03B6'                    l3617:
  3187                           
  3188                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  3189  03B6' 1683               	bsf	3,5	;RP0=1, select bank1
  3190  03B7' 1303               	bcf	3,6	;RP1=0, select bank1
  3191  03B8' 0800'              	movf	(sprintf@fval+3)^(0+128),w
  3192  03B9' 1283               	bcf	3,5	;RP0=0, select bank0
  3193  03BA' 1303               	bcf	3,6	;RP1=0, select bank0
  3194  03BB' 00B0'              	movwf	___fltol@f1+3
  3195  03BC' 1683               	bsf	3,5	;RP0=1, select bank1
  3196  03BD' 1303               	bcf	3,6	;RP1=0, select bank1
  3197  03BE' 0800'              	movf	(sprintf@fval+2)^(0+128),w
  3198  03BF' 1283               	bcf	3,5	;RP0=0, select bank0
  3199  03C0' 1303               	bcf	3,6	;RP1=0, select bank0
  3200  03C1' 00AF'              	movwf	___fltol@f1+2
  3201  03C2' 1683               	bsf	3,5	;RP0=1, select bank1
  3202  03C3' 1303               	bcf	3,6	;RP1=0, select bank1
  3203  03C4' 0800'              	movf	(sprintf@fval+1)^(0+128),w
  3204  03C5' 1283               	bcf	3,5	;RP0=0, select bank0
  3205  03C6' 1303               	bcf	3,6	;RP1=0, select bank0
  3206  03C7' 00AE'              	movwf	___fltol@f1+1
  3207  03C8' 1683               	bsf	3,5	;RP0=1, select bank1
  3208  03C9' 1303               	bcf	3,6	;RP1=0, select bank1
  3209  03CA' 0800'              	movf	sprintf@fval^(0+128),w
  3210  03CB' 1283               	bcf	3,5	;RP0=0, select bank0
  3211  03CC' 1303               	bcf	3,6	;RP1=0, select bank0
  3212  03CD' 00AD'              	movwf	___fltol@f1
  3213  03CE' 120A' 118A' 2000' 120A' 118A' 	fcall	___fltol
  3214  03D3' 1283               	bcf	3,5	;RP0=0, select bank0
  3215  03D4' 1303               	bcf	3,6	;RP1=0, select bank0
  3216  03D5' 0830'              	movf	?___fltol+3,w
  3217  03D6' 1683               	bsf	3,5	;RP0=1, select bank1
  3218  03D7' 1303               	bcf	3,6	;RP1=0, select bank1
  3219  03D8' 0080'              	movwf	(sprintf@val+3)^(0+128)
  3220  03D9' 1283               	bcf	3,5	;RP0=0, select bank0
  3221  03DA' 1303               	bcf	3,6	;RP1=0, select bank0
  3222  03DB' 082F'              	movf	?___fltol+2,w
  3223  03DC' 1683               	bsf	3,5	;RP0=1, select bank1
  3224  03DD' 1303               	bcf	3,6	;RP1=0, select bank1
  3225  03DE' 0080'              	movwf	(sprintf@val+2)^(0+128)
  3226  03DF' 1283               	bcf	3,5	;RP0=0, select bank0
  3227  03E0' 1303               	bcf	3,6	;RP1=0, select bank0
  3228  03E1' 082E'              	movf	?___fltol+1,w
  3229  03E2' 1683               	bsf	3,5	;RP0=1, select bank1
  3230  03E3' 1303               	bcf	3,6	;RP1=0, select bank1
  3231  03E4' 0080'              	movwf	(sprintf@val+1)^(0+128)
  3232  03E5' 1283               	bcf	3,5	;RP0=0, select bank0
  3233  03E6' 1303               	bcf	3,6	;RP1=0, select bank0
  3234  03E7' 082D'              	movf	?___fltol,w
  3235  03E8' 1683               	bsf	3,5	;RP0=1, select bank1
  3236  03E9' 1303               	bcf	3,6	;RP1=0, select bank1
  3237  03EA' 0080'              	movwf	sprintf@val^(0+128)
  3238                           
  3239                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  3240  03EB' 0800'              	movf	(sprintf@val+3)^(0+128),w
  3241  03EC' 0083'              	movwf	___xxtofl@val+3
  3242  03ED' 0800'              	movf	(sprintf@val+2)^(0+128),w
  3243  03EE' 0082'              	movwf	___xxtofl@val+2
  3244  03EF' 0800'              	movf	(sprintf@val+1)^(0+128),w
  3245  03F0' 0081'              	movwf	___xxtofl@val+1
  3246  03F1' 0800'              	movf	sprintf@val^(0+128),w
  3247  03F2' 0080'              	movwf	___xxtofl@val
  3248  03F3' 3000               	movlw	0
  3249  03F4' 120A' 118A' 2000' 120A' 118A' 	fcall	___xxtofl
  3250  03F9' 0803'              	movf	?___xxtofl+3,w
  3251  03FA' 1283               	bcf	3,5	;RP0=0, select bank0
  3252  03FB' 1303               	bcf	3,6	;RP1=0, select bank0
  3253  03FC' 00C5'              	movwf	___flsub@a+3
  3254  03FD' 0802'              	movf	?___xxtofl+2,w
  3255  03FE' 00C4'              	movwf	___flsub@a+2
  3256  03FF' 0801'              	movf	?___xxtofl+1,w
  3257  0400' 00C3'              	movwf	___flsub@a+1
  3258  0401' 0800'              	movf	?___xxtofl,w
  3259  0402' 00C2'              	movwf	___flsub@a
  3260  0403' 1683               	bsf	3,5	;RP0=1, select bank1
  3261  0404' 1303               	bcf	3,6	;RP1=0, select bank1
  3262  0405' 0800'              	movf	(sprintf@fval+3)^(0+128),w
  3263  0406' 1283               	bcf	3,5	;RP0=0, select bank0
  3264  0407' 1303               	bcf	3,6	;RP1=0, select bank0
  3265  0408' 00C9'              	movwf	___flsub@b+3
  3266  0409' 1683               	bsf	3,5	;RP0=1, select bank1
  3267  040A' 1303               	bcf	3,6	;RP1=0, select bank1
  3268  040B' 0800'              	movf	(sprintf@fval+2)^(0+128),w
  3269  040C' 1283               	bcf	3,5	;RP0=0, select bank0
  3270  040D' 1303               	bcf	3,6	;RP1=0, select bank0
  3271  040E' 00C8'              	movwf	___flsub@b+2
  3272  040F' 1683               	bsf	3,5	;RP0=1, select bank1
  3273  0410' 1303               	bcf	3,6	;RP1=0, select bank1
  3274  0411' 0800'              	movf	(sprintf@fval+1)^(0+128),w
  3275  0412' 1283               	bcf	3,5	;RP0=0, select bank0
  3276  0413' 1303               	bcf	3,6	;RP1=0, select bank0
  3277  0414' 00C7'              	movwf	___flsub@b+1
  3278  0415' 1683               	bsf	3,5	;RP0=1, select bank1
  3279  0416' 1303               	bcf	3,6	;RP1=0, select bank1
  3280  0417' 0800'              	movf	sprintf@fval^(0+128),w
  3281  0418' 1283               	bcf	3,5	;RP0=0, select bank0
  3282  0419' 1303               	bcf	3,6	;RP1=0, select bank0
  3283  041A' 00C6'              	movwf	___flsub@b
  3284  041B' 120A' 118A' 2000' 120A' 118A' 	fcall	___flsub
  3285  0420' 1283               	bcf	3,5	;RP0=0, select bank0
  3286  0421' 1303               	bcf	3,6	;RP1=0, select bank0
  3287  0422' 0845'              	movf	?___flsub+3,w
  3288  0423' 1683               	bsf	3,5	;RP0=1, select bank1
  3289  0424' 1303               	bcf	3,6	;RP1=0, select bank1
  3290  0425' 0080'              	movwf	(sprintf@fval+3)^(0+128)
  3291  0426' 1283               	bcf	3,5	;RP0=0, select bank0
  3292  0427' 1303               	bcf	3,6	;RP1=0, select bank0
  3293  0428' 0844'              	movf	?___flsub+2,w
  3294  0429' 1683               	bsf	3,5	;RP0=1, select bank1
  3295  042A' 1303               	bcf	3,6	;RP1=0, select bank1
  3296  042B' 0080'              	movwf	(sprintf@fval+2)^(0+128)
  3297  042C' 1283               	bcf	3,5	;RP0=0, select bank0
  3298  042D' 1303               	bcf	3,6	;RP1=0, select bank0
  3299  042E' 0843'              	movf	?___flsub+1,w
  3300  042F' 1683               	bsf	3,5	;RP0=1, select bank1
  3301  0430' 1303               	bcf	3,6	;RP1=0, select bank1
  3302  0431' 0080'              	movwf	(sprintf@fval+1)^(0+128)
  3303  0432' 1283               	bcf	3,5	;RP0=0, select bank0
  3304  0433' 1303               	bcf	3,6	;RP1=0, select bank0
  3305  0434' 0842'              	movf	?___flsub,w
  3306  0435' 1683               	bsf	3,5	;RP0=1, select bank1
  3307  0436' 1303               	bcf	3,6	;RP1=0, select bank1
  3308  0437' 0080'              	movwf	sprintf@fval^(0+128)
  3309                           
  3310                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  3311  0438' 0180'              	clrf	sprintf@eexp^(0+128)
  3312  0439' 0180'              	clrf	(sprintf@eexp+1)^(0+128)
  3313  043A'                    l3621:
  3314                           
  3315                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  3316  043A' 0180'              	clrf	sprintf@c^(0+128)
  3317  043B' 0A80'              	incf	sprintf@c^(0+128),f
  3318  043C'                    l3627:
  3319                           
  3320                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  3321  043C' 0800'              	movf	sprintf@c^(0+128),w
  3322  043D' 0080'              	movwf	??_sprintf^(0+128)
  3323  043E' 3001               	movlw	1
  3324  043F'                    u6015:
  3325  043F' 1003               	clrc
  3326  0440' 0D80'              	rlf	??_sprintf^(0+128),f
  3327  0441' 3EFF               	addlw	-1
  3328  0442' 1D03               	skipz
  3329  0443' 2800'              	goto	u6015
  3330  0444' 1003               	clrc
  3331  0445' 0D00'              	rlf	??_sprintf^(0+128),w
  3332  0446' 3E00'              	addlw	low (_dpowers| (0+32768))
  3333  0447' 0084               	movwf	4
  3334  0448' 3000'              	movlw	high (_dpowers| (0+32768))
  3335  0449' 1803               	skipnc
  3336  044A' 3E01               	addlw	1
  3337  044B' 1283               	bcf	3,5	;RP0=0, select bank0
  3338  044C' 1303               	bcf	3,6	;RP1=0, select bank0
  3339  044D' 00FF               	movwf	127
  3340  044E' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  3341  0453' 1683               	bsf	3,5	;RP0=1, select bank1
  3342  0454' 1303               	bcf	3,6	;RP1=0, select bank1
  3343  0455' 0080'              	movwf	(??_sprintf+1)^(0+128)
  3344  0456' 1283               	bcf	3,5	;RP0=0, select bank0
  3345  0457' 1303               	bcf	3,6	;RP1=0, select bank0
  3346  0458' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  3347  045D' 1683               	bsf	3,5	;RP0=1, select bank1
  3348  045E' 1303               	bcf	3,6	;RP1=0, select bank1
  3349  045F' 0081'              	movwf	((??_sprintf+1)^(0+128)+1)
  3350  0460' 1283               	bcf	3,5	;RP0=0, select bank0
  3351  0461' 1303               	bcf	3,6	;RP1=0, select bank0
  3352  0462' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  3353  0467' 1683               	bsf	3,5	;RP0=1, select bank1
  3354  0468' 1303               	bcf	3,6	;RP1=0, select bank1
  3355  0469' 0082'              	movwf	((??_sprintf+1)^(0+128)+2)
  3356  046A' 1283               	bcf	3,5	;RP0=0, select bank0
  3357  046B' 1303               	bcf	3,6	;RP1=0, select bank0
  3358  046C' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  3359  0471' 1683               	bsf	3,5	;RP0=1, select bank1
  3360  0472' 1303               	bcf	3,6	;RP1=0, select bank1
  3361  0473' 0083'              	movwf	((??_sprintf+1)^(0+128)+3)
  3362  0474' 0800'              	movf	(??_sprintf+4)^(0+128),w
  3363  0475' 0200'              	subwf	(sprintf@val+3)^(0+128),w
  3364  0476' 1D03               	skipz
  3365  0477' 2800'              	goto	u6025
  3366  0478' 0800'              	movf	(??_sprintf+3)^(0+128),w
  3367  0479' 0200'              	subwf	(sprintf@val+2)^(0+128),w
  3368  047A' 1D03               	skipz
  3369  047B' 2800'              	goto	u6025
  3370  047C' 0800'              	movf	(??_sprintf+2)^(0+128),w
  3371  047D' 0200'              	subwf	(sprintf@val+1)^(0+128),w
  3372  047E' 1D03               	skipz
  3373  047F' 2800'              	goto	u6025
  3374  0480' 0800'              	movf	(??_sprintf+1)^(0+128),w
  3375  0481' 0200'              	subwf	sprintf@val^(0+128),w
  3376  0482'                    u6025:
  3377  0482' 1C03               	btfss	3,0
  3378  0483' 2800'              	goto	l3635
  3379  0484' 3001               	movlw	1
  3380  0485' 00FF               	movwf	127
  3381  0486' 087F               	movf	127,w
  3382  0487' 0780'              	addwf	sprintf@c^(0+128),f
  3383  0488' 300A               	movlw	10
  3384  0489' 0600'              	xorwf	sprintf@c^(0+128),w
  3385  048A' 1D03               	btfss	3,2
  3386  048B' 2800'              	goto	l3627
  3387  048C'                    l3635:
  3388                           
  3389                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1168:     width -
      +                          = prec + c + eexp;
  3390  048C' 0800'              	movf	sprintf@c^(0+128),w
  3391  048D' 0700'              	addwf	sprintf@prec^(0+128),w
  3392  048E' 0080'              	movwf	??_sprintf^(0+128)
  3393  048F' 0800'              	movf	(sprintf@prec+1)^(0+128),w
  3394  0490' 1803               	skipnc
  3395  0491' 0A00'              	incf	(sprintf@prec+1)^(0+128),w
  3396  0492' 0081'              	movwf	(??_sprintf^(0+128)+1)
  3397  0493' 0800'              	movf	sprintf@eexp^(0+128),w
  3398  0494' 0700'              	addwf	??_sprintf^(0+128),w
  3399  0495' 0080'              	movwf	(??_sprintf+2)^(0+128)
  3400  0496' 0800'              	movf	(sprintf@eexp+1)^(0+128),w
  3401  0497' 1803               	skipnc
  3402  0498' 0A00'              	incf	(sprintf@eexp+1)^(0+128),w
  3403  0499' 0700'              	addwf	(??_sprintf+1)^(0+128),w
  3404  049A' 0080'              	movwf	(??_sprintf+3)^(0+128)
  3405  049B' 0800'              	movf	(??_sprintf+2)^(0+128),w
  3406  049C' 0280'              	subwf	sprintf@width^(0+128),f
  3407  049D' 0800'              	movf	(??_sprintf+3)^(0+128),w
  3408  049E' 1C03               	skipc
  3409  049F' 0380'              	decf	(sprintf@width+1)^(0+128),f
  3410  04A0' 0280'              	subwf	(sprintf@width+1)^(0+128),f
  3411                           
  3412                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1169:     if(
  3413  04A1' 0800'              	movf	sprintf@prec^(0+128),w
  3414  04A2' 0400'              	iorwf	(sprintf@prec+1)^(0+128),w
  3415  04A3' 1903               	btfsc	3,2
  3416  04A4' 2800'              	goto	l3639
  3417                           
  3418                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1174:      width-
      +                          -;
  3419  04A5' 30FF               	movlw	255
  3420  04A6' 0780'              	addwf	sprintf@width^(0+128),f
  3421  04A7' 1803               	skipnc
  3422  04A8' 0A80'              	incf	(sprintf@width+1)^(0+128),f
  3423  04A9' 30FF               	movlw	255
  3424  04AA' 0780'              	addwf	(sprintf@width+1)^(0+128),f
  3425  04AB'                    l3639:
  3426                           
  3427                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1175:     if(flag
      +                           & 0x03)
  3428  04AB' 3003               	movlw	3
  3429  04AC' 0500'              	andwf	sprintf@flag^(0+128),w
  3430  04AD' 0080'              	movwf	??_sprintf^(0+128)
  3431  04AE' 3000               	movlw	0
  3432  04AF' 0500'              	andwf	(sprintf@flag+1)^(0+128),w
  3433  04B0' 0080'              	movwf	(??_sprintf+1)^(0+128)
  3434  04B1' 0800'              	movf	??_sprintf^(0+128),w
  3435  04B2' 0401'              	iorwf	(??_sprintf^(0+128)+1),w
  3436  04B3' 1D03               	btfss	3,2
  3437  04B4' 2800'              	goto	l3641
  3438  04B5'                    l3649:
  3439                           
  3440                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1206:      while(
      +                          width > 0) {
  3441  04B5' 0800'              	movf	(sprintf@width+1)^(0+128),w
  3442  04B6' 3A80               	xorlw	128
  3443  04B7' 00FF               	movwf	127
  3444  04B8' 3080               	movlw	128
  3445  04B9' 027F               	subwf	127,w
  3446  04BA' 1D03               	skipz
  3447  04BB' 2800'              	goto	u6065
  3448  04BC' 3001               	movlw	1
  3449  04BD' 0200'              	subwf	sprintf@width^(0+128),w
  3450  04BE'                    u6065:
  3451  04BE' 1C03               	btfss	3,0
  3452  04BF' 2800'              	goto	l3651
  3453                           
  3454                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1207:       ((*sp
      +                          ++ = (' ')));
  3455  04C0' 1683               	bsf	3,5	;RP0=1, select bank1
  3456  04C1' 1303               	bcf	3,6	;RP1=0, select bank1
  3457  04C2' 0800'              	movf	sprintf@sp^(0+128),w
  3458  04C3' 0084               	movwf	4
  3459  04C4' 3020               	movlw	32
  3460  04C5' 1783               	bsf	3,7	;select IRP bank2
  3461  04C6' 0080               	movwf	0
  3462  04C7' 3001               	movlw	1
  3463  04C8' 00FF               	movwf	127
  3464  04C9' 087F               	movf	127,w
  3465  04CA' 0780'              	addwf	sprintf@sp^(0+128),f
  3466  04CB'                    l3641:
  3467                           
  3468                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1176:      width-
      +                          -;
  3469  04CB' 30FF               	movlw	255
  3470  04CC' 0780'              	addwf	sprintf@width^(0+128),f
  3471  04CD' 1803               	skipnc
  3472  04CE' 0A80'              	incf	(sprintf@width+1)^(0+128),f
  3473  04CF' 30FF               	movlw	255
  3474  04D0' 0780'              	addwf	(sprintf@width+1)^(0+128),f
  3475  04D1' 2800'              	goto	l3649
  3476  04D2'                    l3651:
  3477                           
  3478                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1214:     if(flag
      +                           & 0x03)
  3479  04D2' 3003               	movlw	3
  3480  04D3' 1683               	bsf	3,5	;RP0=1, select bank1
  3481  04D4' 1303               	bcf	3,6	;RP1=0, select bank1
  3482  04D5' 0500'              	andwf	sprintf@flag^(0+128),w
  3483  04D6' 0080'              	movwf	??_sprintf^(0+128)
  3484  04D7' 3000               	movlw	0
  3485  04D8' 0500'              	andwf	(sprintf@flag+1)^(0+128),w
  3486  04D9' 0080'              	movwf	(??_sprintf+1)^(0+128)
  3487  04DA' 0800'              	movf	??_sprintf^(0+128),w
  3488  04DB' 0401'              	iorwf	(??_sprintf^(0+128)+1),w
  3489  04DC' 1903               	btfsc	3,2
  3490  04DD' 2800'              	goto	l3665
  3491                           
  3492                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
  3493  04DE' 0800'              	movf	sprintf@sp^(0+128),w
  3494  04DF' 0084               	movwf	4
  3495  04E0' 302D               	movlw	45
  3496  04E1'                    L5:
  3497  04E1' 1783               	bsf	3,7	;select IRP bank2
  3498  04E2' 0080               	movwf	0
  3499  04E3' 3001               	movlw	1
  3500  04E4' 00FF               	movwf	127
  3501  04E5' 087F               	movf	127,w
  3502  04E6' 0780'              	addwf	sprintf@sp^(0+128),f
  3503  04E7'                    l3665:
  3504                           
  3505                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
  3506  04E7' 3001               	movlw	1
  3507  04E8' 0280'              	subwf	sprintf@c^(0+128),f
  3508  04E9' 0A00'              	incf	sprintf@c^(0+128),w
  3509  04EA' 1903               	btfsc	3,2
  3510  04EB' 2800'              	goto	l3673
  3511                           
  3512                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  3513  04EC' 0800'              	movf	sprintf@c^(0+128),w
  3514  04ED' 0080'              	movwf	??_sprintf^(0+128)
  3515  04EE' 3001               	movlw	1
  3516  04EF'                    u6085:
  3517  04EF' 1003               	clrc
  3518  04F0' 0D80'              	rlf	??_sprintf^(0+128),f
  3519  04F1' 3EFF               	addlw	-1
  3520  04F2' 1D03               	skipz
  3521  04F3' 2800'              	goto	u6085
  3522  04F4' 1003               	clrc
  3523  04F5' 0D00'              	rlf	??_sprintf^(0+128),w
  3524  04F6' 3E00'              	addlw	low (_dpowers| (0+32768))
  3525  04F7' 0084               	movwf	4
  3526  04F8' 3000'              	movlw	high (_dpowers| (0+32768))
  3527  04F9' 1803               	skipnc
  3528  04FA' 3E01               	addlw	1
  3529  04FB' 1283               	bcf	3,5	;RP0=0, select bank0
  3530  04FC' 1303               	bcf	3,6	;RP1=0, select bank0
  3531  04FD' 00FF               	movwf	127
  3532  04FE' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  3533  0503' 0080'              	movwf	___lldiv@divisor
  3534  0504' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  3535  0509' 0081'              	movwf	___lldiv@divisor+1
  3536  050A' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  3537  050F' 0082'              	movwf	___lldiv@divisor+2
  3538  0510' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  3539  0515' 0083'              	movwf	___lldiv@divisor+3
  3540  0516' 1683               	bsf	3,5	;RP0=1, select bank1
  3541  0517' 1303               	bcf	3,6	;RP1=0, select bank1
  3542  0518' 0800'              	movf	(sprintf@val+3)^(0+128),w
  3543  0519' 0087'              	movwf	___lldiv@dividend+3
  3544  051A' 0800'              	movf	(sprintf@val+2)^(0+128),w
  3545  051B' 0086'              	movwf	___lldiv@dividend+2
  3546  051C' 0800'              	movf	(sprintf@val+1)^(0+128),w
  3547  051D' 0085'              	movwf	___lldiv@dividend+1
  3548  051E' 0800'              	movf	sprintf@val^(0+128),w
  3549  051F' 0084'              	movwf	___lldiv@dividend
  3550  0520' 120A' 118A' 2000' 120A' 118A' 	fcall	___lldiv
  3551  0525' 0803'              	movf	?___lldiv+3,w
  3552  0526' 1683               	bsf	3,5	;RP0=1, select bank1
  3553  0527' 1303               	bcf	3,6	;RP1=0, select bank1
  3554  0528' 0080'              	movwf	(sprintf@tmpval+3)^(0+128)
  3555  0529' 0802'              	movf	?___lldiv+2,w
  3556  052A' 0080'              	movwf	(sprintf@tmpval+2)^(0+128)
  3557  052B' 0801'              	movf	?___lldiv+1,w
  3558  052C' 0080'              	movwf	(sprintf@tmpval+1)^(0+128)
  3559  052D' 0800'              	movf	?___lldiv,w
  3560  052E' 0080'              	movwf	sprintf@tmpval^(0+128)
  3561                           
  3562                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
  3563  052F' 3000               	movlw	0
  3564  0530' 1283               	bcf	3,5	;RP0=0, select bank0
  3565  0531' 1303               	bcf	3,6	;RP1=0, select bank0
  3566  0532' 0083'              	movwf	___llmod@divisor+3
  3567  0533' 3000               	movlw	0
  3568  0534' 0082'              	movwf	___llmod@divisor+2
  3569  0535' 3000               	movlw	0
  3570  0536' 0081'              	movwf	___llmod@divisor+1
  3571  0537' 300A               	movlw	10
  3572  0538' 0080'              	movwf	___llmod@divisor
  3573  0539' 1683               	bsf	3,5	;RP0=1, select bank1
  3574  053A' 1303               	bcf	3,6	;RP1=0, select bank1
  3575  053B' 0800'              	movf	(sprintf@tmpval+3)^(0+128),w
  3576  053C' 1283               	bcf	3,5	;RP0=0, select bank0
  3577  053D' 1303               	bcf	3,6	;RP1=0, select bank0
  3578  053E' 0087'              	movwf	___llmod@dividend+3
  3579  053F' 1683               	bsf	3,5	;RP0=1, select bank1
  3580  0540' 1303               	bcf	3,6	;RP1=0, select bank1
  3581  0541' 0800'              	movf	(sprintf@tmpval+2)^(0+128),w
  3582  0542' 1283               	bcf	3,5	;RP0=0, select bank0
  3583  0543' 1303               	bcf	3,6	;RP1=0, select bank0
  3584  0544' 0086'              	movwf	___llmod@dividend+2
  3585  0545' 1683               	bsf	3,5	;RP0=1, select bank1
  3586  0546' 1303               	bcf	3,6	;RP1=0, select bank1
  3587  0547' 0800'              	movf	(sprintf@tmpval+1)^(0+128),w
  3588  0548' 1283               	bcf	3,5	;RP0=0, select bank0
  3589  0549' 1303               	bcf	3,6	;RP1=0, select bank0
  3590  054A' 0085'              	movwf	___llmod@dividend+1
  3591  054B' 1683               	bsf	3,5	;RP0=1, select bank1
  3592  054C' 1303               	bcf	3,6	;RP1=0, select bank1
  3593  054D' 0800'              	movf	sprintf@tmpval^(0+128),w
  3594  054E' 1283               	bcf	3,5	;RP0=0, select bank0
  3595  054F' 1303               	bcf	3,6	;RP1=0, select bank0
  3596  0550' 0084'              	movwf	___llmod@dividend
  3597  0551' 120A' 118A' 2000' 120A' 118A' 	fcall	___llmod
  3598  0556' 1283               	bcf	3,5	;RP0=0, select bank0
  3599  0557' 1303               	bcf	3,6	;RP1=0, select bank0
  3600  0558' 0803'              	movf	?___llmod+3,w
  3601  0559' 1683               	bsf	3,5	;RP0=1, select bank1
  3602  055A' 1303               	bcf	3,6	;RP1=0, select bank1
  3603  055B' 0080'              	movwf	(sprintf@tmpval+3)^(0+128)
  3604  055C' 1283               	bcf	3,5	;RP0=0, select bank0
  3605  055D' 1303               	bcf	3,6	;RP1=0, select bank0
  3606  055E' 0802'              	movf	?___llmod+2,w
  3607  055F' 1683               	bsf	3,5	;RP0=1, select bank1
  3608  0560' 1303               	bcf	3,6	;RP1=0, select bank1
  3609  0561' 0080'              	movwf	(sprintf@tmpval+2)^(0+128)
  3610  0562' 1283               	bcf	3,5	;RP0=0, select bank0
  3611  0563' 1303               	bcf	3,6	;RP1=0, select bank0
  3612  0564' 0801'              	movf	?___llmod+1,w
  3613  0565' 1683               	bsf	3,5	;RP0=1, select bank1
  3614  0566' 1303               	bcf	3,6	;RP1=0, select bank1
  3615  0567' 0080'              	movwf	(sprintf@tmpval+1)^(0+128)
  3616  0568' 1283               	bcf	3,5	;RP0=0, select bank0
  3617  0569' 1303               	bcf	3,6	;RP1=0, select bank0
  3618  056A' 0800'              	movf	?___llmod,w
  3619  056B' 1683               	bsf	3,5	;RP0=1, select bank1
  3620  056C' 1303               	bcf	3,6	;RP1=0, select bank1
  3621  056D' 0080'              	movwf	sprintf@tmpval^(0+128)
  3622                           
  3623                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
  3624  056E' 0800'              	movf	sprintf@sp^(0+128),w
  3625  056F' 0084               	movwf	4
  3626  0570' 0800'              	movf	sprintf@tmpval^(0+128),w
  3627  0571' 3E30               	addlw	48
  3628  0572' 2800'              	goto	L5
  3629  0573'                    l3667:
  3630                           
  3631                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
  3632  0573' 1683               	bsf	3,5	;RP0=1, select bank1
  3633  0574' 1303               	bcf	3,6	;RP1=0, select bank1
  3634  0575' 0800'              	movf	sprintf@sp^(0+128),w
  3635  0576' 0084               	movwf	4
  3636  0577' 3030               	movlw	48
  3637  0578' 1783               	bsf	3,7	;select IRP bank2
  3638  0579' 0080               	movwf	0
  3639  057A' 3001               	movlw	1
  3640  057B' 00FF               	movwf	127
  3641  057C' 087F               	movf	127,w
  3642  057D' 0780'              	addwf	sprintf@sp^(0+128),f
  3643                           
  3644                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  3645  057E' 30FF               	movlw	255
  3646  057F' 0780'              	addwf	sprintf@eexp^(0+128),f
  3647  0580' 1803               	skipnc
  3648  0581' 0A80'              	incf	(sprintf@eexp+1)^(0+128),f
  3649  0582' 30FF               	movlw	255
  3650  0583' 0780'              	addwf	(sprintf@eexp+1)^(0+128),f
  3651  0584'                    l3673:
  3652                           
  3653                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
  3654  0584' 0800'              	movf	(sprintf@eexp+1)^(0+128),w
  3655  0585' 3A80               	xorlw	128
  3656  0586' 00FF               	movwf	127
  3657  0587' 3080               	movlw	128
  3658  0588' 027F               	subwf	127,w
  3659  0589' 1D03               	skipz
  3660  058A' 2800'              	goto	u6105
  3661  058B' 3001               	movlw	1
  3662  058C' 0200'              	subwf	sprintf@eexp^(0+128),w
  3663  058D'                    u6105:
  3664  058D' 1803               	skipnc
  3665  058E' 2800'              	goto	l3667
  3666                           
  3667                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3668  058F' 1683               	bsf	3,5	;RP0=1, select bank1
  3669  0590' 1303               	bcf	3,6	;RP1=0, select bank1
  3670  0591' 0800'              	movf	(sprintf@prec+1)^(0+128),w
  3671  0592' 3A80               	xorlw	128
  3672  0593' 00FF               	movwf	127
  3673  0594' 3080               	movlw	128
  3674  0595' 027F               	subwf	127,w
  3675  0596' 1D03               	skipz
  3676  0597' 2800'              	goto	u6115
  3677  0598' 3009               	movlw	9
  3678  0599' 0200'              	subwf	sprintf@prec^(0+128),w
  3679  059A'                    u6115:
  3680  059A' 1C03               	skipc
  3681  059B' 2800'              	goto	l3679
  3682                           
  3683                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
  3684  059C' 3008               	movlw	8
  3685  059D' 1683               	bsf	3,5	;RP0=1, select bank1
  3686  059E' 1303               	bcf	3,6	;RP1=0, select bank1
  3687  059F' 2800'              	goto	L3
  3688  05A0'                    l3679:
  3689                           
  3690                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
  3691  05A0' 1683               	bsf	3,5	;RP0=1, select bank1
  3692  05A1' 1303               	bcf	3,6	;RP1=0, select bank1
  3693  05A2' 0800'              	movf	sprintf@prec^(0+128),w
  3694  05A3'                    L3:
  3695  05A3' 0080'              	movwf	sprintf@c^(0+128)
  3696                           
  3697                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
  3698  05A4' 0800'              	movf	sprintf@c^(0+128),w
  3699  05A5' 0080'              	movwf	??_sprintf^(0+128)
  3700  05A6' 0181'              	clrf	(??_sprintf^(0+128)+1)
  3701  05A7' 0800'              	movf	??_sprintf^(0+128),w
  3702  05A8' 0280'              	subwf	sprintf@prec^(0+128),f
  3703  05A9' 0800'              	movf	(??_sprintf+1)^(0+128),w
  3704  05AA' 1C03               	skipc
  3705  05AB' 0380'              	decf	(sprintf@prec+1)^(0+128),f
  3706  05AC' 0280'              	subwf	(sprintf@prec+1)^(0+128),f
  3707                           
  3708                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  3709  05AD' 0800'              	movf	sprintf@c^(0+128),w
  3710  05AE' 1903               	btfsc	3,2
  3711  05AF' 2800'              	goto	l3687
  3712                           
  3713                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
  3714  05B0' 0800'              	movf	sprintf@sp^(0+128),w
  3715  05B1' 0084               	movwf	4
  3716  05B2' 302E               	movlw	46
  3717  05B3' 1783               	bsf	3,7	;select IRP bank2
  3718  05B4' 0080               	movwf	0
  3719  05B5' 3001               	movlw	1
  3720  05B6' 00FF               	movwf	127
  3721  05B7' 087F               	movf	127,w
  3722  05B8' 0780'              	addwf	sprintf@sp^(0+128),f
  3723  05B9'                    l3687:
  3724                           
  3725                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3726  05B9' 0800'              	movf	sprintf@c^(0+128),w
  3727  05BA' 120A' 118A' 2000' 120A' 118A' 	fcall	_scale
  3728  05BF' 1283               	bcf	3,5	;RP0=0, select bank0
  3729  05C0' 1303               	bcf	3,6	;RP1=0, select bank0
  3730  05C1' 081D'              	movf	?_scale+3,w
  3731  05C2' 1683               	bsf	3,5	;RP0=1, select bank1
  3732  05C3' 1303               	bcf	3,6	;RP1=0, select bank1
  3733  05C4' 0080'              	movwf	(_sprintf$874+3)^(0+128)
  3734  05C5' 1283               	bcf	3,5	;RP0=0, select bank0
  3735  05C6' 1303               	bcf	3,6	;RP1=0, select bank0
  3736  05C7' 081C'              	movf	?_scale+2,w
  3737  05C8' 1683               	bsf	3,5	;RP0=1, select bank1
  3738  05C9' 1303               	bcf	3,6	;RP1=0, select bank1
  3739  05CA' 0080'              	movwf	(_sprintf$874+2)^(0+128)
  3740  05CB' 1283               	bcf	3,5	;RP0=0, select bank0
  3741  05CC' 1303               	bcf	3,6	;RP1=0, select bank0
  3742  05CD' 081B'              	movf	?_scale+1,w
  3743  05CE' 1683               	bsf	3,5	;RP0=1, select bank1
  3744  05CF' 1303               	bcf	3,6	;RP1=0, select bank1
  3745  05D0' 0080'              	movwf	(_sprintf$874+1)^(0+128)
  3746  05D1' 1283               	bcf	3,5	;RP0=0, select bank0
  3747  05D2' 1303               	bcf	3,6	;RP1=0, select bank0
  3748  05D3' 081A'              	movf	?_scale,w
  3749  05D4' 1683               	bsf	3,5	;RP0=1, select bank1
  3750  05D5' 1303               	bcf	3,6	;RP1=0, select bank1
  3751  05D6' 0080'              	movwf	_sprintf$874^(0+128)
  3752                           
  3753                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3754  05D7' 0800'              	movf	(_sprintf$874+3)^(0+128),w
  3755  05D8' 1283               	bcf	3,5	;RP0=0, select bank0
  3756  05D9' 1303               	bcf	3,6	;RP1=0, select bank0
  3757  05DA' 0087'              	movwf	___flmul@a+3
  3758  05DB' 1683               	bsf	3,5	;RP0=1, select bank1
  3759  05DC' 1303               	bcf	3,6	;RP1=0, select bank1
  3760  05DD' 0800'              	movf	(_sprintf$874+2)^(0+128),w
  3761  05DE' 1283               	bcf	3,5	;RP0=0, select bank0
  3762  05DF' 1303               	bcf	3,6	;RP1=0, select bank0
  3763  05E0' 0086'              	movwf	___flmul@a+2
  3764  05E1' 1683               	bsf	3,5	;RP0=1, select bank1
  3765  05E2' 1303               	bcf	3,6	;RP1=0, select bank1
  3766  05E3' 0800'              	movf	(_sprintf$874+1)^(0+128),w
  3767  05E4' 1283               	bcf	3,5	;RP0=0, select bank0
  3768  05E5' 1303               	bcf	3,6	;RP1=0, select bank0
  3769  05E6' 0085'              	movwf	___flmul@a+1
  3770  05E7' 1683               	bsf	3,5	;RP0=1, select bank1
  3771  05E8' 1303               	bcf	3,6	;RP1=0, select bank1
  3772  05E9' 0800'              	movf	_sprintf$874^(0+128),w
  3773  05EA' 1283               	bcf	3,5	;RP0=0, select bank0
  3774  05EB' 1303               	bcf	3,6	;RP1=0, select bank0
  3775  05EC' 0084'              	movwf	___flmul@a
  3776  05ED' 1683               	bsf	3,5	;RP0=1, select bank1
  3777  05EE' 1303               	bcf	3,6	;RP1=0, select bank1
  3778  05EF' 0800'              	movf	(sprintf@fval+3)^(0+128),w
  3779  05F0' 1283               	bcf	3,5	;RP0=0, select bank0
  3780  05F1' 1303               	bcf	3,6	;RP1=0, select bank0
  3781  05F2' 0083'              	movwf	___flmul@b+3
  3782  05F3' 1683               	bsf	3,5	;RP0=1, select bank1
  3783  05F4' 1303               	bcf	3,6	;RP1=0, select bank1
  3784  05F5' 0800'              	movf	(sprintf@fval+2)^(0+128),w
  3785  05F6' 1283               	bcf	3,5	;RP0=0, select bank0
  3786  05F7' 1303               	bcf	3,6	;RP1=0, select bank0
  3787  05F8' 0082'              	movwf	___flmul@b+2
  3788  05F9' 1683               	bsf	3,5	;RP0=1, select bank1
  3789  05FA' 1303               	bcf	3,6	;RP1=0, select bank1
  3790  05FB' 0800'              	movf	(sprintf@fval+1)^(0+128),w
  3791  05FC' 1283               	bcf	3,5	;RP0=0, select bank0
  3792  05FD' 1303               	bcf	3,6	;RP1=0, select bank0
  3793  05FE' 0081'              	movwf	___flmul@b+1
  3794  05FF' 1683               	bsf	3,5	;RP0=1, select bank1
  3795  0600' 1303               	bcf	3,6	;RP1=0, select bank1
  3796  0601' 0800'              	movf	sprintf@fval^(0+128),w
  3797  0602' 1283               	bcf	3,5	;RP0=0, select bank0
  3798  0603' 1303               	bcf	3,6	;RP1=0, select bank0
  3799  0604' 0080'              	movwf	___flmul@b
  3800  0605' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  3801  060A' 1283               	bcf	3,5	;RP0=0, select bank0
  3802  060B' 1303               	bcf	3,6	;RP1=0, select bank0
  3803  060C' 0803'              	movf	?___flmul+3,w
  3804  060D' 00B0'              	movwf	___fltol@f1+3
  3805  060E' 0802'              	movf	?___flmul+2,w
  3806  060F' 00AF'              	movwf	___fltol@f1+2
  3807  0610' 0801'              	movf	?___flmul+1,w
  3808  0611' 00AE'              	movwf	___fltol@f1+1
  3809  0612' 0800'              	movf	?___flmul,w
  3810  0613' 00AD'              	movwf	___fltol@f1
  3811  0614' 120A' 118A' 2000' 120A' 118A' 	fcall	___fltol
  3812  0619' 1283               	bcf	3,5	;RP0=0, select bank0
  3813  061A' 1303               	bcf	3,6	;RP1=0, select bank0
  3814  061B' 0830'              	movf	?___fltol+3,w
  3815  061C' 1683               	bsf	3,5	;RP0=1, select bank1
  3816  061D' 1303               	bcf	3,6	;RP1=0, select bank1
  3817  061E' 0080'              	movwf	(sprintf@val+3)^(0+128)
  3818  061F' 1283               	bcf	3,5	;RP0=0, select bank0
  3819  0620' 1303               	bcf	3,6	;RP1=0, select bank0
  3820  0621' 082F'              	movf	?___fltol+2,w
  3821  0622' 1683               	bsf	3,5	;RP0=1, select bank1
  3822  0623' 1303               	bcf	3,6	;RP1=0, select bank1
  3823  0624' 0080'              	movwf	(sprintf@val+2)^(0+128)
  3824  0625' 1283               	bcf	3,5	;RP0=0, select bank0
  3825  0626' 1303               	bcf	3,6	;RP1=0, select bank0
  3826  0627' 082E'              	movf	?___fltol+1,w
  3827  0628' 1683               	bsf	3,5	;RP0=1, select bank1
  3828  0629' 1303               	bcf	3,6	;RP1=0, select bank1
  3829  062A' 0080'              	movwf	(sprintf@val+1)^(0+128)
  3830  062B' 1283               	bcf	3,5	;RP0=0, select bank0
  3831  062C' 1303               	bcf	3,6	;RP1=0, select bank0
  3832  062D' 082D'              	movf	?___fltol,w
  3833  062E'                    L4:
  3834  062E' 1683               	bsf	3,5	;RP0=1, select bank1
  3835  062F' 1303               	bcf	3,6	;RP1=0, select bank1
  3836  0630' 0080'              	movwf	sprintf@val^(0+128)
  3837                           
  3838                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3839  0631' 3001               	movlw	1
  3840  0632' 0280'              	subwf	sprintf@c^(0+128),f
  3841  0633' 0A00'              	incf	sprintf@c^(0+128),w
  3842  0634' 1903               	btfsc	3,2
  3843  0635' 2800'              	goto	l3709
  3844                           
  3845                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
  3846                           
  3847                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3848  0636' 0800'              	movf	sprintf@c^(0+128),w
  3849  0637' 0080'              	movwf	??_sprintf^(0+128)
  3850  0638' 3001               	movlw	1
  3851  0639'                    u6135:
  3852  0639' 1003               	clrc
  3853  063A' 0D80'              	rlf	??_sprintf^(0+128),f
  3854  063B' 3EFF               	addlw	-1
  3855  063C' 1D03               	skipz
  3856  063D' 2800'              	goto	u6135
  3857  063E' 1003               	clrc
  3858  063F' 0D00'              	rlf	??_sprintf^(0+128),w
  3859  0640' 3E00'              	addlw	low (_dpowers| (0+32768))
  3860  0641' 0084               	movwf	4
  3861  0642' 3000'              	movlw	high (_dpowers| (0+32768))
  3862  0643' 1803               	skipnc
  3863  0644' 3E01               	addlw	1
  3864  0645' 1283               	bcf	3,5	;RP0=0, select bank0
  3865  0646' 1303               	bcf	3,6	;RP1=0, select bank0
  3866  0647' 00FF               	movwf	127
  3867  0648' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  3868  064D' 0080'              	movwf	___lldiv@divisor
  3869  064E' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  3870  0653' 0081'              	movwf	___lldiv@divisor+1
  3871  0654' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  3872  0659' 0082'              	movwf	___lldiv@divisor+2
  3873  065A' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  3874  065F' 0083'              	movwf	___lldiv@divisor+3
  3875  0660' 1683               	bsf	3,5	;RP0=1, select bank1
  3876  0661' 1303               	bcf	3,6	;RP1=0, select bank1
  3877  0662' 0800'              	movf	(sprintf@val+3)^(0+128),w
  3878  0663' 0087'              	movwf	___lldiv@dividend+3
  3879  0664' 0800'              	movf	(sprintf@val+2)^(0+128),w
  3880  0665' 0086'              	movwf	___lldiv@dividend+2
  3881  0666' 0800'              	movf	(sprintf@val+1)^(0+128),w
  3882  0667' 0085'              	movwf	___lldiv@dividend+1
  3883  0668' 0800'              	movf	sprintf@val^(0+128),w
  3884  0669' 0084'              	movwf	___lldiv@dividend
  3885  066A' 120A' 118A' 2000' 120A' 118A' 	fcall	___lldiv
  3886  066F' 0803'              	movf	?___lldiv+3,w
  3887  0670' 1683               	bsf	3,5	;RP0=1, select bank1
  3888  0671' 1303               	bcf	3,6	;RP1=0, select bank1
  3889  0672' 0080'              	movwf	(sprintf@tmpval+3)^(0+128)
  3890  0673' 0802'              	movf	?___lldiv+2,w
  3891  0674' 0080'              	movwf	(sprintf@tmpval+2)^(0+128)
  3892  0675' 0801'              	movf	?___lldiv+1,w
  3893  0676' 0080'              	movwf	(sprintf@tmpval+1)^(0+128)
  3894  0677' 0800'              	movf	?___lldiv,w
  3895  0678' 0080'              	movwf	sprintf@tmpval^(0+128)
  3896                           
  3897                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
  3898  0679' 3000               	movlw	0
  3899  067A' 1283               	bcf	3,5	;RP0=0, select bank0
  3900  067B' 1303               	bcf	3,6	;RP1=0, select bank0
  3901  067C' 0083'              	movwf	___llmod@divisor+3
  3902  067D' 3000               	movlw	0
  3903  067E' 0082'              	movwf	___llmod@divisor+2
  3904  067F' 3000               	movlw	0
  3905  0680' 0081'              	movwf	___llmod@divisor+1
  3906  0681' 300A               	movlw	10
  3907  0682' 0080'              	movwf	___llmod@divisor
  3908  0683' 1683               	bsf	3,5	;RP0=1, select bank1
  3909  0684' 1303               	bcf	3,6	;RP1=0, select bank1
  3910  0685' 0800'              	movf	(sprintf@tmpval+3)^(0+128),w
  3911  0686' 1283               	bcf	3,5	;RP0=0, select bank0
  3912  0687' 1303               	bcf	3,6	;RP1=0, select bank0
  3913  0688' 0087'              	movwf	___llmod@dividend+3
  3914  0689' 1683               	bsf	3,5	;RP0=1, select bank1
  3915  068A' 1303               	bcf	3,6	;RP1=0, select bank1
  3916  068B' 0800'              	movf	(sprintf@tmpval+2)^(0+128),w
  3917  068C' 1283               	bcf	3,5	;RP0=0, select bank0
  3918  068D' 1303               	bcf	3,6	;RP1=0, select bank0
  3919  068E' 0086'              	movwf	___llmod@dividend+2
  3920  068F' 1683               	bsf	3,5	;RP0=1, select bank1
  3921  0690' 1303               	bcf	3,6	;RP1=0, select bank1
  3922  0691' 0800'              	movf	(sprintf@tmpval+1)^(0+128),w
  3923  0692' 1283               	bcf	3,5	;RP0=0, select bank0
  3924  0693' 1303               	bcf	3,6	;RP1=0, select bank0
  3925  0694' 0085'              	movwf	___llmod@dividend+1
  3926  0695' 1683               	bsf	3,5	;RP0=1, select bank1
  3927  0696' 1303               	bcf	3,6	;RP1=0, select bank1
  3928  0697' 0800'              	movf	sprintf@tmpval^(0+128),w
  3929  0698' 1283               	bcf	3,5	;RP0=0, select bank0
  3930  0699' 1303               	bcf	3,6	;RP1=0, select bank0
  3931  069A' 0084'              	movwf	___llmod@dividend
  3932  069B' 120A' 118A' 2000' 120A' 118A' 	fcall	___llmod
  3933  06A0' 1283               	bcf	3,5	;RP0=0, select bank0
  3934  06A1' 1303               	bcf	3,6	;RP1=0, select bank0
  3935  06A2' 0803'              	movf	?___llmod+3,w
  3936  06A3' 1683               	bsf	3,5	;RP0=1, select bank1
  3937  06A4' 1303               	bcf	3,6	;RP1=0, select bank1
  3938  06A5' 0080'              	movwf	(sprintf@tmpval+3)^(0+128)
  3939  06A6' 1283               	bcf	3,5	;RP0=0, select bank0
  3940  06A7' 1303               	bcf	3,6	;RP1=0, select bank0
  3941  06A8' 0802'              	movf	?___llmod+2,w
  3942  06A9' 1683               	bsf	3,5	;RP0=1, select bank1
  3943  06AA' 1303               	bcf	3,6	;RP1=0, select bank1
  3944  06AB' 0080'              	movwf	(sprintf@tmpval+2)^(0+128)
  3945  06AC' 1283               	bcf	3,5	;RP0=0, select bank0
  3946  06AD' 1303               	bcf	3,6	;RP1=0, select bank0
  3947  06AE' 0801'              	movf	?___llmod+1,w
  3948  06AF' 1683               	bsf	3,5	;RP0=1, select bank1
  3949  06B0' 1303               	bcf	3,6	;RP1=0, select bank1
  3950  06B1' 0080'              	movwf	(sprintf@tmpval+1)^(0+128)
  3951  06B2' 1283               	bcf	3,5	;RP0=0, select bank0
  3952  06B3' 1303               	bcf	3,6	;RP1=0, select bank0
  3953  06B4' 0800'              	movf	?___llmod,w
  3954  06B5' 1683               	bsf	3,5	;RP0=1, select bank1
  3955  06B6' 1303               	bcf	3,6	;RP1=0, select bank1
  3956  06B7' 0080'              	movwf	sprintf@tmpval^(0+128)
  3957                           
  3958                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
  3959  06B8' 0800'              	movf	sprintf@sp^(0+128),w
  3960  06B9' 0084               	movwf	4
  3961  06BA' 0800'              	movf	sprintf@tmpval^(0+128),w
  3962  06BB' 3E30               	addlw	48
  3963  06BC' 1783               	bsf	3,7	;select IRP bank2
  3964  06BD' 0080               	movwf	0
  3965  06BE' 3001               	movlw	1
  3966  06BF' 00FF               	movwf	127
  3967  06C0' 087F               	movf	127,w
  3968  06C1' 0780'              	addwf	sprintf@sp^(0+128),f
  3969                           
  3970                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
  3971  06C2' 0800'              	movf	sprintf@c^(0+128),w
  3972  06C3' 0080'              	movwf	??_sprintf^(0+128)
  3973  06C4' 3001               	movlw	1
  3974  06C5'                    u6145:
  3975  06C5' 1003               	clrc
  3976  06C6' 0D80'              	rlf	??_sprintf^(0+128),f
  3977  06C7' 3EFF               	addlw	-1
  3978  06C8' 1D03               	skipz
  3979  06C9' 2800'              	goto	u6145
  3980  06CA' 1003               	clrc
  3981  06CB' 0D00'              	rlf	??_sprintf^(0+128),w
  3982  06CC' 3E00'              	addlw	low (_dpowers| (0+32768))
  3983  06CD' 0084               	movwf	4
  3984  06CE' 3000'              	movlw	high (_dpowers| (0+32768))
  3985  06CF' 1803               	skipnc
  3986  06D0' 3E01               	addlw	1
  3987  06D1' 1283               	bcf	3,5	;RP0=0, select bank0
  3988  06D2' 1303               	bcf	3,6	;RP1=0, select bank0
  3989  06D3' 00FF               	movwf	127
  3990  06D4' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  3991  06D9' 0080'              	movwf	___llmod@divisor
  3992  06DA' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  3993  06DF' 0081'              	movwf	___llmod@divisor+1
  3994  06E0' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  3995  06E5' 0082'              	movwf	___llmod@divisor+2
  3996  06E6' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  3997  06EB' 0083'              	movwf	___llmod@divisor+3
  3998  06EC' 1683               	bsf	3,5	;RP0=1, select bank1
  3999  06ED' 1303               	bcf	3,6	;RP1=0, select bank1
  4000  06EE' 0800'              	movf	(sprintf@val+3)^(0+128),w
  4001  06EF' 1283               	bcf	3,5	;RP0=0, select bank0
  4002  06F0' 1303               	bcf	3,6	;RP1=0, select bank0
  4003  06F1' 0087'              	movwf	___llmod@dividend+3
  4004  06F2' 1683               	bsf	3,5	;RP0=1, select bank1
  4005  06F3' 1303               	bcf	3,6	;RP1=0, select bank1
  4006  06F4' 0800'              	movf	(sprintf@val+2)^(0+128),w
  4007  06F5' 1283               	bcf	3,5	;RP0=0, select bank0
  4008  06F6' 1303               	bcf	3,6	;RP1=0, select bank0
  4009  06F7' 0086'              	movwf	___llmod@dividend+2
  4010  06F8' 1683               	bsf	3,5	;RP0=1, select bank1
  4011  06F9' 1303               	bcf	3,6	;RP1=0, select bank1
  4012  06FA' 0800'              	movf	(sprintf@val+1)^(0+128),w
  4013  06FB' 1283               	bcf	3,5	;RP0=0, select bank0
  4014  06FC' 1303               	bcf	3,6	;RP1=0, select bank0
  4015  06FD' 0085'              	movwf	___llmod@dividend+1
  4016  06FE' 1683               	bsf	3,5	;RP0=1, select bank1
  4017  06FF' 1303               	bcf	3,6	;RP1=0, select bank1
  4018  0700' 0800'              	movf	sprintf@val^(0+128),w
  4019  0701' 1283               	bcf	3,5	;RP0=0, select bank0
  4020  0702' 1303               	bcf	3,6	;RP1=0, select bank0
  4021  0703' 0084'              	movwf	___llmod@dividend
  4022  0704' 120A' 118A' 2000' 120A' 118A' 	fcall	___llmod
  4023  0709' 1283               	bcf	3,5	;RP0=0, select bank0
  4024  070A' 1303               	bcf	3,6	;RP1=0, select bank0
  4025  070B' 0803'              	movf	?___llmod+3,w
  4026  070C' 1683               	bsf	3,5	;RP0=1, select bank1
  4027  070D' 1303               	bcf	3,6	;RP1=0, select bank1
  4028  070E' 0080'              	movwf	(sprintf@val+3)^(0+128)
  4029  070F' 1283               	bcf	3,5	;RP0=0, select bank0
  4030  0710' 1303               	bcf	3,6	;RP1=0, select bank0
  4031  0711' 0802'              	movf	?___llmod+2,w
  4032  0712' 1683               	bsf	3,5	;RP0=1, select bank1
  4033  0713' 1303               	bcf	3,6	;RP1=0, select bank1
  4034  0714' 0080'              	movwf	(sprintf@val+2)^(0+128)
  4035  0715' 1283               	bcf	3,5	;RP0=0, select bank0
  4036  0716' 1303               	bcf	3,6	;RP1=0, select bank0
  4037  0717' 0801'              	movf	?___llmod+1,w
  4038  0718' 1683               	bsf	3,5	;RP0=1, select bank1
  4039  0719' 1303               	bcf	3,6	;RP1=0, select bank1
  4040  071A' 0080'              	movwf	(sprintf@val+1)^(0+128)
  4041  071B' 1283               	bcf	3,5	;RP0=0, select bank0
  4042  071C' 1303               	bcf	3,6	;RP1=0, select bank0
  4043  071D' 0800'              	movf	?___llmod,w
  4044  071E' 2800'              	goto	L4
  4045  071F'                    l3703:
  4046                           
  4047                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
  4048  071F' 0800'              	movf	sprintf@sp^(0+128),w
  4049  0720' 0084               	movwf	4
  4050  0721' 3030               	movlw	48
  4051  0722' 1783               	bsf	3,7	;select IRP bank2
  4052  0723' 0080               	movwf	0
  4053  0724' 3001               	movlw	1
  4054  0725' 00FF               	movwf	127
  4055  0726' 087F               	movf	127,w
  4056  0727' 0780'              	addwf	sprintf@sp^(0+128),f
  4057                           
  4058                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1263:     prec--;
  4059  0728' 30FF               	movlw	255
  4060  0729' 0780'              	addwf	sprintf@prec^(0+128),f
  4061  072A' 1803               	skipnc
  4062  072B' 0A80'              	incf	(sprintf@prec+1)^(0+128),f
  4063  072C' 30FF               	movlw	255
  4064  072D' 0780'              	addwf	(sprintf@prec+1)^(0+128),f
  4065  072E'                    l3709:
  4066                           
  4067                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
  4068  072E' 0800'              	movf	sprintf@prec^(0+128),w
  4069  072F' 0400'              	iorwf	(sprintf@prec+1)^(0+128),w
  4070  0730' 1903               	btfsc	3,2
  4071  0731' 2800'              	goto	l3795
  4072  0732' 2800'              	goto	l3703
  4073  0733'                    l307:	
  4074                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1272:   }
  4075                           
  4076                           
  4077                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1277:   if((flag 
      +                          & 0x40) == 0x00)
  4078  0733' 120A' 118A' 1B00'  	btfsc	sprintf@flag^(0+128),6
  4079  0736' 2800' 120A' 118A'  	goto	l3721
  4080                           
  4081                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           long)(*(int *)__va_arg((*(int **)ap), (int)0));
  4082  0739' 0800'              	movf	sprintf@ap^(0+128),w
  4083  073A' 0084               	movwf	4
  4084  073B' 1383               	bcf	3,7	;select IRP bank0
  4085  073C' 0800               	movf	0,w
  4086  073D' 0080'              	movwf	??_sprintf^(0+128)
  4087  073E' 0A84               	incf	4,f
  4088  073F' 0800               	movf	0,w
  4089  0740' 0081'              	movwf	(??_sprintf^(0+128)+1)
  4090  0741' 0800'              	movf	??_sprintf^(0+128),w
  4091  0742' 0080'              	movwf	sprintf@val^(0+128)
  4092  0743' 0800'              	movf	(??_sprintf+1)^(0+128),w
  4093  0744' 0080'              	movwf	(sprintf@val+1)^(0+128)
  4094  0745' 3000               	movlw	0
  4095  0746' 1B80'              	btfsc	(sprintf@val+1)^(0+128),7
  4096  0747' 30FF               	movlw	255
  4097  0748' 0080'              	movwf	(sprintf@val+2)^(0+128)
  4098  0749' 0080'              	movwf	(sprintf@val+3)^(0+128)
  4099  074A' 3002               	movlw	2
  4100  074B' 00FF               	movwf	127
  4101  074C' 087F               	movf	127,w
  4102  074D' 0780'              	addwf	sprintf@ap^(0+128),f
  4103                           
  4104                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1287:    if((long
      +                          )val < 0) {
  4105  074E' 1F80'              	btfss	(sprintf@val+3)^(0+128),7
  4106  074F' 2800'              	goto	L11
  4107                           
  4108                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  4109  0750' 3003               	movlw	3
  4110  0751' 0480'              	iorwf	sprintf@flag^(0+128),f
  4111  0752' 3000               	movlw	0
  4112  0753' 0480'              	iorwf	(sprintf@flag+1)^(0+128),f
  4113                           
  4114                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  4115  0754' 0980'              	comf	sprintf@val^(0+128),f
  4116  0755' 0980'              	comf	(sprintf@val+1)^(0+128),f
  4117  0756' 0980'              	comf	(sprintf@val+2)^(0+128),f
  4118  0757' 0980'              	comf	(sprintf@val+3)^(0+128),f
  4119  0758' 0A80'              	incf	sprintf@val^(0+128),f
  4120  0759' 1903               	skipnz
  4121  075A' 0A80'              	incf	(sprintf@val+1)^(0+128),f
  4122  075B' 1903               	skipnz
  4123  075C' 0A80'              	incf	(sprintf@val+2)^(0+128),f
  4124  075D' 1903               	skipnz
  4125  075E' 0A80'              	incf	(sprintf@val+3)^(0+128),f
  4126  075F'                    L11:
  4127  075F' 120A' 118A' 2800'  	goto	l3725
  4128  0762'                    L10:
  4129  0762'                    L9:
  4130  0762' 120A' 118A' 2800'  	ljmp	l3797
  4131                           
  4132                           	psect	text2
  4133  0000'                    __ptext2:	
  4134 ;; *************** function _scale *****************
  4135 ;; Defined at:
  4136 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c"
  4137 ;; Parameters:    Size  Location     Type
  4138 ;;  scl             1    wreg     char 
  4139 ;; Auto vars:     Size  Location     Type
  4140 ;;  scl             1   44[BANK0 ] char 
  4141 ;; Return value:  Size  Location     Type
  4142 ;;                  4   26[BANK0 ] char 
  4143 ;; Registers used:
  4144 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4145 ;; Tracked objects:
  4146 ;;		On entry : 0/0
  4147 ;;		On exit  : 0/0
  4148 ;;		Unchanged: 0/0
  4149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4150 ;;      Params:         0       4       0       0       0
  4151 ;;      Locals:         0       5       0       0       0
  4152 ;;      Temps:          0      10       0       0       0
  4153 ;;      Totals:         0      19       0       0       0
  4154 ;;Total ram usage:       19 bytes
  4155 ;; Hardware stack levels used: 1
  4156 ;; Hardware stack levels required when called: 2
  4157 ;; This function calls:
  4158 ;;		___awdiv
  4159 ;;		___awmod
  4160 ;;		___flmul
  4161 ;; This function is called by:
  4162 ;;		_sprintf
  4163 ;; This function uses a non-reentrant model
  4164 ;;
  4165                           
  4166  0000'                    _scale:	
  4167                           ;psect for function _scale
  4168                           
  4169                           
  4170                           ;incstack = 0
  4171                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4172                           ;scale@scl stored from wreg
  4173  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  4174  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  4175  0002' 00AC'              	movwf	scale@scl
  4176                           
  4177                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  4178  0003' 1FAC'              	btfss	scale@scl,7
  4179  0004' 2800'              	goto	l3125
  4180                           
  4181                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  4182  0005' 09AC'              	comf	scale@scl,f
  4183  0006' 0AAC'              	incf	scale@scl,f
  4184                           
  4185                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  4186  0007' 082C'              	movf	scale@scl,w
  4187  0008' 3A80               	xorlw	128
  4188  0009' 3E12               	addlw	-238
  4189  000A' 1C03               	skipc
  4190  000B' 2800'              	goto	l3115
  4191                           
  4192                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  4193  000C' 300A               	movlw	10
  4194  000D' 0086'              	movwf	___awdiv@divisor
  4195  000E' 3000               	movlw	0
  4196  000F' 0087'              	movwf	___awdiv@divisor+1
  4197  0010' 082C'              	movf	scale@scl,w
  4198  0011' 0082'              	movwf	___awmod@dividend
  4199  0012' 0183'              	clrf	___awmod@dividend+1
  4200  0013' 1B82'              	btfsc	___awmod@dividend,7
  4201  0014' 0383'              	decf	___awmod@dividend+1,f
  4202  0015' 3064               	movlw	100
  4203  0016' 0080'              	movwf	___awmod@divisor
  4204  0017' 3000               	movlw	0
  4205  0018' 0081'              	movwf	___awmod@divisor+1
  4206  0019' 120A' 118A' 2000' 120A' 118A' 	fcall	___awmod
  4207  001E' 0801'              	movf	?___awmod+1,w
  4208  001F' 0089'              	movwf	___awdiv@dividend+1
  4209  0020' 0800'              	movf	?___awmod,w
  4210  0021' 0088'              	movwf	___awdiv@dividend
  4211  0022' 120A' 118A' 2000' 120A' 118A' 	fcall	___awdiv
  4212  0027' 0806'              	movf	?___awdiv,w
  4213  0028' 1283               	bcf	3,5	;RP0=0, select bank0
  4214  0029' 1303               	bcf	3,6	;RP1=0, select bank0
  4215  002A' 009E'              	movwf	??_scale
  4216  002B' 3001               	movlw	1
  4217  002C'                    u4815:
  4218  002C' 1003               	clrc
  4219  002D' 0D9E'              	rlf	??_scale,f
  4220  002E' 3EFF               	addlw	-1
  4221  002F' 1D03               	skipz
  4222  0030' 2800'              	goto	u4815
  4223  0031' 1003               	clrc
  4224  0032' 0D1E'              	rlf	??_scale,w
  4225  0033' 3E24               	addlw	36
  4226  0034' 3E00'              	addlw	low (__npowers_| (0+32768))
  4227  0035' 0084               	movwf	4
  4228  0036' 3000'              	movlw	high (__npowers_| (0+32768))
  4229  0037' 1803               	skipnc
  4230  0038' 3E01               	addlw	1
  4231  0039' 00FF               	movwf	127
  4232  003A' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  4233  003F' 009F'              	movwf	??_scale+1
  4234  0040' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  4235  0045' 00A0'              	movwf	??_scale+2
  4236  0046' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  4237  004B' 00A1'              	movwf	??_scale+3
  4238  004C' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  4239  0051' 00A2'              	movwf	??_scale+4
  4240  0052' 0822'              	movf	??_scale+4,w
  4241  0053' 0083'              	movwf	___flmul@b+3
  4242  0054' 0821'              	movf	??_scale+3,w
  4243  0055' 0082'              	movwf	___flmul@b+2
  4244  0056' 0820'              	movf	??_scale+2,w
  4245  0057' 0081'              	movwf	___flmul@b+1
  4246  0058' 081F'              	movf	??_scale+1,w
  4247  0059' 0080'              	movwf	___flmul@b
  4248  005A' 3064               	movlw	100
  4249  005B' 0086'              	movwf	___awdiv@divisor
  4250  005C' 3000               	movlw	0
  4251  005D' 0087'              	movwf	___awdiv@divisor+1
  4252  005E' 082C'              	movf	scale@scl,w
  4253  005F' 0088'              	movwf	___awdiv@dividend
  4254  0060' 0189'              	clrf	___awdiv@dividend+1
  4255  0061' 1B88'              	btfsc	___awdiv@dividend,7
  4256  0062' 0389'              	decf	___awdiv@dividend+1,f
  4257  0063' 120A' 118A' 2000' 120A' 118A' 	fcall	___awdiv
  4258  0068' 0806'              	movf	?___awdiv,w
  4259  0069' 1283               	bcf	3,5	;RP0=0, select bank0
  4260  006A' 1303               	bcf	3,6	;RP1=0, select bank0
  4261  006B' 00A3'              	movwf	??_scale+5
  4262  006C' 3001               	movlw	1
  4263  006D'                    u4825:
  4264  006D' 1003               	clrc
  4265  006E' 0DA3'              	rlf	??_scale+5,f
  4266  006F' 3EFF               	addlw	-1
  4267  0070' 1D03               	skipz
  4268  0071' 2800'              	goto	u4825
  4269  0072' 1003               	clrc
  4270  0073' 0D23'              	rlf	??_scale+5,w
  4271  0074' 3E48               	addlw	72
  4272  0075' 3E00'              	addlw	low (__npowers_| (0+32768))
  4273  0076' 0084               	movwf	4
  4274  0077' 3000'              	movlw	high (__npowers_| (0+32768))
  4275  0078' 1803               	skipnc
  4276  0079' 3E01               	addlw	1
  4277  007A' 00FF               	movwf	127
  4278  007B' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  4279  0080' 00A4'              	movwf	??_scale+6
  4280  0081' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  4281  0086' 00A5'              	movwf	??_scale+7
  4282  0087' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  4283  008C' 00A6'              	movwf	??_scale+8
  4284  008D' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  4285  0092' 00A7'              	movwf	??_scale+9
  4286  0093' 0827'              	movf	??_scale+9,w
  4287  0094' 0087'              	movwf	___flmul@a+3
  4288  0095' 0826'              	movf	??_scale+8,w
  4289  0096' 0086'              	movwf	___flmul@a+2
  4290  0097' 0825'              	movf	??_scale+7,w
  4291  0098' 0085'              	movwf	___flmul@a+1
  4292  0099' 0824'              	movf	??_scale+6,w
  4293  009A' 0084'              	movwf	___flmul@a
  4294  009B' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  4295  00A0' 1283               	bcf	3,5	;RP0=0, select bank0
  4296  00A1' 1303               	bcf	3,6	;RP1=0, select bank0
  4297  00A2' 0803'              	movf	?___flmul+3,w
  4298  00A3' 00AB'              	movwf	_scale$873+3
  4299  00A4' 0802'              	movf	?___flmul+2,w
  4300  00A5' 00AA'              	movwf	_scale$873+2
  4301  00A6' 0801'              	movf	?___flmul+1,w
  4302  00A7' 00A9'              	movwf	_scale$873+1
  4303  00A8' 0800'              	movf	?___flmul,w
  4304  00A9' 00A8'              	movwf	_scale$873
  4305                           
  4306                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  4307  00AA' 300A               	movlw	10
  4308  00AB' 0080'              	movwf	___awmod@divisor
  4309  00AC' 3000               	movlw	0
  4310  00AD' 0081'              	movwf	___awmod@divisor+1
  4311  00AE' 082C'              	movf	scale@scl,w
  4312  00AF' 0082'              	movwf	___awmod@dividend
  4313  00B0' 0183'              	clrf	___awmod@dividend+1
  4314  00B1' 1B82'              	btfsc	___awmod@dividend,7
  4315  00B2' 0383'              	decf	___awmod@dividend+1,f
  4316  00B3' 120A' 118A' 2000' 120A' 118A' 	fcall	___awmod
  4317  00B8' 0800'              	movf	?___awmod,w
  4318  00B9' 1283               	bcf	3,5	;RP0=0, select bank0
  4319  00BA' 1303               	bcf	3,6	;RP1=0, select bank0
  4320  00BB' 009E'              	movwf	??_scale
  4321  00BC' 3001               	movlw	1
  4322  00BD'                    u4835:
  4323  00BD' 1003               	clrc
  4324  00BE' 0D9E'              	rlf	??_scale,f
  4325  00BF' 3EFF               	addlw	-1
  4326  00C0' 1D03               	skipz
  4327  00C1' 2800'              	goto	u4835
  4328  00C2' 1003               	clrc
  4329  00C3' 0D1E'              	rlf	??_scale,w
  4330  00C4' 3E00'              	addlw	low (__npowers_| (0+32768))
  4331  00C5' 0084               	movwf	4
  4332  00C6' 3000'              	movlw	high (__npowers_| (0+32768))
  4333  00C7' 1803               	skipnc
  4334  00C8' 3E01               	addlw	1
  4335  00C9' 00FF               	movwf	127
  4336  00CA' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  4337  00CF' 009F'              	movwf	??_scale+1
  4338  00D0' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  4339  00D5' 00A0'              	movwf	??_scale+2
  4340  00D6' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  4341  00DB' 00A1'              	movwf	??_scale+3
  4342  00DC' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  4343  00E1' 00A2'              	movwf	??_scale+4
  4344  00E2' 0822'              	movf	??_scale+4,w
  4345  00E3' 0083'              	movwf	___flmul@b+3
  4346  00E4' 0821'              	movf	??_scale+3,w
  4347  00E5' 0082'              	movwf	___flmul@b+2
  4348  00E6' 0820'              	movf	??_scale+2,w
  4349  00E7' 0081'              	movwf	___flmul@b+1
  4350  00E8' 081F'              	movf	??_scale+1,w
  4351  00E9' 0080'              	movwf	___flmul@b
  4352  00EA' 082B'              	movf	_scale$873+3,w
  4353  00EB' 0087'              	movwf	___flmul@a+3
  4354  00EC' 082A'              	movf	_scale$873+2,w
  4355  00ED' 0086'              	movwf	___flmul@a+2
  4356  00EE' 0829'              	movf	_scale$873+1,w
  4357  00EF' 0085'              	movwf	___flmul@a+1
  4358  00F0' 0828'              	movf	_scale$873,w
  4359  00F1' 0084'              	movwf	___flmul@a
  4360  00F2' 120A' 118A' 2000'  	fcall	___flmul
  4361  00F5' 1283               	bcf	3,5	;RP0=0, select bank0
  4362  00F6' 1303               	bcf	3,6	;RP1=0, select bank0
  4363  00F7' 0803'              	movf	?___flmul+3,w
  4364  00F8' 009D'              	movwf	?_scale+3
  4365  00F9' 0802'              	movf	?___flmul+2,w
  4366  00FA' 009C'              	movwf	?_scale+2
  4367  00FB' 0801'              	movf	?___flmul+1,w
  4368  00FC' 009B'              	movwf	?_scale+1
  4369  00FD' 0800'              	movf	?___flmul,w
  4370  00FE' 009A'              	movwf	?_scale
  4371  00FF' 0008               	return
  4372  0100'                    l3115:
  4373  0100' 082C'              	movf	scale@scl,w
  4374  0101' 3A80               	xorlw	128
  4375  0102' 3E75               	addlw	-139
  4376  0103' 1C03               	skipc
  4377  0104' 2800'              	goto	l3121
  4378                           
  4379                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  4380  0105' 300A               	movlw	10
  4381  0106' 0080'              	movwf	___awmod@divisor
  4382  0107' 3000               	movlw	0
  4383  0108' 0081'              	movwf	___awmod@divisor+1
  4384  0109' 082C'              	movf	scale@scl,w
  4385  010A' 0082'              	movwf	___awmod@dividend
  4386  010B' 0183'              	clrf	___awmod@dividend+1
  4387  010C' 1B82'              	btfsc	___awmod@dividend,7
  4388  010D' 0383'              	decf	___awmod@dividend+1,f
  4389  010E' 120A' 118A' 2000' 120A' 118A' 	fcall	___awmod
  4390  0113' 0800'              	movf	?___awmod,w
  4391  0114' 1283               	bcf	3,5	;RP0=0, select bank0
  4392  0115' 1303               	bcf	3,6	;RP1=0, select bank0
  4393  0116' 009E'              	movwf	??_scale
  4394  0117' 3001               	movlw	1
  4395  0118'                    u4855:
  4396  0118' 1003               	clrc
  4397  0119' 0D9E'              	rlf	??_scale,f
  4398  011A' 3EFF               	addlw	-1
  4399  011B' 1D03               	skipz
  4400  011C' 2800'              	goto	u4855
  4401  011D' 1003               	clrc
  4402  011E' 0D1E'              	rlf	??_scale,w
  4403  011F' 3E00'              	addlw	low (__npowers_| (0+32768))
  4404  0120' 0084               	movwf	4
  4405  0121' 3000'              	movlw	high (__npowers_| (0+32768))
  4406  0122' 1803               	skipnc
  4407  0123' 3E01               	addlw	1
  4408  0124' 00FF               	movwf	127
  4409  0125' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  4410  012A' 009F'              	movwf	??_scale+1
  4411  012B' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  4412  0130' 00A0'              	movwf	??_scale+2
  4413  0131' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  4414  0136' 00A1'              	movwf	??_scale+3
  4415  0137' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  4416  013C' 00A2'              	movwf	??_scale+4
  4417  013D' 0822'              	movf	??_scale+4,w
  4418  013E' 0083'              	movwf	___flmul@b+3
  4419  013F' 0821'              	movf	??_scale+3,w
  4420  0140' 0082'              	movwf	___flmul@b+2
  4421  0141' 0820'              	movf	??_scale+2,w
  4422  0142' 0081'              	movwf	___flmul@b+1
  4423  0143' 081F'              	movf	??_scale+1,w
  4424  0144' 0080'              	movwf	___flmul@b
  4425  0145' 300A               	movlw	10
  4426  0146' 0086'              	movwf	___awdiv@divisor
  4427  0147' 3000               	movlw	0
  4428  0148' 0087'              	movwf	___awdiv@divisor+1
  4429  0149' 082C'              	movf	scale@scl,w
  4430  014A' 0088'              	movwf	___awdiv@dividend
  4431  014B' 0189'              	clrf	___awdiv@dividend+1
  4432  014C' 1B88'              	btfsc	___awdiv@dividend,7
  4433  014D' 0389'              	decf	___awdiv@dividend+1,f
  4434  014E' 120A' 118A' 2000' 120A' 118A' 	fcall	___awdiv
  4435  0153' 0806'              	movf	?___awdiv,w
  4436  0154' 1283               	bcf	3,5	;RP0=0, select bank0
  4437  0155' 1303               	bcf	3,6	;RP1=0, select bank0
  4438  0156' 00A3'              	movwf	??_scale+5
  4439  0157' 3001               	movlw	1
  4440  0158'                    u4865:
  4441  0158' 1003               	clrc
  4442  0159' 0DA3'              	rlf	??_scale+5,f
  4443  015A' 3EFF               	addlw	-1
  4444  015B' 1D03               	skipz
  4445  015C' 2800'              	goto	u4865
  4446  015D' 1003               	clrc
  4447  015E' 0D23'              	rlf	??_scale+5,w
  4448  015F' 3E24               	addlw	36
  4449  0160' 3E00'              	addlw	low (__npowers_| (0+32768))
  4450  0161' 0084               	movwf	4
  4451  0162' 3000'              	movlw	high (__npowers_| (0+32768))
  4452  0163' 1803               	skipnc
  4453  0164' 3E01               	addlw	1
  4454  0165' 00FF               	movwf	127
  4455  0166' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  4456  016B' 00A4'              	movwf	??_scale+6
  4457  016C' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  4458  0171' 00A5'              	movwf	??_scale+7
  4459  0172' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  4460  0177' 00A6'              	movwf	??_scale+8
  4461  0178' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  4462  017D' 00A7'              	movwf	??_scale+9
  4463  017E' 0827'              	movf	??_scale+9,w
  4464  017F' 0087'              	movwf	___flmul@a+3
  4465  0180' 0826'              	movf	??_scale+8,w
  4466  0181' 0086'              	movwf	___flmul@a+2
  4467  0182' 0825'              	movf	??_scale+7,w
  4468  0183' 0085'              	movwf	___flmul@a+1
  4469  0184' 0824'              	movf	??_scale+6,w
  4470  0185' 0084'              	movwf	___flmul@a
  4471  0186' 120A' 118A' 2000'  	fcall	___flmul
  4472  0189' 1283               	bcf	3,5	;RP0=0, select bank0
  4473  018A' 1303               	bcf	3,6	;RP1=0, select bank0
  4474  018B' 0803'              	movf	?___flmul+3,w
  4475  018C' 009D'              	movwf	?_scale+3
  4476  018D' 0802'              	movf	?___flmul+2,w
  4477  018E' 009C'              	movwf	?_scale+2
  4478  018F' 0801'              	movf	?___flmul+1,w
  4479  0190' 009B'              	movwf	?_scale+1
  4480  0191' 0800'              	movf	?___flmul,w
  4481  0192' 009A'              	movwf	?_scale
  4482  0193' 0008               	return
  4483  0194'                    l3121:
  4484                           
  4485                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  4486  0194' 082C'              	movf	scale@scl,w
  4487  0195' 009E'              	movwf	??_scale
  4488  0196' 3001               	movlw	1
  4489  0197'                    u4875:
  4490  0197' 1003               	clrc
  4491  0198' 0D9E'              	rlf	??_scale,f
  4492  0199' 3EFF               	addlw	-1
  4493  019A' 1D03               	skipz
  4494  019B' 2800'              	goto	u4875
  4495  019C' 1003               	clrc
  4496  019D' 0D1E'              	rlf	??_scale,w
  4497  019E' 3E00'              	addlw	low (__npowers_| (0+32768))
  4498  019F' 0084               	movwf	4
  4499  01A0' 3000'              	movlw	high (__npowers_| (0+32768))
  4500  01A1' 1803               	skipnc
  4501  01A2' 3E01               	addlw	1
  4502  01A3' 00FF               	movwf	127
  4503  01A4' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  4504  01A9' 009F'              	movwf	??_scale+1
  4505  01AA' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  4506  01AF' 00A0'              	movwf	??_scale+2
  4507  01B0' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  4508  01B5' 00A1'              	movwf	??_scale+3
  4509  01B6' 120A' 118A' 2000'  	fcall	stringtab
  4510  01B9' 00A2'              	movwf	??_scale+4
  4511  01BA' 0822'              	movf	??_scale+4,w
  4512  01BB' 009D'              	movwf	?_scale+3
  4513  01BC' 0821'              	movf	??_scale+3,w
  4514  01BD' 009C'              	movwf	?_scale+2
  4515  01BE' 0820'              	movf	??_scale+2,w
  4516  01BF' 009B'              	movwf	?_scale+1
  4517  01C0' 081F'              	movf	??_scale+1,w
  4518  01C1' 009A'              	movwf	?_scale
  4519  01C2' 0008               	return
  4520  01C3'                    l3125:
  4521                           
  4522                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  4523  01C3' 082C'              	movf	scale@scl,w
  4524  01C4' 3A80               	xorlw	128
  4525  01C5' 3E12               	addlw	-238
  4526  01C6' 1C03               	skipc
  4527  01C7' 2800'              	goto	l3133
  4528                           
  4529                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4530  01C8' 300A               	movlw	10
  4531  01C9' 0086'              	movwf	___awdiv@divisor
  4532  01CA' 3000               	movlw	0
  4533  01CB' 0087'              	movwf	___awdiv@divisor+1
  4534  01CC' 082C'              	movf	scale@scl,w
  4535  01CD' 0082'              	movwf	___awmod@dividend
  4536  01CE' 0183'              	clrf	___awmod@dividend+1
  4537  01CF' 1B82'              	btfsc	___awmod@dividend,7
  4538  01D0' 0383'              	decf	___awmod@dividend+1,f
  4539  01D1' 3064               	movlw	100
  4540  01D2' 0080'              	movwf	___awmod@divisor
  4541  01D3' 3000               	movlw	0
  4542  01D4' 0081'              	movwf	___awmod@divisor+1
  4543  01D5' 120A' 118A' 2000' 120A' 118A' 	fcall	___awmod
  4544  01DA' 0801'              	movf	?___awmod+1,w
  4545  01DB' 0089'              	movwf	___awdiv@dividend+1
  4546  01DC' 0800'              	movf	?___awmod,w
  4547  01DD' 0088'              	movwf	___awdiv@dividend
  4548  01DE' 120A' 118A' 2000' 120A' 118A' 	fcall	___awdiv
  4549  01E3' 0806'              	movf	?___awdiv,w
  4550  01E4' 1283               	bcf	3,5	;RP0=0, select bank0
  4551  01E5' 1303               	bcf	3,6	;RP1=0, select bank0
  4552  01E6' 009E'              	movwf	??_scale
  4553  01E7' 3001               	movlw	1
  4554  01E8'                    u4895:
  4555  01E8' 1003               	clrc
  4556  01E9' 0D9E'              	rlf	??_scale,f
  4557  01EA' 3EFF               	addlw	-1
  4558  01EB' 1D03               	skipz
  4559  01EC' 2800'              	goto	u4895
  4560  01ED' 1003               	clrc
  4561  01EE' 0D1E'              	rlf	??_scale,w
  4562  01EF' 3E24               	addlw	36
  4563  01F0' 3E00'              	addlw	low (__powers_| (0+32768))
  4564  01F1' 0084               	movwf	4
  4565  01F2' 3000'              	movlw	high (__powers_| (0+32768))
  4566  01F3' 1803               	skipnc
  4567  01F4' 3E01               	addlw	1
  4568  01F5' 00FF               	movwf	127
  4569  01F6' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  4570  01FB' 009F'              	movwf	??_scale+1
  4571  01FC' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  4572  0201' 00A0'              	movwf	??_scale+2
  4573  0202' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  4574  0207' 00A1'              	movwf	??_scale+3
  4575  0208' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  4576  020D' 00A2'              	movwf	??_scale+4
  4577  020E' 0822'              	movf	??_scale+4,w
  4578  020F' 0083'              	movwf	___flmul@b+3
  4579  0210' 0821'              	movf	??_scale+3,w
  4580  0211' 0082'              	movwf	___flmul@b+2
  4581  0212' 0820'              	movf	??_scale+2,w
  4582  0213' 0081'              	movwf	___flmul@b+1
  4583  0214' 081F'              	movf	??_scale+1,w
  4584  0215' 0080'              	movwf	___flmul@b
  4585  0216' 3064               	movlw	100
  4586  0217' 0086'              	movwf	___awdiv@divisor
  4587  0218' 3000               	movlw	0
  4588  0219' 0087'              	movwf	___awdiv@divisor+1
  4589  021A' 082C'              	movf	scale@scl,w
  4590  021B' 0088'              	movwf	___awdiv@dividend
  4591  021C' 0189'              	clrf	___awdiv@dividend+1
  4592  021D' 1B88'              	btfsc	___awdiv@dividend,7
  4593  021E' 0389'              	decf	___awdiv@dividend+1,f
  4594  021F' 120A' 118A' 2000' 120A' 118A' 	fcall	___awdiv
  4595  0224' 0806'              	movf	?___awdiv,w
  4596  0225' 1283               	bcf	3,5	;RP0=0, select bank0
  4597  0226' 1303               	bcf	3,6	;RP1=0, select bank0
  4598  0227' 00A3'              	movwf	??_scale+5
  4599  0228' 3001               	movlw	1
  4600  0229'                    u4905:
  4601  0229' 1003               	clrc
  4602  022A' 0DA3'              	rlf	??_scale+5,f
  4603  022B' 3EFF               	addlw	-1
  4604  022C' 1D03               	skipz
  4605  022D' 2800'              	goto	u4905
  4606  022E' 1003               	clrc
  4607  022F' 0D23'              	rlf	??_scale+5,w
  4608  0230' 3E48               	addlw	72
  4609  0231' 3E00'              	addlw	low (__powers_| (0+32768))
  4610  0232' 0084               	movwf	4
  4611  0233' 3000'              	movlw	high (__powers_| (0+32768))
  4612  0234' 1803               	skipnc
  4613  0235' 3E01               	addlw	1
  4614  0236' 00FF               	movwf	127
  4615  0237' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  4616  023C' 00A4'              	movwf	??_scale+6
  4617  023D' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  4618  0242' 00A5'              	movwf	??_scale+7
  4619  0243' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  4620  0248' 00A6'              	movwf	??_scale+8
  4621  0249' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  4622  024E' 00A7'              	movwf	??_scale+9
  4623  024F' 0827'              	movf	??_scale+9,w
  4624  0250' 0087'              	movwf	___flmul@a+3
  4625  0251' 0826'              	movf	??_scale+8,w
  4626  0252' 0086'              	movwf	___flmul@a+2
  4627  0253' 0825'              	movf	??_scale+7,w
  4628  0254' 0085'              	movwf	___flmul@a+1
  4629  0255' 0824'              	movf	??_scale+6,w
  4630  0256' 0084'              	movwf	___flmul@a
  4631  0257' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  4632  025C' 1283               	bcf	3,5	;RP0=0, select bank0
  4633  025D' 1303               	bcf	3,6	;RP1=0, select bank0
  4634  025E' 0803'              	movf	?___flmul+3,w
  4635  025F' 00AB'              	movwf	_scale$873+3
  4636  0260' 0802'              	movf	?___flmul+2,w
  4637  0261' 00AA'              	movwf	_scale$873+2
  4638  0262' 0801'              	movf	?___flmul+1,w
  4639  0263' 00A9'              	movwf	_scale$873+1
  4640  0264' 0800'              	movf	?___flmul,w
  4641  0265' 00A8'              	movwf	_scale$873
  4642                           
  4643                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4644  0266' 300A               	movlw	10
  4645  0267' 0080'              	movwf	___awmod@divisor
  4646  0268' 3000               	movlw	0
  4647  0269' 0081'              	movwf	___awmod@divisor+1
  4648  026A' 082C'              	movf	scale@scl,w
  4649  026B' 0082'              	movwf	___awmod@dividend
  4650  026C' 0183'              	clrf	___awmod@dividend+1
  4651  026D' 1B82'              	btfsc	___awmod@dividend,7
  4652  026E' 0383'              	decf	___awmod@dividend+1,f
  4653  026F' 120A' 118A' 2000' 120A' 118A' 	fcall	___awmod
  4654  0274' 0800'              	movf	?___awmod,w
  4655  0275' 1283               	bcf	3,5	;RP0=0, select bank0
  4656  0276' 1303               	bcf	3,6	;RP1=0, select bank0
  4657  0277' 009E'              	movwf	??_scale
  4658  0278' 3001               	movlw	1
  4659  0279'                    u4915:
  4660  0279' 1003               	clrc
  4661  027A' 0D9E'              	rlf	??_scale,f
  4662  027B' 3EFF               	addlw	-1
  4663  027C' 1D03               	skipz
  4664  027D' 2800'              	goto	u4915
  4665  027E' 1003               	clrc
  4666  027F' 0D1E'              	rlf	??_scale,w
  4667  0280' 3E00'              	addlw	low (__powers_| (0+32768))
  4668  0281' 0084               	movwf	4
  4669  0282' 3000'              	movlw	high (__powers_| (0+32768))
  4670  0283' 1803               	skipnc
  4671  0284' 3E01               	addlw	1
  4672  0285' 00FF               	movwf	127
  4673  0286' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  4674  028B' 009F'              	movwf	??_scale+1
  4675  028C' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  4676  0291' 00A0'              	movwf	??_scale+2
  4677  0292' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  4678  0297' 00A1'              	movwf	??_scale+3
  4679  0298' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  4680  029D' 00A2'              	movwf	??_scale+4
  4681  029E' 0822'              	movf	??_scale+4,w
  4682  029F' 0083'              	movwf	___flmul@b+3
  4683  02A0' 0821'              	movf	??_scale+3,w
  4684  02A1' 0082'              	movwf	___flmul@b+2
  4685  02A2' 0820'              	movf	??_scale+2,w
  4686  02A3' 0081'              	movwf	___flmul@b+1
  4687  02A4' 081F'              	movf	??_scale+1,w
  4688  02A5' 0080'              	movwf	___flmul@b
  4689  02A6' 082B'              	movf	_scale$873+3,w
  4690  02A7' 0087'              	movwf	___flmul@a+3
  4691  02A8' 082A'              	movf	_scale$873+2,w
  4692  02A9' 0086'              	movwf	___flmul@a+2
  4693  02AA' 0829'              	movf	_scale$873+1,w
  4694  02AB' 0085'              	movwf	___flmul@a+1
  4695  02AC' 0828'              	movf	_scale$873,w
  4696  02AD' 0084'              	movwf	___flmul@a
  4697  02AE' 120A' 118A' 2000'  	fcall	___flmul
  4698  02B1' 1283               	bcf	3,5	;RP0=0, select bank0
  4699  02B2' 1303               	bcf	3,6	;RP1=0, select bank0
  4700  02B3' 0803'              	movf	?___flmul+3,w
  4701  02B4' 009D'              	movwf	?_scale+3
  4702  02B5' 0802'              	movf	?___flmul+2,w
  4703  02B6' 009C'              	movwf	?_scale+2
  4704  02B7' 0801'              	movf	?___flmul+1,w
  4705  02B8' 009B'              	movwf	?_scale+1
  4706  02B9' 0800'              	movf	?___flmul,w
  4707  02BA' 009A'              	movwf	?_scale
  4708  02BB' 0008               	return
  4709  02BC'                    l3133:
  4710  02BC' 082C'              	movf	scale@scl,w
  4711  02BD' 3A80               	xorlw	128
  4712  02BE' 3E75               	addlw	-139
  4713  02BF' 1C03               	skipc
  4714  02C0' 2800'              	goto	l3139
  4715                           
  4716                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  4717  02C1' 300A               	movlw	10
  4718  02C2' 0080'              	movwf	___awmod@divisor
  4719  02C3' 3000               	movlw	0
  4720  02C4' 0081'              	movwf	___awmod@divisor+1
  4721  02C5' 082C'              	movf	scale@scl,w
  4722  02C6' 0082'              	movwf	___awmod@dividend
  4723  02C7' 0183'              	clrf	___awmod@dividend+1
  4724  02C8' 1B82'              	btfsc	___awmod@dividend,7
  4725  02C9' 0383'              	decf	___awmod@dividend+1,f
  4726  02CA' 120A' 118A' 2000' 120A' 118A' 	fcall	___awmod
  4727  02CF' 0800'              	movf	?___awmod,w
  4728  02D0' 1283               	bcf	3,5	;RP0=0, select bank0
  4729  02D1' 1303               	bcf	3,6	;RP1=0, select bank0
  4730  02D2' 009E'              	movwf	??_scale
  4731  02D3' 3001               	movlw	1
  4732  02D4'                    u4935:
  4733  02D4' 1003               	clrc
  4734  02D5' 0D9E'              	rlf	??_scale,f
  4735  02D6' 3EFF               	addlw	-1
  4736  02D7' 1D03               	skipz
  4737  02D8' 2800'              	goto	u4935
  4738  02D9' 1003               	clrc
  4739  02DA' 0D1E'              	rlf	??_scale,w
  4740  02DB' 3E00'              	addlw	low (__powers_| (0+32768))
  4741  02DC' 0084               	movwf	4
  4742  02DD' 3000'              	movlw	high (__powers_| (0+32768))
  4743  02DE' 1803               	skipnc
  4744  02DF' 3E01               	addlw	1
  4745  02E0' 00FF               	movwf	127
  4746  02E1' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  4747  02E6' 009F'              	movwf	??_scale+1
  4748  02E7' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  4749  02EC' 00A0'              	movwf	??_scale+2
  4750  02ED' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  4751  02F2' 00A1'              	movwf	??_scale+3
  4752  02F3' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  4753  02F8' 00A2'              	movwf	??_scale+4
  4754  02F9' 0822'              	movf	??_scale+4,w
  4755  02FA' 0083'              	movwf	___flmul@b+3
  4756  02FB' 0821'              	movf	??_scale+3,w
  4757  02FC' 0082'              	movwf	___flmul@b+2
  4758  02FD' 0820'              	movf	??_scale+2,w
  4759  02FE' 0081'              	movwf	___flmul@b+1
  4760  02FF' 081F'              	movf	??_scale+1,w
  4761  0300' 0080'              	movwf	___flmul@b
  4762  0301' 300A               	movlw	10
  4763  0302' 0086'              	movwf	___awdiv@divisor
  4764  0303' 3000               	movlw	0
  4765  0304' 0087'              	movwf	___awdiv@divisor+1
  4766  0305' 082C'              	movf	scale@scl,w
  4767  0306' 0088'              	movwf	___awdiv@dividend
  4768  0307' 0189'              	clrf	___awdiv@dividend+1
  4769  0308' 1B88'              	btfsc	___awdiv@dividend,7
  4770  0309' 0389'              	decf	___awdiv@dividend+1,f
  4771  030A' 120A' 118A' 2000' 120A' 118A' 	fcall	___awdiv
  4772  030F' 0806'              	movf	?___awdiv,w
  4773  0310' 1283               	bcf	3,5	;RP0=0, select bank0
  4774  0311' 1303               	bcf	3,6	;RP1=0, select bank0
  4775  0312' 00A3'              	movwf	??_scale+5
  4776  0313' 3001               	movlw	1
  4777  0314'                    u4945:
  4778  0314' 1003               	clrc
  4779  0315' 0DA3'              	rlf	??_scale+5,f
  4780  0316' 3EFF               	addlw	-1
  4781  0317' 1D03               	skipz
  4782  0318' 2800'              	goto	u4945
  4783  0319' 1003               	clrc
  4784  031A' 0D23'              	rlf	??_scale+5,w
  4785  031B' 3E24               	addlw	36
  4786  031C' 3E00'              	addlw	low (__powers_| (0+32768))
  4787  031D' 0084               	movwf	4
  4788  031E' 3000'              	movlw	high (__powers_| (0+32768))
  4789  031F' 1803               	skipnc
  4790  0320' 3E01               	addlw	1
  4791  0321' 00FF               	movwf	127
  4792  0322' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  4793  0327' 00A4'              	movwf	??_scale+6
  4794  0328' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  4795  032D' 00A5'              	movwf	??_scale+7
  4796  032E' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  4797  0333' 00A6'              	movwf	??_scale+8
  4798  0334' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  4799  0339' 00A7'              	movwf	??_scale+9
  4800  033A' 0827'              	movf	??_scale+9,w
  4801  033B' 0087'              	movwf	___flmul@a+3
  4802  033C' 0826'              	movf	??_scale+8,w
  4803  033D' 0086'              	movwf	___flmul@a+2
  4804  033E' 0825'              	movf	??_scale+7,w
  4805  033F' 0085'              	movwf	___flmul@a+1
  4806  0340' 0824'              	movf	??_scale+6,w
  4807  0341' 0084'              	movwf	___flmul@a
  4808  0342' 120A' 118A' 2000'  	fcall	___flmul
  4809  0345' 1283               	bcf	3,5	;RP0=0, select bank0
  4810  0346' 1303               	bcf	3,6	;RP1=0, select bank0
  4811  0347' 0803'              	movf	?___flmul+3,w
  4812  0348' 009D'              	movwf	?_scale+3
  4813  0349' 0802'              	movf	?___flmul+2,w
  4814  034A' 009C'              	movwf	?_scale+2
  4815  034B' 0801'              	movf	?___flmul+1,w
  4816  034C' 009B'              	movwf	?_scale+1
  4817  034D' 0800'              	movf	?___flmul,w
  4818  034E' 009A'              	movwf	?_scale
  4819  034F' 0008               	return
  4820  0350'                    l3139:
  4821                           
  4822                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  4823  0350' 082C'              	movf	scale@scl,w
  4824  0351' 009E'              	movwf	??_scale
  4825  0352' 3001               	movlw	1
  4826  0353'                    u4955:
  4827  0353' 1003               	clrc
  4828  0354' 0D9E'              	rlf	??_scale,f
  4829  0355' 3EFF               	addlw	-1
  4830  0356' 1D03               	skipz
  4831  0357' 2800'              	goto	u4955
  4832  0358' 1003               	clrc
  4833  0359' 0D1E'              	rlf	??_scale,w
  4834  035A' 3E00'              	addlw	low (__powers_| (0+32768))
  4835  035B' 0084               	movwf	4
  4836  035C' 3000'              	movlw	high (__powers_| (0+32768))
  4837  035D' 1803               	skipnc
  4838  035E' 3E01               	addlw	1
  4839  035F' 00FF               	movwf	127
  4840  0360' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  4841  0365' 009F'              	movwf	??_scale+1
  4842  0366' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  4843  036B' 00A0'              	movwf	??_scale+2
  4844  036C' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  4845  0371' 00A1'              	movwf	??_scale+3
  4846  0372' 120A' 118A' 2000'  	fcall	stringtab
  4847  0375' 00A2'              	movwf	??_scale+4
  4848  0376' 0822'              	movf	??_scale+4,w
  4849  0377' 009D'              	movwf	?_scale+3
  4850  0378' 0821'              	movf	??_scale+3,w
  4851  0379' 009C'              	movwf	?_scale+2
  4852  037A' 0820'              	movf	??_scale+2,w
  4853  037B' 009B'              	movwf	?_scale+1
  4854  037C' 081F'              	movf	??_scale+1,w
  4855  037D' 009A'              	movwf	?_scale
  4856  037E' 0008               	return
  4857  037F'                    __end_of_scale:
  4858                           
  4859                           	psect	text3
  4860  0000'                    __ptext3:	
  4861 ;; *************** function ___awmod *****************
  4862 ;; Defined at:
  4863 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awmod.c"
  4864 ;; Parameters:    Size  Location     Type
  4865 ;;  divisor         2    0[COMMON] int 
  4866 ;;  dividend        2    2[COMMON] int 
  4867 ;; Auto vars:     Size  Location     Type
  4868 ;;  sign            1    5[COMMON] unsigned char 
  4869 ;;  counter         1    4[COMMON] unsigned char 
  4870 ;; Return value:  Size  Location     Type
  4871 ;;                  2    0[COMMON] int 
  4872 ;; Registers used:
  4873 ;;		wreg, status,2, status,0, btemp+1
  4874 ;; Tracked objects:
  4875 ;;		On entry : 0/0
  4876 ;;		On exit  : 0/0
  4877 ;;		Unchanged: 0/0
  4878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4879 ;;      Params:         4       0       0       0       0
  4880 ;;      Locals:         2       0       0       0       0
  4881 ;;      Temps:          0       0       0       0       0
  4882 ;;      Totals:         6       0       0       0       0
  4883 ;;Total ram usage:        6 bytes
  4884 ;; Hardware stack levels used: 1
  4885 ;; This function calls:
  4886 ;;		Nothing
  4887 ;; This function is called by:
  4888 ;;		_scale
  4889 ;; This function uses a non-reentrant model
  4890 ;;
  4891                           
  4892  0000'                    ___awmod:	
  4893                           ;psect for function ___awmod
  4894                           
  4895                           
  4896                           ;incstack = 0
  4897                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
  4898  0000' 0185'              	clrf	___awmod@sign
  4899  0001' 1F83'              	btfss	___awmod@dividend+1,7
  4900  0002' 2800'              	goto	l2631
  4901  0003' 0982'              	comf	___awmod@dividend,f
  4902  0004' 0983'              	comf	___awmod@dividend+1,f
  4903  0005' 0A82'              	incf	___awmod@dividend,f
  4904  0006' 1903               	skipnz
  4905  0007' 0A83'              	incf	___awmod@dividend+1,f
  4906  0008' 0185'              	clrf	___awmod@sign
  4907  0009' 0A85'              	incf	___awmod@sign,f
  4908  000A'                    l2631:
  4909  000A' 1F81'              	btfss	___awmod@divisor+1,7
  4910  000B' 2800'              	goto	l2635
  4911  000C' 0980'              	comf	___awmod@divisor,f
  4912  000D' 0981'              	comf	___awmod@divisor+1,f
  4913  000E' 0A80'              	incf	___awmod@divisor,f
  4914  000F' 1903               	skipnz
  4915  0010' 0A81'              	incf	___awmod@divisor+1,f
  4916  0011'                    l2635:
  4917  0011' 0800'              	movf	___awmod@divisor,w
  4918  0012' 0401'              	iorwf	___awmod@divisor+1,w
  4919  0013' 1903               	btfsc	3,2
  4920  0014' 2800'              	goto	l2653
  4921  0015' 0184'              	clrf	___awmod@counter
  4922  0016' 0A84'              	incf	___awmod@counter,f
  4923  0017'                    l2643:
  4924  0017' 1B81'              	btfsc	___awmod@divisor+1,7
  4925  0018' 2800'              	goto	l2645
  4926  0019' 3001               	movlw	1
  4927  001A'                    u3675:
  4928  001A' 1003               	clrc
  4929  001B' 0D80'              	rlf	___awmod@divisor,f
  4930  001C' 0D81'              	rlf	___awmod@divisor+1,f
  4931  001D' 3EFF               	addlw	-1
  4932  001E' 1D03               	skipz
  4933  001F' 2800'              	goto	u3675
  4934  0020' 3001               	movlw	1
  4935  0021' 00FF               	movwf	127
  4936  0022' 087F               	movf	127,w
  4937  0023' 0784'              	addwf	___awmod@counter,f
  4938  0024' 2800'              	goto	l2643
  4939  0025'                    l2645:
  4940  0025' 0801'              	movf	___awmod@divisor+1,w
  4941  0026' 0203'              	subwf	___awmod@dividend+1,w
  4942  0027' 1D03               	skipz
  4943  0028' 2800'              	goto	u3695
  4944  0029' 0800'              	movf	___awmod@divisor,w
  4945  002A' 0202'              	subwf	___awmod@dividend,w
  4946  002B'                    u3695:
  4947  002B' 1C03               	skipc
  4948  002C' 2800'              	goto	l2649
  4949  002D' 0800'              	movf	___awmod@divisor,w
  4950  002E' 0282'              	subwf	___awmod@dividend,f
  4951  002F' 0801'              	movf	___awmod@divisor+1,w
  4952  0030' 1C03               	skipc
  4953  0031' 0383'              	decf	___awmod@dividend+1,f
  4954  0032' 0283'              	subwf	___awmod@dividend+1,f
  4955  0033'                    l2649:
  4956  0033' 3001               	movlw	1
  4957  0034'                    u3705:
  4958  0034' 1003               	clrc
  4959  0035' 0C81'              	rrf	___awmod@divisor+1,f
  4960  0036' 0C80'              	rrf	___awmod@divisor,f
  4961  0037' 3EFF               	addlw	-1
  4962  0038' 1D03               	skipz
  4963  0039' 2800'              	goto	u3705
  4964  003A' 3001               	movlw	1
  4965  003B' 0284'              	subwf	___awmod@counter,f
  4966  003C' 1D03               	btfss	3,2
  4967  003D' 2800'              	goto	l2645
  4968  003E'                    l2653:
  4969  003E' 0805'              	movf	___awmod@sign,w
  4970  003F' 1903               	btfsc	3,2
  4971  0040' 2800'              	goto	l2657
  4972  0041' 0982'              	comf	___awmod@dividend,f
  4973  0042' 0983'              	comf	___awmod@dividend+1,f
  4974  0043' 0A82'              	incf	___awmod@dividend,f
  4975  0044' 1903               	skipnz
  4976  0045' 0A83'              	incf	___awmod@dividend+1,f
  4977  0046'                    l2657:
  4978  0046' 0803'              	movf	___awmod@dividend+1,w
  4979  0047' 0081'              	movwf	?___awmod+1
  4980  0048' 0802'              	movf	___awmod@dividend,w
  4981  0049' 0080'              	movwf	?___awmod
  4982  004A' 0008               	return
  4983  004B'                    __end_of___awmod:
  4984                           
  4985                           	psect	text4
  4986  0000'                    __ptext4:	
  4987 ;; *************** function ___awdiv *****************
  4988 ;; Defined at:
  4989 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awdiv.c"
  4990 ;; Parameters:    Size  Location     Type
  4991 ;;  divisor         2    6[COMMON] int 
  4992 ;;  dividend        2    8[COMMON] int 
  4993 ;; Auto vars:     Size  Location     Type
  4994 ;;  quotient        2   12[COMMON] int 
  4995 ;;  sign            1   11[COMMON] unsigned char 
  4996 ;;  counter         1   10[COMMON] unsigned char 
  4997 ;; Return value:  Size  Location     Type
  4998 ;;                  2    6[COMMON] int 
  4999 ;; Registers used:
  5000 ;;		wreg, status,2, status,0, btemp+1
  5001 ;; Tracked objects:
  5002 ;;		On entry : 0/0
  5003 ;;		On exit  : 0/0
  5004 ;;		Unchanged: 0/0
  5005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5006 ;;      Params:         4       0       0       0       0
  5007 ;;      Locals:         4       0       0       0       0
  5008 ;;      Temps:          0       0       0       0       0
  5009 ;;      Totals:         8       0       0       0       0
  5010 ;;Total ram usage:        8 bytes
  5011 ;; Hardware stack levels used: 1
  5012 ;; This function calls:
  5013 ;;		Nothing
  5014 ;; This function is called by:
  5015 ;;		_scale
  5016 ;;		_sprintf
  5017 ;; This function uses a non-reentrant model
  5018 ;;
  5019                           
  5020  0000'                    ___awdiv:	
  5021                           ;psect for function ___awdiv
  5022                           
  5023                           
  5024                           ;incstack = 0
  5025                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  5026  0000' 018B'              	clrf	___awdiv@sign
  5027  0001' 1F87'              	btfss	___awdiv@divisor+1,7
  5028  0002' 2800'              	goto	l2587
  5029  0003' 0986'              	comf	___awdiv@divisor,f
  5030  0004' 0987'              	comf	___awdiv@divisor+1,f
  5031  0005' 0A86'              	incf	___awdiv@divisor,f
  5032  0006' 1903               	skipnz
  5033  0007' 0A87'              	incf	___awdiv@divisor+1,f
  5034  0008' 018B'              	clrf	___awdiv@sign
  5035  0009' 0A8B'              	incf	___awdiv@sign,f
  5036  000A'                    l2587:
  5037  000A' 1F89'              	btfss	___awdiv@dividend+1,7
  5038  000B' 2800'              	goto	l2593
  5039  000C' 0988'              	comf	___awdiv@dividend,f
  5040  000D' 0989'              	comf	___awdiv@dividend+1,f
  5041  000E' 0A88'              	incf	___awdiv@dividend,f
  5042  000F' 1903               	skipnz
  5043  0010' 0A89'              	incf	___awdiv@dividend+1,f
  5044  0011' 3001               	movlw	1
  5045  0012' 00FF               	movwf	127
  5046  0013' 087F               	movf	127,w
  5047  0014' 068B'              	xorwf	___awdiv@sign,f
  5048  0015'                    l2593:
  5049  0015' 018C'              	clrf	___awdiv@quotient
  5050  0016' 018D'              	clrf	___awdiv@quotient+1
  5051  0017' 0806'              	movf	___awdiv@divisor,w
  5052  0018' 0407'              	iorwf	___awdiv@divisor+1,w
  5053  0019' 1903               	btfsc	3,2
  5054  001A' 2800'              	goto	l2615
  5055  001B' 018A'              	clrf	___awdiv@counter
  5056  001C' 0A8A'              	incf	___awdiv@counter,f
  5057  001D'                    l2603:
  5058  001D' 1B87'              	btfsc	___awdiv@divisor+1,7
  5059  001E' 2800'              	goto	l2605
  5060  001F' 3001               	movlw	1
  5061  0020'                    u3575:
  5062  0020' 1003               	clrc
  5063  0021' 0D86'              	rlf	___awdiv@divisor,f
  5064  0022' 0D87'              	rlf	___awdiv@divisor+1,f
  5065  0023' 3EFF               	addlw	-1
  5066  0024' 1D03               	skipz
  5067  0025' 2800'              	goto	u3575
  5068  0026' 3001               	movlw	1
  5069  0027' 00FF               	movwf	127
  5070  0028' 087F               	movf	127,w
  5071  0029' 078A'              	addwf	___awdiv@counter,f
  5072  002A' 2800'              	goto	l2603
  5073  002B'                    l2605:
  5074  002B' 3001               	movlw	1
  5075  002C'                    u3595:
  5076  002C' 1003               	clrc
  5077  002D' 0D8C'              	rlf	___awdiv@quotient,f
  5078  002E' 0D8D'              	rlf	___awdiv@quotient+1,f
  5079  002F' 3EFF               	addlw	-1
  5080  0030' 1D03               	skipz
  5081  0031' 2800'              	goto	u3595
  5082  0032' 0807'              	movf	___awdiv@divisor+1,w
  5083  0033' 0209'              	subwf	___awdiv@dividend+1,w
  5084  0034' 1D03               	skipz
  5085  0035' 2800'              	goto	u3605
  5086  0036' 0806'              	movf	___awdiv@divisor,w
  5087  0037' 0208'              	subwf	___awdiv@dividend,w
  5088  0038'                    u3605:
  5089  0038' 1C03               	skipc
  5090  0039' 2800'              	goto	l2611
  5091  003A' 0806'              	movf	___awdiv@divisor,w
  5092  003B' 0288'              	subwf	___awdiv@dividend,f
  5093  003C' 0807'              	movf	___awdiv@divisor+1,w
  5094  003D' 1C03               	skipc
  5095  003E' 0389'              	decf	___awdiv@dividend+1,f
  5096  003F' 0289'              	subwf	___awdiv@dividend+1,f
  5097  0040' 140C'              	bsf	___awdiv@quotient,0
  5098  0041'                    l2611:
  5099  0041' 3001               	movlw	1
  5100  0042'                    u3615:
  5101  0042' 1003               	clrc
  5102  0043' 0C87'              	rrf	___awdiv@divisor+1,f
  5103  0044' 0C86'              	rrf	___awdiv@divisor,f
  5104  0045' 3EFF               	addlw	-1
  5105  0046' 1D03               	skipz
  5106  0047' 2800'              	goto	u3615
  5107  0048' 3001               	movlw	1
  5108  0049' 028A'              	subwf	___awdiv@counter,f
  5109  004A' 1D03               	btfss	3,2
  5110  004B' 2800'              	goto	l2605
  5111  004C'                    l2615:
  5112  004C' 080B'              	movf	___awdiv@sign,w
  5113  004D' 1903               	btfsc	3,2
  5114  004E' 2800'              	goto	l2619
  5115  004F' 098C'              	comf	___awdiv@quotient,f
  5116  0050' 098D'              	comf	___awdiv@quotient+1,f
  5117  0051' 0A8C'              	incf	___awdiv@quotient,f
  5118  0052' 1903               	skipnz
  5119  0053' 0A8D'              	incf	___awdiv@quotient+1,f
  5120  0054'                    l2619:
  5121  0054' 080D'              	movf	___awdiv@quotient+1,w
  5122  0055' 0087'              	movwf	?___awdiv+1
  5123  0056' 080C'              	movf	___awdiv@quotient,w
  5124  0057' 0086'              	movwf	?___awdiv
  5125  0058' 0008               	return
  5126  0059'                    __end_of___awdiv:
  5127                           
  5128                           	psect	text5
  5129  0000'                    __ptext5:	
  5130 ;; *************** function _isdigit *****************
  5131 ;; Defined at:
  5132 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\isdigit.c"
  5133 ;; Parameters:    Size  Location     Type
  5134 ;;  c               1    wreg     unsigned char 
  5135 ;; Auto vars:     Size  Location     Type
  5136 ;;  c               1    1[COMMON] unsigned char 
  5137 ;; Return value:  Size  Location     Type
  5138 ;;		None               void
  5139 ;; Registers used:
  5140 ;;		wreg, status,2, status,0
  5141 ;; Tracked objects:
  5142 ;;		On entry : 0/0
  5143 ;;		On exit  : 0/0
  5144 ;;		Unchanged: 0/0
  5145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5146 ;;      Params:         0       0       0       0       0
  5147 ;;      Locals:         2       0       0       0       0
  5148 ;;      Temps:          0       0       0       0       0
  5149 ;;      Totals:         2       0       0       0       0
  5150 ;;Total ram usage:        2 bytes
  5151 ;; Hardware stack levels used: 1
  5152 ;; This function calls:
  5153 ;;		Nothing
  5154 ;; This function is called by:
  5155 ;;		_sprintf
  5156 ;; This function uses a non-reentrant model
  5157 ;;
  5158                           
  5159  0000'                    _isdigit:	
  5160                           ;psect for function _isdigit
  5161                           
  5162                           
  5163                           ;incstack = 0
  5164                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  5165                           ;isdigit@c stored from wreg
  5166  0000' 0081'              	movwf	isdigit@c
  5167  0001' 0180'              	clrf	_isdigit$689
  5168  0002' 303A               	movlw	58
  5169  0003' 0201'              	subwf	isdigit@c,w
  5170  0004' 1803               	skipnc
  5171  0005' 2800'              	goto	l3151
  5172  0006' 3030               	movlw	48
  5173  0007' 0201'              	subwf	isdigit@c,w
  5174  0008' 1C03               	skipc
  5175  0009' 2800'              	goto	l3151
  5176  000A' 0180'              	clrf	_isdigit$689
  5177  000B' 0A80'              	incf	_isdigit$689,f
  5178  000C'                    l3151:
  5179  000C' 0C00'              	rrf	_isdigit$689,w
  5180  000D' 0008               	return
  5181  000E'                    __end_of_isdigit:
  5182                           
  5183                           	psect	text6
  5184  0000'                    __ptext6:	
  5185 ;; *************** function _fround *****************
  5186 ;; Defined at:
  5187 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c"
  5188 ;; Parameters:    Size  Location     Type
  5189 ;;  prec            1    wreg     unsigned char 
  5190 ;; Auto vars:     Size  Location     Type
  5191 ;;  prec            1   45[BANK0 ] unsigned char 
  5192 ;; Return value:  Size  Location     Type
  5193 ;;                  4   26[BANK0 ] unsigned char 
  5194 ;; Registers used:
  5195 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5196 ;; Tracked objects:
  5197 ;;		On entry : 0/0
  5198 ;;		On exit  : 0/0
  5199 ;;		Unchanged: 0/0
  5200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5201 ;;      Params:         0       4       0       0       0
  5202 ;;      Locals:         0       9       0       0       0
  5203 ;;      Temps:          0       7       0       0       0
  5204 ;;      Totals:         0      20       0       0       0
  5205 ;;Total ram usage:       20 bytes
  5206 ;; Hardware stack levels used: 1
  5207 ;; Hardware stack levels required when called: 2
  5208 ;; This function calls:
  5209 ;;		___flmul
  5210 ;;		___lwdiv
  5211 ;;		___lwmod
  5212 ;; This function is called by:
  5213 ;;		_sprintf
  5214 ;; This function uses a non-reentrant model
  5215 ;;
  5216                           
  5217  0000'                    _fround:	
  5218                           ;psect for function _fround
  5219                           
  5220                           
  5221                           ;incstack = 0
  5222                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5223                           ;fround@prec stored from wreg
  5224  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  5225  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  5226  0002' 00AD'              	movwf	fround@prec
  5227                           
  5228                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  5229  0003' 306E               	movlw	110
  5230  0004' 022D'              	subwf	fround@prec,w
  5231  0005' 1C03               	skipc
  5232  0006' 2800'              	goto	l3093
  5233                           
  5234                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5235  0007' 303F               	movlw	63
  5236  0008' 0083'              	movwf	___flmul@b+3
  5237  0009' 3000               	movlw	0
  5238  000A' 0082'              	movwf	___flmul@b+2
  5239  000B' 3000               	movlw	0
  5240  000C' 0081'              	movwf	___flmul@b+1
  5241  000D' 3000               	movlw	0
  5242  000E' 0080'              	movwf	___flmul@b
  5243  000F' 3064               	movlw	100
  5244  0010' 0085'              	movwf	___lwdiv@divisor
  5245  0011' 3000               	movlw	0
  5246  0012' 0086'              	movwf	___lwdiv@divisor+1
  5247  0013' 082D'              	movf	fround@prec,w
  5248  0014' 009E'              	movwf	??_fround
  5249  0015' 019F'              	clrf	??_fround+1
  5250  0016' 081E'              	movf	??_fround,w
  5251  0017' 0087'              	movwf	___lwdiv@dividend
  5252  0018' 081F'              	movf	??_fround+1,w
  5253  0019' 0088'              	movwf	___lwdiv@dividend+1
  5254  001A' 120A' 118A' 2000' 120A' 118A' 	fcall	___lwdiv
  5255  001F' 0805'              	movf	?___lwdiv,w
  5256  0020' 1283               	bcf	3,5	;RP0=0, select bank0
  5257  0021' 1303               	bcf	3,6	;RP1=0, select bank0
  5258  0022' 00A0'              	movwf	??_fround+2
  5259  0023' 3001               	movlw	1
  5260  0024'                    u4725:
  5261  0024' 1003               	clrc
  5262  0025' 0DA0'              	rlf	??_fround+2,f
  5263  0026' 3EFF               	addlw	-1
  5264  0027' 1D03               	skipz
  5265  0028' 2800'              	goto	u4725
  5266  0029' 1003               	clrc
  5267  002A' 0D20'              	rlf	??_fround+2,w
  5268  002B' 3E00'              	addlw	low ((__npowers_| (0+32768)+72))
  5269  002C' 0084               	movwf	4
  5270  002D' 3000'              	movlw	high ((__npowers_| (0+32768)+72))
  5271  002E' 1803               	skipnc
  5272  002F' 3E01               	addlw	1
  5273  0030' 00FF               	movwf	127
  5274  0031' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  5275  0036' 00A1'              	movwf	??_fround+3
  5276  0037' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  5277  003C' 00A2'              	movwf	??_fround+4
  5278  003D' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  5279  0042' 00A3'              	movwf	??_fround+5
  5280  0043' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  5281  0048' 00A4'              	movwf	??_fround+6
  5282  0049' 0824'              	movf	??_fround+6,w
  5283  004A' 0087'              	movwf	___flmul@a+3
  5284  004B' 0823'              	movf	??_fround+5,w
  5285  004C' 0086'              	movwf	___flmul@a+2
  5286  004D' 0822'              	movf	??_fround+4,w
  5287  004E' 0085'              	movwf	___flmul@a+1
  5288  004F' 0821'              	movf	??_fround+3,w
  5289  0050' 0084'              	movwf	___flmul@a
  5290  0051' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  5291  0056' 1283               	bcf	3,5	;RP0=0, select bank0
  5292  0057' 1303               	bcf	3,6	;RP1=0, select bank0
  5293  0058' 0803'              	movf	?___flmul+3,w
  5294  0059' 00AC'              	movwf	_fround$871+3
  5295  005A' 0802'              	movf	?___flmul+2,w
  5296  005B' 00AB'              	movwf	_fround$871+2
  5297  005C' 0801'              	movf	?___flmul+1,w
  5298  005D' 00AA'              	movwf	_fround$871+1
  5299  005E' 0800'              	movf	?___flmul,w
  5300  005F' 00A9'              	movwf	_fround$871
  5301                           
  5302                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5303  0060' 300A               	movlw	10
  5304  0061' 0085'              	movwf	___lwdiv@divisor
  5305  0062' 3000               	movlw	0
  5306  0063' 0086'              	movwf	___lwdiv@divisor+1
  5307  0064' 082D'              	movf	fround@prec,w
  5308  0065' 009E'              	movwf	??_fround
  5309  0066' 019F'              	clrf	??_fround+1
  5310  0067' 081E'              	movf	??_fround,w
  5311  0068' 0082'              	movwf	___lwmod@dividend
  5312  0069' 081F'              	movf	??_fround+1,w
  5313  006A' 0083'              	movwf	___lwmod@dividend+1
  5314  006B' 3064               	movlw	100
  5315  006C' 0080'              	movwf	___lwmod@divisor
  5316  006D' 3000               	movlw	0
  5317  006E' 0081'              	movwf	___lwmod@divisor+1
  5318  006F' 120A' 118A' 2000' 120A' 118A' 	fcall	___lwmod
  5319  0074' 0801'              	movf	?___lwmod+1,w
  5320  0075' 0088'              	movwf	___lwdiv@dividend+1
  5321  0076' 0800'              	movf	?___lwmod,w
  5322  0077' 0087'              	movwf	___lwdiv@dividend
  5323  0078' 120A' 118A' 2000' 120A' 118A' 	fcall	___lwdiv
  5324  007D' 0805'              	movf	?___lwdiv,w
  5325  007E' 1283               	bcf	3,5	;RP0=0, select bank0
  5326  007F' 1303               	bcf	3,6	;RP1=0, select bank0
  5327  0080' 00A0'              	movwf	??_fround+2
  5328  0081' 3001               	movlw	1
  5329  0082'                    u4735:
  5330  0082' 1003               	clrc
  5331  0083' 0DA0'              	rlf	??_fround+2,f
  5332  0084' 3EFF               	addlw	-1
  5333  0085' 1D03               	skipz
  5334  0086' 2800'              	goto	u4735
  5335  0087' 1003               	clrc
  5336  0088' 0D20'              	rlf	??_fround+2,w
  5337  0089' 3E00'              	addlw	low ((__npowers_| (0+32768)+36))
  5338  008A' 0084               	movwf	4
  5339  008B' 3000'              	movlw	high ((__npowers_| (0+32768)+36))
  5340  008C' 1803               	skipnc
  5341  008D' 3E01               	addlw	1
  5342  008E' 00FF               	movwf	127
  5343  008F' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  5344  0094' 00A1'              	movwf	??_fround+3
  5345  0095' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  5346  009A' 00A2'              	movwf	??_fround+4
  5347  009B' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  5348  00A0' 00A3'              	movwf	??_fround+5
  5349  00A1' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  5350  00A6' 00A4'              	movwf	??_fround+6
  5351  00A7' 0824'              	movf	??_fround+6,w
  5352  00A8' 0083'              	movwf	___flmul@b+3
  5353  00A9' 0823'              	movf	??_fround+5,w
  5354  00AA' 0082'              	movwf	___flmul@b+2
  5355  00AB' 0822'              	movf	??_fround+4,w
  5356  00AC' 0081'              	movwf	___flmul@b+1
  5357  00AD' 0821'              	movf	??_fround+3,w
  5358  00AE' 0080'              	movwf	___flmul@b
  5359  00AF' 082C'              	movf	_fround$871+3,w
  5360  00B0' 0087'              	movwf	___flmul@a+3
  5361  00B1' 082B'              	movf	_fround$871+2,w
  5362  00B2' 0086'              	movwf	___flmul@a+2
  5363  00B3' 082A'              	movf	_fround$871+1,w
  5364  00B4' 0085'              	movwf	___flmul@a+1
  5365  00B5' 0829'              	movf	_fround$871,w
  5366  00B6' 0084'              	movwf	___flmul@a
  5367  00B7' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  5368  00BC' 1283               	bcf	3,5	;RP0=0, select bank0
  5369  00BD' 1303               	bcf	3,6	;RP1=0, select bank0
  5370  00BE' 0803'              	movf	?___flmul+3,w
  5371  00BF' 00A8'              	movwf	_fround$872+3
  5372  00C0' 0802'              	movf	?___flmul+2,w
  5373  00C1' 00A7'              	movwf	_fround$872+2
  5374  00C2' 0801'              	movf	?___flmul+1,w
  5375  00C3' 00A6'              	movwf	_fround$872+1
  5376  00C4' 0800'              	movf	?___flmul,w
  5377  00C5' 00A5'              	movwf	_fround$872
  5378                           
  5379                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5380  00C6' 300A               	movlw	10
  5381  00C7' 0080'              	movwf	___lwmod@divisor
  5382  00C8' 3000               	movlw	0
  5383  00C9' 0081'              	movwf	___lwmod@divisor+1
  5384  00CA' 082D'              	movf	fround@prec,w
  5385  00CB' 009E'              	movwf	??_fround
  5386  00CC' 019F'              	clrf	??_fround+1
  5387  00CD' 081E'              	movf	??_fround,w
  5388  00CE' 0082'              	movwf	___lwmod@dividend
  5389  00CF' 081F'              	movf	??_fround+1,w
  5390  00D0' 0083'              	movwf	___lwmod@dividend+1
  5391  00D1' 120A' 118A' 2000' 120A' 118A' 	fcall	___lwmod
  5392  00D6' 0800'              	movf	?___lwmod,w
  5393  00D7' 1283               	bcf	3,5	;RP0=0, select bank0
  5394  00D8' 1303               	bcf	3,6	;RP1=0, select bank0
  5395  00D9' 00A0'              	movwf	??_fround+2
  5396  00DA' 3001               	movlw	1
  5397  00DB'                    u4745:
  5398  00DB' 1003               	clrc
  5399  00DC' 0DA0'              	rlf	??_fround+2,f
  5400  00DD' 3EFF               	addlw	-1
  5401  00DE' 1D03               	skipz
  5402  00DF' 2800'              	goto	u4745
  5403  00E0' 1003               	clrc
  5404  00E1' 0D20'              	rlf	??_fround+2,w
  5405  00E2' 3E00'              	addlw	low (__npowers_| (0+32768))
  5406  00E3' 0084               	movwf	4
  5407  00E4' 3000'              	movlw	high (__npowers_| (0+32768))
  5408  00E5' 1803               	skipnc
  5409  00E6' 3E01               	addlw	1
  5410  00E7' 00FF               	movwf	127
  5411  00E8' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  5412  00ED' 00A1'              	movwf	??_fround+3
  5413  00EE' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  5414  00F3' 00A2'              	movwf	??_fround+4
  5415  00F4' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  5416  00F9' 00A3'              	movwf	??_fround+5
  5417  00FA' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  5418  00FF' 00A4'              	movwf	??_fround+6
  5419  0100' 0824'              	movf	??_fround+6,w
  5420  0101' 0083'              	movwf	___flmul@b+3
  5421  0102' 0823'              	movf	??_fround+5,w
  5422  0103' 0082'              	movwf	___flmul@b+2
  5423  0104' 0822'              	movf	??_fround+4,w
  5424  0105' 0081'              	movwf	___flmul@b+1
  5425  0106' 0821'              	movf	??_fround+3,w
  5426  0107' 0080'              	movwf	___flmul@b
  5427  0108' 0828'              	movf	_fround$872+3,w
  5428  0109' 0087'              	movwf	___flmul@a+3
  5429  010A' 0827'              	movf	_fround$872+2,w
  5430  010B' 0086'              	movwf	___flmul@a+2
  5431  010C' 0826'              	movf	_fround$872+1,w
  5432  010D' 0085'              	movwf	___flmul@a+1
  5433  010E' 0825'              	movf	_fround$872,w
  5434  010F' 0084'              	movwf	___flmul@a
  5435  0110' 120A' 118A' 2000'  	fcall	___flmul
  5436  0113' 1283               	bcf	3,5	;RP0=0, select bank0
  5437  0114' 1303               	bcf	3,6	;RP1=0, select bank0
  5438  0115' 0803'              	movf	?___flmul+3,w
  5439  0116' 009D'              	movwf	?_fround+3
  5440  0117' 0802'              	movf	?___flmul+2,w
  5441  0118' 009C'              	movwf	?_fround+2
  5442  0119' 0801'              	movf	?___flmul+1,w
  5443  011A' 009B'              	movwf	?_fround+1
  5444  011B' 0800'              	movf	?___flmul,w
  5445  011C' 009A'              	movwf	?_fround
  5446  011D' 0008               	return
  5447  011E'                    l3093:
  5448  011E' 300B               	movlw	11
  5449  011F' 022D'              	subwf	fround@prec,w
  5450  0120' 1C03               	skipc
  5451  0121' 2800'              	goto	l3099
  5452                           
  5453                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5454  0122' 303F               	movlw	63
  5455  0123' 0083'              	movwf	___flmul@b+3
  5456  0124' 3000               	movlw	0
  5457  0125' 0082'              	movwf	___flmul@b+2
  5458  0126' 3000               	movlw	0
  5459  0127' 0081'              	movwf	___flmul@b+1
  5460  0128' 3000               	movlw	0
  5461  0129' 0080'              	movwf	___flmul@b
  5462  012A' 300A               	movlw	10
  5463  012B' 0085'              	movwf	___lwdiv@divisor
  5464  012C' 3000               	movlw	0
  5465  012D' 0086'              	movwf	___lwdiv@divisor+1
  5466  012E' 082D'              	movf	fround@prec,w
  5467  012F' 009E'              	movwf	??_fround
  5468  0130' 019F'              	clrf	??_fround+1
  5469  0131' 081E'              	movf	??_fround,w
  5470  0132' 0087'              	movwf	___lwdiv@dividend
  5471  0133' 081F'              	movf	??_fround+1,w
  5472  0134' 0088'              	movwf	___lwdiv@dividend+1
  5473  0135' 120A' 118A' 2000' 120A' 118A' 	fcall	___lwdiv
  5474  013A' 0805'              	movf	?___lwdiv,w
  5475  013B' 1283               	bcf	3,5	;RP0=0, select bank0
  5476  013C' 1303               	bcf	3,6	;RP1=0, select bank0
  5477  013D' 00A0'              	movwf	??_fround+2
  5478  013E' 3001               	movlw	1
  5479  013F'                    u4765:
  5480  013F' 1003               	clrc
  5481  0140' 0DA0'              	rlf	??_fround+2,f
  5482  0141' 3EFF               	addlw	-1
  5483  0142' 1D03               	skipz
  5484  0143' 2800'              	goto	u4765
  5485  0144' 1003               	clrc
  5486  0145' 0D20'              	rlf	??_fround+2,w
  5487  0146' 3E00'              	addlw	low ((__npowers_| (0+32768)+36))
  5488  0147' 0084               	movwf	4
  5489  0148' 3000'              	movlw	high ((__npowers_| (0+32768)+36))
  5490  0149' 1803               	skipnc
  5491  014A' 3E01               	addlw	1
  5492  014B' 00FF               	movwf	127
  5493  014C' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  5494  0151' 00A1'              	movwf	??_fround+3
  5495  0152' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  5496  0157' 00A2'              	movwf	??_fround+4
  5497  0158' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  5498  015D' 00A3'              	movwf	??_fround+5
  5499  015E' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  5500  0163' 00A4'              	movwf	??_fround+6
  5501  0164' 0824'              	movf	??_fround+6,w
  5502  0165' 0087'              	movwf	___flmul@a+3
  5503  0166' 0823'              	movf	??_fround+5,w
  5504  0167' 0086'              	movwf	___flmul@a+2
  5505  0168' 0822'              	movf	??_fround+4,w
  5506  0169' 0085'              	movwf	___flmul@a+1
  5507  016A' 0821'              	movf	??_fround+3,w
  5508  016B' 0084'              	movwf	___flmul@a
  5509  016C' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  5510  0171' 1283               	bcf	3,5	;RP0=0, select bank0
  5511  0172' 1303               	bcf	3,6	;RP1=0, select bank0
  5512  0173' 0803'              	movf	?___flmul+3,w
  5513  0174' 00AC'              	movwf	_fround$871+3
  5514  0175' 0802'              	movf	?___flmul+2,w
  5515  0176' 00AB'              	movwf	_fround$871+2
  5516  0177' 0801'              	movf	?___flmul+1,w
  5517  0178' 00AA'              	movwf	_fround$871+1
  5518  0179' 0800'              	movf	?___flmul,w
  5519  017A' 00A9'              	movwf	_fround$871
  5520                           
  5521                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5522  017B' 300A               	movlw	10
  5523  017C' 0080'              	movwf	___lwmod@divisor
  5524  017D' 3000               	movlw	0
  5525  017E' 0081'              	movwf	___lwmod@divisor+1
  5526  017F' 082D'              	movf	fround@prec,w
  5527  0180' 009E'              	movwf	??_fround
  5528  0181' 019F'              	clrf	??_fround+1
  5529  0182' 081E'              	movf	??_fround,w
  5530  0183' 0082'              	movwf	___lwmod@dividend
  5531  0184' 081F'              	movf	??_fround+1,w
  5532  0185' 0083'              	movwf	___lwmod@dividend+1
  5533  0186' 120A' 118A' 2000' 120A' 118A' 	fcall	___lwmod
  5534  018B' 0800'              	movf	?___lwmod,w
  5535  018C' 1283               	bcf	3,5	;RP0=0, select bank0
  5536  018D' 1303               	bcf	3,6	;RP1=0, select bank0
  5537  018E' 00A0'              	movwf	??_fround+2
  5538  018F' 3001               	movlw	1
  5539  0190'                    u4775:
  5540  0190' 1003               	clrc
  5541  0191' 0DA0'              	rlf	??_fround+2,f
  5542  0192' 3EFF               	addlw	-1
  5543  0193' 1D03               	skipz
  5544  0194' 2800'              	goto	u4775
  5545  0195' 1003               	clrc
  5546  0196' 0D20'              	rlf	??_fround+2,w
  5547  0197' 3E00'              	addlw	low (__npowers_| (0+32768))
  5548  0198' 0084               	movwf	4
  5549  0199' 3000'              	movlw	high (__npowers_| (0+32768))
  5550  019A' 1803               	skipnc
  5551  019B' 3E01               	addlw	1
  5552  019C' 00FF               	movwf	127
  5553  019D' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  5554  01A2' 00A1'              	movwf	??_fround+3
  5555  01A3' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  5556  01A8' 00A2'              	movwf	??_fround+4
  5557  01A9' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  5558  01AE' 00A3'              	movwf	??_fround+5
  5559  01AF' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  5560  01B4' 00A4'              	movwf	??_fround+6
  5561  01B5' 0824'              	movf	??_fround+6,w
  5562  01B6' 0083'              	movwf	___flmul@b+3
  5563  01B7' 0823'              	movf	??_fround+5,w
  5564  01B8' 0082'              	movwf	___flmul@b+2
  5565  01B9' 0822'              	movf	??_fround+4,w
  5566  01BA' 0081'              	movwf	___flmul@b+1
  5567  01BB' 0821'              	movf	??_fround+3,w
  5568  01BC' 0080'              	movwf	___flmul@b
  5569  01BD' 082C'              	movf	_fround$871+3,w
  5570  01BE' 0087'              	movwf	___flmul@a+3
  5571  01BF' 082B'              	movf	_fround$871+2,w
  5572  01C0' 0086'              	movwf	___flmul@a+2
  5573  01C1' 082A'              	movf	_fround$871+1,w
  5574  01C2' 0085'              	movwf	___flmul@a+1
  5575  01C3' 0829'              	movf	_fround$871,w
  5576  01C4' 0084'              	movwf	___flmul@a
  5577  01C5' 120A' 118A' 2000'  	fcall	___flmul
  5578  01C8' 1283               	bcf	3,5	;RP0=0, select bank0
  5579  01C9' 1303               	bcf	3,6	;RP1=0, select bank0
  5580  01CA' 0803'              	movf	?___flmul+3,w
  5581  01CB' 009D'              	movwf	?_fround+3
  5582  01CC' 0802'              	movf	?___flmul+2,w
  5583  01CD' 009C'              	movwf	?_fround+2
  5584  01CE' 0801'              	movf	?___flmul+1,w
  5585  01CF' 009B'              	movwf	?_fround+1
  5586  01D0' 0800'              	movf	?___flmul,w
  5587  01D1' 009A'              	movwf	?_fround
  5588  01D2' 0008               	return
  5589  01D3'                    l3099:
  5590                           
  5591                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  5592  01D3' 303F               	movlw	63
  5593  01D4' 0083'              	movwf	___flmul@b+3
  5594  01D5' 3000               	movlw	0
  5595  01D6' 0082'              	movwf	___flmul@b+2
  5596  01D7' 3000               	movlw	0
  5597  01D8' 0081'              	movwf	___flmul@b+1
  5598  01D9' 3000               	movlw	0
  5599  01DA' 0080'              	movwf	___flmul@b
  5600  01DB' 082D'              	movf	fround@prec,w
  5601  01DC' 009E'              	movwf	??_fround
  5602  01DD' 3001               	movlw	1
  5603  01DE'                    u4785:
  5604  01DE' 1003               	clrc
  5605  01DF' 0D9E'              	rlf	??_fround,f
  5606  01E0' 3EFF               	addlw	-1
  5607  01E1' 1D03               	skipz
  5608  01E2' 2800'              	goto	u4785
  5609  01E3' 1003               	clrc
  5610  01E4' 0D1E'              	rlf	??_fround,w
  5611  01E5' 3E00'              	addlw	low (__npowers_| (0+32768))
  5612  01E6' 0084               	movwf	4
  5613  01E7' 3000'              	movlw	high (__npowers_| (0+32768))
  5614  01E8' 1803               	skipnc
  5615  01E9' 3E01               	addlw	1
  5616  01EA' 00FF               	movwf	127
  5617  01EB' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  5618  01F0' 009F'              	movwf	??_fround+1
  5619  01F1' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  5620  01F6' 00A0'              	movwf	??_fround+2
  5621  01F7' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  5622  01FC' 00A1'              	movwf	??_fround+3
  5623  01FD' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  5624  0202' 00A2'              	movwf	??_fround+4
  5625  0203' 0822'              	movf	??_fround+4,w
  5626  0204' 0087'              	movwf	___flmul@a+3
  5627  0205' 0821'              	movf	??_fround+3,w
  5628  0206' 0086'              	movwf	___flmul@a+2
  5629  0207' 0820'              	movf	??_fround+2,w
  5630  0208' 0085'              	movwf	___flmul@a+1
  5631  0209' 081F'              	movf	??_fround+1,w
  5632  020A' 0084'              	movwf	___flmul@a
  5633  020B' 120A' 118A' 2000'  	fcall	___flmul
  5634  020E' 1283               	bcf	3,5	;RP0=0, select bank0
  5635  020F' 1303               	bcf	3,6	;RP1=0, select bank0
  5636  0210' 0803'              	movf	?___flmul+3,w
  5637  0211' 009D'              	movwf	?_fround+3
  5638  0212' 0802'              	movf	?___flmul+2,w
  5639  0213' 009C'              	movwf	?_fround+2
  5640  0214' 0801'              	movf	?___flmul+1,w
  5641  0215' 009B'              	movwf	?_fround+1
  5642  0216' 0800'              	movf	?___flmul,w
  5643  0217' 009A'              	movwf	?_fround
  5644  0218' 0008               	return
  5645  0219'                    __end_of_fround:
  5646                           
  5647                           	psect	text7
  5648  0000'                    __ptext7:	
  5649 ;; *************** function ___lwmod *****************
  5650 ;; Defined at:
  5651 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwmod.c"
  5652 ;; Parameters:    Size  Location     Type
  5653 ;;  divisor         2    0[COMMON] unsigned int 
  5654 ;;  dividend        2    2[COMMON] unsigned int 
  5655 ;; Auto vars:     Size  Location     Type
  5656 ;;  counter         1    4[COMMON] unsigned char 
  5657 ;; Return value:  Size  Location     Type
  5658 ;;                  2    0[COMMON] unsigned int 
  5659 ;; Registers used:
  5660 ;;		wreg, status,2, status,0, btemp+1
  5661 ;; Tracked objects:
  5662 ;;		On entry : 0/0
  5663 ;;		On exit  : 0/0
  5664 ;;		Unchanged: 0/0
  5665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5666 ;;      Params:         4       0       0       0       0
  5667 ;;      Locals:         1       0       0       0       0
  5668 ;;      Temps:          0       0       0       0       0
  5669 ;;      Totals:         5       0       0       0       0
  5670 ;;Total ram usage:        5 bytes
  5671 ;; Hardware stack levels used: 1
  5672 ;; This function calls:
  5673 ;;		Nothing
  5674 ;; This function is called by:
  5675 ;;		_fround
  5676 ;; This function uses a non-reentrant model
  5677 ;;
  5678                           
  5679  0000'                    ___lwmod:	
  5680                           ;psect for function ___lwmod
  5681                           
  5682                           
  5683                           ;incstack = 0
  5684                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
  5685  0000' 0800'              	movf	___lwmod@divisor,w
  5686  0001' 0401'              	iorwf	___lwmod@divisor+1,w
  5687  0002' 1903               	btfsc	3,2
  5688  0003' 2800'              	goto	l2705
  5689  0004' 0184'              	clrf	___lwmod@counter
  5690  0005' 0A84'              	incf	___lwmod@counter,f
  5691  0006'                    l2695:
  5692  0006' 1B81'              	btfsc	___lwmod@divisor+1,7
  5693  0007' 2800'              	goto	l2697
  5694  0008' 3001               	movlw	1
  5695  0009'                    u3815:
  5696  0009' 1003               	clrc
  5697  000A' 0D80'              	rlf	___lwmod@divisor,f
  5698  000B' 0D81'              	rlf	___lwmod@divisor+1,f
  5699  000C' 3EFF               	addlw	-1
  5700  000D' 1D03               	skipz
  5701  000E' 2800'              	goto	u3815
  5702  000F' 3001               	movlw	1
  5703  0010' 00FF               	movwf	127
  5704  0011' 087F               	movf	127,w
  5705  0012' 0784'              	addwf	___lwmod@counter,f
  5706  0013' 2800'              	goto	l2695
  5707  0014'                    l2697:
  5708  0014' 0801'              	movf	___lwmod@divisor+1,w
  5709  0015' 0203'              	subwf	___lwmod@dividend+1,w
  5710  0016' 1D03               	skipz
  5711  0017' 2800'              	goto	u3835
  5712  0018' 0800'              	movf	___lwmod@divisor,w
  5713  0019' 0202'              	subwf	___lwmod@dividend,w
  5714  001A'                    u3835:
  5715  001A' 1C03               	skipc
  5716  001B' 2800'              	goto	l2701
  5717  001C' 0800'              	movf	___lwmod@divisor,w
  5718  001D' 0282'              	subwf	___lwmod@dividend,f
  5719  001E' 0801'              	movf	___lwmod@divisor+1,w
  5720  001F' 1C03               	skipc
  5721  0020' 0383'              	decf	___lwmod@dividend+1,f
  5722  0021' 0283'              	subwf	___lwmod@dividend+1,f
  5723  0022'                    l2701:
  5724  0022' 3001               	movlw	1
  5725  0023'                    u3845:
  5726  0023' 1003               	clrc
  5727  0024' 0C81'              	rrf	___lwmod@divisor+1,f
  5728  0025' 0C80'              	rrf	___lwmod@divisor,f
  5729  0026' 3EFF               	addlw	-1
  5730  0027' 1D03               	skipz
  5731  0028' 2800'              	goto	u3845
  5732  0029' 3001               	movlw	1
  5733  002A' 0284'              	subwf	___lwmod@counter,f
  5734  002B' 1D03               	btfss	3,2
  5735  002C' 2800'              	goto	l2697
  5736  002D'                    l2705:
  5737  002D' 0803'              	movf	___lwmod@dividend+1,w
  5738  002E' 0081'              	movwf	?___lwmod+1
  5739  002F' 0802'              	movf	___lwmod@dividend,w
  5740  0030' 0080'              	movwf	?___lwmod
  5741  0031' 0008               	return
  5742  0032'                    __end_of___lwmod:
  5743                           
  5744                           	psect	text8
  5745  0000'                    __ptext8:	
  5746 ;; *************** function ___lwdiv *****************
  5747 ;; Defined at:
  5748 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwdiv.c"
  5749 ;; Parameters:    Size  Location     Type
  5750 ;;  divisor         2    5[COMMON] unsigned int 
  5751 ;;  dividend        2    7[COMMON] unsigned int 
  5752 ;; Auto vars:     Size  Location     Type
  5753 ;;  quotient        2    9[COMMON] unsigned int 
  5754 ;;  counter         1   11[COMMON] unsigned char 
  5755 ;; Return value:  Size  Location     Type
  5756 ;;                  2    5[COMMON] unsigned int 
  5757 ;; Registers used:
  5758 ;;		wreg, status,2, status,0, btemp+1
  5759 ;; Tracked objects:
  5760 ;;		On entry : 0/0
  5761 ;;		On exit  : 0/0
  5762 ;;		Unchanged: 0/0
  5763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5764 ;;      Params:         4       0       0       0       0
  5765 ;;      Locals:         3       0       0       0       0
  5766 ;;      Temps:          0       0       0       0       0
  5767 ;;      Totals:         7       0       0       0       0
  5768 ;;Total ram usage:        7 bytes
  5769 ;; Hardware stack levels used: 1
  5770 ;; This function calls:
  5771 ;;		Nothing
  5772 ;; This function is called by:
  5773 ;;		_fround
  5774 ;; This function uses a non-reentrant model
  5775 ;;
  5776                           
  5777  0000'                    ___lwdiv:	
  5778                           ;psect for function ___lwdiv
  5779                           
  5780                           
  5781                           ;incstack = 0
  5782                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  5783  0000' 0189'              	clrf	___lwdiv@quotient
  5784  0001' 018A'              	clrf	___lwdiv@quotient+1
  5785  0002' 0805'              	movf	___lwdiv@divisor,w
  5786  0003' 0406'              	iorwf	___lwdiv@divisor+1,w
  5787  0004' 1903               	btfsc	3,2
  5788  0005' 2800'              	goto	l2683
  5789  0006' 018B'              	clrf	___lwdiv@counter
  5790  0007' 0A8B'              	incf	___lwdiv@counter,f
  5791  0008'                    l2671:
  5792  0008' 1B86'              	btfsc	___lwdiv@divisor+1,7
  5793  0009' 2800'              	goto	l2673
  5794  000A' 3001               	movlw	1
  5795  000B'                    u3745:
  5796  000B' 1003               	clrc
  5797  000C' 0D85'              	rlf	___lwdiv@divisor,f
  5798  000D' 0D86'              	rlf	___lwdiv@divisor+1,f
  5799  000E' 3EFF               	addlw	-1
  5800  000F' 1D03               	skipz
  5801  0010' 2800'              	goto	u3745
  5802  0011' 3001               	movlw	1
  5803  0012' 00FF               	movwf	127
  5804  0013' 087F               	movf	127,w
  5805  0014' 078B'              	addwf	___lwdiv@counter,f
  5806  0015' 2800'              	goto	l2671
  5807  0016'                    l2673:
  5808  0016' 3001               	movlw	1
  5809  0017'                    u3765:
  5810  0017' 1003               	clrc
  5811  0018' 0D89'              	rlf	___lwdiv@quotient,f
  5812  0019' 0D8A'              	rlf	___lwdiv@quotient+1,f
  5813  001A' 3EFF               	addlw	-1
  5814  001B' 1D03               	skipz
  5815  001C' 2800'              	goto	u3765
  5816  001D' 0806'              	movf	___lwdiv@divisor+1,w
  5817  001E' 0208'              	subwf	___lwdiv@dividend+1,w
  5818  001F' 1D03               	skipz
  5819  0020' 2800'              	goto	u3775
  5820  0021' 0805'              	movf	___lwdiv@divisor,w
  5821  0022' 0207'              	subwf	___lwdiv@dividend,w
  5822  0023'                    u3775:
  5823  0023' 1C03               	skipc
  5824  0024' 2800'              	goto	l2679
  5825  0025' 0805'              	movf	___lwdiv@divisor,w
  5826  0026' 0287'              	subwf	___lwdiv@dividend,f
  5827  0027' 0806'              	movf	___lwdiv@divisor+1,w
  5828  0028' 1C03               	skipc
  5829  0029' 0388'              	decf	___lwdiv@dividend+1,f
  5830  002A' 0288'              	subwf	___lwdiv@dividend+1,f
  5831  002B' 1409'              	bsf	___lwdiv@quotient,0
  5832  002C'                    l2679:
  5833  002C' 3001               	movlw	1
  5834  002D'                    u3785:
  5835  002D' 1003               	clrc
  5836  002E' 0C86'              	rrf	___lwdiv@divisor+1,f
  5837  002F' 0C85'              	rrf	___lwdiv@divisor,f
  5838  0030' 3EFF               	addlw	-1
  5839  0031' 1D03               	skipz
  5840  0032' 2800'              	goto	u3785
  5841  0033' 3001               	movlw	1
  5842  0034' 028B'              	subwf	___lwdiv@counter,f
  5843  0035' 1D03               	btfss	3,2
  5844  0036' 2800'              	goto	l2673
  5845  0037'                    l2683:
  5846  0037' 080A'              	movf	___lwdiv@quotient+1,w
  5847  0038' 0086'              	movwf	?___lwdiv+1
  5848  0039' 0809'              	movf	___lwdiv@quotient,w
  5849  003A' 0085'              	movwf	?___lwdiv
  5850  003B' 0008               	return
  5851  003C'                    __end_of___lwdiv:
  5852                           
  5853                           	psect	text9
  5854  0000'                    __ptext9:	
  5855 ;; *************** function ___flmul *****************
  5856 ;; Defined at:
  5857 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\sprcmul.c"
  5858 ;; Parameters:    Size  Location     Type
  5859 ;;  b               4    0[BANK0 ] unsigned int 
  5860 ;;  a               4    4[BANK0 ] unsigned int 
  5861 ;; Auto vars:     Size  Location     Type
  5862 ;;  prod            4   20[BANK0 ] struct .
  5863 ;;  grs             4   14[BANK0 ] unsigned long 
  5864 ;;  temp            2   24[BANK0 ] struct .
  5865 ;;  bexp            1   19[BANK0 ] unsigned char 
  5866 ;;  aexp            1   18[BANK0 ] unsigned char 
  5867 ;;  sign            1   13[BANK0 ] unsigned char 
  5868 ;; Return value:  Size  Location     Type
  5869 ;;                  4    0[BANK0 ] unsigned char 
  5870 ;; Registers used:
  5871 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5872 ;; Tracked objects:
  5873 ;;		On entry : 0/0
  5874 ;;		On exit  : 0/0
  5875 ;;		Unchanged: 0/0
  5876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5877 ;;      Params:         0       8       0       0       0
  5878 ;;      Locals:         0      13       0       0       0
  5879 ;;      Temps:          0       5       0       0       0
  5880 ;;      Totals:         0      26       0       0       0
  5881 ;;Total ram usage:       26 bytes
  5882 ;; Hardware stack levels used: 1
  5883 ;; Hardware stack levels required when called: 1
  5884 ;; This function calls:
  5885 ;;		__Umul8_16
  5886 ;; This function is called by:
  5887 ;;		_fround
  5888 ;;		_scale
  5889 ;;		_sprintf
  5890 ;; This function uses a non-reentrant model
  5891 ;;
  5892                           
  5893  0000'                    ___flmul:	
  5894                           ;psect for function ___flmul
  5895                           
  5896                           
  5897                           ;incstack = 0
  5898                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5899  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  5900  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  5901  0002' 0803'              	movf	___flmul@b+3,w
  5902  0003' 3980               	andlw	128
  5903  0004' 008D'              	movwf	___flmul@sign
  5904  0005' 0803'              	movf	___flmul@b+3,w
  5905  0006' 0088'              	movwf	??___flmul
  5906  0007' 0708'              	addwf	??___flmul,w
  5907  0008' 0093'              	movwf	___flmul@bexp
  5908  0009' 1B82'              	btfsc	___flmul@b+2,7
  5909  000A' 1413'              	bsf	___flmul@bexp,0
  5910  000B' 0813'              	movf	___flmul@bexp,w
  5911  000C' 1903               	btfsc	3,2
  5912  000D' 2800'              	goto	l2925
  5913  000E' 0A13'              	incf	___flmul@bexp,w
  5914  000F' 1D03               	btfss	3,2
  5915  0010' 2800'              	goto	l2923
  5916  0011' 3000               	movlw	0
  5917  0012' 0083'              	movwf	___flmul@b+3
  5918  0013' 3000               	movlw	0
  5919  0014' 0082'              	movwf	___flmul@b+2
  5920  0015' 3000               	movlw	0
  5921  0016' 0081'              	movwf	___flmul@b+1
  5922  0017' 3000               	movlw	0
  5923  0018' 0080'              	movwf	___flmul@b
  5924  0019'                    l2923:
  5925  0019' 1782'              	bsf	___flmul@b+2,7
  5926  001A' 2800'              	goto	l2927
  5927  001B'                    l2925:
  5928  001B' 3000               	movlw	0
  5929  001C' 0083'              	movwf	___flmul@b+3
  5930  001D' 3000               	movlw	0
  5931  001E' 0082'              	movwf	___flmul@b+2
  5932  001F' 3000               	movlw	0
  5933  0020' 0081'              	movwf	___flmul@b+1
  5934  0021' 3000               	movlw	0
  5935  0022' 0080'              	movwf	___flmul@b
  5936  0023'                    l2927:
  5937  0023' 0807'              	movf	___flmul@a+3,w
  5938  0024' 3980               	andlw	128
  5939  0025' 00FF               	movwf	127
  5940  0026' 087F               	movf	127,w
  5941  0027' 068D'              	xorwf	___flmul@sign,f
  5942  0028' 0807'              	movf	___flmul@a+3,w
  5943  0029' 0088'              	movwf	??___flmul
  5944  002A' 0708'              	addwf	??___flmul,w
  5945  002B' 0092'              	movwf	___flmul@aexp
  5946  002C' 1B86'              	btfsc	___flmul@a+2,7
  5947  002D' 1412'              	bsf	___flmul@aexp,0
  5948  002E' 0812'              	movf	___flmul@aexp,w
  5949  002F' 1903               	btfsc	3,2
  5950  0030' 2800'              	goto	l2943
  5951  0031' 0A12'              	incf	___flmul@aexp,w
  5952  0032' 1D03               	btfss	3,2
  5953  0033' 2800'              	goto	l2941
  5954  0034' 3000               	movlw	0
  5955  0035' 0087'              	movwf	___flmul@a+3
  5956  0036' 3000               	movlw	0
  5957  0037' 0086'              	movwf	___flmul@a+2
  5958  0038' 3000               	movlw	0
  5959  0039' 0085'              	movwf	___flmul@a+1
  5960  003A' 3000               	movlw	0
  5961  003B' 0084'              	movwf	___flmul@a
  5962  003C'                    l2941:
  5963  003C' 1786'              	bsf	___flmul@a+2,7
  5964  003D' 2800'              	goto	l2945
  5965  003E'                    l2943:
  5966  003E' 3000               	movlw	0
  5967  003F' 0087'              	movwf	___flmul@a+3
  5968  0040' 3000               	movlw	0
  5969  0041' 0086'              	movwf	___flmul@a+2
  5970  0042' 3000               	movlw	0
  5971  0043' 0085'              	movwf	___flmul@a+1
  5972  0044' 3000               	movlw	0
  5973  0045' 0084'              	movwf	___flmul@a
  5974  0046'                    l2945:
  5975  0046' 0812'              	movf	___flmul@aexp,w
  5976  0047' 1D03               	btfss	3,2
  5977  0048' 0813'              	movf	___flmul@bexp,w
  5978  0049' 1D03               	btfss	3,2
  5979  004A' 2800'              	goto	l2953
  5980  004B' 3000               	movlw	0
  5981  004C' 0083'              	movwf	?___flmul+3
  5982  004D' 3000               	movlw	0
  5983  004E' 0082'              	movwf	?___flmul+2
  5984  004F' 3000               	movlw	0
  5985  0050' 0081'              	movwf	?___flmul+1
  5986  0051' 3000               	movlw	0
  5987  0052' 0080'              	movwf	?___flmul
  5988  0053' 0008               	return
  5989  0054'                    l2953:
  5990  0054' 0800'              	movf	___flmul@b,w
  5991  0055' 0080'              	movwf	__Umul8_16@multiplicand
  5992  0056' 0806'              	movf	___flmul@a+2,w
  5993  0057' 120A' 118A' 2000' 120A' 118A' 	fcall	__Umul8_16
  5994  005C' 0801'              	movf	?__Umul8_16+1,w
  5995  005D' 1283               	bcf	3,5	;RP0=0, select bank0
  5996  005E' 1303               	bcf	3,6	;RP1=0, select bank0
  5997  005F' 0099'              	movwf	___flmul@temp+1
  5998  0060' 0800'              	movf	?__Umul8_16,w
  5999  0061' 0098'              	movwf	___flmul@temp
  6000  0062' 0818'              	movf	___flmul@temp,w
  6001  0063' 0088'              	movwf	??___flmul
  6002  0064' 0189'              	clrf	??___flmul+1
  6003  0065' 018A'              	clrf	??___flmul+2
  6004  0066' 018B'              	clrf	??___flmul+3
  6005  0067' 080B'              	movf	??___flmul+3,w
  6006  0068' 0091'              	movwf	___flmul@grs+3
  6007  0069' 080A'              	movf	??___flmul+2,w
  6008  006A' 0090'              	movwf	___flmul@grs+2
  6009  006B' 0809'              	movf	??___flmul+1,w
  6010  006C' 008F'              	movwf	___flmul@grs+1
  6011  006D' 0808'              	movf	??___flmul,w
  6012  006E' 008E'              	movwf	___flmul@grs
  6013  006F' 0819'              	movf	___flmul@temp+1,w
  6014  0070' 0088'              	movwf	??___flmul
  6015  0071' 0189'              	clrf	??___flmul+1
  6016  0072' 018A'              	clrf	??___flmul+2
  6017  0073' 018B'              	clrf	??___flmul+3
  6018  0074' 080B'              	movf	??___flmul+3,w
  6019  0075' 0097'              	movwf	___flmul@prod+3
  6020  0076' 080A'              	movf	??___flmul+2,w
  6021  0077' 0096'              	movwf	___flmul@prod+2
  6022  0078' 0809'              	movf	??___flmul+1,w
  6023  0079' 0095'              	movwf	___flmul@prod+1
  6024  007A' 0808'              	movf	??___flmul,w
  6025  007B' 0094'              	movwf	___flmul@prod
  6026  007C' 0801'              	movf	___flmul@b+1,w
  6027  007D' 0080'              	movwf	__Umul8_16@multiplicand
  6028  007E' 0805'              	movf	___flmul@a+1,w
  6029  007F' 120A' 118A' 2000' 120A' 118A' 	fcall	__Umul8_16
  6030  0084' 0801'              	movf	?__Umul8_16+1,w
  6031  0085' 1283               	bcf	3,5	;RP0=0, select bank0
  6032  0086' 1303               	bcf	3,6	;RP1=0, select bank0
  6033  0087' 0099'              	movwf	___flmul@temp+1
  6034  0088' 0800'              	movf	?__Umul8_16,w
  6035  0089' 0098'              	movwf	___flmul@temp
  6036  008A' 0818'              	movf	___flmul@temp,w
  6037  008B' 0088'              	movwf	??___flmul
  6038  008C' 0189'              	clrf	??___flmul+1
  6039  008D' 018A'              	clrf	??___flmul+2
  6040  008E' 018B'              	clrf	??___flmul+3
  6041  008F' 0808'              	movf	??___flmul,w
  6042  0090' 078E'              	addwf	___flmul@grs,f
  6043  0091' 0809'              	movf	??___flmul+1,w
  6044  0092' 1103               	clrz
  6045  0093' 1803               	skipnc
  6046  0094' 3E01               	addlw	1
  6047  0095' 1D03               	btfss	3,2
  6048  0096' 078F'              	addwf	___flmul@grs+1,f
  6049  0097' 080A'              	movf	??___flmul+2,w
  6050  0098' 1103               	clrz
  6051  0099' 1803               	skipnc
  6052  009A' 3E01               	addlw	1
  6053  009B' 1D03               	btfss	3,2
  6054  009C' 0790'              	addwf	___flmul@grs+2,f
  6055  009D' 080B'              	movf	??___flmul+3,w
  6056  009E' 1103               	clrz
  6057  009F' 1803               	skipnc
  6058  00A0' 3E01               	addlw	1
  6059  00A1' 1D03               	btfss	3,2
  6060  00A2' 0791'              	addwf	___flmul@grs+3,f
  6061  00A3' 0819'              	movf	___flmul@temp+1,w
  6062  00A4' 0088'              	movwf	??___flmul
  6063  00A5' 0189'              	clrf	??___flmul+1
  6064  00A6' 018A'              	clrf	??___flmul+2
  6065  00A7' 018B'              	clrf	??___flmul+3
  6066  00A8' 0808'              	movf	??___flmul,w
  6067  00A9' 0794'              	addwf	___flmul@prod,f
  6068  00AA' 0809'              	movf	??___flmul+1,w
  6069  00AB' 1103               	clrz
  6070  00AC' 1803               	skipnc
  6071  00AD' 3E01               	addlw	1
  6072  00AE' 1D03               	btfss	3,2
  6073  00AF' 0795'              	addwf	___flmul@prod+1,f
  6074  00B0' 080A'              	movf	??___flmul+2,w
  6075  00B1' 1103               	clrz
  6076  00B2' 1803               	skipnc
  6077  00B3' 3E01               	addlw	1
  6078  00B4' 1D03               	btfss	3,2
  6079  00B5' 0796'              	addwf	___flmul@prod+2,f
  6080  00B6' 080B'              	movf	??___flmul+3,w
  6081  00B7' 1103               	clrz
  6082  00B8' 1803               	skipnc
  6083  00B9' 3E01               	addlw	1
  6084  00BA' 1D03               	btfss	3,2
  6085  00BB' 0797'              	addwf	___flmul@prod+3,f
  6086  00BC' 0802'              	movf	___flmul@b+2,w
  6087  00BD' 0080'              	movwf	__Umul8_16@multiplicand
  6088  00BE' 0804'              	movf	___flmul@a,w
  6089  00BF' 120A' 118A' 2000' 120A' 118A' 	fcall	__Umul8_16
  6090  00C4' 0801'              	movf	?__Umul8_16+1,w
  6091  00C5' 1283               	bcf	3,5	;RP0=0, select bank0
  6092  00C6' 1303               	bcf	3,6	;RP1=0, select bank0
  6093  00C7' 0099'              	movwf	___flmul@temp+1
  6094  00C8' 0800'              	movf	?__Umul8_16,w
  6095  00C9' 0098'              	movwf	___flmul@temp
  6096  00CA' 0818'              	movf	___flmul@temp,w
  6097  00CB' 0088'              	movwf	??___flmul
  6098  00CC' 0189'              	clrf	??___flmul+1
  6099  00CD' 018A'              	clrf	??___flmul+2
  6100  00CE' 018B'              	clrf	??___flmul+3
  6101  00CF' 0808'              	movf	??___flmul,w
  6102  00D0' 078E'              	addwf	___flmul@grs,f
  6103  00D1' 0809'              	movf	??___flmul+1,w
  6104  00D2' 1103               	clrz
  6105  00D3' 1803               	skipnc
  6106  00D4' 3E01               	addlw	1
  6107  00D5' 1D03               	btfss	3,2
  6108  00D6' 078F'              	addwf	___flmul@grs+1,f
  6109  00D7' 080A'              	movf	??___flmul+2,w
  6110  00D8' 1103               	clrz
  6111  00D9' 1803               	skipnc
  6112  00DA' 3E01               	addlw	1
  6113  00DB' 1D03               	btfss	3,2
  6114  00DC' 0790'              	addwf	___flmul@grs+2,f
  6115  00DD' 080B'              	movf	??___flmul+3,w
  6116  00DE' 1103               	clrz
  6117  00DF' 1803               	skipnc
  6118  00E0' 3E01               	addlw	1
  6119  00E1' 1D03               	btfss	3,2
  6120  00E2' 0791'              	addwf	___flmul@grs+3,f
  6121  00E3' 0819'              	movf	___flmul@temp+1,w
  6122  00E4' 0088'              	movwf	??___flmul
  6123  00E5' 0189'              	clrf	??___flmul+1
  6124  00E6' 018A'              	clrf	??___flmul+2
  6125  00E7' 018B'              	clrf	??___flmul+3
  6126  00E8' 0808'              	movf	??___flmul,w
  6127  00E9' 0794'              	addwf	___flmul@prod,f
  6128  00EA' 0809'              	movf	??___flmul+1,w
  6129  00EB' 1103               	clrz
  6130  00EC' 1803               	skipnc
  6131  00ED' 3E01               	addlw	1
  6132  00EE' 1D03               	btfss	3,2
  6133  00EF' 0795'              	addwf	___flmul@prod+1,f
  6134  00F0' 080A'              	movf	??___flmul+2,w
  6135  00F1' 1103               	clrz
  6136  00F2' 1803               	skipnc
  6137  00F3' 3E01               	addlw	1
  6138  00F4' 1D03               	btfss	3,2
  6139  00F5' 0796'              	addwf	___flmul@prod+2,f
  6140  00F6' 080B'              	movf	??___flmul+3,w
  6141  00F7' 1103               	clrz
  6142  00F8' 1803               	skipnc
  6143  00F9' 3E01               	addlw	1
  6144  00FA' 1D03               	btfss	3,2
  6145  00FB' 0797'              	addwf	___flmul@prod+3,f
  6146  00FC' 3008               	movlw	8
  6147  00FD' 0088'              	movwf	??___flmul
  6148  00FE'                    u4445:
  6149  00FE' 1003               	clrc
  6150  00FF' 0D8E'              	rlf	___flmul@grs,f
  6151  0100' 0D8F'              	rlf	___flmul@grs+1,f
  6152  0101' 0D90'              	rlf	___flmul@grs+2,f
  6153  0102' 0D91'              	rlf	___flmul@grs+3,f
  6154  0103' 0B88'              	decfsz	??___flmul,f
  6155  0104' 2800'              	goto	u4445
  6156  0105' 0801'              	movf	___flmul@b+1,w
  6157  0106' 0080'              	movwf	__Umul8_16@multiplicand
  6158  0107' 0804'              	movf	___flmul@a,w
  6159  0108' 120A' 118A' 2000' 120A' 118A' 	fcall	__Umul8_16
  6160  010D' 0801'              	movf	?__Umul8_16+1,w
  6161  010E' 1283               	bcf	3,5	;RP0=0, select bank0
  6162  010F' 1303               	bcf	3,6	;RP1=0, select bank0
  6163  0110' 0099'              	movwf	___flmul@temp+1
  6164  0111' 0800'              	movf	?__Umul8_16,w
  6165  0112' 0098'              	movwf	___flmul@temp
  6166  0113' 0818'              	movf	___flmul@temp,w
  6167  0114' 0088'              	movwf	??___flmul
  6168  0115' 0819'              	movf	___flmul@temp+1,w
  6169  0116' 0089'              	movwf	??___flmul+1
  6170  0117' 018A'              	clrf	??___flmul+2
  6171  0118' 018B'              	clrf	??___flmul+3
  6172  0119' 0808'              	movf	??___flmul,w
  6173  011A' 078E'              	addwf	___flmul@grs,f
  6174  011B' 0809'              	movf	??___flmul+1,w
  6175  011C' 1103               	clrz
  6176  011D' 1803               	skipnc
  6177  011E' 3E01               	addlw	1
  6178  011F' 1D03               	btfss	3,2
  6179  0120' 078F'              	addwf	___flmul@grs+1,f
  6180  0121' 080A'              	movf	??___flmul+2,w
  6181  0122' 1103               	clrz
  6182  0123' 1803               	skipnc
  6183  0124' 3E01               	addlw	1
  6184  0125' 1D03               	btfss	3,2
  6185  0126' 0790'              	addwf	___flmul@grs+2,f
  6186  0127' 080B'              	movf	??___flmul+3,w
  6187  0128' 1103               	clrz
  6188  0129' 1803               	skipnc
  6189  012A' 3E01               	addlw	1
  6190  012B' 1D03               	btfss	3,2
  6191  012C' 0791'              	addwf	___flmul@grs+3,f
  6192  012D' 0800'              	movf	___flmul@b,w
  6193  012E' 0080'              	movwf	__Umul8_16@multiplicand
  6194  012F' 0805'              	movf	___flmul@a+1,w
  6195  0130' 120A' 118A' 2000' 120A' 118A' 	fcall	__Umul8_16
  6196  0135' 0801'              	movf	?__Umul8_16+1,w
  6197  0136' 1283               	bcf	3,5	;RP0=0, select bank0
  6198  0137' 1303               	bcf	3,6	;RP1=0, select bank0
  6199  0138' 0099'              	movwf	___flmul@temp+1
  6200  0139' 0800'              	movf	?__Umul8_16,w
  6201  013A' 0098'              	movwf	___flmul@temp
  6202  013B' 0818'              	movf	___flmul@temp,w
  6203  013C' 0088'              	movwf	??___flmul
  6204  013D' 0819'              	movf	___flmul@temp+1,w
  6205  013E' 0089'              	movwf	??___flmul+1
  6206  013F' 018A'              	clrf	??___flmul+2
  6207  0140' 018B'              	clrf	??___flmul+3
  6208  0141' 0808'              	movf	??___flmul,w
  6209  0142' 078E'              	addwf	___flmul@grs,f
  6210  0143' 0809'              	movf	??___flmul+1,w
  6211  0144' 1103               	clrz
  6212  0145' 1803               	skipnc
  6213  0146' 3E01               	addlw	1
  6214  0147' 1D03               	btfss	3,2
  6215  0148' 078F'              	addwf	___flmul@grs+1,f
  6216  0149' 080A'              	movf	??___flmul+2,w
  6217  014A' 1103               	clrz
  6218  014B' 1803               	skipnc
  6219  014C' 3E01               	addlw	1
  6220  014D' 1D03               	btfss	3,2
  6221  014E' 0790'              	addwf	___flmul@grs+2,f
  6222  014F' 080B'              	movf	??___flmul+3,w
  6223  0150' 1103               	clrz
  6224  0151' 1803               	skipnc
  6225  0152' 3E01               	addlw	1
  6226  0153' 1D03               	btfss	3,2
  6227  0154' 0791'              	addwf	___flmul@grs+3,f
  6228  0155' 3008               	movlw	8
  6229  0156' 0088'              	movwf	??___flmul
  6230  0157'                    u4475:
  6231  0157' 1003               	clrc
  6232  0158' 0D8E'              	rlf	___flmul@grs,f
  6233  0159' 0D8F'              	rlf	___flmul@grs+1,f
  6234  015A' 0D90'              	rlf	___flmul@grs+2,f
  6235  015B' 0D91'              	rlf	___flmul@grs+3,f
  6236  015C' 0B88'              	decfsz	??___flmul,f
  6237  015D' 2800'              	goto	u4475
  6238  015E' 0800'              	movf	___flmul@b,w
  6239  015F' 0080'              	movwf	__Umul8_16@multiplicand
  6240  0160' 0804'              	movf	___flmul@a,w
  6241  0161' 120A' 118A' 2000' 120A' 118A' 	fcall	__Umul8_16
  6242  0166' 0801'              	movf	?__Umul8_16+1,w
  6243  0167' 1283               	bcf	3,5	;RP0=0, select bank0
  6244  0168' 1303               	bcf	3,6	;RP1=0, select bank0
  6245  0169' 0099'              	movwf	___flmul@temp+1
  6246  016A' 0800'              	movf	?__Umul8_16,w
  6247  016B' 0098'              	movwf	___flmul@temp
  6248  016C' 0818'              	movf	___flmul@temp,w
  6249  016D' 0088'              	movwf	??___flmul
  6250  016E' 0819'              	movf	___flmul@temp+1,w
  6251  016F' 0089'              	movwf	??___flmul+1
  6252  0170' 018A'              	clrf	??___flmul+2
  6253  0171' 018B'              	clrf	??___flmul+3
  6254  0172' 0808'              	movf	??___flmul,w
  6255  0173' 078E'              	addwf	___flmul@grs,f
  6256  0174' 0809'              	movf	??___flmul+1,w
  6257  0175' 1103               	clrz
  6258  0176' 1803               	skipnc
  6259  0177' 3E01               	addlw	1
  6260  0178' 1D03               	btfss	3,2
  6261  0179' 078F'              	addwf	___flmul@grs+1,f
  6262  017A' 080A'              	movf	??___flmul+2,w
  6263  017B' 1103               	clrz
  6264  017C' 1803               	skipnc
  6265  017D' 3E01               	addlw	1
  6266  017E' 1D03               	btfss	3,2
  6267  017F' 0790'              	addwf	___flmul@grs+2,f
  6268  0180' 080B'              	movf	??___flmul+3,w
  6269  0181' 1103               	clrz
  6270  0182' 1803               	skipnc
  6271  0183' 3E01               	addlw	1
  6272  0184' 1D03               	btfss	3,2
  6273  0185' 0791'              	addwf	___flmul@grs+3,f
  6274  0186' 0801'              	movf	___flmul@b+1,w
  6275  0187' 0080'              	movwf	__Umul8_16@multiplicand
  6276  0188' 0806'              	movf	___flmul@a+2,w
  6277  0189' 120A' 118A' 2000' 120A' 118A' 	fcall	__Umul8_16
  6278  018E' 0801'              	movf	?__Umul8_16+1,w
  6279  018F' 1283               	bcf	3,5	;RP0=0, select bank0
  6280  0190' 1303               	bcf	3,6	;RP1=0, select bank0
  6281  0191' 0099'              	movwf	___flmul@temp+1
  6282  0192' 0800'              	movf	?__Umul8_16,w
  6283  0193' 0098'              	movwf	___flmul@temp
  6284  0194' 0818'              	movf	___flmul@temp,w
  6285  0195' 0088'              	movwf	??___flmul
  6286  0196' 0819'              	movf	___flmul@temp+1,w
  6287  0197' 0089'              	movwf	??___flmul+1
  6288  0198' 018A'              	clrf	??___flmul+2
  6289  0199' 018B'              	clrf	??___flmul+3
  6290  019A' 0808'              	movf	??___flmul,w
  6291  019B' 0794'              	addwf	___flmul@prod,f
  6292  019C' 0809'              	movf	??___flmul+1,w
  6293  019D' 1103               	clrz
  6294  019E' 1803               	skipnc
  6295  019F' 3E01               	addlw	1
  6296  01A0' 1D03               	btfss	3,2
  6297  01A1' 0795'              	addwf	___flmul@prod+1,f
  6298  01A2' 080A'              	movf	??___flmul+2,w
  6299  01A3' 1103               	clrz
  6300  01A4' 1803               	skipnc
  6301  01A5' 3E01               	addlw	1
  6302  01A6' 1D03               	btfss	3,2
  6303  01A7' 0796'              	addwf	___flmul@prod+2,f
  6304  01A8' 080B'              	movf	??___flmul+3,w
  6305  01A9' 1103               	clrz
  6306  01AA' 1803               	skipnc
  6307  01AB' 3E01               	addlw	1
  6308  01AC' 1D03               	btfss	3,2
  6309  01AD' 0797'              	addwf	___flmul@prod+3,f
  6310  01AE' 0802'              	movf	___flmul@b+2,w
  6311  01AF' 0080'              	movwf	__Umul8_16@multiplicand
  6312  01B0' 0805'              	movf	___flmul@a+1,w
  6313  01B1' 120A' 118A' 2000' 120A' 118A' 	fcall	__Umul8_16
  6314  01B6' 0801'              	movf	?__Umul8_16+1,w
  6315  01B7' 1283               	bcf	3,5	;RP0=0, select bank0
  6316  01B8' 1303               	bcf	3,6	;RP1=0, select bank0
  6317  01B9' 0099'              	movwf	___flmul@temp+1
  6318  01BA' 0800'              	movf	?__Umul8_16,w
  6319  01BB' 0098'              	movwf	___flmul@temp
  6320  01BC' 0818'              	movf	___flmul@temp,w
  6321  01BD' 0088'              	movwf	??___flmul
  6322  01BE' 0819'              	movf	___flmul@temp+1,w
  6323  01BF' 0089'              	movwf	??___flmul+1
  6324  01C0' 018A'              	clrf	??___flmul+2
  6325  01C1' 018B'              	clrf	??___flmul+3
  6326  01C2' 0808'              	movf	??___flmul,w
  6327  01C3' 0794'              	addwf	___flmul@prod,f
  6328  01C4' 0809'              	movf	??___flmul+1,w
  6329  01C5' 1103               	clrz
  6330  01C6' 1803               	skipnc
  6331  01C7' 3E01               	addlw	1
  6332  01C8' 1D03               	btfss	3,2
  6333  01C9' 0795'              	addwf	___flmul@prod+1,f
  6334  01CA' 080A'              	movf	??___flmul+2,w
  6335  01CB' 1103               	clrz
  6336  01CC' 1803               	skipnc
  6337  01CD' 3E01               	addlw	1
  6338  01CE' 1D03               	btfss	3,2
  6339  01CF' 0796'              	addwf	___flmul@prod+2,f
  6340  01D0' 080B'              	movf	??___flmul+3,w
  6341  01D1' 1103               	clrz
  6342  01D2' 1803               	skipnc
  6343  01D3' 3E01               	addlw	1
  6344  01D4' 1D03               	btfss	3,2
  6345  01D5' 0797'              	addwf	___flmul@prod+3,f
  6346  01D6' 0802'              	movf	___flmul@b+2,w
  6347  01D7' 0080'              	movwf	__Umul8_16@multiplicand
  6348  01D8' 0806'              	movf	___flmul@a+2,w
  6349  01D9' 120A' 118A' 2000' 120A' 118A' 	fcall	__Umul8_16
  6350  01DE' 0801'              	movf	?__Umul8_16+1,w
  6351  01DF' 1283               	bcf	3,5	;RP0=0, select bank0
  6352  01E0' 1303               	bcf	3,6	;RP1=0, select bank0
  6353  01E1' 0099'              	movwf	___flmul@temp+1
  6354  01E2' 0800'              	movf	?__Umul8_16,w
  6355  01E3' 0098'              	movwf	___flmul@temp
  6356  01E4' 0818'              	movf	___flmul@temp,w
  6357  01E5' 0088'              	movwf	??___flmul
  6358  01E6' 0819'              	movf	___flmul@temp+1,w
  6359  01E7' 0089'              	movwf	??___flmul+1
  6360  01E8' 018A'              	clrf	??___flmul+2
  6361  01E9' 018B'              	clrf	??___flmul+3
  6362  01EA' 3008               	movlw	8
  6363  01EB'                    u4515:
  6364  01EB' 1003               	clrc
  6365  01EC' 0D88'              	rlf	??___flmul,f
  6366  01ED' 0D89'              	rlf	??___flmul+1,f
  6367  01EE' 0D8A'              	rlf	??___flmul+2,f
  6368  01EF' 0D8B'              	rlf	??___flmul+3,f
  6369  01F0' 3EFF               	addlw	-1
  6370  01F1' 1D03               	skipz
  6371  01F2' 2800'              	goto	u4515
  6372  01F3' 0808'              	movf	??___flmul,w
  6373  01F4' 0794'              	addwf	___flmul@prod,f
  6374  01F5' 0809'              	movf	??___flmul+1,w
  6375  01F6' 1103               	clrz
  6376  01F7' 1803               	skipnc
  6377  01F8' 3E01               	addlw	1
  6378  01F9' 1D03               	btfss	3,2
  6379  01FA' 0795'              	addwf	___flmul@prod+1,f
  6380  01FB' 080A'              	movf	??___flmul+2,w
  6381  01FC' 1103               	clrz
  6382  01FD' 1803               	skipnc
  6383  01FE' 3E01               	addlw	1
  6384  01FF' 1D03               	btfss	3,2
  6385  0200' 0796'              	addwf	___flmul@prod+2,f
  6386  0201' 080B'              	movf	??___flmul+3,w
  6387  0202' 1103               	clrz
  6388  0203' 1803               	skipnc
  6389  0204' 3E01               	addlw	1
  6390  0205' 1D03               	btfss	3,2
  6391  0206' 0797'              	addwf	___flmul@prod+3,f
  6392  0207' 080E'              	movf	___flmul@grs,w
  6393  0208' 0088'              	movwf	??___flmul
  6394  0209' 080F'              	movf	___flmul@grs+1,w
  6395  020A' 0089'              	movwf	??___flmul+1
  6396  020B' 0810'              	movf	___flmul@grs+2,w
  6397  020C' 008A'              	movwf	??___flmul+2
  6398  020D' 0811'              	movf	___flmul@grs+3,w
  6399  020E' 008B'              	movwf	??___flmul+3
  6400  020F' 3018               	movlw	24
  6401  0210'                    u4535:
  6402  0210' 1003               	clrc
  6403  0211' 0C8B'              	rrf	??___flmul+3,f
  6404  0212' 0C8A'              	rrf	??___flmul+2,f
  6405  0213' 0C89'              	rrf	??___flmul+1,f
  6406  0214' 0C88'              	rrf	??___flmul,f
  6407  0215' 3EFF               	addlw	-1
  6408  0216' 1D03               	skipz
  6409  0217' 2800'              	goto	u4535
  6410  0218' 0808'              	movf	??___flmul,w
  6411  0219' 0794'              	addwf	___flmul@prod,f
  6412  021A' 0809'              	movf	??___flmul+1,w
  6413  021B' 1103               	clrz
  6414  021C' 1803               	skipnc
  6415  021D' 3E01               	addlw	1
  6416  021E' 1D03               	btfss	3,2
  6417  021F' 0795'              	addwf	___flmul@prod+1,f
  6418  0220' 080A'              	movf	??___flmul+2,w
  6419  0221' 1103               	clrz
  6420  0222' 1803               	skipnc
  6421  0223' 3E01               	addlw	1
  6422  0224' 1D03               	btfss	3,2
  6423  0225' 0796'              	addwf	___flmul@prod+2,f
  6424  0226' 080B'              	movf	??___flmul+3,w
  6425  0227' 1103               	clrz
  6426  0228' 1803               	skipnc
  6427  0229' 3E01               	addlw	1
  6428  022A' 1D03               	btfss	3,2
  6429  022B' 0797'              	addwf	___flmul@prod+3,f
  6430  022C' 3008               	movlw	8
  6431  022D' 0088'              	movwf	??___flmul
  6432  022E'                    u4555:
  6433  022E' 1003               	clrc
  6434  022F' 0D8E'              	rlf	___flmul@grs,f
  6435  0230' 0D8F'              	rlf	___flmul@grs+1,f
  6436  0231' 0D90'              	rlf	___flmul@grs+2,f
  6437  0232' 0D91'              	rlf	___flmul@grs+3,f
  6438  0233' 0B88'              	decfsz	??___flmul,f
  6439  0234' 2800'              	goto	u4555
  6440  0235' 0813'              	movf	___flmul@bexp,w
  6441  0236' 0712'              	addwf	___flmul@aexp,w
  6442  0237' 0088'              	movwf	??___flmul
  6443  0238' 0189'              	clrf	??___flmul+1
  6444  0239' 0D89'              	rlf	??___flmul+1,f
  6445  023A' 0808'              	movf	??___flmul,w
  6446  023B' 3E82               	addlw	130
  6447  023C' 0098'              	movwf	___flmul@temp
  6448  023D' 0809'              	movf	??___flmul+1,w
  6449  023E' 1803               	skipnc
  6450  023F' 3E01               	addlw	1
  6451  0240' 3EFF               	addlw	255
  6452  0241' 0099'              	movwf	___flmul@temp+1
  6453  0242'                    l3005:
  6454  0242' 1B96'              	btfsc	___flmul@prod+2,7
  6455  0243' 2800'              	goto	l3007
  6456  0244' 3001               	movlw	1
  6457  0245' 0088'              	movwf	??___flmul
  6458  0246'                    u4565:
  6459  0246' 1003               	clrc
  6460  0247' 0D94'              	rlf	___flmul@prod,f
  6461  0248' 0D95'              	rlf	___flmul@prod+1,f
  6462  0249' 0D96'              	rlf	___flmul@prod+2,f
  6463  024A' 0D97'              	rlf	___flmul@prod+3,f
  6464  024B' 0B88'              	decfsz	??___flmul,f
  6465  024C' 2800'              	goto	u4565
  6466  024D' 1B91'              	btfsc	___flmul@grs+3,7
  6467  024E' 1414'              	bsf	___flmul@prod,0
  6468  024F' 3001               	movlw	1
  6469  0250' 0088'              	movwf	??___flmul
  6470  0251'                    u4585:
  6471  0251' 1003               	clrc
  6472  0252' 0D8E'              	rlf	___flmul@grs,f
  6473  0253' 0D8F'              	rlf	___flmul@grs+1,f
  6474  0254' 0D90'              	rlf	___flmul@grs+2,f
  6475  0255' 0D91'              	rlf	___flmul@grs+3,f
  6476  0256' 0B88'              	decfsz	??___flmul,f
  6477  0257' 2800'              	goto	u4585
  6478  0258' 30FF               	movlw	255
  6479  0259' 0798'              	addwf	___flmul@temp,f
  6480  025A' 1803               	skipnc
  6481  025B' 0A99'              	incf	___flmul@temp+1,f
  6482  025C' 30FF               	movlw	255
  6483  025D' 0799'              	addwf	___flmul@temp+1,f
  6484  025E' 2800'              	goto	l3005
  6485  025F'                    l3007:
  6486  025F' 0192'              	clrf	___flmul@aexp
  6487  0260' 1F91'              	btfss	___flmul@grs+3,7
  6488  0261' 2800'              	goto	l3017
  6489  0262' 30FF               	movlw	255
  6490  0263' 050E'              	andwf	___flmul@grs,w
  6491  0264' 0088'              	movwf	??___flmul
  6492  0265' 30FF               	movlw	255
  6493  0266' 050F'              	andwf	___flmul@grs+1,w
  6494  0267' 0089'              	movwf	??___flmul+1
  6495  0268' 30FF               	movlw	255
  6496  0269' 0510'              	andwf	___flmul@grs+2,w
  6497  026A' 008A'              	movwf	??___flmul+2
  6498  026B' 307F               	movlw	127
  6499  026C' 0511'              	andwf	___flmul@grs+3,w
  6500  026D' 008B'              	movwf	??___flmul+3
  6501  026E' 080B'              	movf	??___flmul+3,w
  6502  026F' 040A'              	iorwf	??___flmul+2,w
  6503  0270' 0409'              	iorwf	??___flmul+1,w
  6504  0271' 0408'              	iorwf	??___flmul,w
  6505  0272' 1903               	skipnz
  6506  0273' 1814'              	btfsc	___flmul@prod,0
  6507  0274' 2800'              	goto	l3013
  6508  0275' 2800'              	goto	l3017
  6509  0276'                    l3013:
  6510  0276' 0192'              	clrf	___flmul@aexp
  6511  0277' 0A92'              	incf	___flmul@aexp,f
  6512  0278'                    l3017:
  6513  0278' 0812'              	movf	___flmul@aexp,w
  6514  0279' 1903               	btfsc	3,2
  6515  027A' 2800'              	goto	l3027
  6516  027B' 3001               	movlw	1
  6517  027C' 0794'              	addwf	___flmul@prod,f
  6518  027D' 3000               	movlw	0
  6519  027E' 1803               	skipnc
  6520  027F' 3001               	movlw	1
  6521  0280' 0795'              	addwf	___flmul@prod+1,f
  6522  0281' 3000               	movlw	0
  6523  0282' 1803               	skipnc
  6524  0283' 3001               	movlw	1
  6525  0284' 0796'              	addwf	___flmul@prod+2,f
  6526  0285' 3000               	movlw	0
  6527  0286' 1803               	skipnc
  6528  0287' 3001               	movlw	1
  6529  0288' 0797'              	addwf	___flmul@prod+3,f
  6530  0289' 1C17'              	btfss	___flmul@prod+3,0
  6531  028A' 2800'              	goto	l3027
  6532  028B' 0814'              	movf	___flmul@prod,w
  6533  028C' 0088'              	movwf	??___flmul
  6534  028D' 0815'              	movf	___flmul@prod+1,w
  6535  028E' 0089'              	movwf	??___flmul+1
  6536  028F' 0816'              	movf	___flmul@prod+2,w
  6537  0290' 008A'              	movwf	??___flmul+2
  6538  0291' 0817'              	movf	___flmul@prod+3,w
  6539  0292' 008B'              	movwf	??___flmul+3
  6540  0293' 3001               	movlw	1
  6541  0294' 008C'              	movwf	??___flmul+4
  6542  0295'                    u4655:
  6543  0295' 0D0B'              	rlf	??___flmul+3,w
  6544  0296' 0C8B'              	rrf	??___flmul+3,f
  6545  0297' 0C8A'              	rrf	??___flmul+2,f
  6546  0298' 0C89'              	rrf	??___flmul+1,f
  6547  0299' 0C88'              	rrf	??___flmul,f
  6548  029A' 0B8C'              	decfsz	??___flmul+4,f
  6549  029B' 2800'              	goto	u4655
  6550  029C' 080B'              	movf	??___flmul+3,w
  6551  029D' 0097'              	movwf	___flmul@prod+3
  6552  029E' 080A'              	movf	??___flmul+2,w
  6553  029F' 0096'              	movwf	___flmul@prod+2
  6554  02A0' 0809'              	movf	??___flmul+1,w
  6555  02A1' 0095'              	movwf	___flmul@prod+1
  6556  02A2' 0808'              	movf	??___flmul,w
  6557  02A3' 0094'              	movwf	___flmul@prod
  6558  02A4' 3001               	movlw	1
  6559  02A5' 0798'              	addwf	___flmul@temp,f
  6560  02A6' 1803               	skipnc
  6561  02A7' 0A99'              	incf	___flmul@temp+1,f
  6562  02A8' 3000               	movlw	0
  6563  02A9' 0799'              	addwf	___flmul@temp+1,f
  6564  02AA'                    l3027:
  6565  02AA' 0819'              	movf	___flmul@temp+1,w
  6566  02AB' 3A80               	xorlw	128
  6567  02AC' 00FF               	movwf	127
  6568  02AD' 3080               	movlw	128
  6569  02AE' 027F               	subwf	127,w
  6570  02AF' 1D03               	skipz
  6571  02B0' 2800'              	goto	u4665
  6572  02B1' 30FF               	movlw	255
  6573  02B2' 0218'              	subwf	___flmul@temp,w
  6574  02B3'                    u4665:
  6575  02B3' 1C03               	skipc
  6576  02B4' 2800'              	goto	l3031
  6577  02B5' 307F               	movlw	127
  6578  02B6' 1283               	bcf	3,5	;RP0=0, select bank0
  6579  02B7' 1303               	bcf	3,6	;RP1=0, select bank0
  6580  02B8' 0097'              	movwf	___flmul@prod+3
  6581  02B9' 3080               	movlw	128
  6582  02BA' 0096'              	movwf	___flmul@prod+2
  6583  02BB' 3000               	movlw	0
  6584  02BC' 0095'              	movwf	___flmul@prod+1
  6585  02BD' 3000               	movlw	0
  6586  02BE' 0094'              	movwf	___flmul@prod
  6587  02BF' 2800'              	goto	l3045
  6588  02C0'                    l3031:
  6589  02C0' 1283               	bcf	3,5	;RP0=0, select bank0
  6590  02C1' 1303               	bcf	3,6	;RP1=0, select bank0
  6591  02C2' 0819'              	movf	___flmul@temp+1,w
  6592  02C3' 3A80               	xorlw	128
  6593  02C4' 00FF               	movwf	127
  6594  02C5' 3080               	movlw	128
  6595  02C6' 027F               	subwf	127,w
  6596  02C7' 1D03               	skipz
  6597  02C8' 2800'              	goto	u4675
  6598  02C9' 3001               	movlw	1
  6599  02CA' 0218'              	subwf	___flmul@temp,w
  6600  02CB'                    u4675:
  6601  02CB' 1803               	skipnc
  6602  02CC' 2800'              	goto	l3037
  6603  02CD' 3000               	movlw	0
  6604  02CE' 1283               	bcf	3,5	;RP0=0, select bank0
  6605  02CF' 1303               	bcf	3,6	;RP1=0, select bank0
  6606  02D0' 0097'              	movwf	___flmul@prod+3
  6607  02D1' 3000               	movlw	0
  6608  02D2' 0096'              	movwf	___flmul@prod+2
  6609  02D3' 3000               	movlw	0
  6610  02D4' 0095'              	movwf	___flmul@prod+1
  6611  02D5' 3000               	movlw	0
  6612  02D6' 0094'              	movwf	___flmul@prod
  6613  02D7' 018D'              	clrf	___flmul@sign
  6614  02D8' 2800'              	goto	l3045
  6615  02D9'                    l3037:
  6616  02D9' 1283               	bcf	3,5	;RP0=0, select bank0
  6617  02DA' 1303               	bcf	3,6	;RP1=0, select bank0
  6618  02DB' 0818'              	movf	___flmul@temp,w
  6619  02DC' 0093'              	movwf	___flmul@bexp
  6620  02DD' 30FF               	movlw	255
  6621  02DE' 0594'              	andwf	___flmul@prod,f
  6622  02DF' 30FF               	movlw	255
  6623  02E0' 0595'              	andwf	___flmul@prod+1,f
  6624  02E1' 307F               	movlw	127
  6625  02E2' 0596'              	andwf	___flmul@prod+2,f
  6626  02E3' 3000               	movlw	0
  6627  02E4' 0597'              	andwf	___flmul@prod+3,f
  6628  02E5' 1813'              	btfsc	___flmul@bexp,0
  6629  02E6' 1796'              	bsf	___flmul@prod+2,7
  6630  02E7' 0813'              	movf	___flmul@bexp,w
  6631  02E8' 0088'              	movwf	??___flmul
  6632  02E9' 1003               	clrc
  6633  02EA' 0C08'              	rrf	??___flmul,w
  6634  02EB' 0097'              	movwf	___flmul@prod+3
  6635  02EC'                    l3045:
  6636  02EC' 080D'              	movf	___flmul@sign,w
  6637  02ED' 00FF               	movwf	127
  6638  02EE' 087F               	movf	127,w
  6639  02EF' 0497'              	iorwf	___flmul@prod+3,f
  6640  02F0' 0817'              	movf	___flmul@prod+3,w
  6641  02F1' 0083'              	movwf	?___flmul+3
  6642  02F2' 0816'              	movf	___flmul@prod+2,w
  6643  02F3' 0082'              	movwf	?___flmul+2
  6644  02F4' 0815'              	movf	___flmul@prod+1,w
  6645  02F5' 0081'              	movwf	?___flmul+1
  6646  02F6' 0814'              	movf	___flmul@prod,w
  6647  02F7' 0080'              	movwf	?___flmul
  6648  02F8' 0008               	return
  6649  02F9'                    __end_of___flmul:
  6650                           
  6651                           	psect	text10
  6652  0000'                    __ptext10:	
  6653 ;; *************** function __Umul8_16 *****************
  6654 ;; Defined at:
  6655 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul8_16.c"
  6656 ;; Parameters:    Size  Location     Type
  6657 ;;  multiplier      1    wreg     unsigned char 
  6658 ;;  multiplicand    1    0[COMMON] unsigned char 
  6659 ;; Auto vars:     Size  Location     Type
  6660 ;;  multiplier      1    8[COMMON] unsigned char 
  6661 ;;  word_mpld       2    6[COMMON] unsigned int 
  6662 ;;  product         2    4[COMMON] unsigned int 
  6663 ;; Return value:  Size  Location     Type
  6664 ;;                  2    0[COMMON] unsigned int 
  6665 ;; Registers used:
  6666 ;;		wreg, status,2, status,0
  6667 ;; Tracked objects:
  6668 ;;		On entry : 0/0
  6669 ;;		On exit  : 0/0
  6670 ;;		Unchanged: 0/0
  6671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6672 ;;      Params:         2       0       0       0       0
  6673 ;;      Locals:         5       0       0       0       0
  6674 ;;      Temps:          2       0       0       0       0
  6675 ;;      Totals:         9       0       0       0       0
  6676 ;;Total ram usage:        9 bytes
  6677 ;; Hardware stack levels used: 1
  6678 ;; This function calls:
  6679 ;;		Nothing
  6680 ;; This function is called by:
  6681 ;;		___flmul
  6682 ;; This function uses a non-reentrant model
  6683 ;;
  6684                           
  6685  0000'                    __Umul8_16:	
  6686                           ;psect for function __Umul8_16
  6687                           
  6688                           
  6689                           ;incstack = 0
  6690                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6691                           ;__Umul8_16@multiplier stored from wreg
  6692  0000' 0088'              	movwf	__Umul8_16@multiplier
  6693  0001' 0184'              	clrf	__Umul8_16@product
  6694  0002' 0185'              	clrf	__Umul8_16@product+1
  6695  0003' 0800'              	movf	__Umul8_16@multiplicand,w
  6696  0004' 0082'              	movwf	??__Umul8_16
  6697  0005' 0183'              	clrf	??__Umul8_16+1
  6698  0006' 0802'              	movf	??__Umul8_16,w
  6699  0007' 0086'              	movwf	__Umul8_16@word_mpld
  6700  0008' 0803'              	movf	??__Umul8_16+1,w
  6701  0009' 0087'              	movwf	__Umul8_16@word_mpld+1
  6702  000A'                    l2559:
  6703  000A' 1C08'              	btfss	__Umul8_16@multiplier,0
  6704  000B' 2800'              	goto	l820
  6705  000C' 0806'              	movf	__Umul8_16@word_mpld,w
  6706  000D' 0784'              	addwf	__Umul8_16@product,f
  6707  000E' 1803               	skipnc
  6708  000F' 0A85'              	incf	__Umul8_16@product+1,f
  6709  0010' 0807'              	movf	__Umul8_16@word_mpld+1,w
  6710  0011' 0785'              	addwf	__Umul8_16@product+1,f
  6711  0012'                    l820:
  6712  0012' 3001               	movlw	1
  6713  0013'                    u3485:
  6714  0013' 1003               	clrc
  6715  0014' 0D86'              	rlf	__Umul8_16@word_mpld,f
  6716  0015' 0D87'              	rlf	__Umul8_16@word_mpld+1,f
  6717  0016' 3EFF               	addlw	-1
  6718  0017' 1D03               	skipz
  6719  0018' 2800'              	goto	u3485
  6720  0019' 1003               	clrc
  6721  001A' 0C88'              	rrf	__Umul8_16@multiplier,f
  6722  001B' 0808'              	movf	__Umul8_16@multiplier,w
  6723  001C' 1D03               	btfss	3,2
  6724  001D' 2800'              	goto	l2559
  6725  001E' 0805'              	movf	__Umul8_16@product+1,w
  6726  001F' 0081'              	movwf	?__Umul8_16+1
  6727  0020' 0804'              	movf	__Umul8_16@product,w
  6728  0021' 0080'              	movwf	?__Umul8_16
  6729  0022' 0008               	return
  6730  0023'                    __end_of__Umul8_16:
  6731                           
  6732                           	psect	text11
  6733  0000'                    __ptext11:	
  6734 ;; *************** function __tdiv_to_l_ *****************
  6735 ;; Defined at:
  6736 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\ftdivl.c"
  6737 ;; Parameters:    Size  Location     Type
  6738 ;;  f1              4    0[COMMON] float 
  6739 ;;  f2              4    4[COMMON] float 
  6740 ;; Auto vars:     Size  Location     Type
  6741 ;;  quot            4    0[BANK0 ] unsigned long 
  6742 ;;  exp1            1    5[BANK0 ] unsigned char 
  6743 ;;  cntr            1    4[BANK0 ] unsigned char 
  6744 ;; Return value:  Size  Location     Type
  6745 ;;                  4    0[COMMON] unsigned long 
  6746 ;; Registers used:
  6747 ;;		wreg, status,2, status,0, btemp+1
  6748 ;; Tracked objects:
  6749 ;;		On entry : 0/0
  6750 ;;		On exit  : 0/0
  6751 ;;		Unchanged: 0/0
  6752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6753 ;;      Params:         8       0       0       0       0
  6754 ;;      Locals:         0       6       0       0       0
  6755 ;;      Temps:          3       0       0       0       0
  6756 ;;      Totals:        11       6       0       0       0
  6757 ;;Total ram usage:       17 bytes
  6758 ;; Hardware stack levels used: 1
  6759 ;; This function calls:
  6760 ;;		Nothing
  6761 ;; This function is called by:
  6762 ;;		_sprintf
  6763 ;; This function uses a non-reentrant model
  6764 ;;
  6765                           
  6766  0000'                    __tdiv_to_l_:	
  6767                           ;psect for function __tdiv_to_l_
  6768                           
  6769                           
  6770                           ;incstack = 0
  6771                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0+btemp+1]
  6772  0000' 0800'              	movf	__tdiv_to_l_@f1,w
  6773  0001' 0088'              	movwf	??__tdiv_to_l_
  6774  0002' 0801'              	movf	__tdiv_to_l_@f1+1,w
  6775  0003' 0089'              	movwf	??__tdiv_to_l_+1
  6776  0004' 0802'              	movf	__tdiv_to_l_@f1+2,w
  6777  0005' 008A'              	movwf	??__tdiv_to_l_+2
  6778  0006' 1003               	clrc
  6779  0007' 0D09'              	rlf	??__tdiv_to_l_+1,w
  6780  0008' 0D0A'              	rlf	??__tdiv_to_l_+2,w
  6781  0009' 1283               	bcf	3,5	;RP0=0, select bank0
  6782  000A' 1303               	bcf	3,6	;RP1=0, select bank0
  6783  000B' 0085'              	movwf	__tdiv_to_l_@exp1
  6784  000C' 0805'              	movf	__tdiv_to_l_@exp1,w
  6785  000D' 1D03               	btfss	3,2
  6786  000E' 2800'              	goto	l3161
  6787  000F'                    l3157:
  6788  000F' 3000               	movlw	0
  6789  0010' 0083'              	movwf	?__tdiv_to_l_+3
  6790  0011' 3000               	movlw	0
  6791  0012' 0082'              	movwf	?__tdiv_to_l_+2
  6792  0013' 3000               	movlw	0
  6793  0014' 0081'              	movwf	?__tdiv_to_l_+1
  6794  0015' 3000               	movlw	0
  6795  0016' 0080'              	movwf	?__tdiv_to_l_
  6796  0017' 0008               	return
  6797  0018'                    l3161:
  6798  0018' 0804'              	movf	__tdiv_to_l_@f2,w
  6799  0019' 0088'              	movwf	??__tdiv_to_l_
  6800  001A' 0805'              	movf	__tdiv_to_l_@f2+1,w
  6801  001B' 0089'              	movwf	??__tdiv_to_l_+1
  6802  001C' 0806'              	movf	__tdiv_to_l_@f2+2,w
  6803  001D' 008A'              	movwf	??__tdiv_to_l_+2
  6804  001E' 1003               	clrc
  6805  001F' 0D09'              	rlf	??__tdiv_to_l_+1,w
  6806  0020' 0D0A'              	rlf	??__tdiv_to_l_+2,w
  6807  0021' 0084'              	movwf	__tdiv_to_l_@cntr
  6808  0022' 0804'              	movf	__tdiv_to_l_@cntr,w
  6809  0023' 1903               	btfsc	3,2
  6810  0024' 2800'              	goto	l3157
  6811  0025' 1781'              	bsf	__tdiv_to_l_@f1+1,7
  6812  0026' 30FF               	movlw	255
  6813  0027' 0580'              	andwf	__tdiv_to_l_@f1,f
  6814  0028' 30FF               	movlw	255
  6815  0029' 0581'              	andwf	__tdiv_to_l_@f1+1,f
  6816  002A' 3000               	movlw	0
  6817  002B' 0582'              	andwf	__tdiv_to_l_@f1+2,f
  6818  002C' 1785'              	bsf	__tdiv_to_l_@f2+1,7
  6819  002D' 30FF               	movlw	255
  6820  002E' 0584'              	andwf	__tdiv_to_l_@f2,f
  6821  002F' 30FF               	movlw	255
  6822  0030' 0585'              	andwf	__tdiv_to_l_@f2+1,f
  6823  0031' 3000               	movlw	0
  6824  0032' 0586'              	andwf	__tdiv_to_l_@f2+2,f
  6825  0033' 3000               	movlw	0
  6826  0034' 0083'              	movwf	__tdiv_to_l_@quot+3
  6827  0035' 3000               	movlw	0
  6828  0036' 0082'              	movwf	__tdiv_to_l_@quot+2
  6829  0037' 3000               	movlw	0
  6830  0038' 0081'              	movwf	__tdiv_to_l_@quot+1
  6831  0039' 3000               	movlw	0
  6832  003A' 0080'              	movwf	__tdiv_to_l_@quot
  6833  003B' 307F               	movlw	127
  6834  003C' 0285'              	subwf	__tdiv_to_l_@exp1,f
  6835  003D' 3098               	movlw	152
  6836  003E' 0704'              	addwf	__tdiv_to_l_@cntr,w
  6837  003F' 0088'              	movwf	??__tdiv_to_l_
  6838  0040' 0808'              	movf	??__tdiv_to_l_,w
  6839  0041' 0285'              	subwf	__tdiv_to_l_@exp1,f
  6840  0042' 3018               	movlw	24
  6841  0043' 0084'              	movwf	__tdiv_to_l_@cntr
  6842  0044'                    l3175:
  6843  0044' 3001               	movlw	1
  6844  0045' 0088'              	movwf	??__tdiv_to_l_
  6845  0046'                    u5005:
  6846  0046' 1003               	clrc
  6847  0047' 0D80'              	rlf	__tdiv_to_l_@quot,f
  6848  0048' 0D81'              	rlf	__tdiv_to_l_@quot+1,f
  6849  0049' 0D82'              	rlf	__tdiv_to_l_@quot+2,f
  6850  004A' 0D83'              	rlf	__tdiv_to_l_@quot+3,f
  6851  004B' 0B88'              	decfsz	??__tdiv_to_l_,f
  6852  004C' 2800'              	goto	u5005
  6853  004D' 0806'              	movf	__tdiv_to_l_@f2+2,w
  6854  004E' 0202'              	subwf	__tdiv_to_l_@f1+2,w
  6855  004F' 1D03               	skipz
  6856  0050' 2800'              	goto	u5015
  6857  0051' 0805'              	movf	__tdiv_to_l_@f2+1,w
  6858  0052' 0201'              	subwf	__tdiv_to_l_@f1+1,w
  6859  0053' 1D03               	skipz
  6860  0054' 2800'              	goto	u5015
  6861  0055' 0804'              	movf	__tdiv_to_l_@f2,w
  6862  0056' 0200'              	subwf	__tdiv_to_l_@f1,w
  6863  0057'                    u5015:
  6864  0057' 1C03               	skipc
  6865  0058' 2800'              	goto	l3183
  6866  0059' 0804'              	movf	__tdiv_to_l_@f2,w
  6867  005A' 0280'              	subwf	__tdiv_to_l_@f1,f
  6868  005B' 0805'              	movf	__tdiv_to_l_@f2+1,w
  6869  005C' 1C03               	skipc
  6870  005D' 0F05'              	incfsz	__tdiv_to_l_@f2+1,w
  6871  005E' 0281'              	subwf	__tdiv_to_l_@f1+1,f
  6872  005F' 0806'              	movf	__tdiv_to_l_@f2+2,w
  6873  0060' 1C03               	skipc
  6874  0061' 0A06'              	incf	__tdiv_to_l_@f2+2,w
  6875  0062' 0282'              	subwf	__tdiv_to_l_@f1+2,f
  6876  0063' 1400'              	bsf	__tdiv_to_l_@quot,0
  6877  0064'                    l3183:
  6878  0064' 3001               	movlw	1
  6879  0065'                    u5025:
  6880  0065' 1003               	clrc
  6881  0066' 0D80'              	rlf	__tdiv_to_l_@f1,f
  6882  0067' 0D81'              	rlf	__tdiv_to_l_@f1+1,f
  6883  0068' 0D82'              	rlf	__tdiv_to_l_@f1+2,f
  6884  0069' 3EFF               	addlw	-1
  6885  006A' 1D03               	skipz
  6886  006B' 2800'              	goto	u5025
  6887  006C' 3001               	movlw	1
  6888  006D' 0284'              	subwf	__tdiv_to_l_@cntr,f
  6889  006E' 1D03               	btfss	3,2
  6890  006F' 2800'              	goto	l3175
  6891  0070' 1F85'              	btfss	__tdiv_to_l_@exp1,7
  6892  0071' 2800'              	goto	l3197
  6893  0072' 0805'              	movf	__tdiv_to_l_@exp1,w
  6894  0073' 3A80               	xorlw	128
  6895  0074' 3E97               	addlw	151
  6896  0075' 1C03               	btfss	3,0
  6897  0076' 2800'              	goto	l3157
  6898  0077'                    l3193:
  6899  0077' 3001               	movlw	1
  6900  0078'                    u5065:
  6901  0078' 1003               	clrc
  6902  0079' 0C83'              	rrf	__tdiv_to_l_@quot+3,f
  6903  007A' 0C82'              	rrf	__tdiv_to_l_@quot+2,f
  6904  007B' 0C81'              	rrf	__tdiv_to_l_@quot+1,f
  6905  007C' 0C80'              	rrf	__tdiv_to_l_@quot,f
  6906  007D' 3EFF               	addlw	-1
  6907  007E' 1D03               	skipz
  6908  007F' 2800'              	goto	u5065
  6909  0080' 3001               	movlw	1
  6910  0081' 00FF               	movwf	127
  6911  0082' 087F               	movf	127,w
  6912  0083' 0785'              	addwf	__tdiv_to_l_@exp1,f
  6913  0084' 1903               	btfsc	3,2
  6914  0085' 2800'              	goto	l3205
  6915  0086' 2800'              	goto	l3193
  6916  0087'                    l3197:
  6917  0087' 3018               	movlw	24
  6918  0088' 0205'              	subwf	__tdiv_to_l_@exp1,w
  6919  0089' 1803               	btfsc	3,0
  6920  008A' 2800'              	goto	l3157
  6921  008B'                    l606:
  6922  008B' 0805'              	movf	__tdiv_to_l_@exp1,w
  6923  008C' 1903               	btfsc	3,2
  6924  008D' 2800'              	goto	l3205
  6925  008E' 3001               	movlw	1
  6926  008F' 0088'              	movwf	??__tdiv_to_l_
  6927  0090'                    u5095:
  6928  0090' 1003               	clrc
  6929  0091' 0D80'              	rlf	__tdiv_to_l_@quot,f
  6930  0092' 0D81'              	rlf	__tdiv_to_l_@quot+1,f
  6931  0093' 0D82'              	rlf	__tdiv_to_l_@quot+2,f
  6932  0094' 0D83'              	rlf	__tdiv_to_l_@quot+3,f
  6933  0095' 0B88'              	decfsz	??__tdiv_to_l_,f
  6934  0096' 2800'              	goto	u5095
  6935  0097' 3001               	movlw	1
  6936  0098' 0285'              	subwf	__tdiv_to_l_@exp1,f
  6937  0099' 2800'              	goto	l606
  6938  009A'                    l3205:
  6939  009A' 0803'              	movf	__tdiv_to_l_@quot+3,w
  6940  009B' 0083'              	movwf	?__tdiv_to_l_+3
  6941  009C' 0802'              	movf	__tdiv_to_l_@quot+2,w
  6942  009D' 0082'              	movwf	?__tdiv_to_l_+2
  6943  009E' 0801'              	movf	__tdiv_to_l_@quot+1,w
  6944  009F' 0081'              	movwf	?__tdiv_to_l_+1
  6945  00A0' 0800'              	movf	__tdiv_to_l_@quot,w
  6946  00A1' 0080'              	movwf	?__tdiv_to_l_
  6947  00A2' 0008               	return
  6948  00A3'                    __end_of__tdiv_to_l_:
  6949                           
  6950                           	psect	text12
  6951  0000'                    __ptext12:	
  6952 ;; *************** function __div_to_l_ *****************
  6953 ;; Defined at:
  6954 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\fldivl.c"
  6955 ;; Parameters:    Size  Location     Type
  6956 ;;  f1              4    0[COMMON] unsigned long 
  6957 ;;  f2              4    4[COMMON] unsigned long 
  6958 ;; Auto vars:     Size  Location     Type
  6959 ;;  quot            4    0[BANK0 ] unsigned long 
  6960 ;;  exp1            1    5[BANK0 ] unsigned char 
  6961 ;;  cntr            1    4[BANK0 ] unsigned char 
  6962 ;; Return value:  Size  Location     Type
  6963 ;;                  4    0[COMMON] unsigned long 
  6964 ;; Registers used:
  6965 ;;		wreg, status,2, status,0, btemp+1
  6966 ;; Tracked objects:
  6967 ;;		On entry : 0/0
  6968 ;;		On exit  : 0/0
  6969 ;;		Unchanged: 0/0
  6970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6971 ;;      Params:         8       0       0       0       0
  6972 ;;      Locals:         0       6       0       0       0
  6973 ;;      Temps:          1       0       0       0       0
  6974 ;;      Totals:         9       6       0       0       0
  6975 ;;Total ram usage:       15 bytes
  6976 ;; Hardware stack levels used: 1
  6977 ;; This function calls:
  6978 ;;		Nothing
  6979 ;; This function is called by:
  6980 ;;		_sprintf
  6981 ;; This function uses a non-reentrant model
  6982 ;;
  6983                           
  6984  0000'                    __div_to_l_:	
  6985                           ;psect for function __div_to_l_
  6986                           
  6987                           
  6988                           ;incstack = 0
  6989                           ; Regs used in __div_to_l_: [wreg+status,2+status,0+btemp+1]
  6990  0000' 1003               	clrc
  6991  0001' 0D02'              	rlf	__div_to_l_@f1+2,w
  6992  0002' 0D03'              	rlf	__div_to_l_@f1+3,w
  6993  0003' 1283               	bcf	3,5	;RP0=0, select bank0
  6994  0004' 1303               	bcf	3,6	;RP1=0, select bank0
  6995  0005' 0085'              	movwf	__div_to_l_@exp1
  6996  0006' 0805'              	movf	__div_to_l_@exp1,w
  6997  0007' 1D03               	btfss	3,2
  6998  0008' 2800'              	goto	l3215
  6999  0009'                    l3211:
  7000  0009' 3000               	movlw	0
  7001  000A' 0083'              	movwf	?__div_to_l_+3
  7002  000B' 3000               	movlw	0
  7003  000C' 0082'              	movwf	?__div_to_l_+2
  7004  000D' 3000               	movlw	0
  7005  000E' 0081'              	movwf	?__div_to_l_+1
  7006  000F' 3000               	movlw	0
  7007  0010' 0080'              	movwf	?__div_to_l_
  7008  0011' 0008               	return
  7009  0012'                    l3215:
  7010  0012' 1003               	clrc
  7011  0013' 0D06'              	rlf	__div_to_l_@f2+2,w
  7012  0014' 0D07'              	rlf	__div_to_l_@f2+3,w
  7013  0015' 0084'              	movwf	__div_to_l_@cntr
  7014  0016' 0804'              	movf	__div_to_l_@cntr,w
  7015  0017' 1903               	btfsc	3,2
  7016  0018' 2800'              	goto	l3211
  7017  0019' 1782'              	bsf	__div_to_l_@f1+2,7
  7018  001A' 30FF               	movlw	255
  7019  001B' 0580'              	andwf	__div_to_l_@f1,f
  7020  001C' 30FF               	movlw	255
  7021  001D' 0581'              	andwf	__div_to_l_@f1+1,f
  7022  001E' 30FF               	movlw	255
  7023  001F' 0582'              	andwf	__div_to_l_@f1+2,f
  7024  0020' 3000               	movlw	0
  7025  0021' 0583'              	andwf	__div_to_l_@f1+3,f
  7026  0022' 1786'              	bsf	__div_to_l_@f2+2,7
  7027  0023' 30FF               	movlw	255
  7028  0024' 0584'              	andwf	__div_to_l_@f2,f
  7029  0025' 30FF               	movlw	255
  7030  0026' 0585'              	andwf	__div_to_l_@f2+1,f
  7031  0027' 30FF               	movlw	255
  7032  0028' 0586'              	andwf	__div_to_l_@f2+2,f
  7033  0029' 3000               	movlw	0
  7034  002A' 0587'              	andwf	__div_to_l_@f2+3,f
  7035  002B' 3000               	movlw	0
  7036  002C' 0083'              	movwf	__div_to_l_@quot+3
  7037  002D' 3000               	movlw	0
  7038  002E' 0082'              	movwf	__div_to_l_@quot+2
  7039  002F' 3000               	movlw	0
  7040  0030' 0081'              	movwf	__div_to_l_@quot+1
  7041  0031' 3000               	movlw	0
  7042  0032' 0080'              	movwf	__div_to_l_@quot
  7043  0033' 307F               	movlw	127
  7044  0034' 0285'              	subwf	__div_to_l_@exp1,f
  7045  0035' 30A0               	movlw	160
  7046  0036' 0704'              	addwf	__div_to_l_@cntr,w
  7047  0037' 0088'              	movwf	??__div_to_l_
  7048  0038' 0808'              	movf	??__div_to_l_,w
  7049  0039' 0285'              	subwf	__div_to_l_@exp1,f
  7050  003A' 3020               	movlw	32
  7051  003B' 0084'              	movwf	__div_to_l_@cntr
  7052  003C'                    l3229:
  7053  003C' 3001               	movlw	1
  7054  003D' 0088'              	movwf	??__div_to_l_
  7055  003E'                    u5135:
  7056  003E' 1003               	clrc
  7057  003F' 0D80'              	rlf	__div_to_l_@quot,f
  7058  0040' 0D81'              	rlf	__div_to_l_@quot+1,f
  7059  0041' 0D82'              	rlf	__div_to_l_@quot+2,f
  7060  0042' 0D83'              	rlf	__div_to_l_@quot+3,f
  7061  0043' 0B88'              	decfsz	??__div_to_l_,f
  7062  0044' 2800'              	goto	u5135
  7063  0045' 0807'              	movf	__div_to_l_@f2+3,w
  7064  0046' 0203'              	subwf	__div_to_l_@f1+3,w
  7065  0047' 1D03               	skipz
  7066  0048' 2800'              	goto	u5145
  7067  0049' 0806'              	movf	__div_to_l_@f2+2,w
  7068  004A' 0202'              	subwf	__div_to_l_@f1+2,w
  7069  004B' 1D03               	skipz
  7070  004C' 2800'              	goto	u5145
  7071  004D' 0805'              	movf	__div_to_l_@f2+1,w
  7072  004E' 0201'              	subwf	__div_to_l_@f1+1,w
  7073  004F' 1D03               	skipz
  7074  0050' 2800'              	goto	u5145
  7075  0051' 0804'              	movf	__div_to_l_@f2,w
  7076  0052' 0200'              	subwf	__div_to_l_@f1,w
  7077  0053'                    u5145:
  7078  0053' 1C03               	skipc
  7079  0054' 2800'              	goto	l3237
  7080  0055' 0804'              	movf	__div_to_l_@f2,w
  7081  0056' 0280'              	subwf	__div_to_l_@f1,f
  7082  0057' 0805'              	movf	__div_to_l_@f2+1,w
  7083  0058' 1C03               	skipc
  7084  0059' 0F05'              	incfsz	__div_to_l_@f2+1,w
  7085  005A' 0281'              	subwf	__div_to_l_@f1+1,f
  7086  005B' 0806'              	movf	__div_to_l_@f2+2,w
  7087  005C' 1C03               	skipc
  7088  005D' 0F06'              	incfsz	__div_to_l_@f2+2,w
  7089  005E' 0282'              	subwf	__div_to_l_@f1+2,f
  7090  005F' 0807'              	movf	__div_to_l_@f2+3,w
  7091  0060' 1C03               	skipc
  7092  0061' 0F07'              	incfsz	__div_to_l_@f2+3,w
  7093  0062' 0283'              	subwf	__div_to_l_@f1+3,f
  7094  0063' 1400'              	bsf	__div_to_l_@quot,0
  7095  0064'                    l3237:
  7096  0064' 3001               	movlw	1
  7097  0065' 0088'              	movwf	??__div_to_l_
  7098  0066'                    u5155:
  7099  0066' 1003               	clrc
  7100  0067' 0D80'              	rlf	__div_to_l_@f1,f
  7101  0068' 0D81'              	rlf	__div_to_l_@f1+1,f
  7102  0069' 0D82'              	rlf	__div_to_l_@f1+2,f
  7103  006A' 0D83'              	rlf	__div_to_l_@f1+3,f
  7104  006B' 0B88'              	decfsz	??__div_to_l_,f
  7105  006C' 2800'              	goto	u5155
  7106  006D' 3001               	movlw	1
  7107  006E' 0284'              	subwf	__div_to_l_@cntr,f
  7108  006F' 1D03               	btfss	3,2
  7109  0070' 2800'              	goto	l3229
  7110  0071' 1F85'              	btfss	__div_to_l_@exp1,7
  7111  0072' 2800'              	goto	l3251
  7112  0073' 0805'              	movf	__div_to_l_@exp1,w
  7113  0074' 3A80               	xorlw	128
  7114  0075' 3E9F               	addlw	159
  7115  0076' 1C03               	btfss	3,0
  7116  0077' 2800'              	goto	l3211
  7117  0078'                    l3247:
  7118  0078' 3001               	movlw	1
  7119  0079'                    u5195:
  7120  0079' 1003               	clrc
  7121  007A' 0C83'              	rrf	__div_to_l_@quot+3,f
  7122  007B' 0C82'              	rrf	__div_to_l_@quot+2,f
  7123  007C' 0C81'              	rrf	__div_to_l_@quot+1,f
  7124  007D' 0C80'              	rrf	__div_to_l_@quot,f
  7125  007E' 3EFF               	addlw	-1
  7126  007F' 1D03               	skipz
  7127  0080' 2800'              	goto	u5195
  7128  0081' 3001               	movlw	1
  7129  0082' 00FF               	movwf	127
  7130  0083' 087F               	movf	127,w
  7131  0084' 0785'              	addwf	__div_to_l_@exp1,f
  7132  0085' 1903               	btfsc	3,2
  7133  0086' 2800'              	goto	l3259
  7134  0087' 2800'              	goto	l3247
  7135  0088'                    l3251:
  7136  0088' 3020               	movlw	32
  7137  0089' 0205'              	subwf	__div_to_l_@exp1,w
  7138  008A' 1803               	btfsc	3,0
  7139  008B' 2800'              	goto	l3211
  7140  008C'                    l559:
  7141  008C' 0805'              	movf	__div_to_l_@exp1,w
  7142  008D' 1903               	btfsc	3,2
  7143  008E' 2800'              	goto	l3259
  7144  008F' 3001               	movlw	1
  7145  0090' 0088'              	movwf	??__div_to_l_
  7146  0091'                    u5225:
  7147  0091' 1003               	clrc
  7148  0092' 0D80'              	rlf	__div_to_l_@quot,f
  7149  0093' 0D81'              	rlf	__div_to_l_@quot+1,f
  7150  0094' 0D82'              	rlf	__div_to_l_@quot+2,f
  7151  0095' 0D83'              	rlf	__div_to_l_@quot+3,f
  7152  0096' 0B88'              	decfsz	??__div_to_l_,f
  7153  0097' 2800'              	goto	u5225
  7154  0098' 3001               	movlw	1
  7155  0099' 0285'              	subwf	__div_to_l_@exp1,f
  7156  009A' 2800'              	goto	l559
  7157  009B'                    l3259:
  7158  009B' 0803'              	movf	__div_to_l_@quot+3,w
  7159  009C' 0083'              	movwf	?__div_to_l_+3
  7160  009D' 0802'              	movf	__div_to_l_@quot+2,w
  7161  009E' 0082'              	movwf	?__div_to_l_+2
  7162  009F' 0801'              	movf	__div_to_l_@quot+1,w
  7163  00A0' 0081'              	movwf	?__div_to_l_+1
  7164  00A1' 0800'              	movf	__div_to_l_@quot,w
  7165  00A2' 0080'              	movwf	?__div_to_l_
  7166  00A3' 0008               	return
  7167  00A4'                    __end_of__div_to_l_:
  7168                           
  7169                           	psect	text13
  7170  0000'                    __ptext13:	
  7171 ;; *************** function ___xxtofl *****************
  7172 ;; Defined at:
  7173 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\xxtofl.c"
  7174 ;; Parameters:    Size  Location     Type
  7175 ;;  sign            1    wreg     unsigned char 
  7176 ;;  val             4    0[COMMON] long 
  7177 ;; Auto vars:     Size  Location     Type
  7178 ;;  sign            1    8[COMMON] unsigned char 
  7179 ;;  arg             4   10[COMMON] unsigned long 
  7180 ;;  exp             1    9[COMMON] unsigned char 
  7181 ;; Return value:  Size  Location     Type
  7182 ;;                  4    0[COMMON] unsigned char 
  7183 ;; Registers used:
  7184 ;;		wreg, status,2, status,0, btemp+1
  7185 ;; Tracked objects:
  7186 ;;		On entry : 0/0
  7187 ;;		On exit  : 0/0
  7188 ;;		Unchanged: 0/0
  7189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7190 ;;      Params:         4       0       0       0       0
  7191 ;;      Locals:         6       0       0       0       0
  7192 ;;      Temps:          4       0       0       0       0
  7193 ;;      Totals:        14       0       0       0       0
  7194 ;;Total ram usage:       14 bytes
  7195 ;; Hardware stack levels used: 1
  7196 ;; This function calls:
  7197 ;;		Nothing
  7198 ;; This function is called by:
  7199 ;;		_main
  7200 ;;		_sprintf
  7201 ;; This function uses a non-reentrant model
  7202 ;;
  7203                           
  7204  0000'                    ___xxtofl:	
  7205                           ;psect for function ___xxtofl
  7206                           
  7207                           
  7208                           ;incstack = 0
  7209                           ; Regs used in ___xxtofl: [wreg+status,2+status,0+btemp+1]
  7210                           ;___xxtofl@sign stored from wreg
  7211  0000' 0088'              	movwf	___xxtofl@sign
  7212  0001' 0808'              	movf	___xxtofl@sign,w
  7213  0002' 1D03               	btfss	3,2
  7214  0003' 1F83'              	btfss	___xxtofl@val+3,7
  7215  0004' 2800'              	goto	l3415
  7216  0005' 0900'              	comf	___xxtofl@val,w
  7217  0006' 008A'              	movwf	___xxtofl@arg
  7218  0007' 0901'              	comf	___xxtofl@val+1,w
  7219  0008' 008B'              	movwf	___xxtofl@arg+1
  7220  0009' 0902'              	comf	___xxtofl@val+2,w
  7221  000A' 008C'              	movwf	___xxtofl@arg+2
  7222  000B' 0903'              	comf	___xxtofl@val+3,w
  7223  000C' 008D'              	movwf	___xxtofl@arg+3
  7224  000D' 0A8A'              	incf	___xxtofl@arg,f
  7225  000E' 1903               	skipnz
  7226  000F' 0A8B'              	incf	___xxtofl@arg+1,f
  7227  0010' 1903               	skipnz
  7228  0011' 0A8C'              	incf	___xxtofl@arg+2,f
  7229  0012' 1903               	skipnz
  7230  0013' 0A8D'              	incf	___xxtofl@arg+3,f
  7231  0014' 2800'              	goto	l845
  7232  0015'                    l3415:
  7233  0015' 0803'              	movf	___xxtofl@val+3,w
  7234  0016' 008D'              	movwf	___xxtofl@arg+3
  7235  0017' 0802'              	movf	___xxtofl@val+2,w
  7236  0018' 008C'              	movwf	___xxtofl@arg+2
  7237  0019' 0801'              	movf	___xxtofl@val+1,w
  7238  001A' 008B'              	movwf	___xxtofl@arg+1
  7239  001B' 0800'              	movf	___xxtofl@val,w
  7240  001C' 008A'              	movwf	___xxtofl@arg
  7241  001D'                    l845:
  7242  001D' 0803'              	movf	___xxtofl@val+3,w
  7243  001E' 0402'              	iorwf	___xxtofl@val+2,w
  7244  001F' 0401'              	iorwf	___xxtofl@val+1,w
  7245  0020' 0400'              	iorwf	___xxtofl@val,w
  7246  0021' 1D03               	skipz
  7247  0022' 2800'              	goto	l3421
  7248  0023' 3000               	movlw	0
  7249  0024' 0083'              	movwf	?___xxtofl+3
  7250  0025' 3000               	movlw	0
  7251  0026' 0082'              	movwf	?___xxtofl+2
  7252  0027' 3000               	movlw	0
  7253  0028' 0081'              	movwf	?___xxtofl+1
  7254  0029' 3000               	movlw	0
  7255  002A' 0080'              	movwf	?___xxtofl
  7256  002B' 0008               	return
  7257  002C'                    l3421:
  7258  002C' 3096               	movlw	150
  7259  002D' 0089'              	movwf	___xxtofl@exp
  7260  002E'                    l3427:
  7261  002E' 30FE               	movlw	254
  7262  002F' 050D'              	andwf	___xxtofl@arg+3,w
  7263  0030' 1903               	btfsc	3,2
  7264  0031' 2800'              	goto	l3435
  7265  0032' 3001               	movlw	1
  7266  0033' 00FF               	movwf	127
  7267  0034' 087F               	movf	127,w
  7268  0035' 0789'              	addwf	___xxtofl@exp,f
  7269  0036' 3001               	movlw	1
  7270  0037'                    u5655:
  7271  0037' 1003               	clrc
  7272  0038' 0C8D'              	rrf	___xxtofl@arg+3,f
  7273  0039' 0C8C'              	rrf	___xxtofl@arg+2,f
  7274  003A' 0C8B'              	rrf	___xxtofl@arg+1,f
  7275  003B' 0C8A'              	rrf	___xxtofl@arg,f
  7276  003C' 3EFF               	addlw	-1
  7277  003D' 1D03               	skipz
  7278  003E' 2800'              	goto	u5655
  7279  003F' 2800'              	goto	l3427
  7280  0040'                    l3429:
  7281  0040' 3001               	movlw	1
  7282  0041' 00FF               	movwf	127
  7283  0042' 087F               	movf	127,w
  7284  0043' 0789'              	addwf	___xxtofl@exp,f
  7285  0044' 3001               	movlw	1
  7286  0045' 078A'              	addwf	___xxtofl@arg,f
  7287  0046' 3000               	movlw	0
  7288  0047' 1803               	skipnc
  7289  0048' 3001               	movlw	1
  7290  0049' 078B'              	addwf	___xxtofl@arg+1,f
  7291  004A' 3000               	movlw	0
  7292  004B' 1803               	skipnc
  7293  004C' 3001               	movlw	1
  7294  004D' 078C'              	addwf	___xxtofl@arg+2,f
  7295  004E' 3000               	movlw	0
  7296  004F' 1803               	skipnc
  7297  0050' 3001               	movlw	1
  7298  0051' 078D'              	addwf	___xxtofl@arg+3,f
  7299  0052' 3001               	movlw	1
  7300  0053'                    u5675:
  7301  0053' 1003               	clrc
  7302  0054' 0C8D'              	rrf	___xxtofl@arg+3,f
  7303  0055' 0C8C'              	rrf	___xxtofl@arg+2,f
  7304  0056' 0C8B'              	rrf	___xxtofl@arg+1,f
  7305  0057' 0C8A'              	rrf	___xxtofl@arg,f
  7306  0058' 3EFF               	addlw	-1
  7307  0059' 1D03               	skipz
  7308  005A' 2800'              	goto	u5675
  7309  005B'                    l3435:
  7310  005B' 30FF               	movlw	255
  7311  005C' 050D'              	andwf	___xxtofl@arg+3,w
  7312  005D' 1903               	btfsc	3,2
  7313  005E' 2800'              	goto	l3439
  7314  005F' 2800'              	goto	l3429
  7315  0060'                    l3441:
  7316  0060' 3002               	movlw	2
  7317  0061' 0209'              	subwf	___xxtofl@exp,w
  7318  0062' 1C03               	btfss	3,0
  7319  0063' 2800'              	goto	l858
  7320  0064' 3001               	movlw	1
  7321  0065' 0289'              	subwf	___xxtofl@exp,f
  7322  0066' 3001               	movlw	1
  7323  0067' 0084'              	movwf	??___xxtofl
  7324  0068'                    u5695:
  7325  0068' 1003               	clrc
  7326  0069' 0D8A'              	rlf	___xxtofl@arg,f
  7327  006A' 0D8B'              	rlf	___xxtofl@arg+1,f
  7328  006B' 0D8C'              	rlf	___xxtofl@arg+2,f
  7329  006C' 0D8D'              	rlf	___xxtofl@arg+3,f
  7330  006D' 0B84'              	decfsz	??___xxtofl,f
  7331  006E' 2800'              	goto	u5695
  7332  006F'                    l3439:
  7333  006F' 1F8C'              	btfss	___xxtofl@arg+2,7
  7334  0070' 2800'              	goto	l3441
  7335  0071'                    l858:
  7336  0071' 1809'              	btfsc	___xxtofl@exp,0
  7337  0072' 2800'              	goto	l859
  7338  0073' 30FF               	movlw	255
  7339  0074' 058A'              	andwf	___xxtofl@arg,f
  7340  0075' 30FF               	movlw	255
  7341  0076' 058B'              	andwf	___xxtofl@arg+1,f
  7342  0077' 307F               	movlw	127
  7343  0078' 058C'              	andwf	___xxtofl@arg+2,f
  7344  0079' 30FF               	movlw	255
  7345  007A' 058D'              	andwf	___xxtofl@arg+3,f
  7346  007B'                    l859:
  7347  007B' 1003               	clrc
  7348  007C' 0C89'              	rrf	___xxtofl@exp,f
  7349  007D' 0809'              	movf	___xxtofl@exp,w
  7350  007E' 0084'              	movwf	??___xxtofl
  7351  007F' 0185'              	clrf	??___xxtofl+1
  7352  0080' 0186'              	clrf	??___xxtofl+2
  7353  0081' 0187'              	clrf	??___xxtofl+3
  7354  0082' 3018               	movlw	24
  7355  0083'                    u5735:
  7356  0083' 1003               	clrc
  7357  0084' 0D84'              	rlf	??___xxtofl,f
  7358  0085' 0D85'              	rlf	??___xxtofl+1,f
  7359  0086' 0D86'              	rlf	??___xxtofl+2,f
  7360  0087' 0D87'              	rlf	??___xxtofl+3,f
  7361  0088' 3EFF               	addlw	-1
  7362  0089' 1D03               	skipz
  7363  008A' 2800'              	goto	u5735
  7364  008B' 0804'              	movf	??___xxtofl,w
  7365  008C' 048A'              	iorwf	___xxtofl@arg,f
  7366  008D' 0805'              	movf	??___xxtofl+1,w
  7367  008E' 048B'              	iorwf	___xxtofl@arg+1,f
  7368  008F' 0806'              	movf	??___xxtofl+2,w
  7369  0090' 048C'              	iorwf	___xxtofl@arg+2,f
  7370  0091' 0807'              	movf	??___xxtofl+3,w
  7371  0092' 048D'              	iorwf	___xxtofl@arg+3,f
  7372  0093' 0808'              	movf	___xxtofl@sign,w
  7373  0094' 1D03               	btfss	3,2
  7374  0095' 1F83'              	btfss	___xxtofl@val+3,7
  7375  0096' 2800'              	goto	l3453
  7376  0097' 178D'              	bsf	___xxtofl@arg+3,7
  7377  0098'                    l3453:
  7378  0098' 080D'              	movf	___xxtofl@arg+3,w
  7379  0099' 0083'              	movwf	?___xxtofl+3
  7380  009A' 080C'              	movf	___xxtofl@arg+2,w
  7381  009B' 0082'              	movwf	?___xxtofl+2
  7382  009C' 080B'              	movf	___xxtofl@arg+1,w
  7383  009D' 0081'              	movwf	?___xxtofl+1
  7384  009E' 080A'              	movf	___xxtofl@arg,w
  7385  009F' 0080'              	movwf	?___xxtofl
  7386  00A0' 0008               	return
  7387  00A1'                    __end_of___xxtofl:
  7388                           
  7389                           	psect	text14
  7390  0000'                    __ptext14:	
  7391 ;; *************** function ___wmul *****************
  7392 ;; Defined at:
  7393 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul16.c"
  7394 ;; Parameters:    Size  Location     Type
  7395 ;;  multiplier      2    0[COMMON] unsigned int 
  7396 ;;  multiplicand    2    2[COMMON] unsigned int 
  7397 ;; Auto vars:     Size  Location     Type
  7398 ;;  product         2    4[COMMON] unsigned int 
  7399 ;; Return value:  Size  Location     Type
  7400 ;;                  2    0[COMMON] unsigned int 
  7401 ;; Registers used:
  7402 ;;		wreg, status,2, status,0
  7403 ;; Tracked objects:
  7404 ;;		On entry : 0/0
  7405 ;;		On exit  : 0/0
  7406 ;;		Unchanged: 0/0
  7407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7408 ;;      Params:         4       0       0       0       0
  7409 ;;      Locals:         2       0       0       0       0
  7410 ;;      Temps:          0       0       0       0       0
  7411 ;;      Totals:         6       0       0       0       0
  7412 ;;Total ram usage:        6 bytes
  7413 ;; Hardware stack levels used: 1
  7414 ;; This function calls:
  7415 ;;		Nothing
  7416 ;; This function is called by:
  7417 ;;		_sprintf
  7418 ;; This function uses a non-reentrant model
  7419 ;;
  7420                           
  7421  0000'                    ___wmul:	
  7422                           ;psect for function ___wmul
  7423                           
  7424                           
  7425                           ;incstack = 0
  7426                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7427  0000' 0184'              	clrf	___wmul@product
  7428  0001' 0185'              	clrf	___wmul@product+1
  7429  0002'                    l3265:
  7430  0002' 1C00'              	btfss	___wmul@multiplier,0
  7431  0003' 2800'              	goto	l378
  7432  0004' 0802'              	movf	___wmul@multiplicand,w
  7433  0005' 0784'              	addwf	___wmul@product,f
  7434  0006' 1803               	skipnc
  7435  0007' 0A85'              	incf	___wmul@product+1,f
  7436  0008' 0803'              	movf	___wmul@multiplicand+1,w
  7437  0009' 0785'              	addwf	___wmul@product+1,f
  7438  000A'                    l378:
  7439  000A' 3001               	movlw	1
  7440  000B'                    u5255:
  7441  000B' 1003               	clrc
  7442  000C' 0D82'              	rlf	___wmul@multiplicand,f
  7443  000D' 0D83'              	rlf	___wmul@multiplicand+1,f
  7444  000E' 3EFF               	addlw	-1
  7445  000F' 1D03               	skipz
  7446  0010' 2800'              	goto	u5255
  7447  0011' 3001               	movlw	1
  7448  0012'                    u5265:
  7449  0012' 1003               	clrc
  7450  0013' 0C81'              	rrf	___wmul@multiplier+1,f
  7451  0014' 0C80'              	rrf	___wmul@multiplier,f
  7452  0015' 3EFF               	addlw	-1
  7453  0016' 1D03               	skipz
  7454  0017' 2800'              	goto	u5265
  7455  0018' 0800'              	movf	___wmul@multiplier,w
  7456  0019' 0401'              	iorwf	___wmul@multiplier+1,w
  7457  001A' 1D03               	btfss	3,2
  7458  001B' 2800'              	goto	l3265
  7459  001C' 0805'              	movf	___wmul@product+1,w
  7460  001D' 0081'              	movwf	?___wmul+1
  7461  001E' 0804'              	movf	___wmul@product,w
  7462  001F' 0080'              	movwf	?___wmul
  7463  0020' 0008               	return
  7464  0021'                    __end_of___wmul:
  7465                           
  7466                           	psect	text15
  7467  0000'                    __ptext15:	
  7468 ;; *************** function ___llmod *****************
  7469 ;; Defined at:
  7470 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\llmod.c"
  7471 ;; Parameters:    Size  Location     Type
  7472 ;;  divisor         4    0[BANK0 ] unsigned long 
  7473 ;;  dividend        4    4[BANK0 ] unsigned long 
  7474 ;; Auto vars:     Size  Location     Type
  7475 ;;  counter         1    9[BANK0 ] unsigned char 
  7476 ;; Return value:  Size  Location     Type
  7477 ;;                  4    0[BANK0 ] unsigned long 
  7478 ;; Registers used:
  7479 ;;		wreg, status,2, status,0, btemp+1
  7480 ;; Tracked objects:
  7481 ;;		On entry : 0/0
  7482 ;;		On exit  : 0/0
  7483 ;;		Unchanged: 0/0
  7484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7485 ;;      Params:         0       8       0       0       0
  7486 ;;      Locals:         0       1       0       0       0
  7487 ;;      Temps:          0       1       0       0       0
  7488 ;;      Totals:         0      10       0       0       0
  7489 ;;Total ram usage:       10 bytes
  7490 ;; Hardware stack levels used: 1
  7491 ;; This function calls:
  7492 ;;		Nothing
  7493 ;; This function is called by:
  7494 ;;		_sprintf
  7495 ;; This function uses a non-reentrant model
  7496 ;;
  7497                           
  7498  0000'                    ___llmod:	
  7499                           ;psect for function ___llmod
  7500                           
  7501                           
  7502                           ;incstack = 0
  7503                           ; Regs used in ___llmod: [wreg+status,2+status,0+btemp+1]
  7504  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  7505  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  7506  0002' 0803'              	movf	___llmod@divisor+3,w
  7507  0003' 0402'              	iorwf	___llmod@divisor+2,w
  7508  0004' 0401'              	iorwf	___llmod@divisor+1,w
  7509  0005' 0400'              	iorwf	___llmod@divisor,w
  7510  0006' 1903               	skipnz
  7511  0007' 2800'              	goto	l3399
  7512  0008' 0189'              	clrf	___llmod@counter
  7513  0009' 0A89'              	incf	___llmod@counter,f
  7514  000A'                    l3389:
  7515  000A' 1B83'              	btfsc	___llmod@divisor+3,7
  7516  000B' 2800'              	goto	l3391
  7517  000C' 3001               	movlw	1
  7518  000D' 0088'              	movwf	??___llmod
  7519  000E'                    u5575:
  7520  000E' 1003               	clrc
  7521  000F' 0D80'              	rlf	___llmod@divisor,f
  7522  0010' 0D81'              	rlf	___llmod@divisor+1,f
  7523  0011' 0D82'              	rlf	___llmod@divisor+2,f
  7524  0012' 0D83'              	rlf	___llmod@divisor+3,f
  7525  0013' 0B88'              	decfsz	??___llmod,f
  7526  0014' 2800'              	goto	u5575
  7527  0015' 3001               	movlw	1
  7528  0016' 00FF               	movwf	127
  7529  0017' 087F               	movf	127,w
  7530  0018' 0789'              	addwf	___llmod@counter,f
  7531  0019' 2800'              	goto	l3389
  7532  001A'                    l3391:
  7533  001A' 0803'              	movf	___llmod@divisor+3,w
  7534  001B' 0207'              	subwf	___llmod@dividend+3,w
  7535  001C' 1D03               	skipz
  7536  001D' 2800'              	goto	u5595
  7537  001E' 0802'              	movf	___llmod@divisor+2,w
  7538  001F' 0206'              	subwf	___llmod@dividend+2,w
  7539  0020' 1D03               	skipz
  7540  0021' 2800'              	goto	u5595
  7541  0022' 0801'              	movf	___llmod@divisor+1,w
  7542  0023' 0205'              	subwf	___llmod@dividend+1,w
  7543  0024' 1D03               	skipz
  7544  0025' 2800'              	goto	u5595
  7545  0026' 0800'              	movf	___llmod@divisor,w
  7546  0027' 0204'              	subwf	___llmod@dividend,w
  7547  0028'                    u5595:
  7548  0028' 1C03               	skipc
  7549  0029' 2800'              	goto	l3395
  7550  002A' 0800'              	movf	___llmod@divisor,w
  7551  002B' 0284'              	subwf	___llmod@dividend,f
  7552  002C' 0801'              	movf	___llmod@divisor+1,w
  7553  002D' 1C03               	skipc
  7554  002E' 0F01'              	incfsz	___llmod@divisor+1,w
  7555  002F' 0285'              	subwf	___llmod@dividend+1,f
  7556  0030' 0802'              	movf	___llmod@divisor+2,w
  7557  0031' 1C03               	skipc
  7558  0032' 0F02'              	incfsz	___llmod@divisor+2,w
  7559  0033' 0286'              	subwf	___llmod@dividend+2,f
  7560  0034' 0803'              	movf	___llmod@divisor+3,w
  7561  0035' 1C03               	skipc
  7562  0036' 0F03'              	incfsz	___llmod@divisor+3,w
  7563  0037' 0287'              	subwf	___llmod@dividend+3,f
  7564  0038'                    l3395:
  7565  0038' 3001               	movlw	1
  7566  0039'                    u5605:
  7567  0039' 1003               	clrc
  7568  003A' 0C83'              	rrf	___llmod@divisor+3,f
  7569  003B' 0C82'              	rrf	___llmod@divisor+2,f
  7570  003C' 0C81'              	rrf	___llmod@divisor+1,f
  7571  003D' 0C80'              	rrf	___llmod@divisor,f
  7572  003E' 3EFF               	addlw	-1
  7573  003F' 1D03               	skipz
  7574  0040' 2800'              	goto	u5605
  7575  0041' 3001               	movlw	1
  7576  0042' 0289'              	subwf	___llmod@counter,f
  7577  0043' 1D03               	btfss	3,2
  7578  0044' 2800'              	goto	l3391
  7579  0045'                    l3399:
  7580  0045' 0807'              	movf	___llmod@dividend+3,w
  7581  0046' 0083'              	movwf	?___llmod+3
  7582  0047' 0806'              	movf	___llmod@dividend+2,w
  7583  0048' 0082'              	movwf	?___llmod+2
  7584  0049' 0805'              	movf	___llmod@dividend+1,w
  7585  004A' 0081'              	movwf	?___llmod+1
  7586  004B' 0804'              	movf	___llmod@dividend,w
  7587  004C' 0080'              	movwf	?___llmod
  7588  004D' 0008               	return
  7589  004E'                    __end_of___llmod:
  7590                           
  7591                           	psect	text16
  7592  0000'                    __ptext16:	
  7593 ;; *************** function ___lldiv *****************
  7594 ;; Defined at:
  7595 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\__lldiv.c"
  7596 ;; Parameters:    Size  Location     Type
  7597 ;;  divisor         4    0[COMMON] unsigned long 
  7598 ;;  dividend        4    4[COMMON] unsigned long 
  7599 ;; Auto vars:     Size  Location     Type
  7600 ;;  quotient        4    9[COMMON] unsigned long 
  7601 ;;  counter         1   13[COMMON] unsigned char 
  7602 ;; Return value:  Size  Location     Type
  7603 ;;                  4    0[COMMON] unsigned long 
  7604 ;; Registers used:
  7605 ;;		wreg, status,2, status,0, btemp+1
  7606 ;; Tracked objects:
  7607 ;;		On entry : 0/0
  7608 ;;		On exit  : 0/0
  7609 ;;		Unchanged: 0/0
  7610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7611 ;;      Params:         8       0       0       0       0
  7612 ;;      Locals:         5       0       0       0       0
  7613 ;;      Temps:          1       0       0       0       0
  7614 ;;      Totals:        14       0       0       0       0
  7615 ;;Total ram usage:       14 bytes
  7616 ;; Hardware stack levels used: 1
  7617 ;; This function calls:
  7618 ;;		Nothing
  7619 ;; This function is called by:
  7620 ;;		_sprintf
  7621 ;; This function uses a non-reentrant model
  7622 ;;
  7623                           
  7624  0000'                    ___lldiv:	
  7625                           ;psect for function ___lldiv
  7626                           
  7627                           
  7628                           ;incstack = 0
  7629                           ; Regs used in ___lldiv: [wreg+status,2+status,0+btemp+1]
  7630  0000' 3000               	movlw	0
  7631  0001' 008C'              	movwf	___lldiv@quotient+3
  7632  0002' 3000               	movlw	0
  7633  0003' 008B'              	movwf	___lldiv@quotient+2
  7634  0004' 3000               	movlw	0
  7635  0005' 008A'              	movwf	___lldiv@quotient+1
  7636  0006' 3000               	movlw	0
  7637  0007' 0089'              	movwf	___lldiv@quotient
  7638  0008' 0803'              	movf	___lldiv@divisor+3,w
  7639  0009' 0402'              	iorwf	___lldiv@divisor+2,w
  7640  000A' 0401'              	iorwf	___lldiv@divisor+1,w
  7641  000B' 0400'              	iorwf	___lldiv@divisor,w
  7642  000C' 1903               	skipnz
  7643  000D' 2800'              	goto	l3299
  7644  000E' 018D'              	clrf	___lldiv@counter
  7645  000F' 0A8D'              	incf	___lldiv@counter,f
  7646  0010'                    l3285:
  7647  0010' 1B83'              	btfsc	___lldiv@divisor+3,7
  7648  0011' 2800'              	goto	l3287
  7649  0012' 3001               	movlw	1
  7650  0013' 0088'              	movwf	??___lldiv
  7651  0014'                    u5295:
  7652  0014' 1003               	clrc
  7653  0015' 0D80'              	rlf	___lldiv@divisor,f
  7654  0016' 0D81'              	rlf	___lldiv@divisor+1,f
  7655  0017' 0D82'              	rlf	___lldiv@divisor+2,f
  7656  0018' 0D83'              	rlf	___lldiv@divisor+3,f
  7657  0019' 0B88'              	decfsz	??___lldiv,f
  7658  001A' 2800'              	goto	u5295
  7659  001B' 3001               	movlw	1
  7660  001C' 00FF               	movwf	127
  7661  001D' 087F               	movf	127,w
  7662  001E' 078D'              	addwf	___lldiv@counter,f
  7663  001F' 2800'              	goto	l3285
  7664  0020'                    l3287:
  7665  0020' 3001               	movlw	1
  7666  0021' 0088'              	movwf	??___lldiv
  7667  0022'                    u5315:
  7668  0022' 1003               	clrc
  7669  0023' 0D89'              	rlf	___lldiv@quotient,f
  7670  0024' 0D8A'              	rlf	___lldiv@quotient+1,f
  7671  0025' 0D8B'              	rlf	___lldiv@quotient+2,f
  7672  0026' 0D8C'              	rlf	___lldiv@quotient+3,f
  7673  0027' 0B88'              	decfsz	??___lldiv,f
  7674  0028' 2800'              	goto	u5315
  7675  0029' 0803'              	movf	___lldiv@divisor+3,w
  7676  002A' 0207'              	subwf	___lldiv@dividend+3,w
  7677  002B' 1D03               	skipz
  7678  002C' 2800'              	goto	u5325
  7679  002D' 0802'              	movf	___lldiv@divisor+2,w
  7680  002E' 0206'              	subwf	___lldiv@dividend+2,w
  7681  002F' 1D03               	skipz
  7682  0030' 2800'              	goto	u5325
  7683  0031' 0801'              	movf	___lldiv@divisor+1,w
  7684  0032' 0205'              	subwf	___lldiv@dividend+1,w
  7685  0033' 1D03               	skipz
  7686  0034' 2800'              	goto	u5325
  7687  0035' 0800'              	movf	___lldiv@divisor,w
  7688  0036' 0204'              	subwf	___lldiv@dividend,w
  7689  0037'                    u5325:
  7690  0037' 1C03               	skipc
  7691  0038' 2800'              	goto	l3295
  7692  0039' 0800'              	movf	___lldiv@divisor,w
  7693  003A' 0284'              	subwf	___lldiv@dividend,f
  7694  003B' 0801'              	movf	___lldiv@divisor+1,w
  7695  003C' 1C03               	skipc
  7696  003D' 0F01'              	incfsz	___lldiv@divisor+1,w
  7697  003E' 0285'              	subwf	___lldiv@dividend+1,f
  7698  003F' 0802'              	movf	___lldiv@divisor+2,w
  7699  0040' 1C03               	skipc
  7700  0041' 0F02'              	incfsz	___lldiv@divisor+2,w
  7701  0042' 0286'              	subwf	___lldiv@dividend+2,f
  7702  0043' 0803'              	movf	___lldiv@divisor+3,w
  7703  0044' 1C03               	skipc
  7704  0045' 0F03'              	incfsz	___lldiv@divisor+3,w
  7705  0046' 0287'              	subwf	___lldiv@dividend+3,f
  7706  0047' 1409'              	bsf	___lldiv@quotient,0
  7707  0048'                    l3295:
  7708  0048' 3001               	movlw	1
  7709  0049'                    u5335:
  7710  0049' 1003               	clrc
  7711  004A' 0C83'              	rrf	___lldiv@divisor+3,f
  7712  004B' 0C82'              	rrf	___lldiv@divisor+2,f
  7713  004C' 0C81'              	rrf	___lldiv@divisor+1,f
  7714  004D' 0C80'              	rrf	___lldiv@divisor,f
  7715  004E' 3EFF               	addlw	-1
  7716  004F' 1D03               	skipz
  7717  0050' 2800'              	goto	u5335
  7718  0051' 3001               	movlw	1
  7719  0052' 028D'              	subwf	___lldiv@counter,f
  7720  0053' 1D03               	btfss	3,2
  7721  0054' 2800'              	goto	l3287
  7722  0055'                    l3299:
  7723  0055' 080C'              	movf	___lldiv@quotient+3,w
  7724  0056' 0083'              	movwf	?___lldiv+3
  7725  0057' 080B'              	movf	___lldiv@quotient+2,w
  7726  0058' 0082'              	movwf	?___lldiv+2
  7727  0059' 080A'              	movf	___lldiv@quotient+1,w
  7728  005A' 0081'              	movwf	?___lldiv+1
  7729  005B' 0809'              	movf	___lldiv@quotient,w
  7730  005C' 0080'              	movwf	?___lldiv
  7731  005D' 0008               	return
  7732  005E'                    __end_of___lldiv:
  7733                           
  7734                           	psect	text17
  7735  0000'                    __ptext17:	
  7736 ;; *************** function ___fltol *****************
  7737 ;; Defined at:
  7738 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\fltol.c"
  7739 ;; Parameters:    Size  Location     Type
  7740 ;;  f1              4   45[BANK0 ] unsigned long 
  7741 ;; Auto vars:     Size  Location     Type
  7742 ;;  exp1            1   54[BANK0 ] unsigned char 
  7743 ;;  sign1           1   53[BANK0 ] unsigned char 
  7744 ;; Return value:  Size  Location     Type
  7745 ;;                  4   45[BANK0 ] long 
  7746 ;; Registers used:
  7747 ;;		wreg, status,2, status,0, btemp+1
  7748 ;; Tracked objects:
  7749 ;;		On entry : 0/0
  7750 ;;		On exit  : 0/0
  7751 ;;		Unchanged: 0/0
  7752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7753 ;;      Params:         0       4       0       0       0
  7754 ;;      Locals:         0       2       0       0       0
  7755 ;;      Temps:          0       4       0       0       0
  7756 ;;      Totals:         0      10       0       0       0
  7757 ;;Total ram usage:       10 bytes
  7758 ;; Hardware stack levels used: 1
  7759 ;; This function calls:
  7760 ;;		Nothing
  7761 ;; This function is called by:
  7762 ;;		_sprintf
  7763 ;; This function uses a non-reentrant model
  7764 ;;
  7765                           
  7766  0000'                    ___fltol:	
  7767                           ;psect for function ___fltol
  7768                           
  7769                           
  7770                           ;incstack = 0
  7771                           ; Regs used in ___fltol: [wreg+status,2+status,0+btemp+1]
  7772  0000' 1003               	clrc
  7773  0001' 1283               	bcf	3,5	;RP0=0, select bank0
  7774  0002' 1303               	bcf	3,6	;RP1=0, select bank0
  7775  0003' 0D2F'              	rlf	___fltol@f1+2,w
  7776  0004' 0D30'              	rlf	___fltol@f1+3,w
  7777  0005' 00B6'              	movwf	___fltol@exp1
  7778  0006' 0836'              	movf	___fltol@exp1,w
  7779  0007' 1D03               	btfss	3,2
  7780  0008' 2800'              	goto	l3349
  7781  0009'                    l3345:
  7782  0009' 3000               	movlw	0
  7783  000A' 00B0'              	movwf	?___fltol+3
  7784  000B' 3000               	movlw	0
  7785  000C' 00AF'              	movwf	?___fltol+2
  7786  000D' 3000               	movlw	0
  7787  000E' 00AE'              	movwf	?___fltol+1
  7788  000F' 3000               	movlw	0
  7789  0010' 00AD'              	movwf	?___fltol
  7790  0011' 0008               	return
  7791  0012'                    l3349:
  7792  0012' 082D'              	movf	___fltol@f1,w
  7793  0013' 00B1'              	movwf	??___fltol
  7794  0014' 082E'              	movf	___fltol@f1+1,w
  7795  0015' 00B2'              	movwf	??___fltol+1
  7796  0016' 082F'              	movf	___fltol@f1+2,w
  7797  0017' 00B3'              	movwf	??___fltol+2
  7798  0018' 0830'              	movf	___fltol@f1+3,w
  7799  0019' 00B4'              	movwf	??___fltol+3
  7800  001A' 301F               	movlw	31
  7801  001B'                    u5475:
  7802  001B' 1003               	clrc
  7803  001C' 0CB4'              	rrf	??___fltol+3,f
  7804  001D' 0CB3'              	rrf	??___fltol+2,f
  7805  001E' 0CB2'              	rrf	??___fltol+1,f
  7806  001F' 0CB1'              	rrf	??___fltol,f
  7807  0020' 3EFF               	addlw	-1
  7808  0021' 1D03               	skipz
  7809  0022' 2800'              	goto	u5475
  7810  0023' 0831'              	movf	??___fltol,w
  7811  0024' 00B5'              	movwf	___fltol@sign1
  7812  0025' 17AF'              	bsf	___fltol@f1+2,7
  7813  0026' 30FF               	movlw	255
  7814  0027' 05AD'              	andwf	___fltol@f1,f
  7815  0028' 30FF               	movlw	255
  7816  0029' 05AE'              	andwf	___fltol@f1+1,f
  7817  002A' 30FF               	movlw	255
  7818  002B' 05AF'              	andwf	___fltol@f1+2,f
  7819  002C' 3000               	movlw	0
  7820  002D' 05B0'              	andwf	___fltol@f1+3,f
  7821  002E' 3096               	movlw	150
  7822  002F' 02B6'              	subwf	___fltol@exp1,f
  7823  0030' 1FB6'              	btfss	___fltol@exp1,7
  7824  0031' 2800'              	goto	l3369
  7825  0032' 0836'              	movf	___fltol@exp1,w
  7826  0033' 3A80               	xorlw	128
  7827  0034' 3E97               	addlw	151
  7828  0035' 1C03               	btfss	3,0
  7829  0036' 2800'              	goto	l3345
  7830  0037'                    l3365:
  7831  0037' 3001               	movlw	1
  7832  0038'                    u5505:
  7833  0038' 1003               	clrc
  7834  0039' 0CB0'              	rrf	___fltol@f1+3,f
  7835  003A' 0CAF'              	rrf	___fltol@f1+2,f
  7836  003B' 0CAE'              	rrf	___fltol@f1+1,f
  7837  003C' 0CAD'              	rrf	___fltol@f1,f
  7838  003D' 3EFF               	addlw	-1
  7839  003E' 1D03               	skipz
  7840  003F' 2800'              	goto	u5505
  7841  0040' 3001               	movlw	1
  7842  0041' 00FF               	movwf	127
  7843  0042' 087F               	movf	127,w
  7844  0043' 07B6'              	addwf	___fltol@exp1,f
  7845  0044' 1903               	btfsc	3,2
  7846  0045' 2800'              	goto	l3377
  7847  0046' 2800'              	goto	l3365
  7848  0047'                    l3369:
  7849  0047' 3020               	movlw	32
  7850  0048' 0236'              	subwf	___fltol@exp1,w
  7851  0049' 1803               	btfsc	3,0
  7852  004A' 2800'              	goto	l3345
  7853  004B'                    l588:
  7854  004B' 0836'              	movf	___fltol@exp1,w
  7855  004C' 1903               	btfsc	3,2
  7856  004D' 2800'              	goto	l3377
  7857  004E' 3001               	movlw	1
  7858  004F' 00B1'              	movwf	??___fltol
  7859  0050'                    u5535:
  7860  0050' 1003               	clrc
  7861  0051' 0DAD'              	rlf	___fltol@f1,f
  7862  0052' 0DAE'              	rlf	___fltol@f1+1,f
  7863  0053' 0DAF'              	rlf	___fltol@f1+2,f
  7864  0054' 0DB0'              	rlf	___fltol@f1+3,f
  7865  0055' 0BB1'              	decfsz	??___fltol,f
  7866  0056' 2800'              	goto	u5535
  7867  0057' 3001               	movlw	1
  7868  0058' 02B6'              	subwf	___fltol@exp1,f
  7869  0059' 2800'              	goto	l588
  7870  005A'                    l3377:
  7871  005A' 0835'              	movf	___fltol@sign1,w
  7872  005B' 1903               	btfsc	3,2
  7873  005C' 0008               	return
  7874  005D' 09AD'              	comf	___fltol@f1,f
  7875  005E' 09AE'              	comf	___fltol@f1+1,f
  7876  005F' 09AF'              	comf	___fltol@f1+2,f
  7877  0060' 09B0'              	comf	___fltol@f1+3,f
  7878  0061' 0AAD'              	incf	___fltol@f1,f
  7879  0062' 1903               	skipnz
  7880  0063' 0AAE'              	incf	___fltol@f1+1,f
  7881  0064' 1903               	skipnz
  7882  0065' 0AAF'              	incf	___fltol@f1+2,f
  7883  0066' 1903               	skipnz
  7884  0067' 0AB0'              	incf	___fltol@f1+3,f
  7885  0068' 0008               	return
  7886  0069'                    __end_of___fltol:
  7887                           
  7888                           	psect	text18
  7889  0000'                    __ptext18:	
  7890 ;; *************** function ___flsub *****************
  7891 ;; Defined at:
  7892 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\sprcadd.c"
  7893 ;; Parameters:    Size  Location     Type
  7894 ;;  a               4   66[BANK0 ] long 
  7895 ;;  b               4   70[BANK0 ] long 
  7896 ;; Auto vars:     Size  Location     Type
  7897 ;;		None
  7898 ;; Return value:  Size  Location     Type
  7899 ;;                  4   66[BANK0 ] long 
  7900 ;; Registers used:
  7901 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7902 ;; Tracked objects:
  7903 ;;		On entry : 0/0
  7904 ;;		On exit  : 0/0
  7905 ;;		Unchanged: 0/0
  7906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7907 ;;      Params:         0       8       0       0       0
  7908 ;;      Locals:         0       0       0       0       0
  7909 ;;      Temps:          0       0       0       0       0
  7910 ;;      Totals:         0       8       0       0       0
  7911 ;;Total ram usage:        8 bytes
  7912 ;; Hardware stack levels used: 1
  7913 ;; Hardware stack levels required when called: 1
  7914 ;; This function calls:
  7915 ;;		___fladd
  7916 ;; This function is called by:
  7917 ;;		_sprintf
  7918 ;; This function uses a non-reentrant model
  7919 ;;
  7920                           
  7921  0000'                    ___flsub:	
  7922                           ;psect for function ___flsub
  7923                           
  7924                           
  7925                           ;incstack = 0
  7926                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7927  0000' 3080               	movlw	128
  7928  0001' 1283               	bcf	3,5	;RP0=0, select bank0
  7929  0002' 1303               	bcf	3,6	;RP1=0, select bank0
  7930  0003' 06C5'              	xorwf	___flsub@a+3,f
  7931  0004' 0849'              	movf	___flsub@b+3,w
  7932  0005' 00B1'              	movwf	___fladd@b+3
  7933  0006' 0848'              	movf	___flsub@b+2,w
  7934  0007' 00B0'              	movwf	___fladd@b+2
  7935  0008' 0847'              	movf	___flsub@b+1,w
  7936  0009' 00AF'              	movwf	___fladd@b+1
  7937  000A' 0846'              	movf	___flsub@b,w
  7938  000B' 00AE'              	movwf	___fladd@b
  7939  000C' 0845'              	movf	___flsub@a+3,w
  7940  000D' 00B5'              	movwf	___fladd@a+3
  7941  000E' 0844'              	movf	___flsub@a+2,w
  7942  000F' 00B4'              	movwf	___fladd@a+2
  7943  0010' 0843'              	movf	___flsub@a+1,w
  7944  0011' 00B3'              	movwf	___fladd@a+1
  7945  0012' 0842'              	movf	___flsub@a,w
  7946  0013' 00B2'              	movwf	___fladd@a
  7947  0014' 120A' 118A' 2000'  	fcall	___fladd
  7948  0017' 1283               	bcf	3,5	;RP0=0, select bank0
  7949  0018' 1303               	bcf	3,6	;RP1=0, select bank0
  7950  0019' 0831'              	movf	?___fladd+3,w
  7951  001A' 00C5'              	movwf	?___flsub+3
  7952  001B' 0830'              	movf	?___fladd+2,w
  7953  001C' 00C4'              	movwf	?___flsub+2
  7954  001D' 082F'              	movf	?___fladd+1,w
  7955  001E' 00C3'              	movwf	?___flsub+1
  7956  001F' 082E'              	movf	?___fladd,w
  7957  0020' 00C2'              	movwf	?___flsub
  7958  0021' 0008               	return
  7959  0022'                    __end_of___flsub:
  7960                           
  7961                           	psect	text19
  7962  0000'                    __ptext19:	
  7963 ;; *************** function ___fladd *****************
  7964 ;; Defined at:
  7965 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\sprcadd.c"
  7966 ;; Parameters:    Size  Location     Type
  7967 ;;  b               4   46[BANK0 ] long 
  7968 ;;  a               4   50[BANK0 ] long 
  7969 ;; Auto vars:     Size  Location     Type
  7970 ;;  grs             1   65[BANK0 ] unsigned char 
  7971 ;;  bexp            1   64[BANK0 ] unsigned char 
  7972 ;;  aexp            1   63[BANK0 ] unsigned char 
  7973 ;;  signs           1   62[BANK0 ] unsigned char 
  7974 ;; Return value:  Size  Location     Type
  7975 ;;                  4   46[BANK0 ] unsigned char 
  7976 ;; Registers used:
  7977 ;;		wreg, status,2, status,0, btemp+1
  7978 ;; Tracked objects:
  7979 ;;		On entry : 0/0
  7980 ;;		On exit  : 0/0
  7981 ;;		Unchanged: 0/0
  7982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7983 ;;      Params:         0       8       0       0       0
  7984 ;;      Locals:         0       4       0       0       0
  7985 ;;      Temps:          0       8       0       0       0
  7986 ;;      Totals:         0      20       0       0       0
  7987 ;;Total ram usage:       20 bytes
  7988 ;; Hardware stack levels used: 1
  7989 ;; This function calls:
  7990 ;;		Nothing
  7991 ;; This function is called by:
  7992 ;;		_sprintf
  7993 ;;		___flsub
  7994 ;; This function uses a non-reentrant model
  7995 ;;
  7996                           
  7997  0000'                    ___fladd:	
  7998                           ;psect for function ___fladd
  7999                           
  8000                           
  8001                           ;incstack = 0
  8002                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  8003  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  8004  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  8005  0002' 0831'              	movf	___fladd@b+3,w
  8006  0003' 3980               	andlw	128
  8007  0004' 00BE'              	movwf	___fladd@signs
  8008  0005' 0831'              	movf	___fladd@b+3,w
  8009  0006' 00B6'              	movwf	??___fladd
  8010  0007' 0736'              	addwf	??___fladd,w
  8011  0008' 00C0'              	movwf	___fladd@bexp
  8012  0009' 1BB0'              	btfsc	___fladd@b+2,7
  8013  000A' 1440'              	bsf	___fladd@bexp,0
  8014  000B' 0840'              	movf	___fladd@bexp,w
  8015  000C' 1903               	btfsc	3,2
  8016  000D' 2800'              	goto	l2727
  8017  000E' 0A40'              	incf	___fladd@bexp,w
  8018  000F' 1D03               	btfss	3,2
  8019  0010' 2800'              	goto	l2723
  8020  0011' 3000               	movlw	0
  8021  0012' 00B1'              	movwf	___fladd@b+3
  8022  0013' 3000               	movlw	0
  8023  0014' 00B0'              	movwf	___fladd@b+2
  8024  0015' 3000               	movlw	0
  8025  0016' 00AF'              	movwf	___fladd@b+1
  8026  0017' 3000               	movlw	0
  8027  0018' 00AE'              	movwf	___fladd@b
  8028  0019'                    l2723:
  8029  0019' 17B0'              	bsf	___fladd@b+2,7
  8030  001A' 01B1'              	clrf	___fladd@b+3
  8031  001B' 2800'              	goto	l2729
  8032  001C'                    l2727:
  8033  001C' 3000               	movlw	0
  8034  001D' 00B1'              	movwf	___fladd@b+3
  8035  001E' 3000               	movlw	0
  8036  001F' 00B0'              	movwf	___fladd@b+2
  8037  0020' 3000               	movlw	0
  8038  0021' 00AF'              	movwf	___fladd@b+1
  8039  0022' 3000               	movlw	0
  8040  0023' 00AE'              	movwf	___fladd@b
  8041  0024'                    l2729:
  8042  0024' 0835'              	movf	___fladd@a+3,w
  8043  0025' 3980               	andlw	128
  8044  0026' 00BF'              	movwf	___fladd@aexp
  8045  0027' 083F'              	movf	___fladd@aexp,w
  8046  0028' 063E'              	xorwf	___fladd@signs,w
  8047  0029' 1D03               	btfss	3,2
  8048  002A' 173E'              	bsf	___fladd@signs,6
  8049  002B' 0835'              	movf	___fladd@a+3,w
  8050  002C' 00B6'              	movwf	??___fladd
  8051  002D' 0736'              	addwf	??___fladd,w
  8052  002E' 00BF'              	movwf	___fladd@aexp
  8053  002F' 1BB4'              	btfsc	___fladd@a+2,7
  8054  0030' 143F'              	bsf	___fladd@aexp,0
  8055  0031' 083F'              	movf	___fladd@aexp,w
  8056  0032' 1903               	btfsc	3,2
  8057  0033' 2800'              	goto	l2751
  8058  0034' 0A3F'              	incf	___fladd@aexp,w
  8059  0035' 1D03               	btfss	3,2
  8060  0036' 2800'              	goto	l2747
  8061  0037' 3000               	movlw	0
  8062  0038' 00B5'              	movwf	___fladd@a+3
  8063  0039' 3000               	movlw	0
  8064  003A' 00B4'              	movwf	___fladd@a+2
  8065  003B' 3000               	movlw	0
  8066  003C' 00B3'              	movwf	___fladd@a+1
  8067  003D' 3000               	movlw	0
  8068  003E' 00B2'              	movwf	___fladd@a
  8069  003F'                    l2747:
  8070  003F' 17B4'              	bsf	___fladd@a+2,7
  8071  0040' 01B5'              	clrf	___fladd@a+3
  8072  0041' 2800'              	goto	l705
  8073  0042'                    l2751:
  8074  0042' 3000               	movlw	0
  8075  0043' 00B5'              	movwf	___fladd@a+3
  8076  0044' 3000               	movlw	0
  8077  0045' 00B4'              	movwf	___fladd@a+2
  8078  0046' 3000               	movlw	0
  8079  0047' 00B3'              	movwf	___fladd@a+1
  8080  0048' 3000               	movlw	0
  8081  0049' 00B2'              	movwf	___fladd@a
  8082  004A'                    l705:
  8083  004A' 0840'              	movf	___fladd@bexp,w
  8084  004B' 023F'              	subwf	___fladd@aexp,w
  8085  004C' 1803               	skipnc
  8086  004D' 2800'              	goto	l2787
  8087  004E' 1F3E'              	btfss	___fladd@signs,6
  8088  004F' 2800'              	goto	l2757
  8089  0050' 3080               	movlw	128
  8090  0051' 00FF               	movwf	127
  8091  0052' 087F               	movf	127,w
  8092  0053' 06BE'              	xorwf	___fladd@signs,f
  8093  0054'                    l2757:
  8094  0054' 0840'              	movf	___fladd@bexp,w
  8095  0055' 00C1'              	movwf	___fladd@grs
  8096  0056' 083F'              	movf	___fladd@aexp,w
  8097  0057' 00C0'              	movwf	___fladd@bexp
  8098  0058' 0841'              	movf	___fladd@grs,w
  8099  0059' 00BF'              	movwf	___fladd@aexp
  8100  005A' 082E'              	movf	___fladd@b,w
  8101  005B' 00C1'              	movwf	___fladd@grs
  8102  005C' 0832'              	movf	___fladd@a,w
  8103  005D' 00AE'              	movwf	___fladd@b
  8104  005E' 0841'              	movf	___fladd@grs,w
  8105  005F' 00B2'              	movwf	___fladd@a
  8106  0060' 082F'              	movf	___fladd@b+1,w
  8107  0061' 00C1'              	movwf	___fladd@grs
  8108  0062' 0833'              	movf	___fladd@a+1,w
  8109  0063' 00AF'              	movwf	___fladd@b+1
  8110  0064' 0841'              	movf	___fladd@grs,w
  8111  0065' 00B3'              	movwf	___fladd@a+1
  8112  0066' 0830'              	movf	___fladd@b+2,w
  8113  0067' 00C1'              	movwf	___fladd@grs
  8114  0068' 0834'              	movf	___fladd@a+2,w
  8115  0069' 00B0'              	movwf	___fladd@b+2
  8116  006A' 0841'              	movf	___fladd@grs,w
  8117  006B' 00B4'              	movwf	___fladd@a+2
  8118  006C' 0831'              	movf	___fladd@b+3,w
  8119  006D' 00C1'              	movwf	___fladd@grs
  8120  006E' 0835'              	movf	___fladd@a+3,w
  8121  006F' 00B1'              	movwf	___fladd@b+3
  8122  0070' 0841'              	movf	___fladd@grs,w
  8123  0071' 00B5'              	movwf	___fladd@a+3
  8124  0072'                    l2787:
  8125  0072' 01C1'              	clrf	___fladd@grs
  8126  0073' 083F'              	movf	___fladd@aexp,w
  8127  0074' 00B6'              	movwf	??___fladd
  8128  0075' 01B7'              	clrf	??___fladd+1
  8129  0076' 0837'              	movf	??___fladd+1,w
  8130  0077' 00B9'              	movwf	??___fladd+3
  8131  0078' 0840'              	movf	___fladd@bexp,w
  8132  0079' 0236'              	subwf	??___fladd,w
  8133  007A' 00B8'              	movwf	??___fladd+2
  8134  007B' 1C03               	skipc
  8135  007C' 03B9'              	decf	??___fladd+3,f
  8136  007D' 0839'              	movf	??___fladd+3,w
  8137  007E' 3A80               	xorlw	128
  8138  007F' 00FF               	movwf	127
  8139  0080' 3080               	movlw	128
  8140  0081' 027F               	subwf	127,w
  8141  0082' 1D03               	skipz
  8142  0083' 2800'              	goto	u3955
  8143  0084' 301A               	movlw	26
  8144  0085' 0238'              	subwf	??___fladd+2,w
  8145  0086'                    u3955:
  8146  0086' 1C03               	skipc
  8147  0087' 2800'              	goto	l2805
  8148  0088' 1283               	bcf	3,5	;RP0=0, select bank0
  8149  0089' 1303               	bcf	3,6	;RP1=0, select bank0
  8150  008A' 0831'              	movf	___fladd@b+3,w
  8151  008B' 0430'              	iorwf	___fladd@b+2,w
  8152  008C' 042F'              	iorwf	___fladd@b+1,w
  8153  008D' 042E'              	iorwf	___fladd@b,w
  8154  008E' 1903               	btfsc	3,2
  8155  008F' 2800'              	goto	u3960
  8156  0090' 3001               	movlw	1
  8157  0091' 2800'              	goto	u3970
  8158  0092'                    u3960:
  8159  0092' 3000               	movlw	0
  8160  0093'                    u3970:
  8161  0093' 00C1'              	movwf	___fladd@grs
  8162  0094' 3000               	movlw	0
  8163  0095' 00B1'              	movwf	___fladd@b+3
  8164  0096' 3000               	movlw	0
  8165  0097' 00B0'              	movwf	___fladd@b+2
  8166  0098' 3000               	movlw	0
  8167  0099' 00AF'              	movwf	___fladd@b+1
  8168  009A' 3000               	movlw	0
  8169  009B' 00AE'              	movwf	___fladd@b
  8170  009C' 083F'              	movf	___fladd@aexp,w
  8171  009D' 00C0'              	movwf	___fladd@bexp
  8172  009E' 2800'              	goto	l709
  8173  009F'                    l711:
  8174  009F' 1C41'              	btfss	___fladd@grs,0
  8175  00A0' 2800'              	goto	l2795
  8176  00A1' 0841'              	movf	___fladd@grs,w
  8177  00A2' 00B6'              	movwf	??___fladd
  8178  00A3' 1003               	clrc
  8179  00A4' 0C36'              	rrf	??___fladd,w
  8180  00A5' 3801               	iorlw	1
  8181  00A6' 00C1'              	movwf	___fladd@grs
  8182  00A7' 2800'              	goto	l2797
  8183  00A8'                    l2795:
  8184  00A8' 1003               	clrc
  8185  00A9' 0CC1'              	rrf	___fladd@grs,f
  8186  00AA'                    l2797:
  8187  00AA' 182E'              	btfsc	___fladd@b,0
  8188  00AB' 17C1'              	bsf	___fladd@grs,7
  8189  00AC' 3001               	movlw	1
  8190  00AD' 00B6'              	movwf	??___fladd
  8191  00AE'                    u4005:
  8192  00AE' 0D31'              	rlf	___fladd@b+3,w
  8193  00AF' 0CB1'              	rrf	___fladd@b+3,f
  8194  00B0' 0CB0'              	rrf	___fladd@b+2,f
  8195  00B1' 0CAF'              	rrf	___fladd@b+1,f
  8196  00B2' 0CAE'              	rrf	___fladd@b,f
  8197  00B3' 0B80'              	decfsz	??___fladd& (0+127),f
  8198  00B4' 2800'              	goto	u4005
  8199  00B5' 3001               	movlw	1
  8200  00B6' 00FF               	movwf	127
  8201  00B7' 087F               	movf	127,w
  8202  00B8' 07C0'              	addwf	___fladd@bexp,f
  8203  00B9'                    l2805:
  8204  00B9' 1283               	bcf	3,5	;RP0=0, select bank0
  8205  00BA' 1303               	bcf	3,6	;RP1=0, select bank0
  8206  00BB' 083F'              	movf	___fladd@aexp,w
  8207  00BC' 0240'              	subwf	___fladd@bexp,w
  8208  00BD' 1C03               	skipc
  8209  00BE' 2800'              	goto	l711
  8210  00BF'                    l709:
  8211  00BF' 1B3E'              	btfsc	___fladd@signs,6
  8212  00C0' 2800'              	goto	l2831
  8213  00C1' 0840'              	movf	___fladd@bexp,w
  8214  00C2' 1D03               	btfss	3,2
  8215  00C3' 2800'              	goto	l2813
  8216  00C4' 3000               	movlw	0
  8217  00C5' 00B1'              	movwf	?___fladd+3
  8218  00C6' 3000               	movlw	0
  8219  00C7' 00B0'              	movwf	?___fladd+2
  8220  00C8' 3000               	movlw	0
  8221  00C9' 00AF'              	movwf	?___fladd+1
  8222  00CA' 3000               	movlw	0
  8223  00CB' 00AE'              	movwf	?___fladd
  8224  00CC' 0008               	return
  8225  00CD'                    l2813:
  8226  00CD' 0832'              	movf	___fladd@a,w
  8227  00CE' 07AE'              	addwf	___fladd@b,f
  8228  00CF' 0833'              	movf	___fladd@a+1,w
  8229  00D0' 1103               	clrz
  8230  00D1' 1803               	skipnc
  8231  00D2' 3E01               	addlw	1
  8232  00D3' 1D03               	btfss	3,2
  8233  00D4' 07AF'              	addwf	___fladd@b+1,f
  8234  00D5' 0834'              	movf	___fladd@a+2,w
  8235  00D6' 1103               	clrz
  8236  00D7' 1803               	skipnc
  8237  00D8' 3E01               	addlw	1
  8238  00D9' 1D03               	btfss	3,2
  8239  00DA' 07B0'              	addwf	___fladd@b+2,f
  8240  00DB' 0835'              	movf	___fladd@a+3,w
  8241  00DC' 1103               	clrz
  8242  00DD' 1803               	skipnc
  8243  00DE' 3E01               	addlw	1
  8244  00DF' 1D03               	btfss	3,2
  8245  00E0' 07B1'              	addwf	___fladd@b+3,f
  8246  00E1' 1C31'              	btfss	___fladd@b+3,0
  8247  00E2' 2800'              	goto	l2867
  8248  00E3' 1C41'              	btfss	___fladd@grs,0
  8249  00E4' 2800'              	goto	l2821
  8250  00E5' 0841'              	movf	___fladd@grs,w
  8251  00E6' 00B6'              	movwf	??___fladd
  8252  00E7' 1003               	clrc
  8253  00E8' 0C36'              	rrf	??___fladd,w
  8254  00E9' 3801               	iorlw	1
  8255  00EA' 00C1'              	movwf	___fladd@grs
  8256  00EB' 2800'              	goto	l2823
  8257  00EC'                    l2821:
  8258  00EC' 1003               	clrc
  8259  00ED' 0CC1'              	rrf	___fladd@grs,f
  8260  00EE'                    l2823:
  8261  00EE' 182E'              	btfsc	___fladd@b,0
  8262  00EF' 17C1'              	bsf	___fladd@grs,7
  8263  00F0' 3001               	movlw	1
  8264  00F1' 00B6'              	movwf	??___fladd
  8265  00F2'                    u4085:
  8266  00F2' 0D31'              	rlf	___fladd@b+3,w
  8267  00F3' 0CB1'              	rrf	___fladd@b+3,f
  8268  00F4' 0CB0'              	rrf	___fladd@b+2,f
  8269  00F5' 0CAF'              	rrf	___fladd@b+1,f
  8270  00F6' 0CAE'              	rrf	___fladd@b,f
  8271  00F7' 0B80'              	decfsz	??___fladd& (0+127),f
  8272  00F8' 2800'              	goto	u4085
  8273  00F9' 3001               	movlw	1
  8274  00FA' 00FF               	movwf	127
  8275  00FB' 087F               	movf	127,w
  8276  00FC' 07C0'              	addwf	___fladd@bexp,f
  8277  00FD' 2800'              	goto	l2867
  8278  00FE'                    l2831:
  8279  00FE' 0831'              	movf	___fladd@b+3,w
  8280  00FF' 3A80               	xorlw	128
  8281  0100' 00FF               	movwf	127
  8282  0101' 0835'              	movf	___fladd@a+3,w
  8283  0102' 3A80               	xorlw	128
  8284  0103' 027F               	subwf	127,w
  8285  0104' 1D03               	skipz
  8286  0105' 2800'              	goto	u4093
  8287  0106' 0834'              	movf	___fladd@a+2,w
  8288  0107' 0230'              	subwf	___fladd@b+2,w
  8289  0108' 1D03               	skipz
  8290  0109' 2800'              	goto	u4093
  8291  010A' 0833'              	movf	___fladd@a+1,w
  8292  010B' 022F'              	subwf	___fladd@b+1,w
  8293  010C' 1D03               	skipz
  8294  010D' 2800'              	goto	u4093
  8295  010E' 0832'              	movf	___fladd@a,w
  8296  010F' 022E'              	subwf	___fladd@b,w
  8297  0110'                    u4093:
  8298  0110' 1803               	skipnc
  8299  0111' 2800'              	goto	l2843
  8300  0112' 30FF               	movlw	255
  8301  0113' 00B6'              	movwf	??___fladd
  8302  0114' 30FF               	movlw	255
  8303  0115' 00B7'              	movwf	??___fladd+1
  8304  0116' 30FF               	movlw	255
  8305  0117' 00B8'              	movwf	??___fladd+2
  8306  0118' 30FF               	movlw	255
  8307  0119' 00B9'              	movwf	??___fladd+3
  8308  011A' 0832'              	movf	___fladd@a,w
  8309  011B' 00BA'              	movwf	??___fladd+4
  8310  011C' 0833'              	movf	___fladd@a+1,w
  8311  011D' 00BB'              	movwf	??___fladd+5
  8312  011E' 0834'              	movf	___fladd@a+2,w
  8313  011F' 00BC'              	movwf	??___fladd+6
  8314  0120' 0835'              	movf	___fladd@a+3,w
  8315  0121' 00BD'              	movwf	??___fladd+7
  8316  0122' 082E'              	movf	___fladd@b,w
  8317  0123' 02BA'              	subwf	??___fladd+4,f
  8318  0124' 082F'              	movf	___fladd@b+1,w
  8319  0125' 1C03               	skipc
  8320  0126' 0F2F'              	incfsz	___fladd@b+1,w
  8321  0127' 2800'              	goto	u4101
  8322  0128' 2800'              	goto	u4102
  8323  0129'                    u4101:
  8324  0129' 02BB'              	subwf	??___fladd+5,f
  8325  012A'                    u4102:
  8326  012A' 0830'              	movf	___fladd@b+2,w
  8327  012B' 1C03               	skipc
  8328  012C' 0F30'              	incfsz	___fladd@b+2,w
  8329  012D' 2800'              	goto	u4103
  8330  012E' 2800'              	goto	u4104
  8331  012F'                    u4103:
  8332  012F' 02BC'              	subwf	??___fladd+6,f
  8333  0130'                    u4104:
  8334  0130' 0831'              	movf	___fladd@b+3,w
  8335  0131' 1C03               	skipc
  8336  0132' 0F31'              	incfsz	___fladd@b+3,w
  8337  0133' 2800'              	goto	u4105
  8338  0134' 2800'              	goto	u4106
  8339  0135'                    u4105:
  8340  0135' 02BD'              	subwf	??___fladd+7,f
  8341  0136'                    u4106:
  8342  0136' 083A'              	movf	??___fladd+4,w
  8343  0137' 07B6'              	addwf	??___fladd,f
  8344  0138' 083B'              	movf	??___fladd+5,w
  8345  0139' 1803               	skipnc
  8346  013A' 0F3B'              	incfsz	??___fladd+5,w
  8347  013B' 2800'              	goto	u4110
  8348  013C' 2800'              	goto	u4111
  8349  013D'                    u4110:
  8350  013D' 07B7'              	addwf	??___fladd+1,f
  8351  013E'                    u4111:
  8352  013E' 083C'              	movf	??___fladd+6,w
  8353  013F' 1803               	skipnc
  8354  0140' 0F3C'              	incfsz	??___fladd+6,w
  8355  0141' 2800'              	goto	u4112
  8356  0142' 2800'              	goto	u4113
  8357  0143'                    u4112:
  8358  0143' 07B8'              	addwf	??___fladd+2,f
  8359  0144'                    u4113:
  8360  0144' 083D'              	movf	??___fladd+7,w
  8361  0145' 1803               	skipnc
  8362  0146' 0A3D'              	incf	??___fladd+7,w
  8363  0147' 07B9'              	addwf	??___fladd+3,f
  8364  0148' 0839'              	movf	??___fladd+3,w
  8365  0149' 00B1'              	movwf	___fladd@b+3
  8366  014A' 0838'              	movf	??___fladd+2,w
  8367  014B' 00B0'              	movwf	___fladd@b+2
  8368  014C' 0837'              	movf	??___fladd+1,w
  8369  014D' 00AF'              	movwf	___fladd@b+1
  8370  014E' 0836'              	movf	??___fladd,w
  8371  014F' 00AE'              	movwf	___fladd@b
  8372  0150' 3080               	movlw	128
  8373  0151' 00FF               	movwf	127
  8374  0152' 087F               	movf	127,w
  8375  0153' 06BE'              	xorwf	___fladd@signs,f
  8376  0154' 09C1'              	comf	___fladd@grs,f
  8377  0155' 0AC1'              	incf	___fladd@grs,f
  8378  0156' 0841'              	movf	___fladd@grs,w
  8379  0157' 1D03               	btfss	3,2
  8380  0158' 2800'              	goto	l726
  8381  0159' 3001               	movlw	1
  8382  015A' 07AE'              	addwf	___fladd@b,f
  8383  015B' 3000               	movlw	0
  8384  015C' 1803               	skipnc
  8385  015D' 3001               	movlw	1
  8386  015E' 07AF'              	addwf	___fladd@b+1,f
  8387  015F' 3000               	movlw	0
  8388  0160' 1803               	skipnc
  8389  0161' 3001               	movlw	1
  8390  0162' 07B0'              	addwf	___fladd@b+2,f
  8391  0163' 3000               	movlw	0
  8392  0164' 1803               	skipnc
  8393  0165' 3001               	movlw	1
  8394  0166' 07B1'              	addwf	___fladd@b+3,f
  8395  0167' 2800'              	goto	l726
  8396  0168'                    l2843:
  8397  0168' 0832'              	movf	___fladd@a,w
  8398  0169' 02AE'              	subwf	___fladd@b,f
  8399  016A' 0833'              	movf	___fladd@a+1,w
  8400  016B' 1C03               	skipc
  8401  016C' 0F33'              	incfsz	___fladd@a+1,w
  8402  016D' 02AF'              	subwf	___fladd@b+1,f
  8403  016E' 0834'              	movf	___fladd@a+2,w
  8404  016F' 1C03               	skipc
  8405  0170' 0F34'              	incfsz	___fladd@a+2,w
  8406  0171' 02B0'              	subwf	___fladd@b+2,f
  8407  0172' 0835'              	movf	___fladd@a+3,w
  8408  0173' 1C03               	skipc
  8409  0174' 0F35'              	incfsz	___fladd@a+3,w
  8410  0175' 02B1'              	subwf	___fladd@b+3,f
  8411  0176'                    l726:
  8412  0176' 0831'              	movf	___fladd@b+3,w
  8413  0177' 0430'              	iorwf	___fladd@b+2,w
  8414  0178' 042F'              	iorwf	___fladd@b+1,w
  8415  0179' 042E'              	iorwf	___fladd@b,w
  8416  017A' 1D03               	skipz
  8417  017B' 2800'              	goto	l2865
  8418  017C' 0841'              	movf	___fladd@grs,w
  8419  017D' 1D03               	btfss	3,2
  8420  017E' 2800'              	goto	l2865
  8421  017F' 3000               	movlw	0
  8422  0180' 00B1'              	movwf	?___fladd+3
  8423  0181' 3000               	movlw	0
  8424  0182' 00B0'              	movwf	?___fladd+2
  8425  0183' 3000               	movlw	0
  8426  0184' 00AF'              	movwf	?___fladd+1
  8427  0185' 3000               	movlw	0
  8428  0186' 00AE'              	movwf	?___fladd
  8429  0187' 0008               	return
  8430  0188'                    l2851:
  8431  0188' 3001               	movlw	1
  8432  0189' 00B6'              	movwf	??___fladd
  8433  018A'                    u4155:
  8434  018A' 1003               	clrc
  8435  018B' 0DAE'              	rlf	___fladd@b,f
  8436  018C' 0DAF'              	rlf	___fladd@b+1,f
  8437  018D' 0DB0'              	rlf	___fladd@b+2,f
  8438  018E' 0DB1'              	rlf	___fladd@b+3,f
  8439  018F' 0BB6'              	decfsz	??___fladd,f
  8440  0190' 2800'              	goto	u4155
  8441  0191' 1BC1'              	btfsc	___fladd@grs,7
  8442  0192' 142E'              	bsf	___fladd@b,0
  8443  0193' 1C41'              	btfss	___fladd@grs,0
  8444  0194' 2800'              	goto	l2859
  8445  0195' 1403               	setc
  8446  0196' 2800'              	goto	L7
  8447  0197'                    l2859:
  8448  0197' 1003               	clrc
  8449  0198'                    L7:
  8450  0198' 0DC1'              	rlf	___fladd@grs,f
  8451  0199' 0840'              	movf	___fladd@bexp,w
  8452  019A' 1903               	btfsc	3,2
  8453  019B' 2800'              	goto	l2865
  8454  019C' 3001               	movlw	1
  8455  019D' 02C0'              	subwf	___fladd@bexp,f
  8456  019E'                    l2865:
  8457  019E' 1FB0'              	btfss	___fladd@b+2,7
  8458  019F' 2800'              	goto	l2851
  8459  01A0'                    l2867:
  8460  01A0' 01BF'              	clrf	___fladd@aexp
  8461  01A1' 1FC1'              	btfss	___fladd@grs,7
  8462  01A2' 2800'              	goto	l2877
  8463  01A3' 0841'              	movf	___fladd@grs,w
  8464  01A4' 397F               	andlw	127
  8465  01A5' 1903               	btfsc	3,2
  8466  01A6' 182E'              	btfsc	___fladd@b,0
  8467  01A7' 2800'              	goto	l2873
  8468  01A8' 2800'              	goto	l2877
  8469  01A9'                    l2873:
  8470  01A9' 01BF'              	clrf	___fladd@aexp
  8471  01AA' 0ABF'              	incf	___fladd@aexp,f
  8472  01AB'                    l2877:
  8473  01AB' 083F'              	movf	___fladd@aexp,w
  8474  01AC' 1903               	btfsc	3,2
  8475  01AD' 2800'              	goto	l2887
  8476  01AE' 3001               	movlw	1
  8477  01AF' 07AE'              	addwf	___fladd@b,f
  8478  01B0' 3000               	movlw	0
  8479  01B1' 1803               	skipnc
  8480  01B2' 3001               	movlw	1
  8481  01B3' 07AF'              	addwf	___fladd@b+1,f
  8482  01B4' 3000               	movlw	0
  8483  01B5' 1803               	skipnc
  8484  01B6' 3001               	movlw	1
  8485  01B7' 07B0'              	addwf	___fladd@b+2,f
  8486  01B8' 3000               	movlw	0
  8487  01B9' 1803               	skipnc
  8488  01BA' 3001               	movlw	1
  8489  01BB' 07B1'              	addwf	___fladd@b+3,f
  8490  01BC' 1C31'              	btfss	___fladd@b+3,0
  8491  01BD' 2800'              	goto	l2887
  8492  01BE' 082E'              	movf	___fladd@b,w
  8493  01BF' 00B6'              	movwf	??___fladd
  8494  01C0' 082F'              	movf	___fladd@b+1,w
  8495  01C1' 00B7'              	movwf	??___fladd+1
  8496  01C2' 0830'              	movf	___fladd@b+2,w
  8497  01C3' 00B8'              	movwf	??___fladd+2
  8498  01C4' 0831'              	movf	___fladd@b+3,w
  8499  01C5' 00B9'              	movwf	??___fladd+3
  8500  01C6' 3001               	movlw	1
  8501  01C7' 00BA'              	movwf	??___fladd+4
  8502  01C8'                    u4255:
  8503  01C8' 0D39'              	rlf	??___fladd+3,w
  8504  01C9' 0CB9'              	rrf	??___fladd+3,f
  8505  01CA' 0CB8'              	rrf	??___fladd+2,f
  8506  01CB' 0CB7'              	rrf	??___fladd+1,f
  8507  01CC' 0CB6'              	rrf	??___fladd,f
  8508  01CD' 0BBA'              	decfsz	??___fladd+4,f
  8509  01CE' 2800'              	goto	u4255
  8510  01CF' 0839'              	movf	??___fladd+3,w
  8511  01D0' 00B1'              	movwf	___fladd@b+3
  8512  01D1' 0838'              	movf	??___fladd+2,w
  8513  01D2' 00B0'              	movwf	___fladd@b+2
  8514  01D3' 0837'              	movf	??___fladd+1,w
  8515  01D4' 00AF'              	movwf	___fladd@b+1
  8516  01D5' 0836'              	movf	??___fladd,w
  8517  01D6' 00AE'              	movwf	___fladd@b
  8518  01D7' 0A40'              	incf	___fladd@bexp,w
  8519  01D8' 1903               	btfsc	3,2
  8520  01D9' 2800'              	goto	l2887
  8521  01DA' 3001               	movlw	1
  8522  01DB' 00FF               	movwf	127
  8523  01DC' 087F               	movf	127,w
  8524  01DD' 07C0'              	addwf	___fladd@bexp,f
  8525  01DE'                    l2887:
  8526  01DE' 0A40'              	incf	___fladd@bexp,w
  8527  01DF' 1D03               	btfss	3,2
  8528  01E0' 0840'              	movf	___fladd@bexp,w
  8529  01E1' 1D03               	btfss	3,2
  8530  01E2' 2800'              	goto	l2897
  8531  01E3' 3000               	movlw	0
  8532  01E4' 00B1'              	movwf	___fladd@b+3
  8533  01E5' 3000               	movlw	0
  8534  01E6' 00B0'              	movwf	___fladd@b+2
  8535  01E7' 3000               	movlw	0
  8536  01E8' 00AF'              	movwf	___fladd@b+1
  8537  01E9' 3000               	movlw	0
  8538  01EA' 00AE'              	movwf	___fladd@b
  8539  01EB' 0840'              	movf	___fladd@bexp,w
  8540  01EC' 1903               	btfsc	3,2
  8541  01ED' 01BE'              	clrf	___fladd@signs
  8542  01EE'                    l2897:
  8543  01EE' 1C40'              	btfss	___fladd@bexp,0
  8544  01EF' 2800'              	goto	l2901
  8545  01F0' 17B0'              	bsf	___fladd@b+2,7
  8546  01F1' 2800'              	goto	l2903
  8547  01F2'                    l2901:
  8548  01F2' 307F               	movlw	127
  8549  01F3' 00FF               	movwf	127
  8550  01F4' 087F               	movf	127,w
  8551  01F5' 05B0'              	andwf	___fladd@b+2,f
  8552  01F6'                    l2903:
  8553  01F6' 0840'              	movf	___fladd@bexp,w
  8554  01F7' 00B6'              	movwf	??___fladd
  8555  01F8' 1003               	clrc
  8556  01F9' 0C36'              	rrf	??___fladd,w
  8557  01FA' 00B1'              	movwf	___fladd@b+3
  8558  01FB' 1FBE'              	btfss	___fladd@signs,7
  8559  01FC' 0008               	return
  8560  01FD' 17B1'              	bsf	___fladd@b+3,7
  8561  01FE' 0008               	return
  8562  01FF'                    __end_of___fladd:
  8563                           
  8564                           	psect	text20
  8565  0000'                    __ptext20:	
  8566 ;; *************** function ___flneg *****************
  8567 ;; Defined at:
  8568 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\flneg.c"
  8569 ;; Parameters:    Size  Location     Type
  8570 ;;  f1              4    0[COMMON] unsigned char 
  8571 ;; Auto vars:     Size  Location     Type
  8572 ;;		None
  8573 ;; Return value:  Size  Location     Type
  8574 ;;                  4    0[COMMON] unsigned char 
  8575 ;; Registers used:
  8576 ;;		wreg
  8577 ;; Tracked objects:
  8578 ;;		On entry : 0/0
  8579 ;;		On exit  : 0/0
  8580 ;;		Unchanged: 0/0
  8581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8582 ;;      Params:         4       0       0       0       0
  8583 ;;      Locals:         0       0       0       0       0
  8584 ;;      Temps:          0       0       0       0       0
  8585 ;;      Totals:         4       0       0       0       0
  8586 ;;Total ram usage:        4 bytes
  8587 ;; Hardware stack levels used: 1
  8588 ;; This function calls:
  8589 ;;		Nothing
  8590 ;; This function is called by:
  8591 ;;		_sprintf
  8592 ;; This function uses a non-reentrant model
  8593 ;;
  8594                           
  8595  0000'                    ___flneg:	
  8596                           ;psect for function ___flneg
  8597                           
  8598                           
  8599                           ;incstack = 0
  8600                           ; Regs used in ___flneg: [wreg]
  8601  0000' 0803'              	movf	___flneg@f1+3,w
  8602  0001' 0402'              	iorwf	___flneg@f1+2,w
  8603  0002' 0401'              	iorwf	___flneg@f1+1,w
  8604  0003' 0400'              	iorwf	___flneg@f1,w
  8605  0004' 1903               	skipnz
  8606  0005' 0008               	return
  8607  0006' 3080               	movlw	128
  8608  0007' 0683'              	xorwf	___flneg@f1+3,f
  8609  0008' 0008               	return
  8610  0009'                    __end_of___flneg:
  8611                           
  8612                           	psect	text21
  8613  0000'                    __ptext21:	
  8614 ;; *************** function ___flge *****************
  8615 ;; Defined at:
  8616 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\flge.c"
  8617 ;; Parameters:    Size  Location     Type
  8618 ;;  ff1             4    0[COMMON] unsigned char 
  8619 ;;  ff2             4    4[COMMON] unsigned char 
  8620 ;; Auto vars:     Size  Location     Type
  8621 ;;		None
  8622 ;; Return value:  Size  Location     Type
  8623 ;;		None               void
  8624 ;; Registers used:
  8625 ;;		wreg, status,2, status,0
  8626 ;; Tracked objects:
  8627 ;;		On entry : 0/0
  8628 ;;		On exit  : 0/0
  8629 ;;		Unchanged: 0/0
  8630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8631 ;;      Params:         8       0       0       0       0
  8632 ;;      Locals:         0       0       0       0       0
  8633 ;;      Temps:          4       0       0       0       0
  8634 ;;      Totals:        12       0       0       0       0
  8635 ;;Total ram usage:       12 bytes
  8636 ;; Hardware stack levels used: 1
  8637 ;; This function calls:
  8638 ;;		Nothing
  8639 ;; This function is called by:
  8640 ;;		_sprintf
  8641 ;; This function uses a non-reentrant model
  8642 ;;
  8643                           
  8644  0000'                    ___flge:	
  8645                           ;psect for function ___flge
  8646                           
  8647                           
  8648                           ;incstack = 0
  8649                           ; Regs used in ___flge: [wreg+status,2+status,0]
  8650  0000' 3000               	movlw	0
  8651  0001' 0500'              	andwf	___flge@ff1,w
  8652  0002' 0088'              	movwf	??___flge
  8653  0003' 3000               	movlw	0
  8654  0004' 0501'              	andwf	___flge@ff1+1,w
  8655  0005' 0089'              	movwf	??___flge+1
  8656  0006' 3080               	movlw	128
  8657  0007' 0502'              	andwf	___flge@ff1+2,w
  8658  0008' 008A'              	movwf	??___flge+2
  8659  0009' 307F               	movlw	127
  8660  000A' 0503'              	andwf	___flge@ff1+3,w
  8661  000B' 008B'              	movwf	??___flge+3
  8662  000C' 080B'              	movf	??___flge+3,w
  8663  000D' 040A'              	iorwf	??___flge+2,w
  8664  000E' 0409'              	iorwf	??___flge+1,w
  8665  000F' 0408'              	iorwf	??___flge,w
  8666  0010' 1D03               	skipz
  8667  0011' 2800'              	goto	l569
  8668  0012' 3000               	movlw	0
  8669  0013' 0083'              	movwf	___flge@ff1+3
  8670  0014' 3000               	movlw	0
  8671  0015' 0082'              	movwf	___flge@ff1+2
  8672  0016' 3000               	movlw	0
  8673  0017' 0081'              	movwf	___flge@ff1+1
  8674  0018' 3000               	movlw	0
  8675  0019' 0080'              	movwf	___flge@ff1
  8676  001A'                    l569:
  8677  001A' 3000               	movlw	0
  8678  001B' 0504'              	andwf	___flge@ff2,w
  8679  001C' 0088'              	movwf	??___flge
  8680  001D' 3000               	movlw	0
  8681  001E' 0505'              	andwf	___flge@ff2+1,w
  8682  001F' 0089'              	movwf	??___flge+1
  8683  0020' 3080               	movlw	128
  8684  0021' 0506'              	andwf	___flge@ff2+2,w
  8685  0022' 008A'              	movwf	??___flge+2
  8686  0023' 307F               	movlw	127
  8687  0024' 0507'              	andwf	___flge@ff2+3,w
  8688  0025' 008B'              	movwf	??___flge+3
  8689  0026' 080B'              	movf	??___flge+3,w
  8690  0027' 040A'              	iorwf	??___flge+2,w
  8691  0028' 0409'              	iorwf	??___flge+1,w
  8692  0029' 0408'              	iorwf	??___flge,w
  8693  002A' 1D03               	skipz
  8694  002B' 2800'              	goto	l3321
  8695  002C' 3000               	movlw	0
  8696  002D' 0087'              	movwf	___flge@ff2+3
  8697  002E' 3000               	movlw	0
  8698  002F' 0086'              	movwf	___flge@ff2+2
  8699  0030' 3000               	movlw	0
  8700  0031' 0085'              	movwf	___flge@ff2+1
  8701  0032' 3000               	movlw	0
  8702  0033' 0084'              	movwf	___flge@ff2
  8703  0034'                    l3321:
  8704  0034' 1F83'              	btfss	___flge@ff1+3,7
  8705  0035' 2800'              	goto	l3325
  8706  0036' 3000               	movlw	0
  8707  0037' 0088'              	movwf	??___flge
  8708  0038' 3000               	movlw	0
  8709  0039' 0089'              	movwf	??___flge+1
  8710  003A' 3000               	movlw	0
  8711  003B' 008A'              	movwf	??___flge+2
  8712  003C' 3080               	movlw	128
  8713  003D' 008B'              	movwf	??___flge+3
  8714  003E' 0800'              	movf	___flge@ff1,w
  8715  003F' 0288'              	subwf	??___flge,f
  8716  0040' 0801'              	movf	___flge@ff1+1,w
  8717  0041' 1C03               	skipc
  8718  0042' 0F01'              	incfsz	___flge@ff1+1,w
  8719  0043' 2800'              	goto	u5411
  8720  0044' 2800'              	goto	u5412
  8721  0045'                    u5411:
  8722  0045' 0289'              	subwf	??___flge+1,f
  8723  0046'                    u5412:
  8724  0046' 0802'              	movf	___flge@ff1+2,w
  8725  0047' 1C03               	skipc
  8726  0048' 0F02'              	incfsz	___flge@ff1+2,w
  8727  0049' 2800'              	goto	u5413
  8728  004A' 2800'              	goto	u5414
  8729  004B'                    u5413:
  8730  004B' 028A'              	subwf	??___flge+2,f
  8731  004C'                    u5414:
  8732  004C' 0803'              	movf	___flge@ff1+3,w
  8733  004D' 1C03               	skipc
  8734  004E' 0F03'              	incfsz	___flge@ff1+3,w
  8735  004F' 2800'              	goto	u5415
  8736  0050' 2800'              	goto	u5416
  8737  0051'                    u5415:
  8738  0051' 028B'              	subwf	??___flge+3,f
  8739  0052'                    u5416:
  8740  0052' 080B'              	movf	??___flge+3,w
  8741  0053' 0083'              	movwf	___flge@ff1+3
  8742  0054' 080A'              	movf	??___flge+2,w
  8743  0055' 0082'              	movwf	___flge@ff1+2
  8744  0056' 0809'              	movf	??___flge+1,w
  8745  0057' 0081'              	movwf	___flge@ff1+1
  8746  0058' 0808'              	movf	??___flge,w
  8747  0059' 0080'              	movwf	___flge@ff1
  8748  005A'                    l3325:
  8749  005A' 1F87'              	btfss	___flge@ff2+3,7
  8750  005B' 2800'              	goto	l572
  8751  005C' 3000               	movlw	0
  8752  005D' 0088'              	movwf	??___flge
  8753  005E' 3000               	movlw	0
  8754  005F' 0089'              	movwf	??___flge+1
  8755  0060' 3000               	movlw	0
  8756  0061' 008A'              	movwf	??___flge+2
  8757  0062' 3080               	movlw	128
  8758  0063' 008B'              	movwf	??___flge+3
  8759  0064' 0804'              	movf	___flge@ff2,w
  8760  0065' 0288'              	subwf	??___flge,f
  8761  0066' 0805'              	movf	___flge@ff2+1,w
  8762  0067' 1C03               	skipc
  8763  0068' 0F05'              	incfsz	___flge@ff2+1,w
  8764  0069' 2800'              	goto	u5431
  8765  006A' 2800'              	goto	u5432
  8766  006B'                    u5431:
  8767  006B' 0289'              	subwf	??___flge+1,f
  8768  006C'                    u5432:
  8769  006C' 0806'              	movf	___flge@ff2+2,w
  8770  006D' 1C03               	skipc
  8771  006E' 0F06'              	incfsz	___flge@ff2+2,w
  8772  006F' 2800'              	goto	u5433
  8773  0070' 2800'              	goto	u5434
  8774  0071'                    u5433:
  8775  0071' 028A'              	subwf	??___flge+2,f
  8776  0072'                    u5434:
  8777  0072' 0807'              	movf	___flge@ff2+3,w
  8778  0073' 1C03               	skipc
  8779  0074' 0F07'              	incfsz	___flge@ff2+3,w
  8780  0075' 2800'              	goto	u5435
  8781  0076' 2800'              	goto	u5436
  8782  0077'                    u5435:
  8783  0077' 028B'              	subwf	??___flge+3,f
  8784  0078'                    u5436:
  8785  0078' 080B'              	movf	??___flge+3,w
  8786  0079' 0087'              	movwf	___flge@ff2+3
  8787  007A' 080A'              	movf	??___flge+2,w
  8788  007B' 0086'              	movwf	___flge@ff2+2
  8789  007C' 0809'              	movf	??___flge+1,w
  8790  007D' 0085'              	movwf	___flge@ff2+1
  8791  007E' 0808'              	movf	??___flge,w
  8792  007F' 0084'              	movwf	___flge@ff2
  8793  0080'                    l572:
  8794  0080' 3080               	movlw	128
  8795  0081' 0683'              	xorwf	___flge@ff1+3,f
  8796  0082' 3080               	movlw	128
  8797  0083' 0687'              	xorwf	___flge@ff2+3,f
  8798  0084' 0807'              	movf	___flge@ff2+3,w
  8799  0085' 0203'              	subwf	___flge@ff1+3,w
  8800  0086' 1D03               	skipz
  8801  0087' 0008               	return
  8802  0088' 0806'              	movf	___flge@ff2+2,w
  8803  0089' 0202'              	subwf	___flge@ff1+2,w
  8804  008A' 1D03               	skipz
  8805  008B' 0008               	return
  8806  008C' 0805'              	movf	___flge@ff2+1,w
  8807  008D' 0201'              	subwf	___flge@ff1+1,w
  8808  008E' 1D03               	skipz
  8809  008F' 0008               	return
  8810  0090' 0804'              	movf	___flge@ff2,w
  8811  0091' 0200'              	subwf	___flge@ff1,w
  8812  0092' 0008               	return
  8813  0093'                    __end_of___flge:
  8814                           
  8815                           	psect	text22
  8816  0000'                    __ptext22:	
  8817 ;; *************** function ___fleq *****************
  8818 ;; Defined at:
  8819 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\fleq.c"
  8820 ;; Parameters:    Size  Location     Type
  8821 ;;  ff1             4    0[COMMON] unsigned char 
  8822 ;;  ff2             4    4[COMMON] unsigned char 
  8823 ;; Auto vars:     Size  Location     Type
  8824 ;;		None
  8825 ;; Return value:  Size  Location     Type
  8826 ;;		None               void
  8827 ;; Registers used:
  8828 ;;		wreg, status,2, status,0
  8829 ;; Tracked objects:
  8830 ;;		On entry : 0/0
  8831 ;;		On exit  : 0/0
  8832 ;;		Unchanged: 0/0
  8833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8834 ;;      Params:         8       0       0       0       0
  8835 ;;      Locals:         0       0       0       0       0
  8836 ;;      Temps:          4       0       0       0       0
  8837 ;;      Totals:        12       0       0       0       0
  8838 ;;Total ram usage:       12 bytes
  8839 ;; Hardware stack levels used: 1
  8840 ;; This function calls:
  8841 ;;		Nothing
  8842 ;; This function is called by:
  8843 ;;		_sprintf
  8844 ;; This function uses a non-reentrant model
  8845 ;;
  8846                           
  8847  0000'                    ___fleq:	
  8848                           ;psect for function ___fleq
  8849                           
  8850                           
  8851                           ;incstack = 0
  8852                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  8853  0000' 3000               	movlw	0
  8854  0001' 0500'              	andwf	___fleq@ff1,w
  8855  0002' 0088'              	movwf	??___fleq
  8856  0003' 3000               	movlw	0
  8857  0004' 0501'              	andwf	___fleq@ff1+1,w
  8858  0005' 0089'              	movwf	??___fleq+1
  8859  0006' 3080               	movlw	128
  8860  0007' 0502'              	andwf	___fleq@ff1+2,w
  8861  0008' 008A'              	movwf	??___fleq+2
  8862  0009' 307F               	movlw	127
  8863  000A' 0503'              	andwf	___fleq@ff1+3,w
  8864  000B' 008B'              	movwf	??___fleq+3
  8865  000C' 080B'              	movf	??___fleq+3,w
  8866  000D' 040A'              	iorwf	??___fleq+2,w
  8867  000E' 0409'              	iorwf	??___fleq+1,w
  8868  000F' 0408'              	iorwf	??___fleq,w
  8869  0010' 1D03               	skipz
  8870  0011' 2800'              	goto	l564
  8871  0012' 3000               	movlw	0
  8872  0013' 0083'              	movwf	___fleq@ff1+3
  8873  0014' 3000               	movlw	0
  8874  0015' 0082'              	movwf	___fleq@ff1+2
  8875  0016' 3000               	movlw	0
  8876  0017' 0081'              	movwf	___fleq@ff1+1
  8877  0018' 3000               	movlw	0
  8878  0019' 0080'              	movwf	___fleq@ff1
  8879  001A'                    l564:
  8880  001A' 3000               	movlw	0
  8881  001B' 0504'              	andwf	___fleq@ff2,w
  8882  001C' 0088'              	movwf	??___fleq
  8883  001D' 3000               	movlw	0
  8884  001E' 0505'              	andwf	___fleq@ff2+1,w
  8885  001F' 0089'              	movwf	??___fleq+1
  8886  0020' 3080               	movlw	128
  8887  0021' 0506'              	andwf	___fleq@ff2+2,w
  8888  0022' 008A'              	movwf	??___fleq+2
  8889  0023' 307F               	movlw	127
  8890  0024' 0507'              	andwf	___fleq@ff2+3,w
  8891  0025' 008B'              	movwf	??___fleq+3
  8892  0026' 080B'              	movf	??___fleq+3,w
  8893  0027' 040A'              	iorwf	??___fleq+2,w
  8894  0028' 0409'              	iorwf	??___fleq+1,w
  8895  0029' 0408'              	iorwf	??___fleq,w
  8896  002A' 1D03               	skipz
  8897  002B' 2800'              	goto	l565
  8898  002C' 3000               	movlw	0
  8899  002D' 0087'              	movwf	___fleq@ff2+3
  8900  002E' 3000               	movlw	0
  8901  002F' 0086'              	movwf	___fleq@ff2+2
  8902  0030' 3000               	movlw	0
  8903  0031' 0085'              	movwf	___fleq@ff2+1
  8904  0032' 3000               	movlw	0
  8905  0033' 0084'              	movwf	___fleq@ff2
  8906  0034'                    l565:
  8907  0034' 0807'              	movf	___fleq@ff2+3,w
  8908  0035' 0603'              	xorwf	___fleq@ff1+3,w
  8909  0036' 1D03               	skipz
  8910  0037' 2800'              	goto	u5375
  8911  0038' 0806'              	movf	___fleq@ff2+2,w
  8912  0039' 0602'              	xorwf	___fleq@ff1+2,w
  8913  003A' 1D03               	skipz
  8914  003B' 2800'              	goto	u5375
  8915  003C' 0805'              	movf	___fleq@ff2+1,w
  8916  003D' 0601'              	xorwf	___fleq@ff1+1,w
  8917  003E' 1D03               	skipz
  8918  003F' 2800'              	goto	u5375
  8919  0040' 0804'              	movf	___fleq@ff2,w
  8920  0041' 0600'              	xorwf	___fleq@ff1,w
  8921  0042'                    u5375:
  8922  0042' 1903               	skipnz
  8923  0043' 2800'              	goto	l3311
  8924  0044' 1003               	clrc
  8925  0045' 0008               	return
  8926  0046'                    l3311:
  8927  0046' 1403               	setc
  8928  0047' 0008               	return
  8929  0048'                    __end_of___fleq:
  8930                           
  8931                           	psect	text23
  8932  0000'                    __ptext23:	
  8933 ;; *************** function ___fldiv *****************
  8934 ;; Defined at:
  8935 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\sprcdiv.c"
  8936 ;; Parameters:    Size  Location     Type
  8937 ;;  a               4    0[BANK0 ] unsigned char 
  8938 ;;  b               4    4[BANK0 ] unsigned char 
  8939 ;; Auto vars:     Size  Location     Type
  8940 ;;  grs             4   20[BANK0 ] unsigned long 
  8941 ;;  rem             4   13[BANK0 ] unsigned long 
  8942 ;;  new_exp         2   18[BANK0 ] int 
  8943 ;;  aexp            1   25[BANK0 ] unsigned char 
  8944 ;;  bexp            1   24[BANK0 ] unsigned char 
  8945 ;;  sign            1   17[BANK0 ] unsigned char 
  8946 ;; Return value:  Size  Location     Type
  8947 ;;                  4    0[BANK0 ] unsigned char 
  8948 ;; Registers used:
  8949 ;;		wreg, status,2, status,0, btemp+1
  8950 ;; Tracked objects:
  8951 ;;		On entry : 0/0
  8952 ;;		On exit  : 0/0
  8953 ;;		Unchanged: 0/0
  8954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8955 ;;      Params:         0       8       0       0       0
  8956 ;;      Locals:         0      13       0       0       0
  8957 ;;      Temps:          0       5       0       0       0
  8958 ;;      Totals:         0      26       0       0       0
  8959 ;;Total ram usage:       26 bytes
  8960 ;; Hardware stack levels used: 1
  8961 ;; This function calls:
  8962 ;;		Nothing
  8963 ;; This function is called by:
  8964 ;;		_main
  8965 ;; This function uses a non-reentrant model
  8966 ;;
  8967                           
  8968  0000'                    ___fldiv:	
  8969                           ;psect for function ___fldiv
  8970                           
  8971                           
  8972                           ;incstack = 0
  8973                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  8974  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  8975  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  8976  0002' 0807'              	movf	___fldiv@b+3,w
  8977  0003' 3980               	andlw	128
  8978  0004' 0091'              	movwf	___fldiv@sign
  8979  0005' 0807'              	movf	___fldiv@b+3,w
  8980  0006' 0088'              	movwf	??___fldiv
  8981  0007' 0708'              	addwf	??___fldiv,w
  8982  0008' 0098'              	movwf	___fldiv@bexp
  8983  0009' 1B86'              	btfsc	___fldiv@b+2,7
  8984  000A' 1418'              	bsf	___fldiv@bexp,0
  8985  000B' 0818'              	movf	___fldiv@bexp,w
  8986  000C' 1903               	btfsc	3,2
  8987  000D' 2800'              	goto	l3833
  8988  000E' 0A18'              	incf	___fldiv@bexp,w
  8989  000F' 1D03               	btfss	3,2
  8990  0010' 2800'              	goto	l3829
  8991  0011' 3000               	movlw	0
  8992  0012' 0087'              	movwf	___fldiv@b+3
  8993  0013' 3000               	movlw	0
  8994  0014' 0086'              	movwf	___fldiv@b+2
  8995  0015' 3000               	movlw	0
  8996  0016' 0085'              	movwf	___fldiv@b+1
  8997  0017' 3000               	movlw	0
  8998  0018' 0084'              	movwf	___fldiv@b
  8999  0019'                    l3829:
  9000  0019' 1786'              	bsf	___fldiv@b+2,7
  9001  001A' 0187'              	clrf	___fldiv@b+3
  9002  001B' 2800'              	goto	l3835
  9003  001C'                    l3833:
  9004  001C' 3000               	movlw	0
  9005  001D' 0087'              	movwf	___fldiv@b+3
  9006  001E' 3000               	movlw	0
  9007  001F' 0086'              	movwf	___fldiv@b+2
  9008  0020' 3000               	movlw	0
  9009  0021' 0085'              	movwf	___fldiv@b+1
  9010  0022' 3000               	movlw	0
  9011  0023' 0084'              	movwf	___fldiv@b
  9012  0024'                    l3835:
  9013  0024' 0803'              	movf	___fldiv@a+3,w
  9014  0025' 3980               	andlw	128
  9015  0026' 00FF               	movwf	127
  9016  0027' 087F               	movf	127,w
  9017  0028' 0691'              	xorwf	___fldiv@sign,f
  9018  0029' 0803'              	movf	___fldiv@a+3,w
  9019  002A' 0088'              	movwf	??___fldiv
  9020  002B' 0708'              	addwf	??___fldiv,w
  9021  002C' 0099'              	movwf	___fldiv@aexp
  9022  002D' 1B82'              	btfsc	___fldiv@a+2,7
  9023  002E' 1419'              	bsf	___fldiv@aexp,0
  9024  002F' 0819'              	movf	___fldiv@aexp,w
  9025  0030' 1903               	btfsc	3,2
  9026  0031' 2800'              	goto	l3853
  9027  0032' 0A19'              	incf	___fldiv@aexp,w
  9028  0033' 1D03               	btfss	3,2
  9029  0034' 2800'              	goto	l3849
  9030  0035' 3000               	movlw	0
  9031  0036' 0083'              	movwf	___fldiv@a+3
  9032  0037' 3000               	movlw	0
  9033  0038' 0082'              	movwf	___fldiv@a+2
  9034  0039' 3000               	movlw	0
  9035  003A' 0081'              	movwf	___fldiv@a+1
  9036  003B' 3000               	movlw	0
  9037  003C' 0080'              	movwf	___fldiv@a
  9038  003D'                    l3849:
  9039  003D' 1782'              	bsf	___fldiv@a+2,7
  9040  003E' 0183'              	clrf	___fldiv@a+3
  9041  003F' 2800'              	goto	l761
  9042  0040'                    l3853:
  9043  0040' 3000               	movlw	0
  9044  0041' 0083'              	movwf	___fldiv@a+3
  9045  0042' 3000               	movlw	0
  9046  0043' 0082'              	movwf	___fldiv@a+2
  9047  0044' 3000               	movlw	0
  9048  0045' 0081'              	movwf	___fldiv@a+1
  9049  0046' 3000               	movlw	0
  9050  0047' 0080'              	movwf	___fldiv@a
  9051  0048'                    l761:
  9052  0048' 0803'              	movf	___fldiv@a+3,w
  9053  0049' 0402'              	iorwf	___fldiv@a+2,w
  9054  004A' 0401'              	iorwf	___fldiv@a+1,w
  9055  004B' 0400'              	iorwf	___fldiv@a,w
  9056  004C' 1D03               	skipz
  9057  004D' 2800'              	goto	l3863
  9058  004E' 3000               	movlw	0
  9059  004F' 0087'              	movwf	___fldiv@b+3
  9060  0050' 3000               	movlw	0
  9061  0051' 0086'              	movwf	___fldiv@b+2
  9062  0052' 3000               	movlw	0
  9063  0053' 0085'              	movwf	___fldiv@b+1
  9064  0054' 3000               	movlw	0
  9065  0055' 0084'              	movwf	___fldiv@b
  9066  0056' 3080               	movlw	128
  9067  0057' 0486'              	iorwf	___fldiv@b+2,f
  9068  0058' 307F               	movlw	127
  9069  0059' 0487'              	iorwf	___fldiv@b+3,f
  9070  005A'                    l3857:
  9071  005A' 0811'              	movf	___fldiv@sign,w
  9072  005B' 00FF               	movwf	127
  9073  005C' 087F               	movf	127,w
  9074  005D' 0487'              	iorwf	___fldiv@b+3,f
  9075  005E' 0807'              	movf	___fldiv@b+3,w
  9076  005F' 0083'              	movwf	?___fldiv+3
  9077  0060' 0806'              	movf	___fldiv@b+2,w
  9078  0061' 0082'              	movwf	?___fldiv+2
  9079  0062' 0805'              	movf	___fldiv@b+1,w
  9080  0063' 0081'              	movwf	?___fldiv+1
  9081  0064' 0804'              	movf	___fldiv@b,w
  9082  0065' 0080'              	movwf	?___fldiv
  9083  0066' 0008               	return
  9084  0067'                    l3863:
  9085  0067' 0818'              	movf	___fldiv@bexp,w
  9086  0068' 1D03               	btfss	3,2
  9087  0069' 2800'              	goto	l3869
  9088  006A' 3000               	movlw	0
  9089  006B' 0083'              	movwf	?___fldiv+3
  9090  006C' 3000               	movlw	0
  9091  006D' 0082'              	movwf	?___fldiv+2
  9092  006E' 3000               	movlw	0
  9093  006F' 0081'              	movwf	?___fldiv+1
  9094  0070' 3000               	movlw	0
  9095  0071' 0080'              	movwf	?___fldiv
  9096  0072' 0008               	return
  9097  0073'                    l3869:
  9098  0073' 0818'              	movf	___fldiv@bexp,w
  9099  0074' 0088'              	movwf	??___fldiv
  9100  0075' 0189'              	clrf	??___fldiv+1
  9101  0076' 0809'              	movf	??___fldiv+1,w
  9102  0077' 008B'              	movwf	??___fldiv+3
  9103  0078' 0819'              	movf	___fldiv@aexp,w
  9104  0079' 0208'              	subwf	??___fldiv,w
  9105  007A' 008A'              	movwf	??___fldiv+2
  9106  007B' 1C03               	skipc
  9107  007C' 038B'              	decf	??___fldiv+3,f
  9108  007D' 080A'              	movf	??___fldiv+2,w
  9109  007E' 3E7F               	addlw	127
  9110  007F' 0092'              	movwf	___fldiv@new_exp
  9111  0080' 080B'              	movf	??___fldiv+3,w
  9112  0081' 1803               	skipnc
  9113  0082' 3E01               	addlw	1
  9114  0083' 3E00               	addlw	0
  9115  0084' 0093'              	movwf	___fldiv@new_exp+1
  9116  0085' 0807'              	movf	___fldiv@b+3,w
  9117  0086' 0090'              	movwf	___fldiv@rem+3
  9118  0087' 0806'              	movf	___fldiv@b+2,w
  9119  0088' 008F'              	movwf	___fldiv@rem+2
  9120  0089' 0805'              	movf	___fldiv@b+1,w
  9121  008A' 008E'              	movwf	___fldiv@rem+1
  9122  008B' 0804'              	movf	___fldiv@b,w
  9123  008C' 008D'              	movwf	___fldiv@rem
  9124  008D' 3000               	movlw	0
  9125  008E' 0087'              	movwf	___fldiv@b+3
  9126  008F' 3000               	movlw	0
  9127  0090' 0086'              	movwf	___fldiv@b+2
  9128  0091' 3000               	movlw	0
  9129  0092' 0085'              	movwf	___fldiv@b+1
  9130  0093' 3000               	movlw	0
  9131  0094' 0084'              	movwf	___fldiv@b
  9132  0095' 3000               	movlw	0
  9133  0096' 0097'              	movwf	___fldiv@grs+3
  9134  0097' 3000               	movlw	0
  9135  0098' 0096'              	movwf	___fldiv@grs+2
  9136  0099' 3000               	movlw	0
  9137  009A' 0095'              	movwf	___fldiv@grs+1
  9138  009B' 3000               	movlw	0
  9139  009C' 0094'              	movwf	___fldiv@grs
  9140  009D' 0199'              	clrf	___fldiv@aexp
  9141  009E'                    l3897:
  9142  009E' 301A               	movlw	26
  9143  009F' 0219'              	subwf	___fldiv@aexp,w
  9144  00A0' 1803               	btfsc	3,0
  9145  00A1' 2800'              	goto	l3899
  9146  00A2' 0819'              	movf	___fldiv@aexp,w
  9147  00A3' 1903               	btfsc	3,2
  9148  00A4' 2800'              	goto	l3889
  9149  00A5' 3001               	movlw	1
  9150  00A6' 0088'              	movwf	??___fldiv
  9151  00A7'                    u6495:
  9152  00A7' 1003               	clrc
  9153  00A8' 0D8D'              	rlf	___fldiv@rem,f
  9154  00A9' 0D8E'              	rlf	___fldiv@rem+1,f
  9155  00AA' 0D8F'              	rlf	___fldiv@rem+2,f
  9156  00AB' 0D90'              	rlf	___fldiv@rem+3,f
  9157  00AC' 0B88'              	decfsz	??___fldiv,f
  9158  00AD' 2800'              	goto	u6495
  9159  00AE' 3001               	movlw	1
  9160  00AF' 0088'              	movwf	??___fldiv
  9161  00B0'                    u6505:
  9162  00B0' 1003               	clrc
  9163  00B1' 0D84'              	rlf	___fldiv@b,f
  9164  00B2' 0D85'              	rlf	___fldiv@b+1,f
  9165  00B3' 0D86'              	rlf	___fldiv@b+2,f
  9166  00B4' 0D87'              	rlf	___fldiv@b+3,f
  9167  00B5' 0B88'              	decfsz	??___fldiv,f
  9168  00B6' 2800'              	goto	u6505
  9169  00B7' 1B97'              	btfsc	___fldiv@grs+3,7
  9170  00B8' 1404'              	bsf	___fldiv@b,0
  9171  00B9' 3001               	movlw	1
  9172  00BA' 0088'              	movwf	??___fldiv
  9173  00BB'                    u6525:
  9174  00BB' 1003               	clrc
  9175  00BC' 0D94'              	rlf	___fldiv@grs,f
  9176  00BD' 0D95'              	rlf	___fldiv@grs+1,f
  9177  00BE' 0D96'              	rlf	___fldiv@grs+2,f
  9178  00BF' 0D97'              	rlf	___fldiv@grs+3,f
  9179  00C0' 0B88'              	decfsz	??___fldiv,f
  9180  00C1' 2800'              	goto	u6525
  9181  00C2'                    l3889:
  9182  00C2' 0803'              	movf	___fldiv@a+3,w
  9183  00C3' 0210'              	subwf	___fldiv@rem+3,w
  9184  00C4' 1D03               	skipz
  9185  00C5' 2800'              	goto	u6535
  9186  00C6' 0802'              	movf	___fldiv@a+2,w
  9187  00C7' 020F'              	subwf	___fldiv@rem+2,w
  9188  00C8' 1D03               	skipz
  9189  00C9' 2800'              	goto	u6535
  9190  00CA' 0801'              	movf	___fldiv@a+1,w
  9191  00CB' 020E'              	subwf	___fldiv@rem+1,w
  9192  00CC' 1D03               	skipz
  9193  00CD' 2800'              	goto	u6535
  9194  00CE' 0800'              	movf	___fldiv@a,w
  9195  00CF' 020D'              	subwf	___fldiv@rem,w
  9196  00D0'                    u6535:
  9197  00D0' 1C03               	skipc
  9198  00D1' 2800'              	goto	l3895
  9199  00D2' 1717'              	bsf	___fldiv@grs+3,6
  9200  00D3' 0800'              	movf	___fldiv@a,w
  9201  00D4' 028D'              	subwf	___fldiv@rem,f
  9202  00D5' 0801'              	movf	___fldiv@a+1,w
  9203  00D6' 1C03               	skipc
  9204  00D7' 0F01'              	incfsz	___fldiv@a+1,w
  9205  00D8' 028E'              	subwf	___fldiv@rem+1,f
  9206  00D9' 0802'              	movf	___fldiv@a+2,w
  9207  00DA' 1C03               	skipc
  9208  00DB' 0F02'              	incfsz	___fldiv@a+2,w
  9209  00DC' 028F'              	subwf	___fldiv@rem+2,f
  9210  00DD' 0803'              	movf	___fldiv@a+3,w
  9211  00DE' 1C03               	skipc
  9212  00DF' 0F03'              	incfsz	___fldiv@a+3,w
  9213  00E0' 0290'              	subwf	___fldiv@rem+3,f
  9214  00E1'                    l3895:
  9215  00E1' 3001               	movlw	1
  9216  00E2' 00FF               	movwf	127
  9217  00E3' 087F               	movf	127,w
  9218  00E4' 0799'              	addwf	___fldiv@aexp,f
  9219  00E5' 2800'              	goto	l3897
  9220  00E6'                    l3899:
  9221  00E6' 0810'              	movf	___fldiv@rem+3,w
  9222  00E7' 040F'              	iorwf	___fldiv@rem+2,w
  9223  00E8' 040E'              	iorwf	___fldiv@rem+1,w
  9224  00E9' 040D'              	iorwf	___fldiv@rem,w
  9225  00EA' 1D03               	btfss	3,2
  9226  00EB' 1414'              	bsf	___fldiv@grs,0
  9227  00EC'                    l3913:
  9228  00EC' 1B86'              	btfsc	___fldiv@b+2,7
  9229  00ED' 2800'              	goto	l3915
  9230  00EE' 3001               	movlw	1
  9231  00EF' 0088'              	movwf	??___fldiv
  9232  00F0'                    u6565:
  9233  00F0' 1003               	clrc
  9234  00F1' 0D84'              	rlf	___fldiv@b,f
  9235  00F2' 0D85'              	rlf	___fldiv@b+1,f
  9236  00F3' 0D86'              	rlf	___fldiv@b+2,f
  9237  00F4' 0D87'              	rlf	___fldiv@b+3,f
  9238  00F5' 0B88'              	decfsz	??___fldiv,f
  9239  00F6' 2800'              	goto	u6565
  9240  00F7' 1B97'              	btfsc	___fldiv@grs+3,7
  9241  00F8' 1404'              	bsf	___fldiv@b,0
  9242  00F9' 3001               	movlw	1
  9243  00FA' 0088'              	movwf	??___fldiv
  9244  00FB'                    u6585:
  9245  00FB' 1003               	clrc
  9246  00FC' 0D94'              	rlf	___fldiv@grs,f
  9247  00FD' 0D95'              	rlf	___fldiv@grs+1,f
  9248  00FE' 0D96'              	rlf	___fldiv@grs+2,f
  9249  00FF' 0D97'              	rlf	___fldiv@grs+3,f
  9250  0100' 0B88'              	decfsz	??___fldiv,f
  9251  0101' 2800'              	goto	u6585
  9252  0102' 30FF               	movlw	255
  9253  0103' 0792'              	addwf	___fldiv@new_exp,f
  9254  0104' 1803               	skipnc
  9255  0105' 0A93'              	incf	___fldiv@new_exp+1,f
  9256  0106' 30FF               	movlw	255
  9257  0107' 0793'              	addwf	___fldiv@new_exp+1,f
  9258  0108' 2800'              	goto	l3913
  9259  0109'                    l3915:
  9260  0109' 0199'              	clrf	___fldiv@aexp
  9261  010A' 1F97'              	btfss	___fldiv@grs+3,7
  9262  010B' 2800'              	goto	l3925
  9263  010C' 30FF               	movlw	255
  9264  010D' 0514'              	andwf	___fldiv@grs,w
  9265  010E' 0088'              	movwf	??___fldiv
  9266  010F' 30FF               	movlw	255
  9267  0110' 0515'              	andwf	___fldiv@grs+1,w
  9268  0111' 0089'              	movwf	??___fldiv+1
  9269  0112' 30FF               	movlw	255
  9270  0113' 0516'              	andwf	___fldiv@grs+2,w
  9271  0114' 008A'              	movwf	??___fldiv+2
  9272  0115' 307F               	movlw	127
  9273  0116' 0517'              	andwf	___fldiv@grs+3,w
  9274  0117' 008B'              	movwf	??___fldiv+3
  9275  0118' 080B'              	movf	??___fldiv+3,w
  9276  0119' 040A'              	iorwf	??___fldiv+2,w
  9277  011A' 0409'              	iorwf	??___fldiv+1,w
  9278  011B' 0408'              	iorwf	??___fldiv,w
  9279  011C' 1903               	skipnz
  9280  011D' 1804'              	btfsc	___fldiv@b,0
  9281  011E' 2800'              	goto	l3921
  9282  011F' 2800'              	goto	l3925
  9283  0120'                    l3921:
  9284  0120' 0199'              	clrf	___fldiv@aexp
  9285  0121' 0A99'              	incf	___fldiv@aexp,f
  9286  0122'                    l3925:
  9287  0122' 0819'              	movf	___fldiv@aexp,w
  9288  0123' 1903               	btfsc	3,2
  9289  0124' 2800'              	goto	l3935
  9290  0125' 3001               	movlw	1
  9291  0126' 0784'              	addwf	___fldiv@b,f
  9292  0127' 3000               	movlw	0
  9293  0128' 1803               	skipnc
  9294  0129' 3001               	movlw	1
  9295  012A' 0785'              	addwf	___fldiv@b+1,f
  9296  012B' 3000               	movlw	0
  9297  012C' 1803               	skipnc
  9298  012D' 3001               	movlw	1
  9299  012E' 0786'              	addwf	___fldiv@b+2,f
  9300  012F' 3000               	movlw	0
  9301  0130' 1803               	skipnc
  9302  0131' 3001               	movlw	1
  9303  0132' 0787'              	addwf	___fldiv@b+3,f
  9304  0133' 1C07'              	btfss	___fldiv@b+3,0
  9305  0134' 2800'              	goto	l3935
  9306  0135' 0804'              	movf	___fldiv@b,w
  9307  0136' 0088'              	movwf	??___fldiv
  9308  0137' 0805'              	movf	___fldiv@b+1,w
  9309  0138' 0089'              	movwf	??___fldiv+1
  9310  0139' 0806'              	movf	___fldiv@b+2,w
  9311  013A' 008A'              	movwf	??___fldiv+2
  9312  013B' 0807'              	movf	___fldiv@b+3,w
  9313  013C' 008B'              	movwf	??___fldiv+3
  9314  013D' 3001               	movlw	1
  9315  013E' 008C'              	movwf	??___fldiv+4
  9316  013F'                    u6655:
  9317  013F' 0D0B'              	rlf	??___fldiv+3,w
  9318  0140' 0C8B'              	rrf	??___fldiv+3,f
  9319  0141' 0C8A'              	rrf	??___fldiv+2,f
  9320  0142' 0C89'              	rrf	??___fldiv+1,f
  9321  0143' 0C88'              	rrf	??___fldiv,f
  9322  0144' 0B8C'              	decfsz	??___fldiv+4,f
  9323  0145' 2800'              	goto	u6655
  9324  0146' 080B'              	movf	??___fldiv+3,w
  9325  0147' 0087'              	movwf	___fldiv@b+3
  9326  0148' 080A'              	movf	??___fldiv+2,w
  9327  0149' 0086'              	movwf	___fldiv@b+2
  9328  014A' 0809'              	movf	??___fldiv+1,w
  9329  014B' 0085'              	movwf	___fldiv@b+1
  9330  014C' 0808'              	movf	??___fldiv,w
  9331  014D' 0084'              	movwf	___fldiv@b
  9332  014E' 3001               	movlw	1
  9333  014F' 0792'              	addwf	___fldiv@new_exp,f
  9334  0150' 1803               	skipnc
  9335  0151' 0A93'              	incf	___fldiv@new_exp+1,f
  9336  0152' 3000               	movlw	0
  9337  0153' 0793'              	addwf	___fldiv@new_exp+1,f
  9338  0154'                    l3935:
  9339  0154' 0813'              	movf	___fldiv@new_exp+1,w
  9340  0155' 3A80               	xorlw	128
  9341  0156' 00FF               	movwf	127
  9342  0157' 3080               	movlw	128
  9343  0158' 027F               	subwf	127,w
  9344  0159' 1D03               	skipz
  9345  015A' 2800'              	goto	u6665
  9346  015B' 30FF               	movlw	255
  9347  015C' 0212'              	subwf	___fldiv@new_exp,w
  9348  015D'                    u6665:
  9349  015D' 1C03               	skipc
  9350  015E' 2800'              	goto	l3939
  9351  015F' 30FF               	movlw	255
  9352  0160' 1283               	bcf	3,5	;RP0=0, select bank0
  9353  0161' 1303               	bcf	3,6	;RP1=0, select bank0
  9354  0162' 0092'              	movwf	___fldiv@new_exp
  9355  0163' 3000               	movlw	0
  9356  0164' 0093'              	movwf	___fldiv@new_exp+1
  9357  0165' 3000               	movlw	0
  9358  0166' 0087'              	movwf	___fldiv@b+3
  9359  0167' 3000               	movlw	0
  9360  0168' 0086'              	movwf	___fldiv@b+2
  9361  0169' 3000               	movlw	0
  9362  016A' 0085'              	movwf	___fldiv@b+1
  9363  016B' 3000               	movlw	0
  9364  016C' 0084'              	movwf	___fldiv@b
  9365  016D'                    l3939:
  9366  016D' 1283               	bcf	3,5	;RP0=0, select bank0
  9367  016E' 1303               	bcf	3,6	;RP1=0, select bank0
  9368  016F' 0813'              	movf	___fldiv@new_exp+1,w
  9369  0170' 3A80               	xorlw	128
  9370  0171' 00FF               	movwf	127
  9371  0172' 3080               	movlw	128
  9372  0173' 027F               	subwf	127,w
  9373  0174' 1D03               	skipz
  9374  0175' 2800'              	goto	u6675
  9375  0176' 3001               	movlw	1
  9376  0177' 0212'              	subwf	___fldiv@new_exp,w
  9377  0178'                    u6675:
  9378  0178' 1803               	skipnc
  9379  0179' 2800'              	goto	l783
  9380  017A' 1283               	bcf	3,5	;RP0=0, select bank0
  9381  017B' 1303               	bcf	3,6	;RP1=0, select bank0
  9382  017C' 0192'              	clrf	___fldiv@new_exp
  9383  017D' 0193'              	clrf	___fldiv@new_exp+1
  9384  017E' 3000               	movlw	0
  9385  017F' 0087'              	movwf	___fldiv@b+3
  9386  0180' 3000               	movlw	0
  9387  0181' 0086'              	movwf	___fldiv@b+2
  9388  0182' 3000               	movlw	0
  9389  0183' 0085'              	movwf	___fldiv@b+1
  9390  0184' 3000               	movlw	0
  9391  0185' 0084'              	movwf	___fldiv@b
  9392  0186' 0191'              	clrf	___fldiv@sign
  9393  0187'                    l783:
  9394  0187' 1283               	bcf	3,5	;RP0=0, select bank0
  9395  0188' 1303               	bcf	3,6	;RP1=0, select bank0
  9396  0189' 0812'              	movf	___fldiv@new_exp,w
  9397  018A' 0098'              	movwf	___fldiv@bexp
  9398  018B' 1C18'              	btfss	___fldiv@bexp,0
  9399  018C' 2800'              	goto	l3951
  9400  018D' 1786'              	bsf	___fldiv@b+2,7
  9401  018E' 2800'              	goto	l3953
  9402  018F'                    l3951:
  9403  018F' 307F               	movlw	127
  9404  0190' 00FF               	movwf	127
  9405  0191' 087F               	movf	127,w
  9406  0192' 0586'              	andwf	___fldiv@b+2,f
  9407  0193'                    l3953:
  9408  0193' 0818'              	movf	___fldiv@bexp,w
  9409  0194' 0088'              	movwf	??___fldiv
  9410  0195' 1003               	clrc
  9411  0196' 0C08'              	rrf	??___fldiv,w
  9412  0197' 0087'              	movwf	___fldiv@b+3
  9413  0198' 2800'              	goto	l3857
  9414  0199'                    __end_of___fldiv:
  9415                           
  9416                           	psect	text24
  9417  0000'                    __ptext24:	
  9418 ;; *************** function _UART_Write_Text *****************
  9419 ;; Defined at:
  9420 ;;		line 18 in file "uart_lib.c"
  9421 ;; Parameters:    Size  Location     Type
  9422 ;;  text            2    1[COMMON] PTR unsigned char 
  9423 ;;		 -> STR_21(5), main@combinedText_160(20), STR_17(7), STR_15(5), 
  9424 ;;		 -> main@combinedText(20), STR_11(8), STR_9(5), 
  9425 ;; Auto vars:     Size  Location     Type
  9426 ;;  i               2    6[COMMON] int 
  9427 ;; Return value:  Size  Location     Type
  9428 ;;                  1    wreg      void 
  9429 ;; Registers used:
  9430 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9431 ;; Tracked objects:
  9432 ;;		On entry : 0/0
  9433 ;;		On exit  : 0/0
  9434 ;;		Unchanged: 0/0
  9435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9436 ;;      Params:         2       0       0       0       0
  9437 ;;      Locals:         2       0       0       0       0
  9438 ;;      Temps:          3       0       0       0       0
  9439 ;;      Totals:         7       0       0       0       0
  9440 ;;Total ram usage:        7 bytes
  9441 ;; Hardware stack levels used: 1
  9442 ;; Hardware stack levels required when called: 1
  9443 ;; This function calls:
  9444 ;;		_UART_Write
  9445 ;; This function is called by:
  9446 ;;		_main
  9447 ;; This function uses a non-reentrant model
  9448 ;;
  9449                           
  9450  0000'                    _UART_Write_Text:	
  9451                           ;psect for function _UART_Write_Text
  9452                           
  9453                           
  9454                           ;uart_lib.c: 18: void UART_Write_Text(char *text);uart_lib.c: 19: {;uart_lib.c: 20:   in
      +                          t i;;uart_lib.c: 21:   for(i=0;text[i]!='\0';i++)
  9455                           
  9456                           ;incstack = 0
  9457                           ; Regs used in _UART_Write_Text: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9458  0000' 0186'              	clrf	UART_Write_Text@i
  9459  0001' 0187'              	clrf	UART_Write_Text@i+1
  9460  0002'                    l3813:
  9461  0002' 0806'              	movf	UART_Write_Text@i,w
  9462  0003' 0701'              	addwf	UART_Write_Text@text,w
  9463  0004' 0084'              	movwf	??_UART_Write_Text+1
  9464  0005' 0802'              	movf	UART_Write_Text@text+1,w
  9465  0006' 0083'              	movwf	??_UART_Write_Text
  9466  0007' 1803               	skipnc
  9467  0008' 0A83'              	incf	??_UART_Write_Text,f
  9468  0009' 1B86'              	btfsc	UART_Write_Text@i,7
  9469  000A' 0383'              	decf	??_UART_Write_Text,f
  9470  000B' 0803'              	movf	??_UART_Write_Text,w
  9471  000C' 0085'              	movwf	??_UART_Write_Text+2
  9472  000D' 0805'              	movf	??_UART_Write_Text+2,w
  9473  000E' 1283               	bcf	3,5	;RP0=0, select bank0
  9474  000F' 1303               	bcf	3,6	;RP1=0, select bank0
  9475  0010' 00FF               	movwf	127
  9476  0011' 0804'              	movf	??_UART_Write_Text+1,w
  9477  0012' 0084               	movwf	4
  9478  0013' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  9479  0018' 3A00               	xorlw	0
  9480  0019' 1903               	btfsc	3,2
  9481  001A' 0008               	return
  9482                           
  9483                           ;uart_lib.c: 22:     UART_Write(text[i]);
  9484  001B' 0806'              	movf	UART_Write_Text@i,w
  9485  001C' 0701'              	addwf	UART_Write_Text@text,w
  9486  001D' 0084'              	movwf	??_UART_Write_Text+1
  9487  001E' 0802'              	movf	UART_Write_Text@text+1,w
  9488  001F' 0083'              	movwf	??_UART_Write_Text
  9489  0020' 1803               	skipnc
  9490  0021' 0A83'              	incf	??_UART_Write_Text,f
  9491  0022' 1B86'              	btfsc	UART_Write_Text@i,7
  9492  0023' 0383'              	decf	??_UART_Write_Text,f
  9493  0024' 0803'              	movf	??_UART_Write_Text,w
  9494  0025' 0085'              	movwf	??_UART_Write_Text+2
  9495  0026' 0805'              	movf	??_UART_Write_Text+2,w
  9496  0027' 1283               	bcf	3,5	;RP0=0, select bank0
  9497  0028' 1303               	bcf	3,6	;RP1=0, select bank0
  9498  0029' 00FF               	movwf	127
  9499  002A' 0804'              	movf	??_UART_Write_Text+1,w
  9500  002B' 0084               	movwf	4
  9501  002C' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  9502  0031' 120A' 118A' 2000' 120A' 118A' 	fcall	_UART_Write
  9503  0036' 3001               	movlw	1
  9504  0037' 0786'              	addwf	UART_Write_Text@i,f
  9505  0038' 1803               	skipnc
  9506  0039' 0A87'              	incf	UART_Write_Text@i+1,f
  9507  003A' 3000               	movlw	0
  9508  003B' 0787'              	addwf	UART_Write_Text@i+1,f
  9509  003C' 2800'              	goto	l3813
  9510  003D'                    __end_of_UART_Write_Text:
  9511                           
  9512                           	psect	text25
  9513  0000'                    __ptext25:	
  9514 ;; *************** function _UART_Write *****************
  9515 ;; Defined at:
  9516 ;;		line 12 in file "uart_lib.c"
  9517 ;; Parameters:    Size  Location     Type
  9518 ;;  data            1    wreg     unsigned char 
  9519 ;; Auto vars:     Size  Location     Type
  9520 ;;  data            1    0[COMMON] unsigned char 
  9521 ;; Return value:  Size  Location     Type
  9522 ;;                  1    wreg      void 
  9523 ;; Registers used:
  9524 ;;		wreg
  9525 ;; Tracked objects:
  9526 ;;		On entry : 0/0
  9527 ;;		On exit  : 0/0
  9528 ;;		Unchanged: 0/0
  9529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9530 ;;      Params:         0       0       0       0       0
  9531 ;;      Locals:         1       0       0       0       0
  9532 ;;      Temps:          0       0       0       0       0
  9533 ;;      Totals:         1       0       0       0       0
  9534 ;;Total ram usage:        1 bytes
  9535 ;; Hardware stack levels used: 1
  9536 ;; This function calls:
  9537 ;;		Nothing
  9538 ;; This function is called by:
  9539 ;;		_UART_Write_Text
  9540 ;; This function uses a non-reentrant model
  9541 ;;
  9542                           
  9543  0000'                    _UART_Write:	
  9544                           ;psect for function _UART_Write
  9545                           
  9546                           
  9547                           ;incstack = 0
  9548                           ; Regs used in _UART_Write: [wreg]
  9549                           ;UART_Write@data stored from wreg
  9550  0000' 0080'              	movwf	UART_Write@data
  9551  0001'                    l161:	
  9552                           ;uart_lib.c: 12: void UART_Write(char data);uart_lib.c: 13: {;uart_lib.c: 14:   while(!T
      +                          RMT);
  9553                           
  9554  0001' 1683               	bsf	3,5	;RP0=1, select bank1
  9555  0002' 1303               	bcf	3,6	;RP1=0, select bank1
  9556  0003' 1C98               	btfss	24,1	;volatile
  9557  0004' 2800'              	goto	l161
  9558                           
  9559                           ;uart_lib.c: 15:   TXREG = data;
  9560  0005' 0800'              	movf	UART_Write@data,w
  9561  0006' 1283               	bcf	3,5	;RP0=0, select bank0
  9562  0007' 1303               	bcf	3,6	;RP1=0, select bank0
  9563  0008' 0099               	movwf	25	;volatile
  9564  0009' 0008               	return
  9565  000A'                    __end_of_UART_Write:
  9566                           
  9567                           	psect	text26
  9568  0000'                    __ptext26:	
  9569 ;; *************** function _UART_Initialize *****************
  9570 ;; Defined at:
  9571 ;;		line 4 in file "uart_lib.c"
  9572 ;; Parameters:    Size  Location     Type
  9573 ;;		None
  9574 ;; Auto vars:     Size  Location     Type
  9575 ;;		None
  9576 ;; Return value:  Size  Location     Type
  9577 ;;                  1    wreg      void 
  9578 ;; Registers used:
  9579 ;;		wreg, status,2
  9580 ;; Tracked objects:
  9581 ;;		On entry : 0/0
  9582 ;;		On exit  : 0/0
  9583 ;;		Unchanged: 0/0
  9584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9585 ;;      Params:         0       0       0       0       0
  9586 ;;      Locals:         0       0       0       0       0
  9587 ;;      Temps:          0       0       0       0       0
  9588 ;;      Totals:         0       0       0       0       0
  9589 ;;Total ram usage:        0 bytes
  9590 ;; Hardware stack levels used: 1
  9591 ;; This function calls:
  9592 ;;		Nothing
  9593 ;; This function is called by:
  9594 ;;		_main
  9595 ;; This function uses a non-reentrant model
  9596 ;;
  9597                           
  9598  0000'                    _UART_Initialize:	
  9599                           ;psect for function _UART_Initialize
  9600                           
  9601                           
  9602                           ;uart_lib.c: 6:     TXSTA=0b00100100;
  9603                           
  9604                           ;incstack = 0
  9605                           ; Regs used in _UART_Initialize: [wreg+status,2]
  9606  0000' 3024               	movlw	36
  9607  0001' 1683               	bsf	3,5	;RP0=1, select bank1
  9608  0002' 1303               	bcf	3,6	;RP1=0, select bank1
  9609  0003' 0098               	movwf	24	;volatile
  9610                           
  9611                           ;uart_lib.c: 7:     RCSTA=0b10010000;
  9612  0004' 3090               	movlw	144
  9613  0005' 1283               	bcf	3,5	;RP0=0, select bank0
  9614  0006' 1303               	bcf	3,6	;RP1=0, select bank0
  9615  0007' 0098               	movwf	24	;volatile
  9616                           
  9617                           ;uart_lib.c: 8:     SPBRG=25;
  9618  0008' 3019               	movlw	25
  9619  0009' 1683               	bsf	3,5	;RP0=1, select bank1
  9620  000A' 1303               	bcf	3,6	;RP1=0, select bank1
  9621  000B' 0099               	movwf	25	;volatile
  9622                           
  9623                           ;uart_lib.c: 9:     TXREG=0x00;
  9624  000C' 1283               	bcf	3,5	;RP0=0, select bank0
  9625  000D' 1303               	bcf	3,6	;RP1=0, select bank0
  9626  000E' 0199               	clrf	25	;volatile
  9627  000F' 0008               	return
  9628  0010'                    __end_of_UART_Initialize:
  9629                           
  9630                           	psect	text27
  9631  0000'                    __ptext27:	
  9632 ;; *************** function _Lcd_Write_String *****************
  9633 ;; Defined at:
  9634 ;;		line 96 in file "./lcd.h"
  9635 ;; Parameters:    Size  Location     Type
  9636 ;;  a               2    5[COMMON] PTR unsigned char 
  9637 ;;		 -> STR_24(15), STR_23(15), STR_22(15), STR_20(5), 
  9638 ;;		 -> STR_18(5), STR_16(9), STR_14(10), STR_12(5), 
  9639 ;;		 -> STR_10(9), STR_8(10), main@adcString2(4), STR_6(8), 
  9640 ;;		 -> main@adcString1(4), STR_4(7), STR_3(3), STR_2(8), 
  9641 ;;		 -> STR_1(13), 
  9642 ;; Auto vars:     Size  Location     Type
  9643 ;;  i               2   10[COMMON] int 
  9644 ;; Return value:  Size  Location     Type
  9645 ;;                  1    wreg      void 
  9646 ;; Registers used:
  9647 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9648 ;; Tracked objects:
  9649 ;;		On entry : 0/0
  9650 ;;		On exit  : 0/0
  9651 ;;		Unchanged: 0/0
  9652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9653 ;;      Params:         2       0       0       0       0
  9654 ;;      Locals:         2       0       0       0       0
  9655 ;;      Temps:          3       0       0       0       0
  9656 ;;      Totals:         7       0       0       0       0
  9657 ;;Total ram usage:        7 bytes
  9658 ;; Hardware stack levels used: 1
  9659 ;; Hardware stack levels required when called: 2
  9660 ;; This function calls:
  9661 ;;		_Lcd_Write_Char
  9662 ;; This function is called by:
  9663 ;;		_main
  9664 ;; This function uses a non-reentrant model
  9665 ;;
  9666                           
  9667  0000'                    _Lcd_Write_String:	
  9668                           ;psect for function _Lcd_Write_String
  9669                           
  9670                           
  9671                           ;./lcd.h: 96: void Lcd_Write_String(char *a);./lcd.h: 97: {;./lcd.h: 98:  int i;;./lcd.h
      +                          : 99:  for(i=0;a[i]!='\0';i++)
  9672                           
  9673                           ;incstack = 0
  9674                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9675  0000' 018A'              	clrf	Lcd_Write_String@i
  9676  0001' 018B'              	clrf	Lcd_Write_String@i+1
  9677  0002'                    l3495:
  9678  0002' 080A'              	movf	Lcd_Write_String@i,w
  9679  0003' 0705'              	addwf	Lcd_Write_String@a,w
  9680  0004' 0088'              	movwf	??_Lcd_Write_String+1
  9681  0005' 0806'              	movf	Lcd_Write_String@a+1,w
  9682  0006' 0087'              	movwf	??_Lcd_Write_String
  9683  0007' 1803               	skipnc
  9684  0008' 0A87'              	incf	??_Lcd_Write_String,f
  9685  0009' 1B8A'              	btfsc	Lcd_Write_String@i,7
  9686  000A' 0387'              	decf	??_Lcd_Write_String,f
  9687  000B' 0807'              	movf	??_Lcd_Write_String,w
  9688  000C' 0089'              	movwf	??_Lcd_Write_String+2
  9689  000D' 0809'              	movf	??_Lcd_Write_String+2,w
  9690  000E' 1283               	bcf	3,5	;RP0=0, select bank0
  9691  000F' 1303               	bcf	3,6	;RP1=0, select bank0
  9692  0010' 00FF               	movwf	127
  9693  0011' 0808'              	movf	??_Lcd_Write_String+1,w
  9694  0012' 0084               	movwf	4
  9695  0013' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  9696  0018' 3A00               	xorlw	0
  9697  0019' 1903               	btfsc	3,2
  9698  001A' 0008               	return
  9699                           
  9700                           ;./lcd.h: 100:     Lcd_Write_Char(a[i]);
  9701  001B' 080A'              	movf	Lcd_Write_String@i,w
  9702  001C' 0705'              	addwf	Lcd_Write_String@a,w
  9703  001D' 0088'              	movwf	??_Lcd_Write_String+1
  9704  001E' 0806'              	movf	Lcd_Write_String@a+1,w
  9705  001F' 0087'              	movwf	??_Lcd_Write_String
  9706  0020' 1803               	skipnc
  9707  0021' 0A87'              	incf	??_Lcd_Write_String,f
  9708  0022' 1B8A'              	btfsc	Lcd_Write_String@i,7
  9709  0023' 0387'              	decf	??_Lcd_Write_String,f
  9710  0024' 0807'              	movf	??_Lcd_Write_String,w
  9711  0025' 0089'              	movwf	??_Lcd_Write_String+2
  9712  0026' 0809'              	movf	??_Lcd_Write_String+2,w
  9713  0027' 1283               	bcf	3,5	;RP0=0, select bank0
  9714  0028' 1303               	bcf	3,6	;RP1=0, select bank0
  9715  0029' 00FF               	movwf	127
  9716  002A' 0808'              	movf	??_Lcd_Write_String+1,w
  9717  002B' 0084               	movwf	4
  9718  002C' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  9719  0031' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Write_Char
  9720  0036' 3001               	movlw	1
  9721  0037' 078A'              	addwf	Lcd_Write_String@i,f
  9722  0038' 1803               	skipnc
  9723  0039' 0A8B'              	incf	Lcd_Write_String@i+1,f
  9724  003A' 3000               	movlw	0
  9725  003B' 078B'              	addwf	Lcd_Write_String@i+1,f
  9726  003C' 2800'              	goto	l3495
  9727  003D'                    __end_of_Lcd_Write_String:
  9728                           
  9729                           	psect	text28
  9730  0000'                    __ptext28:	
  9731 ;; *************** function _Lcd_Write_Char *****************
  9732 ;; Defined at:
  9733 ;;		line 80 in file "./lcd.h"
  9734 ;; Parameters:    Size  Location     Type
  9735 ;;  a               1    wreg     unsigned char 
  9736 ;; Auto vars:     Size  Location     Type
  9737 ;;  a               1    4[COMMON] unsigned char 
  9738 ;;  y               1    3[COMMON] unsigned char 
  9739 ;;  temp            1    2[COMMON] unsigned char 
  9740 ;; Return value:  Size  Location     Type
  9741 ;;                  1    wreg      void 
  9742 ;; Registers used:
  9743 ;;		wreg, status,2, status,0, pclath, cstack
  9744 ;; Tracked objects:
  9745 ;;		On entry : 0/0
  9746 ;;		On exit  : 0/0
  9747 ;;		Unchanged: 0/0
  9748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9749 ;;      Params:         0       0       0       0       0
  9750 ;;      Locals:         3       0       0       0       0
  9751 ;;      Temps:          1       0       0       0       0
  9752 ;;      Totals:         4       0       0       0       0
  9753 ;;Total ram usage:        4 bytes
  9754 ;; Hardware stack levels used: 1
  9755 ;; Hardware stack levels required when called: 1
  9756 ;; This function calls:
  9757 ;;		_Lcd_Port
  9758 ;; This function is called by:
  9759 ;;		_Lcd_Write_String
  9760 ;; This function uses a non-reentrant model
  9761 ;;
  9762                           
  9763  0000'                    _Lcd_Write_Char:	
  9764                           ;psect for function _Lcd_Write_Char
  9765                           
  9766                           
  9767                           ;incstack = 0
  9768                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  9769                           ;Lcd_Write_Char@a stored from wreg
  9770  0000' 0084'              	movwf	Lcd_Write_Char@a
  9771                           
  9772                           ;./lcd.h: 80: void Lcd_Write_Char(char a);./lcd.h: 81: {;./lcd.h: 82:    char temp,y;;./
      +                          lcd.h: 83:    temp = a&0x0F;
  9773  0001' 0804'              	movf	Lcd_Write_Char@a,w
  9774  0002' 390F               	andlw	15
  9775  0003' 0082'              	movwf	Lcd_Write_Char@temp
  9776                           
  9777                           ;./lcd.h: 84:    y = a&0xF0;
  9778  0004' 0804'              	movf	Lcd_Write_Char@a,w
  9779  0005' 39F0               	andlw	240
  9780  0006' 0083'              	movwf	Lcd_Write_Char@y
  9781                           
  9782                           ;./lcd.h: 85:    RB5 = 1;
  9783  0007' 1283               	bcf	3,5	;RP0=0, select bank0
  9784  0008' 1303               	bcf	3,6	;RP1=0, select bank0
  9785  0009' 1686               	bsf	6,5	;volatile
  9786                           
  9787                           ;./lcd.h: 86:    Lcd_Port(y>>4);
  9788  000A' 0803'              	movf	Lcd_Write_Char@y,w
  9789  000B' 0081'              	movwf	??_Lcd_Write_Char
  9790  000C' 3004               	movlw	4
  9791  000D'                    u4695:
  9792  000D' 1003               	clrc
  9793  000E' 0C81'              	rrf	??_Lcd_Write_Char,f
  9794  000F' 3EFF               	addlw	-1
  9795  0010' 1D03               	skipz
  9796  0011' 2800'              	goto	u4695
  9797  0012' 0801'              	movf	??_Lcd_Write_Char,w
  9798  0013' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Port
  9799                           
  9800                           ;./lcd.h: 87:    RB4 = 1;
  9801  0018' 1283               	bcf	3,5	;RP0=0, select bank0
  9802  0019' 1303               	bcf	3,6	;RP1=0, select bank0
  9803  001A' 1606               	bsf	6,4	;volatile
  9804                           
  9805                           ;./lcd.h: 88:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  9806  001B' 300D               	movlw	13
  9807  001C' 0081'              	movwf	??_Lcd_Write_Char
  9808  001D'                    u6967:
  9809  001D' 0B81'              	decfsz	??_Lcd_Write_Char,f
  9810  001E' 2800'              	goto	u6967
  9811                           
  9812                           ;./lcd.h: 89:    RB4 = 0;
  9813  001F' 1283               	bcf	3,5	;RP0=0, select bank0
  9814  0020' 1303               	bcf	3,6	;RP1=0, select bank0
  9815  0021' 1206               	bcf	6,4	;volatile
  9816                           
  9817                           ;./lcd.h: 90:    Lcd_Port(temp);
  9818  0022' 0802'              	movf	Lcd_Write_Char@temp,w
  9819  0023' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Port
  9820                           
  9821                           ;./lcd.h: 91:    RB4 = 1;
  9822  0028' 1283               	bcf	3,5	;RP0=0, select bank0
  9823  0029' 1303               	bcf	3,6	;RP1=0, select bank0
  9824  002A' 1606               	bsf	6,4	;volatile
  9825                           
  9826                           ;./lcd.h: 92:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  9827  002B' 300D               	movlw	13
  9828  002C' 0081'              	movwf	??_Lcd_Write_Char
  9829  002D'                    u6977:
  9830  002D' 0B81'              	decfsz	??_Lcd_Write_Char,f
  9831  002E' 2800'              	goto	u6977
  9832                           
  9833                           ;./lcd.h: 93:    RB4 = 0;
  9834  002F' 1283               	bcf	3,5	;RP0=0, select bank0
  9835  0030' 1303               	bcf	3,6	;RP1=0, select bank0
  9836  0031' 1206               	bcf	6,4	;volatile
  9837  0032' 0008               	return
  9838  0033'                    __end_of_Lcd_Write_Char:
  9839                           
  9840                           	psect	text29
  9841  0000'                    __ptext29:	
  9842 ;; *************** function _Lcd_Set_Cursor *****************
  9843 ;; Defined at:
  9844 ;;		line 40 in file "./lcd.h"
  9845 ;; Parameters:    Size  Location     Type
  9846 ;;  a               1    wreg     unsigned char 
  9847 ;;  b               1    4[COMMON] unsigned char 
  9848 ;; Auto vars:     Size  Location     Type
  9849 ;;  a               1    6[COMMON] unsigned char 
  9850 ;;  temp            1    9[COMMON] unsigned char 
  9851 ;;  y               1    8[COMMON] unsigned char 
  9852 ;;  z               1    7[COMMON] unsigned char 
  9853 ;; Return value:  Size  Location     Type
  9854 ;;                  1    wreg      void 
  9855 ;; Registers used:
  9856 ;;		wreg, status,2, status,0, pclath, cstack
  9857 ;; Tracked objects:
  9858 ;;		On entry : 0/0
  9859 ;;		On exit  : 0/0
  9860 ;;		Unchanged: 0/0
  9861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9862 ;;      Params:         1       0       0       0       0
  9863 ;;      Locals:         4       0       0       0       0
  9864 ;;      Temps:          1       0       0       0       0
  9865 ;;      Totals:         6       0       0       0       0
  9866 ;;Total ram usage:        6 bytes
  9867 ;; Hardware stack levels used: 1
  9868 ;; Hardware stack levels required when called: 2
  9869 ;; This function calls:
  9870 ;;		_Lcd_Cmd
  9871 ;; This function is called by:
  9872 ;;		_main
  9873 ;; This function uses a non-reentrant model
  9874 ;;
  9875                           
  9876  0000'                    _Lcd_Set_Cursor:	
  9877                           ;psect for function _Lcd_Set_Cursor
  9878                           
  9879                           
  9880                           ;incstack = 0
  9881                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  9882                           ;Lcd_Set_Cursor@a stored from wreg
  9883  0000' 0086'              	movwf	Lcd_Set_Cursor@a
  9884                           
  9885                           ;./lcd.h: 40: void Lcd_Set_Cursor(char a, char b);./lcd.h: 41: {;./lcd.h: 42:  char temp
      +                          ,z,y;;./lcd.h: 43:  if(a == 1)
  9886  0001' 0306'              	decf	Lcd_Set_Cursor@a,w
  9887  0002' 1D03               	btfss	3,2
  9888  0003' 2800'              	goto	l3469
  9889                           
  9890                           ;./lcd.h: 44:  {;./lcd.h: 45:    temp = 0x80 + b - 1;
  9891  0004' 0804'              	movf	Lcd_Set_Cursor@b,w
  9892  0005' 3E7F               	addlw	127
  9893  0006' 0089'              	movwf	Lcd_Set_Cursor@temp
  9894                           
  9895                           ;./lcd.h: 46:   z = temp>>4;
  9896  0007' 0809'              	movf	Lcd_Set_Cursor@temp,w
  9897  0008' 0085'              	movwf	??_Lcd_Set_Cursor
  9898  0009' 3004               	movlw	4
  9899  000A'                    u5775:
  9900  000A' 1003               	clrc
  9901  000B' 0C85'              	rrf	??_Lcd_Set_Cursor,f
  9902  000C' 3EFF               	addlw	-1
  9903  000D' 1D03               	skipz
  9904  000E' 2800'              	goto	u5775
  9905  000F' 0805'              	movf	??_Lcd_Set_Cursor,w
  9906  0010' 0087'              	movwf	Lcd_Set_Cursor@z
  9907                           
  9908                           ;./lcd.h: 47:   y = temp & 0x0F;
  9909  0011' 0809'              	movf	Lcd_Set_Cursor@temp,w
  9910  0012' 390F               	andlw	15
  9911  0013' 0088'              	movwf	Lcd_Set_Cursor@y
  9912                           
  9913                           ;./lcd.h: 48:   Lcd_Cmd(z);
  9914  0014' 0807'              	movf	Lcd_Set_Cursor@z,w
  9915  0015' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Cmd
  9916                           
  9917                           ;./lcd.h: 49:   Lcd_Cmd(y);
  9918  001A' 0808'              	movf	Lcd_Set_Cursor@y,w
  9919  001B' 120A' 118A' 2000'  	fcall	_Lcd_Cmd
  9920                           
  9921                           ;./lcd.h: 50:  }
  9922  001E' 0008               	return
  9923  001F'                    l3469:
  9924  001F' 3002               	movlw	2
  9925  0020' 0606'              	xorwf	Lcd_Set_Cursor@a,w
  9926  0021' 1D03               	btfss	3,2
  9927  0022' 0008               	return
  9928                           
  9929                           ;./lcd.h: 52:  {;./lcd.h: 53:   temp = 0xC0 + b - 1;
  9930  0023' 0804'              	movf	Lcd_Set_Cursor@b,w
  9931  0024' 3EBF               	addlw	191
  9932  0025' 0089'              	movwf	Lcd_Set_Cursor@temp
  9933                           
  9934                           ;./lcd.h: 54:   z = temp>>4;
  9935  0026' 0809'              	movf	Lcd_Set_Cursor@temp,w
  9936  0027' 0085'              	movwf	??_Lcd_Set_Cursor
  9937  0028' 3004               	movlw	4
  9938  0029'                    u5795:
  9939  0029' 1003               	clrc
  9940  002A' 0C85'              	rrf	??_Lcd_Set_Cursor,f
  9941  002B' 3EFF               	addlw	-1
  9942  002C' 1D03               	skipz
  9943  002D' 2800'              	goto	u5795
  9944  002E' 0805'              	movf	??_Lcd_Set_Cursor,w
  9945  002F' 0087'              	movwf	Lcd_Set_Cursor@z
  9946                           
  9947                           ;./lcd.h: 55:   y = temp & 0x0F;
  9948  0030' 0809'              	movf	Lcd_Set_Cursor@temp,w
  9949  0031' 390F               	andlw	15
  9950  0032' 0088'              	movwf	Lcd_Set_Cursor@y
  9951                           
  9952                           ;./lcd.h: 56:   Lcd_Cmd(z);
  9953  0033' 0807'              	movf	Lcd_Set_Cursor@z,w
  9954  0034' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Cmd
  9955                           
  9956                           ;./lcd.h: 57:   Lcd_Cmd(y);
  9957  0039' 0808'              	movf	Lcd_Set_Cursor@y,w
  9958  003A' 120A' 118A' 2000'  	fcall	_Lcd_Cmd
  9959  003D' 0008               	return
  9960  003E'                    __end_of_Lcd_Set_Cursor:
  9961                           
  9962                           	psect	text30
  9963  0000'                    __ptext30:	
  9964 ;; *************** function _Lcd_Init *****************
  9965 ;; Defined at:
  9966 ;;		line 61 in file "./lcd.h"
  9967 ;; Parameters:    Size  Location     Type
  9968 ;;		None
  9969 ;; Auto vars:     Size  Location     Type
  9970 ;;		None
  9971 ;; Return value:  Size  Location     Type
  9972 ;;                  1    wreg      void 
  9973 ;; Registers used:
  9974 ;;		wreg, status,2, status,0, pclath, cstack
  9975 ;; Tracked objects:
  9976 ;;		On entry : 0/0
  9977 ;;		On exit  : 0/0
  9978 ;;		Unchanged: 0/0
  9979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9980 ;;      Params:         0       0       0       0       0
  9981 ;;      Locals:         0       0       0       0       0
  9982 ;;      Temps:          2       0       0       0       0
  9983 ;;      Totals:         2       0       0       0       0
  9984 ;;Total ram usage:        2 bytes
  9985 ;; Hardware stack levels used: 1
  9986 ;; Hardware stack levels required when called: 2
  9987 ;; This function calls:
  9988 ;;		_Lcd_Cmd
  9989 ;;		_Lcd_Port
  9990 ;; This function is called by:
  9991 ;;		_main
  9992 ;; This function uses a non-reentrant model
  9993 ;;
  9994                           
  9995  0000'                    _Lcd_Init:	
  9996                           ;psect for function _Lcd_Init
  9997                           
  9998                           
  9999                           ;./lcd.h: 63:   Lcd_Port(0x00);
 10000                           
 10001                           ;incstack = 0
 10002                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
 10003  0000' 3000               	movlw	0
 10004  0001' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Port
 10005                           
 10006                           ;./lcd.h: 64:    _delay((unsigned long)((20)*(4000000/4000.0)));
 10007  0006' 301A               	movlw	26
 10008  0007' 0085'              	movwf	??_Lcd_Init+1
 10009  0008' 30F8               	movlw	248
 10010  0009' 0084'              	movwf	??_Lcd_Init
 10011  000A'                    u6987:
 10012  000A' 0B84'              	decfsz	??_Lcd_Init,f
 10013  000B' 2800'              	goto	u6987
 10014  000C' 0B85'              	decfsz	??_Lcd_Init+1,f
 10015  000D' 2800'              	goto	u6987
 10016  000E' 0000               	nop
 10017                           
 10018                           ;./lcd.h: 65:   Lcd_Cmd(0x03);
 10019  000F' 3003               	movlw	3
 10020  0010' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Cmd
 10021                           
 10022                           ;./lcd.h: 66:  _delay((unsigned long)((5)*(4000000/4000.0)));
 10023  0015' 3007               	movlw	7
 10024  0016' 0085'              	movwf	??_Lcd_Init+1
 10025  0017' 307D               	movlw	125
 10026  0018' 0084'              	movwf	??_Lcd_Init
 10027  0019'                    u6997:
 10028  0019' 0B84'              	decfsz	??_Lcd_Init,f
 10029  001A' 2800'              	goto	u6997
 10030  001B' 0B85'              	decfsz	??_Lcd_Init+1,f
 10031  001C' 2800'              	goto	u6997
 10032                           
 10033                           ;./lcd.h: 67:   Lcd_Cmd(0x03);
 10034  001D' 3003               	movlw	3
 10035  001E' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Cmd
 10036                           
 10037                           ;./lcd.h: 68:  _delay((unsigned long)((11)*(4000000/4000.0)));
 10038  0023' 300F               	movlw	15
 10039  0024' 0085'              	movwf	??_Lcd_Init+1
 10040  0025' 3047               	movlw	71
 10041  0026' 0084'              	movwf	??_Lcd_Init
 10042  0027'                    u7007:
 10043  0027' 0B84'              	decfsz	??_Lcd_Init,f
 10044  0028' 2800'              	goto	u7007
 10045  0029' 0B85'              	decfsz	??_Lcd_Init+1,f
 10046  002A' 2800'              	goto	u7007
 10047  002B' 2800'              	nop2
 10048                           
 10049                           ;./lcd.h: 69:   Lcd_Cmd(0x03);
 10050  002C' 3003               	movlw	3
 10051  002D' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Cmd
 10052                           
 10053                           ;./lcd.h: 71:   Lcd_Cmd(0x02);
 10054  0032' 3002               	movlw	2
 10055  0033' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Cmd
 10056                           
 10057                           ;./lcd.h: 72:   Lcd_Cmd(0x02);
 10058  0038' 3002               	movlw	2
 10059  0039' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Cmd
 10060                           
 10061                           ;./lcd.h: 73:   Lcd_Cmd(0x08);
 10062  003E' 3008               	movlw	8
 10063  003F' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Cmd
 10064                           
 10065                           ;./lcd.h: 74:   Lcd_Cmd(0x00);
 10066  0044' 3000               	movlw	0
 10067  0045' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Cmd
 10068                           
 10069                           ;./lcd.h: 75:   Lcd_Cmd(0x0C);
 10070  004A' 300C               	movlw	12
 10071  004B' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Cmd
 10072                           
 10073                           ;./lcd.h: 76:   Lcd_Cmd(0x00);
 10074  0050' 3000               	movlw	0
 10075  0051' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Cmd
 10076                           
 10077                           ;./lcd.h: 77:   Lcd_Cmd(0x06);
 10078  0056' 3006               	movlw	6
 10079  0057' 120A' 118A' 2000'  	fcall	_Lcd_Cmd
 10080  005A' 0008               	return
 10081  005B'                    __end_of_Lcd_Init:
 10082                           
 10083                           	psect	text31
 10084  0000'                    __ptext31:	
 10085 ;; *************** function _Lcd_Clear *****************
 10086 ;; Defined at:
 10087 ;;		line 34 in file "./lcd.h"
 10088 ;; Parameters:    Size  Location     Type
 10089 ;;		None
 10090 ;; Auto vars:     Size  Location     Type
 10091 ;;		None
 10092 ;; Return value:  Size  Location     Type
 10093 ;;                  1    wreg      void 
 10094 ;; Registers used:
 10095 ;;		wreg, status,2, status,0, pclath, cstack
 10096 ;; Tracked objects:
 10097 ;;		On entry : 0/0
 10098 ;;		On exit  : 0/0
 10099 ;;		Unchanged: 0/0
 10100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10101 ;;      Params:         0       0       0       0       0
 10102 ;;      Locals:         0       0       0       0       0
 10103 ;;      Temps:          0       0       0       0       0
 10104 ;;      Totals:         0       0       0       0       0
 10105 ;;Total ram usage:        0 bytes
 10106 ;; Hardware stack levels used: 1
 10107 ;; Hardware stack levels required when called: 2
 10108 ;; This function calls:
 10109 ;;		_Lcd_Cmd
 10110 ;; This function is called by:
 10111 ;;		_main
 10112 ;; This function uses a non-reentrant model
 10113 ;;
 10114                           
 10115  0000'                    _Lcd_Clear:	
 10116                           ;psect for function _Lcd_Clear
 10117                           
 10118                           
 10119                           ;./lcd.h: 36:  Lcd_Cmd(0);
 10120                           
 10121                           ;incstack = 0
 10122                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
 10123  0000' 3000               	movlw	0
 10124  0001' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Cmd
 10125                           
 10126                           ;./lcd.h: 37:  Lcd_Cmd(1);
 10127  0006' 3001               	movlw	1
 10128  0007' 120A' 118A' 2000'  	fcall	_Lcd_Cmd
 10129  000A' 0008               	return
 10130  000B'                    __end_of_Lcd_Clear:
 10131                           
 10132                           	psect	text32
 10133  0000'                    __ptext32:	
 10134 ;; *************** function _Lcd_Cmd *****************
 10135 ;; Defined at:
 10136 ;;		line 25 in file "./lcd.h"
 10137 ;; Parameters:    Size  Location     Type
 10138 ;;  a               1    wreg     unsigned char 
 10139 ;; Auto vars:     Size  Location     Type
 10140 ;;  a               1    3[COMMON] unsigned char 
 10141 ;; Return value:  Size  Location     Type
 10142 ;;                  1    wreg      void 
 10143 ;; Registers used:
 10144 ;;		wreg, status,2, status,0, pclath, cstack
 10145 ;; Tracked objects:
 10146 ;;		On entry : 0/0
 10147 ;;		On exit  : 0/0
 10148 ;;		Unchanged: 0/0
 10149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10150 ;;      Params:         0       0       0       0       0
 10151 ;;      Locals:         1       0       0       0       0
 10152 ;;      Temps:          2       0       0       0       0
 10153 ;;      Totals:         3       0       0       0       0
 10154 ;;Total ram usage:        3 bytes
 10155 ;; Hardware stack levels used: 1
 10156 ;; Hardware stack levels required when called: 1
 10157 ;; This function calls:
 10158 ;;		_Lcd_Port
 10159 ;; This function is called by:
 10160 ;;		_Lcd_Clear
 10161 ;;		_Lcd_Set_Cursor
 10162 ;;		_Lcd_Init
 10163 ;; This function uses a non-reentrant model
 10164 ;;
 10165                           
 10166  0000'                    _Lcd_Cmd:	
 10167                           ;psect for function _Lcd_Cmd
 10168                           
 10169                           
 10170                           ;incstack = 0
 10171                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
 10172                           ;Lcd_Cmd@a stored from wreg
 10173  0000' 0083'              	movwf	Lcd_Cmd@a
 10174                           
 10175                           ;./lcd.h: 25: void Lcd_Cmd(char a);./lcd.h: 26: {;./lcd.h: 27:  RB5 = 0;
 10176  0001' 1283               	bcf	3,5	;RP0=0, select bank0
 10177  0002' 1303               	bcf	3,6	;RP1=0, select bank0
 10178  0003' 1286               	bcf	6,5	;volatile
 10179                           
 10180                           ;./lcd.h: 28:  Lcd_Port(a);
 10181  0004' 0803'              	movf	Lcd_Cmd@a,w
 10182  0005' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Port
 10183                           
 10184                           ;./lcd.h: 29:  RB4 = 1;
 10185  000A' 1283               	bcf	3,5	;RP0=0, select bank0
 10186  000B' 1303               	bcf	3,6	;RP1=0, select bank0
 10187  000C' 1606               	bsf	6,4	;volatile
 10188                           
 10189                           ;./lcd.h: 30:         _delay((unsigned long)((4)*(4000000/4000.0)));
 10190  000D' 3006               	movlw	6
 10191  000E' 0082'              	movwf	??_Lcd_Cmd+1
 10192  000F' 3030               	movlw	48
 10193  0010' 0081'              	movwf	??_Lcd_Cmd
 10194  0011'                    u7017:
 10195  0011' 0B81'              	decfsz	??_Lcd_Cmd,f
 10196  0012' 2800'              	goto	u7017
 10197  0013' 0B82'              	decfsz	??_Lcd_Cmd+1,f
 10198  0014' 2800'              	goto	u7017
 10199  0015' 0000               	nop
 10200                           
 10201                           ;./lcd.h: 31:         RB4 = 0;
 10202  0016' 1283               	bcf	3,5	;RP0=0, select bank0
 10203  0017' 1303               	bcf	3,6	;RP1=0, select bank0
 10204  0018' 1206               	bcf	6,4	;volatile
 10205  0019' 0008               	return
 10206  001A'                    __end_of_Lcd_Cmd:
 10207                           
 10208                           	psect	text33
 10209  0000'                    __ptext33:	
 10210 ;; *************** function _Lcd_Port *****************
 10211 ;; Defined at:
 10212 ;;		line 3 in file "./lcd.h"
 10213 ;; Parameters:    Size  Location     Type
 10214 ;;  a               1    wreg     unsigned char 
 10215 ;; Auto vars:     Size  Location     Type
 10216 ;;  a               1    0[COMMON] unsigned char 
 10217 ;; Return value:  Size  Location     Type
 10218 ;;                  1    wreg      void 
 10219 ;; Registers used:
 10220 ;;		wreg
 10221 ;; Tracked objects:
 10222 ;;		On entry : 0/0
 10223 ;;		On exit  : 0/0
 10224 ;;		Unchanged: 0/0
 10225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10226 ;;      Params:         0       0       0       0       0
 10227 ;;      Locals:         1       0       0       0       0
 10228 ;;      Temps:          0       0       0       0       0
 10229 ;;      Totals:         1       0       0       0       0
 10230 ;;Total ram usage:        1 bytes
 10231 ;; Hardware stack levels used: 1
 10232 ;; This function calls:
 10233 ;;		Nothing
 10234 ;; This function is called by:
 10235 ;;		_Lcd_Cmd
 10236 ;;		_Lcd_Init
 10237 ;;		_Lcd_Write_Char
 10238 ;; This function uses a non-reentrant model
 10239 ;;
 10240                           
 10241  0000'                    _Lcd_Port:	
 10242                           ;psect for function _Lcd_Port
 10243                           
 10244                           
 10245                           ;incstack = 0
 10246                           ; Regs used in _Lcd_Port: [wreg]
 10247                           ;Lcd_Port@a stored from wreg
 10248  0000' 0080'              	movwf	Lcd_Port@a
 10249                           
 10250                           ;./lcd.h: 3: void Lcd_Port(char a);./lcd.h: 4: {;./lcd.h: 5:  if(a & 1)
 10251  0001' 1C00'              	btfss	Lcd_Port@a,0
 10252  0002' 2800'              	goto	l73
 10253                           
 10254                           ;./lcd.h: 6:   RB3 = 1;
 10255  0003' 1283               	bcf	3,5	;RP0=0, select bank0
 10256  0004' 1303               	bcf	3,6	;RP1=0, select bank0
 10257  0005' 1586               	bsf	6,3	;volatile
 10258  0006' 2800'              	goto	l74
 10259  0007'                    l73:	
 10260                           ;./lcd.h: 7:  else
 10261                           
 10262                           
 10263                           ;./lcd.h: 8:   RB3 = 0;
 10264  0007' 1283               	bcf	3,5	;RP0=0, select bank0
 10265  0008' 1303               	bcf	3,6	;RP1=0, select bank0
 10266  0009' 1186               	bcf	6,3	;volatile
 10267  000A'                    l74:
 10268                           
 10269                           ;./lcd.h: 10:  if(a & 2)
 10270  000A' 1C80'              	btfss	Lcd_Port@a,1
 10271  000B' 2800'              	goto	l75
 10272                           
 10273                           ;./lcd.h: 11:   RB2 = 1;
 10274  000C' 1506               	bsf	6,2	;volatile
 10275  000D' 2800'              	goto	l76
 10276  000E'                    l75:	
 10277                           ;./lcd.h: 12:  else
 10278                           
 10279                           
 10280                           ;./lcd.h: 13:   RB2 = 0;
 10281  000E' 1106               	bcf	6,2	;volatile
 10282  000F'                    l76:
 10283                           
 10284                           ;./lcd.h: 15:  if(a & 4)
 10285  000F' 1D00'              	btfss	Lcd_Port@a,2
 10286  0010' 2800'              	goto	l77
 10287                           
 10288                           ;./lcd.h: 16:   RB1 = 1;
 10289  0011' 1486               	bsf	6,1	;volatile
 10290  0012' 2800'              	goto	l78
 10291  0013'                    l77:	
 10292                           ;./lcd.h: 17:  else
 10293                           
 10294                           
 10295                           ;./lcd.h: 18:   RB1 = 0;
 10296  0013' 1086               	bcf	6,1	;volatile
 10297  0014'                    l78:
 10298                           
 10299                           ;./lcd.h: 20:  if(a & 8)
 10300  0014' 1D80'              	btfss	Lcd_Port@a,3
 10301  0015' 2800'              	goto	l79
 10302                           
 10303                           ;./lcd.h: 21:   RB0 = 1;
 10304  0016' 1406               	bsf	6,0	;volatile
 10305  0017' 0008               	return
 10306  0018'                    l79:	
 10307                           ;./lcd.h: 22:  else
 10308                           
 10309                           
 10310                           ;./lcd.h: 23:   RB0 = 0;
 10311  0018' 1006               	bcf	6,0	;volatile
 10312  0019' 0008               	return
 10313  001A'                    __end_of_Lcd_Port:
 10314  007E                     btemp	set	126	;btemp
 10315  007E                     wtemp0	set	126
 10316                           
 10317                           	psect	config
 10318                           
 10319                           ;Config register CONFIG @ 0x2007
 10320                           ;	Oscillator Selection bits
 10321                           ;	FOSC = XT, XT oscillator
 10322                           ;	Watchdog Timer Enable bit
 10323                           ;	WDTE = OFF, WDT disabled
 10324                           ;	Power-up Timer Enable bit
 10325                           ;	PWRTE = ON, PWRT enabled
 10326                           ;	Brown-out Reset Enable bit
 10327                           ;	BOREN = ON, BOR enabled
 10328                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
 10329                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
 10330                           ;	Data EEPROM Memory Code Protection bit
 10331                           ;	CPD = OFF, Data EEPROM code protection off
 10332                           ;	Flash Program Memory Write Enable bits
 10333                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
 10334                           ;	In-Circuit Debugger Mode bit
 10335                           ;	DEBUG = 0x1, unprogrammed default
 10336                           ;	Flash Program Memory Code Protection bit
 10337                           ;	CP = OFF, Code protection off
 10338  2007                     	org	8199
 10339  2007  3F71               	dw	16241
 10340                           
 10341                           	psect	text1_split_1
 10342  0000'                    l3721:
 10343                           
 10344                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
 10345  0000' 0800'              	movf	sprintf@ap^(0+128),w
 10346  0001' 0084               	movwf	4
 10347  0002' 1383               	bcf	3,7	;select IRP bank0
 10348  0003' 0800               	movf	0,w
 10349  0004' 0080'              	movwf	??_sprintf^(0+128)
 10350  0005' 0A84               	incf	4,f
 10351  0006' 0800               	movf	0,w
 10352  0007' 0081'              	movwf	(??_sprintf^(0+128)+1)
 10353  0008' 0800'              	movf	??_sprintf^(0+128),w
 10354  0009' 0080'              	movwf	sprintf@val^(0+128)
 10355  000A' 0800'              	movf	(??_sprintf+1)^(0+128),w
 10356  000B' 0081'              	movwf	(sprintf@val^(0+128)+1)
 10357  000C' 0182'              	clrf	(sprintf@val^(0+128)+2)
 10358  000D' 0183'              	clrf	(sprintf@val^(0+128)+3)
 10359  000E' 3002               	movlw	2
 10360  000F' 00FF               	movwf	127
 10361  0010' 087F               	movf	127,w
 10362  0011' 0780'              	addwf	sprintf@ap^(0+128),f
 10363  0012'                    l3725:
 10364                           
 10365                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1316:   if(prec =
      +                          = 0 && val == 0)
 10366  0012' 0800'              	movf	sprintf@prec^(0+128),w
 10367  0013' 0400'              	iorwf	(sprintf@prec+1)^(0+128),w
 10368  0014' 1D03               	btfss	3,2
 10369  0015' 2800'              	goto	l3731
 10370  0016' 0800'              	movf	(sprintf@val+3)^(0+128),w
 10371  0017' 0400'              	iorwf	(sprintf@val+2)^(0+128),w
 10372  0018' 0400'              	iorwf	(sprintf@val+1)^(0+128),w
 10373  0019' 0400'              	iorwf	sprintf@val^(0+128),w
 10374  001A' 1D03               	skipz
 10375  001B' 2800'              	goto	l3731
 10376                           
 10377                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1317:    prec++;
 10378  001C' 3001               	movlw	1
 10379  001D' 0780'              	addwf	sprintf@prec^(0+128),f
 10380  001E' 1803               	skipnc
 10381  001F' 0A80'              	incf	(sprintf@prec+1)^(0+128),f
 10382  0020' 3000               	movlw	0
 10383  0021' 0780'              	addwf	(sprintf@prec+1)^(0+128),f
 10384  0022'                    l3731:
 10385                           
 10386                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 10387  0022' 0180'              	clrf	sprintf@c^(0+128)
 10388  0023' 0A80'              	incf	sprintf@c^(0+128),f
 10389  0024'                    l3737:
 10390                           
 10391                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
 10392  0024' 0800'              	movf	sprintf@c^(0+128),w
 10393  0025' 0080'              	movwf	??_sprintf^(0+128)
 10394  0026' 3001               	movlw	1
 10395  0027'                    u6215:
 10396  0027' 1003               	clrc
 10397  0028' 0D80'              	rlf	??_sprintf^(0+128),f
 10398  0029' 3EFF               	addlw	-1
 10399  002A' 1D03               	skipz
 10400  002B' 2800'              	goto	u6215
 10401  002C' 1003               	clrc
 10402  002D' 0D00'              	rlf	??_sprintf^(0+128),w
 10403  002E' 3E00'              	addlw	low (_dpowers| (0+32768))
 10404  002F' 0084               	movwf	4
 10405  0030' 3000'              	movlw	high (_dpowers| (0+32768))
 10406  0031' 1803               	skipnc
 10407  0032' 3E01               	addlw	1
 10408  0033' 1283               	bcf	3,5	;RP0=0, select bank0
 10409  0034' 1303               	bcf	3,6	;RP1=0, select bank0
 10410  0035' 00FF               	movwf	127
 10411  0036' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
 10412  003B' 1683               	bsf	3,5	;RP0=1, select bank1
 10413  003C' 1303               	bcf	3,6	;RP1=0, select bank1
 10414  003D' 0080'              	movwf	(??_sprintf+1)^(0+128)
 10415  003E' 1283               	bcf	3,5	;RP0=0, select bank0
 10416  003F' 1303               	bcf	3,6	;RP1=0, select bank0
 10417  0040' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
 10418  0045' 1683               	bsf	3,5	;RP0=1, select bank1
 10419  0046' 1303               	bcf	3,6	;RP1=0, select bank1
 10420  0047' 0081'              	movwf	((??_sprintf+1)^(0+128)+1)
 10421  0048' 1283               	bcf	3,5	;RP0=0, select bank0
 10422  0049' 1303               	bcf	3,6	;RP1=0, select bank0
 10423  004A' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
 10424  004F' 1683               	bsf	3,5	;RP0=1, select bank1
 10425  0050' 1303               	bcf	3,6	;RP1=0, select bank1
 10426  0051' 0082'              	movwf	((??_sprintf+1)^(0+128)+2)
 10427  0052' 1283               	bcf	3,5	;RP0=0, select bank0
 10428  0053' 1303               	bcf	3,6	;RP1=0, select bank0
 10429  0054' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
 10430  0059' 1683               	bsf	3,5	;RP0=1, select bank1
 10431  005A' 1303               	bcf	3,6	;RP1=0, select bank1
 10432  005B' 0083'              	movwf	((??_sprintf+1)^(0+128)+3)
 10433  005C' 0800'              	movf	(??_sprintf+4)^(0+128),w
 10434  005D' 0200'              	subwf	(sprintf@val+3)^(0+128),w
 10435  005E' 1D03               	skipz
 10436  005F' 2800'              	goto	u6225
 10437  0060' 0800'              	movf	(??_sprintf+3)^(0+128),w
 10438  0061' 0200'              	subwf	(sprintf@val+2)^(0+128),w
 10439  0062' 1D03               	skipz
 10440  0063' 2800'              	goto	u6225
 10441  0064' 0800'              	movf	(??_sprintf+2)^(0+128),w
 10442  0065' 0200'              	subwf	(sprintf@val+1)^(0+128),w
 10443  0066' 1D03               	skipz
 10444  0067' 2800'              	goto	u6225
 10445  0068' 0800'              	movf	(??_sprintf+1)^(0+128),w
 10446  0069' 0200'              	subwf	sprintf@val^(0+128),w
 10447  006A'                    u6225:
 10448  006A' 1C03               	btfss	3,0
 10449  006B' 2800'              	goto	l3745
 10450  006C' 3001               	movlw	1
 10451  006D' 00FF               	movwf	127
 10452  006E' 087F               	movf	127,w
 10453  006F' 0780'              	addwf	sprintf@c^(0+128),f
 10454  0070' 300A               	movlw	10
 10455  0071' 0600'              	xorwf	sprintf@c^(0+128),w
 10456  0072' 1D03               	btfss	3,2
 10457  0073' 2800'              	goto	l3737
 10458  0074'                    l3745:
 10459                           
 10460                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
 10461  0074' 0800'              	movf	(sprintf@prec+1)^(0+128),w
 10462  0075' 3A80               	xorlw	128
 10463  0076' 3C80               	sublw	128
 10464  0077' 1D03               	skipz
 10465  0078' 2800'              	goto	u6245
 10466  0079' 0800'              	movf	sprintf@prec^(0+128),w
 10467  007A' 0200'              	subwf	sprintf@c^(0+128),w
 10468  007B'                    u6245:
 10469  007B' 1803               	skipnc
 10470  007C' 2800'              	goto	l3749
 10471                           
 10472                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1366:    c = (cha
      +                          r)prec;
 10473  007D' 1683               	bsf	3,5	;RP0=1, select bank1
 10474  007E' 1303               	bcf	3,6	;RP1=0, select bank1
 10475  007F' 0800'              	movf	sprintf@prec^(0+128),w
 10476  0080' 0080'              	movwf	sprintf@c^(0+128)
 10477  0081' 2800'              	goto	l3753
 10478  0082'                    l3749:
 10479  0082' 1683               	bsf	3,5	;RP0=1, select bank1
 10480  0083' 1303               	bcf	3,6	;RP1=0, select bank1
 10481  0084' 0800'              	movf	(sprintf@prec+1)^(0+128),w
 10482  0085' 3A80               	xorlw	128
 10483  0086' 0080'              	movwf	??_sprintf^(0+128)
 10484  0087' 3080               	movlw	128
 10485  0088' 0200'              	subwf	??_sprintf^(0+128),w
 10486  0089' 1D03               	skipz
 10487  008A' 2800'              	goto	u6255
 10488  008B' 0800'              	movf	sprintf@c^(0+128),w
 10489  008C' 0200'              	subwf	sprintf@prec^(0+128),w
 10490  008D'                    u6255:
 10491  008D' 1803               	skipnc
 10492  008E' 2800'              	goto	l3753
 10493                           
 10494                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
 10495  008F' 1683               	bsf	3,5	;RP0=1, select bank1
 10496  0090' 1303               	bcf	3,6	;RP1=0, select bank1
 10497  0091' 0800'              	movf	sprintf@c^(0+128),w
 10498  0092' 0080'              	movwf	??_sprintf^(0+128)
 10499  0093' 0181'              	clrf	(??_sprintf^(0+128)+1)
 10500  0094' 0800'              	movf	??_sprintf^(0+128),w
 10501  0095' 0080'              	movwf	sprintf@prec^(0+128)
 10502  0096' 0800'              	movf	(??_sprintf+1)^(0+128),w
 10503  0097' 0080'              	movwf	(sprintf@prec+1)^(0+128)
 10504  0098'                    l3753:
 10505                           
 10506                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
 10507  0098' 1683               	bsf	3,5	;RP0=1, select bank1
 10508  0099' 1303               	bcf	3,6	;RP1=0, select bank1
 10509  009A' 0800'              	movf	sprintf@width^(0+128),w
 10510  009B' 0400'              	iorwf	(sprintf@width+1)^(0+128),w
 10511  009C' 1903               	btfsc	3,2
 10512  009D' 2800'              	goto	l3759
 10513  009E' 3003               	movlw	3
 10514  009F' 0500'              	andwf	sprintf@flag^(0+128),w
 10515  00A0' 0080'              	movwf	??_sprintf^(0+128)
 10516  00A1' 3000               	movlw	0
 10517  00A2' 0500'              	andwf	(sprintf@flag+1)^(0+128),w
 10518  00A3' 0080'              	movwf	(??_sprintf+1)^(0+128)
 10519  00A4' 0800'              	movf	??_sprintf^(0+128),w
 10520  00A5' 0401'              	iorwf	(??_sprintf^(0+128)+1),w
 10521  00A6' 1903               	btfsc	3,2
 10522  00A7' 2800'              	goto	l3759
 10523                           
 10524                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1372:    width--;
 10525  00A8' 30FF               	movlw	255
 10526  00A9' 0780'              	addwf	sprintf@width^(0+128),f
 10527  00AA' 1803               	skipnc
 10528  00AB' 0A80'              	incf	(sprintf@width+1)^(0+128),f
 10529  00AC' 30FF               	movlw	255
 10530  00AD' 0780'              	addwf	(sprintf@width+1)^(0+128),f
 10531  00AE'                    l3759:
 10532                           
 10533                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1374:   if(flag &
      +                           0x4000) {
 10534  00AE' 1F00'              	btfss	(sprintf@flag+1)^(0+128),6
 10535  00AF' 2800'              	goto	l3767
 10536                           
 10537                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1375:    if(width
      +                           > prec)
 10538  00B0' 0800'              	movf	(sprintf@prec+1)^(0+128),w
 10539  00B1' 3A80               	xorlw	128
 10540  00B2' 0080'              	movwf	??_sprintf^(0+128)
 10541  00B3' 0800'              	movf	(sprintf@width+1)^(0+128),w
 10542  00B4' 3A80               	xorlw	128
 10543  00B5' 0200'              	subwf	??_sprintf^(0+128),w
 10544  00B6' 1D03               	skipz
 10545  00B7' 2800'              	goto	u6295
 10546  00B8' 0800'              	movf	sprintf@width^(0+128),w
 10547  00B9' 0200'              	subwf	sprintf@prec^(0+128),w
 10548  00BA'                    u6295:
 10549  00BA' 1803               	skipnc
 10550  00BB' 2800'              	goto	l3765
 10551                           
 10552                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1376:     width -
      +                          = prec;
 10553  00BC' 1683               	bsf	3,5	;RP0=1, select bank1
 10554  00BD' 1303               	bcf	3,6	;RP1=0, select bank1
 10555  00BE' 0800'              	movf	sprintf@prec^(0+128),w
 10556  00BF' 0280'              	subwf	sprintf@width^(0+128),f
 10557  00C0' 0800'              	movf	(sprintf@prec+1)^(0+128),w
 10558  00C1' 1C03               	skipc
 10559  00C2' 0380'              	decf	(sprintf@width+1)^(0+128),f
 10560  00C3' 0280'              	subwf	(sprintf@width+1)^(0+128),f
 10561  00C4' 2800'              	goto	l3767
 10562  00C5'                    l3765:
 10563                           
 10564                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1378:     width =
      +                           0;
 10565  00C5' 1683               	bsf	3,5	;RP0=1, select bank1
 10566  00C6' 1303               	bcf	3,6	;RP1=0, select bank1
 10567  00C7' 0180'              	clrf	sprintf@width^(0+128)
 10568  00C8' 0180'              	clrf	(sprintf@width+1)^(0+128)
 10569  00C9'                    l3767:
 10570                           
 10571                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
 10572  00C9' 0800'              	movf	(sprintf@width+1)^(0+128),w
 10573  00CA' 3A80               	xorlw	128
 10574  00CB' 3C80               	sublw	128
 10575  00CC' 1D03               	skipz
 10576  00CD' 2800'              	goto	u6305
 10577  00CE' 0800'              	movf	sprintf@width^(0+128),w
 10578  00CF' 0200'              	subwf	sprintf@c^(0+128),w
 10579  00D0'                    u6305:
 10580  00D0' 1803               	skipnc
 10581  00D1' 2800'              	goto	l3771
 10582                           
 10583                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
 10584  00D2' 1683               	bsf	3,5	;RP0=1, select bank1
 10585  00D3' 1303               	bcf	3,6	;RP1=0, select bank1
 10586  00D4' 0800'              	movf	sprintf@c^(0+128),w
 10587  00D5' 0080'              	movwf	??_sprintf^(0+128)
 10588  00D6' 0181'              	clrf	(??_sprintf^(0+128)+1)
 10589  00D7' 0800'              	movf	??_sprintf^(0+128),w
 10590  00D8' 0280'              	subwf	sprintf@width^(0+128),f
 10591  00D9' 0800'              	movf	(??_sprintf+1)^(0+128),w
 10592  00DA' 1C03               	skipc
 10593  00DB' 0380'              	decf	(sprintf@width+1)^(0+128),f
 10594  00DC' 0280'              	subwf	(sprintf@width+1)^(0+128),f
 10595  00DD' 2800'              	goto	l3773
 10596  00DE'                    l3771:
 10597                           
 10598                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
 10599  00DE' 1683               	bsf	3,5	;RP0=1, select bank1
 10600  00DF' 1303               	bcf	3,6	;RP1=0, select bank1
 10601  00E0' 0180'              	clrf	sprintf@width^(0+128)
 10602  00E1' 0180'              	clrf	(sprintf@width+1)^(0+128)
 10603  00E2'                    l3773:
 10604                           
 10605                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1450:    if(width
 10606  00E2' 0800'              	movf	sprintf@width^(0+128),w
 10607  00E3' 0400'              	iorwf	(sprintf@width+1)^(0+128),w
 10608  00E4' 1903               	btfsc	3,2
 10609  00E5' 2800'              	goto	l3781
 10610  00E6'                    l3775:
 10611                           
 10612                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
 10613  00E6' 0800'              	movf	sprintf@sp^(0+128),w
 10614  00E7' 0084               	movwf	4
 10615  00E8' 3020               	movlw	32
 10616  00E9' 1783               	bsf	3,7	;select IRP bank2
 10617  00EA' 0080               	movwf	0
 10618  00EB' 3001               	movlw	1
 10619  00EC' 00FF               	movwf	127
 10620  00ED' 087F               	movf	127,w
 10621  00EE' 0780'              	addwf	sprintf@sp^(0+128),f
 10622  00EF' 30FF               	movlw	255
 10623  00F0' 0780'              	addwf	sprintf@width^(0+128),f
 10624  00F1' 1803               	skipnc
 10625  00F2' 0A80'              	incf	(sprintf@width+1)^(0+128),f
 10626  00F3' 30FF               	movlw	255
 10627  00F4' 0780'              	addwf	(sprintf@width+1)^(0+128),f
 10628  00F5' 0800'              	movf	sprintf@width^(0+128),w
 10629  00F6' 0400'              	iorwf	(sprintf@width+1)^(0+128),w
 10630  00F7' 1D03               	btfss	3,2
 10631  00F8' 2800'              	goto	l3775
 10632  00F9'                    l3781:
 10633                           
 10634                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
 10635  00F9' 3003               	movlw	3
 10636  00FA' 0500'              	andwf	sprintf@flag^(0+128),w
 10637  00FB' 0080'              	movwf	??_sprintf^(0+128)
 10638  00FC' 3000               	movlw	0
 10639  00FD' 0500'              	andwf	(sprintf@flag+1)^(0+128),w
 10640  00FE' 0080'              	movwf	(??_sprintf+1)^(0+128)
 10641  00FF' 0800'              	movf	??_sprintf^(0+128),w
 10642  0100' 0401'              	iorwf	(??_sprintf^(0+128)+1),w
 10643  0101' 1903               	btfsc	3,2
 10644  0102' 2800'              	goto	l3793
 10645                           
 10646                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
 10647  0103' 0800'              	movf	sprintf@sp^(0+128),w
 10648  0104' 0084               	movwf	4
 10649  0105' 302D               	movlw	45
 10650  0106'                    L6:
 10651  0106' 1783               	bsf	3,7	;select IRP bank2
 10652  0107' 0080               	movwf	0
 10653  0108' 3001               	movlw	1
 10654  0109' 00FF               	movwf	127
 10655  010A' 087F               	movf	127,w
 10656  010B' 0780'              	addwf	sprintf@sp^(0+128),f
 10657  010C'                    l3793:
 10658                           
 10659                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
 10660  010C' 30FF               	movlw	255
 10661  010D' 0780'              	addwf	sprintf@prec^(0+128),f
 10662  010E' 1803               	skipnc
 10663  010F' 0A80'              	incf	(sprintf@prec+1)^(0+128),f
 10664  0110' 30FF               	movlw	255
 10665  0111' 0780'              	addwf	(sprintf@prec+1)^(0+128),f
 10666  0112' 0A00'              	incf	sprintf@prec^(0+128),w
 10667  0113' 1903               	btfsc	3,2
 10668  0114' 0A00'              	incf	(sprintf@prec+1)^(0+128),w
 10669  0115' 1903               	btfsc	3,2
 10670  0116' 2800'              	goto	L12
 10671                           
 10672                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned int)prec]) % 10 + '0';
 10673  0117' 3000               	movlw	0
 10674  0118' 1283               	bcf	3,5	;RP0=0, select bank0
 10675  0119' 1303               	bcf	3,6	;RP1=0, select bank0
 10676  011A' 0083'              	movwf	___llmod@divisor+3
 10677  011B' 3000               	movlw	0
 10678  011C' 0082'              	movwf	___llmod@divisor+2
 10679  011D' 3000               	movlw	0
 10680  011E' 0081'              	movwf	___llmod@divisor+1
 10681  011F' 300A               	movlw	10
 10682  0120' 0080'              	movwf	___llmod@divisor
 10683  0121' 1683               	bsf	3,5	;RP0=1, select bank1
 10684  0122' 1303               	bcf	3,6	;RP1=0, select bank1
 10685  0123' 0800'              	movf	sprintf@prec^(0+128),w
 10686  0124' 0080'              	movwf	??_sprintf^(0+128)
 10687  0125' 3001               	movlw	1
 10688  0126'                    u6345:
 10689  0126' 1003               	clrc
 10690  0127' 0D80'              	rlf	??_sprintf^(0+128),f
 10691  0128' 3EFF               	addlw	-1
 10692  0129' 1D03               	skipz
 10693  012A' 2800'              	goto	u6345
 10694  012B' 1003               	clrc
 10695  012C' 0D00'              	rlf	??_sprintf^(0+128),w
 10696  012D' 3E00'              	addlw	low (_dpowers| (0+32768))
 10697  012E' 0084               	movwf	4
 10698  012F' 3000'              	movlw	high (_dpowers| (0+32768))
 10699  0130' 1803               	skipnc
 10700  0131' 3E01               	addlw	1
 10701  0132' 1283               	bcf	3,5	;RP0=0, select bank0
 10702  0133' 1303               	bcf	3,6	;RP1=0, select bank0
 10703  0134' 00FF               	movwf	127
 10704  0135' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
 10705  013A' 0080'              	movwf	___lldiv@divisor
 10706  013B' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
 10707  0140' 0081'              	movwf	___lldiv@divisor+1
 10708  0141' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
 10709  0146' 0082'              	movwf	___lldiv@divisor+2
 10710  0147' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
 10711  014C' 0083'              	movwf	___lldiv@divisor+3
 10712  014D' 1683               	bsf	3,5	;RP0=1, select bank1
 10713  014E' 1303               	bcf	3,6	;RP1=0, select bank1
 10714  014F' 0800'              	movf	(sprintf@val+3)^(0+128),w
 10715  0150' 0087'              	movwf	___lldiv@dividend+3
 10716  0151' 0800'              	movf	(sprintf@val+2)^(0+128),w
 10717  0152' 0086'              	movwf	___lldiv@dividend+2
 10718  0153' 0800'              	movf	(sprintf@val+1)^(0+128),w
 10719  0154' 0085'              	movwf	___lldiv@dividend+1
 10720  0155' 0800'              	movf	sprintf@val^(0+128),w
 10721  0156' 0084'              	movwf	___lldiv@dividend
 10722  0157' 120A' 118A' 2000' 120A' 118A' 	fcall	___lldiv
 10723  015C' 0803'              	movf	?___lldiv+3,w
 10724  015D' 1283               	bcf	3,5	;RP0=0, select bank0
 10725  015E' 1303               	bcf	3,6	;RP1=0, select bank0
 10726  015F' 0087'              	movwf	___llmod@dividend+3
 10727  0160' 0802'              	movf	?___lldiv+2,w
 10728  0161' 0086'              	movwf	___llmod@dividend+2
 10729  0162' 0801'              	movf	?___lldiv+1,w
 10730  0163' 0085'              	movwf	___llmod@dividend+1
 10731  0164' 0800'              	movf	?___lldiv,w
 10732  0165' 0084'              	movwf	___llmod@dividend
 10733  0166' 120A' 118A' 2000' 120A' 118A' 	fcall	___llmod
 10734  016B' 1283               	bcf	3,5	;RP0=0, select bank0
 10735  016C' 1303               	bcf	3,6	;RP1=0, select bank0
 10736  016D' 0800'              	movf	?___llmod,w
 10737  016E' 3E30               	addlw	48
 10738  016F' 1683               	bsf	3,5	;RP0=1, select bank1
 10739  0170' 1303               	bcf	3,6	;RP1=0, select bank1
 10740  0171' 0080'              	movwf	sprintf@c^(0+128)
 10741                           
 10742                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
 10743  0172' 0800'              	movf	sprintf@sp^(0+128),w
 10744  0173' 0084               	movwf	4
 10745  0174' 0800'              	movf	sprintf@c^(0+128),w
 10746  0175' 2800'              	goto	L6
 10747  0176'                    l3797:
 10748                           
 10749                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
 10750  0176' 0800'              	movf	sprintf@sp^(0+128),w
 10751  0177' 0084               	movwf	4
 10752  0178' 1783               	bsf	3,7	;select IRP bank2
 10753  0179' 0180               	clrf	0
 10754  017A' 0008               	return
 10755  017B'                    L12:
 10756  017B'                    __end_of_sprintf:
 10757  017B' 120A' 118A' 2800'  	ljmp	l3795

Data Sizes:
    Strings     149
    Constant    144
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     35      35
    BANK3            96     60      60
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_19(CODE[6]), STR_13(CODE[6]), STR_7(CODE[6]), STR_5(CODE[4]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> main@combinedText_160(BANK3[20]), main@combinedText(BANK3[20]), main@adcString2(BANK3[4]), main@adcString1(BANK3[4]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    UART_Write_Text@text	PTR unsigned char  size(2) Largest target is 20
		 -> STR_21(CODE[5]), main@combinedText_160(BANK3[20]), STR_17(CODE[7]), STR_15(CODE[5]), 
		 -> main@combinedText(BANK3[20]), STR_11(CODE[8]), STR_9(CODE[5]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 15
		 -> STR_24(CODE[15]), STR_23(CODE[15]), STR_22(CODE[15]), STR_20(CODE[5]), 
		 -> STR_18(CODE[5]), STR_16(CODE[9]), STR_14(CODE[10]), STR_12(CODE[5]), 
		 -> STR_10(CODE[9]), STR_8(CODE[10]), main@adcString2(BANK3[4]), STR_6(CODE[8]), 
		 -> main@adcString1(BANK3[4]), STR_4(CODE[7]), STR_3(CODE[3]), STR_2(CODE[8]), 
		 -> STR_1(CODE[13]), 


Critical Paths under _main in COMMON

    _main->___xxtofl
    _sprintf->___awdiv
    _sprintf->___lldiv
    _sprintf->___xxtofl
    _scale->___awdiv
    ___awdiv->___awmod
    ___lwdiv->___lwmod
    ___flmul->___awdiv
    ___llmod->___lldiv
    ___flsub->___xxtofl
    ___fldiv->___xxtofl
    _UART_Write_Text->_UART_Write
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                65    65      0   38470
                                             32 BANK1      3     3      0
                                              0 BANK3     60    60      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                    _UART_Initialize
                    _UART_Write_Text
                            ___fldiv
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             43    37      6   32122
                                             74 BANK0      6     0      6
                                              0 BANK1     32    32      0
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    7408
                                             26 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1208
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1364
                                              6 COMMON     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    5871
                                             26 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     615
                                              0 COMMON     5     1      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     618
                                              5 COMMON     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4393
                                              0 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         17     9      8     455
                                              0 COMMON    11     3      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     767
                                              0 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     618
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     457
                                             45 BANK0     10     6      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                             66 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             46 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             26    18      8    1273
                                              0 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _UART_Write_Text                                      7     5      2     644
                                              1 COMMON     7     5      2
                         _UART_Write
 ---------------------------------------------------------------------------------
 (2) _UART_Write                                           1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2    1560
                                              5 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1    1672
                                              4 COMMON     6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _UART_Initialize
   _UART_Write_Text
     _UART_Write
   ___fldiv
     ___xxtofl (ARG)
   ___xxtofl
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___lwdiv
         ___lwmod
     ___fleq
     ___flge
     ___flmul
     ___flneg
     ___flsub
       ___fladd
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
       _scale (ARG)
         ___awdiv
         ___awmod
         ___flmul
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
     _isdigit
     _scale

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     23      23       7       43.8%
BITBANK3            60      0       0       8        0.0%
BANK3               60     3C      3C       9       62.5%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Fri Aug 25 14:09:54 2023

            ___fldiv@aexp 0019              ___fldiv@bexp 0018                         pc 0002  
            ___fldiv@sign 0011                        l73 0007                        l74 000A  
                      l75 000E                        l76 000F                        l77 0013  
                      l78 0014                        l79 0018                        _GO 00FA  
            ___awdiv@sign 000B                        fsr 0004       ___wmul@multiplicand 0002  
     __Umul8_16@word_mpld 0006                       l111 0086                       l114 009C  
                     l123 019E                       l140 02CB                       l301 0106  
                     l141 02CE                       l133 022C                       l125 020A  
                     l117 019A                       l127 0228                       l119 01BC  
                     l161 0001                       l129 024A                       l306 0108  
                     l138 02CD                       l307 0733                       l606 008B  
                     l711 009F                       l705 004A                       l378 000A  
                     l564 001A                       l572 0080                       l820 0012  
                     l565 0034                       l709 00BF                       l726 0176  
                     l559 008C                       l761 0048                       l569 001A  
                     l588 004B                       l845 001D                       l783 0187  
                     l858 0071                       l859 007B                       _RB0 0030  
                     _RB1 0031                       _RB2 0032                       _RA4 002C  
                     _RC0 0038                       _RB3 0033                       _RC1 0039  
                     _RB4 0034                       _RC2 003A                       _RB5 0035  
                     _RC3 003B                       _RE0 0048                       _RE1 0049  
                     _RE2 004A                       fsr0 0004                       indf 0000  
            ___awmod@sign 0005              ___flmul@aexp 0012              ___flmul@bexp 0013  
             _sprintf$874 0005              ___flmul@sign 000D              ___flmul@temp 0018  
            ___flmul@prod 0014              ___fltol@exp1 0036                      l3013 0276  
                    l3005 0242                      l3031 02C0                      l3007 025F  
                    l3017 0278                      l3121 0194                      l3211 0009  
                    l3027 02AA                      l3115 0100                      l3205 009A  
                    l3037 02D9                      l3045 02EC                      l3133 02BC  
                    l3125 01C3                      l3311 0046                      l3215 0012  
                    l3151 000C                      l4111 02C5                      l3321 0034  
                    l3161 0018                      l3251 0088                      l2611 0041  
                    l2603 001D                      l3139 0350                      l3325 005A  
                    l3421 002C                      l3237 0064                      l3229 003C  
                    l3157 000F                      l2701 0022                      l3093 011E  
                    l2605 002B                      l3415 0015                      l3247 0078  
                    l3183 0064                      l3175 0044                      l2615 004C  
                    l2631 000A                      l4151 0136                      l4047 01A1  
                    l3345 0009                      l3265 0002                      l3441 0060  
                    l3193 0077                      l2705 002D                      l2723 0019  
                    l3435 005B                      l3427 002E                      l3259 009B  
                    l3099 01D3                      l2619 0054                      l2643 0017  
                    l2635 0011                      l3603 034D                      l3515 0055  
                    l3523 009B                      l4075 022F                      l2901 01F2  
                    l2821 00EC                      l2813 00CD                      l2805 00B9  
                    l3365 0037                      l3349 0012                      l3285 0010  
                    l3453 0098                      l3429 0040                      l3197 0087  
                    l2645 0025                      l2653 003E                      l3621 043A  
                    l3509 003B                      l2903 01F6                      l2823 00EE  
                    l2831 00FE                      l2751 0042                      l2727 001C  
                    l3295 0048                      l3287 0020                      l3391 001A  
                    l3439 006F                      l2559 000A                      l2671 0008  
                    l3703 071F                      l3607 0368                      l2729 0024  
                    l3377 005A                      l3369 0047                      l2673 0016  
                    l2593 0015                      l2657 0046                      l2649 0033  
                    l3721 0000                      l3641 04CB                      l3617 03B6  
                    l3553 0157                      l3545 010A                      l3537 00B8  
                    l4089 027F                      l4097 02AA                      l2851 0188  
                    l2843 0168                      l2747 003F                      l3299 0055  
                    l3395 0038                      l2923 0019                      l2683 0037  
                    l2587 000A                      l3731 0022                      l3651 04D2  
                    l3635 048C                      l3627 043C                      l3563 019D  
                    l3547 0147                      l3539 0100                      l3469 001F  
                    l3813 0002                      l2757 0054                      l3389 000A  
                    l2941 003C                      l2925 001B                      l3725 0012  
                    l3709 072E                      l3495 0002                      l3399 0045  
                    l2943 003E                      l2927 0023                      l2679 002C  
                    l2695 0006                      l3639 04AB                      l3591 02A1  
                    l3921 0120                      l3913 00EC                      l3833 001C  
                    l2873 01A9                      l2865 019E                      l2953 0054  
                    l2945 0046                      l2697 0014                      l3753 0098  
                    l3745 0074                      l3737 0024                      l3673 0584  
                    l3665 04E7                      l3649 04B5                      l3915 0109  
                    l3835 0024                      l2859 0197                      l2867 01A0  
                    l2795 00A8                      l2787 0072                      l3771 00DE  
                    l3667 0573                      l3595 02F5                      l3587 0280  
                    l3579 01F7                      l3925 0122                      l3853 0040  
                    l3829 0019                      l2877 01AB                      l2797 00AA  
                    l3781 00F9                      l3773 00E2                      l3765 00C5  
                    l3749 0082                      l3951 018F                      l3935 0154  
                    l3863 0067                      l2887 01DE                      l3775 00E6  
                    l3767 00C9                      l3759 00AE                      l3687 05B9  
                    l3679 05A0                      l3953 0193                      l3857 005A  
                    l3849 003D                      l2897 01EE                      l3793 010C  
                    l3939 016D                      l3795 0005                      l3869 0073  
                    l3797 0176                      l3895 00E1                      l3889 00C2  
                    l3897 009E                      l3899 00E6                      l3999 0081  
                    STR_1 00C0                      STR_2 00FA                      STR_3 0134  
                    STR_4 0109                      STR_5 0130                      STR_6 00F2  
                    STR_7 0116                      STR_8 00CD                      STR_9 011C  
                    u4101 0129                      u4005 00AE                      u4110 013D  
                    u4102 012A                      u4111 013E                      u4103 012F  
                    u4112 0143                      u4104 0130                      u4113 0144  
                    u4105 0135                      u4106 0136                      u5005 0046  
                    u5015 0057                      u5025 0065                      u4155 018A  
                    u4093 0110                      u4085 00F2                      u3605 0038  
                    u4255 01C8                      u5135 003E                      u3615 0042  
                    u6015 043F                      u5225 0091                      u5145 0053  
                    u5065 0078                      u3705 0034                      u6105 058D  
                    u6025 0482                      u5411 0045                      u5315 0022  
                    u5155 0066                      u4515 01EB                      u6115 059A  
                    u5412 0046                      u5413 004B                      u5325 0037  
                    u3485 0013                      u4445 00FE                      u5414 004C  
                    u7007 0027                      u5431 006B                      u5415 0051  
                    u5335 0049                      u5255 000B                      u5095 0090  
                    u4535 0210                      u3815 0009                      u3575 0020  
                    u6215 0027                      u6135 0639                      u5432 006C  
                    u5416 0052                      u7017 0011                      u5433 0071  
                    u5505 0038                      u5265 0012                      u3745 000B  
                    u6305 00D0                      u6225 006A                      u6145 06C5  
                    u6065 04BE                      u5434 0072                      u5435 0077  
                    u5195 0079                      u4555 022E                      u4475 0157  
                    u3835 001A                      u3595 002C                      u3675 001A  
                    u5436 0078                      u5605 0039                      u4565 0246  
                    u3765 0017                      u3845 0023                      u4725 0024  
                    u6245 007B                      u6085 04EF                      u5375 0042  
                    u5535 0050                      u5295 0014                      u4655 0295  
                    u3775 0023                      u4735 0082                      u3695 002B  
                    u4815 002C                      u6255 008D                      u3960 0092  
                    u6505 00B0                      u4665 02B3                      u4585 0251  
                    u3785 002D                      u4745 00DB                      u4905 0229  
                    u4825 006D                      u6345 0126                      u3970 0093  
                    u3955 0086                      u5475 001B                      u4675 02CB  
                    u4915 0279                      u4835 00BD                      u6525 00BB  
                    u4765 013F                      u4695 000D                      u6535 00D0  
                    u5575 000E                      u5735 0083                      u5655 0037  
                    u4775 0190                      u4935 02D4                      u4855 0118  
                    u6295 00BA                      u4785 01DE                      u4945 0314  
                    u4865 0158                      u5595 0028                      u5675 0053  
                    u4955 0353                      u4875 0197                      u6565 00F0  
                    u5775 000A                      u6655 013F                      u6495 00A7  
                    u5695 0068                      u4895 01E8                      u6665 015D  
                    u6585 00FB                      u5795 0029                      u6675 0178  
                    u5955 02AC                      u5965 0300                      u6937 0020  
                    u5995 034B                      u6947 0067                      u6957 0174  
                    u6967 001D                      u6977 002D                      u6987 000A  
                    u6997 0019                      _TRMT 04C1         ?_Lcd_Write_String 0005  
                    _main 0000                      btemp 007E                      start 0000* 
      ??_Lcd_Write_String 0007           ___fldiv@new_exp 0012           __end_of_Lcd_Cmd 001A  
 __end_of_UART_Write_Text 003D          ?_UART_Initialize 0000             ___fltol@sign1 0035  
            main@floatVal 0028           __end_of___fladd 01FF                     ?_main 0000  
         __end_of___fldiv 0199           __end_of___awdiv 0059           __end_of___flneg 0009  
                   STR_10 00E1                     STR_11 00EA                     STR_20 012B  
                   STR_12 0121                     STR_21 011C                     STR_13 0110  
                   STR_14 00D7                     STR_22 00A2                     STR_15 011C  
                   STR_23 00A2                     STR_16 00E1                     STR_24 00B1  
                   STR_17 0102                     STR_18 0126                     STR_19 0110  
         __end_of___awmod 004B           __end_of___flmul 02F9           __end_of___flsub 0022  
         __end_of___fltol 0069           __end_of___lldiv 005E           ___awdiv@divisor 0006  
         __end_of___llmod 004E           __end_of___lwdiv 003C           __end_of___lwmod 0032  
         ___awdiv@counter 000A                     _RCSTA 0018                     _SPBRG 0099  
                   _TXREG 0019                     _TXSTA 0098               ?_UART_Write 0000  
         __end_of_dpowers 00A2                     _scale 0000           __end_of_isdigit 000E  
           main@adcValue1 002C             main@adcValue2 002E                     pclath 000A  
                   status 0003                     wtemp0 007E           __end_of_sprintf 017B  
        __end_of_Lcd_Init 005B          __end_of_Lcd_Port 001A           __initialization 0000  
            __end_of_main 02E3                    ??_main 0020                    _ADCON0 001F  
                  _ADCON1 009F          ___llmod@dividend 0004                    ?_scale 001A  
                  _ADRESH 001E          ___awdiv@dividend 0008                 ??_Lcd_Cmd 0001  
                  _TRISA1 0429                    _TRISA4 042C                    _TRISC0 0438  
                  _TRISC1 0439                    _TRISC2 043A                    _TRISC3 043B  
                  _TRISE0 0448                    _TRISE1 0449                    _TRISE2 044A  
                  _TRISC6 043E                    _TRISC7 043F          __end_of___xxtofl 00A1  
        __end_of__powers_ 0046                    ___flge 0000                    ___fleq 0000  
               ??___fladd 0036                    ___wmul 0000                 ??___fldiv 0008  
               ??___awdiv 000A                 ??___flneg 0004                 ??___awmod 0004  
               ??___flmul 0008          ?_UART_Write_Text 0001                 ??___flsub 000E  
               ??___fltol 0031                 ??___lldiv 0008                 ??___llmod 0008  
               ??___lwdiv 0009                 ??___lwmod 0004                    _fround 0000  
        ___awdiv@quotient 000C           ___awmod@divisor 0000           ___awmod@counter 0004  
               ??_isdigit 0000            main@adcString1 0032            main@adcString2 0036  
               ??_sprintf 0000           Lcd_Set_Cursor@a 0006           Lcd_Set_Cursor@b 0004  
         Lcd_Set_Cursor@y 0008           Lcd_Set_Cursor@z 0007                ___flge@ff1 0000  
              ___flge@ff2 0004              ___xxtofl@arg 000A              ___xxtofl@exp 0009  
            ___xxtofl@val 0000                ___fleq@ff1 0000                ___fleq@ff2 0004  
 __end_of__initialization 0000                ___flneg@f1 0000         __end_of_Lcd_Clear 000B  
              ___fltol@f1 002D            __pcstackCOMMON 0000             __end_of_scale 037F  
          _Lcd_Set_Cursor 0000                __div_to_l_ 0000                 ?_Lcd_Init 0000  
               ?_Lcd_Port 0000           __div_to_l_@exp1 0005           __div_to_l_@cntr 0004  
                 ??_scale 001E           __div_to_l_@quot 0000              sprintf@width 000C  
        main@combinedText 0000             __div_to_l_@f1 0000             __div_to_l_@f2 0004  
       __end_of__Umul8_16 0023                __pmaintext 0000                   ?___flge 0000  
                 ?___fleq 0000                   ?___wmul 0000                   ?_fround 001A  
  __end_of_Lcd_Set_Cursor 003E          main@displayValue 003A                 ?___xxtofl 0000  
            ??_UART_Write 0000                ??_Lcd_Init 0004                ??_Lcd_Port 0000  
              __stringtab 0000            _Lcd_Write_Char 0000                   _Lcd_Cmd 0000  
       __end_of__npowers_ 007A                   ___fladd 0000                   ___fldiv 0000  
                 ___awdiv 0000                   ___flneg 0000                   ___awmod 0000  
                 ___flmul 0000                   ___flsub 0000                   ___fltol 0000  
                 ___lldiv 0000        __end_of_UART_Write 000A                   ___llmod 0000  
                 ___lwdiv 0000                _fround$871 0029                _fround$872 0025  
                 ___lwmod 0000           ?_Lcd_Set_Cursor 0004                   __ptext1 0000  
                 __ptext2 0000                   __ptext3 0000                   __ptext4 0000  
                 __ptext5 0000                   __ptext6 0000                   __ptext7 0000  
                 __ptext8 0000                   __ptext9 0000               ?__div_to_l_ 0000  
                 _dpowers 007A                   _isdigit 0000                ??___xxtofl 0004  
        ___awmod@dividend 0002                   _sprintf 0000    __end_of_Lcd_Write_Char 0033  
    end_of_initialization 0000           ___lldiv@divisor 0000           ___lldiv@counter 000D  
                 psplit$0 9002B                 Lcd_Port@a 0000              __pstringtext 0000  
          __tdiv_to_l_@f1 0000            __tdiv_to_l_@f2 0004             ??__tdiv_to_l_ 0008  
          UART_Write@data 0000               ___fladd@grs 0041             ___xxtofl@sign 0008  
               _TRISBbits 0086               ___fldiv@grs 0014               ___fldiv@rem 000D  
         ?_Lcd_Write_Char 0000         Lcd_Write_String@a 0005         Lcd_Write_String@i 000A  
             ___flmul@grs 000E                 _Lcd_Clear 0000            __end_of___flge 0093  
          __end_of___fleq 0048            __end_of___wmul 0021          _Lcd_Write_String 0000  
       pnum$text1_split_1 002B            __end_of_fround 0219       start_initialization 0000  
     __end_of__tdiv_to_l_ 00A3         ??_UART_Initialize 0000           ___llmod@divisor 0000  
         ___llmod@counter 0009                ?_Lcd_Clear 0000                  ??___flge 0008  
                ??___fleq 0008                  ??___wmul 0004                 __Umul8_16 0000  
         Lcd_Write_Char@a 0004           Lcd_Write_Char@y 0003                  ??_fround 001E  
           sprintf@tmpval 000E                 ___fladd@a 0032                 ___fladd@b 002E  
              fround@prec 002D                 ___fldiv@a 0000                 ___fldiv@b 0004  
               ___flmul@a 0004                 ___flmul@b 0000                 ___flsub@a 0042  
               ___flsub@b 0046                 ___latbits 0002             __pcstackBANK0 0000  
           __pcstackBANK1 0000             __pcstackBANK3 0000                  ?_Lcd_Cmd 0000  
             sprintf@flag 000A               sprintf@eexp 0016               sprintf@fval 0018  
             sprintf@prec 001D          ___lwdiv@dividend 0007  main@negativeDisplayValue 0030  
        ??_Lcd_Set_Cursor 0005                  ?___fladd 002E                  ?___fldiv 0000  
                ?___awdiv 0006                  ?___flneg 0000                  ?___awmod 0000  
                ?___flmul 0000                  ?___flsub 0042                  ?___fltol 002D  
                ?___lldiv 0000                  ?___llmod 0000                 __npowers_ 0046  
              ?__Umul8_16 0000                  ?___lwdiv 0005                  ?___lwmod 0000  
             __tdiv_to_l_ 0000              ??__div_to_l_ 0008                  ?_isdigit 0000  
               _scale$873 0028          ___lwdiv@quotient 0009                  ?_sprintf 004A  
       ??_UART_Write_Text 0003            ___wmul@product 0004                  Lcd_Cmd@a 0003  
      __end_of__div_to_l_ 00A4               ??_Lcd_Clear 0004               __stringbase 0012  
       ___wmul@multiplier 0000          ??_Lcd_Write_Char 0001                  _Lcd_Init 0000  
                _Lcd_Port 0000  __end_of_Lcd_Write_String 003D               ??__Umul8_16 0002  
      __end_of__stringtab 0012               _isdigit$689 0000           _UART_Initialize 0000  
              sprintf@val 0012                  ___xxtofl 0000           ___lwdiv@divisor 0005  
         ___lwdiv@counter 000B                  __ptext10 0000                  __ptext11 0000  
                __ptext20 0000                  __ptext12 0000                  __ptext21 0000  
                __ptext13 0000                  __ptext30 0000                  __ptext22 0000  
                __ptext14 0000                  __ptext31 0000                  __ptext23 0000  
                __ptext15 0000                  __ptext32 0000                  __ptext24 0000  
                __ptext16 0000                  __ptext33 0000                  __ptext25 0000  
                __ptext17 0000                  __ptext26 0000                  __ptext18 0000  
                __ptext27 0000                  __ptext19 0000                  __ptext28 0000  
                __ptext29 0000                  __powers_ 0012       UART_Write_Text@text 0001  
               pnum$text1 0009                  isdigit@c 0001                  scale@scl 002C  
      Lcd_Write_Char@temp 0002                 sprintf@ap 0009          __tdiv_to_l_@exp1 0005  
        __tdiv_to_l_@cntr 0004                 sprintf@sp 001C          __tdiv_to_l_@quot 0000  
        ___lwmod@dividend 0002          ___lldiv@dividend 0004                 stringcode 000A  
 __end_of_UART_Initialize 0010        Lcd_Set_Cursor@temp 0009      main@combinedText_160 0014  
            ?__tdiv_to_l_ 0000    __Umul8_16@multiplicand 0000           _UART_Write_Text 0000  
                sprintf@c 001F                  sprintf@f 004A          ___lldiv@quotient 0009  
         ___lwmod@divisor 0000           ___lwmod@counter 0004                  stringtab 0000  
              _UART_Write 0000             ___fladd@signs 003E          UART_Write_Text@i 0006  
            ___fladd@aexp 003F              ___fladd@bexp 0040      __Umul8_16@multiplier 0008  
       __Umul8_16@product 0004  
