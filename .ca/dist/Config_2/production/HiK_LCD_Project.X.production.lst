

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Fri Aug 25 14:09:57 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og9 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
     7                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    16                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text24,local,class=CODE,merge=1,delta=2
    35                           	psect	text25,local,class=CODE,merge=1,delta=2
    36                           	psect	text26,local,class=CODE,merge=1,delta=2
    37                           	psect	text27,local,class=CODE,merge=1,delta=2
    38                           	psect	text28,local,class=CODE,merge=1,delta=2
    39                           	psect	text29,local,class=CODE,merge=1,delta=2
    40                           	psect	text30,local,class=CODE,merge=1,delta=2
    41                           	psect	text31,local,class=CODE,merge=1,delta=2
    42                           	psect	text32,local,class=CODE,merge=1,delta=2
    43                           	psect	text33,local,class=CODE,merge=1,delta=2
    44                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    45                           	dabs	1,0x7E,2
    46     0000                     
    47                           ; Generated 22/03/2023 GMT
    48                           ; 
    49                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution. Publication is not required when
    63                           ;        this file is used in an embedded application.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC16F877A Definitions
    79                           ; 
    80                           ; SFR Addresses
    81     0000                     	;# 
    82     0001                     	;# 
    83     0002                     	;# 
    84     0003                     	;# 
    85     0004                     	;# 
    86     0005                     	;# 
    87     0006                     	;# 
    88     0007                     	;# 
    89     0008                     	;# 
    90     0009                     	;# 
    91     000A                     	;# 
    92     000B                     	;# 
    93     000C                     	;# 
    94     000D                     	;# 
    95     000E                     	;# 
    96     000E                     	;# 
    97     000F                     	;# 
    98     0010                     	;# 
    99     0011                     	;# 
   100     0012                     	;# 
   101     0013                     	;# 
   102     0014                     	;# 
   103     0015                     	;# 
   104     0015                     	;# 
   105     0016                     	;# 
   106     0017                     	;# 
   107     0018                     	;# 
   108     0019                     	;# 
   109     001A                     	;# 
   110     001B                     	;# 
   111     001B                     	;# 
   112     001C                     	;# 
   113     001D                     	;# 
   114     001E                     	;# 
   115     001F                     	;# 
   116     0081                     	;# 
   117     0085                     	;# 
   118     0086                     	;# 
   119     0087                     	;# 
   120     0088                     	;# 
   121     0089                     	;# 
   122     008C                     	;# 
   123     008D                     	;# 
   124     008E                     	;# 
   125     0091                     	;# 
   126     0092                     	;# 
   127     0093                     	;# 
   128     0094                     	;# 
   129     0098                     	;# 
   130     0099                     	;# 
   131     009C                     	;# 
   132     009D                     	;# 
   133     009E                     	;# 
   134     009F                     	;# 
   135     010C                     	;# 
   136     010D                     	;# 
   137     010E                     	;# 
   138     010F                     	;# 
   139     018C                     	;# 
   140     018D                     	;# 
   141     0000                     	;# 
   142     0001                     	;# 
   143     0002                     	;# 
   144     0003                     	;# 
   145     0004                     	;# 
   146     0005                     	;# 
   147     0006                     	;# 
   148     0007                     	;# 
   149     0008                     	;# 
   150     0009                     	;# 
   151     000A                     	;# 
   152     000B                     	;# 
   153     000C                     	;# 
   154     000D                     	;# 
   155     000E                     	;# 
   156     000E                     	;# 
   157     000F                     	;# 
   158     0010                     	;# 
   159     0011                     	;# 
   160     0012                     	;# 
   161     0013                     	;# 
   162     0014                     	;# 
   163     0015                     	;# 
   164     0015                     	;# 
   165     0016                     	;# 
   166     0017                     	;# 
   167     0018                     	;# 
   168     0019                     	;# 
   169     001A                     	;# 
   170     001B                     	;# 
   171     001B                     	;# 
   172     001C                     	;# 
   173     001D                     	;# 
   174     001E                     	;# 
   175     001F                     	;# 
   176     0081                     	;# 
   177     0085                     	;# 
   178     0086                     	;# 
   179     0087                     	;# 
   180     0088                     	;# 
   181     0089                     	;# 
   182     008C                     	;# 
   183     008D                     	;# 
   184     008E                     	;# 
   185     0091                     	;# 
   186     0092                     	;# 
   187     0093                     	;# 
   188     0094                     	;# 
   189     0098                     	;# 
   190     0099                     	;# 
   191     009C                     	;# 
   192     009D                     	;# 
   193     009E                     	;# 
   194     009F                     	;# 
   195     010C                     	;# 
   196     010D                     	;# 
   197     010E                     	;# 
   198     010F                     	;# 
   199     018C                     	;# 
   200     018D                     	;# 
   201     0000                     	;# 
   202     0001                     	;# 
   203     0002                     	;# 
   204     0003                     	;# 
   205     0004                     	;# 
   206     0005                     	;# 
   207     0006                     	;# 
   208     0007                     	;# 
   209     0008                     	;# 
   210     0009                     	;# 
   211     000A                     	;# 
   212     000B                     	;# 
   213     000C                     	;# 
   214     000D                     	;# 
   215     000E                     	;# 
   216     000E                     	;# 
   217     000F                     	;# 
   218     0010                     	;# 
   219     0011                     	;# 
   220     0012                     	;# 
   221     0013                     	;# 
   222     0014                     	;# 
   223     0015                     	;# 
   224     0015                     	;# 
   225     0016                     	;# 
   226     0017                     	;# 
   227     0018                     	;# 
   228     0019                     	;# 
   229     001A                     	;# 
   230     001B                     	;# 
   231     001B                     	;# 
   232     001C                     	;# 
   233     001D                     	;# 
   234     001E                     	;# 
   235     001F                     	;# 
   236     0081                     	;# 
   237     0085                     	;# 
   238     0086                     	;# 
   239     0087                     	;# 
   240     0088                     	;# 
   241     0089                     	;# 
   242     008C                     	;# 
   243     008D                     	;# 
   244     008E                     	;# 
   245     0091                     	;# 
   246     0092                     	;# 
   247     0093                     	;# 
   248     0094                     	;# 
   249     0098                     	;# 
   250     0099                     	;# 
   251     009C                     	;# 
   252     009D                     	;# 
   253     009E                     	;# 
   254     009F                     	;# 
   255     010C                     	;# 
   256     010D                     	;# 
   257     010E                     	;# 
   258     010F                     	;# 
   259     018C                     	;# 
   260     018D                     	;# 
   261                           
   262                           	psect	stringtext
   263     1800                     __pstringtext:
   264     1800                     stringtab:
   265     1800                     __stringtab:
   266                           
   267                           ;	String table - string pointers are 2 bytes each
   268     1800  1BFF               	btfsc	btemp+1,7
   269     1801  280A               	ljmp	stringcode
   270     1802  1383               	bcf	3,7
   271     1803  187F               	btfsc	btemp+1,0
   272     1804  1783               	bsf	3,7
   273     1805  0800               	movf	0,w
   274     1806  0A84               	incf	4,f
   275     1807  1903               	skipnz
   276     1808  0AFF               	incf	btemp+1,f
   277     1809  0008               	return
   278     180A                     stringcode:
   279     180A  087F               	movf	btemp+1,w
   280     180B  397F               	andlw	127
   281     180C  008A               	movwf	10
   282     180D  0804               	movf	4,w
   283     180E  0A84               	incf	4,f
   284     180F  1903               	skipnz
   285     1810  0AFF               	incf	btemp+1,f
   286     1811  0082               	movwf	2
   287     1812                     __stringbase:
   288     1812                     __end_of__stringtab:
   289     1812                     __powers_:
   290     1812  3400               	retlw	0
   291     1813  3400               	retlw	0
   292     1814  3480               	retlw	128
   293     1815  343F               	retlw	63
   294     1816  3400               	retlw	0
   295     1817  3400               	retlw	0
   296     1818  3420               	retlw	32
   297     1819  3441               	retlw	65
   298     181A  3400               	retlw	0
   299     181B  3400               	retlw	0
   300     181C  34C8               	retlw	200
   301     181D  3442               	retlw	66
   302     181E  3400               	retlw	0
   303     181F  3400               	retlw	0
   304     1820  347A               	retlw	122
   305     1821  3444               	retlw	68
   306     1822  3400               	retlw	0
   307     1823  3440               	retlw	64
   308     1824  341C               	retlw	28
   309     1825  3446               	retlw	70
   310     1826  3400               	retlw	0
   311     1827  3450               	retlw	80
   312     1828  34C3               	retlw	195
   313     1829  3447               	retlw	71
   314     182A  3400               	retlw	0
   315     182B  3424               	retlw	36
   316     182C  3474               	retlw	116
   317     182D  3449               	retlw	73
   318     182E  3480               	retlw	128
   319     182F  3496               	retlw	150
   320     1830  3418               	retlw	24
   321     1831  344B               	retlw	75
   322     1832  3420               	retlw	32
   323     1833  34BC               	retlw	188
   324     1834  34BE               	retlw	190
   325     1835  344C               	retlw	76
   326     1836  3428               	retlw	40
   327     1837  346B               	retlw	107
   328     1838  346E               	retlw	110
   329     1839  344E               	retlw	78
   330     183A  34F9               	retlw	249
   331     183B  3402               	retlw	2
   332     183C  3415               	retlw	21
   333     183D  3450               	retlw	80
   334     183E  34EC               	retlw	236
   335     183F  3478               	retlw	120
   336     1840  34AD               	retlw	173
   337     1841  3460               	retlw	96
   338     1842  34CA               	retlw	202
   339     1843  34F2               	retlw	242
   340     1844  3449               	retlw	73
   341     1845  3471               	retlw	113
   342     1846                     __end_of__powers_:
   343     1846                     __npowers_:
   344     1846  3400               	retlw	0
   345     1847  3400               	retlw	0
   346     1848  3480               	retlw	128
   347     1849  343F               	retlw	63
   348     184A  34CD               	retlw	205
   349     184B  34CC               	retlw	204
   350     184C  34CC               	retlw	204
   351     184D  343D               	retlw	61
   352     184E  340A               	retlw	10
   353     184F  34D7               	retlw	215
   354     1850  3423               	retlw	35
   355     1851  343C               	retlw	60
   356     1852  346F               	retlw	111
   357     1853  3412               	retlw	18
   358     1854  3483               	retlw	131
   359     1855  343A               	retlw	58
   360     1856  3417               	retlw	23
   361     1857  34B7               	retlw	183
   362     1858  34D1               	retlw	209
   363     1859  3438               	retlw	56
   364     185A  34AC               	retlw	172
   365     185B  34C5               	retlw	197
   366     185C  3427               	retlw	39
   367     185D  3437               	retlw	55
   368     185E  34BD               	retlw	189
   369     185F  3437               	retlw	55
   370     1860  3486               	retlw	134
   371     1861  3435               	retlw	53
   372     1862  3495               	retlw	149
   373     1863  34BF               	retlw	191
   374     1864  34D6               	retlw	214
   375     1865  3433               	retlw	51
   376     1866  3477               	retlw	119
   377     1867  34CC               	retlw	204
   378     1868  342B               	retlw	43
   379     1869  3432               	retlw	50
   380     186A  345F               	retlw	95
   381     186B  3470               	retlw	112
   382     186C  3489               	retlw	137
   383     186D  3430               	retlw	48
   384     186E  34FF               	retlw	255
   385     186F  34E6               	retlw	230
   386     1870  34DB               	retlw	219
   387     1871  342E               	retlw	46
   388     1872  3408               	retlw	8
   389     1873  34E5               	retlw	229
   390     1874  343C               	retlw	60
   391     1875  341E               	retlw	30
   392     1876  3460               	retlw	96
   393     1877  3442               	retlw	66
   394     1878  34A2               	retlw	162
   395     1879  340D               	retlw	13
   396     187A                     __end_of__npowers_:
   397     187A                     _dpowers:
   398     187A  3401               	retlw	1
   399     187B  3400               	retlw	0
   400     187C  3400               	retlw	0
   401     187D  3400               	retlw	0
   402     187E  340A               	retlw	10
   403     187F  3400               	retlw	0
   404     1880  3400               	retlw	0
   405     1881  3400               	retlw	0
   406     1882  3464               	retlw	100
   407     1883  3400               	retlw	0
   408     1884  3400               	retlw	0
   409     1885  3400               	retlw	0
   410     1886  34E8               	retlw	232
   411     1887  3403               	retlw	3
   412     1888  3400               	retlw	0
   413     1889  3400               	retlw	0
   414     188A  3410               	retlw	16
   415     188B  3427               	retlw	39
   416     188C  3400               	retlw	0
   417     188D  3400               	retlw	0
   418     188E  34A0               	retlw	160
   419     188F  3486               	retlw	134
   420     1890  3401               	retlw	1
   421     1891  3400               	retlw	0
   422     1892  3440               	retlw	64
   423     1893  3442               	retlw	66
   424     1894  340F               	retlw	15
   425     1895  3400               	retlw	0
   426     1896  3480               	retlw	128
   427     1897  3496               	retlw	150
   428     1898  3498               	retlw	152
   429     1899  3400               	retlw	0
   430     189A  3400               	retlw	0
   431     189B  34E1               	retlw	225
   432     189C  34F5               	retlw	245
   433     189D  3405               	retlw	5
   434     189E  3400               	retlw	0
   435     189F  34CA               	retlw	202
   436     18A0  349A               	retlw	154
   437     18A1  343B               	retlw	59
   438     18A2                     __end_of_dpowers:
   439     0019                     _TXREG	set	25
   440     0018                     _RCSTA	set	24
   441     001E                     _ADRESH	set	30
   442     001F                     _ADCON0	set	31
   443     003B                     _RC3	set	59
   444     004A                     _RE2	set	74
   445     003A                     _RC2	set	58
   446     0048                     _RE0	set	72
   447     0038                     _RC0	set	56
   448     0049                     _RE1	set	73
   449     0039                     _RC1	set	57
   450     00FA                     _GO	set	250
   451     002C                     _RA4	set	44
   452     0034                     _RB4	set	52
   453     0035                     _RB5	set	53
   454     0030                     _RB0	set	48
   455     0031                     _RB1	set	49
   456     0032                     _RB2	set	50
   457     0033                     _RB3	set	51
   458     0098                     _TXSTA	set	152
   459     0099                     _SPBRG	set	153
   460     009F                     _ADCON1	set	159
   461     0086                     _TRISBbits	set	134
   462     04C1                     _TRMT	set	1217
   463     043F                     _TRISC7	set	1087
   464     043E                     _TRISC6	set	1086
   465     0429                     _TRISA1	set	1065
   466     043B                     _TRISC3	set	1083
   467     0438                     _TRISC0	set	1080
   468     044A                     _TRISE2	set	1098
   469     043A                     _TRISC2	set	1082
   470     0439                     _TRISC1	set	1081
   471     0449                     _TRISE1	set	1097
   472     0448                     _TRISE0	set	1096
   473     042C                     _TRISA4	set	1068
   474     18A2                     STR_22:
   475     18A2  3420               	retlw	32	;' '
   476     18A3  3420               	retlw	32	;' '
   477     18A4  3420               	retlw	32	;' '
   478     18A5  3420               	retlw	32	;' '
   479     18A6  3420               	retlw	32	;' '
   480     18A7  3420               	retlw	32	;' '
   481     18A8  3420               	retlw	32	;' '
   482     18A9  3420               	retlw	32	;' '
   483     18AA  3420               	retlw	32	;' '
   484     18AB  3420               	retlw	32	;' '
   485     18AC  3420               	retlw	32	;' '
   486     18AD  3420               	retlw	32	;' '
   487     18AE  3420               	retlw	32	;' '
   488     18AF  3420               	retlw	32	;' '
   489     18B0  3400               	retlw	0
   490     18B1                     STR_24:
   491     18B1  3444               	retlw	68	;'D'
   492     18B2  3443               	retlw	67	;'C'
   493     18B3  3420               	retlw	32	;' '
   494     18B4  3453               	retlw	83	;'S'
   495     18B5  3445               	retlw	69	;'E'
   496     18B6  3452               	retlw	82	;'R'
   497     18B7  3456               	retlw	86	;'V'
   498     18B8  344F               	retlw	79	;'O'
   499     18B9  3420               	retlw	32	;' '
   500     18BA  3445               	retlw	69	;'E'
   501     18BB  3452               	retlw	82	;'R'
   502     18BC  3452               	retlw	82	;'R'
   503     18BD  344F               	retlw	79	;'O'
   504     18BE  3452               	retlw	82	;'R'
   505     18BF  3400               	retlw	0
   506     18C0                     STR_1:
   507     18C0  3448               	retlw	72	;'H'
   508     18C1  3469               	retlw	105	;'i'
   509     18C2  344B               	retlw	75	;'K'
   510     18C3  342D               	retlw	45	;'-'
   511     18C4  3455               	retlw	85	;'U'
   512     18C5  345A               	retlw	90	;'Z'
   513     18C6  344D               	retlw	77	;'M'
   514     18C7  3441               	retlw	65	;'A'
   515     18C8  344E               	retlw	78	;'N'
   516     18C9  344C               	retlw	76	;'L'
   517     18CA  3441               	retlw	65	;'A'
   518     18CB  3452               	retlw	82	;'R'
   519     18CC  3400               	retlw	0
   520     18CD                     STR_8:
   521     18CD  3446               	retlw	70	;'F'
   522     18CE  3457               	retlw	87	;'W'
   523     18CF  3444               	retlw	68	;'D'
   524     18D0  3420               	retlw	32	;' '
   525     18D1  344C               	retlw	76	;'L'
   526     18D2  3449               	retlw	73	;'I'
   527     18D3  344D               	retlw	77	;'M'
   528     18D4  3449               	retlw	73	;'I'
   529     18D5  3454               	retlw	84	;'T'
   530     18D6  3400               	retlw	0
   531     18D7                     STR_14:
   532     18D7  3452               	retlw	82	;'R'
   533     18D8  3445               	retlw	69	;'E'
   534     18D9  3457               	retlw	87	;'W'
   535     18DA  3420               	retlw	32	;' '
   536     18DB  344C               	retlw	76	;'L'
   537     18DC  3449               	retlw	73	;'I'
   538     18DD  344D               	retlw	77	;'M'
   539     18DE  3449               	retlw	73	;'I'
   540     18DF  3454               	retlw	84	;'T'
   541     18E0  3400               	retlw	0
   542     18E1                     STR_10:
   543     18E1  3446               	retlw	70	;'F'
   544     18E2  3445               	retlw	69	;'E'
   545     18E3  3441               	retlw	65	;'A'
   546     18E4  3444               	retlw	68	;'D'
   547     18E5  3420               	retlw	32	;' '
   548     18E6  3434               	retlw	52	;'4'
   549     18E7  3430               	retlw	48	;'0'
   550     18E8  3430               	retlw	48	;'0'
   551     18E9  3400               	retlw	0
   552     18EA                     STR_11:
   553     18EA  3473               	retlw	115	;'s'
   554     18EB  342D               	retlw	45	;'-'
   555     18EC  3432               	retlw	50	;'2'
   556     18ED  3435               	retlw	53	;'5'
   557     18EE  3435               	retlw	53	;'5'
   558     18EF  340D               	retlw	13
   559     18F0  340A               	retlw	10
   560     18F1  3400               	retlw	0
   561     18F2                     STR_6:
   562     18F2  3466               	retlw	102	;'f'
   563     18F3  346C               	retlw	108	;'l'
   564     18F4  346F               	retlw	111	;'o'
   565     18F5  3461               	retlw	97	;'a'
   566     18F6  3474               	retlw	116	;'t'
   567     18F7  343A               	retlw	58	;':'
   568     18F8  3420               	retlw	32	;' '
   569     18F9  3400               	retlw	0
   570     18FA                     STR_2:
   571     18FA  3450               	retlw	80	;'P'
   572     18FB  3472               	retlw	114	;'r'
   573     18FC  346F               	retlw	111	;'o'
   574     18FD  346A               	retlw	106	;'j'
   575     18FE  3465               	retlw	101	;'e'
   576     18FF  3463               	retlw	99	;'c'
   577     1900  3474               	retlw	116	;'t'
   578     1901  3400               	retlw	0
   579     1902                     STR_17:
   580     1902  3473               	retlw	115	;'s'
   581     1903  3432               	retlw	50	;'2'
   582     1904  3435               	retlw	53	;'5'
   583     1905  3435               	retlw	53	;'5'
   584     1906  340D               	retlw	13
   585     1907  340A               	retlw	10
   586     1908  3400               	retlw	0
   587     1909                     STR_4:
   588     1909  3472               	retlw	114	;'r'
   589     190A  3461               	retlw	97	;'a'
   590     190B  3474               	retlw	116	;'t'
   591     190C  3465               	retlw	101	;'e'
   592     190D  343A               	retlw	58	;':'
   593     190E  3420               	retlw	32	;' '
   594     190F  3400               	retlw	0
   595     1910                     STR_13:
   596     1910  3473               	retlw	115	;'s'
   597     1911  3425               	retlw	37	;'%'
   598     1912  3464               	retlw	100	;'d'
   599     1913  340D               	retlw	13
   600     1914  340A               	retlw	10
   601     1915  3400               	retlw	0
   602     1916                     STR_7:
   603     1916  3425               	retlw	37	;'%'
   604     1917  3433               	retlw	51	;'3'
   605     1918  342E               	retlw	46	;'.'
   606     1919  3431               	retlw	49	;'1'
   607     191A  3466               	retlw	102	;'f'
   608     191B  3400               	retlw	0
   609     191C                     STR_9:
   610     191C  3473               	retlw	115	;'s'
   611     191D  3430               	retlw	48	;'0'
   612     191E  340D               	retlw	13
   613     191F  340A               	retlw	10
   614     1920  3400               	retlw	0
   615     1921                     STR_12:
   616     1921  3446               	retlw	70	;'F'
   617     1922  3457               	retlw	87	;'W'
   618     1923  3444               	retlw	68	;'D'
   619     1924  3420               	retlw	32	;' '
   620     1925  3400               	retlw	0
   621     1926                     STR_18:
   622     1926  3452               	retlw	82	;'R'
   623     1927  3445               	retlw	69	;'E'
   624     1928  3457               	retlw	87	;'W'
   625     1929  3420               	retlw	32	;' '
   626     192A  3400               	retlw	0
   627     192B                     STR_20:
   628     192B  3453               	retlw	83	;'S'
   629     192C  3454               	retlw	84	;'T'
   630     192D  344F               	retlw	79	;'O'
   631     192E  3450               	retlw	80	;'P'
   632     192F  3400               	retlw	0
   633     1930                     STR_5:
   634     1930  3425               	retlw	37	;'%'
   635     1931  3433               	retlw	51	;'3'
   636     1932  3475               	retlw	117	;'u'
   637     1933  3400               	retlw	0
   638     1934                     STR_3:
   639     1934  3456               	retlw	86	;'V'
   640     1935  3432               	retlw	50	;'2'
   641     1936  3400               	retlw	0
   642     191C                     
   643                           	psect	cinit
   644     07FC                     start_initialization:	
   645                           ; #config settings
   646                           
   647     07FC                     __initialization:
   648     07FC                     end_of_initialization:	
   649                           ;End of C runtime variable initialization code
   650                           
   651     07FC                     __end_of__initialization:
   652     07FC  0183               	clrf	3
   653     07FD  160A  118A  2D3A   	ljmp	_main	;jump to C main() function
   654                           
   655                           	psect	cstackBANK3
   656     0190                     __pcstackBANK3:
   657     0190                     main@combinedText:
   658                           
   659                           ; 20 bytes @ 0x0
   660     0190                     	ds	20
   661     01A4                     main@combinedText_160:
   662                           
   663                           ; 20 bytes @ 0x14
   664     01A4                     	ds	20
   665     01B8                     main@floatVal:
   666                           
   667                           ; 4 bytes @ 0x28
   668     01B8                     	ds	4
   669     01BC                     main@adcValue1:
   670                           
   671                           ; 2 bytes @ 0x2C
   672     01BC                     	ds	2
   673     01BE                     main@adcValue2:
   674                           
   675                           ; 2 bytes @ 0x2E
   676     01BE                     	ds	2
   677     01C0                     main@negativeDisplayValue:
   678                           
   679                           ; 2 bytes @ 0x30
   680     01C0                     	ds	2
   681     01C2                     main@adcString1:
   682                           
   683                           ; 4 bytes @ 0x32
   684     01C2                     	ds	4
   685     01C6                     main@adcString2:
   686                           
   687                           ; 4 bytes @ 0x36
   688     01C6                     	ds	4
   689     01CA                     main@displayValue:
   690                           
   691                           ; 2 bytes @ 0x3A
   692     01CA                     	ds	2
   693                           
   694                           	psect	cstackBANK1
   695     00A0                     __pcstackBANK1:
   696     00A0                     ??_sprintf:
   697                           
   698                           ; 1 bytes @ 0x0
   699     00A0                     	ds	5
   700     00A5                     _sprintf$874:
   701                           
   702                           ; 4 bytes @ 0x5
   703     00A5                     	ds	4
   704     00A9                     sprintf@ap:
   705                           
   706                           ; 1 bytes @ 0x9
   707     00A9                     	ds	1
   708     00AA                     sprintf@flag:
   709                           
   710                           ; 2 bytes @ 0xA
   711     00AA                     	ds	2
   712     00AC                     sprintf@width:
   713                           
   714                           ; 2 bytes @ 0xC
   715     00AC                     	ds	2
   716     00AE                     sprintf@tmpval:
   717                           
   718                           ; 4 bytes @ 0xE
   719     00AE                     	ds	4
   720     00B2                     sprintf@val:
   721                           
   722                           ; 4 bytes @ 0x12
   723     00B2                     	ds	4
   724     00B6                     sprintf@eexp:
   725                           
   726                           ; 2 bytes @ 0x16
   727     00B6                     	ds	2
   728     00B8                     sprintf@fval:
   729                           
   730                           ; 4 bytes @ 0x18
   731     00B8                     	ds	4
   732     00BC                     sprintf@sp:
   733                           
   734                           ; 1 bytes @ 0x1C
   735     00BC                     	ds	1
   736     00BD                     sprintf@prec:
   737                           
   738                           ; 2 bytes @ 0x1D
   739     00BD                     	ds	2
   740     00BF                     sprintf@c:
   741                           
   742                           ; 1 bytes @ 0x1F
   743     00BF                     	ds	1
   744     00C0                     ??_main:
   745                           
   746                           ; 1 bytes @ 0x20
   747     00C0                     	ds	3
   748                           
   749                           	psect	cstackCOMMON
   750     0070                     __pcstackCOMMON:
   751     0070                     ?_isdigit:
   752     0070                     ?___fleq:	
   753                           ; 1 bit 
   754                           
   755     0070                     ?___flge:	
   756                           ; 1 bit 
   757                           
   758     0070                     ?_UART_Initialize:	
   759                           ; 1 bit 
   760                           
   761     0070                     ??_UART_Initialize:	
   762                           ; 1 bytes @ 0x0
   763                           
   764     0070                     ??_isdigit:	
   765                           ; 1 bytes @ 0x0
   766                           
   767     0070                     ?_Lcd_Port:	
   768                           ; 1 bytes @ 0x0
   769                           
   770     0070                     ??_Lcd_Port:	
   771                           ; 1 bytes @ 0x0
   772                           
   773     0070                     ?_Lcd_Cmd:	
   774                           ; 1 bytes @ 0x0
   775                           
   776     0070                     ?_Lcd_Clear:	
   777                           ; 1 bytes @ 0x0
   778                           
   779     0070                     ?_Lcd_Init:	
   780                           ; 1 bytes @ 0x0
   781                           
   782     0070                     ?_Lcd_Write_Char:	
   783                           ; 1 bytes @ 0x0
   784                           
   785     0070                     ?_UART_Write:	
   786                           ; 1 bytes @ 0x0
   787                           
   788     0070                     ??_UART_Write:	
   789                           ; 1 bytes @ 0x0
   790                           
   791     0070                     ?___lbmod:	
   792                           ; 1 bytes @ 0x0
   793                           
   794     0070                     ?__Umul8_16:	
   795                           ; 1 bytes @ 0x0
   796                           
   797     0070                     ?_main:	
   798                           ; 2 bytes @ 0x0
   799                           
   800     0070                     ?___wmul:	
   801                           ; 2 bytes @ 0x0
   802                           
   803     0070                     ?___awmod:	
   804                           ; 2 bytes @ 0x0
   805                           
   806     0070                     ?__tdiv_to_l_:	
   807                           ; 2 bytes @ 0x0
   808                           
   809     0070                     ?__div_to_l_:	
   810                           ; 4 bytes @ 0x0
   811                           
   812     0070                     ?___lldiv:	
   813                           ; 4 bytes @ 0x0
   814                           
   815     0070                     ?___flneg:	
   816                           ; 4 bytes @ 0x0
   817                           
   818     0070                     ?___xxtofl:	
   819                           ; 4 bytes @ 0x0
   820                           
   821     0070                     Lcd_Port@a:	
   822                           ; 4 bytes @ 0x0
   823                           
   824     0070                     UART_Write@data:	
   825                           ; 1 bytes @ 0x0
   826                           
   827     0070                     ___lbmod@divisor:	
   828                           ; 1 bytes @ 0x0
   829                           
   830     0070                     __Umul8_16@multiplicand:	
   831                           ; 1 bytes @ 0x0
   832                           
   833     0070                     _isdigit$689:	
   834                           ; 1 bytes @ 0x0
   835                           
   836     0070                     ___wmul@multiplier:	
   837                           ; 1 bytes @ 0x0
   838                           
   839     0070                     ___awmod@divisor:	
   840                           ; 2 bytes @ 0x0
   841                           
   842     0070                     ___lldiv@divisor:	
   843                           ; 2 bytes @ 0x0
   844                           
   845     0070                     __div_to_l_@f1:	
   846                           ; 4 bytes @ 0x0
   847                           
   848     0070                     ___fleq@ff1:	
   849                           ; 4 bytes @ 0x0
   850                           
   851     0070                     ___flge@ff1:	
   852                           ; 4 bytes @ 0x0
   853                           
   854     0070                     ___flneg@f1:	
   855                           ; 4 bytes @ 0x0
   856                           
   857     0070                     __tdiv_to_l_@f1:	
   858                           ; 4 bytes @ 0x0
   859                           
   860     0070                     ___xxtofl@val:	
   861                           ; 4 bytes @ 0x0
   862                           
   863                           
   864                           ; 4 bytes @ 0x0
   865     0070                     	ds	1
   866     0071                     ?_UART_Write_Text:
   867     0071                     ??_Lcd_Cmd:	
   868                           ; 1 bytes @ 0x1
   869                           
   870     0071                     ??_Lcd_Write_Char:	
   871                           ; 1 bytes @ 0x1
   872                           
   873     0071                     ??___lbmod:	
   874                           ; 1 bytes @ 0x1
   875                           
   876     0071                     isdigit@c:	
   877                           ; 1 bytes @ 0x1
   878                           
   879     0071                     UART_Write_Text@text:	
   880                           ; 1 bytes @ 0x1
   881                           
   882                           
   883                           ; 2 bytes @ 0x1
   884     0071                     	ds	1
   885     0072                     ??__Umul8_16:
   886     0072                     Lcd_Write_Char@temp:	
   887                           ; 1 bytes @ 0x2
   888                           
   889     0072                     ___wmul@multiplicand:	
   890                           ; 1 bytes @ 0x2
   891                           
   892     0072                     ___awmod@dividend:	
   893                           ; 2 bytes @ 0x2
   894                           
   895                           
   896                           ; 2 bytes @ 0x2
   897     0072                     	ds	1
   898     0073                     ??_UART_Write_Text:
   899     0073                     Lcd_Cmd@a:	
   900                           ; 1 bytes @ 0x3
   901                           
   902     0073                     Lcd_Write_Char@y:	
   903                           ; 1 bytes @ 0x3
   904                           
   905     0073                     ___lbmod@dividend:	
   906                           ; 1 bytes @ 0x3
   907                           
   908                           
   909                           ; 1 bytes @ 0x3
   910     0073                     	ds	1
   911     0074                     ??_Lcd_Clear:
   912     0074                     ?_Lcd_Set_Cursor:	
   913                           ; 1 bytes @ 0x4
   914                           
   915     0074                     ??_Lcd_Init:	
   916                           ; 1 bytes @ 0x4
   917                           
   918     0074                     ??___wmul:	
   919                           ; 1 bytes @ 0x4
   920                           
   921     0074                     ??___awmod:	
   922                           ; 1 bytes @ 0x4
   923                           
   924     0074                     ??___flneg:	
   925                           ; 1 bytes @ 0x4
   926                           
   927     0074                     ??___xxtofl:	
   928                           ; 1 bytes @ 0x4
   929                           
   930     0074                     Lcd_Set_Cursor@b:	
   931                           ; 1 bytes @ 0x4
   932                           
   933     0074                     Lcd_Write_Char@a:	
   934                           ; 1 bytes @ 0x4
   935                           
   936     0074                     ___awmod@counter:	
   937                           ; 1 bytes @ 0x4
   938                           
   939     0074                     ___lbmod@counter:	
   940                           ; 1 bytes @ 0x4
   941                           
   942     0074                     ___wmul@product:	
   943                           ; 1 bytes @ 0x4
   944                           
   945     0074                     __Umul8_16@product:	
   946                           ; 2 bytes @ 0x4
   947                           
   948     0074                     ___lldiv@dividend:	
   949                           ; 2 bytes @ 0x4
   950                           
   951     0074                     __div_to_l_@f2:	
   952                           ; 4 bytes @ 0x4
   953                           
   954     0074                     ___fleq@ff2:	
   955                           ; 4 bytes @ 0x4
   956                           
   957     0074                     ___flge@ff2:	
   958                           ; 4 bytes @ 0x4
   959                           
   960     0074                     __tdiv_to_l_@f2:	
   961                           ; 4 bytes @ 0x4
   962                           
   963                           
   964                           ; 4 bytes @ 0x4
   965     0074                     	ds	1
   966     0075                     ??_Lcd_Set_Cursor:
   967     0075                     ?_Lcd_Write_String:	
   968                           ; 1 bytes @ 0x5
   969                           
   970     0075                     ___awmod@sign:	
   971                           ; 1 bytes @ 0x5
   972                           
   973     0075                     ___lbmod@rem:	
   974                           ; 1 bytes @ 0x5
   975                           
   976     0075                     Lcd_Write_String@a:	
   977                           ; 1 bytes @ 0x5
   978                           
   979                           
   980                           ; 2 bytes @ 0x5
   981     0075                     	ds	1
   982     0076                     ?___lbdiv:
   983     0076                     ?___awdiv:	
   984                           ; 1 bytes @ 0x6
   985                           
   986     0076                     Lcd_Set_Cursor@a:	
   987                           ; 2 bytes @ 0x6
   988                           
   989     0076                     ___lbdiv@divisor:	
   990                           ; 1 bytes @ 0x6
   991                           
   992     0076                     UART_Write_Text@i:	
   993                           ; 1 bytes @ 0x6
   994                           
   995     0076                     ___awdiv@divisor:	
   996                           ; 2 bytes @ 0x6
   997                           
   998     0076                     __Umul8_16@word_mpld:	
   999                           ; 2 bytes @ 0x6
  1000                           
  1001                           
  1002                           ; 2 bytes @ 0x6
  1003     0076                     	ds	1
  1004     0077                     ??_Lcd_Write_String:
  1005     0077                     ??___lbdiv:	
  1006                           ; 1 bytes @ 0x7
  1007                           
  1008     0077                     Lcd_Set_Cursor@z:	
  1009                           ; 1 bytes @ 0x7
  1010                           
  1011     0077                     ___lbdiv@dividend:	
  1012                           ; 1 bytes @ 0x7
  1013                           
  1014                           
  1015                           ; 1 bytes @ 0x7
  1016     0077                     	ds	1
  1017     0078                     ??__tdiv_to_l_:
  1018     0078                     ??__div_to_l_:	
  1019                           ; 1 bytes @ 0x8
  1020                           
  1021     0078                     ??___lldiv:	
  1022                           ; 1 bytes @ 0x8
  1023                           
  1024     0078                     ??___fleq:	
  1025                           ; 1 bytes @ 0x8
  1026                           
  1027     0078                     ??___flge:	
  1028                           ; 1 bytes @ 0x8
  1029                           
  1030     0078                     Lcd_Set_Cursor@y:	
  1031                           ; 1 bytes @ 0x8
  1032                           
  1033     0078                     ___lbdiv@counter:	
  1034                           ; 1 bytes @ 0x8
  1035                           
  1036     0078                     __Umul8_16@multiplier:	
  1037                           ; 1 bytes @ 0x8
  1038                           
  1039     0078                     ___xxtofl@sign:	
  1040                           ; 1 bytes @ 0x8
  1041                           
  1042     0078                     ___awdiv@dividend:	
  1043                           ; 1 bytes @ 0x8
  1044                           
  1045                           
  1046                           ; 2 bytes @ 0x8
  1047     0078                     	ds	1
  1048     0079                     Lcd_Set_Cursor@temp:
  1049     0079                     ___lbdiv@quotient:	
  1050                           ; 1 bytes @ 0x9
  1051                           
  1052     0079                     ___xxtofl@exp:	
  1053                           ; 1 bytes @ 0x9
  1054                           
  1055     0079                     ___lldiv@quotient:	
  1056                           ; 1 bytes @ 0x9
  1057                           
  1058                           
  1059                           ; 4 bytes @ 0x9
  1060     0079                     	ds	1
  1061     007A                     ??___awdiv:
  1062     007A                     ___awdiv@counter:	
  1063                           ; 1 bytes @ 0xA
  1064                           
  1065     007A                     Lcd_Write_String@i:	
  1066                           ; 1 bytes @ 0xA
  1067                           
  1068     007A                     ___xxtofl@arg:	
  1069                           ; 2 bytes @ 0xA
  1070                           
  1071                           
  1072                           ; 4 bytes @ 0xA
  1073     007A                     	ds	1
  1074     007B                     ___awdiv@sign:
  1075                           
  1076                           ; 1 bytes @ 0xB
  1077     007B                     	ds	1
  1078     007C                     ___awdiv@quotient:
  1079                           
  1080                           ; 2 bytes @ 0xC
  1081     007C                     	ds	1
  1082     007D                     ___lldiv@counter:
  1083                           
  1084                           ; 1 bytes @ 0xD
  1085     007D                     	ds	1
  1086     007E                     ??___flsub:
  1087                           
  1088                           	psect	cstackBANK0
  1089     0020                     __pcstackBANK0:	
  1090                           ; 1 bytes @ 0xE
  1091                           
  1092     0020                     ?___llmod:
  1093     0020                     ?___fldiv:	
  1094                           ; 4 bytes @ 0x0
  1095                           
  1096     0020                     ?___flmul:	
  1097                           ; 4 bytes @ 0x0
  1098                           
  1099     0020                     __div_to_l_@quot:	
  1100                           ; 4 bytes @ 0x0
  1101                           
  1102     0020                     __tdiv_to_l_@quot:	
  1103                           ; 4 bytes @ 0x0
  1104                           
  1105     0020                     ___llmod@divisor:	
  1106                           ; 4 bytes @ 0x0
  1107                           
  1108     0020                     ___fldiv@a:	
  1109                           ; 4 bytes @ 0x0
  1110                           
  1111     0020                     ___flmul@b:	
  1112                           ; 4 bytes @ 0x0
  1113                           
  1114                           
  1115                           ; 4 bytes @ 0x0
  1116     0020                     	ds	4
  1117     0024                     __div_to_l_@cntr:
  1118     0024                     __tdiv_to_l_@cntr:	
  1119                           ; 1 bytes @ 0x4
  1120                           
  1121     0024                     ___llmod@dividend:	
  1122                           ; 1 bytes @ 0x4
  1123                           
  1124     0024                     ___fldiv@b:	
  1125                           ; 4 bytes @ 0x4
  1126                           
  1127     0024                     ___flmul@a:	
  1128                           ; 4 bytes @ 0x4
  1129                           
  1130                           
  1131                           ; 4 bytes @ 0x4
  1132     0024                     	ds	1
  1133     0025                     __div_to_l_@exp1:
  1134     0025                     __tdiv_to_l_@exp1:	
  1135                           ; 1 bytes @ 0x5
  1136                           
  1137                           
  1138                           ; 1 bytes @ 0x5
  1139     0025                     	ds	3
  1140     0028                     ??___llmod:
  1141     0028                     ??___fldiv:	
  1142                           ; 1 bytes @ 0x8
  1143                           
  1144     0028                     ??___flmul:	
  1145                           ; 1 bytes @ 0x8
  1146                           
  1147                           
  1148                           ; 1 bytes @ 0x8
  1149     0028                     	ds	1
  1150     0029                     ___llmod@counter:
  1151                           
  1152                           ; 1 bytes @ 0x9
  1153     0029                     	ds	4
  1154     002D                     ___flmul@sign:
  1155     002D                     ___fldiv@rem:	
  1156                           ; 1 bytes @ 0xD
  1157                           
  1158                           
  1159                           ; 4 bytes @ 0xD
  1160     002D                     	ds	1
  1161     002E                     ___flmul@aexp:
  1162                           
  1163                           ; 1 bytes @ 0xE
  1164     002E                     	ds	1
  1165     002F                     ___flmul@grs:
  1166                           
  1167                           ; 4 bytes @ 0xF
  1168     002F                     	ds	2
  1169     0031                     ___fldiv@sign:
  1170                           
  1171                           ; 1 bytes @ 0x11
  1172     0031                     	ds	1
  1173     0032                     ___fldiv@new_exp:
  1174                           
  1175                           ; 2 bytes @ 0x12
  1176     0032                     	ds	1
  1177     0033                     ___flmul@bexp:
  1178                           
  1179                           ; 1 bytes @ 0x13
  1180     0033                     	ds	1
  1181     0034                     ___fldiv@grs:
  1182     0034                     ___flmul@prod:	
  1183                           ; 4 bytes @ 0x14
  1184                           
  1185                           
  1186                           ; 4 bytes @ 0x14
  1187     0034                     	ds	4
  1188     0038                     ___fldiv@bexp:
  1189     0038                     ___flmul@temp:	
  1190                           ; 1 bytes @ 0x18
  1191                           
  1192                           
  1193                           ; 2 bytes @ 0x18
  1194     0038                     	ds	1
  1195     0039                     ___fldiv@aexp:
  1196                           
  1197                           ; 1 bytes @ 0x19
  1198     0039                     	ds	1
  1199     003A                     ?_fround:
  1200     003A                     ?_scale:	
  1201                           ; 4 bytes @ 0x1A
  1202                           
  1203                           
  1204                           ; 4 bytes @ 0x1A
  1205     003A                     	ds	4
  1206     003E                     ??_fround:
  1207     003E                     ??_scale:	
  1208                           ; 1 bytes @ 0x1E
  1209                           
  1210                           
  1211                           ; 1 bytes @ 0x1E
  1212     003E                     	ds	5
  1213     0043                     _fround$872:
  1214                           
  1215                           ; 4 bytes @ 0x23
  1216     0043                     	ds	4
  1217     0047                     _fround$871:
  1218                           
  1219                           ; 4 bytes @ 0x27
  1220     0047                     	ds	1
  1221     0048                     _scale$873:
  1222                           
  1223                           ; 4 bytes @ 0x28
  1224     0048                     	ds	3
  1225     004B                     fround@prec:
  1226                           
  1227                           ; 1 bytes @ 0x2B
  1228     004B                     	ds	1
  1229     004C                     ?___fladd:
  1230     004C                     scale@scl:	
  1231                           ; 4 bytes @ 0x2C
  1232                           
  1233     004C                     ___fladd@b:	
  1234                           ; 1 bytes @ 0x2C
  1235                           
  1236                           
  1237                           ; 4 bytes @ 0x2C
  1238     004C                     	ds	1
  1239     004D                     ?___fltol:
  1240     004D                     ___fltol@f1:	
  1241                           ; 4 bytes @ 0x2D
  1242                           
  1243                           
  1244                           ; 4 bytes @ 0x2D
  1245     004D                     	ds	3
  1246     0050                     ___fladd@a:
  1247                           
  1248                           ; 4 bytes @ 0x30
  1249     0050                     	ds	1
  1250     0051                     ??___fltol:
  1251                           
  1252                           ; 1 bytes @ 0x31
  1253     0051                     	ds	3
  1254     0054                     ??___fladd:
  1255                           
  1256                           ; 1 bytes @ 0x34
  1257     0054                     	ds	1
  1258     0055                     ___fltol@sign1:
  1259                           
  1260                           ; 1 bytes @ 0x35
  1261     0055                     	ds	1
  1262     0056                     ___fltol@exp1:
  1263                           
  1264                           ; 1 bytes @ 0x36
  1265     0056                     	ds	6
  1266     005C                     ___fladd@signs:
  1267                           
  1268                           ; 1 bytes @ 0x3C
  1269     005C                     	ds	1
  1270     005D                     ___fladd@aexp:
  1271                           
  1272                           ; 1 bytes @ 0x3D
  1273     005D                     	ds	1
  1274     005E                     ___fladd@bexp:
  1275                           
  1276                           ; 1 bytes @ 0x3E
  1277     005E                     	ds	1
  1278     005F                     ___fladd@grs:
  1279                           
  1280                           ; 1 bytes @ 0x3F
  1281     005F                     	ds	1
  1282     0060                     ?___flsub:
  1283     0060                     ___flsub@a:	
  1284                           ; 4 bytes @ 0x40
  1285                           
  1286                           
  1287                           ; 4 bytes @ 0x40
  1288     0060                     	ds	4
  1289     0064                     ___flsub@b:
  1290                           
  1291                           ; 4 bytes @ 0x44
  1292     0064                     	ds	4
  1293     0068                     ?_sprintf:
  1294     0068                     sprintf@f:	
  1295                           ; 2 bytes @ 0x48
  1296                           
  1297                           
  1298                           ; 2 bytes @ 0x48
  1299     0068                     	ds	6
  1300                           
  1301                           	psect	maintext
  1302     153A                     __pmaintext:	
  1303 ;;
  1304 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1305 ;;
  1306 ;; *************** function _main *****************
  1307 ;; Defined at:
  1308 ;;		line 27 in file "main.c"
  1309 ;; Parameters:    Size  Location     Type
  1310 ;;		None
  1311 ;; Auto vars:     Size  Location     Type
  1312 ;;  combinedText   20   20[BANK3 ] unsigned char [20]
  1313 ;;  combinedText   20    0[BANK3 ] unsigned char [20]
  1314 ;;  negativeDisp    2   48[BANK3 ] int 
  1315 ;;  adcString2      4   54[BANK3 ] unsigned char [4]
  1316 ;;  adcString1      4   50[BANK3 ] unsigned char [4]
  1317 ;;  floatVal        4   40[BANK3 ] float 
  1318 ;;  adcValue2       2   46[BANK3 ] unsigned int 
  1319 ;;  adcValue1       2   44[BANK3 ] unsigned int 
  1320 ;;  displayValue    2   58[BANK3 ] unsigned int 
  1321 ;;  a               2    0        unsigned int 
  1322 ;; Return value:  Size  Location     Type
  1323 ;;                  2  109[None  ] int 
  1324 ;; Registers used:
  1325 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1326 ;; Tracked objects:
  1327 ;;		On entry : B00/0
  1328 ;;		On exit  : 300/0
  1329 ;;		Unchanged: 0/0
  1330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1331 ;;      Params:         0       0       0       0       0
  1332 ;;      Locals:         0       0       0      60       0
  1333 ;;      Temps:          0       0       3       0       0
  1334 ;;      Totals:         0       0       3      60       0
  1335 ;;Total ram usage:       63 bytes
  1336 ;; Hardware stack levels required when called: 4
  1337 ;; This function calls:
  1338 ;;		_Lcd_Clear
  1339 ;;		_Lcd_Init
  1340 ;;		_Lcd_Set_Cursor
  1341 ;;		_Lcd_Write_String
  1342 ;;		_UART_Initialize
  1343 ;;		_UART_Write_Text
  1344 ;;		___fldiv
  1345 ;;		___xxtofl
  1346 ;;		_sprintf
  1347 ;; This function is called by:
  1348 ;;		Startup code after reset
  1349 ;; This function uses a non-reentrant model
  1350 ;;
  1351                           
  1352     153A                     _main:	
  1353                           ;psect for function _main
  1354                           
  1355                           
  1356                           ;main.c: 29:   unsigned int a;;main.c: 32:   TRISBbits.TRISB0 = 0;
  1357                           
  1358                           ;incstack = 0
  1359                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1360     153A  1683               	bsf	3,5	;RP0=1, select bank1
  1361     153B  1006               	bcf	6,0	;volatile
  1362                           
  1363                           ;main.c: 33:   TRISBbits.TRISB1 = 0;
  1364     153C  1086               	bcf	6,1	;volatile
  1365                           
  1366                           ;main.c: 34:   TRISBbits.TRISB2 = 0;
  1367     153D  1106               	bcf	6,2	;volatile
  1368                           
  1369                           ;main.c: 35:   TRISBbits.TRISB3 = 0;
  1370     153E  1186               	bcf	6,3	;volatile
  1371                           
  1372                           ;main.c: 36:   TRISBbits.TRISB4 = 0;
  1373     153F  1206               	bcf	6,4	;volatile
  1374                           
  1375                           ;main.c: 37:   TRISBbits.TRISB5 = 0;
  1376     1540  1286               	bcf	6,5	;volatile
  1377                           
  1378                           ;main.c: 39:   TRISA4 = 0;
  1379     1541  1205               	bcf	5,4	;volatile
  1380                           
  1381                           ;main.c: 41:  TRISE0 = 1;
  1382     1542  1409               	bsf	9,0	;volatile
  1383                           
  1384                           ;main.c: 42:  TRISE1 = 1;
  1385     1543  1489               	bsf	9,1	;volatile
  1386                           
  1387                           ;main.c: 43:  TRISC1 = 1;
  1388     1544  1487               	bsf	7,1	;volatile
  1389                           
  1390                           ;main.c: 44:  TRISC2 = 1;
  1391     1545  1507               	bsf	7,2	;volatile
  1392                           
  1393                           ;main.c: 45:  TRISE2 = 1;
  1394     1546  1509               	bsf	9,2	;volatile
  1395                           
  1396                           ;main.c: 46:  TRISC0 = 1;
  1397     1547  1407               	bsf	7,0	;volatile
  1398                           
  1399                           ;main.c: 47:  TRISC3 = 1;
  1400     1548  1587               	bsf	7,3	;volatile
  1401                           
  1402                           ;main.c: 49:  TRISA1 = 1;
  1403     1549  1485               	bsf	5,1	;volatile
  1404                           
  1405                           ;main.c: 50:     Lcd_Init();
  1406     154A  120A  118A  2003  160A  118A  	fcall	_Lcd_Init
  1407                           
  1408                           ;main.c: 52:  TRISC6 = 0;
  1409     154F  1683               	bsf	3,5	;RP0=1, select bank1
  1410     1550  1307               	bcf	7,6	;volatile
  1411                           
  1412                           ;main.c: 53:  TRISC7 = 1;
  1413     1551  1787               	bsf	7,7	;volatile
  1414                           
  1415                           ;main.c: 59:   _delay((unsigned long)((100)*(4000000/4000.0)));
  1416     1552  3082               	movlw	130
  1417     1553  1683               	bsf	3,5	;RP0=1, select bank1
  1418     1554  1303               	bcf	3,6	;RP1=0, select bank1
  1419     1555  00C1               	movwf	(??_main^(0+128)+1)
  1420     1556  30DD               	movlw	221
  1421     1557  00C0               	movwf	??_main^(0+128)
  1422     1558                     u6797:
  1423     1558  0BC0               	decfsz	??_main^(0+128),f
  1424     1559  2D58               	goto	u6797
  1425     155A  0BC1               	decfsz	(??_main^(0+128)+1),f
  1426     155B  2D58               	goto	u6797
  1427                           
  1428                           ;main.c: 60:   RA4 = 0;
  1429     155C  1283               	bcf	3,5	;RP0=0, select bank0
  1430     155D  1303               	bcf	3,6	;RP1=0, select bank0
  1431     155E  1205               	bcf	5,4	;volatile
  1432                           
  1433                           ;main.c: 64:     Lcd_Clear();
  1434     155F  160A  158A  2338  160A  118A  	fcall	_Lcd_Clear
  1435                           
  1436                           ;main.c: 65:     Lcd_Set_Cursor(1,1);
  1437     1564  01F4               	clrf	Lcd_Set_Cursor@b
  1438     1565  0AF4               	incf	Lcd_Set_Cursor@b,f
  1439     1566  3001               	movlw	1
  1440     1567  160A  158A  2491  160A  118A  	fcall	_Lcd_Set_Cursor
  1441                           
  1442                           ;main.c: 66:     Lcd_Write_String("HiK-UZMANLAR");
  1443     156C  30C0               	movlw	low (STR_1| (0+32768))
  1444     156D  00F5               	movwf	Lcd_Write_String@a
  1445     156E  3098               	movlw	high (STR_1| (0+32768))
  1446     156F  00F6               	movwf	Lcd_Write_String@a+1
  1447     1570  160A  158A  2417  160A  118A  	fcall	_Lcd_Write_String
  1448                           
  1449                           ;main.c: 67:     Lcd_Set_Cursor(2,1);
  1450     1575  01F4               	clrf	Lcd_Set_Cursor@b
  1451     1576  0AF4               	incf	Lcd_Set_Cursor@b,f
  1452     1577  3002               	movlw	2
  1453     1578  160A  158A  2491  160A  118A  	fcall	_Lcd_Set_Cursor
  1454                           
  1455                           ;main.c: 68:     Lcd_Write_String("Project");
  1456     157D  30FA               	movlw	low (STR_2| (0+32768))
  1457     157E  00F5               	movwf	Lcd_Write_String@a
  1458     157F  3098               	movlw	high (STR_2| (0+32768))
  1459     1580  00F6               	movwf	Lcd_Write_String@a+1
  1460     1581  160A  158A  2417  160A  118A  	fcall	_Lcd_Write_String
  1461                           
  1462                           ;main.c: 69:     Lcd_Set_Cursor(2,17);
  1463     1586  3011               	movlw	17
  1464     1587  00F4               	movwf	Lcd_Set_Cursor@b
  1465     1588  3002               	movlw	2
  1466     1589  160A  158A  2491  160A  118A  	fcall	_Lcd_Set_Cursor
  1467                           
  1468                           ;main.c: 70:     Lcd_Write_String("V2");
  1469     158E  3034               	movlw	low (STR_3| (0+32768))
  1470     158F  00F5               	movwf	Lcd_Write_String@a
  1471     1590  3099               	movlw	high (STR_3| (0+32768))
  1472     1591  00F6               	movwf	Lcd_Write_String@a+1
  1473     1592  160A  158A  2417  160A  118A  	fcall	_Lcd_Write_String
  1474                           
  1475                           ;main.c: 71:     _delay((unsigned long)((1000)*(4000000/4000.0)));
  1476     1597  3006               	movlw	6
  1477     1598  1683               	bsf	3,5	;RP0=1, select bank1
  1478     1599  1303               	bcf	3,6	;RP1=0, select bank1
  1479     159A  00C2               	movwf	(??_main^(0+128)+2)
  1480     159B  3013               	movlw	19
  1481     159C  00C1               	movwf	(??_main^(0+128)+1)
  1482     159D  30AD               	movlw	173
  1483     159E  00C0               	movwf	??_main^(0+128)
  1484     159F                     u6807:
  1485     159F  0BC0               	decfsz	??_main^(0+128),f
  1486     15A0  2D9F               	goto	u6807
  1487     15A1  0BC1               	decfsz	(??_main^(0+128)+1),f
  1488     15A2  2D9F               	goto	u6807
  1489     15A3  0BC2               	decfsz	(??_main^(0+128)+2),f
  1490     15A4  2D9F               	goto	u6807
  1491                           
  1492                           ;main.c: 72:     Lcd_Clear();
  1493     15A5  160A  158A  2338  160A  118A  	fcall	_Lcd_Clear
  1494                           
  1495                           ;main.c: 77:     ADCON1 = 0x80;
  1496     15AA  3080               	movlw	128
  1497     15AB  1683               	bsf	3,5	;RP0=1, select bank1
  1498     15AC  009F               	movwf	31	;volatile
  1499                           
  1500                           ;main.c: 84:     SPBRG = ((4000000/16)/9600) - 1;
  1501     15AD  3019               	movlw	25
  1502     15AE  0099               	movwf	25	;volatile
  1503                           
  1504                           ;main.c: 85:     UART_Initialize();
  1505     15AF  160A  158A  2343  160A  118A  	fcall	_UART_Initialize
  1506                           
  1507                           ;main.c: 86: unsigned int displayValue = 0;
  1508     15B4  1683               	bsf	3,5	;RP0=1, select bank3
  1509     15B5  1703               	bsf	3,6	;RP1=1, select bank3
  1510     15B6  01CA               	clrf	main@displayValue^(0+384)
  1511     15B7  01CB               	clrf	(main@displayValue+1)^(0+384)
  1512     15B8                     l3987:
  1513                           
  1514                           ;main.c: 93:   {;main.c: 97:         ADCON0 = 0b10000001;
  1515     15B8  3081               	movlw	129
  1516     15B9  1283               	bcf	3,5	;RP0=0, select bank0
  1517     15BA  1303               	bcf	3,6	;RP1=0, select bank0
  1518     15BB  009F               	movwf	31	;volatile
  1519                           
  1520                           ;main.c: 98:         GO = 1;
  1521     15BC  151F               	bsf	31,2	;volatile
  1522     15BD                     l111:	
  1523                           ;main.c: 99:         while (GO) ;
  1524                           
  1525     15BD  191F               	btfsc	31,2	;volatile
  1526     15BE  2DBD               	goto	l111
  1527                           
  1528                           ;main.c: 100:         unsigned int adcValue1 = ADRESH;
  1529     15BF  081E               	movf	30,w	;volatile
  1530     15C0  1683               	bsf	3,5	;RP0=1, select bank1
  1531     15C1  00C0               	movwf	??_main^(0+128)
  1532     15C2  01C1               	clrf	(??_main^(0+128)+1)
  1533     15C3  0840               	movf	??_main^(0+128),w
  1534     15C4  1703               	bsf	3,6	;RP1=1, select bank3
  1535     15C5  00BC               	movwf	main@adcValue1^(0+384)
  1536     15C6  1303               	bcf	3,6	;RP1=0, select bank1
  1537     15C7  0841               	movf	(??_main+1)^(0+128),w
  1538     15C8  1703               	bsf	3,6	;RP1=1, select bank3
  1539     15C9  00BD               	movwf	(main@adcValue1+1)^(0+384)
  1540                           
  1541                           ;main.c: 103:         ADCON0 = 0b10001101;
  1542     15CA  308D               	movlw	141
  1543     15CB  1283               	bcf	3,5	;RP0=0, select bank0
  1544     15CC  1303               	bcf	3,6	;RP1=0, select bank0
  1545     15CD  009F               	movwf	31	;volatile
  1546                           
  1547                           ;main.c: 104:         GO = 1;
  1548     15CE  151F               	bsf	31,2	;volatile
  1549     15CF                     l114:	
  1550                           ;main.c: 105:         while (GO) ;
  1551                           
  1552     15CF  191F               	btfsc	31,2	;volatile
  1553     15D0  2DCF               	goto	l114
  1554                           
  1555                           ;main.c: 106:         unsigned int adcValue2 = ADRESH;
  1556     15D1  081E               	movf	30,w	;volatile
  1557     15D2  1683               	bsf	3,5	;RP0=1, select bank1
  1558     15D3  00C0               	movwf	??_main^(0+128)
  1559     15D4  01C1               	clrf	(??_main^(0+128)+1)
  1560     15D5  0840               	movf	??_main^(0+128),w
  1561     15D6  1703               	bsf	3,6	;RP1=1, select bank3
  1562     15D7  00BE               	movwf	main@adcValue2^(0+384)
  1563     15D8  1303               	bcf	3,6	;RP1=0, select bank1
  1564     15D9  0841               	movf	(??_main+1)^(0+128),w
  1565     15DA  1703               	bsf	3,6	;RP1=1, select bank3
  1566     15DB  00BF               	movwf	(main@adcValue2+1)^(0+384)
  1567                           
  1568                           ;main.c: 107:         float floatVal = adcValue2 / 255.0;
  1569     15DC  3043               	movlw	67
  1570     15DD  1283               	bcf	3,5	;RP0=0, select bank0
  1571     15DE  1303               	bcf	3,6	;RP1=0, select bank0
  1572     15DF  00A3               	movwf	___fldiv@a+3
  1573     15E0  307F               	movlw	127
  1574     15E1  00A2               	movwf	___fldiv@a+2
  1575     15E2  3000               	movlw	0
  1576     15E3  00A1               	movwf	___fldiv@a+1
  1577     15E4  3000               	movlw	0
  1578     15E5  00A0               	movwf	___fldiv@a
  1579     15E6  1683               	bsf	3,5	;RP0=1, select bank3
  1580     15E7  1703               	bsf	3,6	;RP1=1, select bank3
  1581     15E8  083E               	movf	main@adcValue2^(0+384),w
  1582     15E9  00F0               	movwf	___xxtofl@val
  1583     15EA  083F               	movf	(main@adcValue2+1)^(0+384),w
  1584     15EB  00F1               	movwf	___xxtofl@val+1
  1585     15EC  01F2               	clrf	___xxtofl@val+2
  1586     15ED  01F3               	clrf	___xxtofl@val+3
  1587     15EE  3000               	movlw	0
  1588     15EF  160A  158A  275F  160A  118A  	fcall	___xxtofl
  1589     15F4  0873               	movf	?___xxtofl+3,w
  1590     15F5  1283               	bcf	3,5	;RP0=0, select bank0
  1591     15F6  1303               	bcf	3,6	;RP1=0, select bank0
  1592     15F7  00A7               	movwf	___fldiv@b+3
  1593     15F8  0872               	movf	?___xxtofl+2,w
  1594     15F9  00A6               	movwf	___fldiv@b+2
  1595     15FA  0871               	movf	?___xxtofl+1,w
  1596     15FB  00A5               	movwf	___fldiv@b+1
  1597     15FC  0870               	movf	?___xxtofl,w
  1598     15FD  00A4               	movwf	___fldiv@b
  1599     15FE  120A  158A  202C  160A  118A  	fcall	___fldiv
  1600     1603  0823               	movf	?___fldiv+3,w
  1601     1604  1683               	bsf	3,5	;RP0=1, select bank3
  1602     1605  1703               	bsf	3,6	;RP1=1, select bank3
  1603     1606  00BB               	movwf	(main@floatVal+3)^(0+384)
  1604     1607  1283               	bcf	3,5	;RP0=0, select bank0
  1605     1608  1303               	bcf	3,6	;RP1=0, select bank0
  1606     1609  0822               	movf	?___fldiv+2,w
  1607     160A  1683               	bsf	3,5	;RP0=1, select bank3
  1608     160B  1703               	bsf	3,6	;RP1=1, select bank3
  1609     160C  00BA               	movwf	(main@floatVal+2)^(0+384)
  1610     160D  1283               	bcf	3,5	;RP0=0, select bank0
  1611     160E  1303               	bcf	3,6	;RP1=0, select bank0
  1612     160F  0821               	movf	?___fldiv+1,w
  1613     1610  1683               	bsf	3,5	;RP0=1, select bank3
  1614     1611  1703               	bsf	3,6	;RP1=1, select bank3
  1615     1612  00B9               	movwf	(main@floatVal+1)^(0+384)
  1616     1613  1283               	bcf	3,5	;RP0=0, select bank0
  1617     1614  1303               	bcf	3,6	;RP1=0, select bank0
  1618     1615  0820               	movf	?___fldiv,w
  1619     1616  1683               	bsf	3,5	;RP0=1, select bank3
  1620     1617  1703               	bsf	3,6	;RP1=1, select bank3
  1621     1618  00B8               	movwf	main@floatVal^(0+384)
  1622                           
  1623                           ;main.c: 110:         Lcd_Set_Cursor(2, 1);
  1624     1619  01F4               	clrf	Lcd_Set_Cursor@b
  1625     161A  0AF4               	incf	Lcd_Set_Cursor@b,f
  1626     161B  3002               	movlw	2
  1627     161C  160A  158A  2491  160A  118A  	fcall	_Lcd_Set_Cursor
  1628                           
  1629                           ;main.c: 111:         Lcd_Write_String("rate: ");
  1630     1621  3009               	movlw	low (STR_4| (0+32768))
  1631     1622  00F5               	movwf	Lcd_Write_String@a
  1632     1623  3099               	movlw	high (STR_4| (0+32768))
  1633     1624  00F6               	movwf	Lcd_Write_String@a+1
  1634     1625  160A  158A  2417  160A  118A  	fcall	_Lcd_Write_String
  1635                           
  1636                           ;main.c: 112:         char adcString1[4];;main.c: 113:         sprintf(adcString1, "%3u"
      +                          , adcValue1);
  1637     162A  3030               	movlw	low (STR_5| (0+32768))
  1638     162B  00E8               	movwf	sprintf@f
  1639     162C  3099               	movlw	high (STR_5| (0+32768))
  1640     162D  00E9               	movwf	sprintf@f+1
  1641     162E  1683               	bsf	3,5	;RP0=1, select bank3
  1642     162F  1703               	bsf	3,6	;RP1=1, select bank3
  1643     1630  083D               	movf	(main@adcValue1+1)^(0+384),w
  1644     1631  1283               	bcf	3,5	;RP0=0, select bank0
  1645     1632  1303               	bcf	3,6	;RP1=0, select bank0
  1646     1633  00EB               	movwf	?_sprintf+3
  1647     1634  1683               	bsf	3,5	;RP0=1, select bank3
  1648     1635  1703               	bsf	3,6	;RP1=1, select bank3
  1649     1636  083C               	movf	main@adcValue1^(0+384),w
  1650     1637  1283               	bcf	3,5	;RP0=0, select bank0
  1651     1638  1303               	bcf	3,6	;RP1=0, select bank0
  1652     1639  00EA               	movwf	?_sprintf+2
  1653     163A  30C2               	movlw	(low (main@adcString1| (0+256)))& (0+255)
  1654     163B  120A  118A  205E  160A  118A  	fcall	_sprintf
  1655                           
  1656                           ;main.c: 114:         Lcd_Set_Cursor(2, 7);
  1657     1640  3007               	movlw	7
  1658     1641  00F4               	movwf	Lcd_Set_Cursor@b
  1659     1642  3002               	movlw	2
  1660     1643  160A  158A  2491  160A  118A  	fcall	_Lcd_Set_Cursor
  1661                           
  1662                           ;main.c: 115:         Lcd_Write_String(adcString1);
  1663     1648  30C2               	movlw	(low (main@adcString1| (0+256)))& (0+255)
  1664     1649  00F5               	movwf	Lcd_Write_String@a
  1665     164A  3001               	movlw	1
  1666     164B  00F6               	movwf	Lcd_Write_String@a+1
  1667     164C  160A  158A  2417  160A  118A  	fcall	_Lcd_Write_String
  1668                           
  1669                           ;main.c: 118:         Lcd_Set_Cursor(2, 13);
  1670     1651  300D               	movlw	13
  1671     1652  00F4               	movwf	Lcd_Set_Cursor@b
  1672     1653  3002               	movlw	2
  1673     1654  160A  158A  2491  160A  118A  	fcall	_Lcd_Set_Cursor
  1674                           
  1675                           ;main.c: 119:         Lcd_Write_String("float: ");
  1676     1659  30F2               	movlw	low (STR_6| (0+32768))
  1677     165A  00F5               	movwf	Lcd_Write_String@a
  1678     165B  3098               	movlw	high (STR_6| (0+32768))
  1679     165C  00F6               	movwf	Lcd_Write_String@a+1
  1680     165D  160A  158A  2417  160A  118A  	fcall	_Lcd_Write_String
  1681                           
  1682                           ;main.c: 120:         char adcString2[4];;main.c: 121:         sprintf(adcString2, "%3.1
      +                          f", floatVal);
  1683     1662  3016               	movlw	low (STR_7| (0+32768))
  1684     1663  00E8               	movwf	sprintf@f
  1685     1664  3099               	movlw	high (STR_7| (0+32768))
  1686     1665  00E9               	movwf	sprintf@f+1
  1687     1666  1683               	bsf	3,5	;RP0=1, select bank3
  1688     1667  1703               	bsf	3,6	;RP1=1, select bank3
  1689     1668  083B               	movf	(main@floatVal+3)^(0+384),w
  1690     1669  1283               	bcf	3,5	;RP0=0, select bank0
  1691     166A  1303               	bcf	3,6	;RP1=0, select bank0
  1692     166B  00ED               	movwf	?_sprintf+5
  1693     166C  1683               	bsf	3,5	;RP0=1, select bank3
  1694     166D  1703               	bsf	3,6	;RP1=1, select bank3
  1695     166E  083A               	movf	(main@floatVal+2)^(0+384),w
  1696     166F  1283               	bcf	3,5	;RP0=0, select bank0
  1697     1670  1303               	bcf	3,6	;RP1=0, select bank0
  1698     1671  00EC               	movwf	?_sprintf+4
  1699     1672  1683               	bsf	3,5	;RP0=1, select bank3
  1700     1673  1703               	bsf	3,6	;RP1=1, select bank3
  1701     1674  0839               	movf	(main@floatVal+1)^(0+384),w
  1702     1675  1283               	bcf	3,5	;RP0=0, select bank0
  1703     1676  1303               	bcf	3,6	;RP1=0, select bank0
  1704     1677  00EB               	movwf	?_sprintf+3
  1705     1678  1683               	bsf	3,5	;RP0=1, select bank3
  1706     1679  1703               	bsf	3,6	;RP1=1, select bank3
  1707     167A  0838               	movf	main@floatVal^(0+384),w
  1708     167B  1283               	bcf	3,5	;RP0=0, select bank0
  1709     167C  1303               	bcf	3,6	;RP1=0, select bank0
  1710     167D  00EA               	movwf	?_sprintf+2
  1711     167E  30C6               	movlw	(low (main@adcString2| (0+256)))& (0+255)
  1712     167F  120A  118A  205E  160A  118A  	fcall	_sprintf
  1713                           
  1714                           ;main.c: 122:         Lcd_Set_Cursor(2, 20);
  1715     1684  3014               	movlw	20
  1716     1685  00F4               	movwf	Lcd_Set_Cursor@b
  1717     1686  3002               	movlw	2
  1718     1687  160A  158A  2491  160A  118A  	fcall	_Lcd_Set_Cursor
  1719                           
  1720                           ;main.c: 123:         Lcd_Write_String(adcString2);
  1721     168C  30C6               	movlw	(low (main@adcString2| (0+256)))& (0+255)
  1722     168D  00F5               	movwf	Lcd_Write_String@a
  1723     168E  3001               	movlw	1
  1724     168F  00F6               	movwf	Lcd_Write_String@a+1
  1725     1690  160A  158A  2417  160A  118A  	fcall	_Lcd_Write_String
  1726                           
  1727                           ;main.c: 125:         _delay((unsigned long)((500)*(4000000/4000.0)));
  1728     1695  3003               	movlw	3
  1729     1696  1683               	bsf	3,5	;RP0=1, select bank1
  1730     1697  1303               	bcf	3,6	;RP1=0, select bank1
  1731     1698  00C2               	movwf	(??_main^(0+128)+2)
  1732     1699  308A               	movlw	138
  1733     169A  00C1               	movwf	(??_main^(0+128)+1)
  1734     169B  3055               	movlw	85
  1735     169C  00C0               	movwf	??_main^(0+128)
  1736     169D                     u6817:
  1737     169D  0BC0               	decfsz	??_main^(0+128),f
  1738     169E  2E9D               	goto	u6817
  1739     169F  0BC1               	decfsz	(??_main^(0+128)+1),f
  1740     16A0  2E9D               	goto	u6817
  1741     16A1  0BC2               	decfsz	(??_main^(0+128)+2),f
  1742     16A2  2E9D               	goto	u6817
  1743                           
  1744                           ;main.c: 130:        if (RC1 == 1 && RE1==1)
  1745     16A3  1283               	bcf	3,5	;RP0=0, select bank0
  1746     16A4  1303               	bcf	3,6	;RP1=0, select bank0
  1747     16A5  1887               	btfsc	7,1	;volatile
  1748     16A6  1C89               	btfss	9,1	;volatile
  1749     16A7  2EC3               	goto	l117
  1750                           
  1751                           ;main.c: 131:         {;main.c: 132:             Lcd_Set_Cursor(1,10 );
  1752     16A8  300A               	movlw	10
  1753     16A9  00F4               	movwf	Lcd_Set_Cursor@b
  1754     16AA  3001               	movlw	1
  1755     16AB  160A  158A  2491  160A  118A  	fcall	_Lcd_Set_Cursor
  1756                           
  1757                           ;main.c: 133:             Lcd_Write_String("FWD LIMIT");
  1758     16B0  30CD               	movlw	low (STR_8| (0+32768))
  1759     16B1  00F5               	movwf	Lcd_Write_String@a
  1760     16B2  3098               	movlw	high (STR_8| (0+32768))
  1761     16B3  00F6               	movwf	Lcd_Write_String@a+1
  1762     16B4  160A  158A  2417  160A  118A  	fcall	_Lcd_Write_String
  1763                           
  1764                           ;main.c: 134:             UART_Write_Text("s0\r\n");
  1765     16B9  301C               	movlw	low (STR_9| (0+32768))
  1766     16BA  00F1               	movwf	UART_Write_Text@text
  1767     16BB  3099               	movlw	high (STR_9| (0+32768))
  1768     16BC  00F2               	movwf	UART_Write_Text@text+1
  1769     16BD  160A  158A  2454  160A  118A  	fcall	_UART_Write_Text
  1770                           
  1771                           ;main.c: 135:         }
  1772     16C2  2FCB               	goto	l4085
  1773     16C3                     l117:	
  1774                           ;main.c: 137:         else if ((RC0 == 1 && RE1==1) || RC0==1 && RE0==0)
  1775                           
  1776     16C3  1C07               	btfss	7,0	;volatile
  1777     16C4  2EC7               	goto	l123
  1778     16C5  1889               	btfsc	9,1	;volatile
  1779     16C6  2ECA               	goto	l4035
  1780     16C7                     l123:
  1781     16C7  1807               	btfsc	7,0	;volatile
  1782     16C8  1809               	btfsc	9,0	;volatile
  1783     16C9  2EE5               	goto	l119
  1784     16CA                     l4035:
  1785                           
  1786                           ;main.c: 138:         {;main.c: 139:             Lcd_Set_Cursor(1, 12);
  1787     16CA  300C               	movlw	12
  1788     16CB  00F4               	movwf	Lcd_Set_Cursor@b
  1789     16CC  3001               	movlw	1
  1790     16CD  160A  158A  2491  160A  118A  	fcall	_Lcd_Set_Cursor
  1791                           
  1792                           ;main.c: 140:             Lcd_Write_String("FEAD 400");
  1793     16D2  30E1               	movlw	low (STR_10| (0+32768))
  1794     16D3  00F5               	movwf	Lcd_Write_String@a
  1795     16D4  3098               	movlw	high (STR_10| (0+32768))
  1796     16D5  00F6               	movwf	Lcd_Write_String@a+1
  1797     16D6  160A  158A  2417  160A  118A  	fcall	_Lcd_Write_String
  1798                           
  1799                           ;main.c: 141:             UART_Write_Text("s-255\r\n");
  1800     16DB  30EA               	movlw	low (STR_11| (0+32768))
  1801     16DC  00F1               	movwf	UART_Write_Text@text
  1802     16DD  3098               	movlw	high (STR_11| (0+32768))
  1803     16DE  00F2               	movwf	UART_Write_Text@text+1
  1804     16DF  160A  158A  2454  160A  118A  	fcall	_UART_Write_Text
  1805                           
  1806                           ;main.c: 142:         }
  1807     16E4  2FCB               	goto	l4085
  1808     16E5                     l119:	
  1809                           ;main.c: 144:         else if (RE1 == 1)
  1810                           
  1811     16E5  1C89               	btfss	9,1	;volatile
  1812     16E6  2F2D               	goto	l125
  1813                           
  1814                           ;main.c: 145:         {;main.c: 146:             Lcd_Set_Cursor(2, 16);
  1815     16E7  3010               	movlw	16
  1816     16E8  00F4               	movwf	Lcd_Set_Cursor@b
  1817     16E9  3002               	movlw	2
  1818     16EA  160A  158A  2491  160A  118A  	fcall	_Lcd_Set_Cursor
  1819                           
  1820                           ;main.c: 147:              Lcd_Write_String("FWD ");
  1821     16EF  3021               	movlw	low (STR_12| (0+32768))
  1822     16F0  00F5               	movwf	Lcd_Write_String@a
  1823     16F1  3099               	movlw	high (STR_12| (0+32768))
  1824     16F2  00F6               	movwf	Lcd_Write_String@a+1
  1825     16F3  160A  158A  2417  160A  118A  	fcall	_Lcd_Write_String
  1826                           
  1827                           ;main.c: 148:     int negativeDisplayValue = -displayValue;
  1828     16F8  1683               	bsf	3,5	;RP0=1, select bank3
  1829     16F9  1703               	bsf	3,6	;RP1=1, select bank3
  1830     16FA  094A               	comf	main@displayValue^(0+384),w
  1831     16FB  1303               	bcf	3,6	;RP1=0, select bank1
  1832     16FC  00C0               	movwf	??_main^(0+128)
  1833     16FD  1703               	bsf	3,6	;RP1=1, select bank3
  1834     16FE  094B               	comf	(main@displayValue+1)^(0+384),w
  1835     16FF  1303               	bcf	3,6	;RP1=0, select bank1
  1836     1700  00C1               	movwf	(??_main^(0+128)+1)
  1837     1701  0AC0               	incf	??_main^(0+128),f
  1838     1702  1903               	skipnz
  1839     1703  0AC1               	incf	(??_main^(0+128)+1),f
  1840     1704  0840               	movf	??_main^(0+128),w
  1841     1705  1703               	bsf	3,6	;RP1=1, select bank3
  1842     1706  00C0               	movwf	main@negativeDisplayValue^(0+384)
  1843     1707  1303               	bcf	3,6	;RP1=0, select bank1
  1844     1708  0841               	movf	(??_main+1)^(0+128),w
  1845     1709  1703               	bsf	3,6	;RP1=1, select bank3
  1846     170A  00C1               	movwf	(main@negativeDisplayValue+1)^(0+384)
  1847                           
  1848                           ;main.c: 149:     char combinedText[20];;main.c: 150:     sprintf(combinedText, "s%d\r\n
      +                          ", negativeDisplayValue);
  1849     170B  3010               	movlw	low (STR_13| (0+32768))
  1850     170C  1283               	bcf	3,5	;RP0=0, select bank0
  1851     170D  1303               	bcf	3,6	;RP1=0, select bank0
  1852     170E  00E8               	movwf	sprintf@f
  1853     170F  3099               	movlw	high (STR_13| (0+32768))
  1854     1710  00E9               	movwf	sprintf@f+1
  1855     1711  1683               	bsf	3,5	;RP0=1, select bank3
  1856     1712  1703               	bsf	3,6	;RP1=1, select bank3
  1857     1713  0841               	movf	(main@negativeDisplayValue+1)^(0+384),w
  1858     1714  1283               	bcf	3,5	;RP0=0, select bank0
  1859     1715  1303               	bcf	3,6	;RP1=0, select bank0
  1860     1716  00EB               	movwf	?_sprintf+3
  1861     1717  1683               	bsf	3,5	;RP0=1, select bank3
  1862     1718  1703               	bsf	3,6	;RP1=1, select bank3
  1863     1719  0840               	movf	main@negativeDisplayValue^(0+384),w
  1864     171A  1283               	bcf	3,5	;RP0=0, select bank0
  1865     171B  1303               	bcf	3,6	;RP1=0, select bank0
  1866     171C  00EA               	movwf	?_sprintf+2
  1867     171D  3090               	movlw	(low (main@combinedText| (0+256)))& (0+255)
  1868     171E  120A  118A  205E  160A  118A  	fcall	_sprintf
  1869                           
  1870                           ;main.c: 151:     UART_Write_Text(combinedText);
  1871     1723  3090               	movlw	(low (main@combinedText| (0+256)))& (0+255)
  1872     1724  00F1               	movwf	UART_Write_Text@text
  1873     1725  3001               	movlw	1
  1874     1726  00F2               	movwf	UART_Write_Text@text+1
  1875     1727  160A  158A  2454  160A  118A  	fcall	_UART_Write_Text
  1876                           
  1877                           ;main.c: 152:         }
  1878     172C  2FCB               	goto	l4085
  1879     172D                     l125:	
  1880                           ;main.c: 155:         else if (RC2 == 1 && RE0==1)
  1881                           
  1882     172D  1907               	btfsc	7,2	;volatile
  1883     172E  1C09               	btfss	9,0	;volatile
  1884     172F  2F4B               	goto	l127
  1885                           
  1886                           ;main.c: 156:         {;main.c: 157:             Lcd_Set_Cursor(1, 10);
  1887     1730  300A               	movlw	10
  1888     1731  00F4               	movwf	Lcd_Set_Cursor@b
  1889     1732  3001               	movlw	1
  1890     1733  160A  158A  2491  160A  118A  	fcall	_Lcd_Set_Cursor
  1891                           
  1892                           ;main.c: 158:             Lcd_Write_String("REW LIMIT");
  1893     1738  30D7               	movlw	low (STR_14| (0+32768))
  1894     1739  00F5               	movwf	Lcd_Write_String@a
  1895     173A  3098               	movlw	high (STR_14| (0+32768))
  1896     173B  00F6               	movwf	Lcd_Write_String@a+1
  1897     173C  160A  158A  2417  160A  118A  	fcall	_Lcd_Write_String
  1898                           
  1899                           ;main.c: 159:             UART_Write_Text("s0\r\n");
  1900     1741  301C               	movlw	low (STR_9| (0+32768))
  1901     1742  00F1               	movwf	UART_Write_Text@text
  1902     1743  3099               	movlw	high (STR_9| (0+32768))
  1903     1744  00F2               	movwf	UART_Write_Text@text+1
  1904     1745  160A  158A  2454  160A  118A  	fcall	_UART_Write_Text
  1905                           
  1906                           ;main.c: 160:         }
  1907     174A  2FCB               	goto	l4085
  1908     174B                     l127:	
  1909                           ;main.c: 161:         else if ((RE2 == 1 && RE0==1) || (RE2==1 && RE1==0) )
  1910                           
  1911     174B  1D09               	btfss	9,2	;volatile
  1912     174C  2F4F               	goto	l133
  1913     174D  1809               	btfsc	9,0	;volatile
  1914     174E  2F52               	goto	l4063
  1915     174F                     l133:
  1916     174F  1909               	btfsc	9,2	;volatile
  1917     1750  1889               	btfsc	9,1	;volatile
  1918     1751  2F6D               	goto	l129
  1919     1752                     l4063:
  1920                           
  1921                           ;main.c: 162:         {;main.c: 163:             Lcd_Set_Cursor(1, 12);
  1922     1752  300C               	movlw	12
  1923     1753  00F4               	movwf	Lcd_Set_Cursor@b
  1924     1754  3001               	movlw	1
  1925     1755  160A  158A  2491  160A  118A  	fcall	_Lcd_Set_Cursor
  1926                           
  1927                           ;main.c: 164:             Lcd_Write_String("FEAD 400");
  1928     175A  30E1               	movlw	low (STR_10| (0+32768))
  1929     175B  00F5               	movwf	Lcd_Write_String@a
  1930     175C  3098               	movlw	high (STR_10| (0+32768))
  1931     175D  00F6               	movwf	Lcd_Write_String@a+1
  1932     175E  160A  158A  2417  160A  118A  	fcall	_Lcd_Write_String
  1933                           
  1934                           ;main.c: 165:             UART_Write_Text("s255\r\n");
  1935     1763  3002               	movlw	low (STR_17| (0+32768))
  1936     1764  00F1               	movwf	UART_Write_Text@text
  1937     1765  3099               	movlw	high (STR_17| (0+32768))
  1938     1766  00F2               	movwf	UART_Write_Text@text+1
  1939     1767  160A  158A  2454  160A  118A  	fcall	_UART_Write_Text
  1940                           
  1941                           ;main.c: 166:         }
  1942     176C  2FCB               	goto	l4085
  1943     176D                     l129:	
  1944                           ;main.c: 167:         else if (RE0 == 1)
  1945                           
  1946     176D  1C09               	btfss	9,0	;volatile
  1947     176E  2FA0               	goto	l4077
  1948                           
  1949                           ;main.c: 168:         {;main.c: 169:             Lcd_Set_Cursor(2, 16);
  1950     176F  3010               	movlw	16
  1951     1770  00F4               	movwf	Lcd_Set_Cursor@b
  1952     1771  3002               	movlw	2
  1953     1772  160A  158A  2491  160A  118A  	fcall	_Lcd_Set_Cursor
  1954                           
  1955                           ;main.c: 170:             Lcd_Write_String("REW ");
  1956     1777  3026               	movlw	low (STR_18| (0+32768))
  1957     1778  00F5               	movwf	Lcd_Write_String@a
  1958     1779  3099               	movlw	high (STR_18| (0+32768))
  1959     177A  00F6               	movwf	Lcd_Write_String@a+1
  1960     177B  160A  158A  2417  160A  118A  	fcall	_Lcd_Write_String
  1961                           
  1962                           ;main.c: 171:     char combinedText[20];;main.c: 172:     sprintf(combinedText, "s%d\r\n
      +                          ", displayValue);
  1963     1780  3010               	movlw	low (STR_13| (0+32768))
  1964     1781  00E8               	movwf	sprintf@f
  1965     1782  3099               	movlw	high (STR_13| (0+32768))
  1966     1783  00E9               	movwf	sprintf@f+1
  1967     1784  1683               	bsf	3,5	;RP0=1, select bank3
  1968     1785  1703               	bsf	3,6	;RP1=1, select bank3
  1969     1786  084B               	movf	(main@displayValue+1)^(0+384),w
  1970     1787  1283               	bcf	3,5	;RP0=0, select bank0
  1971     1788  1303               	bcf	3,6	;RP1=0, select bank0
  1972     1789  00EB               	movwf	?_sprintf+3
  1973     178A  1683               	bsf	3,5	;RP0=1, select bank3
  1974     178B  1703               	bsf	3,6	;RP1=1, select bank3
  1975     178C  084A               	movf	main@displayValue^(0+384),w
  1976     178D  1283               	bcf	3,5	;RP0=0, select bank0
  1977     178E  1303               	bcf	3,6	;RP1=0, select bank0
  1978     178F  00EA               	movwf	?_sprintf+2
  1979     1790  30A4               	movlw	(low (main@combinedText_160| (0+256)))& (0+255)
  1980     1791  120A  118A  205E  160A  118A  	fcall	_sprintf
  1981                           
  1982                           ;main.c: 173:     UART_Write_Text(combinedText);
  1983     1796  30A4               	movlw	(low (main@combinedText_160| (0+256)))& (0+255)
  1984     1797  00F1               	movwf	UART_Write_Text@text
  1985     1798  3001               	movlw	1
  1986     1799  00F2               	movwf	UART_Write_Text@text+1
  1987     179A  160A  158A  2454  160A  118A  	fcall	_UART_Write_Text
  1988                           
  1989                           ;main.c: 174:         }
  1990     179F  2FCB               	goto	l4085
  1991     17A0                     l4077:
  1992                           
  1993                           ;main.c: 178:         {;main.c: 180:             Lcd_Set_Cursor(2, 16);
  1994     17A0  3010               	movlw	16
  1995     17A1  00F4               	movwf	Lcd_Set_Cursor@b
  1996     17A2  3002               	movlw	2
  1997     17A3  160A  158A  2491  160A  118A  	fcall	_Lcd_Set_Cursor
  1998                           
  1999                           ;main.c: 181:             Lcd_Write_String("STOP");
  2000     17A8  302B               	movlw	low (STR_20| (0+32768))
  2001     17A9  00F5               	movwf	Lcd_Write_String@a
  2002     17AA  3099               	movlw	high (STR_20| (0+32768))
  2003     17AB  00F6               	movwf	Lcd_Write_String@a+1
  2004     17AC  160A  158A  2417  160A  118A  	fcall	_Lcd_Write_String
  2005                           
  2006                           ;main.c: 182:             UART_Write_Text("s0\r\n");
  2007     17B1  301C               	movlw	low (STR_9| (0+32768))
  2008     17B2  00F1               	movwf	UART_Write_Text@text
  2009     17B3  3099               	movlw	high (STR_9| (0+32768))
  2010     17B4  00F2               	movwf	UART_Write_Text@text+1
  2011     17B5  160A  158A  2454  160A  118A  	fcall	_UART_Write_Text
  2012                           
  2013                           ;main.c: 183:             Lcd_Set_Cursor(1, 10);
  2014     17BA  300A               	movlw	10
  2015     17BB  00F4               	movwf	Lcd_Set_Cursor@b
  2016     17BC  3001               	movlw	1
  2017     17BD  160A  158A  2491  160A  118A  	fcall	_Lcd_Set_Cursor
  2018                           
  2019                           ;main.c: 184:             Lcd_Write_String("              ");
  2020     17C2  30A2               	movlw	low (STR_22| (0+32768))
  2021     17C3  00F5               	movwf	Lcd_Write_String@a
  2022     17C4  3098               	movlw	high (STR_22| (0+32768))
  2023     17C5  00F6               	movwf	Lcd_Write_String@a+1
  2024     17C6  160A  158A  2417  160A  118A  	fcall	_Lcd_Write_String
  2025     17CB                     l4085:
  2026                           
  2027                           ;main.c: 191:             if(RC2==0 && RC1==0 && RE2==0 && RC0==0 && RC3==0){
  2028     17CB  1D07               	btfss	7,2	;volatile
  2029     17CC  1887               	btfsc	7,1	;volatile
  2030     17CD  2FE4               	goto	l4099
  2031     17CE  1D09               	btfss	9,2	;volatile
  2032     17CF  1807               	btfsc	7,0	;volatile
  2033     17D0  2FE4               	goto	l4099
  2034     17D1  1987               	btfsc	7,3	;volatile
  2035     17D2  2FE4               	goto	l4099
  2036                           
  2037                           ;main.c: 193:                 Lcd_Set_Cursor(1, 8);
  2038     17D3  3008               	movlw	8
  2039     17D4  00F4               	movwf	Lcd_Set_Cursor@b
  2040     17D5  3001               	movlw	1
  2041     17D6  160A  158A  2491  160A  118A  	fcall	_Lcd_Set_Cursor
  2042                           
  2043                           ;main.c: 194:             Lcd_Write_String("              ");
  2044     17DB  30A2               	movlw	low (STR_22| (0+32768))
  2045     17DC  00F5               	movwf	Lcd_Write_String@a
  2046     17DD  3098               	movlw	high (STR_22| (0+32768))
  2047     17DE  00F6               	movwf	Lcd_Write_String@a+1
  2048     17DF  160A  158A  2417  160A  118A  	fcall	_Lcd_Write_String
  2049     17E4                     l4099:
  2050                           
  2051                           ;main.c: 201:         if(RC1==1 || RC2==1){
  2052     17E4  1887               	btfsc	7,1	;volatile
  2053     17E5  2FE8               	goto	l140
  2054     17E6  1D07               	btfss	7,2	;volatile
  2055     17E7  2FEA               	goto	l138
  2056     17E8                     l140:
  2057                           
  2058                           ;main.c: 203:             RA4=1;
  2059     17E8  1605               	bsf	5,4	;volatile
  2060                           
  2061                           ;main.c: 204:         }
  2062     17E9  2FEB               	goto	l141
  2063     17EA                     l138:	
  2064                           ;main.c: 205:         else {
  2065                           
  2066                           
  2067                           ;main.c: 206:             RA4=0;
  2068     17EA  1205               	bcf	5,4	;volatile
  2069     17EB                     l141:	
  2070                           ;main.c: 207:         }
  2071                           
  2072                           
  2073                           ;main.c: 212: if (RC3==1){
  2074     17EB  1D87               	btfss	7,3	;volatile
  2075     17EC  2DB8               	goto	l3987
  2076                           
  2077                           ;main.c: 213:     RA4=1;
  2078     17ED  1605               	bsf	5,4	;volatile
  2079                           
  2080                           ;main.c: 214:     Lcd_Set_Cursor(1,7);
  2081     17EE  3007               	movlw	7
  2082     17EF  00F4               	movwf	Lcd_Set_Cursor@b
  2083     17F0  3001               	movlw	1
  2084     17F1  160A  158A  2491  160A  118A  	fcall	_Lcd_Set_Cursor
  2085                           
  2086                           ;main.c: 215:             Lcd_Write_String("DC SERVO ERROR");
  2087     17F6  30B1               	movlw	low (STR_24| (0+32768))
  2088     17F7  00F5               	movwf	Lcd_Write_String@a
  2089     17F8  3098               	movlw	high (STR_24| (0+32768))
  2090     17F9  00F6               	movwf	Lcd_Write_String@a+1
  2091     17FA  160A  158A  2417  160A  118A  	fcall	_Lcd_Write_String
  2092     17FF  2DB8               	goto	l3987
  2093     1800                     __end_of_main:
  2094                           
  2095                           	psect	text1
  2096     005E                     __ptext1:	
  2097 ;; *************** function _sprintf *****************
  2098 ;; Defined at:
  2099 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c"
  2100 ;; Parameters:    Size  Location     Type
  2101 ;;  sp              1    wreg     PTR unsigned char 
  2102 ;;		 -> main@combinedText_160(20), main@combinedText(20), main@adcString2(4), main@adcString1(4), 
  2103 ;;  f               2   72[BANK0 ] PTR const unsigned char 
  2104 ;;		 -> STR_19(6), STR_13(6), STR_7(6), STR_5(4), 
  2105 ;; Auto vars:     Size  Location     Type
  2106 ;;  sp              1   28[BANK1 ] PTR unsigned char 
  2107 ;;		 -> main@combinedText_160(20), main@combinedText(20), main@adcString2(4), main@adcString1(4), 
  2108 ;;  fval            4   24[BANK1 ] PTR unsigned char 
  2109 ;;  val             4   18[BANK1 ] unsigned long 
  2110 ;;  tmpval          4   14[BANK1 ] struct .
  2111 ;;  prec            2   29[BANK1 ] int 
  2112 ;;  eexp            2   22[BANK1 ] int 
  2113 ;;  width           2   12[BANK1 ] int 
  2114 ;;  flag            2   10[BANK1 ] unsigned short 
  2115 ;;  cp              2    0        PTR const unsigned char 
  2116 ;;  len             2    0        unsigned int 
  2117 ;;  c               1   31[BANK1 ] unsigned char 
  2118 ;;  ap              1    9[BANK1 ] PTR void [1]
  2119 ;;		 -> ?_sprintf(2), 
  2120 ;;  d               1    0        unsigned char 
  2121 ;; Return value:  Size  Location     Type
  2122 ;;                  2   72[BANK0 ] int 
  2123 ;; Registers used:
  2124 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2125 ;; Tracked objects:
  2126 ;;		On entry : 300/0
  2127 ;;		On exit  : B00/900
  2128 ;;		Unchanged: 0/0
  2129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2130 ;;      Params:         0       6       0       0       0
  2131 ;;      Locals:         0       0      27       0       0
  2132 ;;      Temps:          0       0       5       0       0
  2133 ;;      Totals:         0       6      32       0       0
  2134 ;;Total ram usage:       38 bytes
  2135 ;; Hardware stack levels used: 1
  2136 ;; Hardware stack levels required when called: 3
  2137 ;; This function calls:
  2138 ;;		___awdiv
  2139 ;;		___fladd
  2140 ;;		___fleq
  2141 ;;		___flge
  2142 ;;		___flmul
  2143 ;;		___flneg
  2144 ;;		___flsub
  2145 ;;		___fltol
  2146 ;;		___lldiv
  2147 ;;		___llmod
  2148 ;;		___wmul
  2149 ;;		___xxtofl
  2150 ;;		__div_to_l_
  2151 ;;		__tdiv_to_l_
  2152 ;;		_fround
  2153 ;;		_isdigit
  2154 ;;		_scale
  2155 ;; This function is called by:
  2156 ;;		_main
  2157 ;; This function uses a non-reentrant model
  2158 ;;
  2159                           
  2160     005E                     _sprintf:	
  2161                           ;psect for function _sprintf
  2162                           
  2163                           
  2164                           ;incstack = 0
  2165                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2166                           ;sprintf@sp stored from wreg
  2167     005E  1683               	bsf	3,5	;RP0=1, select bank1
  2168     005F  00BC               	movwf	sprintf@sp^(0+128)
  2169                           
  2170                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  2171     0060  306A               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  2172     0061  00A9               	movwf	sprintf@ap^(0+128)
  2173     0062                     l3783:	
  2174                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2175                           
  2176                           
  2177                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2178     0062  1283               	bcf	3,5	;RP0=0, select bank0
  2179     0063  0869               	movf	sprintf@f+1,w
  2180     0064  1683               	bsf	3,5	;RP0=1, select bank1
  2181     0065  00A1               	movwf	(??_sprintf^(0+128)+1)
  2182     0066  1283               	bcf	3,5	;RP0=0, select bank0
  2183     0067  0868               	movf	sprintf@f,w
  2184     0068  1683               	bsf	3,5	;RP0=1, select bank1
  2185     0069  00A0               	movwf	??_sprintf^(0+128)
  2186     006A  1283               	bcf	3,5	;RP0=0, select bank0
  2187     006B  0AE8               	incf	sprintf@f,f
  2188     006C  1903               	skipnz
  2189     006D  0AE9               	incf	sprintf@f+1,f
  2190     006E  1683               	bsf	3,5	;RP0=1, select bank1
  2191     006F  0821               	movf	(??_sprintf+1)^(0+128),w
  2192     0070  1283               	bcf	3,5	;RP0=0, select bank0
  2193     0071  00FF               	movwf	127
  2194     0072  1683               	bsf	3,5	;RP0=1, select bank1
  2195     0073  0820               	movf	??_sprintf^(0+128),w
  2196     0074  0084               	movwf	4
  2197     0075  1283               	bcf	3,5	;RP0=0, select bank0
  2198     0076  160A  158A  2000  120A  118A  	fcall	stringtab
  2199     007B  1683               	bsf	3,5	;RP0=1, select bank1
  2200     007C  00BF               	movwf	sprintf@c^(0+128)
  2201     007D  083F               	movf	sprintf@c^(0+128),w
  2202     007E  1903               	btfsc	3,2
  2203     007F  2FF7               	goto	l3785
  2204                           
  2205                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2206     0080  3025               	movlw	37
  2207     0081  063F               	xorwf	sprintf@c^(0+128),w
  2208     0082  1903               	btfsc	3,2
  2209     0083  288E               	goto	l3497
  2210                           
  2211                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2212     0084  083C               	movf	sprintf@sp^(0+128),w
  2213     0085  0084               	movwf	4
  2214     0086  083F               	movf	sprintf@c^(0+128),w
  2215     0087  1783               	bsf	3,7	;select IRP bank2
  2216     0088  0080               	movwf	0
  2217     0089  3001               	movlw	1
  2218     008A  00FF               	movwf	127
  2219     008B  087F               	movf	127,w
  2220     008C  07BC               	addwf	sprintf@sp^(0+128),f
  2221                           
  2222                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 559:    continue;
  2223     008D  2862               	goto	l3783
  2224     008E                     l3497:
  2225                           
  2226                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  2227     008E  01AC               	clrf	sprintf@width^(0+128)
  2228     008F  01AD               	clrf	(sprintf@width+1)^(0+128)
  2229                           
  2230                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2231     0090  01AA               	clrf	sprintf@flag^(0+128)
  2232     0091  01AB               	clrf	(sprintf@flag+1)^(0+128)
  2233                           
  2234                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  2235     0092  1283               	bcf	3,5	;RP0=0, select bank0
  2236     0093  0869               	movf	sprintf@f+1,w
  2237     0094  00FF               	movwf	127
  2238     0095  0868               	movf	sprintf@f,w
  2239     0096  0084               	movwf	4
  2240     0097  160A  158A  2000  120A  118A  	fcall	stringtab
  2241     009C  160A  158A  234E  120A  118A  	fcall	_isdigit
  2242     00A1  1C03               	btfss	3,0
  2243     00A2  28E6               	goto	l3511
  2244                           
  2245                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  2246     00A3  1683               	bsf	3,5	;RP0=1, select bank1
  2247     00A4  01AC               	clrf	sprintf@width^(0+128)
  2248     00A5  01AD               	clrf	(sprintf@width+1)^(0+128)
  2249     00A6                     l3503:
  2250                           
  2251                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  2252     00A6  300A               	movlw	10
  2253     00A7  00F0               	movwf	___wmul@multiplier
  2254     00A8  3000               	movlw	0
  2255     00A9  00F1               	movwf	___wmul@multiplier+1
  2256     00AA  1683               	bsf	3,5	;RP0=1, select bank1
  2257     00AB  082D               	movf	(sprintf@width+1)^(0+128),w
  2258     00AC  00F3               	movwf	___wmul@multiplicand+1
  2259     00AD  082C               	movf	sprintf@width^(0+128),w
  2260     00AE  00F2               	movwf	___wmul@multiplicand
  2261     00AF  160A  158A  23C9  120A  118A  	fcall	___wmul
  2262     00B4  0871               	movf	?___wmul+1,w
  2263     00B5  00AD               	movwf	(sprintf@width+1)^(0+128)
  2264     00B6  0870               	movf	?___wmul,w
  2265     00B7  00AC               	movwf	sprintf@width^(0+128)
  2266                           
  2267                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  2268     00B8  1283               	bcf	3,5	;RP0=0, select bank0
  2269     00B9  0869               	movf	sprintf@f+1,w
  2270     00BA  00FF               	movwf	127
  2271     00BB  0868               	movf	sprintf@f,w
  2272     00BC  0084               	movwf	4
  2273     00BD  160A  158A  2000  120A  118A  	fcall	stringtab
  2274     00C2  3ED0               	addlw	208
  2275     00C3  1683               	bsf	3,5	;RP0=1, select bank1
  2276     00C4  00A0               	movwf	??_sprintf^(0+128)
  2277     00C5  30FF               	movlw	255
  2278     00C6  1803               	skipnc
  2279     00C7  3000               	movlw	0
  2280     00C8  00A1               	movwf	(??_sprintf^(0+128)+1)
  2281     00C9  0820               	movf	??_sprintf^(0+128),w
  2282     00CA  07AC               	addwf	sprintf@width^(0+128),f
  2283     00CB  1803               	skipnc
  2284     00CC  0AAD               	incf	(sprintf@width+1)^(0+128),f
  2285     00CD  0821               	movf	(??_sprintf+1)^(0+128),w
  2286     00CE  07AD               	addwf	(sprintf@width+1)^(0+128),f
  2287     00CF  3001               	movlw	1
  2288     00D0  1283               	bcf	3,5	;RP0=0, select bank0
  2289     00D1  07E8               	addwf	sprintf@f,f
  2290     00D2  1803               	skipnc
  2291     00D3  0AE9               	incf	sprintf@f+1,f
  2292     00D4  3000               	movlw	0
  2293     00D5  07E9               	addwf	sprintf@f+1,f
  2294                           
  2295                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  2296     00D6  0869               	movf	sprintf@f+1,w
  2297     00D7  00FF               	movwf	127
  2298     00D8  0868               	movf	sprintf@f,w
  2299     00D9  0084               	movwf	4
  2300     00DA  160A  158A  2000  120A  118A  	fcall	stringtab
  2301     00DF  160A  158A  234E  120A  118A  	fcall	_isdigit
  2302     00E4  1803               	btfsc	3,0
  2303     00E5  28A6               	goto	l3503
  2304     00E6                     l3511:
  2305                           
  2306                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  2307     00E6  0869               	movf	sprintf@f+1,w
  2308     00E7  00FF               	movwf	127
  2309     00E8  0868               	movf	sprintf@f,w
  2310     00E9  0084               	movwf	4
  2311     00EA  160A  158A  2000  120A  118A  	fcall	stringtab
  2312     00EF  3A2E               	xorlw	46
  2313     00F0  1D03               	skipz
  2314     00F1  2940               	goto	l3527
  2315                           
  2316                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  2317     00F2  1683               	bsf	3,5	;RP0=1, select bank1
  2318     00F3  172B               	bsf	(sprintf@flag^(0+128)+1),6
  2319                           
  2320                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 630:    f++;
  2321     00F4  3001               	movlw	1
  2322     00F5  1283               	bcf	3,5	;RP0=0, select bank0
  2323     00F6  07E8               	addwf	sprintf@f,f
  2324     00F7  1803               	skipnc
  2325     00F8  0AE9               	incf	sprintf@f+1,f
  2326     00F9  3000               	movlw	0
  2327     00FA  07E9               	addwf	sprintf@f+1,f
  2328                           
  2329                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  2330     00FB  1683               	bsf	3,5	;RP0=1, select bank1
  2331     00FC  01BD               	clrf	sprintf@prec^(0+128)
  2332     00FD  01BE               	clrf	(sprintf@prec+1)^(0+128)
  2333     00FE                     l3525:	
  2334                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2335                           
  2336                           
  2337                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2338     00FE  1283               	bcf	3,5	;RP0=0, select bank0
  2339     00FF  0869               	movf	sprintf@f+1,w
  2340     0100  00FF               	movwf	127
  2341     0101  0868               	movf	sprintf@f,w
  2342     0102  0084               	movwf	4
  2343     0103  160A  158A  2000  120A  118A  	fcall	stringtab
  2344     0108  160A  158A  234E  120A  118A  	fcall	_isdigit
  2345     010D  1C03               	btfss	3,0
  2346     010E  2949               	goto	l3533
  2347                           
  2348                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  2349     010F  300A               	movlw	10
  2350     0110  00F0               	movwf	___wmul@multiplier
  2351     0111  3000               	movlw	0
  2352     0112  00F1               	movwf	___wmul@multiplier+1
  2353     0113  1683               	bsf	3,5	;RP0=1, select bank1
  2354     0114  083E               	movf	(sprintf@prec+1)^(0+128),w
  2355     0115  00F3               	movwf	___wmul@multiplicand+1
  2356     0116  083D               	movf	sprintf@prec^(0+128),w
  2357     0117  00F2               	movwf	___wmul@multiplicand
  2358     0118  160A  158A  23C9  120A  118A  	fcall	___wmul
  2359     011D  0871               	movf	?___wmul+1,w
  2360     011E  00BE               	movwf	(sprintf@prec+1)^(0+128)
  2361     011F  0870               	movf	?___wmul,w
  2362     0120  00BD               	movwf	sprintf@prec^(0+128)
  2363                           
  2364                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  2365     0121  1283               	bcf	3,5	;RP0=0, select bank0
  2366     0122  0869               	movf	sprintf@f+1,w
  2367     0123  00FF               	movwf	127
  2368     0124  0868               	movf	sprintf@f,w
  2369     0125  0084               	movwf	4
  2370     0126  160A  158A  2000  120A  118A  	fcall	stringtab
  2371     012B  3ED0               	addlw	208
  2372     012C  1683               	bsf	3,5	;RP0=1, select bank1
  2373     012D  00A0               	movwf	??_sprintf^(0+128)
  2374     012E  30FF               	movlw	255
  2375     012F  1803               	skipnc
  2376     0130  3000               	movlw	0
  2377     0131  00A1               	movwf	(??_sprintf^(0+128)+1)
  2378     0132  0820               	movf	??_sprintf^(0+128),w
  2379     0133  07BD               	addwf	sprintf@prec^(0+128),f
  2380     0134  1803               	skipnc
  2381     0135  0ABE               	incf	(sprintf@prec+1)^(0+128),f
  2382     0136  0821               	movf	(??_sprintf+1)^(0+128),w
  2383     0137  07BE               	addwf	(sprintf@prec+1)^(0+128),f
  2384     0138  3001               	movlw	1
  2385     0139  1283               	bcf	3,5	;RP0=0, select bank0
  2386     013A  07E8               	addwf	sprintf@f,f
  2387     013B  1803               	skipnc
  2388     013C  0AE9               	incf	sprintf@f+1,f
  2389     013D  3000               	movlw	0
  2390     013E  07E9               	addwf	sprintf@f+1,f
  2391     013F  28FE               	goto	l3525
  2392     0140                     l3527:
  2393                           
  2394                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  2395     0140  1683               	bsf	3,5	;RP0=1, select bank1
  2396     0141  01BD               	clrf	sprintf@prec^(0+128)
  2397     0142  01BE               	clrf	(sprintf@prec+1)^(0+128)
  2398                           
  2399                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  2400     0143  162B               	bsf	(sprintf@flag^(0+128)+1),4
  2401     0144  2949               	goto	l3533
  2402     0145                     l301:	
  2403                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  2404                           
  2405                           
  2406                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  2407     0145  152B               	bsf	(sprintf@flag^(0+128)+1),2
  2408                           
  2409                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 690:    break;
  2410     0146  297C               	goto	l3535
  2411     0147                     l306:	
  2412                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 843:   case 'u':
  2413                           
  2414                           
  2415                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          x40;
  2416     0147  172A               	bsf	sprintf@flag^(0+128),6
  2417                           
  2418                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 845:    break;
  2419     0148  297C               	goto	l3535
  2420     0149                     l3533:
  2421     0149  1283               	bcf	3,5	;RP0=0, select bank0
  2422     014A  0869               	movf	sprintf@f+1,w
  2423     014B  1683               	bsf	3,5	;RP0=1, select bank1
  2424     014C  00A1               	movwf	(??_sprintf^(0+128)+1)
  2425     014D  1283               	bcf	3,5	;RP0=0, select bank0
  2426     014E  0868               	movf	sprintf@f,w
  2427     014F  1683               	bsf	3,5	;RP0=1, select bank1
  2428     0150  00A0               	movwf	??_sprintf^(0+128)
  2429     0151  1283               	bcf	3,5	;RP0=0, select bank0
  2430     0152  0AE8               	incf	sprintf@f,f
  2431     0153  1903               	skipnz
  2432     0154  0AE9               	incf	sprintf@f+1,f
  2433     0155  1683               	bsf	3,5	;RP0=1, select bank1
  2434     0156  0821               	movf	(??_sprintf+1)^(0+128),w
  2435     0157  1283               	bcf	3,5	;RP0=0, select bank0
  2436     0158  00FF               	movwf	127
  2437     0159  1683               	bsf	3,5	;RP0=1, select bank1
  2438     015A  0820               	movf	??_sprintf^(0+128),w
  2439     015B  0084               	movwf	4
  2440     015C  1283               	bcf	3,5	;RP0=0, select bank0
  2441     015D  160A  158A  2000  120A  118A  	fcall	stringtab
  2442     0162  1683               	bsf	3,5	;RP0=1, select bank1
  2443     0163  00BF               	movwf	sprintf@c^(0+128)
  2444     0164  00A2               	movwf	(??_sprintf+2)^(0+128)
  2445     0165  01A3               	clrf	((??_sprintf+2)^(0+128)+1)
  2446                           
  2447                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2448                           ; Switch size 1, requested type "simple"
  2449                           ; Number of cases is 1, Range of values is 0 to 0
  2450                           ; switch strategies available:
  2451                           ; Name         Instructions Cycles
  2452                           ; simple_byte            4     3 (average)
  2453                           ; direct_byte           11     8 (fixed)
  2454                           ; jumptable            260     6 (fixed)
  2455                           ;	Chosen strategy is simple_byte
  2456     0166  0823               	movf	(??_sprintf+3)^(0+128),w
  2457     0167  3A00               	xorlw	0	; case 0
  2458     0168  1903               	skipnz
  2459     0169  296B               	goto	l4139
  2460     016A  2862               	goto	l3783
  2461     016B                     l4139:
  2462                           
  2463                           ; Switch size 1, requested type "simple"
  2464                           ; Number of cases is 5, Range of values is 0 to 117
  2465                           ; switch strategies available:
  2466                           ; Name         Instructions Cycles
  2467                           ; simple_byte           16     9 (average)
  2468                           ; jumptable            260     6 (fixed)
  2469                           ;	Chosen strategy is simple_byte
  2470     016B  0822               	movf	(??_sprintf+2)^(0+128),w
  2471     016C  3A00               	xorlw	0	; case 0
  2472     016D  1903               	skipnz
  2473     016E  2FF7               	goto	l3785
  2474     016F  3A64               	xorlw	100	; case 100
  2475     0170  1903               	skipnz
  2476     0171  297C               	goto	l3535
  2477     0172  3A02               	xorlw	2	; case 102
  2478     0173  1903               	skipnz
  2479     0174  2945               	goto	l301
  2480     0175  3A0F               	xorlw	15	; case 105
  2481     0176  1903               	skipnz
  2482     0177  297C               	goto	l3535
  2483     0178  3A1C               	xorlw	28	; case 117
  2484     0179  1903               	skipnz
  2485     017A  2947               	goto	l306
  2486     017B  2862               	goto	l3783
  2487     017C                     l3535:
  2488                           
  2489                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  2490     017C  3000               	movlw	0
  2491     017D  052A               	andwf	sprintf@flag^(0+128),w
  2492     017E  00A0               	movwf	??_sprintf^(0+128)
  2493     017F  3007               	movlw	7
  2494     0180  052B               	andwf	(sprintf@flag+1)^(0+128),w
  2495     0181  00A1               	movwf	(??_sprintf+1)^(0+128)
  2496     0182  0820               	movf	??_sprintf^(0+128),w
  2497     0183  0421               	iorwf	(??_sprintf^(0+128)+1),w
  2498     0184  1903               	btfsc	3,2
  2499     0185  2E74               	goto	l307
  2500                           
  2501                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  2502     0186  1E2B               	btfss	(sprintf@flag+1)^(0+128),4
  2503     0187  298C               	goto	l3541
  2504                           
  2505                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  2506     0188  3006               	movlw	6
  2507     0189  00BD               	movwf	sprintf@prec^(0+128)
  2508     018A  3000               	movlw	0
  2509     018B  00BE               	movwf	(sprintf@prec^(0+128)+1)
  2510     018C                     l3541:
  2511                           
  2512                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  2513     018C  0829               	movf	sprintf@ap^(0+128),w
  2514     018D  0084               	movwf	4
  2515     018E  1383               	bcf	3,7	;select IRP bank0
  2516     018F  0800               	movf	0,w
  2517     0190  00B8               	movwf	sprintf@fval^(0+128)
  2518     0191  0A84               	incf	4,f
  2519     0192  0800               	movf	0,w
  2520     0193  00B9               	movwf	(sprintf@fval+1)^(0+128)
  2521     0194  0A84               	incf	4,f
  2522     0195  0800               	movf	0,w
  2523     0196  00BA               	movwf	(sprintf@fval+2)^(0+128)
  2524     0197  0A84               	incf	4,f
  2525     0198  0800               	movf	0,w
  2526     0199  00BB               	movwf	(sprintf@fval+3)^(0+128)
  2527     019A  3004               	movlw	4
  2528     019B  00FF               	movwf	127
  2529     019C  087F               	movf	127,w
  2530     019D  07A9               	addwf	sprintf@ap^(0+128),f
  2531                           
  2532                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  2533     019E  083B               	movf	(sprintf@fval+3)^(0+128),w
  2534     019F  00F3               	movwf	___flge@ff1+3
  2535     01A0  083A               	movf	(sprintf@fval+2)^(0+128),w
  2536     01A1  00F2               	movwf	___flge@ff1+2
  2537     01A2  0839               	movf	(sprintf@fval+1)^(0+128),w
  2538     01A3  00F1               	movwf	___flge@ff1+1
  2539     01A4  0838               	movf	sprintf@fval^(0+128),w
  2540     01A5  00F0               	movwf	___flge@ff1
  2541     01A6  3000               	movlw	0
  2542     01A7  00F7               	movwf	___flge@ff2+3
  2543     01A8  3000               	movlw	0
  2544     01A9  00F6               	movwf	___flge@ff2+2
  2545     01AA  3000               	movlw	0
  2546     01AB  00F5               	movwf	___flge@ff2+1
  2547     01AC  3000               	movlw	0
  2548     01AD  00F4               	movwf	___flge@ff2
  2549     01AE  160A  158A  26CC  120A  118A  	fcall	___flge
  2550     01B3  1803               	btfsc	3,0
  2551     01B4  29CE               	goto	l3551
  2552                           
  2553                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  2554     01B5  083B               	movf	(sprintf@fval+3)^(0+128),w
  2555     01B6  00F3               	movwf	___flneg@f1+3
  2556     01B7  083A               	movf	(sprintf@fval+2)^(0+128),w
  2557     01B8  00F2               	movwf	___flneg@f1+2
  2558     01B9  0839               	movf	(sprintf@fval+1)^(0+128),w
  2559     01BA  00F1               	movwf	___flneg@f1+1
  2560     01BB  0838               	movf	sprintf@fval^(0+128),w
  2561     01BC  00F0               	movwf	___flneg@f1
  2562     01BD  120A  158A  2000  120A  118A  	fcall	___flneg
  2563     01C2  0873               	movf	?___flneg+3,w
  2564     01C3  00BB               	movwf	(sprintf@fval+3)^(0+128)
  2565     01C4  0872               	movf	?___flneg+2,w
  2566     01C5  00BA               	movwf	(sprintf@fval+2)^(0+128)
  2567     01C6  0871               	movf	?___flneg+1,w
  2568     01C7  00B9               	movwf	(sprintf@fval+1)^(0+128)
  2569     01C8  0870               	movf	?___flneg,w
  2570     01C9  00B8               	movwf	sprintf@fval^(0+128)
  2571                           
  2572                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  2573     01CA  3003               	movlw	3
  2574     01CB  04AA               	iorwf	sprintf@flag^(0+128),f
  2575     01CC  3000               	movlw	0
  2576     01CD  04AB               	iorwf	(sprintf@flag+1)^(0+128),f
  2577     01CE                     l3551:
  2578                           
  2579                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2580     01CE  01B6               	clrf	sprintf@eexp^(0+128)
  2581     01CF  01B7               	clrf	(sprintf@eexp+1)^(0+128)
  2582                           
  2583                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2584     01D0  083B               	movf	(sprintf@fval+3)^(0+128),w
  2585     01D1  00F3               	movwf	___fleq@ff1+3
  2586     01D2  083A               	movf	(sprintf@fval+2)^(0+128),w
  2587     01D3  00F2               	movwf	___fleq@ff1+2
  2588     01D4  0839               	movf	(sprintf@fval+1)^(0+128),w
  2589     01D5  00F1               	movwf	___fleq@ff1+1
  2590     01D6  0838               	movf	sprintf@fval^(0+128),w
  2591     01D7  00F0               	movwf	___fleq@ff1
  2592     01D8  3000               	movlw	0
  2593     01D9  00F7               	movwf	___fleq@ff2+3
  2594     01DA  3000               	movlw	0
  2595     01DB  00F6               	movwf	___fleq@ff2+2
  2596     01DC  3000               	movlw	0
  2597     01DD  00F5               	movwf	___fleq@ff2+1
  2598     01DE  3000               	movlw	0
  2599     01DF  00F4               	movwf	___fleq@ff2
  2600     01E0  160A  158A  24CF  120A  118A  	fcall	___fleq
  2601     01E5  1803               	btfsc	3,0
  2602     01E6  2AA4               	goto	l3579
  2603                           
  2604                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2605     01E7  1003               	clrc
  2606     01E8  0D3A               	rlf	(sprintf@fval+2)^(0+128),w
  2607     01E9  0D3B               	rlf	(sprintf@fval+3)^(0+128),w
  2608     01EA  3E82               	addlw	130
  2609     01EB  00B6               	movwf	sprintf@eexp^(0+128)
  2610     01EC  30FF               	movlw	255
  2611     01ED  1803               	skipnc
  2612     01EE  3000               	movlw	0
  2613     01EF  00B7               	movwf	(sprintf@eexp^(0+128)+1)
  2614                           
  2615                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2616     01F0  30FF               	movlw	255
  2617     01F1  07B6               	addwf	sprintf@eexp^(0+128),f
  2618     01F2  1803               	skipnc
  2619     01F3  0AB7               	incf	(sprintf@eexp+1)^(0+128),f
  2620     01F4  30FF               	movlw	255
  2621     01F5  07B7               	addwf	(sprintf@eexp+1)^(0+128),f
  2622                           
  2623                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2624     01F6  3003               	movlw	3
  2625     01F7  00F0               	movwf	___wmul@multiplier
  2626     01F8  3000               	movlw	0
  2627     01F9  00F1               	movwf	___wmul@multiplier+1
  2628     01FA  0837               	movf	(sprintf@eexp+1)^(0+128),w
  2629     01FB  00F3               	movwf	___wmul@multiplicand+1
  2630     01FC  0836               	movf	sprintf@eexp^(0+128),w
  2631     01FD  00F2               	movwf	___wmul@multiplicand
  2632     01FE  160A  158A  23C9  120A  118A  	fcall	___wmul
  2633     0203  0871               	movf	?___wmul+1,w
  2634     0204  00B7               	movwf	(sprintf@eexp+1)^(0+128)
  2635     0205  0870               	movf	?___wmul,w
  2636     0206  00B6               	movwf	sprintf@eexp^(0+128)
  2637                           
  2638                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2639     0207  300A               	movlw	10
  2640     0208  00F6               	movwf	___awdiv@divisor
  2641     0209  3000               	movlw	0
  2642     020A  00F7               	movwf	___awdiv@divisor+1
  2643     020B  0837               	movf	(sprintf@eexp+1)^(0+128),w
  2644     020C  00F9               	movwf	___awdiv@dividend+1
  2645     020D  0836               	movf	sprintf@eexp^(0+128),w
  2646     020E  00F8               	movwf	___awdiv@dividend
  2647     020F  160A  158A  25AE  120A  118A  	fcall	___awdiv
  2648     0214  0877               	movf	?___awdiv+1,w
  2649     0215  1683               	bsf	3,5	;RP0=1, select bank1
  2650     0216  00B7               	movwf	(sprintf@eexp+1)^(0+128)
  2651     0217  0876               	movf	?___awdiv,w
  2652     0218  00B6               	movwf	sprintf@eexp^(0+128)
  2653                           
  2654                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2655     0219  1FB7               	btfss	(sprintf@eexp+1)^(0+128),7
  2656     021A  2A21               	goto	l3567
  2657                           
  2658                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2659     021B  30FF               	movlw	255
  2660     021C  07B6               	addwf	sprintf@eexp^(0+128),f
  2661     021D  1803               	skipnc
  2662     021E  0AB7               	incf	(sprintf@eexp+1)^(0+128),f
  2663     021F  30FF               	movlw	255
  2664     0220  07B7               	addwf	(sprintf@eexp+1)^(0+128),f
  2665     0221                     l3567:
  2666                           
  2667                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2668     0221  0336               	decf	sprintf@eexp^(0+128),w
  2669     0222  3AFF               	xorlw	255
  2670     0223  120A  158A  249C  120A  118A  	fcall	_scale
  2671     0228  083D               	movf	?_scale+3,w
  2672     0229  1683               	bsf	3,5	;RP0=1, select bank1
  2673     022A  00B1               	movwf	(sprintf@tmpval+3)^(0+128)
  2674     022B  1283               	bcf	3,5	;RP0=0, select bank0
  2675     022C  083C               	movf	?_scale+2,w
  2676     022D  1683               	bsf	3,5	;RP0=1, select bank1
  2677     022E  00B0               	movwf	(sprintf@tmpval+2)^(0+128)
  2678     022F  1283               	bcf	3,5	;RP0=0, select bank0
  2679     0230  083B               	movf	?_scale+1,w
  2680     0231  1683               	bsf	3,5	;RP0=1, select bank1
  2681     0232  00AF               	movwf	(sprintf@tmpval+1)^(0+128)
  2682     0233  1283               	bcf	3,5	;RP0=0, select bank0
  2683     0234  083A               	movf	?_scale,w
  2684     0235  1683               	bsf	3,5	;RP0=1, select bank1
  2685     0236  00AE               	movwf	sprintf@tmpval^(0+128)
  2686                           
  2687                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2688     0237  083B               	movf	(sprintf@fval+3)^(0+128),w
  2689     0238  1283               	bcf	3,5	;RP0=0, select bank0
  2690     0239  00A3               	movwf	___flmul@b+3
  2691     023A  1683               	bsf	3,5	;RP0=1, select bank1
  2692     023B  083A               	movf	(sprintf@fval+2)^(0+128),w
  2693     023C  1283               	bcf	3,5	;RP0=0, select bank0
  2694     023D  00A2               	movwf	___flmul@b+2
  2695     023E  1683               	bsf	3,5	;RP0=1, select bank1
  2696     023F  0839               	movf	(sprintf@fval+1)^(0+128),w
  2697     0240  1283               	bcf	3,5	;RP0=0, select bank0
  2698     0241  00A1               	movwf	___flmul@b+1
  2699     0242  1683               	bsf	3,5	;RP0=1, select bank1
  2700     0243  0838               	movf	sprintf@fval^(0+128),w
  2701     0244  1283               	bcf	3,5	;RP0=0, select bank0
  2702     0245  00A0               	movwf	___flmul@b
  2703     0246  1683               	bsf	3,5	;RP0=1, select bank1
  2704     0247  0831               	movf	(sprintf@tmpval+3)^(0+128),w
  2705     0248  1283               	bcf	3,5	;RP0=0, select bank0
  2706     0249  00A7               	movwf	___flmul@a+3
  2707     024A  1683               	bsf	3,5	;RP0=1, select bank1
  2708     024B  0830               	movf	(sprintf@tmpval+2)^(0+128),w
  2709     024C  1283               	bcf	3,5	;RP0=0, select bank0
  2710     024D  00A6               	movwf	___flmul@a+2
  2711     024E  1683               	bsf	3,5	;RP0=1, select bank1
  2712     024F  082F               	movf	(sprintf@tmpval+1)^(0+128),w
  2713     0250  1283               	bcf	3,5	;RP0=0, select bank0
  2714     0251  00A5               	movwf	___flmul@a+1
  2715     0252  1683               	bsf	3,5	;RP0=1, select bank1
  2716     0253  082E               	movf	sprintf@tmpval^(0+128),w
  2717     0254  1283               	bcf	3,5	;RP0=0, select bank0
  2718     0255  00A4               	movwf	___flmul@a
  2719     0256  120A  158A  21C3  120A  118A  	fcall	___flmul
  2720     025B  0823               	movf	?___flmul+3,w
  2721     025C  1683               	bsf	3,5	;RP0=1, select bank1
  2722     025D  00B1               	movwf	(sprintf@tmpval+3)^(0+128)
  2723     025E  1283               	bcf	3,5	;RP0=0, select bank0
  2724     025F  0822               	movf	?___flmul+2,w
  2725     0260  1683               	bsf	3,5	;RP0=1, select bank1
  2726     0261  00B0               	movwf	(sprintf@tmpval+2)^(0+128)
  2727     0262  1283               	bcf	3,5	;RP0=0, select bank0
  2728     0263  0821               	movf	?___flmul+1,w
  2729     0264  1683               	bsf	3,5	;RP0=1, select bank1
  2730     0265  00AF               	movwf	(sprintf@tmpval+1)^(0+128)
  2731     0266  1283               	bcf	3,5	;RP0=0, select bank0
  2732     0267  0820               	movf	?___flmul,w
  2733     0268  1683               	bsf	3,5	;RP0=1, select bank1
  2734     0269  00AE               	movwf	sprintf@tmpval^(0+128)
  2735                           
  2736                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2737     026A  0831               	movf	(sprintf@tmpval+3)^(0+128),w
  2738     026B  00F3               	movwf	___flge@ff1+3
  2739     026C  0830               	movf	(sprintf@tmpval+2)^(0+128),w
  2740     026D  00F2               	movwf	___flge@ff1+2
  2741     026E  082F               	movf	(sprintf@tmpval+1)^(0+128),w
  2742     026F  00F1               	movwf	___flge@ff1+1
  2743     0270  082E               	movf	sprintf@tmpval^(0+128),w
  2744     0271  00F0               	movwf	___flge@ff1
  2745     0272  303F               	movlw	63
  2746     0273  00F7               	movwf	___flge@ff2+3
  2747     0274  3080               	movlw	128
  2748     0275  00F6               	movwf	___flge@ff2+2
  2749     0276  3000               	movlw	0
  2750     0277  00F5               	movwf	___flge@ff2+1
  2751     0278  3000               	movlw	0
  2752     0279  00F4               	movwf	___flge@ff2
  2753     027A  160A  158A  26CC  120A  118A  	fcall	___flge
  2754     027F  1803               	btfsc	3,0
  2755     0280  2A87               	goto	l3575
  2756                           
  2757                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2758     0281  30FF               	movlw	255
  2759     0282  07B6               	addwf	sprintf@eexp^(0+128),f
  2760     0283  1803               	skipnc
  2761     0284  0AB7               	incf	(sprintf@eexp+1)^(0+128),f
  2762     0285  30FF               	movlw	255
  2763     0286  2AA3               	goto	L1
  2764     0287                     l3575:
  2765     0287  0831               	movf	(sprintf@tmpval+3)^(0+128),w
  2766     0288  00F3               	movwf	___flge@ff1+3
  2767     0289  0830               	movf	(sprintf@tmpval+2)^(0+128),w
  2768     028A  00F2               	movwf	___flge@ff1+2
  2769     028B  082F               	movf	(sprintf@tmpval+1)^(0+128),w
  2770     028C  00F1               	movwf	___flge@ff1+1
  2771     028D  082E               	movf	sprintf@tmpval^(0+128),w
  2772     028E  00F0               	movwf	___flge@ff1
  2773     028F  3041               	movlw	65
  2774     0290  00F7               	movwf	___flge@ff2+3
  2775     0291  3020               	movlw	32
  2776     0292  00F6               	movwf	___flge@ff2+2
  2777     0293  3000               	movlw	0
  2778     0294  00F5               	movwf	___flge@ff2+1
  2779     0295  3000               	movlw	0
  2780     0296  00F4               	movwf	___flge@ff2
  2781     0297  160A  158A  26CC  120A  118A  	fcall	___flge
  2782     029C  1C03               	btfss	3,0
  2783     029D  2AA4               	goto	l3579
  2784                           
  2785                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2786     029E  3001               	movlw	1
  2787     029F  07B6               	addwf	sprintf@eexp^(0+128),f
  2788     02A0  1803               	skipnc
  2789     02A1  0AB7               	incf	(sprintf@eexp+1)^(0+128),f
  2790     02A2  3000               	movlw	0
  2791     02A3                     L1:
  2792     02A3  07B7               	addwf	(sprintf@eexp+1)^(0+128),f
  2793     02A4                     l3579:
  2794                           
  2795                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2796     02A4  083E               	movf	(sprintf@prec+1)^(0+128),w
  2797     02A5  3A80               	xorlw	128
  2798     02A6  00FF               	movwf	127
  2799     02A7  3080               	movlw	128
  2800     02A8  027F               	subwf	127,w
  2801     02A9  1D03               	skipz
  2802     02AA  2AAD               	goto	u5815
  2803     02AB  300D               	movlw	13
  2804     02AC  023D               	subwf	sprintf@prec^(0+128),w
  2805     02AD                     u5815:
  2806     02AD  1803               	skipnc
  2807     02AE  2AE3               	goto	l3583
  2808                           
  2809                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2810     02AF  1683               	bsf	3,5	;RP0=1, select bank1
  2811     02B0  1303               	bcf	3,6	;RP1=0, select bank1
  2812     02B1  083D               	movf	sprintf@prec^(0+128),w
  2813     02B2  160A  118A  216E  120A  118A  	fcall	_fround
  2814     02B7  083D               	movf	?_fround+3,w
  2815     02B8  00CF               	movwf	___fladd@b+3
  2816     02B9  083C               	movf	?_fround+2,w
  2817     02BA  00CE               	movwf	___fladd@b+2
  2818     02BB  083B               	movf	?_fround+1,w
  2819     02BC  00CD               	movwf	___fladd@b+1
  2820     02BD  083A               	movf	?_fround,w
  2821     02BE  00CC               	movwf	___fladd@b
  2822     02BF  1683               	bsf	3,5	;RP0=1, select bank1
  2823     02C0  083B               	movf	(sprintf@fval+3)^(0+128),w
  2824     02C1  1283               	bcf	3,5	;RP0=0, select bank0
  2825     02C2  00D3               	movwf	___fladd@a+3
  2826     02C3  1683               	bsf	3,5	;RP0=1, select bank1
  2827     02C4  083A               	movf	(sprintf@fval+2)^(0+128),w
  2828     02C5  1283               	bcf	3,5	;RP0=0, select bank0
  2829     02C6  00D2               	movwf	___fladd@a+2
  2830     02C7  1683               	bsf	3,5	;RP0=1, select bank1
  2831     02C8  0839               	movf	(sprintf@fval+1)^(0+128),w
  2832     02C9  1283               	bcf	3,5	;RP0=0, select bank0
  2833     02CA  00D1               	movwf	___fladd@a+1
  2834     02CB  1683               	bsf	3,5	;RP0=1, select bank1
  2835     02CC  0838               	movf	sprintf@fval^(0+128),w
  2836     02CD  1283               	bcf	3,5	;RP0=0, select bank0
  2837     02CE  00D0               	movwf	___fladd@a
  2838     02CF  160A  118A  233D  120A  118A  	fcall	___fladd
  2839     02D4  084F               	movf	?___fladd+3,w
  2840     02D5  1683               	bsf	3,5	;RP0=1, select bank1
  2841     02D6  00BB               	movwf	(sprintf@fval+3)^(0+128)
  2842     02D7  1283               	bcf	3,5	;RP0=0, select bank0
  2843     02D8  084E               	movf	?___fladd+2,w
  2844     02D9  1683               	bsf	3,5	;RP0=1, select bank1
  2845     02DA  00BA               	movwf	(sprintf@fval+2)^(0+128)
  2846     02DB  1283               	bcf	3,5	;RP0=0, select bank0
  2847     02DC  084D               	movf	?___fladd+1,w
  2848     02DD  1683               	bsf	3,5	;RP0=1, select bank1
  2849     02DE  00B9               	movwf	(sprintf@fval+1)^(0+128)
  2850     02DF  1283               	bcf	3,5	;RP0=0, select bank0
  2851     02E0  084C               	movf	?___fladd,w
  2852     02E1  1683               	bsf	3,5	;RP0=1, select bank1
  2853     02E2  00B8               	movwf	sprintf@fval^(0+128)
  2854     02E3                     l3583:
  2855                           
  2856                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2857     02E3  1683               	bsf	3,5	;RP0=1, select bank1
  2858     02E4  1303               	bcf	3,6	;RP1=0, select bank1
  2859     02E5  0837               	movf	(sprintf@eexp+1)^(0+128),w
  2860     02E6  3A80               	xorlw	128
  2861     02E7  00FF               	movwf	127
  2862     02E8  3080               	movlw	128
  2863     02E9  027F               	subwf	127,w
  2864     02EA  1D03               	skipz
  2865     02EB  2AEE               	goto	u5825
  2866     02EC  300A               	movlw	10
  2867     02ED  0236               	subwf	sprintf@eexp^(0+128),w
  2868     02EE                     u5825:
  2869     02EE  1803               	skipnc
  2870     02EF  2B2F               	goto	l3591
  2871     02F0  1683               	bsf	3,5	;RP0=1, select bank1
  2872     02F1  1303               	bcf	3,6	;RP1=0, select bank1
  2873     02F2  083B               	movf	(sprintf@fval+3)^(0+128),w
  2874     02F3  00F3               	movwf	___fleq@ff1+3
  2875     02F4  083A               	movf	(sprintf@fval+2)^(0+128),w
  2876     02F5  00F2               	movwf	___fleq@ff1+2
  2877     02F6  0839               	movf	(sprintf@fval+1)^(0+128),w
  2878     02F7  00F1               	movwf	___fleq@ff1+1
  2879     02F8  0838               	movf	sprintf@fval^(0+128),w
  2880     02F9  00F0               	movwf	___fleq@ff1
  2881     02FA  3000               	movlw	0
  2882     02FB  00F7               	movwf	___fleq@ff2+3
  2883     02FC  3000               	movlw	0
  2884     02FD  00F6               	movwf	___fleq@ff2+2
  2885     02FE  3000               	movlw	0
  2886     02FF  00F5               	movwf	___fleq@ff2+1
  2887     0300  3000               	movlw	0
  2888     0301  00F4               	movwf	___fleq@ff2
  2889     0302  160A  158A  24CF  120A  118A  	fcall	___fleq
  2890     0307  1803               	btfsc	3,0
  2891     0308  2B8C               	goto	l3605
  2892     0309  083B               	movf	(sprintf@fval+3)^(0+128),w
  2893     030A  1283               	bcf	3,5	;RP0=0, select bank0
  2894     030B  00D0               	movwf	___fltol@f1+3
  2895     030C  1683               	bsf	3,5	;RP0=1, select bank1
  2896     030D  083A               	movf	(sprintf@fval+2)^(0+128),w
  2897     030E  1283               	bcf	3,5	;RP0=0, select bank0
  2898     030F  00CF               	movwf	___fltol@f1+2
  2899     0310  1683               	bsf	3,5	;RP0=1, select bank1
  2900     0311  0839               	movf	(sprintf@fval+1)^(0+128),w
  2901     0312  1283               	bcf	3,5	;RP0=0, select bank0
  2902     0313  00CE               	movwf	___fltol@f1+1
  2903     0314  1683               	bsf	3,5	;RP0=1, select bank1
  2904     0315  0838               	movf	sprintf@fval^(0+128),w
  2905     0316  1283               	bcf	3,5	;RP0=0, select bank0
  2906     0317  00CD               	movwf	___fltol@f1
  2907     0318  160A  158A  2665  120A  118A  	fcall	___fltol
  2908     031D  0850               	movf	?___fltol+3,w
  2909     031E  044F               	iorwf	?___fltol+2,w
  2910     031F  044E               	iorwf	?___fltol+1,w
  2911     0320  044D               	iorwf	?___fltol,w
  2912     0321  1D03               	skipz
  2913     0322  2B8C               	goto	l3605
  2914     0323  1683               	bsf	3,5	;RP0=1, select bank1
  2915     0324  0837               	movf	(sprintf@eexp+1)^(0+128),w
  2916     0325  3A80               	xorlw	128
  2917     0326  00FF               	movwf	127
  2918     0327  3080               	movlw	128
  2919     0328  027F               	subwf	127,w
  2920     0329  1D03               	skipz
  2921     032A  2B2D               	goto	u5855
  2922     032B  3002               	movlw	2
  2923     032C  0236               	subwf	sprintf@eexp^(0+128),w
  2924     032D                     u5855:
  2925     032D  1C03               	skipc
  2926     032E  2B8C               	goto	l3605
  2927     032F                     l3591:
  2928                           
  2929                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  2930     032F  1683               	bsf	3,5	;RP0=1, select bank1
  2931     0330  1303               	bcf	3,6	;RP1=0, select bank1
  2932     0331  0831               	movf	(sprintf@tmpval+3)^(0+128),w
  2933     0332  00F3               	movwf	___flge@ff1+3
  2934     0333  0830               	movf	(sprintf@tmpval+2)^(0+128),w
  2935     0334  00F2               	movwf	___flge@ff1+2
  2936     0335  082F               	movf	(sprintf@tmpval+1)^(0+128),w
  2937     0336  00F1               	movwf	___flge@ff1+1
  2938     0337  082E               	movf	sprintf@tmpval^(0+128),w
  2939     0338  00F0               	movwf	___flge@ff1
  2940     0339  3040               	movlw	64
  2941     033A  00F7               	movwf	___flge@ff2+3
  2942     033B  3089               	movlw	137
  2943     033C  00F6               	movwf	___flge@ff2+2
  2944     033D  3070               	movlw	112
  2945     033E  00F5               	movwf	___flge@ff2+1
  2946     033F  305F               	movlw	95
  2947     0340  00F4               	movwf	___flge@ff2
  2948     0341  160A  158A  26CC  120A  118A  	fcall	___flge
  2949     0346  1803               	btfsc	3,0
  2950     0347  2B4A               	goto	l3595
  2951                           
  2952                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  2953     0348  30F7               	movlw	247
  2954     0349  2B4B               	goto	L2
  2955     034A                     l3595:	
  2956                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1148:      }else{
  2957                           
  2958                           
  2959                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  2960     034A  30F8               	movlw	248
  2961     034B                     L2:
  2962     034B  07B6               	addwf	sprintf@eexp^(0+128),f
  2963     034C  1803               	skipnc
  2964     034D  0AB7               	incf	(sprintf@eexp+1)^(0+128),f
  2965     034E  30FF               	movlw	255
  2966     034F  07B7               	addwf	(sprintf@eexp+1)^(0+128),f
  2967                           
  2968                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  2969     0350  0836               	movf	sprintf@eexp^(0+128),w
  2970     0351  120A  158A  249C  120A  118A  	fcall	_scale
  2971     0356  083D               	movf	?_scale+3,w
  2972     0357  1683               	bsf	3,5	;RP0=1, select bank1
  2973     0358  00B1               	movwf	(sprintf@tmpval+3)^(0+128)
  2974     0359  1283               	bcf	3,5	;RP0=0, select bank0
  2975     035A  083C               	movf	?_scale+2,w
  2976     035B  1683               	bsf	3,5	;RP0=1, select bank1
  2977     035C  00B0               	movwf	(sprintf@tmpval+2)^(0+128)
  2978     035D  1283               	bcf	3,5	;RP0=0, select bank0
  2979     035E  083B               	movf	?_scale+1,w
  2980     035F  1683               	bsf	3,5	;RP0=1, select bank1
  2981     0360  00AF               	movwf	(sprintf@tmpval+1)^(0+128)
  2982     0361  1283               	bcf	3,5	;RP0=0, select bank0
  2983     0362  083A               	movf	?_scale,w
  2984     0363  1683               	bsf	3,5	;RP0=1, select bank1
  2985     0364  00AE               	movwf	sprintf@tmpval^(0+128)
  2986     0365  083B               	movf	(sprintf@fval+3)^(0+128),w
  2987     0366  00F3               	movwf	__div_to_l_@f1+3
  2988     0367  083A               	movf	(sprintf@fval+2)^(0+128),w
  2989     0368  00F2               	movwf	__div_to_l_@f1+2
  2990     0369  0839               	movf	(sprintf@fval+1)^(0+128),w
  2991     036A  00F1               	movwf	__div_to_l_@f1+1
  2992     036B  0838               	movf	sprintf@fval^(0+128),w
  2993     036C  00F0               	movwf	__div_to_l_@f1
  2994     036D  0831               	movf	(sprintf@tmpval+3)^(0+128),w
  2995     036E  00F7               	movwf	__div_to_l_@f2+3
  2996     036F  0830               	movf	(sprintf@tmpval+2)^(0+128),w
  2997     0370  00F6               	movwf	__div_to_l_@f2+2
  2998     0371  082F               	movf	(sprintf@tmpval+1)^(0+128),w
  2999     0372  00F5               	movwf	__div_to_l_@f2+1
  3000     0373  082E               	movf	sprintf@tmpval^(0+128),w
  3001     0374  00F4               	movwf	__div_to_l_@f2
  3002     0375  160A  118A  2028  120A  118A  	fcall	__div_to_l_
  3003     037A  0873               	movf	?__div_to_l_+3,w
  3004     037B  1683               	bsf	3,5	;RP0=1, select bank1
  3005     037C  00B5               	movwf	(sprintf@val+3)^(0+128)
  3006     037D  0872               	movf	?__div_to_l_+2,w
  3007     037E  00B4               	movwf	(sprintf@val+2)^(0+128)
  3008     037F  0871               	movf	?__div_to_l_+1,w
  3009     0380  00B3               	movwf	(sprintf@val+1)^(0+128)
  3010     0381  0870               	movf	?__div_to_l_,w
  3011     0382  00B2               	movwf	sprintf@val^(0+128)
  3012                           
  3013                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  3014     0383  3000               	movlw	0
  3015     0384  00BB               	movwf	(sprintf@fval+3)^(0+128)
  3016     0385  3000               	movlw	0
  3017     0386  00BA               	movwf	(sprintf@fval+2)^(0+128)
  3018     0387  3000               	movlw	0
  3019     0388  00B9               	movwf	(sprintf@fval+1)^(0+128)
  3020     0389  3000               	movlw	0
  3021     038A  00B8               	movwf	sprintf@fval^(0+128)
  3022                           
  3023                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  3024     038B  2BEF               	goto	l3609
  3025     038C                     l3605:
  3026                           
  3027                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  3028     038C  1683               	bsf	3,5	;RP0=1, select bank1
  3029     038D  1303               	bcf	3,6	;RP1=0, select bank1
  3030     038E  083B               	movf	(sprintf@fval+3)^(0+128),w
  3031     038F  1283               	bcf	3,5	;RP0=0, select bank0
  3032     0390  00D0               	movwf	___fltol@f1+3
  3033     0391  1683               	bsf	3,5	;RP0=1, select bank1
  3034     0392  083A               	movf	(sprintf@fval+2)^(0+128),w
  3035     0393  1283               	bcf	3,5	;RP0=0, select bank0
  3036     0394  00CF               	movwf	___fltol@f1+2
  3037     0395  1683               	bsf	3,5	;RP0=1, select bank1
  3038     0396  0839               	movf	(sprintf@fval+1)^(0+128),w
  3039     0397  1283               	bcf	3,5	;RP0=0, select bank0
  3040     0398  00CE               	movwf	___fltol@f1+1
  3041     0399  1683               	bsf	3,5	;RP0=1, select bank1
  3042     039A  0838               	movf	sprintf@fval^(0+128),w
  3043     039B  1283               	bcf	3,5	;RP0=0, select bank0
  3044     039C  00CD               	movwf	___fltol@f1
  3045     039D  160A  158A  2665  120A  118A  	fcall	___fltol
  3046     03A2  0850               	movf	?___fltol+3,w
  3047     03A3  1683               	bsf	3,5	;RP0=1, select bank1
  3048     03A4  00B5               	movwf	(sprintf@val+3)^(0+128)
  3049     03A5  1283               	bcf	3,5	;RP0=0, select bank0
  3050     03A6  084F               	movf	?___fltol+2,w
  3051     03A7  1683               	bsf	3,5	;RP0=1, select bank1
  3052     03A8  00B4               	movwf	(sprintf@val+2)^(0+128)
  3053     03A9  1283               	bcf	3,5	;RP0=0, select bank0
  3054     03AA  084E               	movf	?___fltol+1,w
  3055     03AB  1683               	bsf	3,5	;RP0=1, select bank1
  3056     03AC  00B3               	movwf	(sprintf@val+1)^(0+128)
  3057     03AD  1283               	bcf	3,5	;RP0=0, select bank0
  3058     03AE  084D               	movf	?___fltol,w
  3059     03AF  1683               	bsf	3,5	;RP0=1, select bank1
  3060     03B0  00B2               	movwf	sprintf@val^(0+128)
  3061                           
  3062                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  3063     03B1  0835               	movf	(sprintf@val+3)^(0+128),w
  3064     03B2  00F3               	movwf	___xxtofl@val+3
  3065     03B3  0834               	movf	(sprintf@val+2)^(0+128),w
  3066     03B4  00F2               	movwf	___xxtofl@val+2
  3067     03B5  0833               	movf	(sprintf@val+1)^(0+128),w
  3068     03B6  00F1               	movwf	___xxtofl@val+1
  3069     03B7  0832               	movf	sprintf@val^(0+128),w
  3070     03B8  00F0               	movwf	___xxtofl@val
  3071     03B9  3000               	movlw	0
  3072     03BA  160A  158A  275F  120A  118A  	fcall	___xxtofl
  3073     03BF  0873               	movf	?___xxtofl+3,w
  3074     03C0  1283               	bcf	3,5	;RP0=0, select bank0
  3075     03C1  1303               	bcf	3,6	;RP1=0, select bank0
  3076     03C2  00E3               	movwf	___flsub@a+3
  3077     03C3  0872               	movf	?___xxtofl+2,w
  3078     03C4  00E2               	movwf	___flsub@a+2
  3079     03C5  0871               	movf	?___xxtofl+1,w
  3080     03C6  00E1               	movwf	___flsub@a+1
  3081     03C7  0870               	movf	?___xxtofl,w
  3082     03C8  00E0               	movwf	___flsub@a
  3083     03C9  1683               	bsf	3,5	;RP0=1, select bank1
  3084     03CA  083B               	movf	(sprintf@fval+3)^(0+128),w
  3085     03CB  1283               	bcf	3,5	;RP0=0, select bank0
  3086     03CC  00E7               	movwf	___flsub@b+3
  3087     03CD  1683               	bsf	3,5	;RP0=1, select bank1
  3088     03CE  083A               	movf	(sprintf@fval+2)^(0+128),w
  3089     03CF  1283               	bcf	3,5	;RP0=0, select bank0
  3090     03D0  00E6               	movwf	___flsub@b+2
  3091     03D1  1683               	bsf	3,5	;RP0=1, select bank1
  3092     03D2  0839               	movf	(sprintf@fval+1)^(0+128),w
  3093     03D3  1283               	bcf	3,5	;RP0=0, select bank0
  3094     03D4  00E5               	movwf	___flsub@b+1
  3095     03D5  1683               	bsf	3,5	;RP0=1, select bank1
  3096     03D6  0838               	movf	sprintf@fval^(0+128),w
  3097     03D7  1283               	bcf	3,5	;RP0=0, select bank0
  3098     03D8  00E4               	movwf	___flsub@b
  3099     03D9  160A  158A  238C  120A  118A  	fcall	___flsub
  3100     03DE  0863               	movf	?___flsub+3,w
  3101     03DF  1683               	bsf	3,5	;RP0=1, select bank1
  3102     03E0  00BB               	movwf	(sprintf@fval+3)^(0+128)
  3103     03E1  1283               	bcf	3,5	;RP0=0, select bank0
  3104     03E2  0862               	movf	?___flsub+2,w
  3105     03E3  1683               	bsf	3,5	;RP0=1, select bank1
  3106     03E4  00BA               	movwf	(sprintf@fval+2)^(0+128)
  3107     03E5  1283               	bcf	3,5	;RP0=0, select bank0
  3108     03E6  0861               	movf	?___flsub+1,w
  3109     03E7  1683               	bsf	3,5	;RP0=1, select bank1
  3110     03E8  00B9               	movwf	(sprintf@fval+1)^(0+128)
  3111     03E9  1283               	bcf	3,5	;RP0=0, select bank0
  3112     03EA  0860               	movf	?___flsub,w
  3113     03EB  1683               	bsf	3,5	;RP0=1, select bank1
  3114     03EC  00B8               	movwf	sprintf@fval^(0+128)
  3115                           
  3116                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  3117     03ED  01B6               	clrf	sprintf@eexp^(0+128)
  3118     03EE  01B7               	clrf	(sprintf@eexp+1)^(0+128)
  3119     03EF                     l3609:
  3120                           
  3121                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  3122     03EF  01BF               	clrf	sprintf@c^(0+128)
  3123     03F0  0ABF               	incf	sprintf@c^(0+128),f
  3124     03F1                     l3615:
  3125                           
  3126                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  3127     03F1  083F               	movf	sprintf@c^(0+128),w
  3128     03F2  00A0               	movwf	??_sprintf^(0+128)
  3129     03F3  3001               	movlw	1
  3130     03F4                     u5875:
  3131     03F4  1003               	clrc
  3132     03F5  0DA0               	rlf	??_sprintf^(0+128),f
  3133     03F6  3EFF               	addlw	-1
  3134     03F7  1D03               	skipz
  3135     03F8  2BF4               	goto	u5875
  3136     03F9  1003               	clrc
  3137     03FA  0D20               	rlf	??_sprintf^(0+128),w
  3138     03FB  3E7A               	addlw	low (_dpowers| (0+32768))
  3139     03FC  0084               	movwf	4
  3140     03FD  3098               	movlw	high (_dpowers| (0+32768))
  3141     03FE  1803               	skipnc
  3142     03FF  3E01               	addlw	1
  3143     0400  1283               	bcf	3,5	;RP0=0, select bank0
  3144     0401  00FF               	movwf	127
  3145     0402  160A  158A  2000  120A  118A  	fcall	stringtab
  3146     0407  1683               	bsf	3,5	;RP0=1, select bank1
  3147     0408  00A1               	movwf	(??_sprintf+1)^(0+128)
  3148     0409  1283               	bcf	3,5	;RP0=0, select bank0
  3149     040A  160A  158A  2000  120A  118A  	fcall	stringtab
  3150     040F  1683               	bsf	3,5	;RP0=1, select bank1
  3151     0410  00A2               	movwf	((??_sprintf+1)^(0+128)+1)
  3152     0411  1283               	bcf	3,5	;RP0=0, select bank0
  3153     0412  160A  158A  2000  120A  118A  	fcall	stringtab
  3154     0417  1683               	bsf	3,5	;RP0=1, select bank1
  3155     0418  00A3               	movwf	((??_sprintf+1)^(0+128)+2)
  3156     0419  1283               	bcf	3,5	;RP0=0, select bank0
  3157     041A  160A  158A  2000  120A  118A  	fcall	stringtab
  3158     041F  1683               	bsf	3,5	;RP0=1, select bank1
  3159     0420  00A4               	movwf	((??_sprintf+1)^(0+128)+3)
  3160     0421  0824               	movf	(??_sprintf+4)^(0+128),w
  3161     0422  0235               	subwf	(sprintf@val+3)^(0+128),w
  3162     0423  1D03               	skipz
  3163     0424  2C2F               	goto	u5885
  3164     0425  0823               	movf	(??_sprintf+3)^(0+128),w
  3165     0426  0234               	subwf	(sprintf@val+2)^(0+128),w
  3166     0427  1D03               	skipz
  3167     0428  2C2F               	goto	u5885
  3168     0429  0822               	movf	(??_sprintf+2)^(0+128),w
  3169     042A  0233               	subwf	(sprintf@val+1)^(0+128),w
  3170     042B  1D03               	skipz
  3171     042C  2C2F               	goto	u5885
  3172     042D  0821               	movf	(??_sprintf+1)^(0+128),w
  3173     042E  0232               	subwf	sprintf@val^(0+128),w
  3174     042F                     u5885:
  3175     042F  1C03               	btfss	3,0
  3176     0430  2C39               	goto	l3623
  3177     0431  3001               	movlw	1
  3178     0432  00FF               	movwf	127
  3179     0433  087F               	movf	127,w
  3180     0434  07BF               	addwf	sprintf@c^(0+128),f
  3181     0435  300A               	movlw	10
  3182     0436  063F               	xorwf	sprintf@c^(0+128),w
  3183     0437  1D03               	btfss	3,2
  3184     0438  2BF1               	goto	l3615
  3185     0439                     l3623:
  3186                           
  3187                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1168:     width -
      +                          = prec + c + eexp;
  3188     0439  083F               	movf	sprintf@c^(0+128),w
  3189     043A  073D               	addwf	sprintf@prec^(0+128),w
  3190     043B  00A0               	movwf	??_sprintf^(0+128)
  3191     043C  083E               	movf	(sprintf@prec+1)^(0+128),w
  3192     043D  1803               	skipnc
  3193     043E  0A3E               	incf	(sprintf@prec+1)^(0+128),w
  3194     043F  00A1               	movwf	(??_sprintf^(0+128)+1)
  3195     0440  0836               	movf	sprintf@eexp^(0+128),w
  3196     0441  0720               	addwf	??_sprintf^(0+128),w
  3197     0442  00A2               	movwf	(??_sprintf+2)^(0+128)
  3198     0443  0837               	movf	(sprintf@eexp+1)^(0+128),w
  3199     0444  1803               	skipnc
  3200     0445  0A37               	incf	(sprintf@eexp+1)^(0+128),w
  3201     0446  0721               	addwf	(??_sprintf+1)^(0+128),w
  3202     0447  00A3               	movwf	(??_sprintf+3)^(0+128)
  3203     0448  0822               	movf	(??_sprintf+2)^(0+128),w
  3204     0449  02AC               	subwf	sprintf@width^(0+128),f
  3205     044A  0823               	movf	(??_sprintf+3)^(0+128),w
  3206     044B  1C03               	skipc
  3207     044C  03AD               	decf	(sprintf@width+1)^(0+128),f
  3208     044D  02AD               	subwf	(sprintf@width+1)^(0+128),f
  3209                           
  3210                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1169:     if(
  3211     044E  083D               	movf	sprintf@prec^(0+128),w
  3212     044F  043E               	iorwf	(sprintf@prec+1)^(0+128),w
  3213     0450  1903               	btfsc	3,2
  3214     0451  2C58               	goto	l3627
  3215                           
  3216                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1174:      width-
      +                          -;
  3217     0452  30FF               	movlw	255
  3218     0453  07AC               	addwf	sprintf@width^(0+128),f
  3219     0454  1803               	skipnc
  3220     0455  0AAD               	incf	(sprintf@width+1)^(0+128),f
  3221     0456  30FF               	movlw	255
  3222     0457  07AD               	addwf	(sprintf@width+1)^(0+128),f
  3223     0458                     l3627:
  3224                           
  3225                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1175:     if(flag
      +                           & 0x03)
  3226     0458  082A               	movf	sprintf@flag^(0+128),w
  3227     0459  3903               	andlw	3
  3228     045A  1D03               	btfss	3,2
  3229     045B  2C72               	goto	l3629
  3230     045C                     l3637:
  3231                           
  3232                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1206:      while(
      +                          width > 0) {
  3233     045C  082D               	movf	(sprintf@width+1)^(0+128),w
  3234     045D  3A80               	xorlw	128
  3235     045E  00FF               	movwf	127
  3236     045F  3080               	movlw	128
  3237     0460  027F               	subwf	127,w
  3238     0461  1D03               	skipz
  3239     0462  2C65               	goto	u5925
  3240     0463  3001               	movlw	1
  3241     0464  022C               	subwf	sprintf@width^(0+128),w
  3242     0465                     u5925:
  3243     0465  1C03               	btfss	3,0
  3244     0466  2C79               	goto	l3639
  3245                           
  3246                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1207:       ((*sp
      +                          ++ = (' ')));
  3247     0467  1683               	bsf	3,5	;RP0=1, select bank1
  3248     0468  1303               	bcf	3,6	;RP1=0, select bank1
  3249     0469  083C               	movf	sprintf@sp^(0+128),w
  3250     046A  0084               	movwf	4
  3251     046B  3020               	movlw	32
  3252     046C  1783               	bsf	3,7	;select IRP bank2
  3253     046D  0080               	movwf	0
  3254     046E  3001               	movlw	1
  3255     046F  00FF               	movwf	127
  3256     0470  087F               	movf	127,w
  3257     0471  07BC               	addwf	sprintf@sp^(0+128),f
  3258     0472                     l3629:
  3259                           
  3260                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1176:      width-
      +                          -;
  3261     0472  30FF               	movlw	255
  3262     0473  07AC               	addwf	sprintf@width^(0+128),f
  3263     0474  1803               	skipnc
  3264     0475  0AAD               	incf	(sprintf@width+1)^(0+128),f
  3265     0476  30FF               	movlw	255
  3266     0477  07AD               	addwf	(sprintf@width+1)^(0+128),f
  3267     0478  2C5C               	goto	l3637
  3268     0479                     l3639:
  3269                           
  3270                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1214:     if(flag
      +                           & 0x03)
  3271     0479  1683               	bsf	3,5	;RP0=1, select bank1
  3272     047A  1303               	bcf	3,6	;RP1=0, select bank1
  3273     047B  082A               	movf	sprintf@flag^(0+128),w
  3274     047C  3903               	andlw	3
  3275     047D  1903               	btfsc	3,2
  3276     047E  2C88               	goto	l3653
  3277                           
  3278                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
  3279     047F  083C               	movf	sprintf@sp^(0+128),w
  3280     0480  0084               	movwf	4
  3281     0481  302D               	movlw	45
  3282     0482                     L5:
  3283     0482  1783               	bsf	3,7	;select IRP bank2
  3284     0483  0080               	movwf	0
  3285     0484  3001               	movlw	1
  3286     0485  00FF               	movwf	127
  3287     0486  087F               	movf	127,w
  3288     0487  07BC               	addwf	sprintf@sp^(0+128),f
  3289     0488                     l3653:
  3290                           
  3291                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
  3292     0488  3001               	movlw	1
  3293     0489  02BF               	subwf	sprintf@c^(0+128),f
  3294     048A  0A3F               	incf	sprintf@c^(0+128),w
  3295     048B  1903               	btfsc	3,2
  3296     048C  2D0F               	goto	l3661
  3297                           
  3298                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  3299     048D  083F               	movf	sprintf@c^(0+128),w
  3300     048E  00A0               	movwf	??_sprintf^(0+128)
  3301     048F  3001               	movlw	1
  3302     0490                     u5945:
  3303     0490  1003               	clrc
  3304     0491  0DA0               	rlf	??_sprintf^(0+128),f
  3305     0492  3EFF               	addlw	-1
  3306     0493  1D03               	skipz
  3307     0494  2C90               	goto	u5945
  3308     0495  1003               	clrc
  3309     0496  0D20               	rlf	??_sprintf^(0+128),w
  3310     0497  3E7A               	addlw	low (_dpowers| (0+32768))
  3311     0498  0084               	movwf	4
  3312     0499  3098               	movlw	high (_dpowers| (0+32768))
  3313     049A  1803               	skipnc
  3314     049B  3E01               	addlw	1
  3315     049C  1283               	bcf	3,5	;RP0=0, select bank0
  3316     049D  00FF               	movwf	127
  3317     049E  160A  158A  2000  120A  118A  	fcall	stringtab
  3318     04A3  00F0               	movwf	___lldiv@divisor
  3319     04A4  160A  158A  2000  120A  118A  	fcall	stringtab
  3320     04A9  00F1               	movwf	___lldiv@divisor+1
  3321     04AA  160A  158A  2000  120A  118A  	fcall	stringtab
  3322     04AF  00F2               	movwf	___lldiv@divisor+2
  3323     04B0  160A  158A  2000  120A  118A  	fcall	stringtab
  3324     04B5  00F3               	movwf	___lldiv@divisor+3
  3325     04B6  1683               	bsf	3,5	;RP0=1, select bank1
  3326     04B7  0835               	movf	(sprintf@val+3)^(0+128),w
  3327     04B8  00F7               	movwf	___lldiv@dividend+3
  3328     04B9  0834               	movf	(sprintf@val+2)^(0+128),w
  3329     04BA  00F6               	movwf	___lldiv@dividend+2
  3330     04BB  0833               	movf	(sprintf@val+1)^(0+128),w
  3331     04BC  00F5               	movwf	___lldiv@dividend+1
  3332     04BD  0832               	movf	sprintf@val^(0+128),w
  3333     04BE  00F4               	movwf	___lldiv@dividend
  3334     04BF  160A  158A  2607  120A  118A  	fcall	___lldiv
  3335     04C4  0873               	movf	?___lldiv+3,w
  3336     04C5  00B1               	movwf	(sprintf@tmpval+3)^(0+128)
  3337     04C6  0872               	movf	?___lldiv+2,w
  3338     04C7  00B0               	movwf	(sprintf@tmpval+2)^(0+128)
  3339     04C8  0871               	movf	?___lldiv+1,w
  3340     04C9  00AF               	movwf	(sprintf@tmpval+1)^(0+128)
  3341     04CA  0870               	movf	?___lldiv,w
  3342     04CB  00AE               	movwf	sprintf@tmpval^(0+128)
  3343                           
  3344                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
  3345     04CC  3000               	movlw	0
  3346     04CD  1283               	bcf	3,5	;RP0=0, select bank0
  3347     04CE  00A3               	movwf	___llmod@divisor+3
  3348     04CF  3000               	movlw	0
  3349     04D0  00A2               	movwf	___llmod@divisor+2
  3350     04D1  3000               	movlw	0
  3351     04D2  00A1               	movwf	___llmod@divisor+1
  3352     04D3  300A               	movlw	10
  3353     04D4  00A0               	movwf	___llmod@divisor
  3354     04D5  1683               	bsf	3,5	;RP0=1, select bank1
  3355     04D6  0831               	movf	(sprintf@tmpval+3)^(0+128),w
  3356     04D7  1283               	bcf	3,5	;RP0=0, select bank0
  3357     04D8  00A7               	movwf	___llmod@dividend+3
  3358     04D9  1683               	bsf	3,5	;RP0=1, select bank1
  3359     04DA  0830               	movf	(sprintf@tmpval+2)^(0+128),w
  3360     04DB  1283               	bcf	3,5	;RP0=0, select bank0
  3361     04DC  00A6               	movwf	___llmod@dividend+2
  3362     04DD  1683               	bsf	3,5	;RP0=1, select bank1
  3363     04DE  082F               	movf	(sprintf@tmpval+1)^(0+128),w
  3364     04DF  1283               	bcf	3,5	;RP0=0, select bank0
  3365     04E0  00A5               	movwf	___llmod@dividend+1
  3366     04E1  1683               	bsf	3,5	;RP0=1, select bank1
  3367     04E2  082E               	movf	sprintf@tmpval^(0+128),w
  3368     04E3  1283               	bcf	3,5	;RP0=0, select bank0
  3369     04E4  00A4               	movwf	___llmod@dividend
  3370     04E5  160A  158A  2562  120A  118A  	fcall	___llmod
  3371     04EA  0823               	movf	?___llmod+3,w
  3372     04EB  1683               	bsf	3,5	;RP0=1, select bank1
  3373     04EC  00B1               	movwf	(sprintf@tmpval+3)^(0+128)
  3374     04ED  1283               	bcf	3,5	;RP0=0, select bank0
  3375     04EE  0822               	movf	?___llmod+2,w
  3376     04EF  1683               	bsf	3,5	;RP0=1, select bank1
  3377     04F0  00B0               	movwf	(sprintf@tmpval+2)^(0+128)
  3378     04F1  1283               	bcf	3,5	;RP0=0, select bank0
  3379     04F2  0821               	movf	?___llmod+1,w
  3380     04F3  1683               	bsf	3,5	;RP0=1, select bank1
  3381     04F4  00AF               	movwf	(sprintf@tmpval+1)^(0+128)
  3382     04F5  1283               	bcf	3,5	;RP0=0, select bank0
  3383     04F6  0820               	movf	?___llmod,w
  3384     04F7  1683               	bsf	3,5	;RP0=1, select bank1
  3385     04F8  00AE               	movwf	sprintf@tmpval^(0+128)
  3386                           
  3387                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
  3388     04F9  083C               	movf	sprintf@sp^(0+128),w
  3389     04FA  0084               	movwf	4
  3390     04FB  082E               	movf	sprintf@tmpval^(0+128),w
  3391     04FC  3E30               	addlw	48
  3392     04FD  2C82               	goto	L5
  3393     04FE                     l3655:
  3394                           
  3395                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
  3396     04FE  1683               	bsf	3,5	;RP0=1, select bank1
  3397     04FF  1303               	bcf	3,6	;RP1=0, select bank1
  3398     0500  083C               	movf	sprintf@sp^(0+128),w
  3399     0501  0084               	movwf	4
  3400     0502  3030               	movlw	48
  3401     0503  1783               	bsf	3,7	;select IRP bank2
  3402     0504  0080               	movwf	0
  3403     0505  3001               	movlw	1
  3404     0506  00FF               	movwf	127
  3405     0507  087F               	movf	127,w
  3406     0508  07BC               	addwf	sprintf@sp^(0+128),f
  3407                           
  3408                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  3409     0509  30FF               	movlw	255
  3410     050A  07B6               	addwf	sprintf@eexp^(0+128),f
  3411     050B  1803               	skipnc
  3412     050C  0AB7               	incf	(sprintf@eexp+1)^(0+128),f
  3413     050D  30FF               	movlw	255
  3414     050E  07B7               	addwf	(sprintf@eexp+1)^(0+128),f
  3415     050F                     l3661:
  3416                           
  3417                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
  3418     050F  0837               	movf	(sprintf@eexp+1)^(0+128),w
  3419     0510  3A80               	xorlw	128
  3420     0511  00FF               	movwf	127
  3421     0512  3080               	movlw	128
  3422     0513  027F               	subwf	127,w
  3423     0514  1D03               	skipz
  3424     0515  2D18               	goto	u5965
  3425     0516  3001               	movlw	1
  3426     0517  0236               	subwf	sprintf@eexp^(0+128),w
  3427     0518                     u5965:
  3428     0518  1803               	skipnc
  3429     0519  2CFE               	goto	l3655
  3430                           
  3431                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3432     051A  1683               	bsf	3,5	;RP0=1, select bank1
  3433     051B  1303               	bcf	3,6	;RP1=0, select bank1
  3434     051C  083E               	movf	(sprintf@prec+1)^(0+128),w
  3435     051D  3A80               	xorlw	128
  3436     051E  00FF               	movwf	127
  3437     051F  3080               	movlw	128
  3438     0520  027F               	subwf	127,w
  3439     0521  1D03               	skipz
  3440     0522  2D25               	goto	u5975
  3441     0523  3009               	movlw	9
  3442     0524  023D               	subwf	sprintf@prec^(0+128),w
  3443     0525                     u5975:
  3444     0525  1C03               	skipc
  3445     0526  2D2B               	goto	l3667
  3446                           
  3447                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
  3448     0527  3008               	movlw	8
  3449     0528  1683               	bsf	3,5	;RP0=1, select bank1
  3450     0529  1303               	bcf	3,6	;RP1=0, select bank1
  3451     052A  2D2E               	goto	L3
  3452     052B                     l3667:
  3453                           
  3454                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
  3455     052B  1683               	bsf	3,5	;RP0=1, select bank1
  3456     052C  1303               	bcf	3,6	;RP1=0, select bank1
  3457     052D  083D               	movf	sprintf@prec^(0+128),w
  3458     052E                     L3:
  3459     052E  00BF               	movwf	sprintf@c^(0+128)
  3460                           
  3461                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
  3462     052F  083F               	movf	sprintf@c^(0+128),w
  3463     0530  00A0               	movwf	??_sprintf^(0+128)
  3464     0531  01A1               	clrf	(??_sprintf^(0+128)+1)
  3465     0532  0820               	movf	??_sprintf^(0+128),w
  3466     0533  02BD               	subwf	sprintf@prec^(0+128),f
  3467     0534  0821               	movf	(??_sprintf+1)^(0+128),w
  3468     0535  1C03               	skipc
  3469     0536  03BE               	decf	(sprintf@prec+1)^(0+128),f
  3470     0537  02BE               	subwf	(sprintf@prec+1)^(0+128),f
  3471                           
  3472                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  3473     0538  083F               	movf	sprintf@c^(0+128),w
  3474     0539  1903               	btfsc	3,2
  3475     053A  2D44               	goto	l3675
  3476                           
  3477                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
  3478     053B  083C               	movf	sprintf@sp^(0+128),w
  3479     053C  0084               	movwf	4
  3480     053D  302E               	movlw	46
  3481     053E  1783               	bsf	3,7	;select IRP bank2
  3482     053F  0080               	movwf	0
  3483     0540  3001               	movlw	1
  3484     0541  00FF               	movwf	127
  3485     0542  087F               	movf	127,w
  3486     0543  07BC               	addwf	sprintf@sp^(0+128),f
  3487     0544                     l3675:
  3488                           
  3489                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3490     0544  083F               	movf	sprintf@c^(0+128),w
  3491     0545  120A  158A  249C  120A  118A  	fcall	_scale
  3492     054A  083D               	movf	?_scale+3,w
  3493     054B  1683               	bsf	3,5	;RP0=1, select bank1
  3494     054C  00A8               	movwf	(_sprintf$874+3)^(0+128)
  3495     054D  1283               	bcf	3,5	;RP0=0, select bank0
  3496     054E  083C               	movf	?_scale+2,w
  3497     054F  1683               	bsf	3,5	;RP0=1, select bank1
  3498     0550  00A7               	movwf	(_sprintf$874+2)^(0+128)
  3499     0551  1283               	bcf	3,5	;RP0=0, select bank0
  3500     0552  083B               	movf	?_scale+1,w
  3501     0553  1683               	bsf	3,5	;RP0=1, select bank1
  3502     0554  00A6               	movwf	(_sprintf$874+1)^(0+128)
  3503     0555  1283               	bcf	3,5	;RP0=0, select bank0
  3504     0556  083A               	movf	?_scale,w
  3505     0557  1683               	bsf	3,5	;RP0=1, select bank1
  3506     0558  00A5               	movwf	_sprintf$874^(0+128)
  3507                           
  3508                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3509     0559  0828               	movf	(_sprintf$874+3)^(0+128),w
  3510     055A  1283               	bcf	3,5	;RP0=0, select bank0
  3511     055B  00A7               	movwf	___flmul@a+3
  3512     055C  1683               	bsf	3,5	;RP0=1, select bank1
  3513     055D  0827               	movf	(_sprintf$874+2)^(0+128),w
  3514     055E  1283               	bcf	3,5	;RP0=0, select bank0
  3515     055F  00A6               	movwf	___flmul@a+2
  3516     0560  1683               	bsf	3,5	;RP0=1, select bank1
  3517     0561  0826               	movf	(_sprintf$874+1)^(0+128),w
  3518     0562  1283               	bcf	3,5	;RP0=0, select bank0
  3519     0563  00A5               	movwf	___flmul@a+1
  3520     0564  1683               	bsf	3,5	;RP0=1, select bank1
  3521     0565  0825               	movf	_sprintf$874^(0+128),w
  3522     0566  1283               	bcf	3,5	;RP0=0, select bank0
  3523     0567  00A4               	movwf	___flmul@a
  3524     0568  1683               	bsf	3,5	;RP0=1, select bank1
  3525     0569  083B               	movf	(sprintf@fval+3)^(0+128),w
  3526     056A  1283               	bcf	3,5	;RP0=0, select bank0
  3527     056B  00A3               	movwf	___flmul@b+3
  3528     056C  1683               	bsf	3,5	;RP0=1, select bank1
  3529     056D  083A               	movf	(sprintf@fval+2)^(0+128),w
  3530     056E  1283               	bcf	3,5	;RP0=0, select bank0
  3531     056F  00A2               	movwf	___flmul@b+2
  3532     0570  1683               	bsf	3,5	;RP0=1, select bank1
  3533     0571  0839               	movf	(sprintf@fval+1)^(0+128),w
  3534     0572  1283               	bcf	3,5	;RP0=0, select bank0
  3535     0573  00A1               	movwf	___flmul@b+1
  3536     0574  1683               	bsf	3,5	;RP0=1, select bank1
  3537     0575  0838               	movf	sprintf@fval^(0+128),w
  3538     0576  1283               	bcf	3,5	;RP0=0, select bank0
  3539     0577  00A0               	movwf	___flmul@b
  3540     0578  120A  158A  21C3  120A  118A  	fcall	___flmul
  3541     057D  0823               	movf	?___flmul+3,w
  3542     057E  00D0               	movwf	___fltol@f1+3
  3543     057F  0822               	movf	?___flmul+2,w
  3544     0580  00CF               	movwf	___fltol@f1+2
  3545     0581  0821               	movf	?___flmul+1,w
  3546     0582  00CE               	movwf	___fltol@f1+1
  3547     0583  0820               	movf	?___flmul,w
  3548     0584  00CD               	movwf	___fltol@f1
  3549     0585  160A  158A  2665  120A  118A  	fcall	___fltol
  3550     058A  0850               	movf	?___fltol+3,w
  3551     058B  1683               	bsf	3,5	;RP0=1, select bank1
  3552     058C  00B5               	movwf	(sprintf@val+3)^(0+128)
  3553     058D  1283               	bcf	3,5	;RP0=0, select bank0
  3554     058E  084F               	movf	?___fltol+2,w
  3555     058F  1683               	bsf	3,5	;RP0=1, select bank1
  3556     0590  00B4               	movwf	(sprintf@val+2)^(0+128)
  3557     0591  1283               	bcf	3,5	;RP0=0, select bank0
  3558     0592  084E               	movf	?___fltol+1,w
  3559     0593  1683               	bsf	3,5	;RP0=1, select bank1
  3560     0594  00B3               	movwf	(sprintf@val+1)^(0+128)
  3561     0595  1283               	bcf	3,5	;RP0=0, select bank0
  3562     0596  084D               	movf	?___fltol,w
  3563     0597                     L4:
  3564     0597  1683               	bsf	3,5	;RP0=1, select bank1
  3565     0598  00B2               	movwf	sprintf@val^(0+128)
  3566                           
  3567                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3568     0599  3001               	movlw	1
  3569     059A  02BF               	subwf	sprintf@c^(0+128),f
  3570     059B  0A3F               	incf	sprintf@c^(0+128),w
  3571     059C  1903               	btfsc	3,2
  3572     059D  2E6F               	goto	l3697
  3573                           
  3574                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
  3575                           
  3576                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3577     059E  083F               	movf	sprintf@c^(0+128),w
  3578     059F  00A0               	movwf	??_sprintf^(0+128)
  3579     05A0  3001               	movlw	1
  3580     05A1                     u5995:
  3581     05A1  1003               	clrc
  3582     05A2  0DA0               	rlf	??_sprintf^(0+128),f
  3583     05A3  3EFF               	addlw	-1
  3584     05A4  1D03               	skipz
  3585     05A5  2DA1               	goto	u5995
  3586     05A6  1003               	clrc
  3587     05A7  0D20               	rlf	??_sprintf^(0+128),w
  3588     05A8  3E7A               	addlw	low (_dpowers| (0+32768))
  3589     05A9  0084               	movwf	4
  3590     05AA  3098               	movlw	high (_dpowers| (0+32768))
  3591     05AB  1803               	skipnc
  3592     05AC  3E01               	addlw	1
  3593     05AD  1283               	bcf	3,5	;RP0=0, select bank0
  3594     05AE  00FF               	movwf	127
  3595     05AF  160A  158A  2000  120A  118A  	fcall	stringtab
  3596     05B4  00F0               	movwf	___lldiv@divisor
  3597     05B5  160A  158A  2000  120A  118A  	fcall	stringtab
  3598     05BA  00F1               	movwf	___lldiv@divisor+1
  3599     05BB  160A  158A  2000  120A  118A  	fcall	stringtab
  3600     05C0  00F2               	movwf	___lldiv@divisor+2
  3601     05C1  160A  158A  2000  120A  118A  	fcall	stringtab
  3602     05C6  00F3               	movwf	___lldiv@divisor+3
  3603     05C7  1683               	bsf	3,5	;RP0=1, select bank1
  3604     05C8  0835               	movf	(sprintf@val+3)^(0+128),w
  3605     05C9  00F7               	movwf	___lldiv@dividend+3
  3606     05CA  0834               	movf	(sprintf@val+2)^(0+128),w
  3607     05CB  00F6               	movwf	___lldiv@dividend+2
  3608     05CC  0833               	movf	(sprintf@val+1)^(0+128),w
  3609     05CD  00F5               	movwf	___lldiv@dividend+1
  3610     05CE  0832               	movf	sprintf@val^(0+128),w
  3611     05CF  00F4               	movwf	___lldiv@dividend
  3612     05D0  160A  158A  2607  120A  118A  	fcall	___lldiv
  3613     05D5  0873               	movf	?___lldiv+3,w
  3614     05D6  00B1               	movwf	(sprintf@tmpval+3)^(0+128)
  3615     05D7  0872               	movf	?___lldiv+2,w
  3616     05D8  00B0               	movwf	(sprintf@tmpval+2)^(0+128)
  3617     05D9  0871               	movf	?___lldiv+1,w
  3618     05DA  00AF               	movwf	(sprintf@tmpval+1)^(0+128)
  3619     05DB  0870               	movf	?___lldiv,w
  3620     05DC  00AE               	movwf	sprintf@tmpval^(0+128)
  3621                           
  3622                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
  3623     05DD  3000               	movlw	0
  3624     05DE  1283               	bcf	3,5	;RP0=0, select bank0
  3625     05DF  00A3               	movwf	___llmod@divisor+3
  3626     05E0  3000               	movlw	0
  3627     05E1  00A2               	movwf	___llmod@divisor+2
  3628     05E2  3000               	movlw	0
  3629     05E3  00A1               	movwf	___llmod@divisor+1
  3630     05E4  300A               	movlw	10
  3631     05E5  00A0               	movwf	___llmod@divisor
  3632     05E6  1683               	bsf	3,5	;RP0=1, select bank1
  3633     05E7  0831               	movf	(sprintf@tmpval+3)^(0+128),w
  3634     05E8  1283               	bcf	3,5	;RP0=0, select bank0
  3635     05E9  00A7               	movwf	___llmod@dividend+3
  3636     05EA  1683               	bsf	3,5	;RP0=1, select bank1
  3637     05EB  0830               	movf	(sprintf@tmpval+2)^(0+128),w
  3638     05EC  1283               	bcf	3,5	;RP0=0, select bank0
  3639     05ED  00A6               	movwf	___llmod@dividend+2
  3640     05EE  1683               	bsf	3,5	;RP0=1, select bank1
  3641     05EF  082F               	movf	(sprintf@tmpval+1)^(0+128),w
  3642     05F0  1283               	bcf	3,5	;RP0=0, select bank0
  3643     05F1  00A5               	movwf	___llmod@dividend+1
  3644     05F2  1683               	bsf	3,5	;RP0=1, select bank1
  3645     05F3  082E               	movf	sprintf@tmpval^(0+128),w
  3646     05F4  1283               	bcf	3,5	;RP0=0, select bank0
  3647     05F5  00A4               	movwf	___llmod@dividend
  3648     05F6  160A  158A  2562  120A  118A  	fcall	___llmod
  3649     05FB  0823               	movf	?___llmod+3,w
  3650     05FC  1683               	bsf	3,5	;RP0=1, select bank1
  3651     05FD  00B1               	movwf	(sprintf@tmpval+3)^(0+128)
  3652     05FE  1283               	bcf	3,5	;RP0=0, select bank0
  3653     05FF  0822               	movf	?___llmod+2,w
  3654     0600  1683               	bsf	3,5	;RP0=1, select bank1
  3655     0601  00B0               	movwf	(sprintf@tmpval+2)^(0+128)
  3656     0602  1283               	bcf	3,5	;RP0=0, select bank0
  3657     0603  0821               	movf	?___llmod+1,w
  3658     0604  1683               	bsf	3,5	;RP0=1, select bank1
  3659     0605  00AF               	movwf	(sprintf@tmpval+1)^(0+128)
  3660     0606  1283               	bcf	3,5	;RP0=0, select bank0
  3661     0607  0820               	movf	?___llmod,w
  3662     0608  1683               	bsf	3,5	;RP0=1, select bank1
  3663     0609  00AE               	movwf	sprintf@tmpval^(0+128)
  3664                           
  3665                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
  3666     060A  083C               	movf	sprintf@sp^(0+128),w
  3667     060B  0084               	movwf	4
  3668     060C  082E               	movf	sprintf@tmpval^(0+128),w
  3669     060D  3E30               	addlw	48
  3670     060E  1783               	bsf	3,7	;select IRP bank2
  3671     060F  0080               	movwf	0
  3672     0610  3001               	movlw	1
  3673     0611  00FF               	movwf	127
  3674     0612  087F               	movf	127,w
  3675     0613  07BC               	addwf	sprintf@sp^(0+128),f
  3676                           
  3677                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
  3678     0614  083F               	movf	sprintf@c^(0+128),w
  3679     0615  00A0               	movwf	??_sprintf^(0+128)
  3680     0616  3001               	movlw	1
  3681     0617                     u6005:
  3682     0617  1003               	clrc
  3683     0618  0DA0               	rlf	??_sprintf^(0+128),f
  3684     0619  3EFF               	addlw	-1
  3685     061A  1D03               	skipz
  3686     061B  2E17               	goto	u6005
  3687     061C  1003               	clrc
  3688     061D  0D20               	rlf	??_sprintf^(0+128),w
  3689     061E  3E7A               	addlw	low (_dpowers| (0+32768))
  3690     061F  0084               	movwf	4
  3691     0620  3098               	movlw	high (_dpowers| (0+32768))
  3692     0621  1803               	skipnc
  3693     0622  3E01               	addlw	1
  3694     0623  1283               	bcf	3,5	;RP0=0, select bank0
  3695     0624  00FF               	movwf	127
  3696     0625  160A  158A  2000  120A  118A  	fcall	stringtab
  3697     062A  00A0               	movwf	___llmod@divisor
  3698     062B  160A  158A  2000  120A  118A  	fcall	stringtab
  3699     0630  00A1               	movwf	___llmod@divisor+1
  3700     0631  160A  158A  2000  120A  118A  	fcall	stringtab
  3701     0636  00A2               	movwf	___llmod@divisor+2
  3702     0637  160A  158A  2000  120A  118A  	fcall	stringtab
  3703     063C  00A3               	movwf	___llmod@divisor+3
  3704     063D  1683               	bsf	3,5	;RP0=1, select bank1
  3705     063E  0835               	movf	(sprintf@val+3)^(0+128),w
  3706     063F  1283               	bcf	3,5	;RP0=0, select bank0
  3707     0640  00A7               	movwf	___llmod@dividend+3
  3708     0641  1683               	bsf	3,5	;RP0=1, select bank1
  3709     0642  0834               	movf	(sprintf@val+2)^(0+128),w
  3710     0643  1283               	bcf	3,5	;RP0=0, select bank0
  3711     0644  00A6               	movwf	___llmod@dividend+2
  3712     0645  1683               	bsf	3,5	;RP0=1, select bank1
  3713     0646  0833               	movf	(sprintf@val+1)^(0+128),w
  3714     0647  1283               	bcf	3,5	;RP0=0, select bank0
  3715     0648  00A5               	movwf	___llmod@dividend+1
  3716     0649  1683               	bsf	3,5	;RP0=1, select bank1
  3717     064A  0832               	movf	sprintf@val^(0+128),w
  3718     064B  1283               	bcf	3,5	;RP0=0, select bank0
  3719     064C  00A4               	movwf	___llmod@dividend
  3720     064D  160A  158A  2562  120A  118A  	fcall	___llmod
  3721     0652  0823               	movf	?___llmod+3,w
  3722     0653  1683               	bsf	3,5	;RP0=1, select bank1
  3723     0654  00B5               	movwf	(sprintf@val+3)^(0+128)
  3724     0655  1283               	bcf	3,5	;RP0=0, select bank0
  3725     0656  0822               	movf	?___llmod+2,w
  3726     0657  1683               	bsf	3,5	;RP0=1, select bank1
  3727     0658  00B4               	movwf	(sprintf@val+2)^(0+128)
  3728     0659  1283               	bcf	3,5	;RP0=0, select bank0
  3729     065A  0821               	movf	?___llmod+1,w
  3730     065B  1683               	bsf	3,5	;RP0=1, select bank1
  3731     065C  00B3               	movwf	(sprintf@val+1)^(0+128)
  3732     065D  1283               	bcf	3,5	;RP0=0, select bank0
  3733     065E  0820               	movf	?___llmod,w
  3734     065F  2D97               	goto	L4
  3735     0660                     l3691:
  3736                           
  3737                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
  3738     0660  083C               	movf	sprintf@sp^(0+128),w
  3739     0661  0084               	movwf	4
  3740     0662  3030               	movlw	48
  3741     0663  1783               	bsf	3,7	;select IRP bank2
  3742     0664  0080               	movwf	0
  3743     0665  3001               	movlw	1
  3744     0666  00FF               	movwf	127
  3745     0667  087F               	movf	127,w
  3746     0668  07BC               	addwf	sprintf@sp^(0+128),f
  3747                           
  3748                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1263:     prec--;
  3749     0669  30FF               	movlw	255
  3750     066A  07BD               	addwf	sprintf@prec^(0+128),f
  3751     066B  1803               	skipnc
  3752     066C  0ABE               	incf	(sprintf@prec+1)^(0+128),f
  3753     066D  30FF               	movlw	255
  3754     066E  07BE               	addwf	(sprintf@prec+1)^(0+128),f
  3755     066F                     l3697:
  3756                           
  3757                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
  3758     066F  083D               	movf	sprintf@prec^(0+128),w
  3759     0670  043E               	iorwf	(sprintf@prec+1)^(0+128),w
  3760     0671  1903               	btfsc	3,2
  3761     0672  2862               	goto	l3783
  3762     0673  2E60               	goto	l3691
  3763     0674                     l307:	
  3764                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1272:   }
  3765                           
  3766                           
  3767                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1277:   if((flag 
      +                          & 0x40) == 0x00)
  3768     0674  1B2A               	btfsc	sprintf@flag^(0+128),6
  3769     0675  2E9D               	goto	l3709
  3770                           
  3771                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           long)(*(int *)__va_arg((*(int **)ap), (int)0));
  3772     0676  0829               	movf	sprintf@ap^(0+128),w
  3773     0677  0084               	movwf	4
  3774     0678  1383               	bcf	3,7	;select IRP bank0
  3775     0679  0800               	movf	0,w
  3776     067A  00A0               	movwf	??_sprintf^(0+128)
  3777     067B  0A84               	incf	4,f
  3778     067C  0800               	movf	0,w
  3779     067D  00A1               	movwf	(??_sprintf^(0+128)+1)
  3780     067E  0820               	movf	??_sprintf^(0+128),w
  3781     067F  00B2               	movwf	sprintf@val^(0+128)
  3782     0680  0821               	movf	(??_sprintf+1)^(0+128),w
  3783     0681  00B3               	movwf	(sprintf@val+1)^(0+128)
  3784     0682  3000               	movlw	0
  3785     0683  1BB3               	btfsc	(sprintf@val+1)^(0+128),7
  3786     0684  30FF               	movlw	255
  3787     0685  00B4               	movwf	(sprintf@val+2)^(0+128)
  3788     0686  00B5               	movwf	(sprintf@val+3)^(0+128)
  3789     0687  3002               	movlw	2
  3790     0688  00FF               	movwf	127
  3791     0689  087F               	movf	127,w
  3792     068A  07A9               	addwf	sprintf@ap^(0+128),f
  3793                           
  3794                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1287:    if((long
      +                          )val < 0) {
  3795     068B  1FB5               	btfss	(sprintf@val+3)^(0+128),7
  3796     068C  2EAF               	goto	l3713
  3797                           
  3798                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  3799     068D  3003               	movlw	3
  3800     068E  04AA               	iorwf	sprintf@flag^(0+128),f
  3801     068F  3000               	movlw	0
  3802     0690  04AB               	iorwf	(sprintf@flag+1)^(0+128),f
  3803                           
  3804                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  3805     0691  09B2               	comf	sprintf@val^(0+128),f
  3806     0692  09B3               	comf	(sprintf@val+1)^(0+128),f
  3807     0693  09B4               	comf	(sprintf@val+2)^(0+128),f
  3808     0694  09B5               	comf	(sprintf@val+3)^(0+128),f
  3809     0695  0AB2               	incf	sprintf@val^(0+128),f
  3810     0696  1903               	skipnz
  3811     0697  0AB3               	incf	(sprintf@val+1)^(0+128),f
  3812     0698  1903               	skipnz
  3813     0699  0AB4               	incf	(sprintf@val+2)^(0+128),f
  3814     069A  1903               	skipnz
  3815     069B  0AB5               	incf	(sprintf@val+3)^(0+128),f
  3816     069C  2EAF               	goto	l3713
  3817     069D                     l3709:
  3818                           
  3819                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
  3820     069D  0829               	movf	sprintf@ap^(0+128),w
  3821     069E  0084               	movwf	4
  3822     069F  1383               	bcf	3,7	;select IRP bank0
  3823     06A0  0800               	movf	0,w
  3824     06A1  00A0               	movwf	??_sprintf^(0+128)
  3825     06A2  0A84               	incf	4,f
  3826     06A3  0800               	movf	0,w
  3827     06A4  00A1               	movwf	(??_sprintf^(0+128)+1)
  3828     06A5  0820               	movf	??_sprintf^(0+128),w
  3829     06A6  00B2               	movwf	sprintf@val^(0+128)
  3830     06A7  0821               	movf	(??_sprintf+1)^(0+128),w
  3831     06A8  00B3               	movwf	(sprintf@val^(0+128)+1)
  3832     06A9  01B4               	clrf	(sprintf@val^(0+128)+2)
  3833     06AA  01B5               	clrf	(sprintf@val^(0+128)+3)
  3834     06AB  3002               	movlw	2
  3835     06AC  00FF               	movwf	127
  3836     06AD  087F               	movf	127,w
  3837     06AE  07A9               	addwf	sprintf@ap^(0+128),f
  3838     06AF                     l3713:
  3839                           
  3840                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1316:   if(prec =
      +                          = 0 && val == 0)
  3841     06AF  083D               	movf	sprintf@prec^(0+128),w
  3842     06B0  043E               	iorwf	(sprintf@prec+1)^(0+128),w
  3843     06B1  1D03               	btfss	3,2
  3844     06B2  2EBF               	goto	l3719
  3845     06B3  0835               	movf	(sprintf@val+3)^(0+128),w
  3846     06B4  0434               	iorwf	(sprintf@val+2)^(0+128),w
  3847     06B5  0433               	iorwf	(sprintf@val+1)^(0+128),w
  3848     06B6  0432               	iorwf	sprintf@val^(0+128),w
  3849     06B7  1D03               	skipz
  3850     06B8  2EBF               	goto	l3719
  3851                           
  3852                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  3853     06B9  3001               	movlw	1
  3854     06BA  07BD               	addwf	sprintf@prec^(0+128),f
  3855     06BB  1803               	skipnc
  3856     06BC  0ABE               	incf	(sprintf@prec+1)^(0+128),f
  3857     06BD  3000               	movlw	0
  3858     06BE  07BE               	addwf	(sprintf@prec+1)^(0+128),f
  3859     06BF                     l3719:
  3860                           
  3861                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3862     06BF  01BF               	clrf	sprintf@c^(0+128)
  3863     06C0  0ABF               	incf	sprintf@c^(0+128),f
  3864     06C1                     l3725:
  3865                           
  3866                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  3867     06C1  083F               	movf	sprintf@c^(0+128),w
  3868     06C2  00A0               	movwf	??_sprintf^(0+128)
  3869     06C3  3001               	movlw	1
  3870     06C4                     u6075:
  3871     06C4  1003               	clrc
  3872     06C5  0DA0               	rlf	??_sprintf^(0+128),f
  3873     06C6  3EFF               	addlw	-1
  3874     06C7  1D03               	skipz
  3875     06C8  2EC4               	goto	u6075
  3876     06C9  1003               	clrc
  3877     06CA  0D20               	rlf	??_sprintf^(0+128),w
  3878     06CB  3E7A               	addlw	low (_dpowers| (0+32768))
  3879     06CC  0084               	movwf	4
  3880     06CD  3098               	movlw	high (_dpowers| (0+32768))
  3881     06CE  1803               	skipnc
  3882     06CF  3E01               	addlw	1
  3883     06D0  1283               	bcf	3,5	;RP0=0, select bank0
  3884     06D1  00FF               	movwf	127
  3885     06D2  160A  158A  2000  120A  118A  	fcall	stringtab
  3886     06D7  1683               	bsf	3,5	;RP0=1, select bank1
  3887     06D8  00A1               	movwf	(??_sprintf+1)^(0+128)
  3888     06D9  1283               	bcf	3,5	;RP0=0, select bank0
  3889     06DA  160A  158A  2000  120A  118A  	fcall	stringtab
  3890     06DF  1683               	bsf	3,5	;RP0=1, select bank1
  3891     06E0  00A2               	movwf	((??_sprintf+1)^(0+128)+1)
  3892     06E1  1283               	bcf	3,5	;RP0=0, select bank0
  3893     06E2  160A  158A  2000  120A  118A  	fcall	stringtab
  3894     06E7  1683               	bsf	3,5	;RP0=1, select bank1
  3895     06E8  00A3               	movwf	((??_sprintf+1)^(0+128)+2)
  3896     06E9  1283               	bcf	3,5	;RP0=0, select bank0
  3897     06EA  160A  158A  2000  120A  118A  	fcall	stringtab
  3898     06EF  1683               	bsf	3,5	;RP0=1, select bank1
  3899     06F0  00A4               	movwf	((??_sprintf+1)^(0+128)+3)
  3900     06F1  0824               	movf	(??_sprintf+4)^(0+128),w
  3901     06F2  0235               	subwf	(sprintf@val+3)^(0+128),w
  3902     06F3  1D03               	skipz
  3903     06F4  2EFF               	goto	u6085
  3904     06F5  0823               	movf	(??_sprintf+3)^(0+128),w
  3905     06F6  0234               	subwf	(sprintf@val+2)^(0+128),w
  3906     06F7  1D03               	skipz
  3907     06F8  2EFF               	goto	u6085
  3908     06F9  0822               	movf	(??_sprintf+2)^(0+128),w
  3909     06FA  0233               	subwf	(sprintf@val+1)^(0+128),w
  3910     06FB  1D03               	skipz
  3911     06FC  2EFF               	goto	u6085
  3912     06FD  0821               	movf	(??_sprintf+1)^(0+128),w
  3913     06FE  0232               	subwf	sprintf@val^(0+128),w
  3914     06FF                     u6085:
  3915     06FF  1C03               	btfss	3,0
  3916     0700  2F09               	goto	l3733
  3917     0701  3001               	movlw	1
  3918     0702  00FF               	movwf	127
  3919     0703  087F               	movf	127,w
  3920     0704  07BF               	addwf	sprintf@c^(0+128),f
  3921     0705  300A               	movlw	10
  3922     0706  063F               	xorwf	sprintf@c^(0+128),w
  3923     0707  1D03               	btfss	3,2
  3924     0708  2EC1               	goto	l3725
  3925     0709                     l3733:
  3926                           
  3927                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  3928     0709  083E               	movf	(sprintf@prec+1)^(0+128),w
  3929     070A  3A80               	xorlw	128
  3930     070B  3C80               	sublw	128
  3931     070C  1D03               	skipz
  3932     070D  2F10               	goto	u6105
  3933     070E  083D               	movf	sprintf@prec^(0+128),w
  3934     070F  023F               	subwf	sprintf@c^(0+128),w
  3935     0710                     u6105:
  3936     0710  1803               	skipnc
  3937     0711  2F17               	goto	l3737
  3938                           
  3939                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1366:    c = (cha
      +                          r)prec;
  3940     0712  1683               	bsf	3,5	;RP0=1, select bank1
  3941     0713  1303               	bcf	3,6	;RP1=0, select bank1
  3942     0714  083D               	movf	sprintf@prec^(0+128),w
  3943     0715  00BF               	movwf	sprintf@c^(0+128)
  3944     0716  2F2D               	goto	l3741
  3945     0717                     l3737:
  3946     0717  1683               	bsf	3,5	;RP0=1, select bank1
  3947     0718  1303               	bcf	3,6	;RP1=0, select bank1
  3948     0719  083E               	movf	(sprintf@prec+1)^(0+128),w
  3949     071A  3A80               	xorlw	128
  3950     071B  00A0               	movwf	??_sprintf^(0+128)
  3951     071C  3080               	movlw	128
  3952     071D  0220               	subwf	??_sprintf^(0+128),w
  3953     071E  1D03               	skipz
  3954     071F  2F22               	goto	u6115
  3955     0720  083F               	movf	sprintf@c^(0+128),w
  3956     0721  023D               	subwf	sprintf@prec^(0+128),w
  3957     0722                     u6115:
  3958     0722  1803               	skipnc
  3959     0723  2F2D               	goto	l3741
  3960                           
  3961                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
  3962     0724  1683               	bsf	3,5	;RP0=1, select bank1
  3963     0725  1303               	bcf	3,6	;RP1=0, select bank1
  3964     0726  083F               	movf	sprintf@c^(0+128),w
  3965     0727  00A0               	movwf	??_sprintf^(0+128)
  3966     0728  01A1               	clrf	(??_sprintf^(0+128)+1)
  3967     0729  0820               	movf	??_sprintf^(0+128),w
  3968     072A  00BD               	movwf	sprintf@prec^(0+128)
  3969     072B  0821               	movf	(??_sprintf+1)^(0+128),w
  3970     072C  00BE               	movwf	(sprintf@prec+1)^(0+128)
  3971     072D                     l3741:
  3972                           
  3973                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
  3974     072D  1683               	bsf	3,5	;RP0=1, select bank1
  3975     072E  1303               	bcf	3,6	;RP1=0, select bank1
  3976     072F  082C               	movf	sprintf@width^(0+128),w
  3977     0730  042D               	iorwf	(sprintf@width+1)^(0+128),w
  3978     0731  1903               	btfsc	3,2
  3979     0732  2F3D               	goto	l3747
  3980     0733  082A               	movf	sprintf@flag^(0+128),w
  3981     0734  3903               	andlw	3
  3982     0735  1903               	btfsc	3,2
  3983     0736  2F3D               	goto	l3747
  3984                           
  3985                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1372:    width--;
  3986     0737  30FF               	movlw	255
  3987     0738  07AC               	addwf	sprintf@width^(0+128),f
  3988     0739  1803               	skipnc
  3989     073A  0AAD               	incf	(sprintf@width+1)^(0+128),f
  3990     073B  30FF               	movlw	255
  3991     073C  07AD               	addwf	(sprintf@width+1)^(0+128),f
  3992     073D                     l3747:
  3993                           
  3994                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1374:   if(flag &
      +                           0x4000) {
  3995     073D  1F2B               	btfss	(sprintf@flag+1)^(0+128),6
  3996     073E  2F58               	goto	l3755
  3997                           
  3998                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1375:    if(width
      +                           > prec)
  3999     073F  083E               	movf	(sprintf@prec+1)^(0+128),w
  4000     0740  3A80               	xorlw	128
  4001     0741  00A0               	movwf	??_sprintf^(0+128)
  4002     0742  082D               	movf	(sprintf@width+1)^(0+128),w
  4003     0743  3A80               	xorlw	128
  4004     0744  0220               	subwf	??_sprintf^(0+128),w
  4005     0745  1D03               	skipz
  4006     0746  2F49               	goto	u6155
  4007     0747  082C               	movf	sprintf@width^(0+128),w
  4008     0748  023D               	subwf	sprintf@prec^(0+128),w
  4009     0749                     u6155:
  4010     0749  1803               	skipnc
  4011     074A  2F54               	goto	l3753
  4012                           
  4013                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1376:     width -
      +                          = prec;
  4014     074B  1683               	bsf	3,5	;RP0=1, select bank1
  4015     074C  1303               	bcf	3,6	;RP1=0, select bank1
  4016     074D  083D               	movf	sprintf@prec^(0+128),w
  4017     074E  02AC               	subwf	sprintf@width^(0+128),f
  4018     074F  083E               	movf	(sprintf@prec+1)^(0+128),w
  4019     0750  1C03               	skipc
  4020     0751  03AD               	decf	(sprintf@width+1)^(0+128),f
  4021     0752  02AD               	subwf	(sprintf@width+1)^(0+128),f
  4022     0753  2F58               	goto	l3755
  4023     0754                     l3753:
  4024                           
  4025                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1378:     width =
      +                           0;
  4026     0754  1683               	bsf	3,5	;RP0=1, select bank1
  4027     0755  1303               	bcf	3,6	;RP1=0, select bank1
  4028     0756  01AC               	clrf	sprintf@width^(0+128)
  4029     0757  01AD               	clrf	(sprintf@width+1)^(0+128)
  4030     0758                     l3755:
  4031                           
  4032                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
  4033     0758  082D               	movf	(sprintf@width+1)^(0+128),w
  4034     0759  3A80               	xorlw	128
  4035     075A  3C80               	sublw	128
  4036     075B  1D03               	skipz
  4037     075C  2F5F               	goto	u6165
  4038     075D  082C               	movf	sprintf@width^(0+128),w
  4039     075E  023F               	subwf	sprintf@c^(0+128),w
  4040     075F                     u6165:
  4041     075F  1803               	skipnc
  4042     0760  2F6D               	goto	l3759
  4043                           
  4044                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
  4045     0761  1683               	bsf	3,5	;RP0=1, select bank1
  4046     0762  1303               	bcf	3,6	;RP1=0, select bank1
  4047     0763  083F               	movf	sprintf@c^(0+128),w
  4048     0764  00A0               	movwf	??_sprintf^(0+128)
  4049     0765  01A1               	clrf	(??_sprintf^(0+128)+1)
  4050     0766  0820               	movf	??_sprintf^(0+128),w
  4051     0767  02AC               	subwf	sprintf@width^(0+128),f
  4052     0768  0821               	movf	(??_sprintf+1)^(0+128),w
  4053     0769  1C03               	skipc
  4054     076A  03AD               	decf	(sprintf@width+1)^(0+128),f
  4055     076B  02AD               	subwf	(sprintf@width+1)^(0+128),f
  4056     076C  2F71               	goto	l3761
  4057     076D                     l3759:
  4058                           
  4059                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
  4060     076D  1683               	bsf	3,5	;RP0=1, select bank1
  4061     076E  1303               	bcf	3,6	;RP1=0, select bank1
  4062     076F  01AC               	clrf	sprintf@width^(0+128)
  4063     0770  01AD               	clrf	(sprintf@width+1)^(0+128)
  4064     0771                     l3761:
  4065                           
  4066                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1450:    if(width
  4067     0771  082C               	movf	sprintf@width^(0+128),w
  4068     0772  042D               	iorwf	(sprintf@width+1)^(0+128),w
  4069     0773  1903               	btfsc	3,2
  4070     0774  2F88               	goto	l3769
  4071     0775                     l3763:
  4072                           
  4073                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
  4074     0775  083C               	movf	sprintf@sp^(0+128),w
  4075     0776  0084               	movwf	4
  4076     0777  3020               	movlw	32
  4077     0778  1783               	bsf	3,7	;select IRP bank2
  4078     0779  0080               	movwf	0
  4079     077A  3001               	movlw	1
  4080     077B  00FF               	movwf	127
  4081     077C  087F               	movf	127,w
  4082     077D  07BC               	addwf	sprintf@sp^(0+128),f
  4083     077E  30FF               	movlw	255
  4084     077F  07AC               	addwf	sprintf@width^(0+128),f
  4085     0780  1803               	skipnc
  4086     0781  0AAD               	incf	(sprintf@width+1)^(0+128),f
  4087     0782  30FF               	movlw	255
  4088     0783  07AD               	addwf	(sprintf@width+1)^(0+128),f
  4089     0784  082C               	movf	sprintf@width^(0+128),w
  4090     0785  042D               	iorwf	(sprintf@width+1)^(0+128),w
  4091     0786  1D03               	btfss	3,2
  4092     0787  2F75               	goto	l3763
  4093     0788                     l3769:
  4094                           
  4095                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
  4096     0788  082A               	movf	sprintf@flag^(0+128),w
  4097     0789  3903               	andlw	3
  4098     078A  1903               	btfsc	3,2
  4099     078B  2F95               	goto	l3781
  4100                           
  4101                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  4102     078C  083C               	movf	sprintf@sp^(0+128),w
  4103     078D  0084               	movwf	4
  4104     078E  302D               	movlw	45
  4105     078F                     L6:
  4106     078F  1783               	bsf	3,7	;select IRP bank2
  4107     0790  0080               	movwf	0
  4108     0791  3001               	movlw	1
  4109     0792  00FF               	movwf	127
  4110     0793  087F               	movf	127,w
  4111     0794  07BC               	addwf	sprintf@sp^(0+128),f
  4112     0795                     l3781:
  4113                           
  4114                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  4115     0795  30FF               	movlw	255
  4116     0796  07BD               	addwf	sprintf@prec^(0+128),f
  4117     0797  1803               	skipnc
  4118     0798  0ABE               	incf	(sprintf@prec+1)^(0+128),f
  4119     0799  30FF               	movlw	255
  4120     079A  07BE               	addwf	(sprintf@prec+1)^(0+128),f
  4121     079B  0A3D               	incf	sprintf@prec^(0+128),w
  4122     079C  1903               	btfsc	3,2
  4123     079D  0A3E               	incf	(sprintf@prec+1)^(0+128),w
  4124     079E  1903               	btfsc	3,2
  4125     079F  2862               	goto	l3783
  4126                           
  4127                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned int)prec]) % 10 + '0';
  4128     07A0  3000               	movlw	0
  4129     07A1  1283               	bcf	3,5	;RP0=0, select bank0
  4130     07A2  00A3               	movwf	___llmod@divisor+3
  4131     07A3  3000               	movlw	0
  4132     07A4  00A2               	movwf	___llmod@divisor+2
  4133     07A5  3000               	movlw	0
  4134     07A6  00A1               	movwf	___llmod@divisor+1
  4135     07A7  300A               	movlw	10
  4136     07A8  00A0               	movwf	___llmod@divisor
  4137     07A9  1683               	bsf	3,5	;RP0=1, select bank1
  4138     07AA  083D               	movf	sprintf@prec^(0+128),w
  4139     07AB  00A0               	movwf	??_sprintf^(0+128)
  4140     07AC  3001               	movlw	1
  4141     07AD                     u6205:
  4142     07AD  1003               	clrc
  4143     07AE  0DA0               	rlf	??_sprintf^(0+128),f
  4144     07AF  3EFF               	addlw	-1
  4145     07B0  1D03               	skipz
  4146     07B1  2FAD               	goto	u6205
  4147     07B2  1003               	clrc
  4148     07B3  0D20               	rlf	??_sprintf^(0+128),w
  4149     07B4  3E7A               	addlw	low (_dpowers| (0+32768))
  4150     07B5  0084               	movwf	4
  4151     07B6  3098               	movlw	high (_dpowers| (0+32768))
  4152     07B7  1803               	skipnc
  4153     07B8  3E01               	addlw	1
  4154     07B9  1283               	bcf	3,5	;RP0=0, select bank0
  4155     07BA  00FF               	movwf	127
  4156     07BB  160A  158A  2000  120A  118A  	fcall	stringtab
  4157     07C0  00F0               	movwf	___lldiv@divisor
  4158     07C1  160A  158A  2000  120A  118A  	fcall	stringtab
  4159     07C6  00F1               	movwf	___lldiv@divisor+1
  4160     07C7  160A  158A  2000  120A  118A  	fcall	stringtab
  4161     07CC  00F2               	movwf	___lldiv@divisor+2
  4162     07CD  160A  158A  2000  120A  118A  	fcall	stringtab
  4163     07D2  00F3               	movwf	___lldiv@divisor+3
  4164     07D3  1683               	bsf	3,5	;RP0=1, select bank1
  4165     07D4  0835               	movf	(sprintf@val+3)^(0+128),w
  4166     07D5  00F7               	movwf	___lldiv@dividend+3
  4167     07D6  0834               	movf	(sprintf@val+2)^(0+128),w
  4168     07D7  00F6               	movwf	___lldiv@dividend+2
  4169     07D8  0833               	movf	(sprintf@val+1)^(0+128),w
  4170     07D9  00F5               	movwf	___lldiv@dividend+1
  4171     07DA  0832               	movf	sprintf@val^(0+128),w
  4172     07DB  00F4               	movwf	___lldiv@dividend
  4173     07DC  160A  158A  2607  120A  118A  	fcall	___lldiv
  4174     07E1  0873               	movf	?___lldiv+3,w
  4175     07E2  1283               	bcf	3,5	;RP0=0, select bank0
  4176     07E3  00A7               	movwf	___llmod@dividend+3
  4177     07E4  0872               	movf	?___lldiv+2,w
  4178     07E5  00A6               	movwf	___llmod@dividend+2
  4179     07E6  0871               	movf	?___lldiv+1,w
  4180     07E7  00A5               	movwf	___llmod@dividend+1
  4181     07E8  0870               	movf	?___lldiv,w
  4182     07E9  00A4               	movwf	___llmod@dividend
  4183     07EA  160A  158A  2562  120A  118A  	fcall	___llmod
  4184     07EF  0820               	movf	?___llmod,w
  4185     07F0  3E30               	addlw	48
  4186     07F1  1683               	bsf	3,5	;RP0=1, select bank1
  4187     07F2  00BF               	movwf	sprintf@c^(0+128)
  4188                           
  4189                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  4190     07F3  083C               	movf	sprintf@sp^(0+128),w
  4191     07F4  0084               	movwf	4
  4192     07F5  083F               	movf	sprintf@c^(0+128),w
  4193     07F6  2F8F               	goto	L6
  4194     07F7                     l3785:
  4195                           
  4196                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  4197     07F7  083C               	movf	sprintf@sp^(0+128),w
  4198     07F8  0084               	movwf	4
  4199     07F9  1783               	bsf	3,7	;select IRP bank2
  4200     07FA  0180               	clrf	0
  4201     07FB  0008               	return
  4202     07FC                     __end_of_sprintf:
  4203                           
  4204                           	psect	text2
  4205     0C9C                     __ptext2:	
  4206 ;; *************** function _scale *****************
  4207 ;; Defined at:
  4208 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c"
  4209 ;; Parameters:    Size  Location     Type
  4210 ;;  scl             1    wreg     char 
  4211 ;; Auto vars:     Size  Location     Type
  4212 ;;  scl             1   44[BANK0 ] char 
  4213 ;; Return value:  Size  Location     Type
  4214 ;;                  4   26[BANK0 ] char 
  4215 ;; Registers used:
  4216 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4217 ;; Tracked objects:
  4218 ;;		On entry : 300/100
  4219 ;;		On exit  : 300/0
  4220 ;;		Unchanged: 0/0
  4221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4222 ;;      Params:         0       4       0       0       0
  4223 ;;      Locals:         0       5       0       0       0
  4224 ;;      Temps:          0      10       0       0       0
  4225 ;;      Totals:         0      19       0       0       0
  4226 ;;Total ram usage:       19 bytes
  4227 ;; Hardware stack levels used: 1
  4228 ;; Hardware stack levels required when called: 2
  4229 ;; This function calls:
  4230 ;;		___awdiv
  4231 ;;		___awmod
  4232 ;;		___flmul
  4233 ;; This function is called by:
  4234 ;;		_sprintf
  4235 ;; This function uses a non-reentrant model
  4236 ;;
  4237                           
  4238     0C9C                     _scale:	
  4239                           ;psect for function _scale
  4240                           
  4241                           
  4242                           ;incstack = 0
  4243                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4244                           ;scale@scl stored from wreg
  4245     0C9C  1283               	bcf	3,5	;RP0=0, select bank0
  4246     0C9D  00CC               	movwf	scale@scl
  4247                           
  4248                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  4249     0C9E  1FCC               	btfss	scale@scl,7
  4250     0C9F  2E51               	goto	l3113
  4251                           
  4252                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  4253     0CA0  09CC               	comf	scale@scl,f
  4254     0CA1  0ACC               	incf	scale@scl,f
  4255                           
  4256                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  4257     0CA2  084C               	movf	scale@scl,w
  4258     0CA3  3A80               	xorlw	128
  4259     0CA4  3E12               	addlw	-238
  4260     0CA5  1C03               	skipc
  4261     0CA6  2D93               	goto	l3103
  4262                           
  4263                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  4264     0CA7  300A               	movlw	10
  4265     0CA8  00F6               	movwf	___awdiv@divisor
  4266     0CA9  3000               	movlw	0
  4267     0CAA  00F7               	movwf	___awdiv@divisor+1
  4268     0CAB  084C               	movf	scale@scl,w
  4269     0CAC  00F2               	movwf	___awmod@dividend
  4270     0CAD  01F3               	clrf	___awmod@dividend+1
  4271     0CAE  1BF2               	btfsc	___awmod@dividend,7
  4272     0CAF  03F3               	decf	___awmod@dividend+1,f
  4273     0CB0  3064               	movlw	100
  4274     0CB1  00F0               	movwf	___awmod@divisor
  4275     0CB2  3000               	movlw	0
  4276     0CB3  00F1               	movwf	___awmod@divisor+1
  4277     0CB4  160A  158A  2517  120A  158A  	fcall	___awmod
  4278     0CB9  0871               	movf	?___awmod+1,w
  4279     0CBA  00F9               	movwf	___awdiv@dividend+1
  4280     0CBB  0870               	movf	?___awmod,w
  4281     0CBC  00F8               	movwf	___awdiv@dividend
  4282     0CBD  160A  158A  25AE  120A  158A  	fcall	___awdiv
  4283     0CC2  0876               	movf	?___awdiv,w
  4284     0CC3  1283               	bcf	3,5	;RP0=0, select bank0
  4285     0CC4  00BE               	movwf	??_scale
  4286     0CC5  3001               	movlw	1
  4287     0CC6                     u4675:
  4288     0CC6  1003               	clrc
  4289     0CC7  0DBE               	rlf	??_scale,f
  4290     0CC8  3EFF               	addlw	-1
  4291     0CC9  1D03               	skipz
  4292     0CCA  2CC6               	goto	u4675
  4293     0CCB  1003               	clrc
  4294     0CCC  0D3E               	rlf	??_scale,w
  4295     0CCD  3E24               	addlw	36
  4296     0CCE  3E46               	addlw	low (__npowers_| (0+32768))
  4297     0CCF  0084               	movwf	4
  4298     0CD0  3098               	movlw	high (__npowers_| (0+32768))
  4299     0CD1  1803               	skipnc
  4300     0CD2  3E01               	addlw	1
  4301     0CD3  00FF               	movwf	127
  4302     0CD4  160A  158A  2000  120A  158A  	fcall	stringtab
  4303     0CD9  00BF               	movwf	??_scale+1
  4304     0CDA  160A  158A  2000  120A  158A  	fcall	stringtab
  4305     0CDF  00C0               	movwf	??_scale+2
  4306     0CE0  160A  158A  2000  120A  158A  	fcall	stringtab
  4307     0CE5  00C1               	movwf	??_scale+3
  4308     0CE6  160A  158A  2000  120A  158A  	fcall	stringtab
  4309     0CEB  00C2               	movwf	??_scale+4
  4310     0CEC  0842               	movf	??_scale+4,w
  4311     0CED  00A3               	movwf	___flmul@b+3
  4312     0CEE  0841               	movf	??_scale+3,w
  4313     0CEF  00A2               	movwf	___flmul@b+2
  4314     0CF0  0840               	movf	??_scale+2,w
  4315     0CF1  00A1               	movwf	___flmul@b+1
  4316     0CF2  083F               	movf	??_scale+1,w
  4317     0CF3  00A0               	movwf	___flmul@b
  4318     0CF4  3064               	movlw	100
  4319     0CF5  00F6               	movwf	___awdiv@divisor
  4320     0CF6  3000               	movlw	0
  4321     0CF7  00F7               	movwf	___awdiv@divisor+1
  4322     0CF8  084C               	movf	scale@scl,w
  4323     0CF9  00F8               	movwf	___awdiv@dividend
  4324     0CFA  01F9               	clrf	___awdiv@dividend+1
  4325     0CFB  1BF8               	btfsc	___awdiv@dividend,7
  4326     0CFC  03F9               	decf	___awdiv@dividend+1,f
  4327     0CFD  160A  158A  25AE  120A  158A  	fcall	___awdiv
  4328     0D02  0876               	movf	?___awdiv,w
  4329     0D03  1283               	bcf	3,5	;RP0=0, select bank0
  4330     0D04  00C3               	movwf	??_scale+5
  4331     0D05  3001               	movlw	1
  4332     0D06                     u4685:
  4333     0D06  1003               	clrc
  4334     0D07  0DC3               	rlf	??_scale+5,f
  4335     0D08  3EFF               	addlw	-1
  4336     0D09  1D03               	skipz
  4337     0D0A  2D06               	goto	u4685
  4338     0D0B  1003               	clrc
  4339     0D0C  0D43               	rlf	??_scale+5,w
  4340     0D0D  3E48               	addlw	72
  4341     0D0E  3E46               	addlw	low (__npowers_| (0+32768))
  4342     0D0F  0084               	movwf	4
  4343     0D10  3098               	movlw	high (__npowers_| (0+32768))
  4344     0D11  1803               	skipnc
  4345     0D12  3E01               	addlw	1
  4346     0D13  00FF               	movwf	127
  4347     0D14  160A  158A  2000  120A  158A  	fcall	stringtab
  4348     0D19  00C4               	movwf	??_scale+6
  4349     0D1A  160A  158A  2000  120A  158A  	fcall	stringtab
  4350     0D1F  00C5               	movwf	??_scale+7
  4351     0D20  160A  158A  2000  120A  158A  	fcall	stringtab
  4352     0D25  00C6               	movwf	??_scale+8
  4353     0D26  160A  158A  2000  120A  158A  	fcall	stringtab
  4354     0D2B  00C7               	movwf	??_scale+9
  4355     0D2C  0847               	movf	??_scale+9,w
  4356     0D2D  00A7               	movwf	___flmul@a+3
  4357     0D2E  0846               	movf	??_scale+8,w
  4358     0D2F  00A6               	movwf	___flmul@a+2
  4359     0D30  0845               	movf	??_scale+7,w
  4360     0D31  00A5               	movwf	___flmul@a+1
  4361     0D32  0844               	movf	??_scale+6,w
  4362     0D33  00A4               	movwf	___flmul@a
  4363     0D34  120A  158A  21C3  120A  158A  	fcall	___flmul
  4364     0D39  0823               	movf	?___flmul+3,w
  4365     0D3A  00CB               	movwf	_scale$873+3
  4366     0D3B  0822               	movf	?___flmul+2,w
  4367     0D3C  00CA               	movwf	_scale$873+2
  4368     0D3D  0821               	movf	?___flmul+1,w
  4369     0D3E  00C9               	movwf	_scale$873+1
  4370     0D3F  0820               	movf	?___flmul,w
  4371     0D40  00C8               	movwf	_scale$873
  4372                           
  4373                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  4374     0D41  300A               	movlw	10
  4375     0D42  00F0               	movwf	___awmod@divisor
  4376     0D43  3000               	movlw	0
  4377     0D44  00F1               	movwf	___awmod@divisor+1
  4378     0D45  084C               	movf	scale@scl,w
  4379     0D46  00F2               	movwf	___awmod@dividend
  4380     0D47  01F3               	clrf	___awmod@dividend+1
  4381     0D48  1BF2               	btfsc	___awmod@dividend,7
  4382     0D49  03F3               	decf	___awmod@dividend+1,f
  4383     0D4A  160A  158A  2517  120A  158A  	fcall	___awmod
  4384     0D4F  0870               	movf	?___awmod,w
  4385     0D50  00BE               	movwf	??_scale
  4386     0D51  3001               	movlw	1
  4387     0D52                     u4695:
  4388     0D52  1003               	clrc
  4389     0D53  0DBE               	rlf	??_scale,f
  4390     0D54  3EFF               	addlw	-1
  4391     0D55  1D03               	skipz
  4392     0D56  2D52               	goto	u4695
  4393     0D57  1003               	clrc
  4394     0D58  0D3E               	rlf	??_scale,w
  4395     0D59  3E46               	addlw	low (__npowers_| (0+32768))
  4396     0D5A  0084               	movwf	4
  4397     0D5B  3098               	movlw	high (__npowers_| (0+32768))
  4398     0D5C  1803               	skipnc
  4399     0D5D  3E01               	addlw	1
  4400     0D5E  00FF               	movwf	127
  4401     0D5F  160A  158A  2000  120A  158A  	fcall	stringtab
  4402     0D64  00BF               	movwf	??_scale+1
  4403     0D65  160A  158A  2000  120A  158A  	fcall	stringtab
  4404     0D6A  00C0               	movwf	??_scale+2
  4405     0D6B  160A  158A  2000  120A  158A  	fcall	stringtab
  4406     0D70  00C1               	movwf	??_scale+3
  4407     0D71  160A  158A  2000  120A  158A  	fcall	stringtab
  4408     0D76  00C2               	movwf	??_scale+4
  4409     0D77  0842               	movf	??_scale+4,w
  4410     0D78  00A3               	movwf	___flmul@b+3
  4411     0D79  0841               	movf	??_scale+3,w
  4412     0D7A  00A2               	movwf	___flmul@b+2
  4413     0D7B  0840               	movf	??_scale+2,w
  4414     0D7C  00A1               	movwf	___flmul@b+1
  4415     0D7D  083F               	movf	??_scale+1,w
  4416     0D7E  00A0               	movwf	___flmul@b
  4417     0D7F  084B               	movf	_scale$873+3,w
  4418     0D80  00A7               	movwf	___flmul@a+3
  4419     0D81  084A               	movf	_scale$873+2,w
  4420     0D82  00A6               	movwf	___flmul@a+2
  4421     0D83  0849               	movf	_scale$873+1,w
  4422     0D84  00A5               	movwf	___flmul@a+1
  4423     0D85  0848               	movf	_scale$873,w
  4424     0D86  00A4               	movwf	___flmul@a
  4425     0D87  120A  158A  21C3   	fcall	___flmul
  4426     0D8A  0823               	movf	?___flmul+3,w
  4427     0D8B  00BD               	movwf	?_scale+3
  4428     0D8C  0822               	movf	?___flmul+2,w
  4429     0D8D  00BC               	movwf	?_scale+2
  4430     0D8E  0821               	movf	?___flmul+1,w
  4431     0D8F  00BB               	movwf	?_scale+1
  4432     0D90  0820               	movf	?___flmul,w
  4433     0D91  00BA               	movwf	?_scale
  4434     0D92  0008               	return
  4435     0D93                     l3103:
  4436     0D93  084C               	movf	scale@scl,w
  4437     0D94  3A80               	xorlw	128
  4438     0D95  3E75               	addlw	-139
  4439     0D96  1C03               	skipc
  4440     0D97  2E22               	goto	l3109
  4441                           
  4442                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  4443     0D98  300A               	movlw	10
  4444     0D99  00F0               	movwf	___awmod@divisor
  4445     0D9A  3000               	movlw	0
  4446     0D9B  00F1               	movwf	___awmod@divisor+1
  4447     0D9C  084C               	movf	scale@scl,w
  4448     0D9D  00F2               	movwf	___awmod@dividend
  4449     0D9E  01F3               	clrf	___awmod@dividend+1
  4450     0D9F  1BF2               	btfsc	___awmod@dividend,7
  4451     0DA0  03F3               	decf	___awmod@dividend+1,f
  4452     0DA1  160A  158A  2517  120A  158A  	fcall	___awmod
  4453     0DA6  0870               	movf	?___awmod,w
  4454     0DA7  00BE               	movwf	??_scale
  4455     0DA8  3001               	movlw	1
  4456     0DA9                     u4715:
  4457     0DA9  1003               	clrc
  4458     0DAA  0DBE               	rlf	??_scale,f
  4459     0DAB  3EFF               	addlw	-1
  4460     0DAC  1D03               	skipz
  4461     0DAD  2DA9               	goto	u4715
  4462     0DAE  1003               	clrc
  4463     0DAF  0D3E               	rlf	??_scale,w
  4464     0DB0  3E46               	addlw	low (__npowers_| (0+32768))
  4465     0DB1  0084               	movwf	4
  4466     0DB2  3098               	movlw	high (__npowers_| (0+32768))
  4467     0DB3  1803               	skipnc
  4468     0DB4  3E01               	addlw	1
  4469     0DB5  00FF               	movwf	127
  4470     0DB6  160A  158A  2000  120A  158A  	fcall	stringtab
  4471     0DBB  00BF               	movwf	??_scale+1
  4472     0DBC  160A  158A  2000  120A  158A  	fcall	stringtab
  4473     0DC1  00C0               	movwf	??_scale+2
  4474     0DC2  160A  158A  2000  120A  158A  	fcall	stringtab
  4475     0DC7  00C1               	movwf	??_scale+3
  4476     0DC8  160A  158A  2000  120A  158A  	fcall	stringtab
  4477     0DCD  00C2               	movwf	??_scale+4
  4478     0DCE  0842               	movf	??_scale+4,w
  4479     0DCF  00A3               	movwf	___flmul@b+3
  4480     0DD0  0841               	movf	??_scale+3,w
  4481     0DD1  00A2               	movwf	___flmul@b+2
  4482     0DD2  0840               	movf	??_scale+2,w
  4483     0DD3  00A1               	movwf	___flmul@b+1
  4484     0DD4  083F               	movf	??_scale+1,w
  4485     0DD5  00A0               	movwf	___flmul@b
  4486     0DD6  300A               	movlw	10
  4487     0DD7  00F6               	movwf	___awdiv@divisor
  4488     0DD8  3000               	movlw	0
  4489     0DD9  00F7               	movwf	___awdiv@divisor+1
  4490     0DDA  084C               	movf	scale@scl,w
  4491     0DDB  00F8               	movwf	___awdiv@dividend
  4492     0DDC  01F9               	clrf	___awdiv@dividend+1
  4493     0DDD  1BF8               	btfsc	___awdiv@dividend,7
  4494     0DDE  03F9               	decf	___awdiv@dividend+1,f
  4495     0DDF  160A  158A  25AE  120A  158A  	fcall	___awdiv
  4496     0DE4  0876               	movf	?___awdiv,w
  4497     0DE5  1283               	bcf	3,5	;RP0=0, select bank0
  4498     0DE6  00C3               	movwf	??_scale+5
  4499     0DE7  3001               	movlw	1
  4500     0DE8                     u4725:
  4501     0DE8  1003               	clrc
  4502     0DE9  0DC3               	rlf	??_scale+5,f
  4503     0DEA  3EFF               	addlw	-1
  4504     0DEB  1D03               	skipz
  4505     0DEC  2DE8               	goto	u4725
  4506     0DED  1003               	clrc
  4507     0DEE  0D43               	rlf	??_scale+5,w
  4508     0DEF  3E24               	addlw	36
  4509     0DF0  3E46               	addlw	low (__npowers_| (0+32768))
  4510     0DF1  0084               	movwf	4
  4511     0DF2  3098               	movlw	high (__npowers_| (0+32768))
  4512     0DF3  1803               	skipnc
  4513     0DF4  3E01               	addlw	1
  4514     0DF5  00FF               	movwf	127
  4515     0DF6  160A  158A  2000  120A  158A  	fcall	stringtab
  4516     0DFB  00C4               	movwf	??_scale+6
  4517     0DFC  160A  158A  2000  120A  158A  	fcall	stringtab
  4518     0E01  00C5               	movwf	??_scale+7
  4519     0E02  160A  158A  2000  120A  158A  	fcall	stringtab
  4520     0E07  00C6               	movwf	??_scale+8
  4521     0E08  160A  158A  2000  120A  158A  	fcall	stringtab
  4522     0E0D  00C7               	movwf	??_scale+9
  4523     0E0E  0847               	movf	??_scale+9,w
  4524     0E0F  00A7               	movwf	___flmul@a+3
  4525     0E10  0846               	movf	??_scale+8,w
  4526     0E11  00A6               	movwf	___flmul@a+2
  4527     0E12  0845               	movf	??_scale+7,w
  4528     0E13  00A5               	movwf	___flmul@a+1
  4529     0E14  0844               	movf	??_scale+6,w
  4530     0E15  00A4               	movwf	___flmul@a
  4531     0E16  120A  158A  21C3   	fcall	___flmul
  4532     0E19  0823               	movf	?___flmul+3,w
  4533     0E1A  00BD               	movwf	?_scale+3
  4534     0E1B  0822               	movf	?___flmul+2,w
  4535     0E1C  00BC               	movwf	?_scale+2
  4536     0E1D  0821               	movf	?___flmul+1,w
  4537     0E1E  00BB               	movwf	?_scale+1
  4538     0E1F  0820               	movf	?___flmul,w
  4539     0E20  00BA               	movwf	?_scale
  4540     0E21  0008               	return
  4541     0E22                     l3109:
  4542                           
  4543                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  4544     0E22  084C               	movf	scale@scl,w
  4545     0E23  00BE               	movwf	??_scale
  4546     0E24  3001               	movlw	1
  4547     0E25                     u4735:
  4548     0E25  1003               	clrc
  4549     0E26  0DBE               	rlf	??_scale,f
  4550     0E27  3EFF               	addlw	-1
  4551     0E28  1D03               	skipz
  4552     0E29  2E25               	goto	u4735
  4553     0E2A  1003               	clrc
  4554     0E2B  0D3E               	rlf	??_scale,w
  4555     0E2C  3E46               	addlw	low (__npowers_| (0+32768))
  4556     0E2D  0084               	movwf	4
  4557     0E2E  3098               	movlw	high (__npowers_| (0+32768))
  4558     0E2F  1803               	skipnc
  4559     0E30  3E01               	addlw	1
  4560     0E31  00FF               	movwf	127
  4561     0E32  160A  158A  2000  120A  158A  	fcall	stringtab
  4562     0E37  00BF               	movwf	??_scale+1
  4563     0E38  160A  158A  2000  120A  158A  	fcall	stringtab
  4564     0E3D  00C0               	movwf	??_scale+2
  4565     0E3E  160A  158A  2000  120A  158A  	fcall	stringtab
  4566     0E43  00C1               	movwf	??_scale+3
  4567     0E44  160A  158A  2000   	fcall	stringtab
  4568     0E47  00C2               	movwf	??_scale+4
  4569     0E48  0842               	movf	??_scale+4,w
  4570     0E49  00BD               	movwf	?_scale+3
  4571     0E4A  0841               	movf	??_scale+3,w
  4572     0E4B  00BC               	movwf	?_scale+2
  4573     0E4C  0840               	movf	??_scale+2,w
  4574     0E4D  00BB               	movwf	?_scale+1
  4575     0E4E  083F               	movf	??_scale+1,w
  4576     0E4F  00BA               	movwf	?_scale
  4577     0E50  0008               	return
  4578     0E51                     l3113:
  4579                           
  4580                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  4581     0E51  084C               	movf	scale@scl,w
  4582     0E52  3A80               	xorlw	128
  4583     0E53  3E12               	addlw	-238
  4584     0E54  1C03               	skipc
  4585     0E55  2F42               	goto	l3121
  4586                           
  4587                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4588     0E56  300A               	movlw	10
  4589     0E57  00F6               	movwf	___awdiv@divisor
  4590     0E58  3000               	movlw	0
  4591     0E59  00F7               	movwf	___awdiv@divisor+1
  4592     0E5A  084C               	movf	scale@scl,w
  4593     0E5B  00F2               	movwf	___awmod@dividend
  4594     0E5C  01F3               	clrf	___awmod@dividend+1
  4595     0E5D  1BF2               	btfsc	___awmod@dividend,7
  4596     0E5E  03F3               	decf	___awmod@dividend+1,f
  4597     0E5F  3064               	movlw	100
  4598     0E60  00F0               	movwf	___awmod@divisor
  4599     0E61  3000               	movlw	0
  4600     0E62  00F1               	movwf	___awmod@divisor+1
  4601     0E63  160A  158A  2517  120A  158A  	fcall	___awmod
  4602     0E68  0871               	movf	?___awmod+1,w
  4603     0E69  00F9               	movwf	___awdiv@dividend+1
  4604     0E6A  0870               	movf	?___awmod,w
  4605     0E6B  00F8               	movwf	___awdiv@dividend
  4606     0E6C  160A  158A  25AE  120A  158A  	fcall	___awdiv
  4607     0E71  0876               	movf	?___awdiv,w
  4608     0E72  1283               	bcf	3,5	;RP0=0, select bank0
  4609     0E73  00BE               	movwf	??_scale
  4610     0E74  3001               	movlw	1
  4611     0E75                     u4755:
  4612     0E75  1003               	clrc
  4613     0E76  0DBE               	rlf	??_scale,f
  4614     0E77  3EFF               	addlw	-1
  4615     0E78  1D03               	skipz
  4616     0E79  2E75               	goto	u4755
  4617     0E7A  1003               	clrc
  4618     0E7B  0D3E               	rlf	??_scale,w
  4619     0E7C  3E24               	addlw	36
  4620     0E7D  3E12               	addlw	low (__powers_| (0+32768))
  4621     0E7E  0084               	movwf	4
  4622     0E7F  3098               	movlw	high (__powers_| (0+32768))
  4623     0E80  1803               	skipnc
  4624     0E81  3E01               	addlw	1
  4625     0E82  00FF               	movwf	127
  4626     0E83  160A  158A  2000  120A  158A  	fcall	stringtab
  4627     0E88  00BF               	movwf	??_scale+1
  4628     0E89  160A  158A  2000  120A  158A  	fcall	stringtab
  4629     0E8E  00C0               	movwf	??_scale+2
  4630     0E8F  160A  158A  2000  120A  158A  	fcall	stringtab
  4631     0E94  00C1               	movwf	??_scale+3
  4632     0E95  160A  158A  2000  120A  158A  	fcall	stringtab
  4633     0E9A  00C2               	movwf	??_scale+4
  4634     0E9B  0842               	movf	??_scale+4,w
  4635     0E9C  00A3               	movwf	___flmul@b+3
  4636     0E9D  0841               	movf	??_scale+3,w
  4637     0E9E  00A2               	movwf	___flmul@b+2
  4638     0E9F  0840               	movf	??_scale+2,w
  4639     0EA0  00A1               	movwf	___flmul@b+1
  4640     0EA1  083F               	movf	??_scale+1,w
  4641     0EA2  00A0               	movwf	___flmul@b
  4642     0EA3  3064               	movlw	100
  4643     0EA4  00F6               	movwf	___awdiv@divisor
  4644     0EA5  3000               	movlw	0
  4645     0EA6  00F7               	movwf	___awdiv@divisor+1
  4646     0EA7  084C               	movf	scale@scl,w
  4647     0EA8  00F8               	movwf	___awdiv@dividend
  4648     0EA9  01F9               	clrf	___awdiv@dividend+1
  4649     0EAA  1BF8               	btfsc	___awdiv@dividend,7
  4650     0EAB  03F9               	decf	___awdiv@dividend+1,f
  4651     0EAC  160A  158A  25AE  120A  158A  	fcall	___awdiv
  4652     0EB1  0876               	movf	?___awdiv,w
  4653     0EB2  1283               	bcf	3,5	;RP0=0, select bank0
  4654     0EB3  00C3               	movwf	??_scale+5
  4655     0EB4  3001               	movlw	1
  4656     0EB5                     u4765:
  4657     0EB5  1003               	clrc
  4658     0EB6  0DC3               	rlf	??_scale+5,f
  4659     0EB7  3EFF               	addlw	-1
  4660     0EB8  1D03               	skipz
  4661     0EB9  2EB5               	goto	u4765
  4662     0EBA  1003               	clrc
  4663     0EBB  0D43               	rlf	??_scale+5,w
  4664     0EBC  3E48               	addlw	72
  4665     0EBD  3E12               	addlw	low (__powers_| (0+32768))
  4666     0EBE  0084               	movwf	4
  4667     0EBF  3098               	movlw	high (__powers_| (0+32768))
  4668     0EC0  1803               	skipnc
  4669     0EC1  3E01               	addlw	1
  4670     0EC2  00FF               	movwf	127
  4671     0EC3  160A  158A  2000  120A  158A  	fcall	stringtab
  4672     0EC8  00C4               	movwf	??_scale+6
  4673     0EC9  160A  158A  2000  120A  158A  	fcall	stringtab
  4674     0ECE  00C5               	movwf	??_scale+7
  4675     0ECF  160A  158A  2000  120A  158A  	fcall	stringtab
  4676     0ED4  00C6               	movwf	??_scale+8
  4677     0ED5  160A  158A  2000  120A  158A  	fcall	stringtab
  4678     0EDA  00C7               	movwf	??_scale+9
  4679     0EDB  0847               	movf	??_scale+9,w
  4680     0EDC  00A7               	movwf	___flmul@a+3
  4681     0EDD  0846               	movf	??_scale+8,w
  4682     0EDE  00A6               	movwf	___flmul@a+2
  4683     0EDF  0845               	movf	??_scale+7,w
  4684     0EE0  00A5               	movwf	___flmul@a+1
  4685     0EE1  0844               	movf	??_scale+6,w
  4686     0EE2  00A4               	movwf	___flmul@a
  4687     0EE3  120A  158A  21C3  120A  158A  	fcall	___flmul
  4688     0EE8  0823               	movf	?___flmul+3,w
  4689     0EE9  00CB               	movwf	_scale$873+3
  4690     0EEA  0822               	movf	?___flmul+2,w
  4691     0EEB  00CA               	movwf	_scale$873+2
  4692     0EEC  0821               	movf	?___flmul+1,w
  4693     0EED  00C9               	movwf	_scale$873+1
  4694     0EEE  0820               	movf	?___flmul,w
  4695     0EEF  00C8               	movwf	_scale$873
  4696                           
  4697                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4698     0EF0  300A               	movlw	10
  4699     0EF1  00F0               	movwf	___awmod@divisor
  4700     0EF2  3000               	movlw	0
  4701     0EF3  00F1               	movwf	___awmod@divisor+1
  4702     0EF4  084C               	movf	scale@scl,w
  4703     0EF5  00F2               	movwf	___awmod@dividend
  4704     0EF6  01F3               	clrf	___awmod@dividend+1
  4705     0EF7  1BF2               	btfsc	___awmod@dividend,7
  4706     0EF8  03F3               	decf	___awmod@dividend+1,f
  4707     0EF9  160A  158A  2517  120A  158A  	fcall	___awmod
  4708     0EFE  0870               	movf	?___awmod,w
  4709     0EFF  00BE               	movwf	??_scale
  4710     0F00  3001               	movlw	1
  4711     0F01                     u4775:
  4712     0F01  1003               	clrc
  4713     0F02  0DBE               	rlf	??_scale,f
  4714     0F03  3EFF               	addlw	-1
  4715     0F04  1D03               	skipz
  4716     0F05  2F01               	goto	u4775
  4717     0F06  1003               	clrc
  4718     0F07  0D3E               	rlf	??_scale,w
  4719     0F08  3E12               	addlw	low (__powers_| (0+32768))
  4720     0F09  0084               	movwf	4
  4721     0F0A  3098               	movlw	high (__powers_| (0+32768))
  4722     0F0B  1803               	skipnc
  4723     0F0C  3E01               	addlw	1
  4724     0F0D  00FF               	movwf	127
  4725     0F0E  160A  158A  2000  120A  158A  	fcall	stringtab
  4726     0F13  00BF               	movwf	??_scale+1
  4727     0F14  160A  158A  2000  120A  158A  	fcall	stringtab
  4728     0F19  00C0               	movwf	??_scale+2
  4729     0F1A  160A  158A  2000  120A  158A  	fcall	stringtab
  4730     0F1F  00C1               	movwf	??_scale+3
  4731     0F20  160A  158A  2000  120A  158A  	fcall	stringtab
  4732     0F25  00C2               	movwf	??_scale+4
  4733     0F26  0842               	movf	??_scale+4,w
  4734     0F27  00A3               	movwf	___flmul@b+3
  4735     0F28  0841               	movf	??_scale+3,w
  4736     0F29  00A2               	movwf	___flmul@b+2
  4737     0F2A  0840               	movf	??_scale+2,w
  4738     0F2B  00A1               	movwf	___flmul@b+1
  4739     0F2C  083F               	movf	??_scale+1,w
  4740     0F2D  00A0               	movwf	___flmul@b
  4741     0F2E  084B               	movf	_scale$873+3,w
  4742     0F2F  00A7               	movwf	___flmul@a+3
  4743     0F30  084A               	movf	_scale$873+2,w
  4744     0F31  00A6               	movwf	___flmul@a+2
  4745     0F32  0849               	movf	_scale$873+1,w
  4746     0F33  00A5               	movwf	___flmul@a+1
  4747     0F34  0848               	movf	_scale$873,w
  4748     0F35  00A4               	movwf	___flmul@a
  4749     0F36  120A  158A  21C3   	fcall	___flmul
  4750     0F39  0823               	movf	?___flmul+3,w
  4751     0F3A  00BD               	movwf	?_scale+3
  4752     0F3B  0822               	movf	?___flmul+2,w
  4753     0F3C  00BC               	movwf	?_scale+2
  4754     0F3D  0821               	movf	?___flmul+1,w
  4755     0F3E  00BB               	movwf	?_scale+1
  4756     0F3F  0820               	movf	?___flmul,w
  4757     0F40  00BA               	movwf	?_scale
  4758     0F41  0008               	return
  4759     0F42                     l3121:
  4760     0F42  084C               	movf	scale@scl,w
  4761     0F43  3A80               	xorlw	128
  4762     0F44  3E75               	addlw	-139
  4763     0F45  1C03               	skipc
  4764     0F46  2FD1               	goto	l3127
  4765                           
  4766                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  4767     0F47  300A               	movlw	10
  4768     0F48  00F0               	movwf	___awmod@divisor
  4769     0F49  3000               	movlw	0
  4770     0F4A  00F1               	movwf	___awmod@divisor+1
  4771     0F4B  084C               	movf	scale@scl,w
  4772     0F4C  00F2               	movwf	___awmod@dividend
  4773     0F4D  01F3               	clrf	___awmod@dividend+1
  4774     0F4E  1BF2               	btfsc	___awmod@dividend,7
  4775     0F4F  03F3               	decf	___awmod@dividend+1,f
  4776     0F50  160A  158A  2517  120A  158A  	fcall	___awmod
  4777     0F55  0870               	movf	?___awmod,w
  4778     0F56  00BE               	movwf	??_scale
  4779     0F57  3001               	movlw	1
  4780     0F58                     u4795:
  4781     0F58  1003               	clrc
  4782     0F59  0DBE               	rlf	??_scale,f
  4783     0F5A  3EFF               	addlw	-1
  4784     0F5B  1D03               	skipz
  4785     0F5C  2F58               	goto	u4795
  4786     0F5D  1003               	clrc
  4787     0F5E  0D3E               	rlf	??_scale,w
  4788     0F5F  3E12               	addlw	low (__powers_| (0+32768))
  4789     0F60  0084               	movwf	4
  4790     0F61  3098               	movlw	high (__powers_| (0+32768))
  4791     0F62  1803               	skipnc
  4792     0F63  3E01               	addlw	1
  4793     0F64  00FF               	movwf	127
  4794     0F65  160A  158A  2000  120A  158A  	fcall	stringtab
  4795     0F6A  00BF               	movwf	??_scale+1
  4796     0F6B  160A  158A  2000  120A  158A  	fcall	stringtab
  4797     0F70  00C0               	movwf	??_scale+2
  4798     0F71  160A  158A  2000  120A  158A  	fcall	stringtab
  4799     0F76  00C1               	movwf	??_scale+3
  4800     0F77  160A  158A  2000  120A  158A  	fcall	stringtab
  4801     0F7C  00C2               	movwf	??_scale+4
  4802     0F7D  0842               	movf	??_scale+4,w
  4803     0F7E  00A3               	movwf	___flmul@b+3
  4804     0F7F  0841               	movf	??_scale+3,w
  4805     0F80  00A2               	movwf	___flmul@b+2
  4806     0F81  0840               	movf	??_scale+2,w
  4807     0F82  00A1               	movwf	___flmul@b+1
  4808     0F83  083F               	movf	??_scale+1,w
  4809     0F84  00A0               	movwf	___flmul@b
  4810     0F85  300A               	movlw	10
  4811     0F86  00F6               	movwf	___awdiv@divisor
  4812     0F87  3000               	movlw	0
  4813     0F88  00F7               	movwf	___awdiv@divisor+1
  4814     0F89  084C               	movf	scale@scl,w
  4815     0F8A  00F8               	movwf	___awdiv@dividend
  4816     0F8B  01F9               	clrf	___awdiv@dividend+1
  4817     0F8C  1BF8               	btfsc	___awdiv@dividend,7
  4818     0F8D  03F9               	decf	___awdiv@dividend+1,f
  4819     0F8E  160A  158A  25AE  120A  158A  	fcall	___awdiv
  4820     0F93  0876               	movf	?___awdiv,w
  4821     0F94  1283               	bcf	3,5	;RP0=0, select bank0
  4822     0F95  00C3               	movwf	??_scale+5
  4823     0F96  3001               	movlw	1
  4824     0F97                     u4805:
  4825     0F97  1003               	clrc
  4826     0F98  0DC3               	rlf	??_scale+5,f
  4827     0F99  3EFF               	addlw	-1
  4828     0F9A  1D03               	skipz
  4829     0F9B  2F97               	goto	u4805
  4830     0F9C  1003               	clrc
  4831     0F9D  0D43               	rlf	??_scale+5,w
  4832     0F9E  3E24               	addlw	36
  4833     0F9F  3E12               	addlw	low (__powers_| (0+32768))
  4834     0FA0  0084               	movwf	4
  4835     0FA1  3098               	movlw	high (__powers_| (0+32768))
  4836     0FA2  1803               	skipnc
  4837     0FA3  3E01               	addlw	1
  4838     0FA4  00FF               	movwf	127
  4839     0FA5  160A  158A  2000  120A  158A  	fcall	stringtab
  4840     0FAA  00C4               	movwf	??_scale+6
  4841     0FAB  160A  158A  2000  120A  158A  	fcall	stringtab
  4842     0FB0  00C5               	movwf	??_scale+7
  4843     0FB1  160A  158A  2000  120A  158A  	fcall	stringtab
  4844     0FB6  00C6               	movwf	??_scale+8
  4845     0FB7  160A  158A  2000  120A  158A  	fcall	stringtab
  4846     0FBC  00C7               	movwf	??_scale+9
  4847     0FBD  0847               	movf	??_scale+9,w
  4848     0FBE  00A7               	movwf	___flmul@a+3
  4849     0FBF  0846               	movf	??_scale+8,w
  4850     0FC0  00A6               	movwf	___flmul@a+2
  4851     0FC1  0845               	movf	??_scale+7,w
  4852     0FC2  00A5               	movwf	___flmul@a+1
  4853     0FC3  0844               	movf	??_scale+6,w
  4854     0FC4  00A4               	movwf	___flmul@a
  4855     0FC5  120A  158A  21C3   	fcall	___flmul
  4856     0FC8  0823               	movf	?___flmul+3,w
  4857     0FC9  00BD               	movwf	?_scale+3
  4858     0FCA  0822               	movf	?___flmul+2,w
  4859     0FCB  00BC               	movwf	?_scale+2
  4860     0FCC  0821               	movf	?___flmul+1,w
  4861     0FCD  00BB               	movwf	?_scale+1
  4862     0FCE  0820               	movf	?___flmul,w
  4863     0FCF  00BA               	movwf	?_scale
  4864     0FD0  0008               	return
  4865     0FD1                     l3127:
  4866                           
  4867                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  4868     0FD1  084C               	movf	scale@scl,w
  4869     0FD2  00BE               	movwf	??_scale
  4870     0FD3  3001               	movlw	1
  4871     0FD4                     u4815:
  4872     0FD4  1003               	clrc
  4873     0FD5  0DBE               	rlf	??_scale,f
  4874     0FD6  3EFF               	addlw	-1
  4875     0FD7  1D03               	skipz
  4876     0FD8  2FD4               	goto	u4815
  4877     0FD9  1003               	clrc
  4878     0FDA  0D3E               	rlf	??_scale,w
  4879     0FDB  3E12               	addlw	low (__powers_| (0+32768))
  4880     0FDC  0084               	movwf	4
  4881     0FDD  3098               	movlw	high (__powers_| (0+32768))
  4882     0FDE  1803               	skipnc
  4883     0FDF  3E01               	addlw	1
  4884     0FE0  00FF               	movwf	127
  4885     0FE1  160A  158A  2000  120A  158A  	fcall	stringtab
  4886     0FE6  00BF               	movwf	??_scale+1
  4887     0FE7  160A  158A  2000  120A  158A  	fcall	stringtab
  4888     0FEC  00C0               	movwf	??_scale+2
  4889     0FED  160A  158A  2000  120A  158A  	fcall	stringtab
  4890     0FF2  00C1               	movwf	??_scale+3
  4891     0FF3  160A  158A  2000   	fcall	stringtab
  4892     0FF6  00C2               	movwf	??_scale+4
  4893     0FF7  0842               	movf	??_scale+4,w
  4894     0FF8  00BD               	movwf	?_scale+3
  4895     0FF9  0841               	movf	??_scale+3,w
  4896     0FFA  00BC               	movwf	?_scale+2
  4897     0FFB  0840               	movf	??_scale+2,w
  4898     0FFC  00BB               	movwf	?_scale+1
  4899     0FFD  083F               	movf	??_scale+1,w
  4900     0FFE  00BA               	movwf	?_scale
  4901     0FFF  0008               	return
  4902     1000                     __end_of_scale:
  4903                           
  4904                           	psect	text3
  4905     1D17                     __ptext3:	
  4906 ;; *************** function ___awmod *****************
  4907 ;; Defined at:
  4908 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awmod.c"
  4909 ;; Parameters:    Size  Location     Type
  4910 ;;  divisor         2    0[COMMON] int 
  4911 ;;  dividend        2    2[COMMON] int 
  4912 ;; Auto vars:     Size  Location     Type
  4913 ;;  sign            1    5[COMMON] unsigned char 
  4914 ;;  counter         1    4[COMMON] unsigned char 
  4915 ;; Return value:  Size  Location     Type
  4916 ;;                  2    0[COMMON] int 
  4917 ;; Registers used:
  4918 ;;		wreg, status,2, status,0, btemp+1
  4919 ;; Tracked objects:
  4920 ;;		On entry : 300/0
  4921 ;;		On exit  : 300/0
  4922 ;;		Unchanged: 300/0
  4923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4924 ;;      Params:         4       0       0       0       0
  4925 ;;      Locals:         2       0       0       0       0
  4926 ;;      Temps:          0       0       0       0       0
  4927 ;;      Totals:         6       0       0       0       0
  4928 ;;Total ram usage:        6 bytes
  4929 ;; Hardware stack levels used: 1
  4930 ;; This function calls:
  4931 ;;		Nothing
  4932 ;; This function is called by:
  4933 ;;		_scale
  4934 ;; This function uses a non-reentrant model
  4935 ;;
  4936                           
  4937     1D17                     ___awmod:	
  4938                           ;psect for function ___awmod
  4939                           
  4940                           
  4941                           ;incstack = 0
  4942                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
  4943     1D17  01F5               	clrf	___awmod@sign
  4944     1D18  1FF3               	btfss	___awmod@dividend+1,7
  4945     1D19  2D21               	goto	l2625
  4946     1D1A  09F2               	comf	___awmod@dividend,f
  4947     1D1B  09F3               	comf	___awmod@dividend+1,f
  4948     1D1C  0AF2               	incf	___awmod@dividend,f
  4949     1D1D  1903               	skipnz
  4950     1D1E  0AF3               	incf	___awmod@dividend+1,f
  4951     1D1F  01F5               	clrf	___awmod@sign
  4952     1D20  0AF5               	incf	___awmod@sign,f
  4953     1D21                     l2625:
  4954     1D21  1FF1               	btfss	___awmod@divisor+1,7
  4955     1D22  2D28               	goto	l2629
  4956     1D23  09F0               	comf	___awmod@divisor,f
  4957     1D24  09F1               	comf	___awmod@divisor+1,f
  4958     1D25  0AF0               	incf	___awmod@divisor,f
  4959     1D26  1903               	skipnz
  4960     1D27  0AF1               	incf	___awmod@divisor+1,f
  4961     1D28                     l2629:
  4962     1D28  0870               	movf	___awmod@divisor,w
  4963     1D29  0471               	iorwf	___awmod@divisor+1,w
  4964     1D2A  1903               	btfsc	3,2
  4965     1D2B  2D55               	goto	l2647
  4966     1D2C  01F4               	clrf	___awmod@counter
  4967     1D2D  0AF4               	incf	___awmod@counter,f
  4968     1D2E                     l2637:
  4969     1D2E  1BF1               	btfsc	___awmod@divisor+1,7
  4970     1D2F  2D3C               	goto	l2639
  4971     1D30  3001               	movlw	1
  4972     1D31                     u3605:
  4973     1D31  1003               	clrc
  4974     1D32  0DF0               	rlf	___awmod@divisor,f
  4975     1D33  0DF1               	rlf	___awmod@divisor+1,f
  4976     1D34  3EFF               	addlw	-1
  4977     1D35  1D03               	skipz
  4978     1D36  2D31               	goto	u3605
  4979     1D37  3001               	movlw	1
  4980     1D38  00FF               	movwf	127
  4981     1D39  087F               	movf	127,w
  4982     1D3A  07F4               	addwf	___awmod@counter,f
  4983     1D3B  2D2E               	goto	l2637
  4984     1D3C                     l2639:
  4985     1D3C  0871               	movf	___awmod@divisor+1,w
  4986     1D3D  0273               	subwf	___awmod@dividend+1,w
  4987     1D3E  1D03               	skipz
  4988     1D3F  2D42               	goto	u3625
  4989     1D40  0870               	movf	___awmod@divisor,w
  4990     1D41  0272               	subwf	___awmod@dividend,w
  4991     1D42                     u3625:
  4992     1D42  1C03               	skipc
  4993     1D43  2D4A               	goto	l2643
  4994     1D44  0870               	movf	___awmod@divisor,w
  4995     1D45  02F2               	subwf	___awmod@dividend,f
  4996     1D46  0871               	movf	___awmod@divisor+1,w
  4997     1D47  1C03               	skipc
  4998     1D48  03F3               	decf	___awmod@dividend+1,f
  4999     1D49  02F3               	subwf	___awmod@dividend+1,f
  5000     1D4A                     l2643:
  5001     1D4A  3001               	movlw	1
  5002     1D4B                     u3635:
  5003     1D4B  1003               	clrc
  5004     1D4C  0CF1               	rrf	___awmod@divisor+1,f
  5005     1D4D  0CF0               	rrf	___awmod@divisor,f
  5006     1D4E  3EFF               	addlw	-1
  5007     1D4F  1D03               	skipz
  5008     1D50  2D4B               	goto	u3635
  5009     1D51  3001               	movlw	1
  5010     1D52  02F4               	subwf	___awmod@counter,f
  5011     1D53  1D03               	btfss	3,2
  5012     1D54  2D3C               	goto	l2639
  5013     1D55                     l2647:
  5014     1D55  0875               	movf	___awmod@sign,w
  5015     1D56  1903               	btfsc	3,2
  5016     1D57  2D5D               	goto	l2651
  5017     1D58  09F2               	comf	___awmod@dividend,f
  5018     1D59  09F3               	comf	___awmod@dividend+1,f
  5019     1D5A  0AF2               	incf	___awmod@dividend,f
  5020     1D5B  1903               	skipnz
  5021     1D5C  0AF3               	incf	___awmod@dividend+1,f
  5022     1D5D                     l2651:
  5023     1D5D  0873               	movf	___awmod@dividend+1,w
  5024     1D5E  00F1               	movwf	?___awmod+1
  5025     1D5F  0872               	movf	___awmod@dividend,w
  5026     1D60  00F0               	movwf	?___awmod
  5027     1D61  0008               	return
  5028     1D62                     __end_of___awmod:
  5029                           
  5030                           	psect	text4
  5031     1DAE                     __ptext4:	
  5032 ;; *************** function ___awdiv *****************
  5033 ;; Defined at:
  5034 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awdiv.c"
  5035 ;; Parameters:    Size  Location     Type
  5036 ;;  divisor         2    6[COMMON] int 
  5037 ;;  dividend        2    8[COMMON] int 
  5038 ;; Auto vars:     Size  Location     Type
  5039 ;;  quotient        2   12[COMMON] int 
  5040 ;;  sign            1   11[COMMON] unsigned char 
  5041 ;;  counter         1   10[COMMON] unsigned char 
  5042 ;; Return value:  Size  Location     Type
  5043 ;;                  2    6[COMMON] int 
  5044 ;; Registers used:
  5045 ;;		wreg, status,2, status,0, btemp+1
  5046 ;; Tracked objects:
  5047 ;;		On entry : 200/100
  5048 ;;		On exit  : 200/0
  5049 ;;		Unchanged: 200/0
  5050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5051 ;;      Params:         4       0       0       0       0
  5052 ;;      Locals:         4       0       0       0       0
  5053 ;;      Temps:          0       0       0       0       0
  5054 ;;      Totals:         8       0       0       0       0
  5055 ;;Total ram usage:        8 bytes
  5056 ;; Hardware stack levels used: 1
  5057 ;; This function calls:
  5058 ;;		Nothing
  5059 ;; This function is called by:
  5060 ;;		_scale
  5061 ;;		_sprintf
  5062 ;; This function uses a non-reentrant model
  5063 ;;
  5064                           
  5065     1DAE                     ___awdiv:	
  5066                           ;psect for function ___awdiv
  5067                           
  5068                           
  5069                           ;incstack = 0
  5070                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  5071     1DAE  01FB               	clrf	___awdiv@sign
  5072     1DAF  1FF7               	btfss	___awdiv@divisor+1,7
  5073     1DB0  2DB8               	goto	l2581
  5074     1DB1  09F6               	comf	___awdiv@divisor,f
  5075     1DB2  09F7               	comf	___awdiv@divisor+1,f
  5076     1DB3  0AF6               	incf	___awdiv@divisor,f
  5077     1DB4  1903               	skipnz
  5078     1DB5  0AF7               	incf	___awdiv@divisor+1,f
  5079     1DB6  01FB               	clrf	___awdiv@sign
  5080     1DB7  0AFB               	incf	___awdiv@sign,f
  5081     1DB8                     l2581:
  5082     1DB8  1FF9               	btfss	___awdiv@dividend+1,7
  5083     1DB9  2DC3               	goto	l2587
  5084     1DBA  09F8               	comf	___awdiv@dividend,f
  5085     1DBB  09F9               	comf	___awdiv@dividend+1,f
  5086     1DBC  0AF8               	incf	___awdiv@dividend,f
  5087     1DBD  1903               	skipnz
  5088     1DBE  0AF9               	incf	___awdiv@dividend+1,f
  5089     1DBF  3001               	movlw	1
  5090     1DC0  00FF               	movwf	127
  5091     1DC1  087F               	movf	127,w
  5092     1DC2  06FB               	xorwf	___awdiv@sign,f
  5093     1DC3                     l2587:
  5094     1DC3  01FC               	clrf	___awdiv@quotient
  5095     1DC4  01FD               	clrf	___awdiv@quotient+1
  5096     1DC5  0876               	movf	___awdiv@divisor,w
  5097     1DC6  0477               	iorwf	___awdiv@divisor+1,w
  5098     1DC7  1903               	btfsc	3,2
  5099     1DC8  2DFA               	goto	l2609
  5100     1DC9  01FA               	clrf	___awdiv@counter
  5101     1DCA  0AFA               	incf	___awdiv@counter,f
  5102     1DCB                     l2597:
  5103     1DCB  1BF7               	btfsc	___awdiv@divisor+1,7
  5104     1DCC  2DD9               	goto	l2599
  5105     1DCD  3001               	movlw	1
  5106     1DCE                     u3505:
  5107     1DCE  1003               	clrc
  5108     1DCF  0DF6               	rlf	___awdiv@divisor,f
  5109     1DD0  0DF7               	rlf	___awdiv@divisor+1,f
  5110     1DD1  3EFF               	addlw	-1
  5111     1DD2  1D03               	skipz
  5112     1DD3  2DCE               	goto	u3505
  5113     1DD4  3001               	movlw	1
  5114     1DD5  00FF               	movwf	127
  5115     1DD6  087F               	movf	127,w
  5116     1DD7  07FA               	addwf	___awdiv@counter,f
  5117     1DD8  2DCB               	goto	l2597
  5118     1DD9                     l2599:
  5119     1DD9  3001               	movlw	1
  5120     1DDA                     u3525:
  5121     1DDA  1003               	clrc
  5122     1DDB  0DFC               	rlf	___awdiv@quotient,f
  5123     1DDC  0DFD               	rlf	___awdiv@quotient+1,f
  5124     1DDD  3EFF               	addlw	-1
  5125     1DDE  1D03               	skipz
  5126     1DDF  2DDA               	goto	u3525
  5127     1DE0  0877               	movf	___awdiv@divisor+1,w
  5128     1DE1  0279               	subwf	___awdiv@dividend+1,w
  5129     1DE2  1D03               	skipz
  5130     1DE3  2DE6               	goto	u3535
  5131     1DE4  0876               	movf	___awdiv@divisor,w
  5132     1DE5  0278               	subwf	___awdiv@dividend,w
  5133     1DE6                     u3535:
  5134     1DE6  1C03               	skipc
  5135     1DE7  2DEF               	goto	l2605
  5136     1DE8  0876               	movf	___awdiv@divisor,w
  5137     1DE9  02F8               	subwf	___awdiv@dividend,f
  5138     1DEA  0877               	movf	___awdiv@divisor+1,w
  5139     1DEB  1C03               	skipc
  5140     1DEC  03F9               	decf	___awdiv@dividend+1,f
  5141     1DED  02F9               	subwf	___awdiv@dividend+1,f
  5142     1DEE  147C               	bsf	___awdiv@quotient,0
  5143     1DEF                     l2605:
  5144     1DEF  3001               	movlw	1
  5145     1DF0                     u3545:
  5146     1DF0  1003               	clrc
  5147     1DF1  0CF7               	rrf	___awdiv@divisor+1,f
  5148     1DF2  0CF6               	rrf	___awdiv@divisor,f
  5149     1DF3  3EFF               	addlw	-1
  5150     1DF4  1D03               	skipz
  5151     1DF5  2DF0               	goto	u3545
  5152     1DF6  3001               	movlw	1
  5153     1DF7  02FA               	subwf	___awdiv@counter,f
  5154     1DF8  1D03               	btfss	3,2
  5155     1DF9  2DD9               	goto	l2599
  5156     1DFA                     l2609:
  5157     1DFA  087B               	movf	___awdiv@sign,w
  5158     1DFB  1903               	btfsc	3,2
  5159     1DFC  2E02               	goto	l2613
  5160     1DFD  09FC               	comf	___awdiv@quotient,f
  5161     1DFE  09FD               	comf	___awdiv@quotient+1,f
  5162     1DFF  0AFC               	incf	___awdiv@quotient,f
  5163     1E00  1903               	skipnz
  5164     1E01  0AFD               	incf	___awdiv@quotient+1,f
  5165     1E02                     l2613:
  5166     1E02  087D               	movf	___awdiv@quotient+1,w
  5167     1E03  00F7               	movwf	?___awdiv+1
  5168     1E04  087C               	movf	___awdiv@quotient,w
  5169     1E05  00F6               	movwf	?___awdiv
  5170     1E06  0008               	return
  5171     1E07                     __end_of___awdiv:
  5172                           
  5173                           	psect	text5
  5174     1B4E                     __ptext5:	
  5175 ;; *************** function _isdigit *****************
  5176 ;; Defined at:
  5177 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\isdigit.c"
  5178 ;; Parameters:    Size  Location     Type
  5179 ;;  c               1    wreg     unsigned char 
  5180 ;; Auto vars:     Size  Location     Type
  5181 ;;  c               1    1[COMMON] unsigned char 
  5182 ;; Return value:  Size  Location     Type
  5183 ;;		None               void
  5184 ;; Registers used:
  5185 ;;		wreg, status,2, status,0
  5186 ;; Tracked objects:
  5187 ;;		On entry : 300/0
  5188 ;;		On exit  : 300/0
  5189 ;;		Unchanged: 300/0
  5190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5191 ;;      Params:         0       0       0       0       0
  5192 ;;      Locals:         2       0       0       0       0
  5193 ;;      Temps:          0       0       0       0       0
  5194 ;;      Totals:         2       0       0       0       0
  5195 ;;Total ram usage:        2 bytes
  5196 ;; Hardware stack levels used: 1
  5197 ;; This function calls:
  5198 ;;		Nothing
  5199 ;; This function is called by:
  5200 ;;		_sprintf
  5201 ;; This function uses a non-reentrant model
  5202 ;;
  5203                           
  5204     1B4E                     _isdigit:	
  5205                           ;psect for function _isdigit
  5206                           
  5207                           
  5208                           ;incstack = 0
  5209                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  5210                           ;isdigit@c stored from wreg
  5211     1B4E  00F1               	movwf	isdigit@c
  5212     1B4F  01F0               	clrf	_isdigit$689
  5213     1B50  303A               	movlw	58
  5214     1B51  0271               	subwf	isdigit@c,w
  5215     1B52  1803               	skipnc
  5216     1B53  2B5A               	goto	l3139
  5217     1B54  3030               	movlw	48
  5218     1B55  0271               	subwf	isdigit@c,w
  5219     1B56  1C03               	skipc
  5220     1B57  2B5A               	goto	l3139
  5221     1B58  01F0               	clrf	_isdigit$689
  5222     1B59  0AF0               	incf	_isdigit$689,f
  5223     1B5A                     l3139:
  5224     1B5A  0C70               	rrf	_isdigit$689,w
  5225     1B5B  0008               	return
  5226     1B5C                     __end_of_isdigit:
  5227                           
  5228                           	psect	text6
  5229     116E                     __ptext6:	
  5230 ;; *************** function _fround *****************
  5231 ;; Defined at:
  5232 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c"
  5233 ;; Parameters:    Size  Location     Type
  5234 ;;  prec            1    wreg     unsigned char 
  5235 ;; Auto vars:     Size  Location     Type
  5236 ;;  prec            1   43[BANK0 ] unsigned char 
  5237 ;; Return value:  Size  Location     Type
  5238 ;;                  4   26[BANK0 ] unsigned char 
  5239 ;; Registers used:
  5240 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5241 ;; Tracked objects:
  5242 ;;		On entry : 300/100
  5243 ;;		On exit  : 300/0
  5244 ;;		Unchanged: 0/0
  5245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5246 ;;      Params:         0       4       0       0       0
  5247 ;;      Locals:         0       9       0       0       0
  5248 ;;      Temps:          0       5       0       0       0
  5249 ;;      Totals:         0      18       0       0       0
  5250 ;;Total ram usage:       18 bytes
  5251 ;; Hardware stack levels used: 1
  5252 ;; Hardware stack levels required when called: 2
  5253 ;; This function calls:
  5254 ;;		___flmul
  5255 ;;		___lbdiv
  5256 ;;		___lbmod
  5257 ;; This function is called by:
  5258 ;;		_sprintf
  5259 ;; This function uses a non-reentrant model
  5260 ;;
  5261                           
  5262     116E                     _fround:	
  5263                           ;psect for function _fround
  5264                           
  5265                           
  5266                           ;incstack = 0
  5267                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5268                           ;fround@prec stored from wreg
  5269     116E  1283               	bcf	3,5	;RP0=0, select bank0
  5270     116F  00CB               	movwf	fround@prec
  5271                           
  5272                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  5273     1170  306E               	movlw	110
  5274     1171  024B               	subwf	fround@prec,w
  5275     1172  1C03               	skipc
  5276     1173  2A5E               	goto	l3081
  5277                           
  5278                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5279     1174  303F               	movlw	63
  5280     1175  00A3               	movwf	___flmul@b+3
  5281     1176  3000               	movlw	0
  5282     1177  00A2               	movwf	___flmul@b+2
  5283     1178  3000               	movlw	0
  5284     1179  00A1               	movwf	___flmul@b+1
  5285     117A  3000               	movlw	0
  5286     117B  00A0               	movwf	___flmul@b
  5287     117C  3064               	movlw	100
  5288     117D  00F6               	movwf	___lbdiv@divisor
  5289     117E  084B               	movf	fround@prec,w
  5290     117F  160A  118A  2007  160A  118A  	fcall	___lbdiv
  5291     1184  00BE               	movwf	??_fround
  5292     1185  3001               	movlw	1
  5293     1186                     u4585:
  5294     1186  1003               	clrc
  5295     1187  0DBE               	rlf	??_fround,f
  5296     1188  3EFF               	addlw	-1
  5297     1189  1D03               	skipz
  5298     118A  2986               	goto	u4585
  5299     118B  1003               	clrc
  5300     118C  0D3E               	rlf	??_fround,w
  5301     118D  3E8E               	addlw	low ((__npowers_| (0+32768)+72))
  5302     118E  0084               	movwf	4
  5303     118F  3098               	movlw	high ((__npowers_| (0+32768)+72))
  5304     1190  1803               	skipnc
  5305     1191  3E01               	addlw	1
  5306     1192  00FF               	movwf	127
  5307     1193  160A  158A  2000  160A  118A  	fcall	stringtab
  5308     1198  00BF               	movwf	??_fround+1
  5309     1199  160A  158A  2000  160A  118A  	fcall	stringtab
  5310     119E  00C0               	movwf	??_fround+2
  5311     119F  160A  158A  2000  160A  118A  	fcall	stringtab
  5312     11A4  00C1               	movwf	??_fround+3
  5313     11A5  160A  158A  2000  160A  118A  	fcall	stringtab
  5314     11AA  00C2               	movwf	??_fround+4
  5315     11AB  0842               	movf	??_fround+4,w
  5316     11AC  00A7               	movwf	___flmul@a+3
  5317     11AD  0841               	movf	??_fround+3,w
  5318     11AE  00A6               	movwf	___flmul@a+2
  5319     11AF  0840               	movf	??_fround+2,w
  5320     11B0  00A5               	movwf	___flmul@a+1
  5321     11B1  083F               	movf	??_fround+1,w
  5322     11B2  00A4               	movwf	___flmul@a
  5323     11B3  120A  158A  21C3  160A  118A  	fcall	___flmul
  5324     11B8  0823               	movf	?___flmul+3,w
  5325     11B9  00CA               	movwf	_fround$871+3
  5326     11BA  0822               	movf	?___flmul+2,w
  5327     11BB  00C9               	movwf	_fround$871+2
  5328     11BC  0821               	movf	?___flmul+1,w
  5329     11BD  00C8               	movwf	_fround$871+1
  5330     11BE  0820               	movf	?___flmul,w
  5331     11BF  00C7               	movwf	_fround$871
  5332                           
  5333                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5334     11C0  300A               	movlw	10
  5335     11C1  00F6               	movwf	___lbdiv@divisor
  5336     11C2  3064               	movlw	100
  5337     11C3  00F0               	movwf	___lbmod@divisor
  5338     11C4  084B               	movf	fround@prec,w
  5339     11C5  160A  158A  23AA  160A  118A  	fcall	___lbmod
  5340     11CA  160A  118A  2007  160A  118A  	fcall	___lbdiv
  5341     11CF  00BE               	movwf	??_fround
  5342     11D0  3001               	movlw	1
  5343     11D1                     u4595:
  5344     11D1  1003               	clrc
  5345     11D2  0DBE               	rlf	??_fround,f
  5346     11D3  3EFF               	addlw	-1
  5347     11D4  1D03               	skipz
  5348     11D5  29D1               	goto	u4595
  5349     11D6  1003               	clrc
  5350     11D7  0D3E               	rlf	??_fround,w
  5351     11D8  3E6A               	addlw	low ((__npowers_| (0+32768)+36))
  5352     11D9  0084               	movwf	4
  5353     11DA  3098               	movlw	high ((__npowers_| (0+32768)+36))
  5354     11DB  1803               	skipnc
  5355     11DC  3E01               	addlw	1
  5356     11DD  00FF               	movwf	127
  5357     11DE  160A  158A  2000  160A  118A  	fcall	stringtab
  5358     11E3  00BF               	movwf	??_fround+1
  5359     11E4  160A  158A  2000  160A  118A  	fcall	stringtab
  5360     11E9  00C0               	movwf	??_fround+2
  5361     11EA  160A  158A  2000  160A  118A  	fcall	stringtab
  5362     11EF  00C1               	movwf	??_fround+3
  5363     11F0  160A  158A  2000  160A  118A  	fcall	stringtab
  5364     11F5  00C2               	movwf	??_fround+4
  5365     11F6  0842               	movf	??_fround+4,w
  5366     11F7  00A3               	movwf	___flmul@b+3
  5367     11F8  0841               	movf	??_fround+3,w
  5368     11F9  00A2               	movwf	___flmul@b+2
  5369     11FA  0840               	movf	??_fround+2,w
  5370     11FB  00A1               	movwf	___flmul@b+1
  5371     11FC  083F               	movf	??_fround+1,w
  5372     11FD  00A0               	movwf	___flmul@b
  5373     11FE  084A               	movf	_fround$871+3,w
  5374     11FF  00A7               	movwf	___flmul@a+3
  5375     1200  0849               	movf	_fround$871+2,w
  5376     1201  00A6               	movwf	___flmul@a+2
  5377     1202  0848               	movf	_fround$871+1,w
  5378     1203  00A5               	movwf	___flmul@a+1
  5379     1204  0847               	movf	_fround$871,w
  5380     1205  00A4               	movwf	___flmul@a
  5381     1206  120A  158A  21C3  160A  118A  	fcall	___flmul
  5382     120B  0823               	movf	?___flmul+3,w
  5383     120C  00C6               	movwf	_fround$872+3
  5384     120D  0822               	movf	?___flmul+2,w
  5385     120E  00C5               	movwf	_fround$872+2
  5386     120F  0821               	movf	?___flmul+1,w
  5387     1210  00C4               	movwf	_fround$872+1
  5388     1211  0820               	movf	?___flmul,w
  5389     1212  00C3               	movwf	_fround$872
  5390                           
  5391                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5392     1213  300A               	movlw	10
  5393     1214  00F0               	movwf	___lbmod@divisor
  5394     1215  084B               	movf	fround@prec,w
  5395     1216  160A  158A  23AA  160A  118A  	fcall	___lbmod
  5396     121B  00BE               	movwf	??_fround
  5397     121C  3001               	movlw	1
  5398     121D                     u4605:
  5399     121D  1003               	clrc
  5400     121E  0DBE               	rlf	??_fround,f
  5401     121F  3EFF               	addlw	-1
  5402     1220  1D03               	skipz
  5403     1221  2A1D               	goto	u4605
  5404     1222  1003               	clrc
  5405     1223  0D3E               	rlf	??_fround,w
  5406     1224  3E46               	addlw	low (__npowers_| (0+32768))
  5407     1225  0084               	movwf	4
  5408     1226  3098               	movlw	high (__npowers_| (0+32768))
  5409     1227  1803               	skipnc
  5410     1228  3E01               	addlw	1
  5411     1229  00FF               	movwf	127
  5412     122A  160A  158A  2000  160A  118A  	fcall	stringtab
  5413     122F  00BF               	movwf	??_fround+1
  5414     1230  160A  158A  2000  160A  118A  	fcall	stringtab
  5415     1235  00C0               	movwf	??_fround+2
  5416     1236  160A  158A  2000  160A  118A  	fcall	stringtab
  5417     123B  00C1               	movwf	??_fround+3
  5418     123C  160A  158A  2000  160A  118A  	fcall	stringtab
  5419     1241  00C2               	movwf	??_fround+4
  5420     1242  0842               	movf	??_fround+4,w
  5421     1243  00A3               	movwf	___flmul@b+3
  5422     1244  0841               	movf	??_fround+3,w
  5423     1245  00A2               	movwf	___flmul@b+2
  5424     1246  0840               	movf	??_fround+2,w
  5425     1247  00A1               	movwf	___flmul@b+1
  5426     1248  083F               	movf	??_fround+1,w
  5427     1249  00A0               	movwf	___flmul@b
  5428     124A  0846               	movf	_fround$872+3,w
  5429     124B  00A7               	movwf	___flmul@a+3
  5430     124C  0845               	movf	_fround$872+2,w
  5431     124D  00A6               	movwf	___flmul@a+2
  5432     124E  0844               	movf	_fround$872+1,w
  5433     124F  00A5               	movwf	___flmul@a+1
  5434     1250  0843               	movf	_fround$872,w
  5435     1251  00A4               	movwf	___flmul@a
  5436     1252  120A  158A  21C3   	fcall	___flmul
  5437     1255  0823               	movf	?___flmul+3,w
  5438     1256  00BD               	movwf	?_fround+3
  5439     1257  0822               	movf	?___flmul+2,w
  5440     1258  00BC               	movwf	?_fround+2
  5441     1259  0821               	movf	?___flmul+1,w
  5442     125A  00BB               	movwf	?_fround+1
  5443     125B  0820               	movf	?___flmul,w
  5444     125C  00BA               	movwf	?_fround
  5445     125D  0008               	return
  5446     125E                     l3081:
  5447     125E  300B               	movlw	11
  5448     125F  024B               	subwf	fround@prec,w
  5449     1260  1C03               	skipc
  5450     1261  2AF9               	goto	l3087
  5451                           
  5452                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5453     1262  303F               	movlw	63
  5454     1263  00A3               	movwf	___flmul@b+3
  5455     1264  3000               	movlw	0
  5456     1265  00A2               	movwf	___flmul@b+2
  5457     1266  3000               	movlw	0
  5458     1267  00A1               	movwf	___flmul@b+1
  5459     1268  3000               	movlw	0
  5460     1269  00A0               	movwf	___flmul@b
  5461     126A  300A               	movlw	10
  5462     126B  00F6               	movwf	___lbdiv@divisor
  5463     126C  084B               	movf	fround@prec,w
  5464     126D  160A  118A  2007  160A  118A  	fcall	___lbdiv
  5465     1272  00BE               	movwf	??_fround
  5466     1273  3001               	movlw	1
  5467     1274                     u4625:
  5468     1274  1003               	clrc
  5469     1275  0DBE               	rlf	??_fround,f
  5470     1276  3EFF               	addlw	-1
  5471     1277  1D03               	skipz
  5472     1278  2A74               	goto	u4625
  5473     1279  1003               	clrc
  5474     127A  0D3E               	rlf	??_fround,w
  5475     127B  3E6A               	addlw	low ((__npowers_| (0+32768)+36))
  5476     127C  0084               	movwf	4
  5477     127D  3098               	movlw	high ((__npowers_| (0+32768)+36))
  5478     127E  1803               	skipnc
  5479     127F  3E01               	addlw	1
  5480     1280  00FF               	movwf	127
  5481     1281  160A  158A  2000  160A  118A  	fcall	stringtab
  5482     1286  00BF               	movwf	??_fround+1
  5483     1287  160A  158A  2000  160A  118A  	fcall	stringtab
  5484     128C  00C0               	movwf	??_fround+2
  5485     128D  160A  158A  2000  160A  118A  	fcall	stringtab
  5486     1292  00C1               	movwf	??_fround+3
  5487     1293  160A  158A  2000  160A  118A  	fcall	stringtab
  5488     1298  00C2               	movwf	??_fround+4
  5489     1299  0842               	movf	??_fround+4,w
  5490     129A  00A7               	movwf	___flmul@a+3
  5491     129B  0841               	movf	??_fround+3,w
  5492     129C  00A6               	movwf	___flmul@a+2
  5493     129D  0840               	movf	??_fround+2,w
  5494     129E  00A5               	movwf	___flmul@a+1
  5495     129F  083F               	movf	??_fround+1,w
  5496     12A0  00A4               	movwf	___flmul@a
  5497     12A1  120A  158A  21C3  160A  118A  	fcall	___flmul
  5498     12A6  0823               	movf	?___flmul+3,w
  5499     12A7  00CA               	movwf	_fround$871+3
  5500     12A8  0822               	movf	?___flmul+2,w
  5501     12A9  00C9               	movwf	_fround$871+2
  5502     12AA  0821               	movf	?___flmul+1,w
  5503     12AB  00C8               	movwf	_fround$871+1
  5504     12AC  0820               	movf	?___flmul,w
  5505     12AD  00C7               	movwf	_fround$871
  5506                           
  5507                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5508     12AE  300A               	movlw	10
  5509     12AF  00F0               	movwf	___lbmod@divisor
  5510     12B0  084B               	movf	fround@prec,w
  5511     12B1  160A  158A  23AA  160A  118A  	fcall	___lbmod
  5512     12B6  00BE               	movwf	??_fround
  5513     12B7  3001               	movlw	1
  5514     12B8                     u4635:
  5515     12B8  1003               	clrc
  5516     12B9  0DBE               	rlf	??_fround,f
  5517     12BA  3EFF               	addlw	-1
  5518     12BB  1D03               	skipz
  5519     12BC  2AB8               	goto	u4635
  5520     12BD  1003               	clrc
  5521     12BE  0D3E               	rlf	??_fround,w
  5522     12BF  3E46               	addlw	low (__npowers_| (0+32768))
  5523     12C0  0084               	movwf	4
  5524     12C1  3098               	movlw	high (__npowers_| (0+32768))
  5525     12C2  1803               	skipnc
  5526     12C3  3E01               	addlw	1
  5527     12C4  00FF               	movwf	127
  5528     12C5  160A  158A  2000  160A  118A  	fcall	stringtab
  5529     12CA  00BF               	movwf	??_fround+1
  5530     12CB  160A  158A  2000  160A  118A  	fcall	stringtab
  5531     12D0  00C0               	movwf	??_fround+2
  5532     12D1  160A  158A  2000  160A  118A  	fcall	stringtab
  5533     12D6  00C1               	movwf	??_fround+3
  5534     12D7  160A  158A  2000  160A  118A  	fcall	stringtab
  5535     12DC  00C2               	movwf	??_fround+4
  5536     12DD  0842               	movf	??_fround+4,w
  5537     12DE  00A3               	movwf	___flmul@b+3
  5538     12DF  0841               	movf	??_fround+3,w
  5539     12E0  00A2               	movwf	___flmul@b+2
  5540     12E1  0840               	movf	??_fround+2,w
  5541     12E2  00A1               	movwf	___flmul@b+1
  5542     12E3  083F               	movf	??_fround+1,w
  5543     12E4  00A0               	movwf	___flmul@b
  5544     12E5  084A               	movf	_fround$871+3,w
  5545     12E6  00A7               	movwf	___flmul@a+3
  5546     12E7  0849               	movf	_fround$871+2,w
  5547     12E8  00A6               	movwf	___flmul@a+2
  5548     12E9  0848               	movf	_fround$871+1,w
  5549     12EA  00A5               	movwf	___flmul@a+1
  5550     12EB  0847               	movf	_fround$871,w
  5551     12EC  00A4               	movwf	___flmul@a
  5552     12ED  120A  158A  21C3   	fcall	___flmul
  5553     12F0  0823               	movf	?___flmul+3,w
  5554     12F1  00BD               	movwf	?_fround+3
  5555     12F2  0822               	movf	?___flmul+2,w
  5556     12F3  00BC               	movwf	?_fround+2
  5557     12F4  0821               	movf	?___flmul+1,w
  5558     12F5  00BB               	movwf	?_fround+1
  5559     12F6  0820               	movf	?___flmul,w
  5560     12F7  00BA               	movwf	?_fround
  5561     12F8  0008               	return
  5562     12F9                     l3087:
  5563                           
  5564                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  5565     12F9  303F               	movlw	63
  5566     12FA  00A3               	movwf	___flmul@b+3
  5567     12FB  3000               	movlw	0
  5568     12FC  00A2               	movwf	___flmul@b+2
  5569     12FD  3000               	movlw	0
  5570     12FE  00A1               	movwf	___flmul@b+1
  5571     12FF  3000               	movlw	0
  5572     1300  00A0               	movwf	___flmul@b
  5573     1301  084B               	movf	fround@prec,w
  5574     1302  00BE               	movwf	??_fround
  5575     1303  3001               	movlw	1
  5576     1304                     u4645:
  5577     1304  1003               	clrc
  5578     1305  0DBE               	rlf	??_fround,f
  5579     1306  3EFF               	addlw	-1
  5580     1307  1D03               	skipz
  5581     1308  2B04               	goto	u4645
  5582     1309  1003               	clrc
  5583     130A  0D3E               	rlf	??_fround,w
  5584     130B  3E46               	addlw	low (__npowers_| (0+32768))
  5585     130C  0084               	movwf	4
  5586     130D  3098               	movlw	high (__npowers_| (0+32768))
  5587     130E  1803               	skipnc
  5588     130F  3E01               	addlw	1
  5589     1310  00FF               	movwf	127
  5590     1311  160A  158A  2000  160A  118A  	fcall	stringtab
  5591     1316  00BF               	movwf	??_fround+1
  5592     1317  160A  158A  2000  160A  118A  	fcall	stringtab
  5593     131C  00C0               	movwf	??_fround+2
  5594     131D  160A  158A  2000  160A  118A  	fcall	stringtab
  5595     1322  00C1               	movwf	??_fround+3
  5596     1323  160A  158A  2000  160A  118A  	fcall	stringtab
  5597     1328  00C2               	movwf	??_fround+4
  5598     1329  0842               	movf	??_fround+4,w
  5599     132A  00A7               	movwf	___flmul@a+3
  5600     132B  0841               	movf	??_fround+3,w
  5601     132C  00A6               	movwf	___flmul@a+2
  5602     132D  0840               	movf	??_fround+2,w
  5603     132E  00A5               	movwf	___flmul@a+1
  5604     132F  083F               	movf	??_fround+1,w
  5605     1330  00A4               	movwf	___flmul@a
  5606     1331  120A  158A  21C3   	fcall	___flmul
  5607     1334  0823               	movf	?___flmul+3,w
  5608     1335  00BD               	movwf	?_fround+3
  5609     1336  0822               	movf	?___flmul+2,w
  5610     1337  00BC               	movwf	?_fround+2
  5611     1338  0821               	movf	?___flmul+1,w
  5612     1339  00BB               	movwf	?_fround+1
  5613     133A  0820               	movf	?___flmul,w
  5614     133B  00BA               	movwf	?_fround
  5615     133C  0008               	return
  5616     133D                     __end_of_fround:
  5617                           
  5618                           	psect	text7
  5619     1BAA                     __ptext7:	
  5620 ;; *************** function ___lbmod *****************
  5621 ;; Defined at:
  5622 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lbmod.c"
  5623 ;; Parameters:    Size  Location     Type
  5624 ;;  dividend        1    wreg     unsigned char 
  5625 ;;  divisor         1    0[COMMON] unsigned char 
  5626 ;; Auto vars:     Size  Location     Type
  5627 ;;  dividend        1    3[COMMON] unsigned char 
  5628 ;;  rem             1    5[COMMON] unsigned char 
  5629 ;;  counter         1    4[COMMON] unsigned char 
  5630 ;; Return value:  Size  Location     Type
  5631 ;;                  1    wreg      unsigned char 
  5632 ;; Registers used:
  5633 ;;		wreg, status,2, status,0
  5634 ;; Tracked objects:
  5635 ;;		On entry : 300/0
  5636 ;;		On exit  : 300/0
  5637 ;;		Unchanged: 300/0
  5638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5639 ;;      Params:         1       0       0       0       0
  5640 ;;      Locals:         3       0       0       0       0
  5641 ;;      Temps:          2       0       0       0       0
  5642 ;;      Totals:         6       0       0       0       0
  5643 ;;Total ram usage:        6 bytes
  5644 ;; Hardware stack levels used: 1
  5645 ;; This function calls:
  5646 ;;		Nothing
  5647 ;; This function is called by:
  5648 ;;		_fround
  5649 ;; This function uses a non-reentrant model
  5650 ;;
  5651                           
  5652     1BAA                     ___lbmod:	
  5653                           ;psect for function ___lbmod
  5654                           
  5655                           
  5656                           ;incstack = 0
  5657                           ; Regs used in ___lbmod: [wreg+status,2+status,0]
  5658                           ;___lbmod@dividend stored from wreg
  5659     1BAA  00F3               	movwf	___lbmod@dividend
  5660     1BAB  3008               	movlw	8
  5661     1BAC  00F4               	movwf	___lbmod@counter
  5662     1BAD  01F5               	clrf	___lbmod@rem
  5663     1BAE                     l2685:
  5664     1BAE  0873               	movf	___lbmod@dividend,w
  5665     1BAF  00F1               	movwf	??___lbmod
  5666     1BB0  3007               	movlw	7
  5667     1BB1                     u3705:
  5668     1BB1  1003               	clrc
  5669     1BB2  0CF1               	rrf	??___lbmod,f
  5670     1BB3  3EFF               	addlw	-1
  5671     1BB4  1D03               	skipz
  5672     1BB5  2BB1               	goto	u3705
  5673     1BB6  0875               	movf	___lbmod@rem,w
  5674     1BB7  00F2               	movwf	??___lbmod+1
  5675     1BB8  0772               	addwf	??___lbmod+1,w
  5676     1BB9  0471               	iorwf	??___lbmod,w
  5677     1BBA  00F5               	movwf	___lbmod@rem
  5678     1BBB  1003               	clrc
  5679     1BBC  0DF3               	rlf	___lbmod@dividend,f
  5680     1BBD  0870               	movf	___lbmod@divisor,w
  5681     1BBE  0275               	subwf	___lbmod@rem,w
  5682     1BBF  1C03               	skipc
  5683     1BC0  2BC3               	goto	l622
  5684     1BC1  0870               	movf	___lbmod@divisor,w
  5685     1BC2  02F5               	subwf	___lbmod@rem,f
  5686     1BC3                     l622:
  5687     1BC3  3001               	movlw	1
  5688     1BC4  02F4               	subwf	___lbmod@counter,f
  5689     1BC5  1D03               	btfss	3,2
  5690     1BC6  2BAE               	goto	l2685
  5691     1BC7  0875               	movf	___lbmod@rem,w
  5692     1BC8  0008               	return
  5693     1BC9                     __end_of___lbmod:
  5694                           
  5695                           	psect	text8
  5696     1007                     __ptext8:	
  5697 ;; *************** function ___lbdiv *****************
  5698 ;; Defined at:
  5699 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lbdiv.c"
  5700 ;; Parameters:    Size  Location     Type
  5701 ;;  dividend        1    wreg     unsigned char 
  5702 ;;  divisor         1    6[COMMON] unsigned char 
  5703 ;; Auto vars:     Size  Location     Type
  5704 ;;  dividend        1    7[COMMON] unsigned char 
  5705 ;;  quotient        1    9[COMMON] unsigned char 
  5706 ;;  counter         1    8[COMMON] unsigned char 
  5707 ;; Return value:  Size  Location     Type
  5708 ;;                  1    wreg      unsigned char 
  5709 ;; Registers used:
  5710 ;;		wreg, status,2, status,0, btemp+1
  5711 ;; Tracked objects:
  5712 ;;		On entry : 300/0
  5713 ;;		On exit  : 300/0
  5714 ;;		Unchanged: 300/0
  5715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5716 ;;      Params:         1       0       0       0       0
  5717 ;;      Locals:         3       0       0       0       0
  5718 ;;      Temps:          0       0       0       0       0
  5719 ;;      Totals:         4       0       0       0       0
  5720 ;;Total ram usage:        4 bytes
  5721 ;; Hardware stack levels used: 1
  5722 ;; This function calls:
  5723 ;;		Nothing
  5724 ;; This function is called by:
  5725 ;;		_fround
  5726 ;; This function uses a non-reentrant model
  5727 ;;
  5728                           
  5729     1007                     ___lbdiv:	
  5730                           ;psect for function ___lbdiv
  5731                           
  5732                           
  5733                           ;incstack = 0
  5734                           ; Regs used in ___lbdiv: [wreg+status,2+status,0+btemp+1]
  5735                           ;___lbdiv@dividend stored from wreg
  5736     1007  00F7               	movwf	___lbdiv@dividend
  5737     1008  01F9               	clrf	___lbdiv@quotient
  5738     1009  0876               	movf	___lbdiv@divisor,w
  5739     100A  1903               	btfsc	3,2
  5740     100B  2826               	goto	l2677
  5741     100C  01F8               	clrf	___lbdiv@counter
  5742     100D  0AF8               	incf	___lbdiv@counter,f
  5743     100E                     l2665:
  5744     100E  1BF6               	btfsc	___lbdiv@divisor,7
  5745     100F  2817               	goto	l2667
  5746     1010  1003               	clrc
  5747     1011  0DF6               	rlf	___lbdiv@divisor,f
  5748     1012  3001               	movlw	1
  5749     1013  00FF               	movwf	127
  5750     1014  087F               	movf	127,w
  5751     1015  07F8               	addwf	___lbdiv@counter,f
  5752     1016  280E               	goto	l2665
  5753     1017                     l2667:
  5754     1017  1003               	clrc
  5755     1018  0DF9               	rlf	___lbdiv@quotient,f
  5756     1019  0876               	movf	___lbdiv@divisor,w
  5757     101A  0277               	subwf	___lbdiv@dividend,w
  5758     101B  1C03               	skipc
  5759     101C  2821               	goto	L7
  5760     101D  0876               	movf	___lbdiv@divisor,w
  5761     101E  02F7               	subwf	___lbdiv@dividend,f
  5762     101F  1479               	bsf	___lbdiv@quotient,0
  5763     1020  1003               	clrc
  5764     1021                     L7:
  5765     1021  0CF6               	rrf	___lbdiv@divisor,f
  5766     1022  3001               	movlw	1
  5767     1023  02F8               	subwf	___lbdiv@counter,f
  5768     1024  1D03               	btfss	3,2
  5769     1025  2817               	goto	l2667
  5770     1026                     l2677:
  5771     1026  0879               	movf	___lbdiv@quotient,w
  5772     1027  0008               	return
  5773     1028                     __end_of___lbdiv:
  5774                           
  5775                           	psect	text9
  5776     09C3                     __ptext9:	
  5777 ;; *************** function ___flmul *****************
  5778 ;; Defined at:
  5779 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\sprcmul.c"
  5780 ;; Parameters:    Size  Location     Type
  5781 ;;  b               4    0[BANK0 ] unsigned char 
  5782 ;;  a               4    4[BANK0 ] unsigned char 
  5783 ;; Auto vars:     Size  Location     Type
  5784 ;;  prod            4   20[BANK0 ] struct .
  5785 ;;  grs             4   15[BANK0 ] unsigned long 
  5786 ;;  temp            2   24[BANK0 ] struct .
  5787 ;;  bexp            1   19[BANK0 ] unsigned char 
  5788 ;;  aexp            1   14[BANK0 ] unsigned char 
  5789 ;;  sign            1   13[BANK0 ] unsigned char 
  5790 ;; Return value:  Size  Location     Type
  5791 ;;                  4    0[BANK0 ] unsigned char 
  5792 ;; Registers used:
  5793 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5794 ;; Tracked objects:
  5795 ;;		On entry : 300/0
  5796 ;;		On exit  : 300/0
  5797 ;;		Unchanged: 0/0
  5798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5799 ;;      Params:         0       8       0       0       0
  5800 ;;      Locals:         0      13       0       0       0
  5801 ;;      Temps:          0       5       0       0       0
  5802 ;;      Totals:         0      26       0       0       0
  5803 ;;Total ram usage:       26 bytes
  5804 ;; Hardware stack levels used: 1
  5805 ;; Hardware stack levels required when called: 1
  5806 ;; This function calls:
  5807 ;;		__Umul8_16
  5808 ;; This function is called by:
  5809 ;;		_fround
  5810 ;;		_scale
  5811 ;;		_sprintf
  5812 ;; This function uses a non-reentrant model
  5813 ;;
  5814                           
  5815     09C3                     ___flmul:	
  5816                           ;psect for function ___flmul
  5817                           
  5818                           
  5819                           ;incstack = 0
  5820                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5821     09C3  0823               	movf	___flmul@b+3,w
  5822     09C4  3980               	andlw	128
  5823     09C5  00AD               	movwf	___flmul@sign
  5824     09C6  0823               	movf	___flmul@b+3,w
  5825     09C7  00A8               	movwf	??___flmul
  5826     09C8  0728               	addwf	??___flmul,w
  5827     09C9  00B3               	movwf	___flmul@bexp
  5828     09CA  1BA2               	btfsc	___flmul@b+2,7
  5829     09CB  1433               	bsf	___flmul@bexp,0
  5830     09CC  0833               	movf	___flmul@bexp,w
  5831     09CD  1903               	btfsc	3,2
  5832     09CE  29DC               	goto	l2913
  5833     09CF  0A33               	incf	___flmul@bexp,w
  5834     09D0  1D03               	btfss	3,2
  5835     09D1  29DA               	goto	l2911
  5836     09D2  3000               	movlw	0
  5837     09D3  00A3               	movwf	___flmul@b+3
  5838     09D4  3000               	movlw	0
  5839     09D5  00A2               	movwf	___flmul@b+2
  5840     09D6  3000               	movlw	0
  5841     09D7  00A1               	movwf	___flmul@b+1
  5842     09D8  3000               	movlw	0
  5843     09D9  00A0               	movwf	___flmul@b
  5844     09DA                     l2911:
  5845     09DA  17A2               	bsf	___flmul@b+2,7
  5846     09DB  29E4               	goto	l2915
  5847     09DC                     l2913:
  5848     09DC  3000               	movlw	0
  5849     09DD  00A3               	movwf	___flmul@b+3
  5850     09DE  3000               	movlw	0
  5851     09DF  00A2               	movwf	___flmul@b+2
  5852     09E0  3000               	movlw	0
  5853     09E1  00A1               	movwf	___flmul@b+1
  5854     09E2  3000               	movlw	0
  5855     09E3  00A0               	movwf	___flmul@b
  5856     09E4                     l2915:
  5857     09E4  0827               	movf	___flmul@a+3,w
  5858     09E5  3980               	andlw	128
  5859     09E6  00FF               	movwf	127
  5860     09E7  087F               	movf	127,w
  5861     09E8  06AD               	xorwf	___flmul@sign,f
  5862     09E9  0827               	movf	___flmul@a+3,w
  5863     09EA  00A8               	movwf	??___flmul
  5864     09EB  0728               	addwf	??___flmul,w
  5865     09EC  00AE               	movwf	___flmul@aexp
  5866     09ED  1BA6               	btfsc	___flmul@a+2,7
  5867     09EE  142E               	bsf	___flmul@aexp,0
  5868     09EF  082E               	movf	___flmul@aexp,w
  5869     09F0  1903               	btfsc	3,2
  5870     09F1  29FF               	goto	l2931
  5871     09F2  0A2E               	incf	___flmul@aexp,w
  5872     09F3  1D03               	btfss	3,2
  5873     09F4  29FD               	goto	l2929
  5874     09F5  3000               	movlw	0
  5875     09F6  00A7               	movwf	___flmul@a+3
  5876     09F7  3000               	movlw	0
  5877     09F8  00A6               	movwf	___flmul@a+2
  5878     09F9  3000               	movlw	0
  5879     09FA  00A5               	movwf	___flmul@a+1
  5880     09FB  3000               	movlw	0
  5881     09FC  00A4               	movwf	___flmul@a
  5882     09FD                     l2929:
  5883     09FD  17A6               	bsf	___flmul@a+2,7
  5884     09FE  2A07               	goto	l2933
  5885     09FF                     l2931:
  5886     09FF  3000               	movlw	0
  5887     0A00  00A7               	movwf	___flmul@a+3
  5888     0A01  3000               	movlw	0
  5889     0A02  00A6               	movwf	___flmul@a+2
  5890     0A03  3000               	movlw	0
  5891     0A04  00A5               	movwf	___flmul@a+1
  5892     0A05  3000               	movlw	0
  5893     0A06  00A4               	movwf	___flmul@a
  5894     0A07                     l2933:
  5895     0A07  082E               	movf	___flmul@aexp,w
  5896     0A08  1D03               	btfss	3,2
  5897     0A09  0833               	movf	___flmul@bexp,w
  5898     0A0A  1D03               	btfss	3,2
  5899     0A0B  2A15               	goto	l2941
  5900     0A0C  3000               	movlw	0
  5901     0A0D  00A3               	movwf	?___flmul+3
  5902     0A0E  3000               	movlw	0
  5903     0A0F  00A2               	movwf	?___flmul+2
  5904     0A10  3000               	movlw	0
  5905     0A11  00A1               	movwf	?___flmul+1
  5906     0A12  3000               	movlw	0
  5907     0A13  00A0               	movwf	?___flmul
  5908     0A14  0008               	return
  5909     0A15                     l2941:
  5910     0A15  0820               	movf	___flmul@b,w
  5911     0A16  00F0               	movwf	__Umul8_16@multiplicand
  5912     0A17  0826               	movf	___flmul@a+2,w
  5913     0A18  120A  158A  2009  120A  158A  	fcall	__Umul8_16
  5914     0A1D  0871               	movf	?__Umul8_16+1,w
  5915     0A1E  00B9               	movwf	___flmul@temp+1
  5916     0A1F  0870               	movf	?__Umul8_16,w
  5917     0A20  00B8               	movwf	___flmul@temp
  5918     0A21  0838               	movf	___flmul@temp,w
  5919     0A22  00A8               	movwf	??___flmul
  5920     0A23  01A9               	clrf	??___flmul+1
  5921     0A24  01AA               	clrf	??___flmul+2
  5922     0A25  01AB               	clrf	??___flmul+3
  5923     0A26  082B               	movf	??___flmul+3,w
  5924     0A27  00B2               	movwf	___flmul@grs+3
  5925     0A28  082A               	movf	??___flmul+2,w
  5926     0A29  00B1               	movwf	___flmul@grs+2
  5927     0A2A  0829               	movf	??___flmul+1,w
  5928     0A2B  00B0               	movwf	___flmul@grs+1
  5929     0A2C  0828               	movf	??___flmul,w
  5930     0A2D  00AF               	movwf	___flmul@grs
  5931     0A2E  0839               	movf	___flmul@temp+1,w
  5932     0A2F  00A8               	movwf	??___flmul
  5933     0A30  01A9               	clrf	??___flmul+1
  5934     0A31  01AA               	clrf	??___flmul+2
  5935     0A32  01AB               	clrf	??___flmul+3
  5936     0A33  082B               	movf	??___flmul+3,w
  5937     0A34  00B7               	movwf	___flmul@prod+3
  5938     0A35  082A               	movf	??___flmul+2,w
  5939     0A36  00B6               	movwf	___flmul@prod+2
  5940     0A37  0829               	movf	??___flmul+1,w
  5941     0A38  00B5               	movwf	___flmul@prod+1
  5942     0A39  0828               	movf	??___flmul,w
  5943     0A3A  00B4               	movwf	___flmul@prod
  5944     0A3B  0821               	movf	___flmul@b+1,w
  5945     0A3C  00F0               	movwf	__Umul8_16@multiplicand
  5946     0A3D  0825               	movf	___flmul@a+1,w
  5947     0A3E  120A  158A  2009  120A  158A  	fcall	__Umul8_16
  5948     0A43  0871               	movf	?__Umul8_16+1,w
  5949     0A44  00B9               	movwf	___flmul@temp+1
  5950     0A45  0870               	movf	?__Umul8_16,w
  5951     0A46  00B8               	movwf	___flmul@temp
  5952     0A47  0838               	movf	___flmul@temp,w
  5953     0A48  00A8               	movwf	??___flmul
  5954     0A49  01A9               	clrf	??___flmul+1
  5955     0A4A  01AA               	clrf	??___flmul+2
  5956     0A4B  01AB               	clrf	??___flmul+3
  5957     0A4C  0828               	movf	??___flmul,w
  5958     0A4D  07AF               	addwf	___flmul@grs,f
  5959     0A4E  0829               	movf	??___flmul+1,w
  5960     0A4F  1103               	clrz
  5961     0A50  1803               	skipnc
  5962     0A51  3E01               	addlw	1
  5963     0A52  1D03               	btfss	3,2
  5964     0A53  07B0               	addwf	___flmul@grs+1,f
  5965     0A54  082A               	movf	??___flmul+2,w
  5966     0A55  1103               	clrz
  5967     0A56  1803               	skipnc
  5968     0A57  3E01               	addlw	1
  5969     0A58  1D03               	btfss	3,2
  5970     0A59  07B1               	addwf	___flmul@grs+2,f
  5971     0A5A  082B               	movf	??___flmul+3,w
  5972     0A5B  1103               	clrz
  5973     0A5C  1803               	skipnc
  5974     0A5D  3E01               	addlw	1
  5975     0A5E  1D03               	btfss	3,2
  5976     0A5F  07B2               	addwf	___flmul@grs+3,f
  5977     0A60  0839               	movf	___flmul@temp+1,w
  5978     0A61  00A8               	movwf	??___flmul
  5979     0A62  01A9               	clrf	??___flmul+1
  5980     0A63  01AA               	clrf	??___flmul+2
  5981     0A64  01AB               	clrf	??___flmul+3
  5982     0A65  0828               	movf	??___flmul,w
  5983     0A66  07B4               	addwf	___flmul@prod,f
  5984     0A67  0829               	movf	??___flmul+1,w
  5985     0A68  1103               	clrz
  5986     0A69  1803               	skipnc
  5987     0A6A  3E01               	addlw	1
  5988     0A6B  1D03               	btfss	3,2
  5989     0A6C  07B5               	addwf	___flmul@prod+1,f
  5990     0A6D  082A               	movf	??___flmul+2,w
  5991     0A6E  1103               	clrz
  5992     0A6F  1803               	skipnc
  5993     0A70  3E01               	addlw	1
  5994     0A71  1D03               	btfss	3,2
  5995     0A72  07B6               	addwf	___flmul@prod+2,f
  5996     0A73  082B               	movf	??___flmul+3,w
  5997     0A74  1103               	clrz
  5998     0A75  1803               	skipnc
  5999     0A76  3E01               	addlw	1
  6000     0A77  1D03               	btfss	3,2
  6001     0A78  07B7               	addwf	___flmul@prod+3,f
  6002     0A79  0822               	movf	___flmul@b+2,w
  6003     0A7A  00F0               	movwf	__Umul8_16@multiplicand
  6004     0A7B  0824               	movf	___flmul@a,w
  6005     0A7C  120A  158A  2009  120A  158A  	fcall	__Umul8_16
  6006     0A81  0871               	movf	?__Umul8_16+1,w
  6007     0A82  00B9               	movwf	___flmul@temp+1
  6008     0A83  0870               	movf	?__Umul8_16,w
  6009     0A84  00B8               	movwf	___flmul@temp
  6010     0A85  0838               	movf	___flmul@temp,w
  6011     0A86  00A8               	movwf	??___flmul
  6012     0A87  01A9               	clrf	??___flmul+1
  6013     0A88  01AA               	clrf	??___flmul+2
  6014     0A89  01AB               	clrf	??___flmul+3
  6015     0A8A  0828               	movf	??___flmul,w
  6016     0A8B  07AF               	addwf	___flmul@grs,f
  6017     0A8C  0829               	movf	??___flmul+1,w
  6018     0A8D  1103               	clrz
  6019     0A8E  1803               	skipnc
  6020     0A8F  3E01               	addlw	1
  6021     0A90  1D03               	btfss	3,2
  6022     0A91  07B0               	addwf	___flmul@grs+1,f
  6023     0A92  082A               	movf	??___flmul+2,w
  6024     0A93  1103               	clrz
  6025     0A94  1803               	skipnc
  6026     0A95  3E01               	addlw	1
  6027     0A96  1D03               	btfss	3,2
  6028     0A97  07B1               	addwf	___flmul@grs+2,f
  6029     0A98  082B               	movf	??___flmul+3,w
  6030     0A99  1103               	clrz
  6031     0A9A  1803               	skipnc
  6032     0A9B  3E01               	addlw	1
  6033     0A9C  1D03               	btfss	3,2
  6034     0A9D  07B2               	addwf	___flmul@grs+3,f
  6035     0A9E  0839               	movf	___flmul@temp+1,w
  6036     0A9F  00A8               	movwf	??___flmul
  6037     0AA0  01A9               	clrf	??___flmul+1
  6038     0AA1  01AA               	clrf	??___flmul+2
  6039     0AA2  01AB               	clrf	??___flmul+3
  6040     0AA3  0828               	movf	??___flmul,w
  6041     0AA4  07B4               	addwf	___flmul@prod,f
  6042     0AA5  0829               	movf	??___flmul+1,w
  6043     0AA6  1103               	clrz
  6044     0AA7  1803               	skipnc
  6045     0AA8  3E01               	addlw	1
  6046     0AA9  1D03               	btfss	3,2
  6047     0AAA  07B5               	addwf	___flmul@prod+1,f
  6048     0AAB  082A               	movf	??___flmul+2,w
  6049     0AAC  1103               	clrz
  6050     0AAD  1803               	skipnc
  6051     0AAE  3E01               	addlw	1
  6052     0AAF  1D03               	btfss	3,2
  6053     0AB0  07B6               	addwf	___flmul@prod+2,f
  6054     0AB1  082B               	movf	??___flmul+3,w
  6055     0AB2  1103               	clrz
  6056     0AB3  1803               	skipnc
  6057     0AB4  3E01               	addlw	1
  6058     0AB5  1D03               	btfss	3,2
  6059     0AB6  07B7               	addwf	___flmul@prod+3,f
  6060     0AB7  3008               	movlw	8
  6061     0AB8  00A8               	movwf	??___flmul
  6062     0AB9                     u4315:
  6063     0AB9  1003               	clrc
  6064     0ABA  0DAF               	rlf	___flmul@grs,f
  6065     0ABB  0DB0               	rlf	___flmul@grs+1,f
  6066     0ABC  0DB1               	rlf	___flmul@grs+2,f
  6067     0ABD  0DB2               	rlf	___flmul@grs+3,f
  6068     0ABE  0BA8               	decfsz	??___flmul,f
  6069     0ABF  2AB9               	goto	u4315
  6070     0AC0  0821               	movf	___flmul@b+1,w
  6071     0AC1  00F0               	movwf	__Umul8_16@multiplicand
  6072     0AC2  0824               	movf	___flmul@a,w
  6073     0AC3  120A  158A  2009  120A  158A  	fcall	__Umul8_16
  6074     0AC8  0871               	movf	?__Umul8_16+1,w
  6075     0AC9  00B9               	movwf	___flmul@temp+1
  6076     0ACA  0870               	movf	?__Umul8_16,w
  6077     0ACB  00B8               	movwf	___flmul@temp
  6078     0ACC  0838               	movf	___flmul@temp,w
  6079     0ACD  00A8               	movwf	??___flmul
  6080     0ACE  0839               	movf	___flmul@temp+1,w
  6081     0ACF  00A9               	movwf	??___flmul+1
  6082     0AD0  01AA               	clrf	??___flmul+2
  6083     0AD1  01AB               	clrf	??___flmul+3
  6084     0AD2  0828               	movf	??___flmul,w
  6085     0AD3  07AF               	addwf	___flmul@grs,f
  6086     0AD4  0829               	movf	??___flmul+1,w
  6087     0AD5  1103               	clrz
  6088     0AD6  1803               	skipnc
  6089     0AD7  3E01               	addlw	1
  6090     0AD8  1D03               	btfss	3,2
  6091     0AD9  07B0               	addwf	___flmul@grs+1,f
  6092     0ADA  082A               	movf	??___flmul+2,w
  6093     0ADB  1103               	clrz
  6094     0ADC  1803               	skipnc
  6095     0ADD  3E01               	addlw	1
  6096     0ADE  1D03               	btfss	3,2
  6097     0ADF  07B1               	addwf	___flmul@grs+2,f
  6098     0AE0  082B               	movf	??___flmul+3,w
  6099     0AE1  1103               	clrz
  6100     0AE2  1803               	skipnc
  6101     0AE3  3E01               	addlw	1
  6102     0AE4  1D03               	btfss	3,2
  6103     0AE5  07B2               	addwf	___flmul@grs+3,f
  6104     0AE6  0820               	movf	___flmul@b,w
  6105     0AE7  00F0               	movwf	__Umul8_16@multiplicand
  6106     0AE8  0825               	movf	___flmul@a+1,w
  6107     0AE9  120A  158A  2009  120A  158A  	fcall	__Umul8_16
  6108     0AEE  0871               	movf	?__Umul8_16+1,w
  6109     0AEF  00B9               	movwf	___flmul@temp+1
  6110     0AF0  0870               	movf	?__Umul8_16,w
  6111     0AF1  00B8               	movwf	___flmul@temp
  6112     0AF2  0838               	movf	___flmul@temp,w
  6113     0AF3  00A8               	movwf	??___flmul
  6114     0AF4  0839               	movf	___flmul@temp+1,w
  6115     0AF5  00A9               	movwf	??___flmul+1
  6116     0AF6  01AA               	clrf	??___flmul+2
  6117     0AF7  01AB               	clrf	??___flmul+3
  6118     0AF8  0828               	movf	??___flmul,w
  6119     0AF9  07AF               	addwf	___flmul@grs,f
  6120     0AFA  0829               	movf	??___flmul+1,w
  6121     0AFB  1103               	clrz
  6122     0AFC  1803               	skipnc
  6123     0AFD  3E01               	addlw	1
  6124     0AFE  1D03               	btfss	3,2
  6125     0AFF  07B0               	addwf	___flmul@grs+1,f
  6126     0B00  082A               	movf	??___flmul+2,w
  6127     0B01  1103               	clrz
  6128     0B02  1803               	skipnc
  6129     0B03  3E01               	addlw	1
  6130     0B04  1D03               	btfss	3,2
  6131     0B05  07B1               	addwf	___flmul@grs+2,f
  6132     0B06  082B               	movf	??___flmul+3,w
  6133     0B07  1103               	clrz
  6134     0B08  1803               	skipnc
  6135     0B09  3E01               	addlw	1
  6136     0B0A  1D03               	btfss	3,2
  6137     0B0B  07B2               	addwf	___flmul@grs+3,f
  6138     0B0C  3008               	movlw	8
  6139     0B0D  00A8               	movwf	??___flmul
  6140     0B0E                     u4345:
  6141     0B0E  1003               	clrc
  6142     0B0F  0DAF               	rlf	___flmul@grs,f
  6143     0B10  0DB0               	rlf	___flmul@grs+1,f
  6144     0B11  0DB1               	rlf	___flmul@grs+2,f
  6145     0B12  0DB2               	rlf	___flmul@grs+3,f
  6146     0B13  0BA8               	decfsz	??___flmul,f
  6147     0B14  2B0E               	goto	u4345
  6148     0B15  0820               	movf	___flmul@b,w
  6149     0B16  00F0               	movwf	__Umul8_16@multiplicand
  6150     0B17  0824               	movf	___flmul@a,w
  6151     0B18  120A  158A  2009  120A  158A  	fcall	__Umul8_16
  6152     0B1D  0871               	movf	?__Umul8_16+1,w
  6153     0B1E  00B9               	movwf	___flmul@temp+1
  6154     0B1F  0870               	movf	?__Umul8_16,w
  6155     0B20  00B8               	movwf	___flmul@temp
  6156     0B21  0838               	movf	___flmul@temp,w
  6157     0B22  00A8               	movwf	??___flmul
  6158     0B23  0839               	movf	___flmul@temp+1,w
  6159     0B24  00A9               	movwf	??___flmul+1
  6160     0B25  01AA               	clrf	??___flmul+2
  6161     0B26  01AB               	clrf	??___flmul+3
  6162     0B27  0828               	movf	??___flmul,w
  6163     0B28  07AF               	addwf	___flmul@grs,f
  6164     0B29  0829               	movf	??___flmul+1,w
  6165     0B2A  1103               	clrz
  6166     0B2B  1803               	skipnc
  6167     0B2C  3E01               	addlw	1
  6168     0B2D  1D03               	btfss	3,2
  6169     0B2E  07B0               	addwf	___flmul@grs+1,f
  6170     0B2F  082A               	movf	??___flmul+2,w
  6171     0B30  1103               	clrz
  6172     0B31  1803               	skipnc
  6173     0B32  3E01               	addlw	1
  6174     0B33  1D03               	btfss	3,2
  6175     0B34  07B1               	addwf	___flmul@grs+2,f
  6176     0B35  082B               	movf	??___flmul+3,w
  6177     0B36  1103               	clrz
  6178     0B37  1803               	skipnc
  6179     0B38  3E01               	addlw	1
  6180     0B39  1D03               	btfss	3,2
  6181     0B3A  07B2               	addwf	___flmul@grs+3,f
  6182     0B3B  0821               	movf	___flmul@b+1,w
  6183     0B3C  00F0               	movwf	__Umul8_16@multiplicand
  6184     0B3D  0826               	movf	___flmul@a+2,w
  6185     0B3E  120A  158A  2009  120A  158A  	fcall	__Umul8_16
  6186     0B43  0871               	movf	?__Umul8_16+1,w
  6187     0B44  00B9               	movwf	___flmul@temp+1
  6188     0B45  0870               	movf	?__Umul8_16,w
  6189     0B46  00B8               	movwf	___flmul@temp
  6190     0B47  0838               	movf	___flmul@temp,w
  6191     0B48  00A8               	movwf	??___flmul
  6192     0B49  0839               	movf	___flmul@temp+1,w
  6193     0B4A  00A9               	movwf	??___flmul+1
  6194     0B4B  01AA               	clrf	??___flmul+2
  6195     0B4C  01AB               	clrf	??___flmul+3
  6196     0B4D  0828               	movf	??___flmul,w
  6197     0B4E  07B4               	addwf	___flmul@prod,f
  6198     0B4F  0829               	movf	??___flmul+1,w
  6199     0B50  1103               	clrz
  6200     0B51  1803               	skipnc
  6201     0B52  3E01               	addlw	1
  6202     0B53  1D03               	btfss	3,2
  6203     0B54  07B5               	addwf	___flmul@prod+1,f
  6204     0B55  082A               	movf	??___flmul+2,w
  6205     0B56  1103               	clrz
  6206     0B57  1803               	skipnc
  6207     0B58  3E01               	addlw	1
  6208     0B59  1D03               	btfss	3,2
  6209     0B5A  07B6               	addwf	___flmul@prod+2,f
  6210     0B5B  082B               	movf	??___flmul+3,w
  6211     0B5C  1103               	clrz
  6212     0B5D  1803               	skipnc
  6213     0B5E  3E01               	addlw	1
  6214     0B5F  1D03               	btfss	3,2
  6215     0B60  07B7               	addwf	___flmul@prod+3,f
  6216     0B61  0822               	movf	___flmul@b+2,w
  6217     0B62  00F0               	movwf	__Umul8_16@multiplicand
  6218     0B63  0825               	movf	___flmul@a+1,w
  6219     0B64  120A  158A  2009  120A  158A  	fcall	__Umul8_16
  6220     0B69  0871               	movf	?__Umul8_16+1,w
  6221     0B6A  00B9               	movwf	___flmul@temp+1
  6222     0B6B  0870               	movf	?__Umul8_16,w
  6223     0B6C  00B8               	movwf	___flmul@temp
  6224     0B6D  0838               	movf	___flmul@temp,w
  6225     0B6E  00A8               	movwf	??___flmul
  6226     0B6F  0839               	movf	___flmul@temp+1,w
  6227     0B70  00A9               	movwf	??___flmul+1
  6228     0B71  01AA               	clrf	??___flmul+2
  6229     0B72  01AB               	clrf	??___flmul+3
  6230     0B73  0828               	movf	??___flmul,w
  6231     0B74  07B4               	addwf	___flmul@prod,f
  6232     0B75  0829               	movf	??___flmul+1,w
  6233     0B76  1103               	clrz
  6234     0B77  1803               	skipnc
  6235     0B78  3E01               	addlw	1
  6236     0B79  1D03               	btfss	3,2
  6237     0B7A  07B5               	addwf	___flmul@prod+1,f
  6238     0B7B  082A               	movf	??___flmul+2,w
  6239     0B7C  1103               	clrz
  6240     0B7D  1803               	skipnc
  6241     0B7E  3E01               	addlw	1
  6242     0B7F  1D03               	btfss	3,2
  6243     0B80  07B6               	addwf	___flmul@prod+2,f
  6244     0B81  082B               	movf	??___flmul+3,w
  6245     0B82  1103               	clrz
  6246     0B83  1803               	skipnc
  6247     0B84  3E01               	addlw	1
  6248     0B85  1D03               	btfss	3,2
  6249     0B86  07B7               	addwf	___flmul@prod+3,f
  6250     0B87  0822               	movf	___flmul@b+2,w
  6251     0B88  00F0               	movwf	__Umul8_16@multiplicand
  6252     0B89  0826               	movf	___flmul@a+2,w
  6253     0B8A  120A  158A  2009  120A  158A  	fcall	__Umul8_16
  6254     0B8F  0871               	movf	?__Umul8_16+1,w
  6255     0B90  00B9               	movwf	___flmul@temp+1
  6256     0B91  0870               	movf	?__Umul8_16,w
  6257     0B92  00B8               	movwf	___flmul@temp
  6258     0B93  0838               	movf	___flmul@temp,w
  6259     0B94  00A8               	movwf	??___flmul
  6260     0B95  0839               	movf	___flmul@temp+1,w
  6261     0B96  00A9               	movwf	??___flmul+1
  6262     0B97  01AA               	clrf	??___flmul+2
  6263     0B98  01AB               	clrf	??___flmul+3
  6264     0B99  3008               	movlw	8
  6265     0B9A                     u4385:
  6266     0B9A  1003               	clrc
  6267     0B9B  0DA8               	rlf	??___flmul,f
  6268     0B9C  0DA9               	rlf	??___flmul+1,f
  6269     0B9D  0DAA               	rlf	??___flmul+2,f
  6270     0B9E  0DAB               	rlf	??___flmul+3,f
  6271     0B9F  3EFF               	addlw	-1
  6272     0BA0  1D03               	skipz
  6273     0BA1  2B9A               	goto	u4385
  6274     0BA2  0828               	movf	??___flmul,w
  6275     0BA3  07B4               	addwf	___flmul@prod,f
  6276     0BA4  0829               	movf	??___flmul+1,w
  6277     0BA5  1103               	clrz
  6278     0BA6  1803               	skipnc
  6279     0BA7  3E01               	addlw	1
  6280     0BA8  1D03               	btfss	3,2
  6281     0BA9  07B5               	addwf	___flmul@prod+1,f
  6282     0BAA  082A               	movf	??___flmul+2,w
  6283     0BAB  1103               	clrz
  6284     0BAC  1803               	skipnc
  6285     0BAD  3E01               	addlw	1
  6286     0BAE  1D03               	btfss	3,2
  6287     0BAF  07B6               	addwf	___flmul@prod+2,f
  6288     0BB0  082B               	movf	??___flmul+3,w
  6289     0BB1  1103               	clrz
  6290     0BB2  1803               	skipnc
  6291     0BB3  3E01               	addlw	1
  6292     0BB4  1D03               	btfss	3,2
  6293     0BB5  07B7               	addwf	___flmul@prod+3,f
  6294     0BB6  0832               	movf	___flmul@grs+3,w
  6295     0BB7  00A8               	movwf	??___flmul
  6296     0BB8  01A9               	clrf	??___flmul+1
  6297     0BB9  01AA               	clrf	??___flmul+2
  6298     0BBA  01AB               	clrf	??___flmul+3
  6299     0BBB  0828               	movf	??___flmul,w
  6300     0BBC  07B4               	addwf	___flmul@prod,f
  6301     0BBD  0829               	movf	??___flmul+1,w
  6302     0BBE  1103               	clrz
  6303     0BBF  1803               	skipnc
  6304     0BC0  3E01               	addlw	1
  6305     0BC1  1D03               	btfss	3,2
  6306     0BC2  07B5               	addwf	___flmul@prod+1,f
  6307     0BC3  082A               	movf	??___flmul+2,w
  6308     0BC4  1103               	clrz
  6309     0BC5  1803               	skipnc
  6310     0BC6  3E01               	addlw	1
  6311     0BC7  1D03               	btfss	3,2
  6312     0BC8  07B6               	addwf	___flmul@prod+2,f
  6313     0BC9  082B               	movf	??___flmul+3,w
  6314     0BCA  1103               	clrz
  6315     0BCB  1803               	skipnc
  6316     0BCC  3E01               	addlw	1
  6317     0BCD  1D03               	btfss	3,2
  6318     0BCE  07B7               	addwf	___flmul@prod+3,f
  6319     0BCF  3008               	movlw	8
  6320     0BD0  00A8               	movwf	??___flmul
  6321     0BD1                     u4415:
  6322     0BD1  1003               	clrc
  6323     0BD2  0DAF               	rlf	___flmul@grs,f
  6324     0BD3  0DB0               	rlf	___flmul@grs+1,f
  6325     0BD4  0DB1               	rlf	___flmul@grs+2,f
  6326     0BD5  0DB2               	rlf	___flmul@grs+3,f
  6327     0BD6  0BA8               	decfsz	??___flmul,f
  6328     0BD7  2BD1               	goto	u4415
  6329     0BD8  0833               	movf	___flmul@bexp,w
  6330     0BD9  072E               	addwf	___flmul@aexp,w
  6331     0BDA  00A8               	movwf	??___flmul
  6332     0BDB  01A9               	clrf	??___flmul+1
  6333     0BDC  0DA9               	rlf	??___flmul+1,f
  6334     0BDD  0828               	movf	??___flmul,w
  6335     0BDE  3E82               	addlw	130
  6336     0BDF  00B8               	movwf	___flmul@temp
  6337     0BE0  0829               	movf	??___flmul+1,w
  6338     0BE1  1803               	skipnc
  6339     0BE2  3E01               	addlw	1
  6340     0BE3  3EFF               	addlw	255
  6341     0BE4  00B9               	movwf	___flmul@temp+1
  6342     0BE5                     l2993:
  6343     0BE5  1BB6               	btfsc	___flmul@prod+2,7
  6344     0BE6  2C02               	goto	l2995
  6345     0BE7  3001               	movlw	1
  6346     0BE8  00A8               	movwf	??___flmul
  6347     0BE9                     u4425:
  6348     0BE9  1003               	clrc
  6349     0BEA  0DB4               	rlf	___flmul@prod,f
  6350     0BEB  0DB5               	rlf	___flmul@prod+1,f
  6351     0BEC  0DB6               	rlf	___flmul@prod+2,f
  6352     0BED  0DB7               	rlf	___flmul@prod+3,f
  6353     0BEE  0BA8               	decfsz	??___flmul,f
  6354     0BEF  2BE9               	goto	u4425
  6355     0BF0  1BB2               	btfsc	___flmul@grs+3,7
  6356     0BF1  1434               	bsf	___flmul@prod,0
  6357     0BF2  3001               	movlw	1
  6358     0BF3  00A8               	movwf	??___flmul
  6359     0BF4                     u4445:
  6360     0BF4  1003               	clrc
  6361     0BF5  0DAF               	rlf	___flmul@grs,f
  6362     0BF6  0DB0               	rlf	___flmul@grs+1,f
  6363     0BF7  0DB1               	rlf	___flmul@grs+2,f
  6364     0BF8  0DB2               	rlf	___flmul@grs+3,f
  6365     0BF9  0BA8               	decfsz	??___flmul,f
  6366     0BFA  2BF4               	goto	u4445
  6367     0BFB  30FF               	movlw	255
  6368     0BFC  07B8               	addwf	___flmul@temp,f
  6369     0BFD  1803               	skipnc
  6370     0BFE  0AB9               	incf	___flmul@temp+1,f
  6371     0BFF  30FF               	movlw	255
  6372     0C00  07B9               	addwf	___flmul@temp+1,f
  6373     0C01  2BE5               	goto	l2993
  6374     0C02                     l2995:
  6375     0C02  01AE               	clrf	___flmul@aexp
  6376     0C03  1FB2               	btfss	___flmul@grs+3,7
  6377     0C04  2C1B               	goto	l3005
  6378     0C05  30FF               	movlw	255
  6379     0C06  052F               	andwf	___flmul@grs,w
  6380     0C07  00A8               	movwf	??___flmul
  6381     0C08  30FF               	movlw	255
  6382     0C09  0530               	andwf	___flmul@grs+1,w
  6383     0C0A  00A9               	movwf	??___flmul+1
  6384     0C0B  30FF               	movlw	255
  6385     0C0C  0531               	andwf	___flmul@grs+2,w
  6386     0C0D  00AA               	movwf	??___flmul+2
  6387     0C0E  307F               	movlw	127
  6388     0C0F  0532               	andwf	___flmul@grs+3,w
  6389     0C10  00AB               	movwf	??___flmul+3
  6390     0C11  082B               	movf	??___flmul+3,w
  6391     0C12  042A               	iorwf	??___flmul+2,w
  6392     0C13  0429               	iorwf	??___flmul+1,w
  6393     0C14  0428               	iorwf	??___flmul,w
  6394     0C15  1903               	skipnz
  6395     0C16  1834               	btfsc	___flmul@prod,0
  6396     0C17  2C19               	goto	l3001
  6397     0C18  2C1B               	goto	l3005
  6398     0C19                     l3001:
  6399     0C19  01AE               	clrf	___flmul@aexp
  6400     0C1A  0AAE               	incf	___flmul@aexp,f
  6401     0C1B                     l3005:
  6402     0C1B  082E               	movf	___flmul@aexp,w
  6403     0C1C  1903               	btfsc	3,2
  6404     0C1D  2C4D               	goto	l3015
  6405     0C1E  3001               	movlw	1
  6406     0C1F  07B4               	addwf	___flmul@prod,f
  6407     0C20  3000               	movlw	0
  6408     0C21  1803               	skipnc
  6409     0C22  3001               	movlw	1
  6410     0C23  07B5               	addwf	___flmul@prod+1,f
  6411     0C24  3000               	movlw	0
  6412     0C25  1803               	skipnc
  6413     0C26  3001               	movlw	1
  6414     0C27  07B6               	addwf	___flmul@prod+2,f
  6415     0C28  3000               	movlw	0
  6416     0C29  1803               	skipnc
  6417     0C2A  3001               	movlw	1
  6418     0C2B  07B7               	addwf	___flmul@prod+3,f
  6419     0C2C  1C37               	btfss	___flmul@prod+3,0
  6420     0C2D  2C4D               	goto	l3015
  6421     0C2E  0834               	movf	___flmul@prod,w
  6422     0C2F  00A8               	movwf	??___flmul
  6423     0C30  0835               	movf	___flmul@prod+1,w
  6424     0C31  00A9               	movwf	??___flmul+1
  6425     0C32  0836               	movf	___flmul@prod+2,w
  6426     0C33  00AA               	movwf	??___flmul+2
  6427     0C34  0837               	movf	___flmul@prod+3,w
  6428     0C35  00AB               	movwf	??___flmul+3
  6429     0C36  3001               	movlw	1
  6430     0C37  00AC               	movwf	??___flmul+4
  6431     0C38                     u4515:
  6432     0C38  0D2B               	rlf	??___flmul+3,w
  6433     0C39  0CAB               	rrf	??___flmul+3,f
  6434     0C3A  0CAA               	rrf	??___flmul+2,f
  6435     0C3B  0CA9               	rrf	??___flmul+1,f
  6436     0C3C  0CA8               	rrf	??___flmul,f
  6437     0C3D  0BAC               	decfsz	??___flmul+4,f
  6438     0C3E  2C38               	goto	u4515
  6439     0C3F  082B               	movf	??___flmul+3,w
  6440     0C40  00B7               	movwf	___flmul@prod+3
  6441     0C41  082A               	movf	??___flmul+2,w
  6442     0C42  00B6               	movwf	___flmul@prod+2
  6443     0C43  0829               	movf	??___flmul+1,w
  6444     0C44  00B5               	movwf	___flmul@prod+1
  6445     0C45  0828               	movf	??___flmul,w
  6446     0C46  00B4               	movwf	___flmul@prod
  6447     0C47  3001               	movlw	1
  6448     0C48  07B8               	addwf	___flmul@temp,f
  6449     0C49  1803               	skipnc
  6450     0C4A  0AB9               	incf	___flmul@temp+1,f
  6451     0C4B  3000               	movlw	0
  6452     0C4C  07B9               	addwf	___flmul@temp+1,f
  6453     0C4D                     l3015:
  6454     0C4D  0839               	movf	___flmul@temp+1,w
  6455     0C4E  3A80               	xorlw	128
  6456     0C4F  00FF               	movwf	127
  6457     0C50  3080               	movlw	128
  6458     0C51  027F               	subwf	127,w
  6459     0C52  1D03               	skipz
  6460     0C53  2C56               	goto	u4525
  6461     0C54  30FF               	movlw	255
  6462     0C55  0238               	subwf	___flmul@temp,w
  6463     0C56                     u4525:
  6464     0C56  1C03               	skipc
  6465     0C57  2C63               	goto	l3019
  6466     0C58  307F               	movlw	127
  6467     0C59  1283               	bcf	3,5	;RP0=0, select bank0
  6468     0C5A  1303               	bcf	3,6	;RP1=0, select bank0
  6469     0C5B  00B7               	movwf	___flmul@prod+3
  6470     0C5C  3080               	movlw	128
  6471     0C5D  00B6               	movwf	___flmul@prod+2
  6472     0C5E  3000               	movlw	0
  6473     0C5F  00B5               	movwf	___flmul@prod+1
  6474     0C60  3000               	movlw	0
  6475     0C61  00B4               	movwf	___flmul@prod
  6476     0C62  2C8F               	goto	l3033
  6477     0C63                     l3019:
  6478     0C63  1283               	bcf	3,5	;RP0=0, select bank0
  6479     0C64  1303               	bcf	3,6	;RP1=0, select bank0
  6480     0C65  0839               	movf	___flmul@temp+1,w
  6481     0C66  3A80               	xorlw	128
  6482     0C67  00FF               	movwf	127
  6483     0C68  3080               	movlw	128
  6484     0C69  027F               	subwf	127,w
  6485     0C6A  1D03               	skipz
  6486     0C6B  2C6E               	goto	u4535
  6487     0C6C  3001               	movlw	1
  6488     0C6D  0238               	subwf	___flmul@temp,w
  6489     0C6E                     u4535:
  6490     0C6E  1803               	skipnc
  6491     0C6F  2C7C               	goto	l3025
  6492     0C70  3000               	movlw	0
  6493     0C71  1283               	bcf	3,5	;RP0=0, select bank0
  6494     0C72  1303               	bcf	3,6	;RP1=0, select bank0
  6495     0C73  00B7               	movwf	___flmul@prod+3
  6496     0C74  3000               	movlw	0
  6497     0C75  00B6               	movwf	___flmul@prod+2
  6498     0C76  3000               	movlw	0
  6499     0C77  00B5               	movwf	___flmul@prod+1
  6500     0C78  3000               	movlw	0
  6501     0C79  00B4               	movwf	___flmul@prod
  6502     0C7A  01AD               	clrf	___flmul@sign
  6503     0C7B  2C8F               	goto	l3033
  6504     0C7C                     l3025:
  6505     0C7C  1283               	bcf	3,5	;RP0=0, select bank0
  6506     0C7D  1303               	bcf	3,6	;RP1=0, select bank0
  6507     0C7E  0838               	movf	___flmul@temp,w
  6508     0C7F  00B3               	movwf	___flmul@bexp
  6509     0C80  30FF               	movlw	255
  6510     0C81  05B4               	andwf	___flmul@prod,f
  6511     0C82  30FF               	movlw	255
  6512     0C83  05B5               	andwf	___flmul@prod+1,f
  6513     0C84  307F               	movlw	127
  6514     0C85  05B6               	andwf	___flmul@prod+2,f
  6515     0C86  3000               	movlw	0
  6516     0C87  05B7               	andwf	___flmul@prod+3,f
  6517     0C88  1833               	btfsc	___flmul@bexp,0
  6518     0C89  17B6               	bsf	___flmul@prod+2,7
  6519     0C8A  0833               	movf	___flmul@bexp,w
  6520     0C8B  00A8               	movwf	??___flmul
  6521     0C8C  1003               	clrc
  6522     0C8D  0C28               	rrf	??___flmul,w
  6523     0C8E  00B7               	movwf	___flmul@prod+3
  6524     0C8F                     l3033:
  6525     0C8F  082D               	movf	___flmul@sign,w
  6526     0C90  00FF               	movwf	127
  6527     0C91  087F               	movf	127,w
  6528     0C92  04B7               	iorwf	___flmul@prod+3,f
  6529     0C93  0837               	movf	___flmul@prod+3,w
  6530     0C94  00A3               	movwf	?___flmul+3
  6531     0C95  0836               	movf	___flmul@prod+2,w
  6532     0C96  00A2               	movwf	?___flmul+2
  6533     0C97  0835               	movf	___flmul@prod+1,w
  6534     0C98  00A1               	movwf	?___flmul+1
  6535     0C99  0834               	movf	___flmul@prod,w
  6536     0C9A  00A0               	movwf	?___flmul
  6537     0C9B  0008               	return
  6538     0C9C                     __end_of___flmul:
  6539                           
  6540                           	psect	text10
  6541     0809                     __ptext10:	
  6542 ;; *************** function __Umul8_16 *****************
  6543 ;; Defined at:
  6544 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul8_16.c"
  6545 ;; Parameters:    Size  Location     Type
  6546 ;;  multiplier      1    wreg     unsigned char 
  6547 ;;  multiplicand    1    0[COMMON] unsigned char 
  6548 ;; Auto vars:     Size  Location     Type
  6549 ;;  multiplier      1    8[COMMON] unsigned char 
  6550 ;;  word_mpld       2    6[COMMON] unsigned int 
  6551 ;;  product         2    4[COMMON] unsigned int 
  6552 ;; Return value:  Size  Location     Type
  6553 ;;                  2    0[COMMON] unsigned int 
  6554 ;; Registers used:
  6555 ;;		wreg, status,2, status,0
  6556 ;; Tracked objects:
  6557 ;;		On entry : 300/0
  6558 ;;		On exit  : 300/0
  6559 ;;		Unchanged: 300/0
  6560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6561 ;;      Params:         2       0       0       0       0
  6562 ;;      Locals:         5       0       0       0       0
  6563 ;;      Temps:          2       0       0       0       0
  6564 ;;      Totals:         9       0       0       0       0
  6565 ;;Total ram usage:        9 bytes
  6566 ;; Hardware stack levels used: 1
  6567 ;; This function calls:
  6568 ;;		Nothing
  6569 ;; This function is called by:
  6570 ;;		___flmul
  6571 ;; This function uses a non-reentrant model
  6572 ;;
  6573                           
  6574     0809                     __Umul8_16:	
  6575                           ;psect for function __Umul8_16
  6576                           
  6577                           
  6578                           ;incstack = 0
  6579                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6580                           ;__Umul8_16@multiplier stored from wreg
  6581     0809  00F8               	movwf	__Umul8_16@multiplier
  6582     080A  01F4               	clrf	__Umul8_16@product
  6583     080B  01F5               	clrf	__Umul8_16@product+1
  6584     080C  0870               	movf	__Umul8_16@multiplicand,w
  6585     080D  00F2               	movwf	??__Umul8_16
  6586     080E  01F3               	clrf	??__Umul8_16+1
  6587     080F  0872               	movf	??__Umul8_16,w
  6588     0810  00F6               	movwf	__Umul8_16@word_mpld
  6589     0811  0873               	movf	??__Umul8_16+1,w
  6590     0812  00F7               	movwf	__Umul8_16@word_mpld+1
  6591     0813                     l2553:
  6592     0813  1C78               	btfss	__Umul8_16@multiplier,0
  6593     0814  281B               	goto	l820
  6594     0815  0876               	movf	__Umul8_16@word_mpld,w
  6595     0816  07F4               	addwf	__Umul8_16@product,f
  6596     0817  1803               	skipnc
  6597     0818  0AF5               	incf	__Umul8_16@product+1,f
  6598     0819  0877               	movf	__Umul8_16@word_mpld+1,w
  6599     081A  07F5               	addwf	__Umul8_16@product+1,f
  6600     081B                     l820:
  6601     081B  3001               	movlw	1
  6602     081C                     u3415:
  6603     081C  1003               	clrc
  6604     081D  0DF6               	rlf	__Umul8_16@word_mpld,f
  6605     081E  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  6606     081F  3EFF               	addlw	-1
  6607     0820  1D03               	skipz
  6608     0821  281C               	goto	u3415
  6609     0822  1003               	clrc
  6610     0823  0CF8               	rrf	__Umul8_16@multiplier,f
  6611     0824  0878               	movf	__Umul8_16@multiplier,w
  6612     0825  1D03               	btfss	3,2
  6613     0826  2813               	goto	l2553
  6614     0827  0875               	movf	__Umul8_16@product+1,w
  6615     0828  00F1               	movwf	?__Umul8_16+1
  6616     0829  0874               	movf	__Umul8_16@product,w
  6617     082A  00F0               	movwf	?__Umul8_16
  6618     082B  0008               	return
  6619     082C                     __end_of__Umul8_16:
  6620                           
  6621                           	psect	text11
  6622     10CB                     __ptext11:	
  6623 ;; *************** function __tdiv_to_l_ *****************
  6624 ;; Defined at:
  6625 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\ftdivl.c"
  6626 ;; Parameters:    Size  Location     Type
  6627 ;;  f1              4    0[COMMON] float 
  6628 ;;  f2              4    4[COMMON] float 
  6629 ;; Auto vars:     Size  Location     Type
  6630 ;;  quot            4    0[BANK0 ] unsigned long 
  6631 ;;  exp1            1    5[BANK0 ] unsigned char 
  6632 ;;  cntr            1    4[BANK0 ] unsigned char 
  6633 ;; Return value:  Size  Location     Type
  6634 ;;                  4    0[COMMON] unsigned long 
  6635 ;; Registers used:
  6636 ;;		wreg, status,2, status,0, btemp+1
  6637 ;; Tracked objects:
  6638 ;;		On entry : 0/0
  6639 ;;		On exit  : 300/0
  6640 ;;		Unchanged: 0/0
  6641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6642 ;;      Params:         8       0       0       0       0
  6643 ;;      Locals:         0       6       0       0       0
  6644 ;;      Temps:          3       0       0       0       0
  6645 ;;      Totals:        11       6       0       0       0
  6646 ;;Total ram usage:       17 bytes
  6647 ;; Hardware stack levels used: 1
  6648 ;; This function calls:
  6649 ;;		Nothing
  6650 ;; This function is called by:
  6651 ;;		_sprintf
  6652 ;; This function uses a non-reentrant model
  6653 ;;
  6654                           
  6655     10CB                     __tdiv_to_l_:	
  6656                           ;psect for function __tdiv_to_l_
  6657                           
  6658                           
  6659                           ;incstack = 0
  6660                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0+btemp+1]
  6661     10CB  0870               	movf	__tdiv_to_l_@f1,w
  6662     10CC  00F8               	movwf	??__tdiv_to_l_
  6663     10CD  0871               	movf	__tdiv_to_l_@f1+1,w
  6664     10CE  00F9               	movwf	??__tdiv_to_l_+1
  6665     10CF  0872               	movf	__tdiv_to_l_@f1+2,w
  6666     10D0  00FA               	movwf	??__tdiv_to_l_+2
  6667     10D1  1003               	clrc
  6668     10D2  0D79               	rlf	??__tdiv_to_l_+1,w
  6669     10D3  0D7A               	rlf	??__tdiv_to_l_+2,w
  6670     10D4  1283               	bcf	3,5	;RP0=0, select bank0
  6671     10D5  1303               	bcf	3,6	;RP1=0, select bank0
  6672     10D6  00A5               	movwf	__tdiv_to_l_@exp1
  6673     10D7  0825               	movf	__tdiv_to_l_@exp1,w
  6674     10D8  1D03               	btfss	3,2
  6675     10D9  28E3               	goto	l3149
  6676     10DA                     l3145:
  6677     10DA  3000               	movlw	0
  6678     10DB  00F3               	movwf	?__tdiv_to_l_+3
  6679     10DC  3000               	movlw	0
  6680     10DD  00F2               	movwf	?__tdiv_to_l_+2
  6681     10DE  3000               	movlw	0
  6682     10DF  00F1               	movwf	?__tdiv_to_l_+1
  6683     10E0  3000               	movlw	0
  6684     10E1  00F0               	movwf	?__tdiv_to_l_
  6685     10E2  0008               	return
  6686     10E3                     l3149:
  6687     10E3  0874               	movf	__tdiv_to_l_@f2,w
  6688     10E4  00F8               	movwf	??__tdiv_to_l_
  6689     10E5  0875               	movf	__tdiv_to_l_@f2+1,w
  6690     10E6  00F9               	movwf	??__tdiv_to_l_+1
  6691     10E7  0876               	movf	__tdiv_to_l_@f2+2,w
  6692     10E8  00FA               	movwf	??__tdiv_to_l_+2
  6693     10E9  1003               	clrc
  6694     10EA  0D79               	rlf	??__tdiv_to_l_+1,w
  6695     10EB  0D7A               	rlf	??__tdiv_to_l_+2,w
  6696     10EC  00A4               	movwf	__tdiv_to_l_@cntr
  6697     10ED  0824               	movf	__tdiv_to_l_@cntr,w
  6698     10EE  1903               	btfsc	3,2
  6699     10EF  28DA               	goto	l3145
  6700     10F0  17F1               	bsf	__tdiv_to_l_@f1+1,7
  6701     10F1  30FF               	movlw	255
  6702     10F2  05F0               	andwf	__tdiv_to_l_@f1,f
  6703     10F3  30FF               	movlw	255
  6704     10F4  05F1               	andwf	__tdiv_to_l_@f1+1,f
  6705     10F5  3000               	movlw	0
  6706     10F6  05F2               	andwf	__tdiv_to_l_@f1+2,f
  6707     10F7  17F5               	bsf	__tdiv_to_l_@f2+1,7
  6708     10F8  30FF               	movlw	255
  6709     10F9  05F4               	andwf	__tdiv_to_l_@f2,f
  6710     10FA  30FF               	movlw	255
  6711     10FB  05F5               	andwf	__tdiv_to_l_@f2+1,f
  6712     10FC  3000               	movlw	0
  6713     10FD  05F6               	andwf	__tdiv_to_l_@f2+2,f
  6714     10FE  3000               	movlw	0
  6715     10FF  00A3               	movwf	__tdiv_to_l_@quot+3
  6716     1100  3000               	movlw	0
  6717     1101  00A2               	movwf	__tdiv_to_l_@quot+2
  6718     1102  3000               	movlw	0
  6719     1103  00A1               	movwf	__tdiv_to_l_@quot+1
  6720     1104  3000               	movlw	0
  6721     1105  00A0               	movwf	__tdiv_to_l_@quot
  6722     1106  307F               	movlw	127
  6723     1107  02A5               	subwf	__tdiv_to_l_@exp1,f
  6724     1108  3098               	movlw	152
  6725     1109  0724               	addwf	__tdiv_to_l_@cntr,w
  6726     110A  00F8               	movwf	??__tdiv_to_l_
  6727     110B  0878               	movf	??__tdiv_to_l_,w
  6728     110C  02A5               	subwf	__tdiv_to_l_@exp1,f
  6729     110D  3018               	movlw	24
  6730     110E  00A4               	movwf	__tdiv_to_l_@cntr
  6731     110F                     l3163:
  6732     110F  3001               	movlw	1
  6733     1110  00F8               	movwf	??__tdiv_to_l_
  6734     1111                     u4865:
  6735     1111  1003               	clrc
  6736     1112  0DA0               	rlf	__tdiv_to_l_@quot,f
  6737     1113  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  6738     1114  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  6739     1115  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  6740     1116  0BF8               	decfsz	??__tdiv_to_l_,f
  6741     1117  2911               	goto	u4865
  6742     1118  0876               	movf	__tdiv_to_l_@f2+2,w
  6743     1119  0272               	subwf	__tdiv_to_l_@f1+2,w
  6744     111A  1D03               	skipz
  6745     111B  2922               	goto	u4875
  6746     111C  0875               	movf	__tdiv_to_l_@f2+1,w
  6747     111D  0271               	subwf	__tdiv_to_l_@f1+1,w
  6748     111E  1D03               	skipz
  6749     111F  2922               	goto	u4875
  6750     1120  0874               	movf	__tdiv_to_l_@f2,w
  6751     1121  0270               	subwf	__tdiv_to_l_@f1,w
  6752     1122                     u4875:
  6753     1122  1C03               	skipc
  6754     1123  292F               	goto	l3171
  6755     1124  0874               	movf	__tdiv_to_l_@f2,w
  6756     1125  02F0               	subwf	__tdiv_to_l_@f1,f
  6757     1126  0875               	movf	__tdiv_to_l_@f2+1,w
  6758     1127  1C03               	skipc
  6759     1128  0F75               	incfsz	__tdiv_to_l_@f2+1,w
  6760     1129  02F1               	subwf	__tdiv_to_l_@f1+1,f
  6761     112A  0876               	movf	__tdiv_to_l_@f2+2,w
  6762     112B  1C03               	skipc
  6763     112C  0A76               	incf	__tdiv_to_l_@f2+2,w
  6764     112D  02F2               	subwf	__tdiv_to_l_@f1+2,f
  6765     112E  1420               	bsf	__tdiv_to_l_@quot,0
  6766     112F                     l3171:
  6767     112F  3001               	movlw	1
  6768     1130                     u4885:
  6769     1130  1003               	clrc
  6770     1131  0DF0               	rlf	__tdiv_to_l_@f1,f
  6771     1132  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  6772     1133  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  6773     1134  3EFF               	addlw	-1
  6774     1135  1D03               	skipz
  6775     1136  2930               	goto	u4885
  6776     1137  3001               	movlw	1
  6777     1138  02A4               	subwf	__tdiv_to_l_@cntr,f
  6778     1139  1D03               	btfss	3,2
  6779     113A  290F               	goto	l3163
  6780     113B  1FA5               	btfss	__tdiv_to_l_@exp1,7
  6781     113C  2952               	goto	l3185
  6782     113D  0825               	movf	__tdiv_to_l_@exp1,w
  6783     113E  3A80               	xorlw	128
  6784     113F  3E97               	addlw	151
  6785     1140  1C03               	btfss	3,0
  6786     1141  28DA               	goto	l3145
  6787     1142                     l3181:
  6788     1142  3001               	movlw	1
  6789     1143                     u4925:
  6790     1143  1003               	clrc
  6791     1144  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  6792     1145  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  6793     1146  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  6794     1147  0CA0               	rrf	__tdiv_to_l_@quot,f
  6795     1148  3EFF               	addlw	-1
  6796     1149  1D03               	skipz
  6797     114A  2943               	goto	u4925
  6798     114B  3001               	movlw	1
  6799     114C  00FF               	movwf	127
  6800     114D  087F               	movf	127,w
  6801     114E  07A5               	addwf	__tdiv_to_l_@exp1,f
  6802     114F  1903               	btfsc	3,2
  6803     1150  2965               	goto	l3193
  6804     1151  2942               	goto	l3181
  6805     1152                     l3185:
  6806     1152  3018               	movlw	24
  6807     1153  0225               	subwf	__tdiv_to_l_@exp1,w
  6808     1154  1803               	btfsc	3,0
  6809     1155  28DA               	goto	l3145
  6810     1156                     l606:
  6811     1156  0825               	movf	__tdiv_to_l_@exp1,w
  6812     1157  1903               	btfsc	3,2
  6813     1158  2965               	goto	l3193
  6814     1159  3001               	movlw	1
  6815     115A  00F8               	movwf	??__tdiv_to_l_
  6816     115B                     u4955:
  6817     115B  1003               	clrc
  6818     115C  0DA0               	rlf	__tdiv_to_l_@quot,f
  6819     115D  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  6820     115E  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  6821     115F  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  6822     1160  0BF8               	decfsz	??__tdiv_to_l_,f
  6823     1161  295B               	goto	u4955
  6824     1162  3001               	movlw	1
  6825     1163  02A5               	subwf	__tdiv_to_l_@exp1,f
  6826     1164  2956               	goto	l606
  6827     1165                     l3193:
  6828     1165  0823               	movf	__tdiv_to_l_@quot+3,w
  6829     1166  00F3               	movwf	?__tdiv_to_l_+3
  6830     1167  0822               	movf	__tdiv_to_l_@quot+2,w
  6831     1168  00F2               	movwf	?__tdiv_to_l_+2
  6832     1169  0821               	movf	__tdiv_to_l_@quot+1,w
  6833     116A  00F1               	movwf	?__tdiv_to_l_+1
  6834     116B  0820               	movf	__tdiv_to_l_@quot,w
  6835     116C  00F0               	movwf	?__tdiv_to_l_
  6836     116D  0008               	return
  6837     116E                     __end_of__tdiv_to_l_:
  6838                           
  6839                           	psect	text12
  6840     1028                     __ptext12:	
  6841 ;; *************** function __div_to_l_ *****************
  6842 ;; Defined at:
  6843 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\fldivl.c"
  6844 ;; Parameters:    Size  Location     Type
  6845 ;;  f1              4    0[COMMON] unsigned long 
  6846 ;;  f2              4    4[COMMON] unsigned long 
  6847 ;; Auto vars:     Size  Location     Type
  6848 ;;  quot            4    0[BANK0 ] unsigned long 
  6849 ;;  exp1            1    5[BANK0 ] unsigned char 
  6850 ;;  cntr            1    4[BANK0 ] unsigned char 
  6851 ;; Return value:  Size  Location     Type
  6852 ;;                  4    0[COMMON] unsigned long 
  6853 ;; Registers used:
  6854 ;;		wreg, status,2, status,0, btemp+1
  6855 ;; Tracked objects:
  6856 ;;		On entry : 300/100
  6857 ;;		On exit  : 300/0
  6858 ;;		Unchanged: 0/0
  6859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6860 ;;      Params:         8       0       0       0       0
  6861 ;;      Locals:         0       6       0       0       0
  6862 ;;      Temps:          1       0       0       0       0
  6863 ;;      Totals:         9       6       0       0       0
  6864 ;;Total ram usage:       15 bytes
  6865 ;; Hardware stack levels used: 1
  6866 ;; This function calls:
  6867 ;;		Nothing
  6868 ;; This function is called by:
  6869 ;;		_sprintf
  6870 ;; This function uses a non-reentrant model
  6871 ;;
  6872                           
  6873     1028                     __div_to_l_:	
  6874                           ;psect for function __div_to_l_
  6875                           
  6876                           
  6877                           ;incstack = 0
  6878                           ; Regs used in __div_to_l_: [wreg+status,2+status,0+btemp+1]
  6879     1028  1003               	clrc
  6880     1029  0D72               	rlf	__div_to_l_@f1+2,w
  6881     102A  0D73               	rlf	__div_to_l_@f1+3,w
  6882     102B  1283               	bcf	3,5	;RP0=0, select bank0
  6883     102C  00A5               	movwf	__div_to_l_@exp1
  6884     102D  0825               	movf	__div_to_l_@exp1,w
  6885     102E  1D03               	btfss	3,2
  6886     102F  2839               	goto	l3203
  6887     1030                     l3199:
  6888     1030  3000               	movlw	0
  6889     1031  00F3               	movwf	?__div_to_l_+3
  6890     1032  3000               	movlw	0
  6891     1033  00F2               	movwf	?__div_to_l_+2
  6892     1034  3000               	movlw	0
  6893     1035  00F1               	movwf	?__div_to_l_+1
  6894     1036  3000               	movlw	0
  6895     1037  00F0               	movwf	?__div_to_l_
  6896     1038  0008               	return
  6897     1039                     l3203:
  6898     1039  1003               	clrc
  6899     103A  0D76               	rlf	__div_to_l_@f2+2,w
  6900     103B  0D77               	rlf	__div_to_l_@f2+3,w
  6901     103C  00A4               	movwf	__div_to_l_@cntr
  6902     103D  0824               	movf	__div_to_l_@cntr,w
  6903     103E  1903               	btfsc	3,2
  6904     103F  2830               	goto	l3199
  6905     1040  17F2               	bsf	__div_to_l_@f1+2,7
  6906     1041  30FF               	movlw	255
  6907     1042  05F0               	andwf	__div_to_l_@f1,f
  6908     1043  30FF               	movlw	255
  6909     1044  05F1               	andwf	__div_to_l_@f1+1,f
  6910     1045  30FF               	movlw	255
  6911     1046  05F2               	andwf	__div_to_l_@f1+2,f
  6912     1047  3000               	movlw	0
  6913     1048  05F3               	andwf	__div_to_l_@f1+3,f
  6914     1049  17F6               	bsf	__div_to_l_@f2+2,7
  6915     104A  30FF               	movlw	255
  6916     104B  05F4               	andwf	__div_to_l_@f2,f
  6917     104C  30FF               	movlw	255
  6918     104D  05F5               	andwf	__div_to_l_@f2+1,f
  6919     104E  30FF               	movlw	255
  6920     104F  05F6               	andwf	__div_to_l_@f2+2,f
  6921     1050  3000               	movlw	0
  6922     1051  05F7               	andwf	__div_to_l_@f2+3,f
  6923     1052  3000               	movlw	0
  6924     1053  00A3               	movwf	__div_to_l_@quot+3
  6925     1054  3000               	movlw	0
  6926     1055  00A2               	movwf	__div_to_l_@quot+2
  6927     1056  3000               	movlw	0
  6928     1057  00A1               	movwf	__div_to_l_@quot+1
  6929     1058  3000               	movlw	0
  6930     1059  00A0               	movwf	__div_to_l_@quot
  6931     105A  307F               	movlw	127
  6932     105B  02A5               	subwf	__div_to_l_@exp1,f
  6933     105C  30A0               	movlw	160
  6934     105D  0724               	addwf	__div_to_l_@cntr,w
  6935     105E  00F8               	movwf	??__div_to_l_
  6936     105F  0878               	movf	??__div_to_l_,w
  6937     1060  02A5               	subwf	__div_to_l_@exp1,f
  6938     1061  3020               	movlw	32
  6939     1062  00A4               	movwf	__div_to_l_@cntr
  6940     1063                     l3217:
  6941     1063  3001               	movlw	1
  6942     1064  00F8               	movwf	??__div_to_l_
  6943     1065                     u4995:
  6944     1065  1003               	clrc
  6945     1066  0DA0               	rlf	__div_to_l_@quot,f
  6946     1067  0DA1               	rlf	__div_to_l_@quot+1,f
  6947     1068  0DA2               	rlf	__div_to_l_@quot+2,f
  6948     1069  0DA3               	rlf	__div_to_l_@quot+3,f
  6949     106A  0BF8               	decfsz	??__div_to_l_,f
  6950     106B  2865               	goto	u4995
  6951     106C  0877               	movf	__div_to_l_@f2+3,w
  6952     106D  0273               	subwf	__div_to_l_@f1+3,w
  6953     106E  1D03               	skipz
  6954     106F  287A               	goto	u5005
  6955     1070  0876               	movf	__div_to_l_@f2+2,w
  6956     1071  0272               	subwf	__div_to_l_@f1+2,w
  6957     1072  1D03               	skipz
  6958     1073  287A               	goto	u5005
  6959     1074  0875               	movf	__div_to_l_@f2+1,w
  6960     1075  0271               	subwf	__div_to_l_@f1+1,w
  6961     1076  1D03               	skipz
  6962     1077  287A               	goto	u5005
  6963     1078  0874               	movf	__div_to_l_@f2,w
  6964     1079  0270               	subwf	__div_to_l_@f1,w
  6965     107A                     u5005:
  6966     107A  1C03               	skipc
  6967     107B  288B               	goto	l3225
  6968     107C  0874               	movf	__div_to_l_@f2,w
  6969     107D  02F0               	subwf	__div_to_l_@f1,f
  6970     107E  0875               	movf	__div_to_l_@f2+1,w
  6971     107F  1C03               	skipc
  6972     1080  0F75               	incfsz	__div_to_l_@f2+1,w
  6973     1081  02F1               	subwf	__div_to_l_@f1+1,f
  6974     1082  0876               	movf	__div_to_l_@f2+2,w
  6975     1083  1C03               	skipc
  6976     1084  0F76               	incfsz	__div_to_l_@f2+2,w
  6977     1085  02F2               	subwf	__div_to_l_@f1+2,f
  6978     1086  0877               	movf	__div_to_l_@f2+3,w
  6979     1087  1C03               	skipc
  6980     1088  0F77               	incfsz	__div_to_l_@f2+3,w
  6981     1089  02F3               	subwf	__div_to_l_@f1+3,f
  6982     108A  1420               	bsf	__div_to_l_@quot,0
  6983     108B                     l3225:
  6984     108B  3001               	movlw	1
  6985     108C  00F8               	movwf	??__div_to_l_
  6986     108D                     u5015:
  6987     108D  1003               	clrc
  6988     108E  0DF0               	rlf	__div_to_l_@f1,f
  6989     108F  0DF1               	rlf	__div_to_l_@f1+1,f
  6990     1090  0DF2               	rlf	__div_to_l_@f1+2,f
  6991     1091  0DF3               	rlf	__div_to_l_@f1+3,f
  6992     1092  0BF8               	decfsz	??__div_to_l_,f
  6993     1093  288D               	goto	u5015
  6994     1094  3001               	movlw	1
  6995     1095  02A4               	subwf	__div_to_l_@cntr,f
  6996     1096  1D03               	btfss	3,2
  6997     1097  2863               	goto	l3217
  6998     1098  1FA5               	btfss	__div_to_l_@exp1,7
  6999     1099  28AF               	goto	l3239
  7000     109A  0825               	movf	__div_to_l_@exp1,w
  7001     109B  3A80               	xorlw	128
  7002     109C  3E9F               	addlw	159
  7003     109D  1C03               	btfss	3,0
  7004     109E  2830               	goto	l3199
  7005     109F                     l3235:
  7006     109F  3001               	movlw	1
  7007     10A0                     u5055:
  7008     10A0  1003               	clrc
  7009     10A1  0CA3               	rrf	__div_to_l_@quot+3,f
  7010     10A2  0CA2               	rrf	__div_to_l_@quot+2,f
  7011     10A3  0CA1               	rrf	__div_to_l_@quot+1,f
  7012     10A4  0CA0               	rrf	__div_to_l_@quot,f
  7013     10A5  3EFF               	addlw	-1
  7014     10A6  1D03               	skipz
  7015     10A7  28A0               	goto	u5055
  7016     10A8  3001               	movlw	1
  7017     10A9  00FF               	movwf	127
  7018     10AA  087F               	movf	127,w
  7019     10AB  07A5               	addwf	__div_to_l_@exp1,f
  7020     10AC  1903               	btfsc	3,2
  7021     10AD  28C2               	goto	l3247
  7022     10AE  289F               	goto	l3235
  7023     10AF                     l3239:
  7024     10AF  3020               	movlw	32
  7025     10B0  0225               	subwf	__div_to_l_@exp1,w
  7026     10B1  1803               	btfsc	3,0
  7027     10B2  2830               	goto	l3199
  7028     10B3                     l559:
  7029     10B3  0825               	movf	__div_to_l_@exp1,w
  7030     10B4  1903               	btfsc	3,2
  7031     10B5  28C2               	goto	l3247
  7032     10B6  3001               	movlw	1
  7033     10B7  00F8               	movwf	??__div_to_l_
  7034     10B8                     u5085:
  7035     10B8  1003               	clrc
  7036     10B9  0DA0               	rlf	__div_to_l_@quot,f
  7037     10BA  0DA1               	rlf	__div_to_l_@quot+1,f
  7038     10BB  0DA2               	rlf	__div_to_l_@quot+2,f
  7039     10BC  0DA3               	rlf	__div_to_l_@quot+3,f
  7040     10BD  0BF8               	decfsz	??__div_to_l_,f
  7041     10BE  28B8               	goto	u5085
  7042     10BF  3001               	movlw	1
  7043     10C0  02A5               	subwf	__div_to_l_@exp1,f
  7044     10C1  28B3               	goto	l559
  7045     10C2                     l3247:
  7046     10C2  0823               	movf	__div_to_l_@quot+3,w
  7047     10C3  00F3               	movwf	?__div_to_l_+3
  7048     10C4  0822               	movf	__div_to_l_@quot+2,w
  7049     10C5  00F2               	movwf	?__div_to_l_+2
  7050     10C6  0821               	movf	__div_to_l_@quot+1,w
  7051     10C7  00F1               	movwf	?__div_to_l_+1
  7052     10C8  0820               	movf	__div_to_l_@quot,w
  7053     10C9  00F0               	movwf	?__div_to_l_
  7054     10CA  0008               	return
  7055     10CB                     __end_of__div_to_l_:
  7056                           
  7057                           	psect	text13
  7058     1F5F                     __ptext13:	
  7059 ;; *************** function ___xxtofl *****************
  7060 ;; Defined at:
  7061 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\xxtofl.c"
  7062 ;; Parameters:    Size  Location     Type
  7063 ;;  sign            1    wreg     unsigned char 
  7064 ;;  val             4    0[COMMON] long 
  7065 ;; Auto vars:     Size  Location     Type
  7066 ;;  sign            1    8[COMMON] unsigned char 
  7067 ;;  arg             4   10[COMMON] unsigned long 
  7068 ;;  exp             1    9[COMMON] unsigned char 
  7069 ;; Return value:  Size  Location     Type
  7070 ;;                  4    0[COMMON] unsigned char 
  7071 ;; Registers used:
  7072 ;;		wreg, status,2, status,0, btemp+1
  7073 ;; Tracked objects:
  7074 ;;		On entry : 100/300
  7075 ;;		On exit  : 100/100
  7076 ;;		Unchanged: 100/0
  7077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7078 ;;      Params:         4       0       0       0       0
  7079 ;;      Locals:         6       0       0       0       0
  7080 ;;      Temps:          4       0       0       0       0
  7081 ;;      Totals:        14       0       0       0       0
  7082 ;;Total ram usage:       14 bytes
  7083 ;; Hardware stack levels used: 1
  7084 ;; This function calls:
  7085 ;;		Nothing
  7086 ;; This function is called by:
  7087 ;;		_main
  7088 ;;		_sprintf
  7089 ;; This function uses a non-reentrant model
  7090 ;;
  7091                           
  7092     1F5F                     ___xxtofl:	
  7093                           ;psect for function ___xxtofl
  7094                           
  7095                           
  7096                           ;incstack = 0
  7097                           ; Regs used in ___xxtofl: [wreg+status,2+status,0+btemp+1]
  7098                           ;___xxtofl@sign stored from wreg
  7099     1F5F  00F8               	movwf	___xxtofl@sign
  7100     1F60  0878               	movf	___xxtofl@sign,w
  7101     1F61  1D03               	btfss	3,2
  7102     1F62  1FF3               	btfss	___xxtofl@val+3,7
  7103     1F63  2F74               	goto	l3403
  7104     1F64  0970               	comf	___xxtofl@val,w
  7105     1F65  00FA               	movwf	___xxtofl@arg
  7106     1F66  0971               	comf	___xxtofl@val+1,w
  7107     1F67  00FB               	movwf	___xxtofl@arg+1
  7108     1F68  0972               	comf	___xxtofl@val+2,w
  7109     1F69  00FC               	movwf	___xxtofl@arg+2
  7110     1F6A  0973               	comf	___xxtofl@val+3,w
  7111     1F6B  00FD               	movwf	___xxtofl@arg+3
  7112     1F6C  0AFA               	incf	___xxtofl@arg,f
  7113     1F6D  1903               	skipnz
  7114     1F6E  0AFB               	incf	___xxtofl@arg+1,f
  7115     1F6F  1903               	skipnz
  7116     1F70  0AFC               	incf	___xxtofl@arg+2,f
  7117     1F71  1903               	skipnz
  7118     1F72  0AFD               	incf	___xxtofl@arg+3,f
  7119     1F73  2F7C               	goto	l845
  7120     1F74                     l3403:
  7121     1F74  0873               	movf	___xxtofl@val+3,w
  7122     1F75  00FD               	movwf	___xxtofl@arg+3
  7123     1F76  0872               	movf	___xxtofl@val+2,w
  7124     1F77  00FC               	movwf	___xxtofl@arg+2
  7125     1F78  0871               	movf	___xxtofl@val+1,w
  7126     1F79  00FB               	movwf	___xxtofl@arg+1
  7127     1F7A  0870               	movf	___xxtofl@val,w
  7128     1F7B  00FA               	movwf	___xxtofl@arg
  7129     1F7C                     l845:
  7130     1F7C  0873               	movf	___xxtofl@val+3,w
  7131     1F7D  0472               	iorwf	___xxtofl@val+2,w
  7132     1F7E  0471               	iorwf	___xxtofl@val+1,w
  7133     1F7F  0470               	iorwf	___xxtofl@val,w
  7134     1F80  1D03               	skipz
  7135     1F81  2F8B               	goto	l3409
  7136     1F82  3000               	movlw	0
  7137     1F83  00F3               	movwf	?___xxtofl+3
  7138     1F84  3000               	movlw	0
  7139     1F85  00F2               	movwf	?___xxtofl+2
  7140     1F86  3000               	movlw	0
  7141     1F87  00F1               	movwf	?___xxtofl+1
  7142     1F88  3000               	movlw	0
  7143     1F89  00F0               	movwf	?___xxtofl
  7144     1F8A  0008               	return
  7145     1F8B                     l3409:
  7146     1F8B  3096               	movlw	150
  7147     1F8C  00F9               	movwf	___xxtofl@exp
  7148     1F8D                     l3415:
  7149     1F8D  30FE               	movlw	254
  7150     1F8E  057D               	andwf	___xxtofl@arg+3,w
  7151     1F8F  1903               	btfsc	3,2
  7152     1F90  2FBA               	goto	l3423
  7153     1F91  3001               	movlw	1
  7154     1F92  00FF               	movwf	127
  7155     1F93  087F               	movf	127,w
  7156     1F94  07F9               	addwf	___xxtofl@exp,f
  7157     1F95  3001               	movlw	1
  7158     1F96                     u5515:
  7159     1F96  1003               	clrc
  7160     1F97  0CFD               	rrf	___xxtofl@arg+3,f
  7161     1F98  0CFC               	rrf	___xxtofl@arg+2,f
  7162     1F99  0CFB               	rrf	___xxtofl@arg+1,f
  7163     1F9A  0CFA               	rrf	___xxtofl@arg,f
  7164     1F9B  3EFF               	addlw	-1
  7165     1F9C  1D03               	skipz
  7166     1F9D  2F96               	goto	u5515
  7167     1F9E  2F8D               	goto	l3415
  7168     1F9F                     l3417:
  7169     1F9F  3001               	movlw	1
  7170     1FA0  00FF               	movwf	127
  7171     1FA1  087F               	movf	127,w
  7172     1FA2  07F9               	addwf	___xxtofl@exp,f
  7173     1FA3  3001               	movlw	1
  7174     1FA4  07FA               	addwf	___xxtofl@arg,f
  7175     1FA5  3000               	movlw	0
  7176     1FA6  1803               	skipnc
  7177     1FA7  3001               	movlw	1
  7178     1FA8  07FB               	addwf	___xxtofl@arg+1,f
  7179     1FA9  3000               	movlw	0
  7180     1FAA  1803               	skipnc
  7181     1FAB  3001               	movlw	1
  7182     1FAC  07FC               	addwf	___xxtofl@arg+2,f
  7183     1FAD  3000               	movlw	0
  7184     1FAE  1803               	skipnc
  7185     1FAF  3001               	movlw	1
  7186     1FB0  07FD               	addwf	___xxtofl@arg+3,f
  7187     1FB1  3001               	movlw	1
  7188     1FB2                     u5535:
  7189     1FB2  1003               	clrc
  7190     1FB3  0CFD               	rrf	___xxtofl@arg+3,f
  7191     1FB4  0CFC               	rrf	___xxtofl@arg+2,f
  7192     1FB5  0CFB               	rrf	___xxtofl@arg+1,f
  7193     1FB6  0CFA               	rrf	___xxtofl@arg,f
  7194     1FB7  3EFF               	addlw	-1
  7195     1FB8  1D03               	skipz
  7196     1FB9  2FB2               	goto	u5535
  7197     1FBA                     l3423:
  7198     1FBA  30FF               	movlw	255
  7199     1FBB  057D               	andwf	___xxtofl@arg+3,w
  7200     1FBC  1903               	btfsc	3,2
  7201     1FBD  2FCE               	goto	l3427
  7202     1FBE  2F9F               	goto	l3417
  7203     1FBF                     l3429:
  7204     1FBF  3002               	movlw	2
  7205     1FC0  0279               	subwf	___xxtofl@exp,w
  7206     1FC1  1C03               	btfss	3,0
  7207     1FC2  2FD0               	goto	l858
  7208     1FC3  3001               	movlw	1
  7209     1FC4  02F9               	subwf	___xxtofl@exp,f
  7210     1FC5  3001               	movlw	1
  7211     1FC6  00F4               	movwf	??___xxtofl
  7212     1FC7                     u5555:
  7213     1FC7  1003               	clrc
  7214     1FC8  0DFA               	rlf	___xxtofl@arg,f
  7215     1FC9  0DFB               	rlf	___xxtofl@arg+1,f
  7216     1FCA  0DFC               	rlf	___xxtofl@arg+2,f
  7217     1FCB  0DFD               	rlf	___xxtofl@arg+3,f
  7218     1FCC  0BF4               	decfsz	??___xxtofl,f
  7219     1FCD  2FC7               	goto	u5555
  7220     1FCE                     l3427:
  7221     1FCE  1FFC               	btfss	___xxtofl@arg+2,7
  7222     1FCF  2FBF               	goto	l3429
  7223     1FD0                     l858:
  7224     1FD0  1879               	btfsc	___xxtofl@exp,0
  7225     1FD1  2FDA               	goto	l859
  7226     1FD2  30FF               	movlw	255
  7227     1FD3  05FA               	andwf	___xxtofl@arg,f
  7228     1FD4  30FF               	movlw	255
  7229     1FD5  05FB               	andwf	___xxtofl@arg+1,f
  7230     1FD6  307F               	movlw	127
  7231     1FD7  05FC               	andwf	___xxtofl@arg+2,f
  7232     1FD8  30FF               	movlw	255
  7233     1FD9  05FD               	andwf	___xxtofl@arg+3,f
  7234     1FDA                     l859:
  7235     1FDA  1003               	clrc
  7236     1FDB  0CF9               	rrf	___xxtofl@exp,f
  7237     1FDC  0879               	movf	___xxtofl@exp,w
  7238     1FDD  00F4               	movwf	??___xxtofl
  7239     1FDE  01F5               	clrf	??___xxtofl+1
  7240     1FDF  01F6               	clrf	??___xxtofl+2
  7241     1FE0  01F7               	clrf	??___xxtofl+3
  7242     1FE1  3018               	movlw	24
  7243     1FE2                     u5595:
  7244     1FE2  1003               	clrc
  7245     1FE3  0DF4               	rlf	??___xxtofl,f
  7246     1FE4  0DF5               	rlf	??___xxtofl+1,f
  7247     1FE5  0DF6               	rlf	??___xxtofl+2,f
  7248     1FE6  0DF7               	rlf	??___xxtofl+3,f
  7249     1FE7  3EFF               	addlw	-1
  7250     1FE8  1D03               	skipz
  7251     1FE9  2FE2               	goto	u5595
  7252     1FEA  0874               	movf	??___xxtofl,w
  7253     1FEB  04FA               	iorwf	___xxtofl@arg,f
  7254     1FEC  0875               	movf	??___xxtofl+1,w
  7255     1FED  04FB               	iorwf	___xxtofl@arg+1,f
  7256     1FEE  0876               	movf	??___xxtofl+2,w
  7257     1FEF  04FC               	iorwf	___xxtofl@arg+2,f
  7258     1FF0  0877               	movf	??___xxtofl+3,w
  7259     1FF1  04FD               	iorwf	___xxtofl@arg+3,f
  7260     1FF2  0878               	movf	___xxtofl@sign,w
  7261     1FF3  1D03               	btfss	3,2
  7262     1FF4  1FF3               	btfss	___xxtofl@val+3,7
  7263     1FF5  2FF7               	goto	l3441
  7264     1FF6  17FD               	bsf	___xxtofl@arg+3,7
  7265     1FF7                     l3441:
  7266     1FF7  087D               	movf	___xxtofl@arg+3,w
  7267     1FF8  00F3               	movwf	?___xxtofl+3
  7268     1FF9  087C               	movf	___xxtofl@arg+2,w
  7269     1FFA  00F2               	movwf	?___xxtofl+2
  7270     1FFB  087B               	movf	___xxtofl@arg+1,w
  7271     1FFC  00F1               	movwf	?___xxtofl+1
  7272     1FFD  087A               	movf	___xxtofl@arg,w
  7273     1FFE  00F0               	movwf	?___xxtofl
  7274     1FFF  0008               	return
  7275     2000                     __end_of___xxtofl:
  7276                           
  7277                           	psect	text14
  7278     1BC9                     __ptext14:	
  7279 ;; *************** function ___wmul *****************
  7280 ;; Defined at:
  7281 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul16.c"
  7282 ;; Parameters:    Size  Location     Type
  7283 ;;  multiplier      2    0[COMMON] unsigned int 
  7284 ;;  multiplicand    2    2[COMMON] unsigned int 
  7285 ;; Auto vars:     Size  Location     Type
  7286 ;;  product         2    4[COMMON] unsigned int 
  7287 ;; Return value:  Size  Location     Type
  7288 ;;                  2    0[COMMON] unsigned int 
  7289 ;; Registers used:
  7290 ;;		wreg, status,2, status,0
  7291 ;; Tracked objects:
  7292 ;;		On entry : 300/100
  7293 ;;		On exit  : 300/100
  7294 ;;		Unchanged: 300/0
  7295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7296 ;;      Params:         4       0       0       0       0
  7297 ;;      Locals:         2       0       0       0       0
  7298 ;;      Temps:          0       0       0       0       0
  7299 ;;      Totals:         6       0       0       0       0
  7300 ;;Total ram usage:        6 bytes
  7301 ;; Hardware stack levels used: 1
  7302 ;; This function calls:
  7303 ;;		Nothing
  7304 ;; This function is called by:
  7305 ;;		_sprintf
  7306 ;; This function uses a non-reentrant model
  7307 ;;
  7308                           
  7309     1BC9                     ___wmul:	
  7310                           ;psect for function ___wmul
  7311                           
  7312                           
  7313                           ;incstack = 0
  7314                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7315     1BC9  01F4               	clrf	___wmul@product
  7316     1BCA  01F5               	clrf	___wmul@product+1
  7317     1BCB                     l3253:
  7318     1BCB  1C70               	btfss	___wmul@multiplier,0
  7319     1BCC  2BD3               	goto	l378
  7320     1BCD  0872               	movf	___wmul@multiplicand,w
  7321     1BCE  07F4               	addwf	___wmul@product,f
  7322     1BCF  1803               	skipnc
  7323     1BD0  0AF5               	incf	___wmul@product+1,f
  7324     1BD1  0873               	movf	___wmul@multiplicand+1,w
  7325     1BD2  07F5               	addwf	___wmul@product+1,f
  7326     1BD3                     l378:
  7327     1BD3  3001               	movlw	1
  7328     1BD4                     u5115:
  7329     1BD4  1003               	clrc
  7330     1BD5  0DF2               	rlf	___wmul@multiplicand,f
  7331     1BD6  0DF3               	rlf	___wmul@multiplicand+1,f
  7332     1BD7  3EFF               	addlw	-1
  7333     1BD8  1D03               	skipz
  7334     1BD9  2BD4               	goto	u5115
  7335     1BDA  3001               	movlw	1
  7336     1BDB                     u5125:
  7337     1BDB  1003               	clrc
  7338     1BDC  0CF1               	rrf	___wmul@multiplier+1,f
  7339     1BDD  0CF0               	rrf	___wmul@multiplier,f
  7340     1BDE  3EFF               	addlw	-1
  7341     1BDF  1D03               	skipz
  7342     1BE0  2BDB               	goto	u5125
  7343     1BE1  0870               	movf	___wmul@multiplier,w
  7344     1BE2  0471               	iorwf	___wmul@multiplier+1,w
  7345     1BE3  1D03               	btfss	3,2
  7346     1BE4  2BCB               	goto	l3253
  7347     1BE5  0875               	movf	___wmul@product+1,w
  7348     1BE6  00F1               	movwf	?___wmul+1
  7349     1BE7  0874               	movf	___wmul@product,w
  7350     1BE8  00F0               	movwf	?___wmul
  7351     1BE9  0008               	return
  7352     1BEA                     __end_of___wmul:
  7353                           
  7354                           	psect	text15
  7355     1D62                     __ptext15:	
  7356 ;; *************** function ___llmod *****************
  7357 ;; Defined at:
  7358 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\llmod.c"
  7359 ;; Parameters:    Size  Location     Type
  7360 ;;  divisor         4    0[BANK0 ] unsigned long 
  7361 ;;  dividend        4    4[BANK0 ] unsigned long 
  7362 ;; Auto vars:     Size  Location     Type
  7363 ;;  counter         1    9[BANK0 ] unsigned char 
  7364 ;; Return value:  Size  Location     Type
  7365 ;;                  4    0[BANK0 ] unsigned long 
  7366 ;; Registers used:
  7367 ;;		wreg, status,2, status,0, btemp+1
  7368 ;; Tracked objects:
  7369 ;;		On entry : 300/0
  7370 ;;		On exit  : 300/0
  7371 ;;		Unchanged: 0/0
  7372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7373 ;;      Params:         0       8       0       0       0
  7374 ;;      Locals:         0       1       0       0       0
  7375 ;;      Temps:          0       1       0       0       0
  7376 ;;      Totals:         0      10       0       0       0
  7377 ;;Total ram usage:       10 bytes
  7378 ;; Hardware stack levels used: 1
  7379 ;; This function calls:
  7380 ;;		Nothing
  7381 ;; This function is called by:
  7382 ;;		_sprintf
  7383 ;; This function uses a non-reentrant model
  7384 ;;
  7385                           
  7386     1D62                     ___llmod:	
  7387                           ;psect for function ___llmod
  7388                           
  7389                           
  7390                           ;incstack = 0
  7391                           ; Regs used in ___llmod: [wreg+status,2+status,0+btemp+1]
  7392     1D62  0823               	movf	___llmod@divisor+3,w
  7393     1D63  0422               	iorwf	___llmod@divisor+2,w
  7394     1D64  0421               	iorwf	___llmod@divisor+1,w
  7395     1D65  0420               	iorwf	___llmod@divisor,w
  7396     1D66  1903               	skipnz
  7397     1D67  2DA5               	goto	l3387
  7398     1D68  01A9               	clrf	___llmod@counter
  7399     1D69  0AA9               	incf	___llmod@counter,f
  7400     1D6A                     l3377:
  7401     1D6A  1BA3               	btfsc	___llmod@divisor+3,7
  7402     1D6B  2D7A               	goto	l3379
  7403     1D6C  3001               	movlw	1
  7404     1D6D  00A8               	movwf	??___llmod
  7405     1D6E                     u5435:
  7406     1D6E  1003               	clrc
  7407     1D6F  0DA0               	rlf	___llmod@divisor,f
  7408     1D70  0DA1               	rlf	___llmod@divisor+1,f
  7409     1D71  0DA2               	rlf	___llmod@divisor+2,f
  7410     1D72  0DA3               	rlf	___llmod@divisor+3,f
  7411     1D73  0BA8               	decfsz	??___llmod,f
  7412     1D74  2D6E               	goto	u5435
  7413     1D75  3001               	movlw	1
  7414     1D76  00FF               	movwf	127
  7415     1D77  087F               	movf	127,w
  7416     1D78  07A9               	addwf	___llmod@counter,f
  7417     1D79  2D6A               	goto	l3377
  7418     1D7A                     l3379:
  7419     1D7A  0823               	movf	___llmod@divisor+3,w
  7420     1D7B  0227               	subwf	___llmod@dividend+3,w
  7421     1D7C  1D03               	skipz
  7422     1D7D  2D88               	goto	u5455
  7423     1D7E  0822               	movf	___llmod@divisor+2,w
  7424     1D7F  0226               	subwf	___llmod@dividend+2,w
  7425     1D80  1D03               	skipz
  7426     1D81  2D88               	goto	u5455
  7427     1D82  0821               	movf	___llmod@divisor+1,w
  7428     1D83  0225               	subwf	___llmod@dividend+1,w
  7429     1D84  1D03               	skipz
  7430     1D85  2D88               	goto	u5455
  7431     1D86  0820               	movf	___llmod@divisor,w
  7432     1D87  0224               	subwf	___llmod@dividend,w
  7433     1D88                     u5455:
  7434     1D88  1C03               	skipc
  7435     1D89  2D98               	goto	l3383
  7436     1D8A  0820               	movf	___llmod@divisor,w
  7437     1D8B  02A4               	subwf	___llmod@dividend,f
  7438     1D8C  0821               	movf	___llmod@divisor+1,w
  7439     1D8D  1C03               	skipc
  7440     1D8E  0F21               	incfsz	___llmod@divisor+1,w
  7441     1D8F  02A5               	subwf	___llmod@dividend+1,f
  7442     1D90  0822               	movf	___llmod@divisor+2,w
  7443     1D91  1C03               	skipc
  7444     1D92  0F22               	incfsz	___llmod@divisor+2,w
  7445     1D93  02A6               	subwf	___llmod@dividend+2,f
  7446     1D94  0823               	movf	___llmod@divisor+3,w
  7447     1D95  1C03               	skipc
  7448     1D96  0F23               	incfsz	___llmod@divisor+3,w
  7449     1D97  02A7               	subwf	___llmod@dividend+3,f
  7450     1D98                     l3383:
  7451     1D98  3001               	movlw	1
  7452     1D99                     u5465:
  7453     1D99  1003               	clrc
  7454     1D9A  0CA3               	rrf	___llmod@divisor+3,f
  7455     1D9B  0CA2               	rrf	___llmod@divisor+2,f
  7456     1D9C  0CA1               	rrf	___llmod@divisor+1,f
  7457     1D9D  0CA0               	rrf	___llmod@divisor,f
  7458     1D9E  3EFF               	addlw	-1
  7459     1D9F  1D03               	skipz
  7460     1DA0  2D99               	goto	u5465
  7461     1DA1  3001               	movlw	1
  7462     1DA2  02A9               	subwf	___llmod@counter,f
  7463     1DA3  1D03               	btfss	3,2
  7464     1DA4  2D7A               	goto	l3379
  7465     1DA5                     l3387:
  7466     1DA5  0827               	movf	___llmod@dividend+3,w
  7467     1DA6  00A3               	movwf	?___llmod+3
  7468     1DA7  0826               	movf	___llmod@dividend+2,w
  7469     1DA8  00A2               	movwf	?___llmod+2
  7470     1DA9  0825               	movf	___llmod@dividend+1,w
  7471     1DAA  00A1               	movwf	?___llmod+1
  7472     1DAB  0824               	movf	___llmod@dividend,w
  7473     1DAC  00A0               	movwf	?___llmod
  7474     1DAD  0008               	return
  7475     1DAE                     __end_of___llmod:
  7476                           
  7477                           	psect	text16
  7478     1E07                     __ptext16:	
  7479 ;; *************** function ___lldiv *****************
  7480 ;; Defined at:
  7481 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\__lldiv.c"
  7482 ;; Parameters:    Size  Location     Type
  7483 ;;  divisor         4    0[COMMON] unsigned long 
  7484 ;;  dividend        4    4[COMMON] unsigned long 
  7485 ;; Auto vars:     Size  Location     Type
  7486 ;;  quotient        4    9[COMMON] unsigned long 
  7487 ;;  counter         1   13[COMMON] unsigned char 
  7488 ;; Return value:  Size  Location     Type
  7489 ;;                  4    0[COMMON] unsigned long 
  7490 ;; Registers used:
  7491 ;;		wreg, status,2, status,0, btemp+1
  7492 ;; Tracked objects:
  7493 ;;		On entry : 300/100
  7494 ;;		On exit  : 300/100
  7495 ;;		Unchanged: 300/0
  7496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7497 ;;      Params:         8       0       0       0       0
  7498 ;;      Locals:         5       0       0       0       0
  7499 ;;      Temps:          1       0       0       0       0
  7500 ;;      Totals:        14       0       0       0       0
  7501 ;;Total ram usage:       14 bytes
  7502 ;; Hardware stack levels used: 1
  7503 ;; This function calls:
  7504 ;;		Nothing
  7505 ;; This function is called by:
  7506 ;;		_sprintf
  7507 ;; This function uses a non-reentrant model
  7508 ;;
  7509                           
  7510     1E07                     ___lldiv:	
  7511                           ;psect for function ___lldiv
  7512                           
  7513                           
  7514                           ;incstack = 0
  7515                           ; Regs used in ___lldiv: [wreg+status,2+status,0+btemp+1]
  7516     1E07  3000               	movlw	0
  7517     1E08  00FC               	movwf	___lldiv@quotient+3
  7518     1E09  3000               	movlw	0
  7519     1E0A  00FB               	movwf	___lldiv@quotient+2
  7520     1E0B  3000               	movlw	0
  7521     1E0C  00FA               	movwf	___lldiv@quotient+1
  7522     1E0D  3000               	movlw	0
  7523     1E0E  00F9               	movwf	___lldiv@quotient
  7524     1E0F  0873               	movf	___lldiv@divisor+3,w
  7525     1E10  0472               	iorwf	___lldiv@divisor+2,w
  7526     1E11  0471               	iorwf	___lldiv@divisor+1,w
  7527     1E12  0470               	iorwf	___lldiv@divisor,w
  7528     1E13  1903               	skipnz
  7529     1E14  2E5C               	goto	l3287
  7530     1E15  01FD               	clrf	___lldiv@counter
  7531     1E16  0AFD               	incf	___lldiv@counter,f
  7532     1E17                     l3273:
  7533     1E17  1BF3               	btfsc	___lldiv@divisor+3,7
  7534     1E18  2E27               	goto	l3275
  7535     1E19  3001               	movlw	1
  7536     1E1A  00F8               	movwf	??___lldiv
  7537     1E1B                     u5155:
  7538     1E1B  1003               	clrc
  7539     1E1C  0DF0               	rlf	___lldiv@divisor,f
  7540     1E1D  0DF1               	rlf	___lldiv@divisor+1,f
  7541     1E1E  0DF2               	rlf	___lldiv@divisor+2,f
  7542     1E1F  0DF3               	rlf	___lldiv@divisor+3,f
  7543     1E20  0BF8               	decfsz	??___lldiv,f
  7544     1E21  2E1B               	goto	u5155
  7545     1E22  3001               	movlw	1
  7546     1E23  00FF               	movwf	127
  7547     1E24  087F               	movf	127,w
  7548     1E25  07FD               	addwf	___lldiv@counter,f
  7549     1E26  2E17               	goto	l3273
  7550     1E27                     l3275:
  7551     1E27  3001               	movlw	1
  7552     1E28  00F8               	movwf	??___lldiv
  7553     1E29                     u5175:
  7554     1E29  1003               	clrc
  7555     1E2A  0DF9               	rlf	___lldiv@quotient,f
  7556     1E2B  0DFA               	rlf	___lldiv@quotient+1,f
  7557     1E2C  0DFB               	rlf	___lldiv@quotient+2,f
  7558     1E2D  0DFC               	rlf	___lldiv@quotient+3,f
  7559     1E2E  0BF8               	decfsz	??___lldiv,f
  7560     1E2F  2E29               	goto	u5175
  7561     1E30  0873               	movf	___lldiv@divisor+3,w
  7562     1E31  0277               	subwf	___lldiv@dividend+3,w
  7563     1E32  1D03               	skipz
  7564     1E33  2E3E               	goto	u5185
  7565     1E34  0872               	movf	___lldiv@divisor+2,w
  7566     1E35  0276               	subwf	___lldiv@dividend+2,w
  7567     1E36  1D03               	skipz
  7568     1E37  2E3E               	goto	u5185
  7569     1E38  0871               	movf	___lldiv@divisor+1,w
  7570     1E39  0275               	subwf	___lldiv@dividend+1,w
  7571     1E3A  1D03               	skipz
  7572     1E3B  2E3E               	goto	u5185
  7573     1E3C  0870               	movf	___lldiv@divisor,w
  7574     1E3D  0274               	subwf	___lldiv@dividend,w
  7575     1E3E                     u5185:
  7576     1E3E  1C03               	skipc
  7577     1E3F  2E4F               	goto	l3283
  7578     1E40  0870               	movf	___lldiv@divisor,w
  7579     1E41  02F4               	subwf	___lldiv@dividend,f
  7580     1E42  0871               	movf	___lldiv@divisor+1,w
  7581     1E43  1C03               	skipc
  7582     1E44  0F71               	incfsz	___lldiv@divisor+1,w
  7583     1E45  02F5               	subwf	___lldiv@dividend+1,f
  7584     1E46  0872               	movf	___lldiv@divisor+2,w
  7585     1E47  1C03               	skipc
  7586     1E48  0F72               	incfsz	___lldiv@divisor+2,w
  7587     1E49  02F6               	subwf	___lldiv@dividend+2,f
  7588     1E4A  0873               	movf	___lldiv@divisor+3,w
  7589     1E4B  1C03               	skipc
  7590     1E4C  0F73               	incfsz	___lldiv@divisor+3,w
  7591     1E4D  02F7               	subwf	___lldiv@dividend+3,f
  7592     1E4E  1479               	bsf	___lldiv@quotient,0
  7593     1E4F                     l3283:
  7594     1E4F  3001               	movlw	1
  7595     1E50                     u5195:
  7596     1E50  1003               	clrc
  7597     1E51  0CF3               	rrf	___lldiv@divisor+3,f
  7598     1E52  0CF2               	rrf	___lldiv@divisor+2,f
  7599     1E53  0CF1               	rrf	___lldiv@divisor+1,f
  7600     1E54  0CF0               	rrf	___lldiv@divisor,f
  7601     1E55  3EFF               	addlw	-1
  7602     1E56  1D03               	skipz
  7603     1E57  2E50               	goto	u5195
  7604     1E58  3001               	movlw	1
  7605     1E59  02FD               	subwf	___lldiv@counter,f
  7606     1E5A  1D03               	btfss	3,2
  7607     1E5B  2E27               	goto	l3275
  7608     1E5C                     l3287:
  7609     1E5C  087C               	movf	___lldiv@quotient+3,w
  7610     1E5D  00F3               	movwf	?___lldiv+3
  7611     1E5E  087B               	movf	___lldiv@quotient+2,w
  7612     1E5F  00F2               	movwf	?___lldiv+2
  7613     1E60  087A               	movf	___lldiv@quotient+1,w
  7614     1E61  00F1               	movwf	?___lldiv+1
  7615     1E62  0879               	movf	___lldiv@quotient,w
  7616     1E63  00F0               	movwf	?___lldiv
  7617     1E64  0008               	return
  7618     1E65                     __end_of___lldiv:
  7619                           
  7620                           	psect	text17
  7621     1E65                     __ptext17:	
  7622 ;; *************** function ___fltol *****************
  7623 ;; Defined at:
  7624 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\fltol.c"
  7625 ;; Parameters:    Size  Location     Type
  7626 ;;  f1              4   45[BANK0 ] unsigned long 
  7627 ;; Auto vars:     Size  Location     Type
  7628 ;;  exp1            1   54[BANK0 ] unsigned char 
  7629 ;;  sign1           1   53[BANK0 ] unsigned char 
  7630 ;; Return value:  Size  Location     Type
  7631 ;;                  4   45[BANK0 ] long 
  7632 ;; Registers used:
  7633 ;;		wreg, status,2, status,0, btemp+1
  7634 ;; Tracked objects:
  7635 ;;		On entry : 300/0
  7636 ;;		On exit  : 300/0
  7637 ;;		Unchanged: 0/0
  7638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7639 ;;      Params:         0       4       0       0       0
  7640 ;;      Locals:         0       2       0       0       0
  7641 ;;      Temps:          0       4       0       0       0
  7642 ;;      Totals:         0      10       0       0       0
  7643 ;;Total ram usage:       10 bytes
  7644 ;; Hardware stack levels used: 1
  7645 ;; This function calls:
  7646 ;;		Nothing
  7647 ;; This function is called by:
  7648 ;;		_sprintf
  7649 ;; This function uses a non-reentrant model
  7650 ;;
  7651                           
  7652     1E65                     ___fltol:	
  7653                           ;psect for function ___fltol
  7654                           
  7655                           
  7656                           ;incstack = 0
  7657                           ; Regs used in ___fltol: [wreg+status,2+status,0+btemp+1]
  7658     1E65  1003               	clrc
  7659     1E66  0D4F               	rlf	___fltol@f1+2,w
  7660     1E67  0D50               	rlf	___fltol@f1+3,w
  7661     1E68  00D6               	movwf	___fltol@exp1
  7662     1E69  0856               	movf	___fltol@exp1,w
  7663     1E6A  1D03               	btfss	3,2
  7664     1E6B  2E75               	goto	l3337
  7665     1E6C                     l3333:
  7666     1E6C  3000               	movlw	0
  7667     1E6D  00D0               	movwf	?___fltol+3
  7668     1E6E  3000               	movlw	0
  7669     1E6F  00CF               	movwf	?___fltol+2
  7670     1E70  3000               	movlw	0
  7671     1E71  00CE               	movwf	?___fltol+1
  7672     1E72  3000               	movlw	0
  7673     1E73  00CD               	movwf	?___fltol
  7674     1E74  0008               	return
  7675     1E75                     l3337:
  7676     1E75  084D               	movf	___fltol@f1,w
  7677     1E76  00D1               	movwf	??___fltol
  7678     1E77  084E               	movf	___fltol@f1+1,w
  7679     1E78  00D2               	movwf	??___fltol+1
  7680     1E79  084F               	movf	___fltol@f1+2,w
  7681     1E7A  00D3               	movwf	??___fltol+2
  7682     1E7B  0850               	movf	___fltol@f1+3,w
  7683     1E7C  00D4               	movwf	??___fltol+3
  7684     1E7D  301F               	movlw	31
  7685     1E7E                     u5335:
  7686     1E7E  1003               	clrc
  7687     1E7F  0CD4               	rrf	??___fltol+3,f
  7688     1E80  0CD3               	rrf	??___fltol+2,f
  7689     1E81  0CD2               	rrf	??___fltol+1,f
  7690     1E82  0CD1               	rrf	??___fltol,f
  7691     1E83  3EFF               	addlw	-1
  7692     1E84  1D03               	skipz
  7693     1E85  2E7E               	goto	u5335
  7694     1E86  0851               	movf	??___fltol,w
  7695     1E87  00D5               	movwf	___fltol@sign1
  7696     1E88  17CF               	bsf	___fltol@f1+2,7
  7697     1E89  30FF               	movlw	255
  7698     1E8A  05CD               	andwf	___fltol@f1,f
  7699     1E8B  30FF               	movlw	255
  7700     1E8C  05CE               	andwf	___fltol@f1+1,f
  7701     1E8D  30FF               	movlw	255
  7702     1E8E  05CF               	andwf	___fltol@f1+2,f
  7703     1E8F  3000               	movlw	0
  7704     1E90  05D0               	andwf	___fltol@f1+3,f
  7705     1E91  3096               	movlw	150
  7706     1E92  02D6               	subwf	___fltol@exp1,f
  7707     1E93  1FD6               	btfss	___fltol@exp1,7
  7708     1E94  2EAA               	goto	l3357
  7709     1E95  0856               	movf	___fltol@exp1,w
  7710     1E96  3A80               	xorlw	128
  7711     1E97  3E97               	addlw	151
  7712     1E98  1C03               	btfss	3,0
  7713     1E99  2E6C               	goto	l3333
  7714     1E9A                     l3353:
  7715     1E9A  3001               	movlw	1
  7716     1E9B                     u5365:
  7717     1E9B  1003               	clrc
  7718     1E9C  0CD0               	rrf	___fltol@f1+3,f
  7719     1E9D  0CCF               	rrf	___fltol@f1+2,f
  7720     1E9E  0CCE               	rrf	___fltol@f1+1,f
  7721     1E9F  0CCD               	rrf	___fltol@f1,f
  7722     1EA0  3EFF               	addlw	-1
  7723     1EA1  1D03               	skipz
  7724     1EA2  2E9B               	goto	u5365
  7725     1EA3  3001               	movlw	1
  7726     1EA4  00FF               	movwf	127
  7727     1EA5  087F               	movf	127,w
  7728     1EA6  07D6               	addwf	___fltol@exp1,f
  7729     1EA7  1903               	btfsc	3,2
  7730     1EA8  2EBD               	goto	l3365
  7731     1EA9  2E9A               	goto	l3353
  7732     1EAA                     l3357:
  7733     1EAA  3020               	movlw	32
  7734     1EAB  0256               	subwf	___fltol@exp1,w
  7735     1EAC  1803               	btfsc	3,0
  7736     1EAD  2E6C               	goto	l3333
  7737     1EAE                     l588:
  7738     1EAE  0856               	movf	___fltol@exp1,w
  7739     1EAF  1903               	btfsc	3,2
  7740     1EB0  2EBD               	goto	l3365
  7741     1EB1  3001               	movlw	1
  7742     1EB2  00D1               	movwf	??___fltol
  7743     1EB3                     u5395:
  7744     1EB3  1003               	clrc
  7745     1EB4  0DCD               	rlf	___fltol@f1,f
  7746     1EB5  0DCE               	rlf	___fltol@f1+1,f
  7747     1EB6  0DCF               	rlf	___fltol@f1+2,f
  7748     1EB7  0DD0               	rlf	___fltol@f1+3,f
  7749     1EB8  0BD1               	decfsz	??___fltol,f
  7750     1EB9  2EB3               	goto	u5395
  7751     1EBA  3001               	movlw	1
  7752     1EBB  02D6               	subwf	___fltol@exp1,f
  7753     1EBC  2EAE               	goto	l588
  7754     1EBD                     l3365:
  7755     1EBD  0855               	movf	___fltol@sign1,w
  7756     1EBE  1903               	btfsc	3,2
  7757     1EBF  0008               	return
  7758     1EC0  09CD               	comf	___fltol@f1,f
  7759     1EC1  09CE               	comf	___fltol@f1+1,f
  7760     1EC2  09CF               	comf	___fltol@f1+2,f
  7761     1EC3  09D0               	comf	___fltol@f1+3,f
  7762     1EC4  0ACD               	incf	___fltol@f1,f
  7763     1EC5  1903               	skipnz
  7764     1EC6  0ACE               	incf	___fltol@f1+1,f
  7765     1EC7  1903               	skipnz
  7766     1EC8  0ACF               	incf	___fltol@f1+2,f
  7767     1EC9  1903               	skipnz
  7768     1ECA  0AD0               	incf	___fltol@f1+3,f
  7769     1ECB  0008               	return
  7770     1ECC                     __end_of___fltol:
  7771                           
  7772                           	psect	text18
  7773     1B8C                     __ptext18:	
  7774 ;; *************** function ___flsub *****************
  7775 ;; Defined at:
  7776 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\sprcadd.c"
  7777 ;; Parameters:    Size  Location     Type
  7778 ;;  a               4   64[BANK0 ] long 
  7779 ;;  b               4   68[BANK0 ] long 
  7780 ;; Auto vars:     Size  Location     Type
  7781 ;;		None
  7782 ;; Return value:  Size  Location     Type
  7783 ;;                  4   64[BANK0 ] long 
  7784 ;; Registers used:
  7785 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7786 ;; Tracked objects:
  7787 ;;		On entry : 300/0
  7788 ;;		On exit  : 300/0
  7789 ;;		Unchanged: 0/0
  7790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7791 ;;      Params:         0       8       0       0       0
  7792 ;;      Locals:         0       0       0       0       0
  7793 ;;      Temps:          0       0       0       0       0
  7794 ;;      Totals:         0       8       0       0       0
  7795 ;;Total ram usage:        8 bytes
  7796 ;; Hardware stack levels used: 1
  7797 ;; Hardware stack levels required when called: 1
  7798 ;; This function calls:
  7799 ;;		___fladd
  7800 ;; This function is called by:
  7801 ;;		_sprintf
  7802 ;; This function uses a non-reentrant model
  7803 ;;
  7804                           
  7805     1B8C                     ___flsub:	
  7806                           ;psect for function ___flsub
  7807                           
  7808                           
  7809                           ;incstack = 0
  7810                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7811     1B8C  3080               	movlw	128
  7812     1B8D  06E3               	xorwf	___flsub@a+3,f
  7813     1B8E  0867               	movf	___flsub@b+3,w
  7814     1B8F  00CF               	movwf	___fladd@b+3
  7815     1B90  0866               	movf	___flsub@b+2,w
  7816     1B91  00CE               	movwf	___fladd@b+2
  7817     1B92  0865               	movf	___flsub@b+1,w
  7818     1B93  00CD               	movwf	___fladd@b+1
  7819     1B94  0864               	movf	___flsub@b,w
  7820     1B95  00CC               	movwf	___fladd@b
  7821     1B96  0863               	movf	___flsub@a+3,w
  7822     1B97  00D3               	movwf	___fladd@a+3
  7823     1B98  0862               	movf	___flsub@a+2,w
  7824     1B99  00D2               	movwf	___fladd@a+2
  7825     1B9A  0861               	movf	___flsub@a+1,w
  7826     1B9B  00D1               	movwf	___fladd@a+1
  7827     1B9C  0860               	movf	___flsub@a,w
  7828     1B9D  00D0               	movwf	___fladd@a
  7829     1B9E  160A  118A  233D   	fcall	___fladd
  7830     1BA1  084F               	movf	?___fladd+3,w
  7831     1BA2  00E3               	movwf	?___flsub+3
  7832     1BA3  084E               	movf	?___fladd+2,w
  7833     1BA4  00E2               	movwf	?___flsub+2
  7834     1BA5  084D               	movf	?___fladd+1,w
  7835     1BA6  00E1               	movwf	?___flsub+1
  7836     1BA7  084C               	movf	?___fladd,w
  7837     1BA8  00E0               	movwf	?___flsub
  7838     1BA9  0008               	return
  7839     1BAA                     __end_of___flsub:
  7840                           
  7841                           	psect	text19
  7842     133D                     __ptext19:	
  7843 ;; *************** function ___fladd *****************
  7844 ;; Defined at:
  7845 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\sprcadd.c"
  7846 ;; Parameters:    Size  Location     Type
  7847 ;;  b               4   44[BANK0 ] long 
  7848 ;;  a               4   48[BANK0 ] long 
  7849 ;; Auto vars:     Size  Location     Type
  7850 ;;  grs             1   63[BANK0 ] unsigned char 
  7851 ;;  bexp            1   62[BANK0 ] unsigned char 
  7852 ;;  aexp            1   61[BANK0 ] unsigned char 
  7853 ;;  signs           1   60[BANK0 ] unsigned char 
  7854 ;; Return value:  Size  Location     Type
  7855 ;;                  4   44[BANK0 ] unsigned char 
  7856 ;; Registers used:
  7857 ;;		wreg, status,2, status,0, btemp+1
  7858 ;; Tracked objects:
  7859 ;;		On entry : 300/0
  7860 ;;		On exit  : 300/0
  7861 ;;		Unchanged: 0/0
  7862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7863 ;;      Params:         0       8       0       0       0
  7864 ;;      Locals:         0       4       0       0       0
  7865 ;;      Temps:          0       8       0       0       0
  7866 ;;      Totals:         0      20       0       0       0
  7867 ;;Total ram usage:       20 bytes
  7868 ;; Hardware stack levels used: 1
  7869 ;; This function calls:
  7870 ;;		Nothing
  7871 ;; This function is called by:
  7872 ;;		_sprintf
  7873 ;;		___flsub
  7874 ;; This function uses a non-reentrant model
  7875 ;;
  7876                           
  7877     133D                     ___fladd:	
  7878                           ;psect for function ___fladd
  7879                           
  7880                           
  7881                           ;incstack = 0
  7882                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  7883     133D  084F               	movf	___fladd@b+3,w
  7884     133E  3980               	andlw	128
  7885     133F  00DC               	movwf	___fladd@signs
  7886     1340  084F               	movf	___fladd@b+3,w
  7887     1341  00D4               	movwf	??___fladd
  7888     1342  0754               	addwf	??___fladd,w
  7889     1343  00DE               	movwf	___fladd@bexp
  7890     1344  1BCE               	btfsc	___fladd@b+2,7
  7891     1345  145E               	bsf	___fladd@bexp,0
  7892     1346  085E               	movf	___fladd@bexp,w
  7893     1347  1903               	btfsc	3,2
  7894     1348  2B57               	goto	l2715
  7895     1349  0A5E               	incf	___fladd@bexp,w
  7896     134A  1D03               	btfss	3,2
  7897     134B  2B54               	goto	l2711
  7898     134C  3000               	movlw	0
  7899     134D  00CF               	movwf	___fladd@b+3
  7900     134E  3000               	movlw	0
  7901     134F  00CE               	movwf	___fladd@b+2
  7902     1350  3000               	movlw	0
  7903     1351  00CD               	movwf	___fladd@b+1
  7904     1352  3000               	movlw	0
  7905     1353  00CC               	movwf	___fladd@b
  7906     1354                     l2711:
  7907     1354  17CE               	bsf	___fladd@b+2,7
  7908     1355  01CF               	clrf	___fladd@b+3
  7909     1356  2B5F               	goto	l2717
  7910     1357                     l2715:
  7911     1357  3000               	movlw	0
  7912     1358  00CF               	movwf	___fladd@b+3
  7913     1359  3000               	movlw	0
  7914     135A  00CE               	movwf	___fladd@b+2
  7915     135B  3000               	movlw	0
  7916     135C  00CD               	movwf	___fladd@b+1
  7917     135D  3000               	movlw	0
  7918     135E  00CC               	movwf	___fladd@b
  7919     135F                     l2717:
  7920     135F  0853               	movf	___fladd@a+3,w
  7921     1360  3980               	andlw	128
  7922     1361  00DD               	movwf	___fladd@aexp
  7923     1362  085D               	movf	___fladd@aexp,w
  7924     1363  065C               	xorwf	___fladd@signs,w
  7925     1364  1D03               	btfss	3,2
  7926     1365  175C               	bsf	___fladd@signs,6
  7927     1366  0853               	movf	___fladd@a+3,w
  7928     1367  00D4               	movwf	??___fladd
  7929     1368  0754               	addwf	??___fladd,w
  7930     1369  00DD               	movwf	___fladd@aexp
  7931     136A  1BD2               	btfsc	___fladd@a+2,7
  7932     136B  145D               	bsf	___fladd@aexp,0
  7933     136C  085D               	movf	___fladd@aexp,w
  7934     136D  1903               	btfsc	3,2
  7935     136E  2B7D               	goto	l2739
  7936     136F  0A5D               	incf	___fladd@aexp,w
  7937     1370  1D03               	btfss	3,2
  7938     1371  2B7A               	goto	l2735
  7939     1372  3000               	movlw	0
  7940     1373  00D3               	movwf	___fladd@a+3
  7941     1374  3000               	movlw	0
  7942     1375  00D2               	movwf	___fladd@a+2
  7943     1376  3000               	movlw	0
  7944     1377  00D1               	movwf	___fladd@a+1
  7945     1378  3000               	movlw	0
  7946     1379  00D0               	movwf	___fladd@a
  7947     137A                     l2735:
  7948     137A  17D2               	bsf	___fladd@a+2,7
  7949     137B  01D3               	clrf	___fladd@a+3
  7950     137C  2B85               	goto	l705
  7951     137D                     l2739:
  7952     137D  3000               	movlw	0
  7953     137E  00D3               	movwf	___fladd@a+3
  7954     137F  3000               	movlw	0
  7955     1380  00D2               	movwf	___fladd@a+2
  7956     1381  3000               	movlw	0
  7957     1382  00D1               	movwf	___fladd@a+1
  7958     1383  3000               	movlw	0
  7959     1384  00D0               	movwf	___fladd@a
  7960     1385                     l705:
  7961     1385  085E               	movf	___fladd@bexp,w
  7962     1386  025D               	subwf	___fladd@aexp,w
  7963     1387  1803               	skipnc
  7964     1388  2BAD               	goto	l2775
  7965     1389  1F5C               	btfss	___fladd@signs,6
  7966     138A  2B8F               	goto	l2745
  7967     138B  3080               	movlw	128
  7968     138C  00FF               	movwf	127
  7969     138D  087F               	movf	127,w
  7970     138E  06DC               	xorwf	___fladd@signs,f
  7971     138F                     l2745:
  7972     138F  085E               	movf	___fladd@bexp,w
  7973     1390  00DF               	movwf	___fladd@grs
  7974     1391  085D               	movf	___fladd@aexp,w
  7975     1392  00DE               	movwf	___fladd@bexp
  7976     1393  085F               	movf	___fladd@grs,w
  7977     1394  00DD               	movwf	___fladd@aexp
  7978     1395  084C               	movf	___fladd@b,w
  7979     1396  00DF               	movwf	___fladd@grs
  7980     1397  0850               	movf	___fladd@a,w
  7981     1398  00CC               	movwf	___fladd@b
  7982     1399  085F               	movf	___fladd@grs,w
  7983     139A  00D0               	movwf	___fladd@a
  7984     139B  084D               	movf	___fladd@b+1,w
  7985     139C  00DF               	movwf	___fladd@grs
  7986     139D  0851               	movf	___fladd@a+1,w
  7987     139E  00CD               	movwf	___fladd@b+1
  7988     139F  085F               	movf	___fladd@grs,w
  7989     13A0  00D1               	movwf	___fladd@a+1
  7990     13A1  084E               	movf	___fladd@b+2,w
  7991     13A2  00DF               	movwf	___fladd@grs
  7992     13A3  0852               	movf	___fladd@a+2,w
  7993     13A4  00CE               	movwf	___fladd@b+2
  7994     13A5  085F               	movf	___fladd@grs,w
  7995     13A6  00D2               	movwf	___fladd@a+2
  7996     13A7  084F               	movf	___fladd@b+3,w
  7997     13A8  00DF               	movwf	___fladd@grs
  7998     13A9  0853               	movf	___fladd@a+3,w
  7999     13AA  00CF               	movwf	___fladd@b+3
  8000     13AB  085F               	movf	___fladd@grs,w
  8001     13AC  00D3               	movwf	___fladd@a+3
  8002     13AD                     l2775:
  8003     13AD  01DF               	clrf	___fladd@grs
  8004     13AE  085D               	movf	___fladd@aexp,w
  8005     13AF  00D4               	movwf	??___fladd
  8006     13B0  01D5               	clrf	??___fladd+1
  8007     13B1  0855               	movf	??___fladd+1,w
  8008     13B2  00D7               	movwf	??___fladd+3
  8009     13B3  085E               	movf	___fladd@bexp,w
  8010     13B4  0254               	subwf	??___fladd,w
  8011     13B5  00D6               	movwf	??___fladd+2
  8012     13B6  1C03               	skipc
  8013     13B7  03D7               	decf	??___fladd+3,f
  8014     13B8  0857               	movf	??___fladd+3,w
  8015     13B9  3A80               	xorlw	128
  8016     13BA  00FF               	movwf	127
  8017     13BB  3080               	movlw	128
  8018     13BC  027F               	subwf	127,w
  8019     13BD  1D03               	skipz
  8020     13BE  2BC1               	goto	u3825
  8021     13BF  301A               	movlw	26
  8022     13C0  0256               	subwf	??___fladd+2,w
  8023     13C1                     u3825:
  8024     13C1  1C03               	skipc
  8025     13C2  2BF4               	goto	l2793
  8026     13C3  1283               	bcf	3,5	;RP0=0, select bank0
  8027     13C4  1303               	bcf	3,6	;RP1=0, select bank0
  8028     13C5  084F               	movf	___fladd@b+3,w
  8029     13C6  044E               	iorwf	___fladd@b+2,w
  8030     13C7  044D               	iorwf	___fladd@b+1,w
  8031     13C8  044C               	iorwf	___fladd@b,w
  8032     13C9  1903               	btfsc	3,2
  8033     13CA  2BCD               	goto	u3830
  8034     13CB  3001               	movlw	1
  8035     13CC  2BCE               	goto	u3840
  8036     13CD                     u3830:
  8037     13CD  3000               	movlw	0
  8038     13CE                     u3840:
  8039     13CE  00DF               	movwf	___fladd@grs
  8040     13CF  3000               	movlw	0
  8041     13D0  00CF               	movwf	___fladd@b+3
  8042     13D1  3000               	movlw	0
  8043     13D2  00CE               	movwf	___fladd@b+2
  8044     13D3  3000               	movlw	0
  8045     13D4  00CD               	movwf	___fladd@b+1
  8046     13D5  3000               	movlw	0
  8047     13D6  00CC               	movwf	___fladd@b
  8048     13D7  085D               	movf	___fladd@aexp,w
  8049     13D8  00DE               	movwf	___fladd@bexp
  8050     13D9  2BFA               	goto	l709
  8051     13DA                     l711:
  8052     13DA  1C5F               	btfss	___fladd@grs,0
  8053     13DB  2BE3               	goto	l2783
  8054     13DC  085F               	movf	___fladd@grs,w
  8055     13DD  00D4               	movwf	??___fladd
  8056     13DE  1003               	clrc
  8057     13DF  0C54               	rrf	??___fladd,w
  8058     13E0  3801               	iorlw	1
  8059     13E1  00DF               	movwf	___fladd@grs
  8060     13E2  2BE5               	goto	l2785
  8061     13E3                     l2783:
  8062     13E3  1003               	clrc
  8063     13E4  0CDF               	rrf	___fladd@grs,f
  8064     13E5                     l2785:
  8065     13E5  184C               	btfsc	___fladd@b,0
  8066     13E6  17DF               	bsf	___fladd@grs,7
  8067     13E7  3001               	movlw	1
  8068     13E8  00D4               	movwf	??___fladd
  8069     13E9                     u3875:
  8070     13E9  0D4F               	rlf	___fladd@b+3,w
  8071     13EA  0CCF               	rrf	___fladd@b+3,f
  8072     13EB  0CCE               	rrf	___fladd@b+2,f
  8073     13EC  0CCD               	rrf	___fladd@b+1,f
  8074     13ED  0CCC               	rrf	___fladd@b,f
  8075     13EE  0BD4               	decfsz	??___fladd& (0+127),f
  8076     13EF  2BE9               	goto	u3875
  8077     13F0  3001               	movlw	1
  8078     13F1  00FF               	movwf	127
  8079     13F2  087F               	movf	127,w
  8080     13F3  07DE               	addwf	___fladd@bexp,f
  8081     13F4                     l2793:
  8082     13F4  1283               	bcf	3,5	;RP0=0, select bank0
  8083     13F5  1303               	bcf	3,6	;RP1=0, select bank0
  8084     13F6  085D               	movf	___fladd@aexp,w
  8085     13F7  025E               	subwf	___fladd@bexp,w
  8086     13F8  1C03               	skipc
  8087     13F9  2BDA               	goto	l711
  8088     13FA                     l709:
  8089     13FA  1B5C               	btfsc	___fladd@signs,6
  8090     13FB  2C39               	goto	l2819
  8091     13FC  085E               	movf	___fladd@bexp,w
  8092     13FD  1D03               	btfss	3,2
  8093     13FE  2C08               	goto	l2801
  8094     13FF  3000               	movlw	0
  8095     1400  00CF               	movwf	?___fladd+3
  8096     1401  3000               	movlw	0
  8097     1402  00CE               	movwf	?___fladd+2
  8098     1403  3000               	movlw	0
  8099     1404  00CD               	movwf	?___fladd+1
  8100     1405  3000               	movlw	0
  8101     1406  00CC               	movwf	?___fladd
  8102     1407  0008               	return
  8103     1408                     l2801:
  8104     1408  0850               	movf	___fladd@a,w
  8105     1409  07CC               	addwf	___fladd@b,f
  8106     140A  0851               	movf	___fladd@a+1,w
  8107     140B  1103               	clrz
  8108     140C  1803               	skipnc
  8109     140D  3E01               	addlw	1
  8110     140E  1D03               	btfss	3,2
  8111     140F  07CD               	addwf	___fladd@b+1,f
  8112     1410  0852               	movf	___fladd@a+2,w
  8113     1411  1103               	clrz
  8114     1412  1803               	skipnc
  8115     1413  3E01               	addlw	1
  8116     1414  1D03               	btfss	3,2
  8117     1415  07CE               	addwf	___fladd@b+2,f
  8118     1416  0853               	movf	___fladd@a+3,w
  8119     1417  1103               	clrz
  8120     1418  1803               	skipnc
  8121     1419  3E01               	addlw	1
  8122     141A  1D03               	btfss	3,2
  8123     141B  07CF               	addwf	___fladd@b+3,f
  8124     141C  1C4F               	btfss	___fladd@b+3,0
  8125     141D  2CDB               	goto	l2855
  8126     141E  1C5F               	btfss	___fladd@grs,0
  8127     141F  2C27               	goto	l2809
  8128     1420  085F               	movf	___fladd@grs,w
  8129     1421  00D4               	movwf	??___fladd
  8130     1422  1003               	clrc
  8131     1423  0C54               	rrf	??___fladd,w
  8132     1424  3801               	iorlw	1
  8133     1425  00DF               	movwf	___fladd@grs
  8134     1426  2C29               	goto	l2811
  8135     1427                     l2809:
  8136     1427  1003               	clrc
  8137     1428  0CDF               	rrf	___fladd@grs,f
  8138     1429                     l2811:
  8139     1429  184C               	btfsc	___fladd@b,0
  8140     142A  17DF               	bsf	___fladd@grs,7
  8141     142B  3001               	movlw	1
  8142     142C  00D4               	movwf	??___fladd
  8143     142D                     u3955:
  8144     142D  0D4F               	rlf	___fladd@b+3,w
  8145     142E  0CCF               	rrf	___fladd@b+3,f
  8146     142F  0CCE               	rrf	___fladd@b+2,f
  8147     1430  0CCD               	rrf	___fladd@b+1,f
  8148     1431  0CCC               	rrf	___fladd@b,f
  8149     1432  0BD4               	decfsz	??___fladd& (0+127),f
  8150     1433  2C2D               	goto	u3955
  8151     1434  3001               	movlw	1
  8152     1435  00FF               	movwf	127
  8153     1436  087F               	movf	127,w
  8154     1437  07DE               	addwf	___fladd@bexp,f
  8155     1438  2CDB               	goto	l2855
  8156     1439                     l2819:
  8157     1439  084F               	movf	___fladd@b+3,w
  8158     143A  3A80               	xorlw	128
  8159     143B  00FF               	movwf	127
  8160     143C  0853               	movf	___fladd@a+3,w
  8161     143D  3A80               	xorlw	128
  8162     143E  027F               	subwf	127,w
  8163     143F  1D03               	skipz
  8164     1440  2C4B               	goto	u3963
  8165     1441  0852               	movf	___fladd@a+2,w
  8166     1442  024E               	subwf	___fladd@b+2,w
  8167     1443  1D03               	skipz
  8168     1444  2C4B               	goto	u3963
  8169     1445  0851               	movf	___fladd@a+1,w
  8170     1446  024D               	subwf	___fladd@b+1,w
  8171     1447  1D03               	skipz
  8172     1448  2C4B               	goto	u3963
  8173     1449  0850               	movf	___fladd@a,w
  8174     144A  024C               	subwf	___fladd@b,w
  8175     144B                     u3963:
  8176     144B  1803               	skipnc
  8177     144C  2CA3               	goto	l2831
  8178     144D  30FF               	movlw	255
  8179     144E  00D4               	movwf	??___fladd
  8180     144F  30FF               	movlw	255
  8181     1450  00D5               	movwf	??___fladd+1
  8182     1451  30FF               	movlw	255
  8183     1452  00D6               	movwf	??___fladd+2
  8184     1453  30FF               	movlw	255
  8185     1454  00D7               	movwf	??___fladd+3
  8186     1455  0850               	movf	___fladd@a,w
  8187     1456  00D8               	movwf	??___fladd+4
  8188     1457  0851               	movf	___fladd@a+1,w
  8189     1458  00D9               	movwf	??___fladd+5
  8190     1459  0852               	movf	___fladd@a+2,w
  8191     145A  00DA               	movwf	??___fladd+6
  8192     145B  0853               	movf	___fladd@a+3,w
  8193     145C  00DB               	movwf	??___fladd+7
  8194     145D  084C               	movf	___fladd@b,w
  8195     145E  02D8               	subwf	??___fladd+4,f
  8196     145F  084D               	movf	___fladd@b+1,w
  8197     1460  1C03               	skipc
  8198     1461  0F4D               	incfsz	___fladd@b+1,w
  8199     1462  2C64               	goto	u3971
  8200     1463  2C65               	goto	u3972
  8201     1464                     u3971:
  8202     1464  02D9               	subwf	??___fladd+5,f
  8203     1465                     u3972:
  8204     1465  084E               	movf	___fladd@b+2,w
  8205     1466  1C03               	skipc
  8206     1467  0F4E               	incfsz	___fladd@b+2,w
  8207     1468  2C6A               	goto	u3973
  8208     1469  2C6B               	goto	u3974
  8209     146A                     u3973:
  8210     146A  02DA               	subwf	??___fladd+6,f
  8211     146B                     u3974:
  8212     146B  084F               	movf	___fladd@b+3,w
  8213     146C  1C03               	skipc
  8214     146D  0F4F               	incfsz	___fladd@b+3,w
  8215     146E  2C70               	goto	u3975
  8216     146F  2C71               	goto	u3976
  8217     1470                     u3975:
  8218     1470  02DB               	subwf	??___fladd+7,f
  8219     1471                     u3976:
  8220     1471  0858               	movf	??___fladd+4,w
  8221     1472  07D4               	addwf	??___fladd,f
  8222     1473  0859               	movf	??___fladd+5,w
  8223     1474  1803               	skipnc
  8224     1475  0F59               	incfsz	??___fladd+5,w
  8225     1476  2C78               	goto	u3980
  8226     1477  2C79               	goto	u3981
  8227     1478                     u3980:
  8228     1478  07D5               	addwf	??___fladd+1,f
  8229     1479                     u3981:
  8230     1479  085A               	movf	??___fladd+6,w
  8231     147A  1803               	skipnc
  8232     147B  0F5A               	incfsz	??___fladd+6,w
  8233     147C  2C7E               	goto	u3982
  8234     147D  2C7F               	goto	u3983
  8235     147E                     u3982:
  8236     147E  07D6               	addwf	??___fladd+2,f
  8237     147F                     u3983:
  8238     147F  085B               	movf	??___fladd+7,w
  8239     1480  1803               	skipnc
  8240     1481  0A5B               	incf	??___fladd+7,w
  8241     1482  07D7               	addwf	??___fladd+3,f
  8242     1483  0857               	movf	??___fladd+3,w
  8243     1484  00CF               	movwf	___fladd@b+3
  8244     1485  0856               	movf	??___fladd+2,w
  8245     1486  00CE               	movwf	___fladd@b+2
  8246     1487  0855               	movf	??___fladd+1,w
  8247     1488  00CD               	movwf	___fladd@b+1
  8248     1489  0854               	movf	??___fladd,w
  8249     148A  00CC               	movwf	___fladd@b
  8250     148B  3080               	movlw	128
  8251     148C  00FF               	movwf	127
  8252     148D  087F               	movf	127,w
  8253     148E  06DC               	xorwf	___fladd@signs,f
  8254     148F  09DF               	comf	___fladd@grs,f
  8255     1490  0ADF               	incf	___fladd@grs,f
  8256     1491  085F               	movf	___fladd@grs,w
  8257     1492  1D03               	btfss	3,2
  8258     1493  2CB1               	goto	l726
  8259     1494  3001               	movlw	1
  8260     1495  07CC               	addwf	___fladd@b,f
  8261     1496  3000               	movlw	0
  8262     1497  1803               	skipnc
  8263     1498  3001               	movlw	1
  8264     1499  07CD               	addwf	___fladd@b+1,f
  8265     149A  3000               	movlw	0
  8266     149B  1803               	skipnc
  8267     149C  3001               	movlw	1
  8268     149D  07CE               	addwf	___fladd@b+2,f
  8269     149E  3000               	movlw	0
  8270     149F  1803               	skipnc
  8271     14A0  3001               	movlw	1
  8272     14A1  07CF               	addwf	___fladd@b+3,f
  8273     14A2  2CB1               	goto	l726
  8274     14A3                     l2831:
  8275     14A3  0850               	movf	___fladd@a,w
  8276     14A4  02CC               	subwf	___fladd@b,f
  8277     14A5  0851               	movf	___fladd@a+1,w
  8278     14A6  1C03               	skipc
  8279     14A7  0F51               	incfsz	___fladd@a+1,w
  8280     14A8  02CD               	subwf	___fladd@b+1,f
  8281     14A9  0852               	movf	___fladd@a+2,w
  8282     14AA  1C03               	skipc
  8283     14AB  0F52               	incfsz	___fladd@a+2,w
  8284     14AC  02CE               	subwf	___fladd@b+2,f
  8285     14AD  0853               	movf	___fladd@a+3,w
  8286     14AE  1C03               	skipc
  8287     14AF  0F53               	incfsz	___fladd@a+3,w
  8288     14B0  02CF               	subwf	___fladd@b+3,f
  8289     14B1                     l726:
  8290     14B1  084F               	movf	___fladd@b+3,w
  8291     14B2  044E               	iorwf	___fladd@b+2,w
  8292     14B3  044D               	iorwf	___fladd@b+1,w
  8293     14B4  044C               	iorwf	___fladd@b,w
  8294     14B5  1D03               	skipz
  8295     14B6  2CD9               	goto	l2853
  8296     14B7  085F               	movf	___fladd@grs,w
  8297     14B8  1D03               	btfss	3,2
  8298     14B9  2CD9               	goto	l2853
  8299     14BA  3000               	movlw	0
  8300     14BB  00CF               	movwf	?___fladd+3
  8301     14BC  3000               	movlw	0
  8302     14BD  00CE               	movwf	?___fladd+2
  8303     14BE  3000               	movlw	0
  8304     14BF  00CD               	movwf	?___fladd+1
  8305     14C0  3000               	movlw	0
  8306     14C1  00CC               	movwf	?___fladd
  8307     14C2  0008               	return
  8308     14C3                     l2839:
  8309     14C3  3001               	movlw	1
  8310     14C4  00D4               	movwf	??___fladd
  8311     14C5                     u4025:
  8312     14C5  1003               	clrc
  8313     14C6  0DCC               	rlf	___fladd@b,f
  8314     14C7  0DCD               	rlf	___fladd@b+1,f
  8315     14C8  0DCE               	rlf	___fladd@b+2,f
  8316     14C9  0DCF               	rlf	___fladd@b+3,f
  8317     14CA  0BD4               	decfsz	??___fladd,f
  8318     14CB  2CC5               	goto	u4025
  8319     14CC  1BDF               	btfsc	___fladd@grs,7
  8320     14CD  144C               	bsf	___fladd@b,0
  8321     14CE  1C5F               	btfss	___fladd@grs,0
  8322     14CF  2CD2               	goto	l2847
  8323     14D0  1403               	setc
  8324     14D1  2CD3               	goto	L8
  8325     14D2                     l2847:
  8326     14D2  1003               	clrc
  8327     14D3                     L8:
  8328     14D3  0DDF               	rlf	___fladd@grs,f
  8329     14D4  085E               	movf	___fladd@bexp,w
  8330     14D5  1903               	btfsc	3,2
  8331     14D6  2CD9               	goto	l2853
  8332     14D7  3001               	movlw	1
  8333     14D8  02DE               	subwf	___fladd@bexp,f
  8334     14D9                     l2853:
  8335     14D9  1FCE               	btfss	___fladd@b+2,7
  8336     14DA  2CC3               	goto	l2839
  8337     14DB                     l2855:
  8338     14DB  01DD               	clrf	___fladd@aexp
  8339     14DC  1FDF               	btfss	___fladd@grs,7
  8340     14DD  2CE6               	goto	l2865
  8341     14DE  085F               	movf	___fladd@grs,w
  8342     14DF  397F               	andlw	127
  8343     14E0  1903               	btfsc	3,2
  8344     14E1  184C               	btfsc	___fladd@b,0
  8345     14E2  2CE4               	goto	l2861
  8346     14E3  2CE6               	goto	l2865
  8347     14E4                     l2861:
  8348     14E4  01DD               	clrf	___fladd@aexp
  8349     14E5  0ADD               	incf	___fladd@aexp,f
  8350     14E6                     l2865:
  8351     14E6  085D               	movf	___fladd@aexp,w
  8352     14E7  1903               	btfsc	3,2
  8353     14E8  2D19               	goto	l2875
  8354     14E9  3001               	movlw	1
  8355     14EA  07CC               	addwf	___fladd@b,f
  8356     14EB  3000               	movlw	0
  8357     14EC  1803               	skipnc
  8358     14ED  3001               	movlw	1
  8359     14EE  07CD               	addwf	___fladd@b+1,f
  8360     14EF  3000               	movlw	0
  8361     14F0  1803               	skipnc
  8362     14F1  3001               	movlw	1
  8363     14F2  07CE               	addwf	___fladd@b+2,f
  8364     14F3  3000               	movlw	0
  8365     14F4  1803               	skipnc
  8366     14F5  3001               	movlw	1
  8367     14F6  07CF               	addwf	___fladd@b+3,f
  8368     14F7  1C4F               	btfss	___fladd@b+3,0
  8369     14F8  2D19               	goto	l2875
  8370     14F9  084C               	movf	___fladd@b,w
  8371     14FA  00D4               	movwf	??___fladd
  8372     14FB  084D               	movf	___fladd@b+1,w
  8373     14FC  00D5               	movwf	??___fladd+1
  8374     14FD  084E               	movf	___fladd@b+2,w
  8375     14FE  00D6               	movwf	??___fladd+2
  8376     14FF  084F               	movf	___fladd@b+3,w
  8377     1500  00D7               	movwf	??___fladd+3
  8378     1501  3001               	movlw	1
  8379     1502  00D8               	movwf	??___fladd+4
  8380     1503                     u4125:
  8381     1503  0D57               	rlf	??___fladd+3,w
  8382     1504  0CD7               	rrf	??___fladd+3,f
  8383     1505  0CD6               	rrf	??___fladd+2,f
  8384     1506  0CD5               	rrf	??___fladd+1,f
  8385     1507  0CD4               	rrf	??___fladd,f
  8386     1508  0BD8               	decfsz	??___fladd+4,f
  8387     1509  2D03               	goto	u4125
  8388     150A  0857               	movf	??___fladd+3,w
  8389     150B  00CF               	movwf	___fladd@b+3
  8390     150C  0856               	movf	??___fladd+2,w
  8391     150D  00CE               	movwf	___fladd@b+2
  8392     150E  0855               	movf	??___fladd+1,w
  8393     150F  00CD               	movwf	___fladd@b+1
  8394     1510  0854               	movf	??___fladd,w
  8395     1511  00CC               	movwf	___fladd@b
  8396     1512  0A5E               	incf	___fladd@bexp,w
  8397     1513  1903               	btfsc	3,2
  8398     1514  2D19               	goto	l2875
  8399     1515  3001               	movlw	1
  8400     1516  00FF               	movwf	127
  8401     1517  087F               	movf	127,w
  8402     1518  07DE               	addwf	___fladd@bexp,f
  8403     1519                     l2875:
  8404     1519  0A5E               	incf	___fladd@bexp,w
  8405     151A  1D03               	btfss	3,2
  8406     151B  085E               	movf	___fladd@bexp,w
  8407     151C  1D03               	btfss	3,2
  8408     151D  2D29               	goto	l2885
  8409     151E  3000               	movlw	0
  8410     151F  00CF               	movwf	___fladd@b+3
  8411     1520  3000               	movlw	0
  8412     1521  00CE               	movwf	___fladd@b+2
  8413     1522  3000               	movlw	0
  8414     1523  00CD               	movwf	___fladd@b+1
  8415     1524  3000               	movlw	0
  8416     1525  00CC               	movwf	___fladd@b
  8417     1526  085E               	movf	___fladd@bexp,w
  8418     1527  1903               	btfsc	3,2
  8419     1528  01DC               	clrf	___fladd@signs
  8420     1529                     l2885:
  8421     1529  1C5E               	btfss	___fladd@bexp,0
  8422     152A  2D2D               	goto	l2889
  8423     152B  17CE               	bsf	___fladd@b+2,7
  8424     152C  2D31               	goto	l2891
  8425     152D                     l2889:
  8426     152D  307F               	movlw	127
  8427     152E  00FF               	movwf	127
  8428     152F  087F               	movf	127,w
  8429     1530  05CE               	andwf	___fladd@b+2,f
  8430     1531                     l2891:
  8431     1531  085E               	movf	___fladd@bexp,w
  8432     1532  00D4               	movwf	??___fladd
  8433     1533  1003               	clrc
  8434     1534  0C54               	rrf	??___fladd,w
  8435     1535  00CF               	movwf	___fladd@b+3
  8436     1536  1FDC               	btfss	___fladd@signs,7
  8437     1537  0008               	return
  8438     1538  17CF               	bsf	___fladd@b+3,7
  8439     1539  0008               	return
  8440     153A                     __end_of___fladd:
  8441                           
  8442                           	psect	text20
  8443     0800                     __ptext20:	
  8444 ;; *************** function ___flneg *****************
  8445 ;; Defined at:
  8446 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\flneg.c"
  8447 ;; Parameters:    Size  Location     Type
  8448 ;;  f1              4    0[COMMON] unsigned char 
  8449 ;; Auto vars:     Size  Location     Type
  8450 ;;		None
  8451 ;; Return value:  Size  Location     Type
  8452 ;;                  4    0[COMMON] unsigned char 
  8453 ;; Registers used:
  8454 ;;		wreg
  8455 ;; Tracked objects:
  8456 ;;		On entry : 300/100
  8457 ;;		On exit  : 300/100
  8458 ;;		Unchanged: 300/0
  8459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8460 ;;      Params:         4       0       0       0       0
  8461 ;;      Locals:         0       0       0       0       0
  8462 ;;      Temps:          0       0       0       0       0
  8463 ;;      Totals:         4       0       0       0       0
  8464 ;;Total ram usage:        4 bytes
  8465 ;; Hardware stack levels used: 1
  8466 ;; This function calls:
  8467 ;;		Nothing
  8468 ;; This function is called by:
  8469 ;;		_sprintf
  8470 ;; This function uses a non-reentrant model
  8471 ;;
  8472                           
  8473     0800                     ___flneg:	
  8474                           ;psect for function ___flneg
  8475                           
  8476                           
  8477                           ;incstack = 0
  8478                           ; Regs used in ___flneg: [wreg]
  8479     0800  0873               	movf	___flneg@f1+3,w
  8480     0801  0472               	iorwf	___flneg@f1+2,w
  8481     0802  0471               	iorwf	___flneg@f1+1,w
  8482     0803  0470               	iorwf	___flneg@f1,w
  8483     0804  1903               	skipnz
  8484     0805  0008               	return
  8485     0806  3080               	movlw	128
  8486     0807  06F3               	xorwf	___flneg@f1+3,f
  8487     0808  0008               	return
  8488     0809                     __end_of___flneg:
  8489                           
  8490                           	psect	text21
  8491     1ECC                     __ptext21:	
  8492 ;; *************** function ___flge *****************
  8493 ;; Defined at:
  8494 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\flge.c"
  8495 ;; Parameters:    Size  Location     Type
  8496 ;;  ff1             4    0[COMMON] unsigned char 
  8497 ;;  ff2             4    4[COMMON] unsigned char 
  8498 ;; Auto vars:     Size  Location     Type
  8499 ;;		None
  8500 ;; Return value:  Size  Location     Type
  8501 ;;		None               void
  8502 ;; Registers used:
  8503 ;;		wreg, status,2, status,0
  8504 ;; Tracked objects:
  8505 ;;		On entry : 300/100
  8506 ;;		On exit  : 300/100
  8507 ;;		Unchanged: 300/0
  8508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8509 ;;      Params:         8       0       0       0       0
  8510 ;;      Locals:         0       0       0       0       0
  8511 ;;      Temps:          4       0       0       0       0
  8512 ;;      Totals:        12       0       0       0       0
  8513 ;;Total ram usage:       12 bytes
  8514 ;; Hardware stack levels used: 1
  8515 ;; This function calls:
  8516 ;;		Nothing
  8517 ;; This function is called by:
  8518 ;;		_sprintf
  8519 ;; This function uses a non-reentrant model
  8520 ;;
  8521                           
  8522     1ECC                     ___flge:	
  8523                           ;psect for function ___flge
  8524                           
  8525                           
  8526                           ;incstack = 0
  8527                           ; Regs used in ___flge: [wreg+status,2+status,0]
  8528     1ECC  3000               	movlw	0
  8529     1ECD  0570               	andwf	___flge@ff1,w
  8530     1ECE  00F8               	movwf	??___flge
  8531     1ECF  3000               	movlw	0
  8532     1ED0  0571               	andwf	___flge@ff1+1,w
  8533     1ED1  00F9               	movwf	??___flge+1
  8534     1ED2  3080               	movlw	128
  8535     1ED3  0572               	andwf	___flge@ff1+2,w
  8536     1ED4  00FA               	movwf	??___flge+2
  8537     1ED5  307F               	movlw	127
  8538     1ED6  0573               	andwf	___flge@ff1+3,w
  8539     1ED7  00FB               	movwf	??___flge+3
  8540     1ED8  087B               	movf	??___flge+3,w
  8541     1ED9  047A               	iorwf	??___flge+2,w
  8542     1EDA  0479               	iorwf	??___flge+1,w
  8543     1EDB  0478               	iorwf	??___flge,w
  8544     1EDC  1D03               	skipz
  8545     1EDD  2EE6               	goto	l569
  8546     1EDE  3000               	movlw	0
  8547     1EDF  00F3               	movwf	___flge@ff1+3
  8548     1EE0  3000               	movlw	0
  8549     1EE1  00F2               	movwf	___flge@ff1+2
  8550     1EE2  3000               	movlw	0
  8551     1EE3  00F1               	movwf	___flge@ff1+1
  8552     1EE4  3000               	movlw	0
  8553     1EE5  00F0               	movwf	___flge@ff1
  8554     1EE6                     l569:
  8555     1EE6  3000               	movlw	0
  8556     1EE7  0574               	andwf	___flge@ff2,w
  8557     1EE8  00F8               	movwf	??___flge
  8558     1EE9  3000               	movlw	0
  8559     1EEA  0575               	andwf	___flge@ff2+1,w
  8560     1EEB  00F9               	movwf	??___flge+1
  8561     1EEC  3080               	movlw	128
  8562     1EED  0576               	andwf	___flge@ff2+2,w
  8563     1EEE  00FA               	movwf	??___flge+2
  8564     1EEF  307F               	movlw	127
  8565     1EF0  0577               	andwf	___flge@ff2+3,w
  8566     1EF1  00FB               	movwf	??___flge+3
  8567     1EF2  087B               	movf	??___flge+3,w
  8568     1EF3  047A               	iorwf	??___flge+2,w
  8569     1EF4  0479               	iorwf	??___flge+1,w
  8570     1EF5  0478               	iorwf	??___flge,w
  8571     1EF6  1D03               	skipz
  8572     1EF7  2F00               	goto	l3309
  8573     1EF8  3000               	movlw	0
  8574     1EF9  00F7               	movwf	___flge@ff2+3
  8575     1EFA  3000               	movlw	0
  8576     1EFB  00F6               	movwf	___flge@ff2+2
  8577     1EFC  3000               	movlw	0
  8578     1EFD  00F5               	movwf	___flge@ff2+1
  8579     1EFE  3000               	movlw	0
  8580     1EFF  00F4               	movwf	___flge@ff2
  8581     1F00                     l3309:
  8582     1F00  1FF3               	btfss	___flge@ff1+3,7
  8583     1F01  2F26               	goto	l3313
  8584     1F02  3000               	movlw	0
  8585     1F03  00F8               	movwf	??___flge
  8586     1F04  3000               	movlw	0
  8587     1F05  00F9               	movwf	??___flge+1
  8588     1F06  3000               	movlw	0
  8589     1F07  00FA               	movwf	??___flge+2
  8590     1F08  3080               	movlw	128
  8591     1F09  00FB               	movwf	??___flge+3
  8592     1F0A  0870               	movf	___flge@ff1,w
  8593     1F0B  02F8               	subwf	??___flge,f
  8594     1F0C  0871               	movf	___flge@ff1+1,w
  8595     1F0D  1C03               	skipc
  8596     1F0E  0F71               	incfsz	___flge@ff1+1,w
  8597     1F0F  2F11               	goto	u5271
  8598     1F10  2F12               	goto	u5272
  8599     1F11                     u5271:
  8600     1F11  02F9               	subwf	??___flge+1,f
  8601     1F12                     u5272:
  8602     1F12  0872               	movf	___flge@ff1+2,w
  8603     1F13  1C03               	skipc
  8604     1F14  0F72               	incfsz	___flge@ff1+2,w
  8605     1F15  2F17               	goto	u5273
  8606     1F16  2F18               	goto	u5274
  8607     1F17                     u5273:
  8608     1F17  02FA               	subwf	??___flge+2,f
  8609     1F18                     u5274:
  8610     1F18  0873               	movf	___flge@ff1+3,w
  8611     1F19  1C03               	skipc
  8612     1F1A  0F73               	incfsz	___flge@ff1+3,w
  8613     1F1B  2F1D               	goto	u5275
  8614     1F1C  2F1E               	goto	u5276
  8615     1F1D                     u5275:
  8616     1F1D  02FB               	subwf	??___flge+3,f
  8617     1F1E                     u5276:
  8618     1F1E  087B               	movf	??___flge+3,w
  8619     1F1F  00F3               	movwf	___flge@ff1+3
  8620     1F20  087A               	movf	??___flge+2,w
  8621     1F21  00F2               	movwf	___flge@ff1+2
  8622     1F22  0879               	movf	??___flge+1,w
  8623     1F23  00F1               	movwf	___flge@ff1+1
  8624     1F24  0878               	movf	??___flge,w
  8625     1F25  00F0               	movwf	___flge@ff1
  8626     1F26                     l3313:
  8627     1F26  1FF7               	btfss	___flge@ff2+3,7
  8628     1F27  2F4C               	goto	l572
  8629     1F28  3000               	movlw	0
  8630     1F29  00F8               	movwf	??___flge
  8631     1F2A  3000               	movlw	0
  8632     1F2B  00F9               	movwf	??___flge+1
  8633     1F2C  3000               	movlw	0
  8634     1F2D  00FA               	movwf	??___flge+2
  8635     1F2E  3080               	movlw	128
  8636     1F2F  00FB               	movwf	??___flge+3
  8637     1F30  0874               	movf	___flge@ff2,w
  8638     1F31  02F8               	subwf	??___flge,f
  8639     1F32  0875               	movf	___flge@ff2+1,w
  8640     1F33  1C03               	skipc
  8641     1F34  0F75               	incfsz	___flge@ff2+1,w
  8642     1F35  2F37               	goto	u5291
  8643     1F36  2F38               	goto	u5292
  8644     1F37                     u5291:
  8645     1F37  02F9               	subwf	??___flge+1,f
  8646     1F38                     u5292:
  8647     1F38  0876               	movf	___flge@ff2+2,w
  8648     1F39  1C03               	skipc
  8649     1F3A  0F76               	incfsz	___flge@ff2+2,w
  8650     1F3B  2F3D               	goto	u5293
  8651     1F3C  2F3E               	goto	u5294
  8652     1F3D                     u5293:
  8653     1F3D  02FA               	subwf	??___flge+2,f
  8654     1F3E                     u5294:
  8655     1F3E  0877               	movf	___flge@ff2+3,w
  8656     1F3F  1C03               	skipc
  8657     1F40  0F77               	incfsz	___flge@ff2+3,w
  8658     1F41  2F43               	goto	u5295
  8659     1F42  2F44               	goto	u5296
  8660     1F43                     u5295:
  8661     1F43  02FB               	subwf	??___flge+3,f
  8662     1F44                     u5296:
  8663     1F44  087B               	movf	??___flge+3,w
  8664     1F45  00F7               	movwf	___flge@ff2+3
  8665     1F46  087A               	movf	??___flge+2,w
  8666     1F47  00F6               	movwf	___flge@ff2+2
  8667     1F48  0879               	movf	??___flge+1,w
  8668     1F49  00F5               	movwf	___flge@ff2+1
  8669     1F4A  0878               	movf	??___flge,w
  8670     1F4B  00F4               	movwf	___flge@ff2
  8671     1F4C                     l572:
  8672     1F4C  3080               	movlw	128
  8673     1F4D  06F3               	xorwf	___flge@ff1+3,f
  8674     1F4E  3080               	movlw	128
  8675     1F4F  06F7               	xorwf	___flge@ff2+3,f
  8676     1F50  0877               	movf	___flge@ff2+3,w
  8677     1F51  0273               	subwf	___flge@ff1+3,w
  8678     1F52  1D03               	skipz
  8679     1F53  0008               	return
  8680     1F54  0876               	movf	___flge@ff2+2,w
  8681     1F55  0272               	subwf	___flge@ff1+2,w
  8682     1F56  1D03               	skipz
  8683     1F57  0008               	return
  8684     1F58  0875               	movf	___flge@ff2+1,w
  8685     1F59  0271               	subwf	___flge@ff1+1,w
  8686     1F5A  1D03               	skipz
  8687     1F5B  0008               	return
  8688     1F5C  0874               	movf	___flge@ff2,w
  8689     1F5D  0270               	subwf	___flge@ff1,w
  8690     1F5E  0008               	return
  8691     1F5F                     __end_of___flge:
  8692                           
  8693                           	psect	text22
  8694     1CCF                     __ptext22:	
  8695 ;; *************** function ___fleq *****************
  8696 ;; Defined at:
  8697 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\fleq.c"
  8698 ;; Parameters:    Size  Location     Type
  8699 ;;  ff1             4    0[COMMON] unsigned char 
  8700 ;;  ff2             4    4[COMMON] unsigned char 
  8701 ;; Auto vars:     Size  Location     Type
  8702 ;;		None
  8703 ;; Return value:  Size  Location     Type
  8704 ;;		None               void
  8705 ;; Registers used:
  8706 ;;		wreg, status,2, status,0
  8707 ;; Tracked objects:
  8708 ;;		On entry : 300/100
  8709 ;;		On exit  : 300/100
  8710 ;;		Unchanged: 300/0
  8711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8712 ;;      Params:         8       0       0       0       0
  8713 ;;      Locals:         0       0       0       0       0
  8714 ;;      Temps:          4       0       0       0       0
  8715 ;;      Totals:        12       0       0       0       0
  8716 ;;Total ram usage:       12 bytes
  8717 ;; Hardware stack levels used: 1
  8718 ;; This function calls:
  8719 ;;		Nothing
  8720 ;; This function is called by:
  8721 ;;		_sprintf
  8722 ;; This function uses a non-reentrant model
  8723 ;;
  8724                           
  8725     1CCF                     ___fleq:	
  8726                           ;psect for function ___fleq
  8727                           
  8728                           
  8729                           ;incstack = 0
  8730                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  8731     1CCF  3000               	movlw	0
  8732     1CD0  0570               	andwf	___fleq@ff1,w
  8733     1CD1  00F8               	movwf	??___fleq
  8734     1CD2  3000               	movlw	0
  8735     1CD3  0571               	andwf	___fleq@ff1+1,w
  8736     1CD4  00F9               	movwf	??___fleq+1
  8737     1CD5  3080               	movlw	128
  8738     1CD6  0572               	andwf	___fleq@ff1+2,w
  8739     1CD7  00FA               	movwf	??___fleq+2
  8740     1CD8  307F               	movlw	127
  8741     1CD9  0573               	andwf	___fleq@ff1+3,w
  8742     1CDA  00FB               	movwf	??___fleq+3
  8743     1CDB  087B               	movf	??___fleq+3,w
  8744     1CDC  047A               	iorwf	??___fleq+2,w
  8745     1CDD  0479               	iorwf	??___fleq+1,w
  8746     1CDE  0478               	iorwf	??___fleq,w
  8747     1CDF  1D03               	skipz
  8748     1CE0  2CE9               	goto	l564
  8749     1CE1  3000               	movlw	0
  8750     1CE2  00F3               	movwf	___fleq@ff1+3
  8751     1CE3  3000               	movlw	0
  8752     1CE4  00F2               	movwf	___fleq@ff1+2
  8753     1CE5  3000               	movlw	0
  8754     1CE6  00F1               	movwf	___fleq@ff1+1
  8755     1CE7  3000               	movlw	0
  8756     1CE8  00F0               	movwf	___fleq@ff1
  8757     1CE9                     l564:
  8758     1CE9  3000               	movlw	0
  8759     1CEA  0574               	andwf	___fleq@ff2,w
  8760     1CEB  00F8               	movwf	??___fleq
  8761     1CEC  3000               	movlw	0
  8762     1CED  0575               	andwf	___fleq@ff2+1,w
  8763     1CEE  00F9               	movwf	??___fleq+1
  8764     1CEF  3080               	movlw	128
  8765     1CF0  0576               	andwf	___fleq@ff2+2,w
  8766     1CF1  00FA               	movwf	??___fleq+2
  8767     1CF2  307F               	movlw	127
  8768     1CF3  0577               	andwf	___fleq@ff2+3,w
  8769     1CF4  00FB               	movwf	??___fleq+3
  8770     1CF5  087B               	movf	??___fleq+3,w
  8771     1CF6  047A               	iorwf	??___fleq+2,w
  8772     1CF7  0479               	iorwf	??___fleq+1,w
  8773     1CF8  0478               	iorwf	??___fleq,w
  8774     1CF9  1D03               	skipz
  8775     1CFA  2D03               	goto	l565
  8776     1CFB  3000               	movlw	0
  8777     1CFC  00F7               	movwf	___fleq@ff2+3
  8778     1CFD  3000               	movlw	0
  8779     1CFE  00F6               	movwf	___fleq@ff2+2
  8780     1CFF  3000               	movlw	0
  8781     1D00  00F5               	movwf	___fleq@ff2+1
  8782     1D01  3000               	movlw	0
  8783     1D02  00F4               	movwf	___fleq@ff2
  8784     1D03                     l565:
  8785     1D03  0877               	movf	___fleq@ff2+3,w
  8786     1D04  0673               	xorwf	___fleq@ff1+3,w
  8787     1D05  1D03               	skipz
  8788     1D06  2D11               	goto	u5235
  8789     1D07  0876               	movf	___fleq@ff2+2,w
  8790     1D08  0672               	xorwf	___fleq@ff1+2,w
  8791     1D09  1D03               	skipz
  8792     1D0A  2D11               	goto	u5235
  8793     1D0B  0875               	movf	___fleq@ff2+1,w
  8794     1D0C  0671               	xorwf	___fleq@ff1+1,w
  8795     1D0D  1D03               	skipz
  8796     1D0E  2D11               	goto	u5235
  8797     1D0F  0874               	movf	___fleq@ff2,w
  8798     1D10  0670               	xorwf	___fleq@ff1,w
  8799     1D11                     u5235:
  8800     1D11  1903               	skipnz
  8801     1D12  2D15               	goto	l3299
  8802     1D13  1003               	clrc
  8803     1D14  0008               	return
  8804     1D15                     l3299:
  8805     1D15  1403               	setc
  8806     1D16  0008               	return
  8807     1D17                     __end_of___fleq:
  8808                           
  8809                           	psect	text23
  8810     082C                     __ptext23:	
  8811 ;; *************** function ___fldiv *****************
  8812 ;; Defined at:
  8813 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\sprcdiv.c"
  8814 ;; Parameters:    Size  Location     Type
  8815 ;;  a               4    0[BANK0 ] unsigned char 
  8816 ;;  b               4    4[BANK0 ] unsigned char 
  8817 ;; Auto vars:     Size  Location     Type
  8818 ;;  grs             4   20[BANK0 ] unsigned long 
  8819 ;;  rem             4   13[BANK0 ] unsigned long 
  8820 ;;  new_exp         2   18[BANK0 ] int 
  8821 ;;  aexp            1   25[BANK0 ] unsigned char 
  8822 ;;  bexp            1   24[BANK0 ] unsigned char 
  8823 ;;  sign            1   17[BANK0 ] unsigned char 
  8824 ;; Return value:  Size  Location     Type
  8825 ;;                  4    0[BANK0 ] unsigned char 
  8826 ;; Registers used:
  8827 ;;		wreg, status,2, status,0, btemp+1
  8828 ;; Tracked objects:
  8829 ;;		On entry : 300/0
  8830 ;;		On exit  : 300/0
  8831 ;;		Unchanged: 0/0
  8832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8833 ;;      Params:         0       8       0       0       0
  8834 ;;      Locals:         0      13       0       0       0
  8835 ;;      Temps:          0       5       0       0       0
  8836 ;;      Totals:         0      26       0       0       0
  8837 ;;Total ram usage:       26 bytes
  8838 ;; Hardware stack levels used: 1
  8839 ;; This function calls:
  8840 ;;		Nothing
  8841 ;; This function is called by:
  8842 ;;		_main
  8843 ;; This function uses a non-reentrant model
  8844 ;;
  8845                           
  8846     082C                     ___fldiv:	
  8847                           ;psect for function ___fldiv
  8848                           
  8849                           
  8850                           ;incstack = 0
  8851                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  8852     082C  0827               	movf	___fldiv@b+3,w
  8853     082D  3980               	andlw	128
  8854     082E  00B1               	movwf	___fldiv@sign
  8855     082F  0827               	movf	___fldiv@b+3,w
  8856     0830  00A8               	movwf	??___fldiv
  8857     0831  0728               	addwf	??___fldiv,w
  8858     0832  00B8               	movwf	___fldiv@bexp
  8859     0833  1BA6               	btfsc	___fldiv@b+2,7
  8860     0834  1438               	bsf	___fldiv@bexp,0
  8861     0835  0838               	movf	___fldiv@bexp,w
  8862     0836  1903               	btfsc	3,2
  8863     0837  2846               	goto	l3821
  8864     0838  0A38               	incf	___fldiv@bexp,w
  8865     0839  1D03               	btfss	3,2
  8866     083A  2843               	goto	l3817
  8867     083B  3000               	movlw	0
  8868     083C  00A7               	movwf	___fldiv@b+3
  8869     083D  3000               	movlw	0
  8870     083E  00A6               	movwf	___fldiv@b+2
  8871     083F  3000               	movlw	0
  8872     0840  00A5               	movwf	___fldiv@b+1
  8873     0841  3000               	movlw	0
  8874     0842  00A4               	movwf	___fldiv@b
  8875     0843                     l3817:
  8876     0843  17A6               	bsf	___fldiv@b+2,7
  8877     0844  01A7               	clrf	___fldiv@b+3
  8878     0845  284E               	goto	l3823
  8879     0846                     l3821:
  8880     0846  3000               	movlw	0
  8881     0847  00A7               	movwf	___fldiv@b+3
  8882     0848  3000               	movlw	0
  8883     0849  00A6               	movwf	___fldiv@b+2
  8884     084A  3000               	movlw	0
  8885     084B  00A5               	movwf	___fldiv@b+1
  8886     084C  3000               	movlw	0
  8887     084D  00A4               	movwf	___fldiv@b
  8888     084E                     l3823:
  8889     084E  0823               	movf	___fldiv@a+3,w
  8890     084F  3980               	andlw	128
  8891     0850  00FF               	movwf	127
  8892     0851  087F               	movf	127,w
  8893     0852  06B1               	xorwf	___fldiv@sign,f
  8894     0853  0823               	movf	___fldiv@a+3,w
  8895     0854  00A8               	movwf	??___fldiv
  8896     0855  0728               	addwf	??___fldiv,w
  8897     0856  00B9               	movwf	___fldiv@aexp
  8898     0857  1BA2               	btfsc	___fldiv@a+2,7
  8899     0858  1439               	bsf	___fldiv@aexp,0
  8900     0859  0839               	movf	___fldiv@aexp,w
  8901     085A  1903               	btfsc	3,2
  8902     085B  286A               	goto	l3841
  8903     085C  0A39               	incf	___fldiv@aexp,w
  8904     085D  1D03               	btfss	3,2
  8905     085E  2867               	goto	l3837
  8906     085F  3000               	movlw	0
  8907     0860  00A3               	movwf	___fldiv@a+3
  8908     0861  3000               	movlw	0
  8909     0862  00A2               	movwf	___fldiv@a+2
  8910     0863  3000               	movlw	0
  8911     0864  00A1               	movwf	___fldiv@a+1
  8912     0865  3000               	movlw	0
  8913     0866  00A0               	movwf	___fldiv@a
  8914     0867                     l3837:
  8915     0867  17A2               	bsf	___fldiv@a+2,7
  8916     0868  01A3               	clrf	___fldiv@a+3
  8917     0869  2872               	goto	l761
  8918     086A                     l3841:
  8919     086A  3000               	movlw	0
  8920     086B  00A3               	movwf	___fldiv@a+3
  8921     086C  3000               	movlw	0
  8922     086D  00A2               	movwf	___fldiv@a+2
  8923     086E  3000               	movlw	0
  8924     086F  00A1               	movwf	___fldiv@a+1
  8925     0870  3000               	movlw	0
  8926     0871  00A0               	movwf	___fldiv@a
  8927     0872                     l761:
  8928     0872  0823               	movf	___fldiv@a+3,w
  8929     0873  0422               	iorwf	___fldiv@a+2,w
  8930     0874  0421               	iorwf	___fldiv@a+1,w
  8931     0875  0420               	iorwf	___fldiv@a,w
  8932     0876  1D03               	skipz
  8933     0877  2891               	goto	l3851
  8934     0878  3000               	movlw	0
  8935     0879  00A7               	movwf	___fldiv@b+3
  8936     087A  3000               	movlw	0
  8937     087B  00A6               	movwf	___fldiv@b+2
  8938     087C  3000               	movlw	0
  8939     087D  00A5               	movwf	___fldiv@b+1
  8940     087E  3000               	movlw	0
  8941     087F  00A4               	movwf	___fldiv@b
  8942     0880  3080               	movlw	128
  8943     0881  04A6               	iorwf	___fldiv@b+2,f
  8944     0882  307F               	movlw	127
  8945     0883  04A7               	iorwf	___fldiv@b+3,f
  8946     0884                     l3845:
  8947     0884  0831               	movf	___fldiv@sign,w
  8948     0885  00FF               	movwf	127
  8949     0886  087F               	movf	127,w
  8950     0887  04A7               	iorwf	___fldiv@b+3,f
  8951     0888  0827               	movf	___fldiv@b+3,w
  8952     0889  00A3               	movwf	?___fldiv+3
  8953     088A  0826               	movf	___fldiv@b+2,w
  8954     088B  00A2               	movwf	?___fldiv+2
  8955     088C  0825               	movf	___fldiv@b+1,w
  8956     088D  00A1               	movwf	?___fldiv+1
  8957     088E  0824               	movf	___fldiv@b,w
  8958     088F  00A0               	movwf	?___fldiv
  8959     0890  0008               	return
  8960     0891                     l3851:
  8961     0891  0838               	movf	___fldiv@bexp,w
  8962     0892  1D03               	btfss	3,2
  8963     0893  289D               	goto	l3857
  8964     0894  3000               	movlw	0
  8965     0895  00A3               	movwf	?___fldiv+3
  8966     0896  3000               	movlw	0
  8967     0897  00A2               	movwf	?___fldiv+2
  8968     0898  3000               	movlw	0
  8969     0899  00A1               	movwf	?___fldiv+1
  8970     089A  3000               	movlw	0
  8971     089B  00A0               	movwf	?___fldiv
  8972     089C  0008               	return
  8973     089D                     l3857:
  8974     089D  0838               	movf	___fldiv@bexp,w
  8975     089E  00A8               	movwf	??___fldiv
  8976     089F  01A9               	clrf	??___fldiv+1
  8977     08A0  0829               	movf	??___fldiv+1,w
  8978     08A1  00AB               	movwf	??___fldiv+3
  8979     08A2  0839               	movf	___fldiv@aexp,w
  8980     08A3  0228               	subwf	??___fldiv,w
  8981     08A4  00AA               	movwf	??___fldiv+2
  8982     08A5  1C03               	skipc
  8983     08A6  03AB               	decf	??___fldiv+3,f
  8984     08A7  082A               	movf	??___fldiv+2,w
  8985     08A8  3E7F               	addlw	127
  8986     08A9  00B2               	movwf	___fldiv@new_exp
  8987     08AA  082B               	movf	??___fldiv+3,w
  8988     08AB  1803               	skipnc
  8989     08AC  3E01               	addlw	1
  8990     08AD  3E00               	addlw	0
  8991     08AE  00B3               	movwf	___fldiv@new_exp+1
  8992     08AF  0827               	movf	___fldiv@b+3,w
  8993     08B0  00B0               	movwf	___fldiv@rem+3
  8994     08B1  0826               	movf	___fldiv@b+2,w
  8995     08B2  00AF               	movwf	___fldiv@rem+2
  8996     08B3  0825               	movf	___fldiv@b+1,w
  8997     08B4  00AE               	movwf	___fldiv@rem+1
  8998     08B5  0824               	movf	___fldiv@b,w
  8999     08B6  00AD               	movwf	___fldiv@rem
  9000     08B7  3000               	movlw	0
  9001     08B8  00A7               	movwf	___fldiv@b+3
  9002     08B9  3000               	movlw	0
  9003     08BA  00A6               	movwf	___fldiv@b+2
  9004     08BB  3000               	movlw	0
  9005     08BC  00A5               	movwf	___fldiv@b+1
  9006     08BD  3000               	movlw	0
  9007     08BE  00A4               	movwf	___fldiv@b
  9008     08BF  3000               	movlw	0
  9009     08C0  00B7               	movwf	___fldiv@grs+3
  9010     08C1  3000               	movlw	0
  9011     08C2  00B6               	movwf	___fldiv@grs+2
  9012     08C3  3000               	movlw	0
  9013     08C4  00B5               	movwf	___fldiv@grs+1
  9014     08C5  3000               	movlw	0
  9015     08C6  00B4               	movwf	___fldiv@grs
  9016     08C7  01B9               	clrf	___fldiv@aexp
  9017     08C8                     l3885:
  9018     08C8  301A               	movlw	26
  9019     08C9  0239               	subwf	___fldiv@aexp,w
  9020     08CA  1803               	btfsc	3,0
  9021     08CB  2910               	goto	l3887
  9022     08CC  0839               	movf	___fldiv@aexp,w
  9023     08CD  1903               	btfsc	3,2
  9024     08CE  28EC               	goto	l3877
  9025     08CF  3001               	movlw	1
  9026     08D0  00A8               	movwf	??___fldiv
  9027     08D1                     u6355:
  9028     08D1  1003               	clrc
  9029     08D2  0DAD               	rlf	___fldiv@rem,f
  9030     08D3  0DAE               	rlf	___fldiv@rem+1,f
  9031     08D4  0DAF               	rlf	___fldiv@rem+2,f
  9032     08D5  0DB0               	rlf	___fldiv@rem+3,f
  9033     08D6  0BA8               	decfsz	??___fldiv,f
  9034     08D7  28D1               	goto	u6355
  9035     08D8  3001               	movlw	1
  9036     08D9  00A8               	movwf	??___fldiv
  9037     08DA                     u6365:
  9038     08DA  1003               	clrc
  9039     08DB  0DA4               	rlf	___fldiv@b,f
  9040     08DC  0DA5               	rlf	___fldiv@b+1,f
  9041     08DD  0DA6               	rlf	___fldiv@b+2,f
  9042     08DE  0DA7               	rlf	___fldiv@b+3,f
  9043     08DF  0BA8               	decfsz	??___fldiv,f
  9044     08E0  28DA               	goto	u6365
  9045     08E1  1BB7               	btfsc	___fldiv@grs+3,7
  9046     08E2  1424               	bsf	___fldiv@b,0
  9047     08E3  3001               	movlw	1
  9048     08E4  00A8               	movwf	??___fldiv
  9049     08E5                     u6385:
  9050     08E5  1003               	clrc
  9051     08E6  0DB4               	rlf	___fldiv@grs,f
  9052     08E7  0DB5               	rlf	___fldiv@grs+1,f
  9053     08E8  0DB6               	rlf	___fldiv@grs+2,f
  9054     08E9  0DB7               	rlf	___fldiv@grs+3,f
  9055     08EA  0BA8               	decfsz	??___fldiv,f
  9056     08EB  28E5               	goto	u6385
  9057     08EC                     l3877:
  9058     08EC  0823               	movf	___fldiv@a+3,w
  9059     08ED  0230               	subwf	___fldiv@rem+3,w
  9060     08EE  1D03               	skipz
  9061     08EF  28FA               	goto	u6395
  9062     08F0  0822               	movf	___fldiv@a+2,w
  9063     08F1  022F               	subwf	___fldiv@rem+2,w
  9064     08F2  1D03               	skipz
  9065     08F3  28FA               	goto	u6395
  9066     08F4  0821               	movf	___fldiv@a+1,w
  9067     08F5  022E               	subwf	___fldiv@rem+1,w
  9068     08F6  1D03               	skipz
  9069     08F7  28FA               	goto	u6395
  9070     08F8  0820               	movf	___fldiv@a,w
  9071     08F9  022D               	subwf	___fldiv@rem,w
  9072     08FA                     u6395:
  9073     08FA  1C03               	skipc
  9074     08FB  290B               	goto	l3883
  9075     08FC  1737               	bsf	___fldiv@grs+3,6
  9076     08FD  0820               	movf	___fldiv@a,w
  9077     08FE  02AD               	subwf	___fldiv@rem,f
  9078     08FF  0821               	movf	___fldiv@a+1,w
  9079     0900  1C03               	skipc
  9080     0901  0F21               	incfsz	___fldiv@a+1,w
  9081     0902  02AE               	subwf	___fldiv@rem+1,f
  9082     0903  0822               	movf	___fldiv@a+2,w
  9083     0904  1C03               	skipc
  9084     0905  0F22               	incfsz	___fldiv@a+2,w
  9085     0906  02AF               	subwf	___fldiv@rem+2,f
  9086     0907  0823               	movf	___fldiv@a+3,w
  9087     0908  1C03               	skipc
  9088     0909  0F23               	incfsz	___fldiv@a+3,w
  9089     090A  02B0               	subwf	___fldiv@rem+3,f
  9090     090B                     l3883:
  9091     090B  3001               	movlw	1
  9092     090C  00FF               	movwf	127
  9093     090D  087F               	movf	127,w
  9094     090E  07B9               	addwf	___fldiv@aexp,f
  9095     090F  28C8               	goto	l3885
  9096     0910                     l3887:
  9097     0910  0830               	movf	___fldiv@rem+3,w
  9098     0911  042F               	iorwf	___fldiv@rem+2,w
  9099     0912  042E               	iorwf	___fldiv@rem+1,w
  9100     0913  042D               	iorwf	___fldiv@rem,w
  9101     0914  1D03               	btfss	3,2
  9102     0915  1434               	bsf	___fldiv@grs,0
  9103     0916                     l3901:
  9104     0916  1BA6               	btfsc	___fldiv@b+2,7
  9105     0917  2933               	goto	l3903
  9106     0918  3001               	movlw	1
  9107     0919  00A8               	movwf	??___fldiv
  9108     091A                     u6425:
  9109     091A  1003               	clrc
  9110     091B  0DA4               	rlf	___fldiv@b,f
  9111     091C  0DA5               	rlf	___fldiv@b+1,f
  9112     091D  0DA6               	rlf	___fldiv@b+2,f
  9113     091E  0DA7               	rlf	___fldiv@b+3,f
  9114     091F  0BA8               	decfsz	??___fldiv,f
  9115     0920  291A               	goto	u6425
  9116     0921  1BB7               	btfsc	___fldiv@grs+3,7
  9117     0922  1424               	bsf	___fldiv@b,0
  9118     0923  3001               	movlw	1
  9119     0924  00A8               	movwf	??___fldiv
  9120     0925                     u6445:
  9121     0925  1003               	clrc
  9122     0926  0DB4               	rlf	___fldiv@grs,f
  9123     0927  0DB5               	rlf	___fldiv@grs+1,f
  9124     0928  0DB6               	rlf	___fldiv@grs+2,f
  9125     0929  0DB7               	rlf	___fldiv@grs+3,f
  9126     092A  0BA8               	decfsz	??___fldiv,f
  9127     092B  2925               	goto	u6445
  9128     092C  30FF               	movlw	255
  9129     092D  07B2               	addwf	___fldiv@new_exp,f
  9130     092E  1803               	skipnc
  9131     092F  0AB3               	incf	___fldiv@new_exp+1,f
  9132     0930  30FF               	movlw	255
  9133     0931  07B3               	addwf	___fldiv@new_exp+1,f
  9134     0932  2916               	goto	l3901
  9135     0933                     l3903:
  9136     0933  01B9               	clrf	___fldiv@aexp
  9137     0934  1FB7               	btfss	___fldiv@grs+3,7
  9138     0935  294C               	goto	l3913
  9139     0936  30FF               	movlw	255
  9140     0937  0534               	andwf	___fldiv@grs,w
  9141     0938  00A8               	movwf	??___fldiv
  9142     0939  30FF               	movlw	255
  9143     093A  0535               	andwf	___fldiv@grs+1,w
  9144     093B  00A9               	movwf	??___fldiv+1
  9145     093C  30FF               	movlw	255
  9146     093D  0536               	andwf	___fldiv@grs+2,w
  9147     093E  00AA               	movwf	??___fldiv+2
  9148     093F  307F               	movlw	127
  9149     0940  0537               	andwf	___fldiv@grs+3,w
  9150     0941  00AB               	movwf	??___fldiv+3
  9151     0942  082B               	movf	??___fldiv+3,w
  9152     0943  042A               	iorwf	??___fldiv+2,w
  9153     0944  0429               	iorwf	??___fldiv+1,w
  9154     0945  0428               	iorwf	??___fldiv,w
  9155     0946  1903               	skipnz
  9156     0947  1824               	btfsc	___fldiv@b,0
  9157     0948  294A               	goto	l3909
  9158     0949  294C               	goto	l3913
  9159     094A                     l3909:
  9160     094A  01B9               	clrf	___fldiv@aexp
  9161     094B  0AB9               	incf	___fldiv@aexp,f
  9162     094C                     l3913:
  9163     094C  0839               	movf	___fldiv@aexp,w
  9164     094D  1903               	btfsc	3,2
  9165     094E  297E               	goto	l3923
  9166     094F  3001               	movlw	1
  9167     0950  07A4               	addwf	___fldiv@b,f
  9168     0951  3000               	movlw	0
  9169     0952  1803               	skipnc
  9170     0953  3001               	movlw	1
  9171     0954  07A5               	addwf	___fldiv@b+1,f
  9172     0955  3000               	movlw	0
  9173     0956  1803               	skipnc
  9174     0957  3001               	movlw	1
  9175     0958  07A6               	addwf	___fldiv@b+2,f
  9176     0959  3000               	movlw	0
  9177     095A  1803               	skipnc
  9178     095B  3001               	movlw	1
  9179     095C  07A7               	addwf	___fldiv@b+3,f
  9180     095D  1C27               	btfss	___fldiv@b+3,0
  9181     095E  297E               	goto	l3923
  9182     095F  0824               	movf	___fldiv@b,w
  9183     0960  00A8               	movwf	??___fldiv
  9184     0961  0825               	movf	___fldiv@b+1,w
  9185     0962  00A9               	movwf	??___fldiv+1
  9186     0963  0826               	movf	___fldiv@b+2,w
  9187     0964  00AA               	movwf	??___fldiv+2
  9188     0965  0827               	movf	___fldiv@b+3,w
  9189     0966  00AB               	movwf	??___fldiv+3
  9190     0967  3001               	movlw	1
  9191     0968  00AC               	movwf	??___fldiv+4
  9192     0969                     u6515:
  9193     0969  0D2B               	rlf	??___fldiv+3,w
  9194     096A  0CAB               	rrf	??___fldiv+3,f
  9195     096B  0CAA               	rrf	??___fldiv+2,f
  9196     096C  0CA9               	rrf	??___fldiv+1,f
  9197     096D  0CA8               	rrf	??___fldiv,f
  9198     096E  0BAC               	decfsz	??___fldiv+4,f
  9199     096F  2969               	goto	u6515
  9200     0970  082B               	movf	??___fldiv+3,w
  9201     0971  00A7               	movwf	___fldiv@b+3
  9202     0972  082A               	movf	??___fldiv+2,w
  9203     0973  00A6               	movwf	___fldiv@b+2
  9204     0974  0829               	movf	??___fldiv+1,w
  9205     0975  00A5               	movwf	___fldiv@b+1
  9206     0976  0828               	movf	??___fldiv,w
  9207     0977  00A4               	movwf	___fldiv@b
  9208     0978  3001               	movlw	1
  9209     0979  07B2               	addwf	___fldiv@new_exp,f
  9210     097A  1803               	skipnc
  9211     097B  0AB3               	incf	___fldiv@new_exp+1,f
  9212     097C  3000               	movlw	0
  9213     097D  07B3               	addwf	___fldiv@new_exp+1,f
  9214     097E                     l3923:
  9215     097E  0833               	movf	___fldiv@new_exp+1,w
  9216     097F  3A80               	xorlw	128
  9217     0980  00FF               	movwf	127
  9218     0981  3080               	movlw	128
  9219     0982  027F               	subwf	127,w
  9220     0983  1D03               	skipz
  9221     0984  2987               	goto	u6525
  9222     0985  30FF               	movlw	255
  9223     0986  0232               	subwf	___fldiv@new_exp,w
  9224     0987                     u6525:
  9225     0987  1C03               	skipc
  9226     0988  2997               	goto	l3927
  9227     0989  30FF               	movlw	255
  9228     098A  1283               	bcf	3,5	;RP0=0, select bank0
  9229     098B  1303               	bcf	3,6	;RP1=0, select bank0
  9230     098C  00B2               	movwf	___fldiv@new_exp
  9231     098D  3000               	movlw	0
  9232     098E  00B3               	movwf	___fldiv@new_exp+1
  9233     098F  3000               	movlw	0
  9234     0990  00A7               	movwf	___fldiv@b+3
  9235     0991  3000               	movlw	0
  9236     0992  00A6               	movwf	___fldiv@b+2
  9237     0993  3000               	movlw	0
  9238     0994  00A5               	movwf	___fldiv@b+1
  9239     0995  3000               	movlw	0
  9240     0996  00A4               	movwf	___fldiv@b
  9241     0997                     l3927:
  9242     0997  1283               	bcf	3,5	;RP0=0, select bank0
  9243     0998  1303               	bcf	3,6	;RP1=0, select bank0
  9244     0999  0833               	movf	___fldiv@new_exp+1,w
  9245     099A  3A80               	xorlw	128
  9246     099B  00FF               	movwf	127
  9247     099C  3080               	movlw	128
  9248     099D  027F               	subwf	127,w
  9249     099E  1D03               	skipz
  9250     099F  29A2               	goto	u6535
  9251     09A0  3001               	movlw	1
  9252     09A1  0232               	subwf	___fldiv@new_exp,w
  9253     09A2                     u6535:
  9254     09A2  1803               	skipnc
  9255     09A3  29B1               	goto	l783
  9256     09A4  1283               	bcf	3,5	;RP0=0, select bank0
  9257     09A5  1303               	bcf	3,6	;RP1=0, select bank0
  9258     09A6  01B2               	clrf	___fldiv@new_exp
  9259     09A7  01B3               	clrf	___fldiv@new_exp+1
  9260     09A8  3000               	movlw	0
  9261     09A9  00A7               	movwf	___fldiv@b+3
  9262     09AA  3000               	movlw	0
  9263     09AB  00A6               	movwf	___fldiv@b+2
  9264     09AC  3000               	movlw	0
  9265     09AD  00A5               	movwf	___fldiv@b+1
  9266     09AE  3000               	movlw	0
  9267     09AF  00A4               	movwf	___fldiv@b
  9268     09B0  01B1               	clrf	___fldiv@sign
  9269     09B1                     l783:
  9270     09B1  1283               	bcf	3,5	;RP0=0, select bank0
  9271     09B2  1303               	bcf	3,6	;RP1=0, select bank0
  9272     09B3  0832               	movf	___fldiv@new_exp,w
  9273     09B4  00B8               	movwf	___fldiv@bexp
  9274     09B5  1C38               	btfss	___fldiv@bexp,0
  9275     09B6  29B9               	goto	l3939
  9276     09B7  17A6               	bsf	___fldiv@b+2,7
  9277     09B8  29BD               	goto	l3941
  9278     09B9                     l3939:
  9279     09B9  307F               	movlw	127
  9280     09BA  00FF               	movwf	127
  9281     09BB  087F               	movf	127,w
  9282     09BC  05A6               	andwf	___fldiv@b+2,f
  9283     09BD                     l3941:
  9284     09BD  0838               	movf	___fldiv@bexp,w
  9285     09BE  00A8               	movwf	??___fldiv
  9286     09BF  1003               	clrc
  9287     09C0  0C28               	rrf	??___fldiv,w
  9288     09C1  00A7               	movwf	___fldiv@b+3
  9289     09C2  2884               	goto	l3845
  9290     09C3                     __end_of___fldiv:
  9291                           
  9292                           	psect	text24
  9293     1C54                     __ptext24:	
  9294 ;; *************** function _UART_Write_Text *****************
  9295 ;; Defined at:
  9296 ;;		line 18 in file "uart_lib.c"
  9297 ;; Parameters:    Size  Location     Type
  9298 ;;  text            2    1[COMMON] PTR unsigned char 
  9299 ;;		 -> STR_21(5), main@combinedText_160(20), STR_17(7), STR_15(5), 
  9300 ;;		 -> main@combinedText(20), STR_11(8), STR_9(5), 
  9301 ;; Auto vars:     Size  Location     Type
  9302 ;;  i               2    6[COMMON] int 
  9303 ;; Return value:  Size  Location     Type
  9304 ;;                  1    wreg      void 
  9305 ;; Registers used:
  9306 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9307 ;; Tracked objects:
  9308 ;;		On entry : 200/800
  9309 ;;		On exit  : 300/0
  9310 ;;		Unchanged: 0/0
  9311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9312 ;;      Params:         2       0       0       0       0
  9313 ;;      Locals:         2       0       0       0       0
  9314 ;;      Temps:          3       0       0       0       0
  9315 ;;      Totals:         7       0       0       0       0
  9316 ;;Total ram usage:        7 bytes
  9317 ;; Hardware stack levels used: 1
  9318 ;; Hardware stack levels required when called: 1
  9319 ;; This function calls:
  9320 ;;		_UART_Write
  9321 ;; This function is called by:
  9322 ;;		_main
  9323 ;; This function uses a non-reentrant model
  9324 ;;
  9325                           
  9326     1C54                     _UART_Write_Text:	
  9327                           ;psect for function _UART_Write_Text
  9328                           
  9329                           
  9330                           ;uart_lib.c: 18: void UART_Write_Text(char *text);uart_lib.c: 19: {;uart_lib.c: 20:   in
      +                          t i;;uart_lib.c: 21:   for(i=0;text[i]!='\0';i++)
  9331                           
  9332                           ;incstack = 0
  9333                           ; Regs used in _UART_Write_Text: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9334     1C54  01F6               	clrf	UART_Write_Text@i
  9335     1C55  01F7               	clrf	UART_Write_Text@i+1
  9336     1C56                     l3801:
  9337     1C56  0876               	movf	UART_Write_Text@i,w
  9338     1C57  0771               	addwf	UART_Write_Text@text,w
  9339     1C58  00F4               	movwf	??_UART_Write_Text+1
  9340     1C59  0872               	movf	UART_Write_Text@text+1,w
  9341     1C5A  00F3               	movwf	??_UART_Write_Text
  9342     1C5B  1803               	skipnc
  9343     1C5C  0AF3               	incf	??_UART_Write_Text,f
  9344     1C5D  1BF6               	btfsc	UART_Write_Text@i,7
  9345     1C5E  03F3               	decf	??_UART_Write_Text,f
  9346     1C5F  0873               	movf	??_UART_Write_Text,w
  9347     1C60  00F5               	movwf	??_UART_Write_Text+2
  9348     1C61  0875               	movf	??_UART_Write_Text+2,w
  9349     1C62  1283               	bcf	3,5	;RP0=0, select bank0
  9350     1C63  1303               	bcf	3,6	;RP1=0, select bank0
  9351     1C64  00FF               	movwf	127
  9352     1C65  0874               	movf	??_UART_Write_Text+1,w
  9353     1C66  0084               	movwf	4
  9354     1C67  160A  158A  2000  160A  158A  	fcall	stringtab
  9355     1C6C  3A00               	xorlw	0
  9356     1C6D  1903               	btfsc	3,2
  9357     1C6E  0008               	return
  9358                           
  9359                           ;uart_lib.c: 22:     UART_Write(text[i]);
  9360     1C6F  0876               	movf	UART_Write_Text@i,w
  9361     1C70  0771               	addwf	UART_Write_Text@text,w
  9362     1C71  00F4               	movwf	??_UART_Write_Text+1
  9363     1C72  0872               	movf	UART_Write_Text@text+1,w
  9364     1C73  00F3               	movwf	??_UART_Write_Text
  9365     1C74  1803               	skipnc
  9366     1C75  0AF3               	incf	??_UART_Write_Text,f
  9367     1C76  1BF6               	btfsc	UART_Write_Text@i,7
  9368     1C77  03F3               	decf	??_UART_Write_Text,f
  9369     1C78  0873               	movf	??_UART_Write_Text,w
  9370     1C79  00F5               	movwf	??_UART_Write_Text+2
  9371     1C7A  0875               	movf	??_UART_Write_Text+2,w
  9372     1C7B  1283               	bcf	3,5	;RP0=0, select bank0
  9373     1C7C  1303               	bcf	3,6	;RP1=0, select bank0
  9374     1C7D  00FF               	movwf	127
  9375     1C7E  0874               	movf	??_UART_Write_Text+1,w
  9376     1C7F  0084               	movwf	4
  9377     1C80  160A  158A  2000  160A  158A  	fcall	stringtab
  9378     1C85  160A  158A  2330  160A  158A  	fcall	_UART_Write
  9379     1C8A  3001               	movlw	1
  9380     1C8B  07F6               	addwf	UART_Write_Text@i,f
  9381     1C8C  1803               	skipnc
  9382     1C8D  0AF7               	incf	UART_Write_Text@i+1,f
  9383     1C8E  3000               	movlw	0
  9384     1C8F  07F7               	addwf	UART_Write_Text@i+1,f
  9385     1C90  2C56               	goto	l3801
  9386     1C91                     __end_of_UART_Write_Text:
  9387                           
  9388                           	psect	text25
  9389     1B30                     __ptext25:	
  9390 ;; *************** function _UART_Write *****************
  9391 ;; Defined at:
  9392 ;;		line 12 in file "uart_lib.c"
  9393 ;; Parameters:    Size  Location     Type
  9394 ;;  data            1    wreg     unsigned char 
  9395 ;; Auto vars:     Size  Location     Type
  9396 ;;  data            1    0[COMMON] unsigned char 
  9397 ;; Return value:  Size  Location     Type
  9398 ;;                  1    wreg      void 
  9399 ;; Registers used:
  9400 ;;		wreg
  9401 ;; Tracked objects:
  9402 ;;		On entry : 300/800
  9403 ;;		On exit  : 300/0
  9404 ;;		Unchanged: 0/0
  9405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9406 ;;      Params:         0       0       0       0       0
  9407 ;;      Locals:         1       0       0       0       0
  9408 ;;      Temps:          0       0       0       0       0
  9409 ;;      Totals:         1       0       0       0       0
  9410 ;;Total ram usage:        1 bytes
  9411 ;; Hardware stack levels used: 1
  9412 ;; This function calls:
  9413 ;;		Nothing
  9414 ;; This function is called by:
  9415 ;;		_UART_Write_Text
  9416 ;; This function uses a non-reentrant model
  9417 ;;
  9418                           
  9419     1B30                     _UART_Write:	
  9420                           ;psect for function _UART_Write
  9421                           
  9422                           
  9423                           ;incstack = 0
  9424                           ; Regs used in _UART_Write: [wreg]
  9425                           ;UART_Write@data stored from wreg
  9426     1B30  00F0               	movwf	UART_Write@data
  9427     1B31                     l161:	
  9428                           ;uart_lib.c: 12: void UART_Write(char data);uart_lib.c: 13: {;uart_lib.c: 14:   while(!T
      +                          RMT);
  9429                           
  9430     1B31  1683               	bsf	3,5	;RP0=1, select bank1
  9431     1B32  1C98               	btfss	24,1	;volatile
  9432     1B33  2B31               	goto	l161
  9433                           
  9434                           ;uart_lib.c: 15:   TXREG = data;
  9435     1B34  0870               	movf	UART_Write@data,w
  9436     1B35  1283               	bcf	3,5	;RP0=0, select bank0
  9437     1B36  0099               	movwf	25	;volatile
  9438     1B37  0008               	return
  9439     1B38                     __end_of_UART_Write:
  9440                           
  9441                           	psect	text26
  9442     1B43                     __ptext26:	
  9443 ;; *************** function _UART_Initialize *****************
  9444 ;; Defined at:
  9445 ;;		line 4 in file "uart_lib.c"
  9446 ;; Parameters:    Size  Location     Type
  9447 ;;		None
  9448 ;; Auto vars:     Size  Location     Type
  9449 ;;		None
  9450 ;; Return value:  Size  Location     Type
  9451 ;;                  1    wreg      void 
  9452 ;; Registers used:
  9453 ;;		wreg, status,2
  9454 ;; Tracked objects:
  9455 ;;		On entry : 300/100
  9456 ;;		On exit  : 300/0
  9457 ;;		Unchanged: 0/0
  9458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9459 ;;      Params:         0       0       0       0       0
  9460 ;;      Locals:         0       0       0       0       0
  9461 ;;      Temps:          0       0       0       0       0
  9462 ;;      Totals:         0       0       0       0       0
  9463 ;;Total ram usage:        0 bytes
  9464 ;; Hardware stack levels used: 1
  9465 ;; This function calls:
  9466 ;;		Nothing
  9467 ;; This function is called by:
  9468 ;;		_main
  9469 ;; This function uses a non-reentrant model
  9470 ;;
  9471                           
  9472     1B43                     _UART_Initialize:	
  9473                           ;psect for function _UART_Initialize
  9474                           
  9475                           
  9476                           ;uart_lib.c: 6:     TXSTA=0b00100100;
  9477                           
  9478                           ;incstack = 0
  9479                           ; Regs used in _UART_Initialize: [wreg+status,2]
  9480     1B43  3024               	movlw	36
  9481     1B44  0098               	movwf	24	;volatile
  9482                           
  9483                           ;uart_lib.c: 7:     RCSTA=0b10010000;
  9484     1B45  3090               	movlw	144
  9485     1B46  1283               	bcf	3,5	;RP0=0, select bank0
  9486     1B47  0098               	movwf	24	;volatile
  9487                           
  9488                           ;uart_lib.c: 8:     SPBRG=25;
  9489     1B48  3019               	movlw	25
  9490     1B49  1683               	bsf	3,5	;RP0=1, select bank1
  9491     1B4A  0099               	movwf	25	;volatile
  9492                           
  9493                           ;uart_lib.c: 9:     TXREG=0x00;
  9494     1B4B  1283               	bcf	3,5	;RP0=0, select bank0
  9495     1B4C  0199               	clrf	25	;volatile
  9496     1B4D  0008               	return
  9497     1B4E                     __end_of_UART_Initialize:
  9498                           
  9499                           	psect	text27
  9500     1C17                     __ptext27:	
  9501 ;; *************** function _Lcd_Write_String *****************
  9502 ;; Defined at:
  9503 ;;		line 96 in file "./lcd.h"
  9504 ;; Parameters:    Size  Location     Type
  9505 ;;  a               2    5[COMMON] PTR unsigned char 
  9506 ;;		 -> STR_24(15), STR_23(15), STR_22(15), STR_20(5), 
  9507 ;;		 -> STR_18(5), STR_16(9), STR_14(10), STR_12(5), 
  9508 ;;		 -> STR_10(9), STR_8(10), main@adcString2(4), STR_6(8), 
  9509 ;;		 -> main@adcString1(4), STR_4(7), STR_3(3), STR_2(8), 
  9510 ;;		 -> STR_1(13), 
  9511 ;; Auto vars:     Size  Location     Type
  9512 ;;  i               2   10[COMMON] int 
  9513 ;; Return value:  Size  Location     Type
  9514 ;;                  1    wreg      void 
  9515 ;; Registers used:
  9516 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9517 ;; Tracked objects:
  9518 ;;		On entry : 0/0
  9519 ;;		On exit  : 300/0
  9520 ;;		Unchanged: 0/0
  9521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9522 ;;      Params:         2       0       0       0       0
  9523 ;;      Locals:         2       0       0       0       0
  9524 ;;      Temps:          3       0       0       0       0
  9525 ;;      Totals:         7       0       0       0       0
  9526 ;;Total ram usage:        7 bytes
  9527 ;; Hardware stack levels used: 1
  9528 ;; Hardware stack levels required when called: 2
  9529 ;; This function calls:
  9530 ;;		_Lcd_Write_Char
  9531 ;; This function is called by:
  9532 ;;		_main
  9533 ;; This function uses a non-reentrant model
  9534 ;;
  9535                           
  9536     1C17                     _Lcd_Write_String:	
  9537                           ;psect for function _Lcd_Write_String
  9538                           
  9539                           
  9540                           ;./lcd.h: 96: void Lcd_Write_String(char *a);./lcd.h: 97: {;./lcd.h: 98:  int i;;./lcd.h
      +                          : 99:  for(i=0;a[i]!='\0';i++)
  9541                           
  9542                           ;incstack = 0
  9543                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9544     1C17  01FA               	clrf	Lcd_Write_String@i
  9545     1C18  01FB               	clrf	Lcd_Write_String@i+1
  9546     1C19                     l3483:
  9547     1C19  087A               	movf	Lcd_Write_String@i,w
  9548     1C1A  0775               	addwf	Lcd_Write_String@a,w
  9549     1C1B  00F8               	movwf	??_Lcd_Write_String+1
  9550     1C1C  0876               	movf	Lcd_Write_String@a+1,w
  9551     1C1D  00F7               	movwf	??_Lcd_Write_String
  9552     1C1E  1803               	skipnc
  9553     1C1F  0AF7               	incf	??_Lcd_Write_String,f
  9554     1C20  1BFA               	btfsc	Lcd_Write_String@i,7
  9555     1C21  03F7               	decf	??_Lcd_Write_String,f
  9556     1C22  0877               	movf	??_Lcd_Write_String,w
  9557     1C23  00F9               	movwf	??_Lcd_Write_String+2
  9558     1C24  0879               	movf	??_Lcd_Write_String+2,w
  9559     1C25  1283               	bcf	3,5	;RP0=0, select bank0
  9560     1C26  1303               	bcf	3,6	;RP1=0, select bank0
  9561     1C27  00FF               	movwf	127
  9562     1C28  0878               	movf	??_Lcd_Write_String+1,w
  9563     1C29  0084               	movwf	4
  9564     1C2A  160A  158A  2000  160A  158A  	fcall	stringtab
  9565     1C2F  3A00               	xorlw	0
  9566     1C30  1903               	btfsc	3,2
  9567     1C31  0008               	return
  9568                           
  9569                           ;./lcd.h: 100:     Lcd_Write_Char(a[i]);
  9570     1C32  087A               	movf	Lcd_Write_String@i,w
  9571     1C33  0775               	addwf	Lcd_Write_String@a,w
  9572     1C34  00F8               	movwf	??_Lcd_Write_String+1
  9573     1C35  0876               	movf	Lcd_Write_String@a+1,w
  9574     1C36  00F7               	movwf	??_Lcd_Write_String
  9575     1C37  1803               	skipnc
  9576     1C38  0AF7               	incf	??_Lcd_Write_String,f
  9577     1C39  1BFA               	btfsc	Lcd_Write_String@i,7
  9578     1C3A  03F7               	decf	??_Lcd_Write_String,f
  9579     1C3B  0877               	movf	??_Lcd_Write_String,w
  9580     1C3C  00F9               	movwf	??_Lcd_Write_String+2
  9581     1C3D  0879               	movf	??_Lcd_Write_String+2,w
  9582     1C3E  1283               	bcf	3,5	;RP0=0, select bank0
  9583     1C3F  1303               	bcf	3,6	;RP1=0, select bank0
  9584     1C40  00FF               	movwf	127
  9585     1C41  0878               	movf	??_Lcd_Write_String+1,w
  9586     1C42  0084               	movwf	4
  9587     1C43  160A  158A  2000  160A  158A  	fcall	stringtab
  9588     1C48  160A  158A  23EA  160A  158A  	fcall	_Lcd_Write_Char
  9589     1C4D  3001               	movlw	1
  9590     1C4E  07FA               	addwf	Lcd_Write_String@i,f
  9591     1C4F  1803               	skipnc
  9592     1C50  0AFB               	incf	Lcd_Write_String@i+1,f
  9593     1C51  3000               	movlw	0
  9594     1C52  07FB               	addwf	Lcd_Write_String@i+1,f
  9595     1C53  2C19               	goto	l3483
  9596     1C54                     __end_of_Lcd_Write_String:
  9597                           
  9598                           	psect	text28
  9599     1BEA                     __ptext28:	
  9600 ;; *************** function _Lcd_Write_Char *****************
  9601 ;; Defined at:
  9602 ;;		line 80 in file "./lcd.h"
  9603 ;; Parameters:    Size  Location     Type
  9604 ;;  a               1    wreg     unsigned char 
  9605 ;; Auto vars:     Size  Location     Type
  9606 ;;  a               1    4[COMMON] unsigned char 
  9607 ;;  y               1    3[COMMON] unsigned char 
  9608 ;;  temp            1    2[COMMON] unsigned char 
  9609 ;; Return value:  Size  Location     Type
  9610 ;;                  1    wreg      void 
  9611 ;; Registers used:
  9612 ;;		wreg, status,2, status,0, pclath, cstack
  9613 ;; Tracked objects:
  9614 ;;		On entry : 300/0
  9615 ;;		On exit  : 300/0
  9616 ;;		Unchanged: 0/0
  9617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9618 ;;      Params:         0       0       0       0       0
  9619 ;;      Locals:         3       0       0       0       0
  9620 ;;      Temps:          1       0       0       0       0
  9621 ;;      Totals:         4       0       0       0       0
  9622 ;;Total ram usage:        4 bytes
  9623 ;; Hardware stack levels used: 1
  9624 ;; Hardware stack levels required when called: 1
  9625 ;; This function calls:
  9626 ;;		_Lcd_Port
  9627 ;; This function is called by:
  9628 ;;		_Lcd_Write_String
  9629 ;; This function uses a non-reentrant model
  9630 ;;
  9631                           
  9632     1BEA                     _Lcd_Write_Char:	
  9633                           ;psect for function _Lcd_Write_Char
  9634                           
  9635                           
  9636                           ;incstack = 0
  9637                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  9638                           ;Lcd_Write_Char@a stored from wreg
  9639     1BEA  00F4               	movwf	Lcd_Write_Char@a
  9640                           
  9641                           ;./lcd.h: 80: void Lcd_Write_Char(char a);./lcd.h: 81: {;./lcd.h: 82:    char temp,y;;./
      +                          lcd.h: 83:    temp = a&0x0F;
  9642     1BEB  0874               	movf	Lcd_Write_Char@a,w
  9643     1BEC  390F               	andlw	15
  9644     1BED  00F2               	movwf	Lcd_Write_Char@temp
  9645                           
  9646                           ;./lcd.h: 84:    y = a&0xF0;
  9647     1BEE  0874               	movf	Lcd_Write_Char@a,w
  9648     1BEF  39F0               	andlw	240
  9649     1BF0  00F3               	movwf	Lcd_Write_Char@y
  9650                           
  9651                           ;./lcd.h: 85:    RB5 = 1;
  9652     1BF1  1686               	bsf	6,5	;volatile
  9653                           
  9654                           ;./lcd.h: 86:    Lcd_Port(y>>4);
  9655     1BF2  0873               	movf	Lcd_Write_Char@y,w
  9656     1BF3  00F1               	movwf	??_Lcd_Write_Char
  9657     1BF4  3004               	movlw	4
  9658     1BF5                     u4555:
  9659     1BF5  1003               	clrc
  9660     1BF6  0CF1               	rrf	??_Lcd_Write_Char,f
  9661     1BF7  3EFF               	addlw	-1
  9662     1BF8  1D03               	skipz
  9663     1BF9  2BF5               	goto	u4555
  9664     1BFA  0871               	movf	??_Lcd_Write_Char,w
  9665     1BFB  160A  158A  235C  160A  158A  	fcall	_Lcd_Port
  9666                           
  9667                           ;./lcd.h: 87:    RB4 = 1;
  9668     1C00  1606               	bsf	6,4	;volatile
  9669                           
  9670                           ;./lcd.h: 88:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  9671     1C01  300D               	movlw	13
  9672     1C02  00F1               	movwf	??_Lcd_Write_Char
  9673     1C03                     u6827:
  9674     1C03  0BF1               	decfsz	??_Lcd_Write_Char,f
  9675     1C04  2C03               	goto	u6827
  9676                           
  9677                           ;./lcd.h: 89:    RB4 = 0;
  9678     1C05  1283               	bcf	3,5	;RP0=0, select bank0
  9679     1C06  1303               	bcf	3,6	;RP1=0, select bank0
  9680     1C07  1206               	bcf	6,4	;volatile
  9681                           
  9682                           ;./lcd.h: 90:    Lcd_Port(temp);
  9683     1C08  0872               	movf	Lcd_Write_Char@temp,w
  9684     1C09  160A  158A  235C  160A  158A  	fcall	_Lcd_Port
  9685                           
  9686                           ;./lcd.h: 91:    RB4 = 1;
  9687     1C0E  1606               	bsf	6,4	;volatile
  9688                           
  9689                           ;./lcd.h: 92:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  9690     1C0F  300D               	movlw	13
  9691     1C10  00F1               	movwf	??_Lcd_Write_Char
  9692     1C11                     u6837:
  9693     1C11  0BF1               	decfsz	??_Lcd_Write_Char,f
  9694     1C12  2C11               	goto	u6837
  9695                           
  9696                           ;./lcd.h: 93:    RB4 = 0;
  9697     1C13  1283               	bcf	3,5	;RP0=0, select bank0
  9698     1C14  1303               	bcf	3,6	;RP1=0, select bank0
  9699     1C15  1206               	bcf	6,4	;volatile
  9700     1C16  0008               	return
  9701     1C17                     __end_of_Lcd_Write_Char:
  9702                           
  9703                           	psect	text29
  9704     1C91                     __ptext29:	
  9705 ;; *************** function _Lcd_Set_Cursor *****************
  9706 ;; Defined at:
  9707 ;;		line 40 in file "./lcd.h"
  9708 ;; Parameters:    Size  Location     Type
  9709 ;;  a               1    wreg     unsigned char 
  9710 ;;  b               1    4[COMMON] unsigned char 
  9711 ;; Auto vars:     Size  Location     Type
  9712 ;;  a               1    6[COMMON] unsigned char 
  9713 ;;  temp            1    9[COMMON] unsigned char 
  9714 ;;  y               1    8[COMMON] unsigned char 
  9715 ;;  z               1    7[COMMON] unsigned char 
  9716 ;; Return value:  Size  Location     Type
  9717 ;;                  1    wreg      void 
  9718 ;; Registers used:
  9719 ;;		wreg, status,2, status,0, pclath, cstack
  9720 ;; Tracked objects:
  9721 ;;		On entry : 0/0
  9722 ;;		On exit  : 0/0
  9723 ;;		Unchanged: 0/0
  9724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9725 ;;      Params:         1       0       0       0       0
  9726 ;;      Locals:         4       0       0       0       0
  9727 ;;      Temps:          1       0       0       0       0
  9728 ;;      Totals:         6       0       0       0       0
  9729 ;;Total ram usage:        6 bytes
  9730 ;; Hardware stack levels used: 1
  9731 ;; Hardware stack levels required when called: 2
  9732 ;; This function calls:
  9733 ;;		_Lcd_Cmd
  9734 ;; This function is called by:
  9735 ;;		_main
  9736 ;; This function uses a non-reentrant model
  9737 ;;
  9738                           
  9739     1C91                     _Lcd_Set_Cursor:	
  9740                           ;psect for function _Lcd_Set_Cursor
  9741                           
  9742                           
  9743                           ;incstack = 0
  9744                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  9745                           ;Lcd_Set_Cursor@a stored from wreg
  9746     1C91  00F6               	movwf	Lcd_Set_Cursor@a
  9747                           
  9748                           ;./lcd.h: 40: void Lcd_Set_Cursor(char a, char b);./lcd.h: 41: {;./lcd.h: 42:  char temp
      +                          ,z,y;;./lcd.h: 43:  if(a == 1)
  9749     1C92  0376               	decf	Lcd_Set_Cursor@a,w
  9750     1C93  1D03               	btfss	3,2
  9751     1C94  2CB0               	goto	l3457
  9752                           
  9753                           ;./lcd.h: 44:  {;./lcd.h: 45:    temp = 0x80 + b - 1;
  9754     1C95  0874               	movf	Lcd_Set_Cursor@b,w
  9755     1C96  3E7F               	addlw	127
  9756     1C97  00F9               	movwf	Lcd_Set_Cursor@temp
  9757                           
  9758                           ;./lcd.h: 46:   z = temp>>4;
  9759     1C98  0879               	movf	Lcd_Set_Cursor@temp,w
  9760     1C99  00F5               	movwf	??_Lcd_Set_Cursor
  9761     1C9A  3004               	movlw	4
  9762     1C9B                     u5635:
  9763     1C9B  1003               	clrc
  9764     1C9C  0CF5               	rrf	??_Lcd_Set_Cursor,f
  9765     1C9D  3EFF               	addlw	-1
  9766     1C9E  1D03               	skipz
  9767     1C9F  2C9B               	goto	u5635
  9768     1CA0  0875               	movf	??_Lcd_Set_Cursor,w
  9769     1CA1  00F7               	movwf	Lcd_Set_Cursor@z
  9770                           
  9771                           ;./lcd.h: 47:   y = temp & 0x0F;
  9772     1CA2  0879               	movf	Lcd_Set_Cursor@temp,w
  9773     1CA3  390F               	andlw	15
  9774     1CA4  00F8               	movwf	Lcd_Set_Cursor@y
  9775                           
  9776                           ;./lcd.h: 48:   Lcd_Cmd(z);
  9777     1CA5  0877               	movf	Lcd_Set_Cursor@z,w
  9778     1CA6  160A  158A  2374  160A  158A  	fcall	_Lcd_Cmd
  9779                           
  9780                           ;./lcd.h: 49:   Lcd_Cmd(y);
  9781     1CAB  0878               	movf	Lcd_Set_Cursor@y,w
  9782     1CAC  160A  158A  2374   	fcall	_Lcd_Cmd
  9783                           
  9784                           ;./lcd.h: 50:  }
  9785     1CAF  0008               	return
  9786     1CB0                     l3457:
  9787     1CB0  3002               	movlw	2
  9788     1CB1  0676               	xorwf	Lcd_Set_Cursor@a,w
  9789     1CB2  1D03               	btfss	3,2
  9790     1CB3  0008               	return
  9791                           
  9792                           ;./lcd.h: 52:  {;./lcd.h: 53:   temp = 0xC0 + b - 1;
  9793     1CB4  0874               	movf	Lcd_Set_Cursor@b,w
  9794     1CB5  3EBF               	addlw	191
  9795     1CB6  00F9               	movwf	Lcd_Set_Cursor@temp
  9796                           
  9797                           ;./lcd.h: 54:   z = temp>>4;
  9798     1CB7  0879               	movf	Lcd_Set_Cursor@temp,w
  9799     1CB8  00F5               	movwf	??_Lcd_Set_Cursor
  9800     1CB9  3004               	movlw	4
  9801     1CBA                     u5655:
  9802     1CBA  1003               	clrc
  9803     1CBB  0CF5               	rrf	??_Lcd_Set_Cursor,f
  9804     1CBC  3EFF               	addlw	-1
  9805     1CBD  1D03               	skipz
  9806     1CBE  2CBA               	goto	u5655
  9807     1CBF  0875               	movf	??_Lcd_Set_Cursor,w
  9808     1CC0  00F7               	movwf	Lcd_Set_Cursor@z
  9809                           
  9810                           ;./lcd.h: 55:   y = temp & 0x0F;
  9811     1CC1  0879               	movf	Lcd_Set_Cursor@temp,w
  9812     1CC2  390F               	andlw	15
  9813     1CC3  00F8               	movwf	Lcd_Set_Cursor@y
  9814                           
  9815                           ;./lcd.h: 56:   Lcd_Cmd(z);
  9816     1CC4  0877               	movf	Lcd_Set_Cursor@z,w
  9817     1CC5  160A  158A  2374  160A  158A  	fcall	_Lcd_Cmd
  9818                           
  9819                           ;./lcd.h: 57:   Lcd_Cmd(y);
  9820     1CCA  0878               	movf	Lcd_Set_Cursor@y,w
  9821     1CCB  160A  158A  2374   	fcall	_Lcd_Cmd
  9822     1CCE  0008               	return
  9823     1CCF                     __end_of_Lcd_Set_Cursor:
  9824                           
  9825                           	psect	text30
  9826     0003                     __ptext30:	
  9827 ;; *************** function _Lcd_Init *****************
  9828 ;; Defined at:
  9829 ;;		line 61 in file "./lcd.h"
  9830 ;; Parameters:    Size  Location     Type
  9831 ;;		None
  9832 ;; Auto vars:     Size  Location     Type
  9833 ;;		None
  9834 ;; Return value:  Size  Location     Type
  9835 ;;                  1    wreg      void 
  9836 ;; Registers used:
  9837 ;;		wreg, status,2, status,0, pclath, cstack
  9838 ;; Tracked objects:
  9839 ;;		On entry : B00/100
  9840 ;;		On exit  : 300/0
  9841 ;;		Unchanged: 0/0
  9842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9843 ;;      Params:         0       0       0       0       0
  9844 ;;      Locals:         0       0       0       0       0
  9845 ;;      Temps:          2       0       0       0       0
  9846 ;;      Totals:         2       0       0       0       0
  9847 ;;Total ram usage:        2 bytes
  9848 ;; Hardware stack levels used: 1
  9849 ;; Hardware stack levels required when called: 2
  9850 ;; This function calls:
  9851 ;;		_Lcd_Cmd
  9852 ;;		_Lcd_Port
  9853 ;; This function is called by:
  9854 ;;		_main
  9855 ;; This function uses a non-reentrant model
  9856 ;;
  9857                           
  9858     0003                     _Lcd_Init:	
  9859                           ;psect for function _Lcd_Init
  9860                           
  9861                           
  9862                           ;./lcd.h: 63:   Lcd_Port(0x00);
  9863                           
  9864                           ;incstack = 0
  9865                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  9866     0003  3000               	movlw	0
  9867     0004  160A  158A  235C  120A  118A  	fcall	_Lcd_Port
  9868                           
  9869                           ;./lcd.h: 64:    _delay((unsigned long)((20)*(4000000/4000.0)));
  9870     0009  301A               	movlw	26
  9871     000A  00F5               	movwf	??_Lcd_Init+1
  9872     000B  30F8               	movlw	248
  9873     000C  00F4               	movwf	??_Lcd_Init
  9874     000D                     u6847:
  9875     000D  0BF4               	decfsz	??_Lcd_Init,f
  9876     000E  280D               	goto	u6847
  9877     000F  0BF5               	decfsz	??_Lcd_Init+1,f
  9878     0010  280D               	goto	u6847
  9879     0011  0000               	nop
  9880                           
  9881                           ;./lcd.h: 65:   Lcd_Cmd(0x03);
  9882     0012  3003               	movlw	3
  9883     0013  160A  158A  2374  120A  118A  	fcall	_Lcd_Cmd
  9884                           
  9885                           ;./lcd.h: 66:  _delay((unsigned long)((5)*(4000000/4000.0)));
  9886     0018  3007               	movlw	7
  9887     0019  00F5               	movwf	??_Lcd_Init+1
  9888     001A  307D               	movlw	125
  9889     001B  00F4               	movwf	??_Lcd_Init
  9890     001C                     u6857:
  9891     001C  0BF4               	decfsz	??_Lcd_Init,f
  9892     001D  281C               	goto	u6857
  9893     001E  0BF5               	decfsz	??_Lcd_Init+1,f
  9894     001F  281C               	goto	u6857
  9895                           
  9896                           ;./lcd.h: 67:   Lcd_Cmd(0x03);
  9897     0020  3003               	movlw	3
  9898     0021  160A  158A  2374  120A  118A  	fcall	_Lcd_Cmd
  9899                           
  9900                           ;./lcd.h: 68:  _delay((unsigned long)((11)*(4000000/4000.0)));
  9901     0026  300F               	movlw	15
  9902     0027  00F5               	movwf	??_Lcd_Init+1
  9903     0028  3047               	movlw	71
  9904     0029  00F4               	movwf	??_Lcd_Init
  9905     002A                     u6867:
  9906     002A  0BF4               	decfsz	??_Lcd_Init,f
  9907     002B  282A               	goto	u6867
  9908     002C  0BF5               	decfsz	??_Lcd_Init+1,f
  9909     002D  282A               	goto	u6867
  9910     002E  282F               	nop2
  9911                           
  9912                           ;./lcd.h: 69:   Lcd_Cmd(0x03);
  9913     002F  3003               	movlw	3
  9914     0030  160A  158A  2374  120A  118A  	fcall	_Lcd_Cmd
  9915                           
  9916                           ;./lcd.h: 71:   Lcd_Cmd(0x02);
  9917     0035  3002               	movlw	2
  9918     0036  160A  158A  2374  120A  118A  	fcall	_Lcd_Cmd
  9919                           
  9920                           ;./lcd.h: 72:   Lcd_Cmd(0x02);
  9921     003B  3002               	movlw	2
  9922     003C  160A  158A  2374  120A  118A  	fcall	_Lcd_Cmd
  9923                           
  9924                           ;./lcd.h: 73:   Lcd_Cmd(0x08);
  9925     0041  3008               	movlw	8
  9926     0042  160A  158A  2374  120A  118A  	fcall	_Lcd_Cmd
  9927                           
  9928                           ;./lcd.h: 74:   Lcd_Cmd(0x00);
  9929     0047  3000               	movlw	0
  9930     0048  160A  158A  2374  120A  118A  	fcall	_Lcd_Cmd
  9931                           
  9932                           ;./lcd.h: 75:   Lcd_Cmd(0x0C);
  9933     004D  300C               	movlw	12
  9934     004E  160A  158A  2374  120A  118A  	fcall	_Lcd_Cmd
  9935                           
  9936                           ;./lcd.h: 76:   Lcd_Cmd(0x00);
  9937     0053  3000               	movlw	0
  9938     0054  160A  158A  2374  120A  118A  	fcall	_Lcd_Cmd
  9939                           
  9940                           ;./lcd.h: 77:   Lcd_Cmd(0x06);
  9941     0059  3006               	movlw	6
  9942     005A  160A  158A  2374   	fcall	_Lcd_Cmd
  9943     005D  0008               	return
  9944     005E                     __end_of_Lcd_Init:
  9945                           
  9946                           	psect	text31
  9947     1B38                     __ptext31:	
  9948 ;; *************** function _Lcd_Clear *****************
  9949 ;; Defined at:
  9950 ;;		line 34 in file "./lcd.h"
  9951 ;; Parameters:    Size  Location     Type
  9952 ;;		None
  9953 ;; Auto vars:     Size  Location     Type
  9954 ;;		None
  9955 ;; Return value:  Size  Location     Type
  9956 ;;                  1    wreg      void 
  9957 ;; Registers used:
  9958 ;;		wreg, status,2, status,0, pclath, cstack
  9959 ;; Tracked objects:
  9960 ;;		On entry : 0/0
  9961 ;;		On exit  : 300/0
  9962 ;;		Unchanged: 0/0
  9963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9964 ;;      Params:         0       0       0       0       0
  9965 ;;      Locals:         0       0       0       0       0
  9966 ;;      Temps:          0       0       0       0       0
  9967 ;;      Totals:         0       0       0       0       0
  9968 ;;Total ram usage:        0 bytes
  9969 ;; Hardware stack levels used: 1
  9970 ;; Hardware stack levels required when called: 2
  9971 ;; This function calls:
  9972 ;;		_Lcd_Cmd
  9973 ;; This function is called by:
  9974 ;;		_main
  9975 ;; This function uses a non-reentrant model
  9976 ;;
  9977                           
  9978     1B38                     _Lcd_Clear:	
  9979                           ;psect for function _Lcd_Clear
  9980                           
  9981                           
  9982                           ;./lcd.h: 36:  Lcd_Cmd(0);
  9983                           
  9984                           ;incstack = 0
  9985                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  9986     1B38  3000               	movlw	0
  9987     1B39  160A  158A  2374  160A  158A  	fcall	_Lcd_Cmd
  9988                           
  9989                           ;./lcd.h: 37:  Lcd_Cmd(1);
  9990     1B3E  3001               	movlw	1
  9991     1B3F  160A  158A  2374   	fcall	_Lcd_Cmd
  9992     1B42  0008               	return
  9993     1B43                     __end_of_Lcd_Clear:
  9994                           
  9995                           	psect	text32
  9996     1B74                     __ptext32:	
  9997 ;; *************** function _Lcd_Cmd *****************
  9998 ;; Defined at:
  9999 ;;		line 25 in file "./lcd.h"
 10000 ;; Parameters:    Size  Location     Type
 10001 ;;  a               1    wreg     unsigned char 
 10002 ;; Auto vars:     Size  Location     Type
 10003 ;;  a               1    3[COMMON] unsigned char 
 10004 ;; Return value:  Size  Location     Type
 10005 ;;                  1    wreg      void 
 10006 ;; Registers used:
 10007 ;;		wreg, status,2, status,0, pclath, cstack
 10008 ;; Tracked objects:
 10009 ;;		On entry : 0/0
 10010 ;;		On exit  : 300/0
 10011 ;;		Unchanged: 0/0
 10012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10013 ;;      Params:         0       0       0       0       0
 10014 ;;      Locals:         1       0       0       0       0
 10015 ;;      Temps:          2       0       0       0       0
 10016 ;;      Totals:         3       0       0       0       0
 10017 ;;Total ram usage:        3 bytes
 10018 ;; Hardware stack levels used: 1
 10019 ;; Hardware stack levels required when called: 1
 10020 ;; This function calls:
 10021 ;;		_Lcd_Port
 10022 ;; This function is called by:
 10023 ;;		_Lcd_Clear
 10024 ;;		_Lcd_Set_Cursor
 10025 ;;		_Lcd_Init
 10026 ;; This function uses a non-reentrant model
 10027 ;;
 10028                           
 10029     1B74                     _Lcd_Cmd:	
 10030                           ;psect for function _Lcd_Cmd
 10031                           
 10032                           
 10033                           ;incstack = 0
 10034                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
 10035                           ;Lcd_Cmd@a stored from wreg
 10036     1B74  00F3               	movwf	Lcd_Cmd@a
 10037                           
 10038                           ;./lcd.h: 25: void Lcd_Cmd(char a);./lcd.h: 26: {;./lcd.h: 27:  RB5 = 0;
 10039     1B75  1283               	bcf	3,5	;RP0=0, select bank0
 10040     1B76  1303               	bcf	3,6	;RP1=0, select bank0
 10041     1B77  1286               	bcf	6,5	;volatile
 10042                           
 10043                           ;./lcd.h: 28:  Lcd_Port(a);
 10044     1B78  0873               	movf	Lcd_Cmd@a,w
 10045     1B79  160A  158A  235C  160A  158A  	fcall	_Lcd_Port
 10046                           
 10047                           ;./lcd.h: 29:  RB4 = 1;
 10048     1B7E  1606               	bsf	6,4	;volatile
 10049                           
 10050                           ;./lcd.h: 30:         _delay((unsigned long)((4)*(4000000/4000.0)));
 10051     1B7F  3006               	movlw	6
 10052     1B80  00F2               	movwf	??_Lcd_Cmd+1
 10053     1B81  3030               	movlw	48
 10054     1B82  00F1               	movwf	??_Lcd_Cmd
 10055     1B83                     u6877:
 10056     1B83  0BF1               	decfsz	??_Lcd_Cmd,f
 10057     1B84  2B83               	goto	u6877
 10058     1B85  0BF2               	decfsz	??_Lcd_Cmd+1,f
 10059     1B86  2B83               	goto	u6877
 10060     1B87  0000               	nop
 10061                           
 10062                           ;./lcd.h: 31:         RB4 = 0;
 10063     1B88  1283               	bcf	3,5	;RP0=0, select bank0
 10064     1B89  1303               	bcf	3,6	;RP1=0, select bank0
 10065     1B8A  1206               	bcf	6,4	;volatile
 10066     1B8B  0008               	return
 10067     1B8C                     __end_of_Lcd_Cmd:
 10068                           
 10069                           	psect	text33
 10070     1B5C                     __ptext33:	
 10071 ;; *************** function _Lcd_Port *****************
 10072 ;; Defined at:
 10073 ;;		line 3 in file "./lcd.h"
 10074 ;; Parameters:    Size  Location     Type
 10075 ;;  a               1    wreg     unsigned char 
 10076 ;; Auto vars:     Size  Location     Type
 10077 ;;  a               1    0[COMMON] unsigned char 
 10078 ;; Return value:  Size  Location     Type
 10079 ;;                  1    wreg      void 
 10080 ;; Registers used:
 10081 ;;		wreg
 10082 ;; Tracked objects:
 10083 ;;		On entry : 200/0
 10084 ;;		On exit  : 300/0
 10085 ;;		Unchanged: 0/0
 10086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10087 ;;      Params:         0       0       0       0       0
 10088 ;;      Locals:         1       0       0       0       0
 10089 ;;      Temps:          0       0       0       0       0
 10090 ;;      Totals:         1       0       0       0       0
 10091 ;;Total ram usage:        1 bytes
 10092 ;; Hardware stack levels used: 1
 10093 ;; This function calls:
 10094 ;;		Nothing
 10095 ;; This function is called by:
 10096 ;;		_Lcd_Cmd
 10097 ;;		_Lcd_Init
 10098 ;;		_Lcd_Write_Char
 10099 ;; This function uses a non-reentrant model
 10100 ;;
 10101                           
 10102     1B5C                     _Lcd_Port:	
 10103                           ;psect for function _Lcd_Port
 10104                           
 10105                           
 10106                           ;incstack = 0
 10107                           ; Regs used in _Lcd_Port: [wreg]
 10108                           ;Lcd_Port@a stored from wreg
 10109     1B5C  00F0               	movwf	Lcd_Port@a
 10110                           
 10111                           ;./lcd.h: 3: void Lcd_Port(char a);./lcd.h: 4: {;./lcd.h: 5:  if(a & 1)
 10112     1B5D  1C70               	btfss	Lcd_Port@a,0
 10113     1B5E  2B62               	goto	l73
 10114                           
 10115                           ;./lcd.h: 6:   RB3 = 1;
 10116     1B5F  1283               	bcf	3,5	;RP0=0, select bank0
 10117     1B60  1586               	bsf	6,3	;volatile
 10118     1B61  2B64               	goto	l74
 10119     1B62                     l73:	
 10120                           ;./lcd.h: 7:  else
 10121                           
 10122                           
 10123                           ;./lcd.h: 8:   RB3 = 0;
 10124     1B62  1283               	bcf	3,5	;RP0=0, select bank0
 10125     1B63  1186               	bcf	6,3	;volatile
 10126     1B64                     l74:
 10127                           
 10128                           ;./lcd.h: 10:  if(a & 2)
 10129     1B64  1CF0               	btfss	Lcd_Port@a,1
 10130     1B65  2B68               	goto	l75
 10131                           
 10132                           ;./lcd.h: 11:   RB2 = 1;
 10133     1B66  1506               	bsf	6,2	;volatile
 10134     1B67  2B69               	goto	l76
 10135     1B68                     l75:	
 10136                           ;./lcd.h: 12:  else
 10137                           
 10138                           
 10139                           ;./lcd.h: 13:   RB2 = 0;
 10140     1B68  1106               	bcf	6,2	;volatile
 10141     1B69                     l76:
 10142                           
 10143                           ;./lcd.h: 15:  if(a & 4)
 10144     1B69  1D70               	btfss	Lcd_Port@a,2
 10145     1B6A  2B6D               	goto	l77
 10146                           
 10147                           ;./lcd.h: 16:   RB1 = 1;
 10148     1B6B  1486               	bsf	6,1	;volatile
 10149     1B6C  2B6E               	goto	l78
 10150     1B6D                     l77:	
 10151                           ;./lcd.h: 17:  else
 10152                           
 10153                           
 10154                           ;./lcd.h: 18:   RB1 = 0;
 10155     1B6D  1086               	bcf	6,1	;volatile
 10156     1B6E                     l78:
 10157                           
 10158                           ;./lcd.h: 20:  if(a & 8)
 10159     1B6E  1DF0               	btfss	Lcd_Port@a,3
 10160     1B6F  2B72               	goto	l79
 10161                           
 10162                           ;./lcd.h: 21:   RB0 = 1;
 10163     1B70  1406               	bsf	6,0	;volatile
 10164     1B71  0008               	return
 10165     1B72                     l79:	
 10166                           ;./lcd.h: 22:  else
 10167                           
 10168                           
 10169                           ;./lcd.h: 23:   RB0 = 0;
 10170     1B72  1006               	bcf	6,0	;volatile
 10171     1B73  0008               	return
 10172     1B74                     __end_of_Lcd_Port:
 10173     007E                     btemp	set	126	;btemp
 10174     007E                     wtemp0	set	126
 10175                           
 10176                           	psect	config
 10177                           
 10178                           ;Config register CONFIG @ 0x2007
 10179                           ;	Oscillator Selection bits
 10180                           ;	FOSC = XT, XT oscillator
 10181                           ;	Watchdog Timer Enable bit
 10182                           ;	WDTE = OFF, WDT disabled
 10183                           ;	Power-up Timer Enable bit
 10184                           ;	PWRTE = ON, PWRT enabled
 10185                           ;	Brown-out Reset Enable bit
 10186                           ;	BOREN = ON, BOR enabled
 10187                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
 10188                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
 10189                           ;	Data EEPROM Memory Code Protection bit
 10190                           ;	CPD = OFF, Data EEPROM code protection off
 10191                           ;	Flash Program Memory Write Enable bits
 10192                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
 10193                           ;	In-Circuit Debugger Mode bit
 10194                           ;	DEBUG = 0x1, unprogrammed default
 10195                           ;	Flash Program Memory Code Protection bit
 10196                           ;	CP = OFF, Code protection off
 10197     2007                     	org	8199
 10198     2007  3F71               	dw	16241

Data Sizes:
    Strings     149
    Constant    144
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     78      78
    BANK1            80     35      35
    BANK3            96     60      60
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_19(CODE[6]), STR_13(CODE[6]), STR_7(CODE[6]), STR_5(CODE[4]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> main@combinedText_160(BANK3[20]), main@combinedText(BANK3[20]), main@adcString2(BANK3[4]), main@adcString1(BANK3[4]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    UART_Write_Text@text	PTR unsigned char  size(2) Largest target is 20
		 -> STR_21(CODE[5]), main@combinedText_160(BANK3[20]), STR_17(CODE[7]), STR_15(CODE[5]), 
		 -> main@combinedText(BANK3[20]), STR_11(CODE[8]), STR_9(CODE[5]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 15
		 -> STR_24(CODE[15]), STR_23(CODE[15]), STR_22(CODE[15]), STR_20(CODE[5]), 
		 -> STR_18(CODE[5]), STR_16(CODE[9]), STR_14(CODE[10]), STR_12(CODE[5]), 
		 -> STR_10(CODE[9]), STR_8(CODE[10]), main@adcString2(BANK3[4]), STR_6(CODE[8]), 
		 -> main@adcString1(BANK3[4]), STR_4(CODE[7]), STR_3(CODE[3]), STR_2(CODE[8]), 
		 -> STR_1(CODE[13]), 


Critical Paths under _main in COMMON

    _main->___xxtofl
    _sprintf->___awdiv
    _sprintf->___lldiv
    _sprintf->___xxtofl
    _scale->___awdiv
    ___awdiv->___awmod
    ___lbdiv->___lbmod
    ___flmul->___awdiv
    ___llmod->___lldiv
    ___flsub->___xxtofl
    ___fldiv->___xxtofl
    _UART_Write_Text->_UART_Write
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                65    65      0   38017
                                             32 BANK1      3     3      0
                                              0 BANK3     60    60      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                    _UART_Initialize
                    _UART_Write_Text
                            ___fldiv
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             43    37      6   31669
                                             72 BANK0      6     0      6
                                              0 BANK1     32    32      0
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    7409
                                             26 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1208
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1364
                                              6 COMMON     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              18    14      4    5416
                                             26 BANK0     18    14      4
                            ___flmul
                            ___lbdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (3) ___lbmod                                              6     5      1     387
                                              0 COMMON     6     5      1
 ---------------------------------------------------------------------------------
 (3) ___lbdiv                                              4     3      1     390
                                              6 COMMON     4     3      1
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4394
                                              0 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lbdiv (ARG)
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         17     9      8     455
                                              0 COMMON    11     3      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     767
                                              0 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     618
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     457
                                             45 BANK0     10     6      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                             64 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             44 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             26    18      8    1273
                                              0 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _UART_Write_Text                                      7     5      2     644
                                              1 COMMON     7     5      2
                         _UART_Write
 ---------------------------------------------------------------------------------
 (2) _UART_Write                                           1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2    1560
                                              5 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1    1672
                                              4 COMMON     6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _UART_Initialize
   _UART_Write_Text
     _UART_Write
   ___fldiv
     ___xxtofl (ARG)
   ___xxtofl
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
           ___awmod (ARG)
           ___lbdiv (ARG)
             ___lbmod (ARG)
           ___lbmod (ARG)
         ___lbdiv
         ___lbmod
     ___fleq
     ___flge
     ___flmul
     ___flneg
     ___flsub
       ___fladd
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
       _scale (ARG)
         ___awdiv
         ___awmod
         ___flmul
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
     _isdigit
     _scale

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4E      4E       5       97.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     23      23       7       43.8%
BITBANK3            60      0       0       8        0.0%
BANK3               60     3C      3C       9       62.5%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Fri Aug 25 14:09:57 2023

            ___fldiv@aexp 0039              ___fldiv@bexp 0038                         pc 0002  
            ___fldiv@sign 0031                        l73 1B62                        l74 1B64  
                      l75 1B68                        l76 1B69                        l77 1B6D  
                      l78 1B6E                        l79 1B72                        _GO 00FA  
            ___awdiv@sign 007B                        fsr 0004       ___wmul@multiplicand 0072  
     __Umul8_16@word_mpld 0076                       l111 15BD                       l114 15CF  
                     l123 16C7                       l140 17E8                       l301 0145  
                     l141 17EB                       l133 174F                       l125 172D  
                     l117 16C3                       l127 174B                       l119 16E5  
                     l161 1B31                       l129 176D                       l306 0147  
                     l138 17EA                       l307 0674                       l606 1156  
                     l622 1BC3                       l711 13DA                       l705 1385  
                     l378 1BD3                       l564 1CE9                       l572 1F4C  
                     l820 081B                       l565 1D03                       l709 13FA  
                     l726 14B1                       l559 10B3                       l761 0872  
                     l569 1EE6                       l588 1EAE                       l845 1F7C  
                     l783 09B1                       l858 1FD0                       l859 1FDA  
                     _RB0 0030                       _RB1 0031                       _RB2 0032  
                     _RA4 002C                       _RC0 0038                       _RB3 0033  
                     _RC1 0039                       _RB4 0034                       _RC2 003A  
                     _RB5 0035                       _RC3 003B                       _RE0 0048  
                     _RE1 0049                       _RE2 004A                       fsr0 0004  
                     indf 0000              ___awmod@sign 0075              ___flmul@aexp 002E  
            ___flmul@bexp 0033               _sprintf$874 00A5              ___flmul@sign 002D  
            ___flmul@temp 0038              ___flmul@prod 0034              ___fltol@exp1 0056  
                    l3001 0C19                      l3005 0C1B                      l3015 0C4D  
                    l3103 0D93                      l3025 0C7C                      l3033 0C8F  
                    l3121 0F42                      l3113 0E51                      l3203 1039  
                    l3019 0C63                      l3109 0E22                      l3127 0FD1  
                    l3313 1F26                      l3225 108B                      l3217 1063  
                    l3145 10DA                      l3081 125E                      l3403 1F74  
                    l3235 109F                      l3171 112F                      l3163 110F  
                    l3139 1B5A                      l4035 16CA                      l3309 1F00  
                    l3333 1E6C                      l3253 1BCB                      l3181 1142  
                    l3149 10E3                      l2613 1E02                      l2605 1DEF  
                    l2711 1354                      l3423 1FBA                      l3415 1F8D  
                    l3247 10C2                      l3239 10AF                      l3087 12F9  
                    l3503 00A6                      l3511 00E6                      l4063 1752  
                    l2801 1408                      l3353 1E9A                      l3337 1E75  
                    l3273 1E17                      l3441 1FF7                      l3417 1F9F  
                    l3409 1F8B                      l3193 1165                      l3185 1152  
                    l2553 0813                      l2609 1DFA                      l2625 1D21  
                    l2811 1429                      l2715 1357                      l3283 1E4F  
                    l3275 1E27                      l3427 1FCE                      l2651 1D5D  
                    l2643 1D4A                      l4139 016B                      l2717 135F  
                    l3365 1EBD                      l3357 1EAA                      l3429 1FBF  
                    l2581 1DB8                      l2637 1D2E                      l2629 1D28  
                    l3605 038C                      l3541 018C                      l3533 0149  
                    l3525 00FE                      l4077 17A0                      l4085 17CB  
                    l2831 14A3                      l2735 137A                      l3287 1E5C  
                    l3383 1D98                      l3199 1030                      l2911 09DA  
                    l2639 1D3C                      l2647 1D55                      l3623 0439  
                    l3615 03F1                      l3551 01CE                      l3535 017C  
                    l3527 0140                      l3457 1CB0                      l3801 1C56  
                    l2809 1427                      l2745 138F                      l3377 1D6A  
                    l2913 09DC                      l2665 100E                      l3713 06AF  
                    l3609 03EF                      l3483 1C19                      l3299 1D15  
                    l2819 1439                      l2739 137D                      l3379 1D7A  
                    l3387 1DA5                      l2931 09FF                      l2915 09E4  
                    l2667 1017                      l2587 1DC3                      l3627 0458  
                    l4099 17E4                      l3901 0916                      l3821 0846  
                    l2861 14E4                      l2853 14D9                      l2941 0A15  
                    l2933 0A07                      l2677 1026                      l2685 1BAE  
                    l2597 1DCB                      l3741 072D                      l3733 0709  
                    l3725 06C1                      l3709 069D                      l3661 050F  
                    l3653 0488                      l3629 0472                      l3637 045C  
                    l3903 0933                      l3823 084E                      l2847 14D2  
                    l2839 14C3                      l2855 14DB                      l2783 13E3  
                    l2775 13AD                      l2599 1DD9                      l3719 06BF  
                    l3655 04FE                      l3639 0479                      l3591 032F  
                    l3583 02E3                      l3575 0287                      l3567 0221  
                    l3913 094C                      l3841 086A                      l3817 0843  
                    l2865 14E6                      l2785 13E5                      l2793 13F4  
                    l2929 09FD                      l3761 0771                      l3753 0754  
                    l3737 0717                      l3497 008E                      l3923 097E  
                    l3851 0891                      l2891 1531                      l2875 1519  
                    l3763 0775                      l3755 0758                      l3747 073D  
                    l3691 0660                      l3675 0544                      l3667 052B  
                    l3595 034A                      l3579 02A4                      l3941 09BD  
                    l3909 094A                      l3845 0884                      l3837 0867  
                    l2885 1529                      l3781 0795                      l3927 0997  
                    l3759 076D                      l3783 0062                      l3857 089D  
                    l2889 152D                      l2993 0BE5                      l3769 0788  
                    l3697 066F                      l3785 07F7                      l3939 09B9  
                    l3883 090B                      l2995 0C02                      l3877 08EC  
                    l3885 08C8                      l3887 0910                      l3987 15B8  
                    STR_1 18C0                      STR_2 18FA                      STR_3 1934  
                    STR_4 1909                      STR_5 1930                      STR_6 18F2  
                    STR_7 1916                      STR_8 18CD                      STR_9 191C  
                    u4025 14C5                      u4125 1503                      u5005 107A  
                    u5015 108D                      u3415 081C                      u3505 1DCE  
                    u5115 1BD4                      u4315 0AB9                      u5125 1BDB  
                    u3525 1DDA                      u3605 1D31                      u6005 0617  
                    u5055 10A0                      u4415 0BD1                      u3535 1DE6  
                    u4425 0BE9                      u4345 0B0E                      u3705 1BB1  
                    u3545 1DF0                      u3625 1D42                      u6105 0710  
                    u5235 1D11                      u5155 1E1B                      u4515 0C38  
                    u3635 1D4B                      u6115 0722                      u5085 10B8  
                    u4525 0C56                      u4445 0BF4                      u4605 121D  
                    u6205 07AD                      u3830 13CD                      u5271 1F11  
                    u5335 1E7E                      u5175 1E29                      u4535 0C6E  
                    u5272 1F12                      u3840 13CE                      u5273 1F17  
                    u3825 13C1                      u5185 1E3E                      u4385 0B9A  
                    u4625 1274                      u5274 1F18                      u4555 1BF5  
                    u5291 1F37                      u5275 1F1D                      u5195 1E50  
                    u5435 1D6E                      u5515 1F96                      u4635 12B8  
                    u4715 0DA9                      u6155 0749                      u6075 06C4  
                    u5292 1F38                      u5276 1F1E                      u5293 1F3D  
                    u5365 1E9B                      u4645 1304                      u4805 0F97  
                    u4725 0DE8                      u6165 075F                      u6085 06FF  
                    u5294 1F3E                      u5295 1F43                      u5455 1D88  
                    u5535 1FB2                      u4815 0FD4                      u4735 0E25  
                    u5296 1F44                      u6425 091A                      u5465 1D99  
                    u4585 1186                      u5635 1C9B                      u6515 0969  
                    u6355 08D1                      u3971 1464                      u3963 144B  
                    u3955 142D                      u3875 13E9                      u5395 1EB3  
                    u5555 1FC7                      u4595 11D1                      u4755 0E75  
                    u4675 0CC6                      u3980 1478                      u3972 1465  
                    u6525 0987                      u6445 0925                      u6365 08DA  
                    u3981 1479                      u3973 146A                      u4925 1143  
                    u4765 0EB5                      u4685 0D06                      u3982 147E  
                    u3974 146B                      u5655 1CBA                      u6535 09A2  
                    u3983 147F                      u3975 1470                      u4775 0F01  
                    u4695 0D52                      u5815 02AD                      u3976 1471  
                    u6385 08E5                      u4865 1111                      u5825 02EE  
                    u6395 08FA                      u5595 1FE2                      u4955 115B  
                    u4875 1122                      u4795 0F58                      u4885 1130  
                    u5925 0465                      u5855 032D                      u6807 159F  
                    u5945 0490                      u6817 169D                      u6827 1C03  
                    u4995 1065                      u5875 03F4                      u6837 1C11  
                    u5965 0518                      u5885 042F                      u6847 000D  
                    u5975 0525                      u6857 001C                      u6867 002A  
                    u5995 05A1                      u6877 1B83                      u6797 1558  
                    _TRMT 04C1         ?_Lcd_Write_String 0075                      _main 153A  
                    btemp 007E                      start 0000        ??_Lcd_Write_String 0077  
         ___fldiv@new_exp 0032           __end_of_Lcd_Cmd 1B8C   __end_of_UART_Write_Text 1C91  
        ?_UART_Initialize 0070             ___fltol@sign1 0055              main@floatVal 01B8  
         __end_of___fladd 153A                     ?_main 0070           __end_of___fldiv 09C3  
         __end_of___awdiv 1E07           __end_of___lbdiv 1028           __end_of___flneg 0809  
                   STR_10 18E1                     STR_11 18EA                     STR_20 192B  
                   STR_12 1921                     STR_21 191C                     STR_13 1910  
                   STR_14 18D7                     STR_22 18A2                     STR_15 191C  
                   STR_23 18A2                     STR_16 18E1                     STR_24 18B1  
                   STR_17 1902                     STR_18 1926                     STR_19 1910  
         __end_of___awmod 1D62           __end_of___lbmod 1BC9           __end_of___flmul 0C9C  
         __end_of___flsub 1BAA           __end_of___fltol 1ECC           __end_of___lldiv 1E65  
         ___awdiv@divisor 0076           __end_of___llmod 1DAE           ___awdiv@counter 007A  
                   _RCSTA 0018                     _SPBRG 0099                     _TXREG 0019  
                   _TXSTA 0098               ?_UART_Write 0070           __end_of_dpowers 18A2  
                   _scale 0C9C           __end_of_isdigit 1B5C             main@adcValue1 01BC  
           main@adcValue2 01BE                     pclath 000A                     status 0003  
                   wtemp0 007E           __end_of_sprintf 07FC           ___lbdiv@divisor 0076  
         ___lbdiv@counter 0078          __end_of_Lcd_Init 005E          __end_of_Lcd_Port 1B74  
         __initialization 07FC              __end_of_main 1800                    ??_main 00C0  
                  _ADCON0 001F                    _ADCON1 009F          ___llmod@dividend 0024  
                  ?_scale 003A                    _ADRESH 001E          ___awdiv@dividend 0078  
               ??_Lcd_Cmd 0071                    _TRISA1 0429                    _TRISA4 042C  
                  _TRISC0 0438                    _TRISC1 0439                    _TRISC2 043A  
                  _TRISC3 043B                    _TRISE0 0448                    _TRISE1 0449  
                  _TRISE2 044A                    _TRISC6 043E                    _TRISC7 043F  
        __end_of___xxtofl 2000          __end_of__powers_ 1846                    ___flge 1ECC  
                  ___fleq 1CCF                 ??___fladd 0054                    ___wmul 1BC9  
               ??___fldiv 0028                 ??___awdiv 007A                 ??___lbdiv 0077  
               ??___flneg 0074                 ??___awmod 0074                 ??___lbmod 0071  
               ??___flmul 0028          ?_UART_Write_Text 0071                 ??___flsub 007E  
               ??___fltol 0051                 ??___lldiv 0078                 ??___llmod 0028  
                  _fround 116E          ___awdiv@quotient 007C           ___awmod@divisor 0070  
         ___awmod@counter 0074                 ??_isdigit 0070            main@adcString1 01C2  
          main@adcString2 01C6                 ??_sprintf 00A0          ___lbdiv@dividend 0077  
         Lcd_Set_Cursor@a 0076           Lcd_Set_Cursor@b 0074           Lcd_Set_Cursor@y 0078  
         Lcd_Set_Cursor@z 0077                ___flge@ff1 0070                ___flge@ff2 0074  
            ___xxtofl@arg 007A              ___xxtofl@exp 0079              ___xxtofl@val 0070  
              ___fleq@ff1 0070                ___fleq@ff2 0074           ___lbmod@divisor 0070  
 __end_of__initialization 07FC           ___lbmod@counter 0074                ___flneg@f1 0070  
       __end_of_Lcd_Clear 1B43                ___fltol@f1 004D            __pcstackCOMMON 0070  
           __end_of_scale 1000          ___lbdiv@quotient 0079            _Lcd_Set_Cursor 1C91  
              __div_to_l_ 1028                 ?_Lcd_Init 0070                 ?_Lcd_Port 0070  
         __div_to_l_@exp1 0025           __div_to_l_@cntr 0024                   ??_scale 003E  
         __div_to_l_@quot 0020              sprintf@width 00AC          main@combinedText 0190  
           __div_to_l_@f1 0070             __div_to_l_@f2 0074         __end_of__Umul8_16 082C  
              __pmaintext 153A                   ?___flge 0070                   ?___fleq 0070  
                 ?___wmul 0070                   ?_fround 003A    __end_of_Lcd_Set_Cursor 1CCF  
        main@displayValue 01CA                 ?___xxtofl 0070              ??_UART_Write 0070  
              ??_Lcd_Init 0074                ??_Lcd_Port 0070                __stringtab 1800  
          _Lcd_Write_Char 1BEA                   _Lcd_Cmd 1B74         __end_of__npowers_ 187A  
                 ___fladd 133D                   ___fldiv 082C                   ___awdiv 1DAE  
                 ___lbdiv 1007                   ___flneg 0800                   ___awmod 1D17  
                 ___lbmod 1BAA                   ___flmul 09C3                   ___flsub 1B8C  
                 ___fltol 1E65                   ___lldiv 1E07        __end_of_UART_Write 1B38  
                 ___llmod 1D62                _fround$871 0047                _fround$872 0043  
         ?_Lcd_Set_Cursor 0074                   __ptext1 005E                   __ptext2 0C9C  
                 __ptext3 1D17                   __ptext4 1DAE                   __ptext5 1B4E  
                 __ptext6 116E                   __ptext7 1BAA                   __ptext8 1007  
                 __ptext9 09C3               ?__div_to_l_ 0070                   _dpowers 187A  
                 _isdigit 1B4E                ??___xxtofl 0074          ___awmod@dividend 0072  
                 _sprintf 005E    __end_of_Lcd_Write_Char 1C17      end_of_initialization 07FC  
         ___lldiv@divisor 0070           ___lldiv@counter 007D                 Lcd_Port@a 0070  
            __pstringtext 1800            __tdiv_to_l_@f1 0070            __tdiv_to_l_@f2 0074  
           ??__tdiv_to_l_ 0078            UART_Write@data 0070               ___fladd@grs 005F  
        ___lbmod@dividend 0073             ___xxtofl@sign 0078                 _TRISBbits 0086  
             ___fldiv@grs 0034               ___fldiv@rem 002D           ?_Lcd_Write_Char 0070  
       Lcd_Write_String@a 0075         Lcd_Write_String@i 007A               ___lbmod@rem 0075  
             ___flmul@grs 002F                 _Lcd_Clear 1B38            __end_of___flge 1F5F  
          __end_of___fleq 1D17            __end_of___wmul 1BEA          _Lcd_Write_String 1C17  
          __end_of_fround 133D       start_initialization 07FC       __end_of__tdiv_to_l_ 116E  
       ??_UART_Initialize 0070           ___llmod@divisor 0020           ___llmod@counter 0029  
              ?_Lcd_Clear 0070                  ??___flge 0078                  ??___fleq 0078  
                ??___wmul 0074                 __Umul8_16 0809           Lcd_Write_Char@a 0074  
         Lcd_Write_Char@y 0073                  ??_fround 003E             sprintf@tmpval 00AE  
               ___fladd@a 0050                 ___fladd@b 004C                fround@prec 004B  
               ___fldiv@a 0020                 ___fldiv@b 0024                 ___flmul@a 0024  
               ___flmul@b 0020                 ___flsub@a 0060                 ___flsub@b 0064  
               ___latbits 0002             __pcstackBANK0 0020             __pcstackBANK1 00A0  
           __pcstackBANK3 0190                  ?_Lcd_Cmd 0070               sprintf@flag 00AA  
             sprintf@eexp 00B6               sprintf@fval 00B8               sprintf@prec 00BD  
main@negativeDisplayValue 01C0          ??_Lcd_Set_Cursor 0075                  ?___fladd 004C  
                ?___fldiv 0020                  ?___awdiv 0076                  ?___lbdiv 0076  
                ?___flneg 0070                  ?___awmod 0070                  ?___lbmod 0070  
                ?___flmul 0020                  ?___flsub 0060                  ?___fltol 004D  
                ?___lldiv 0070                  ?___llmod 0020                 __npowers_ 1846  
              ?__Umul8_16 0070               __tdiv_to_l_ 10CB              ??__div_to_l_ 0078  
                ?_isdigit 0070                 _scale$873 0048                  ?_sprintf 0068  
       ??_UART_Write_Text 0073            ___wmul@product 0074                  Lcd_Cmd@a 0073  
      __end_of__div_to_l_ 10CB               ??_Lcd_Clear 0074               __stringbase 1812  
       ___wmul@multiplier 0070          ??_Lcd_Write_Char 0071                  _Lcd_Init 0003  
                _Lcd_Port 1B5C  __end_of_Lcd_Write_String 1C54               ??__Umul8_16 0072  
      __end_of__stringtab 1812               _isdigit$689 0070           _UART_Initialize 1B43  
              sprintf@val 00B2                  ___xxtofl 1F5F                  __ptext10 0809  
                __ptext11 10CB                  __ptext20 0800                  __ptext12 1028  
                __ptext21 1ECC                  __ptext13 1F5F                  __ptext30 0003  
                __ptext22 1CCF                  __ptext14 1BC9                  __ptext31 1B38  
                __ptext23 082C                  __ptext15 1D62                  __ptext32 1B74  
                __ptext24 1C54                  __ptext16 1E07                  __ptext33 1B5C  
                __ptext25 1B30                  __ptext17 1E65                  __ptext26 1B43  
                __ptext18 1B8C                  __ptext27 1C17                  __ptext19 133D  
                __ptext28 1BEA                  __ptext29 1C91                  __powers_ 1812  
     UART_Write_Text@text 0071                  isdigit@c 0071                  scale@scl 004C  
      Lcd_Write_Char@temp 0072                 sprintf@ap 00A9          __tdiv_to_l_@exp1 0025  
        __tdiv_to_l_@cntr 0024                 sprintf@sp 00BC          __tdiv_to_l_@quot 0020  
        ___lldiv@dividend 0074                 stringcode 180A   __end_of_UART_Initialize 1B4E  
      Lcd_Set_Cursor@temp 0079      main@combinedText_160 01A4              ?__tdiv_to_l_ 0070  
  __Umul8_16@multiplicand 0070           _UART_Write_Text 1C54                  sprintf@c 00BF  
                sprintf@f 0068          ___lldiv@quotient 0079                  stringtab 1800  
              _UART_Write 1B30             ___fladd@signs 005C          UART_Write_Text@i 0076  
            ___fladd@aexp 005D              ___fladd@bexp 005E      __Umul8_16@multiplier 0078  
       __Umul8_16@product 0074  
