

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Fri Aug 25 14:10:03 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
     7                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    16                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text24,local,class=CODE,merge=1,delta=2
    35                           	psect	text25,local,class=CODE,merge=1,delta=2
    36                           	psect	text26,local,class=CODE,merge=1,delta=2
    37                           	psect	text27,local,class=CODE,merge=1,delta=2
    38                           	psect	text28,local,class=CODE,merge=1,delta=2
    39                           	psect	text29,local,class=CODE,merge=1,delta=2
    40                           	psect	text30,local,class=CODE,merge=1,delta=2
    41                           	psect	text31,local,class=CODE,merge=1,delta=2
    42                           	psect	text32,local,class=CODE,merge=1,delta=2
    43                           	psect	text33,local,class=CODE,merge=1,delta=2
    44                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    45                           	psect	text1_split_1,local,class=CODE,merge=1,delta=2
    46                           	dabs	1,0x7E,2
    47  0000                     
    48                           ; Generated 22/03/2023 GMT
    49                           ; 
    50                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution. Publication is not required when
    64                           ;        this file is used in an embedded application.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC16F877A Definitions
    80                           ; 
    81                           ; SFR Addresses
    82  0000                     	;# 
    83  0001                     	;# 
    84  0002                     	;# 
    85  0003                     	;# 
    86  0004                     	;# 
    87  0005                     	;# 
    88  0006                     	;# 
    89  0007                     	;# 
    90  0008                     	;# 
    91  0009                     	;# 
    92  000A                     	;# 
    93  000B                     	;# 
    94  000C                     	;# 
    95  000D                     	;# 
    96  000E                     	;# 
    97  000E                     	;# 
    98  000F                     	;# 
    99  0010                     	;# 
   100  0011                     	;# 
   101  0012                     	;# 
   102  0013                     	;# 
   103  0014                     	;# 
   104  0015                     	;# 
   105  0015                     	;# 
   106  0016                     	;# 
   107  0017                     	;# 
   108  0018                     	;# 
   109  0019                     	;# 
   110  001A                     	;# 
   111  001B                     	;# 
   112  001B                     	;# 
   113  001C                     	;# 
   114  001D                     	;# 
   115  001E                     	;# 
   116  001F                     	;# 
   117  0081                     	;# 
   118  0085                     	;# 
   119  0086                     	;# 
   120  0087                     	;# 
   121  0088                     	;# 
   122  0089                     	;# 
   123  008C                     	;# 
   124  008D                     	;# 
   125  008E                     	;# 
   126  0091                     	;# 
   127  0092                     	;# 
   128  0093                     	;# 
   129  0094                     	;# 
   130  0098                     	;# 
   131  0099                     	;# 
   132  009C                     	;# 
   133  009D                     	;# 
   134  009E                     	;# 
   135  009F                     	;# 
   136  010C                     	;# 
   137  010D                     	;# 
   138  010E                     	;# 
   139  010F                     	;# 
   140  018C                     	;# 
   141  018D                     	;# 
   142  0000                     	;# 
   143  0001                     	;# 
   144  0002                     	;# 
   145  0003                     	;# 
   146  0004                     	;# 
   147  0005                     	;# 
   148  0006                     	;# 
   149  0007                     	;# 
   150  0008                     	;# 
   151  0009                     	;# 
   152  000A                     	;# 
   153  000B                     	;# 
   154  000C                     	;# 
   155  000D                     	;# 
   156  000E                     	;# 
   157  000E                     	;# 
   158  000F                     	;# 
   159  0010                     	;# 
   160  0011                     	;# 
   161  0012                     	;# 
   162  0013                     	;# 
   163  0014                     	;# 
   164  0015                     	;# 
   165  0015                     	;# 
   166  0016                     	;# 
   167  0017                     	;# 
   168  0018                     	;# 
   169  0019                     	;# 
   170  001A                     	;# 
   171  001B                     	;# 
   172  001B                     	;# 
   173  001C                     	;# 
   174  001D                     	;# 
   175  001E                     	;# 
   176  001F                     	;# 
   177  0081                     	;# 
   178  0085                     	;# 
   179  0086                     	;# 
   180  0087                     	;# 
   181  0088                     	;# 
   182  0089                     	;# 
   183  008C                     	;# 
   184  008D                     	;# 
   185  008E                     	;# 
   186  0091                     	;# 
   187  0092                     	;# 
   188  0093                     	;# 
   189  0094                     	;# 
   190  0098                     	;# 
   191  0099                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009E                     	;# 
   195  009F                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  018C                     	;# 
   201  018D                     	;# 
   202  0000                     	;# 
   203  0001                     	;# 
   204  0002                     	;# 
   205  0003                     	;# 
   206  0004                     	;# 
   207  0005                     	;# 
   208  0006                     	;# 
   209  0007                     	;# 
   210  0008                     	;# 
   211  0009                     	;# 
   212  000A                     	;# 
   213  000B                     	;# 
   214  000C                     	;# 
   215  000D                     	;# 
   216  000E                     	;# 
   217  000E                     	;# 
   218  000F                     	;# 
   219  0010                     	;# 
   220  0011                     	;# 
   221  0012                     	;# 
   222  0013                     	;# 
   223  0014                     	;# 
   224  0015                     	;# 
   225  0015                     	;# 
   226  0016                     	;# 
   227  0017                     	;# 
   228  0018                     	;# 
   229  0019                     	;# 
   230  001A                     	;# 
   231  001B                     	;# 
   232  001B                     	;# 
   233  001C                     	;# 
   234  001D                     	;# 
   235  001E                     	;# 
   236  001F                     	;# 
   237  0081                     	;# 
   238  0085                     	;# 
   239  0086                     	;# 
   240  0087                     	;# 
   241  0088                     	;# 
   242  0089                     	;# 
   243  008C                     	;# 
   244  008D                     	;# 
   245  008E                     	;# 
   246  0091                     	;# 
   247  0092                     	;# 
   248  0093                     	;# 
   249  0094                     	;# 
   250  0098                     	;# 
   251  0099                     	;# 
   252  009C                     	;# 
   253  009D                     	;# 
   254  009E                     	;# 
   255  009F                     	;# 
   256  010C                     	;# 
   257  010D                     	;# 
   258  010E                     	;# 
   259  010F                     	;# 
   260  018C                     	;# 
   261  018D                     	;# 
   262                           
   263                           	psect	stringtext
   264  0000'                    __pstringtext:
   265  0000'                    stringtab:
   266  0000'                    __stringtab:
   267                           
   268                           ;	String table - string pointers are 2 bytes each
   269  0000' 1BFF               	btfsc	btemp+1,7
   270  0001' 2800'              	ljmp	stringcode
   271  0002' 1383               	bcf	3,7
   272  0003' 187F               	btfsc	btemp+1,0
   273  0004' 1783               	bsf	3,7
   274  0005' 0800               	movf	0,w
   275  0006' 0A84               	incf	4,f
   276  0007' 1903               	skipnz
   277  0008' 0AFF               	incf	btemp+1,f
   278  0009' 0008               	return
   279  000A'                    stringcode:
   280  000A' 087F               	movf	btemp+1,w
   281  000B' 397F               	andlw	127
   282  000C' 008A               	movwf	10
   283  000D' 0804               	movf	4,w
   284  000E' 0A84               	incf	4,f
   285  000F' 1903               	skipnz
   286  0010' 0AFF               	incf	btemp+1,f
   287  0011' 0082               	movwf	2
   288  0012'                    __stringbase:
   289  0012'                    __end_of__stringtab:
   290  0012'                    __powers_:
   291  0012' 3400               	retlw	0
   292  0013' 3400               	retlw	0
   293  0014' 3480               	retlw	128
   294  0015' 343F               	retlw	63
   295  0016' 3400               	retlw	0
   296  0017' 3400               	retlw	0
   297  0018' 3420               	retlw	32
   298  0019' 3441               	retlw	65
   299  001A' 3400               	retlw	0
   300  001B' 3400               	retlw	0
   301  001C' 34C8               	retlw	200
   302  001D' 3442               	retlw	66
   303  001E' 3400               	retlw	0
   304  001F' 3400               	retlw	0
   305  0020' 347A               	retlw	122
   306  0021' 3444               	retlw	68
   307  0022' 3400               	retlw	0
   308  0023' 3440               	retlw	64
   309  0024' 341C               	retlw	28
   310  0025' 3446               	retlw	70
   311  0026' 3400               	retlw	0
   312  0027' 3450               	retlw	80
   313  0028' 34C3               	retlw	195
   314  0029' 3447               	retlw	71
   315  002A' 3400               	retlw	0
   316  002B' 3424               	retlw	36
   317  002C' 3474               	retlw	116
   318  002D' 3449               	retlw	73
   319  002E' 3480               	retlw	128
   320  002F' 3496               	retlw	150
   321  0030' 3418               	retlw	24
   322  0031' 344B               	retlw	75
   323  0032' 3420               	retlw	32
   324  0033' 34BC               	retlw	188
   325  0034' 34BE               	retlw	190
   326  0035' 344C               	retlw	76
   327  0036' 3428               	retlw	40
   328  0037' 346B               	retlw	107
   329  0038' 346E               	retlw	110
   330  0039' 344E               	retlw	78
   331  003A' 34F9               	retlw	249
   332  003B' 3402               	retlw	2
   333  003C' 3415               	retlw	21
   334  003D' 3450               	retlw	80
   335  003E' 34EC               	retlw	236
   336  003F' 3478               	retlw	120
   337  0040' 34AD               	retlw	173
   338  0041' 3460               	retlw	96
   339  0042' 34CA               	retlw	202
   340  0043' 34F2               	retlw	242
   341  0044' 3449               	retlw	73
   342  0045' 3471               	retlw	113
   343  0046'                    __end_of__powers_:
   344  0046'                    __npowers_:
   345  0046' 3400               	retlw	0
   346  0047' 3400               	retlw	0
   347  0048' 3480               	retlw	128
   348  0049' 343F               	retlw	63
   349  004A' 34CD               	retlw	205
   350  004B' 34CC               	retlw	204
   351  004C' 34CC               	retlw	204
   352  004D' 343D               	retlw	61
   353  004E' 340A               	retlw	10
   354  004F' 34D7               	retlw	215
   355  0050' 3423               	retlw	35
   356  0051' 343C               	retlw	60
   357  0052' 346F               	retlw	111
   358  0053' 3412               	retlw	18
   359  0054' 3483               	retlw	131
   360  0055' 343A               	retlw	58
   361  0056' 3417               	retlw	23
   362  0057' 34B7               	retlw	183
   363  0058' 34D1               	retlw	209
   364  0059' 3438               	retlw	56
   365  005A' 34AC               	retlw	172
   366  005B' 34C5               	retlw	197
   367  005C' 3427               	retlw	39
   368  005D' 3437               	retlw	55
   369  005E' 34BD               	retlw	189
   370  005F' 3437               	retlw	55
   371  0060' 3486               	retlw	134
   372  0061' 3435               	retlw	53
   373  0062' 3495               	retlw	149
   374  0063' 34BF               	retlw	191
   375  0064' 34D6               	retlw	214
   376  0065' 3433               	retlw	51
   377  0066' 3477               	retlw	119
   378  0067' 34CC               	retlw	204
   379  0068' 342B               	retlw	43
   380  0069' 3432               	retlw	50
   381  006A' 345F               	retlw	95
   382  006B' 3470               	retlw	112
   383  006C' 3489               	retlw	137
   384  006D' 3430               	retlw	48
   385  006E' 34FF               	retlw	255
   386  006F' 34E6               	retlw	230
   387  0070' 34DB               	retlw	219
   388  0071' 342E               	retlw	46
   389  0072' 3408               	retlw	8
   390  0073' 34E5               	retlw	229
   391  0074' 343C               	retlw	60
   392  0075' 341E               	retlw	30
   393  0076' 3460               	retlw	96
   394  0077' 3442               	retlw	66
   395  0078' 34A2               	retlw	162
   396  0079' 340D               	retlw	13
   397  007A'                    __end_of__npowers_:
   398  007A'                    _dpowers:
   399  007A' 3401               	retlw	1
   400  007B' 3400               	retlw	0
   401  007C' 3400               	retlw	0
   402  007D' 3400               	retlw	0
   403  007E' 340A               	retlw	10
   404  007F' 3400               	retlw	0
   405  0080' 3400               	retlw	0
   406  0081' 3400               	retlw	0
   407  0082' 3464               	retlw	100
   408  0083' 3400               	retlw	0
   409  0084' 3400               	retlw	0
   410  0085' 3400               	retlw	0
   411  0086' 34E8               	retlw	232
   412  0087' 3403               	retlw	3
   413  0088' 3400               	retlw	0
   414  0089' 3400               	retlw	0
   415  008A' 3410               	retlw	16
   416  008B' 3427               	retlw	39
   417  008C' 3400               	retlw	0
   418  008D' 3400               	retlw	0
   419  008E' 34A0               	retlw	160
   420  008F' 3486               	retlw	134
   421  0090' 3401               	retlw	1
   422  0091' 3400               	retlw	0
   423  0092' 3440               	retlw	64
   424  0093' 3442               	retlw	66
   425  0094' 340F               	retlw	15
   426  0095' 3400               	retlw	0
   427  0096' 3480               	retlw	128
   428  0097' 3496               	retlw	150
   429  0098' 3498               	retlw	152
   430  0099' 3400               	retlw	0
   431  009A' 3400               	retlw	0
   432  009B' 34E1               	retlw	225
   433  009C' 34F5               	retlw	245
   434  009D' 3405               	retlw	5
   435  009E' 3400               	retlw	0
   436  009F' 34CA               	retlw	202
   437  00A0' 349A               	retlw	154
   438  00A1' 343B               	retlw	59
   439  00A2'                    __end_of_dpowers:
   440  0019                     _TXREG	set	25
   441  0018                     _RCSTA	set	24
   442  001E                     _ADRESH	set	30
   443  001F                     _ADCON0	set	31
   444  003B                     _RC3	set	59
   445  004A                     _RE2	set	74
   446  003A                     _RC2	set	58
   447  0048                     _RE0	set	72
   448  0038                     _RC0	set	56
   449  0049                     _RE1	set	73
   450  0039                     _RC1	set	57
   451  00FA                     _GO	set	250
   452  002C                     _RA4	set	44
   453  0034                     _RB4	set	52
   454  0035                     _RB5	set	53
   455  0030                     _RB0	set	48
   456  0031                     _RB1	set	49
   457  0032                     _RB2	set	50
   458  0033                     _RB3	set	51
   459  0098                     _TXSTA	set	152
   460  0099                     _SPBRG	set	153
   461  009F                     _ADCON1	set	159
   462  0086                     _TRISBbits	set	134
   463  04C1                     _TRMT	set	1217
   464  043F                     _TRISC7	set	1087
   465  043E                     _TRISC6	set	1086
   466  0429                     _TRISA1	set	1065
   467  043B                     _TRISC3	set	1083
   468  0438                     _TRISC0	set	1080
   469  044A                     _TRISE2	set	1098
   470  043A                     _TRISC2	set	1082
   471  0439                     _TRISC1	set	1081
   472  0449                     _TRISE1	set	1097
   473  0448                     _TRISE0	set	1096
   474  042C                     _TRISA4	set	1068
   475  00A2'                    STR_22:
   476  00A2' 3420               	retlw	32	;' '
   477  00A3' 3420               	retlw	32	;' '
   478  00A4' 3420               	retlw	32	;' '
   479  00A5' 3420               	retlw	32	;' '
   480  00A6' 3420               	retlw	32	;' '
   481  00A7' 3420               	retlw	32	;' '
   482  00A8' 3420               	retlw	32	;' '
   483  00A9' 3420               	retlw	32	;' '
   484  00AA' 3420               	retlw	32	;' '
   485  00AB' 3420               	retlw	32	;' '
   486  00AC' 3420               	retlw	32	;' '
   487  00AD' 3420               	retlw	32	;' '
   488  00AE' 3420               	retlw	32	;' '
   489  00AF' 3420               	retlw	32	;' '
   490  00B0' 3400               	retlw	0
   491  00B1'                    STR_24:
   492  00B1' 3444               	retlw	68	;'D'
   493  00B2' 3443               	retlw	67	;'C'
   494  00B3' 3420               	retlw	32	;' '
   495  00B4' 3453               	retlw	83	;'S'
   496  00B5' 3445               	retlw	69	;'E'
   497  00B6' 3452               	retlw	82	;'R'
   498  00B7' 3456               	retlw	86	;'V'
   499  00B8' 344F               	retlw	79	;'O'
   500  00B9' 3420               	retlw	32	;' '
   501  00BA' 3445               	retlw	69	;'E'
   502  00BB' 3452               	retlw	82	;'R'
   503  00BC' 3452               	retlw	82	;'R'
   504  00BD' 344F               	retlw	79	;'O'
   505  00BE' 3452               	retlw	82	;'R'
   506  00BF' 3400               	retlw	0
   507  00C0'                    STR_1:
   508  00C0' 3448               	retlw	72	;'H'
   509  00C1' 3469               	retlw	105	;'i'
   510  00C2' 344B               	retlw	75	;'K'
   511  00C3' 342D               	retlw	45	;'-'
   512  00C4' 3455               	retlw	85	;'U'
   513  00C5' 345A               	retlw	90	;'Z'
   514  00C6' 344D               	retlw	77	;'M'
   515  00C7' 3441               	retlw	65	;'A'
   516  00C8' 344E               	retlw	78	;'N'
   517  00C9' 344C               	retlw	76	;'L'
   518  00CA' 3441               	retlw	65	;'A'
   519  00CB' 3452               	retlw	82	;'R'
   520  00CC' 3400               	retlw	0
   521  00CD'                    STR_8:
   522  00CD' 3446               	retlw	70	;'F'
   523  00CE' 3457               	retlw	87	;'W'
   524  00CF' 3444               	retlw	68	;'D'
   525  00D0' 3420               	retlw	32	;' '
   526  00D1' 344C               	retlw	76	;'L'
   527  00D2' 3449               	retlw	73	;'I'
   528  00D3' 344D               	retlw	77	;'M'
   529  00D4' 3449               	retlw	73	;'I'
   530  00D5' 3454               	retlw	84	;'T'
   531  00D6' 3400               	retlw	0
   532  00D7'                    STR_14:
   533  00D7' 3452               	retlw	82	;'R'
   534  00D8' 3445               	retlw	69	;'E'
   535  00D9' 3457               	retlw	87	;'W'
   536  00DA' 3420               	retlw	32	;' '
   537  00DB' 344C               	retlw	76	;'L'
   538  00DC' 3449               	retlw	73	;'I'
   539  00DD' 344D               	retlw	77	;'M'
   540  00DE' 3449               	retlw	73	;'I'
   541  00DF' 3454               	retlw	84	;'T'
   542  00E0' 3400               	retlw	0
   543  00E1'                    STR_10:
   544  00E1' 3446               	retlw	70	;'F'
   545  00E2' 3445               	retlw	69	;'E'
   546  00E3' 3441               	retlw	65	;'A'
   547  00E4' 3444               	retlw	68	;'D'
   548  00E5' 3420               	retlw	32	;' '
   549  00E6' 3434               	retlw	52	;'4'
   550  00E7' 3430               	retlw	48	;'0'
   551  00E8' 3430               	retlw	48	;'0'
   552  00E9' 3400               	retlw	0
   553  00EA'                    STR_11:
   554  00EA' 3473               	retlw	115	;'s'
   555  00EB' 342D               	retlw	45	;'-'
   556  00EC' 3432               	retlw	50	;'2'
   557  00ED' 3435               	retlw	53	;'5'
   558  00EE' 3435               	retlw	53	;'5'
   559  00EF' 340D               	retlw	13
   560  00F0' 340A               	retlw	10
   561  00F1' 3400               	retlw	0
   562  00F2'                    STR_6:
   563  00F2' 3466               	retlw	102	;'f'
   564  00F3' 346C               	retlw	108	;'l'
   565  00F4' 346F               	retlw	111	;'o'
   566  00F5' 3461               	retlw	97	;'a'
   567  00F6' 3474               	retlw	116	;'t'
   568  00F7' 343A               	retlw	58	;':'
   569  00F8' 3420               	retlw	32	;' '
   570  00F9' 3400               	retlw	0
   571  00FA'                    STR_2:
   572  00FA' 3450               	retlw	80	;'P'
   573  00FB' 3472               	retlw	114	;'r'
   574  00FC' 346F               	retlw	111	;'o'
   575  00FD' 346A               	retlw	106	;'j'
   576  00FE' 3465               	retlw	101	;'e'
   577  00FF' 3463               	retlw	99	;'c'
   578  0100' 3474               	retlw	116	;'t'
   579  0101' 3400               	retlw	0
   580  0102'                    STR_17:
   581  0102' 3473               	retlw	115	;'s'
   582  0103' 3432               	retlw	50	;'2'
   583  0104' 3435               	retlw	53	;'5'
   584  0105' 3435               	retlw	53	;'5'
   585  0106' 340D               	retlw	13
   586  0107' 340A               	retlw	10
   587  0108' 3400               	retlw	0
   588  0109'                    STR_4:
   589  0109' 3472               	retlw	114	;'r'
   590  010A' 3461               	retlw	97	;'a'
   591  010B' 3474               	retlw	116	;'t'
   592  010C' 3465               	retlw	101	;'e'
   593  010D' 343A               	retlw	58	;':'
   594  010E' 3420               	retlw	32	;' '
   595  010F' 3400               	retlw	0
   596  0110'                    STR_13:
   597  0110' 3473               	retlw	115	;'s'
   598  0111' 3425               	retlw	37	;'%'
   599  0112' 3464               	retlw	100	;'d'
   600  0113' 340D               	retlw	13
   601  0114' 340A               	retlw	10
   602  0115' 3400               	retlw	0
   603  0116'                    STR_7:
   604  0116' 3425               	retlw	37	;'%'
   605  0117' 3433               	retlw	51	;'3'
   606  0118' 342E               	retlw	46	;'.'
   607  0119' 3431               	retlw	49	;'1'
   608  011A' 3466               	retlw	102	;'f'
   609  011B' 3400               	retlw	0
   610  011C'                    STR_9:
   611  011C' 3473               	retlw	115	;'s'
   612  011D' 3430               	retlw	48	;'0'
   613  011E' 340D               	retlw	13
   614  011F' 340A               	retlw	10
   615  0120' 3400               	retlw	0
   616  0121'                    STR_12:
   617  0121' 3446               	retlw	70	;'F'
   618  0122' 3457               	retlw	87	;'W'
   619  0123' 3444               	retlw	68	;'D'
   620  0124' 3420               	retlw	32	;' '
   621  0125' 3400               	retlw	0
   622  0126'                    STR_18:
   623  0126' 3452               	retlw	82	;'R'
   624  0127' 3445               	retlw	69	;'E'
   625  0128' 3457               	retlw	87	;'W'
   626  0129' 3420               	retlw	32	;' '
   627  012A' 3400               	retlw	0
   628  012B'                    STR_20:
   629  012B' 3453               	retlw	83	;'S'
   630  012C' 3454               	retlw	84	;'T'
   631  012D' 344F               	retlw	79	;'O'
   632  012E' 3450               	retlw	80	;'P'
   633  012F' 3400               	retlw	0
   634  0130'                    STR_5:
   635  0130' 3425               	retlw	37	;'%'
   636  0131' 3433               	retlw	51	;'3'
   637  0132' 3475               	retlw	117	;'u'
   638  0133' 3400               	retlw	0
   639  0134'                    STR_3:
   640  0134' 3456               	retlw	86	;'V'
   641  0135' 3432               	retlw	50	;'2'
   642  0136' 3400               	retlw	0
   643  011C'                    
   644                           	psect	cinit
   645  0000'                    start_initialization:	
   646                           ; #config settings
   647                           
   648  0000'                    __initialization:
   649  0000'                    end_of_initialization:	
   650                           ;End of C runtime variable initialization code
   651                           
   652  0000'                    __end_of__initialization:
   653  0000' 0183               	clrf	3
   654  0001' 120A' 118A' 2800'  	ljmp	_main	;jump to C main() function
   655                           
   656                           	psect	cstackBANK3
   657  0000'                    __pcstackBANK3:
   658  0000'                    main@combinedText:
   659                           
   660                           ; 20 bytes @ 0x0
   661  0000'                    	ds	20
   662  0014'                    main@combinedText_160:
   663                           
   664                           ; 20 bytes @ 0x14
   665  0014'                    	ds	20
   666  0028'                    main@floatVal:
   667                           
   668                           ; 4 bytes @ 0x28
   669  0028'                    	ds	4
   670  002C'                    main@adcValue1:
   671                           
   672                           ; 2 bytes @ 0x2C
   673  002C'                    	ds	2
   674  002E'                    main@adcValue2:
   675                           
   676                           ; 2 bytes @ 0x2E
   677  002E'                    	ds	2
   678  0030'                    main@negativeDisplayValue:
   679                           
   680                           ; 2 bytes @ 0x30
   681  0030'                    	ds	2
   682  0032'                    main@adcString1:
   683                           
   684                           ; 4 bytes @ 0x32
   685  0032'                    	ds	4
   686  0036'                    main@adcString2:
   687                           
   688                           ; 4 bytes @ 0x36
   689  0036'                    	ds	4
   690  003A'                    main@displayValue:
   691                           
   692                           ; 2 bytes @ 0x3A
   693  003A'                    	ds	2
   694                           
   695                           	psect	cstackBANK1
   696  0000'                    __pcstackBANK1:
   697  0000'                    ??_sprintf:
   698                           
   699                           ; 1 bytes @ 0x0
   700  0000'                    	ds	5
   701  0005'                    _sprintf$874:
   702                           
   703                           ; 4 bytes @ 0x5
   704  0005'                    	ds	4
   705  0009'                    sprintf@ap:
   706                           
   707                           ; 1 bytes @ 0x9
   708  0009'                    	ds	1
   709  000A'                    sprintf@flag:
   710                           
   711                           ; 2 bytes @ 0xA
   712  000A'                    	ds	2
   713  000C'                    sprintf@width:
   714                           
   715                           ; 2 bytes @ 0xC
   716  000C'                    	ds	2
   717  000E'                    sprintf@tmpval:
   718                           
   719                           ; 4 bytes @ 0xE
   720  000E'                    	ds	4
   721  0012'                    sprintf@val:
   722                           
   723                           ; 4 bytes @ 0x12
   724  0012'                    	ds	4
   725  0016'                    sprintf@eexp:
   726                           
   727                           ; 2 bytes @ 0x16
   728  0016'                    	ds	2
   729  0018'                    sprintf@fval:
   730                           
   731                           ; 4 bytes @ 0x18
   732  0018'                    	ds	4
   733  001C'                    sprintf@sp:
   734                           
   735                           ; 1 bytes @ 0x1C
   736  001C'                    	ds	1
   737  001D'                    sprintf@prec:
   738                           
   739                           ; 2 bytes @ 0x1D
   740  001D'                    	ds	2
   741  001F'                    sprintf@c:
   742                           
   743                           ; 1 bytes @ 0x1F
   744  001F'                    	ds	1
   745  0020'                    ??_main:
   746                           
   747                           ; 1 bytes @ 0x20
   748  0020'                    	ds	3
   749                           
   750                           	psect	cstackCOMMON
   751  0000'                    __pcstackCOMMON:
   752  0000'                    ?_isdigit:
   753  0000'                    ?___fleq:	
   754                           ; 1 bit 
   755                           
   756  0000'                    ?___flge:	
   757                           ; 1 bit 
   758                           
   759  0000'                    ?_UART_Initialize:	
   760                           ; 1 bit 
   761                           
   762  0000'                    ??_UART_Initialize:	
   763                           ; 1 bytes @ 0x0
   764                           
   765  0000'                    ??_isdigit:	
   766                           ; 1 bytes @ 0x0
   767                           
   768  0000'                    ?_Lcd_Port:	
   769                           ; 1 bytes @ 0x0
   770                           
   771  0000'                    ??_Lcd_Port:	
   772                           ; 1 bytes @ 0x0
   773                           
   774  0000'                    ?_Lcd_Cmd:	
   775                           ; 1 bytes @ 0x0
   776                           
   777  0000'                    ?_Lcd_Clear:	
   778                           ; 1 bytes @ 0x0
   779                           
   780  0000'                    ?_Lcd_Init:	
   781                           ; 1 bytes @ 0x0
   782                           
   783  0000'                    ?_Lcd_Write_Char:	
   784                           ; 1 bytes @ 0x0
   785                           
   786  0000'                    ?_UART_Write:	
   787                           ; 1 bytes @ 0x0
   788                           
   789  0000'                    ??_UART_Write:	
   790                           ; 1 bytes @ 0x0
   791                           
   792  0000'                    ?__Umul8_16:	
   793                           ; 1 bytes @ 0x0
   794                           
   795  0000'                    ?_main:	
   796                           ; 2 bytes @ 0x0
   797                           
   798  0000'                    ?___wmul:	
   799                           ; 2 bytes @ 0x0
   800                           
   801  0000'                    ?___awmod:	
   802                           ; 2 bytes @ 0x0
   803                           
   804  0000'                    ?___lwmod:	
   805                           ; 2 bytes @ 0x0
   806                           
   807  0000'                    ?__tdiv_to_l_:	
   808                           ; 2 bytes @ 0x0
   809                           
   810  0000'                    ?__div_to_l_:	
   811                           ; 4 bytes @ 0x0
   812                           
   813  0000'                    ?___lldiv:	
   814                           ; 4 bytes @ 0x0
   815                           
   816  0000'                    ?___flneg:	
   817                           ; 4 bytes @ 0x0
   818                           
   819  0000'                    ?___xxtofl:	
   820                           ; 4 bytes @ 0x0
   821                           
   822  0000'                    Lcd_Port@a:	
   823                           ; 4 bytes @ 0x0
   824                           
   825  0000'                    UART_Write@data:	
   826                           ; 1 bytes @ 0x0
   827                           
   828  0000'                    __Umul8_16@multiplicand:	
   829                           ; 1 bytes @ 0x0
   830                           
   831  0000'                    _isdigit$689:	
   832                           ; 1 bytes @ 0x0
   833                           
   834  0000'                    ___wmul@multiplier:	
   835                           ; 1 bytes @ 0x0
   836                           
   837  0000'                    ___awmod@divisor:	
   838                           ; 2 bytes @ 0x0
   839                           
   840  0000'                    ___lwmod@divisor:	
   841                           ; 2 bytes @ 0x0
   842                           
   843  0000'                    ___lldiv@divisor:	
   844                           ; 2 bytes @ 0x0
   845                           
   846  0000'                    __div_to_l_@f1:	
   847                           ; 4 bytes @ 0x0
   848                           
   849  0000'                    ___fleq@ff1:	
   850                           ; 4 bytes @ 0x0
   851                           
   852  0000'                    ___flge@ff1:	
   853                           ; 4 bytes @ 0x0
   854                           
   855  0000'                    ___flneg@f1:	
   856                           ; 4 bytes @ 0x0
   857                           
   858  0000'                    __tdiv_to_l_@f1:	
   859                           ; 4 bytes @ 0x0
   860                           
   861  0000'                    ___xxtofl@val:	
   862                           ; 4 bytes @ 0x0
   863                           
   864                           
   865                           ; 4 bytes @ 0x0
   866  0000'                    	ds	1
   867  0001'                    ?_UART_Write_Text:
   868  0001'                    ??_Lcd_Cmd:	
   869                           ; 1 bytes @ 0x1
   870                           
   871  0001'                    ??_Lcd_Write_Char:	
   872                           ; 1 bytes @ 0x1
   873                           
   874  0001'                    isdigit@c:	
   875                           ; 1 bytes @ 0x1
   876                           
   877  0001'                    UART_Write_Text@text:	
   878                           ; 1 bytes @ 0x1
   879                           
   880                           
   881                           ; 2 bytes @ 0x1
   882  0001'                    	ds	1
   883  0002'                    ??__Umul8_16:
   884  0002'                    Lcd_Write_Char@temp:	
   885                           ; 1 bytes @ 0x2
   886                           
   887  0002'                    ___wmul@multiplicand:	
   888                           ; 1 bytes @ 0x2
   889                           
   890  0002'                    ___awmod@dividend:	
   891                           ; 2 bytes @ 0x2
   892                           
   893  0002'                    ___lwmod@dividend:	
   894                           ; 2 bytes @ 0x2
   895                           
   896                           
   897                           ; 2 bytes @ 0x2
   898  0002'                    	ds	1
   899  0003'                    ??_UART_Write_Text:
   900  0003'                    Lcd_Cmd@a:	
   901                           ; 1 bytes @ 0x3
   902                           
   903  0003'                    Lcd_Write_Char@y:	
   904                           ; 1 bytes @ 0x3
   905                           
   906                           
   907                           ; 1 bytes @ 0x3
   908  0003'                    	ds	1
   909  0004'                    ??_Lcd_Clear:
   910  0004'                    ?_Lcd_Set_Cursor:	
   911                           ; 1 bytes @ 0x4
   912                           
   913  0004'                    ??_Lcd_Init:	
   914                           ; 1 bytes @ 0x4
   915                           
   916  0004'                    ??___wmul:	
   917                           ; 1 bytes @ 0x4
   918                           
   919  0004'                    ??___awmod:	
   920                           ; 1 bytes @ 0x4
   921                           
   922  0004'                    ??___flneg:	
   923                           ; 1 bytes @ 0x4
   924                           
   925  0004'                    ??___lwmod:	
   926                           ; 1 bytes @ 0x4
   927                           
   928  0004'                    ??___xxtofl:	
   929                           ; 1 bytes @ 0x4
   930                           
   931  0004'                    Lcd_Set_Cursor@b:	
   932                           ; 1 bytes @ 0x4
   933                           
   934  0004'                    Lcd_Write_Char@a:	
   935                           ; 1 bytes @ 0x4
   936                           
   937  0004'                    ___awmod@counter:	
   938                           ; 1 bytes @ 0x4
   939                           
   940  0004'                    ___lwmod@counter:	
   941                           ; 1 bytes @ 0x4
   942                           
   943  0004'                    ___wmul@product:	
   944                           ; 1 bytes @ 0x4
   945                           
   946  0004'                    __Umul8_16@product:	
   947                           ; 2 bytes @ 0x4
   948                           
   949  0004'                    ___lldiv@dividend:	
   950                           ; 2 bytes @ 0x4
   951                           
   952  0004'                    __div_to_l_@f2:	
   953                           ; 4 bytes @ 0x4
   954                           
   955  0004'                    ___fleq@ff2:	
   956                           ; 4 bytes @ 0x4
   957                           
   958  0004'                    ___flge@ff2:	
   959                           ; 4 bytes @ 0x4
   960                           
   961  0004'                    __tdiv_to_l_@f2:	
   962                           ; 4 bytes @ 0x4
   963                           
   964                           
   965                           ; 4 bytes @ 0x4
   966  0004'                    	ds	1
   967  0005'                    ??_Lcd_Set_Cursor:
   968  0005'                    ?_Lcd_Write_String:	
   969                           ; 1 bytes @ 0x5
   970                           
   971  0005'                    ?___lwdiv:	
   972                           ; 1 bytes @ 0x5
   973                           
   974  0005'                    ___awmod@sign:	
   975                           ; 2 bytes @ 0x5
   976                           
   977  0005'                    Lcd_Write_String@a:	
   978                           ; 1 bytes @ 0x5
   979                           
   980  0005'                    ___lwdiv@divisor:	
   981                           ; 2 bytes @ 0x5
   982                           
   983                           
   984                           ; 2 bytes @ 0x5
   985  0005'                    	ds	1
   986  0006'                    ?___awdiv:
   987  0006'                    Lcd_Set_Cursor@a:	
   988                           ; 2 bytes @ 0x6
   989                           
   990  0006'                    UART_Write_Text@i:	
   991                           ; 1 bytes @ 0x6
   992                           
   993  0006'                    ___awdiv@divisor:	
   994                           ; 2 bytes @ 0x6
   995                           
   996  0006'                    __Umul8_16@word_mpld:	
   997                           ; 2 bytes @ 0x6
   998                           
   999                           
  1000                           ; 2 bytes @ 0x6
  1001  0006'                    	ds	1
  1002  0007'                    ??_Lcd_Write_String:
  1003  0007'                    Lcd_Set_Cursor@z:	
  1004                           ; 1 bytes @ 0x7
  1005                           
  1006  0007'                    ___lwdiv@dividend:	
  1007                           ; 1 bytes @ 0x7
  1008                           
  1009                           
  1010                           ; 2 bytes @ 0x7
  1011  0007'                    	ds	1
  1012  0008'                    ??__tdiv_to_l_:
  1013  0008'                    ??__div_to_l_:	
  1014                           ; 1 bytes @ 0x8
  1015                           
  1016  0008'                    ??___lldiv:	
  1017                           ; 1 bytes @ 0x8
  1018                           
  1019  0008'                    ??___fleq:	
  1020                           ; 1 bytes @ 0x8
  1021                           
  1022  0008'                    ??___flge:	
  1023                           ; 1 bytes @ 0x8
  1024                           
  1025  0008'                    Lcd_Set_Cursor@y:	
  1026                           ; 1 bytes @ 0x8
  1027                           
  1028  0008'                    __Umul8_16@multiplier:	
  1029                           ; 1 bytes @ 0x8
  1030                           
  1031  0008'                    ___xxtofl@sign:	
  1032                           ; 1 bytes @ 0x8
  1033                           
  1034  0008'                    ___awdiv@dividend:	
  1035                           ; 1 bytes @ 0x8
  1036                           
  1037                           
  1038                           ; 2 bytes @ 0x8
  1039  0008'                    	ds	1
  1040  0009'                    ??___lwdiv:
  1041  0009'                    Lcd_Set_Cursor@temp:	
  1042                           ; 1 bytes @ 0x9
  1043                           
  1044  0009'                    ___xxtofl@exp:	
  1045                           ; 1 bytes @ 0x9
  1046                           
  1047  0009'                    ___lwdiv@quotient:	
  1048                           ; 1 bytes @ 0x9
  1049                           
  1050  0009'                    ___lldiv@quotient:	
  1051                           ; 2 bytes @ 0x9
  1052                           
  1053                           
  1054                           ; 4 bytes @ 0x9
  1055  0009'                    	ds	1
  1056  000A'                    ??___awdiv:
  1057  000A'                    ___awdiv@counter:	
  1058                           ; 1 bytes @ 0xA
  1059                           
  1060  000A'                    Lcd_Write_String@i:	
  1061                           ; 1 bytes @ 0xA
  1062                           
  1063  000A'                    ___xxtofl@arg:	
  1064                           ; 2 bytes @ 0xA
  1065                           
  1066                           
  1067                           ; 4 bytes @ 0xA
  1068  000A'                    	ds	1
  1069  000B'                    ___awdiv@sign:
  1070  000B'                    ___lwdiv@counter:	
  1071                           ; 1 bytes @ 0xB
  1072                           
  1073                           
  1074                           ; 1 bytes @ 0xB
  1075  000B'                    	ds	1
  1076  000C'                    ___awdiv@quotient:
  1077                           
  1078                           ; 2 bytes @ 0xC
  1079  000C'                    	ds	1
  1080  000D'                    ___lldiv@counter:
  1081                           
  1082                           ; 1 bytes @ 0xD
  1083  000D'                    	ds	1
  1084  000E'                    ??___flsub:
  1085                           
  1086                           	psect	cstackBANK0
  1087  0000'                    __pcstackBANK0:	
  1088                           ; 1 bytes @ 0xE
  1089                           
  1090  0000'                    ?___llmod:
  1091  0000'                    ?___fldiv:	
  1092                           ; 4 bytes @ 0x0
  1093                           
  1094  0000'                    ?___flmul:	
  1095                           ; 4 bytes @ 0x0
  1096                           
  1097  0000'                    __div_to_l_@quot:	
  1098                           ; 4 bytes @ 0x0
  1099                           
  1100  0000'                    __tdiv_to_l_@quot:	
  1101                           ; 4 bytes @ 0x0
  1102                           
  1103  0000'                    ___llmod@divisor:	
  1104                           ; 4 bytes @ 0x0
  1105                           
  1106  0000'                    ___fldiv@a:	
  1107                           ; 4 bytes @ 0x0
  1108                           
  1109  0000'                    ___flmul@b:	
  1110                           ; 4 bytes @ 0x0
  1111                           
  1112                           
  1113                           ; 4 bytes @ 0x0
  1114  0000'                    	ds	4
  1115  0004'                    __div_to_l_@cntr:
  1116  0004'                    __tdiv_to_l_@cntr:	
  1117                           ; 1 bytes @ 0x4
  1118                           
  1119  0004'                    ___llmod@dividend:	
  1120                           ; 1 bytes @ 0x4
  1121                           
  1122  0004'                    ___fldiv@b:	
  1123                           ; 4 bytes @ 0x4
  1124                           
  1125  0004'                    ___flmul@a:	
  1126                           ; 4 bytes @ 0x4
  1127                           
  1128                           
  1129                           ; 4 bytes @ 0x4
  1130  0004'                    	ds	1
  1131  0005'                    __div_to_l_@exp1:
  1132  0005'                    __tdiv_to_l_@exp1:	
  1133                           ; 1 bytes @ 0x5
  1134                           
  1135                           
  1136                           ; 1 bytes @ 0x5
  1137  0005'                    	ds	3
  1138  0008'                    ??___llmod:
  1139  0008'                    ??___fldiv:	
  1140                           ; 1 bytes @ 0x8
  1141                           
  1142  0008'                    ??___flmul:	
  1143                           ; 1 bytes @ 0x8
  1144                           
  1145                           
  1146                           ; 1 bytes @ 0x8
  1147  0008'                    	ds	1
  1148  0009'                    ___llmod@counter:
  1149                           
  1150                           ; 1 bytes @ 0x9
  1151  0009'                    	ds	4
  1152  000D'                    ___flmul@sign:
  1153  000D'                    ___fldiv@rem:	
  1154                           ; 1 bytes @ 0xD
  1155                           
  1156                           
  1157                           ; 4 bytes @ 0xD
  1158  000D'                    	ds	1
  1159  000E'                    ___flmul@grs:
  1160                           
  1161                           ; 4 bytes @ 0xE
  1162  000E'                    	ds	3
  1163  0011'                    ___fldiv@sign:
  1164                           
  1165                           ; 1 bytes @ 0x11
  1166  0011'                    	ds	1
  1167  0012'                    ___flmul@aexp:
  1168  0012'                    ___fldiv@new_exp:	
  1169                           ; 1 bytes @ 0x12
  1170                           
  1171                           
  1172                           ; 2 bytes @ 0x12
  1173  0012'                    	ds	1
  1174  0013'                    ___flmul@bexp:
  1175                           
  1176                           ; 1 bytes @ 0x13
  1177  0013'                    	ds	1
  1178  0014'                    ___fldiv@grs:
  1179  0014'                    ___flmul@prod:	
  1180                           ; 4 bytes @ 0x14
  1181                           
  1182                           
  1183                           ; 4 bytes @ 0x14
  1184  0014'                    	ds	4
  1185  0018'                    ___fldiv@bexp:
  1186  0018'                    ___flmul@temp:	
  1187                           ; 1 bytes @ 0x18
  1188                           
  1189                           
  1190                           ; 2 bytes @ 0x18
  1191  0018'                    	ds	1
  1192  0019'                    ___fldiv@aexp:
  1193                           
  1194                           ; 1 bytes @ 0x19
  1195  0019'                    	ds	1
  1196  001A'                    ?_fround:
  1197  001A'                    ?_scale:	
  1198                           ; 4 bytes @ 0x1A
  1199                           
  1200                           
  1201                           ; 4 bytes @ 0x1A
  1202  001A'                    	ds	4
  1203  001E'                    ??_fround:
  1204  001E'                    ??_scale:	
  1205                           ; 1 bytes @ 0x1E
  1206                           
  1207                           
  1208                           ; 1 bytes @ 0x1E
  1209  001E'                    	ds	7
  1210  0025'                    _fround$872:
  1211                           
  1212                           ; 4 bytes @ 0x25
  1213  0025'                    	ds	3
  1214  0028'                    _scale$873:
  1215                           
  1216                           ; 4 bytes @ 0x28
  1217  0028'                    	ds	1
  1218  0029'                    _fround$871:
  1219                           
  1220                           ; 4 bytes @ 0x29
  1221  0029'                    	ds	3
  1222  002C'                    scale@scl:
  1223                           
  1224                           ; 1 bytes @ 0x2C
  1225  002C'                    	ds	1
  1226  002D'                    ?___fltol:
  1227  002D'                    fround@prec:	
  1228                           ; 4 bytes @ 0x2D
  1229                           
  1230  002D'                    ___fltol@f1:	
  1231                           ; 1 bytes @ 0x2D
  1232                           
  1233                           
  1234                           ; 4 bytes @ 0x2D
  1235  002D'                    	ds	1
  1236  002E'                    ?___fladd:
  1237  002E'                    ___fladd@b:	
  1238                           ; 4 bytes @ 0x2E
  1239                           
  1240                           
  1241                           ; 4 bytes @ 0x2E
  1242  002E'                    	ds	3
  1243  0031'                    ??___fltol:
  1244                           
  1245                           ; 1 bytes @ 0x31
  1246  0031'                    	ds	1
  1247  0032'                    ___fladd@a:
  1248                           
  1249                           ; 4 bytes @ 0x32
  1250  0032'                    	ds	3
  1251  0035'                    ___fltol@sign1:
  1252                           
  1253                           ; 1 bytes @ 0x35
  1254  0035'                    	ds	1
  1255  0036'                    ??___fladd:
  1256  0036'                    ___fltol@exp1:	
  1257                           ; 1 bytes @ 0x36
  1258                           
  1259                           
  1260                           ; 1 bytes @ 0x36
  1261  0036'                    	ds	8
  1262  003E'                    ___fladd@signs:
  1263                           
  1264                           ; 1 bytes @ 0x3E
  1265  003E'                    	ds	1
  1266  003F'                    ___fladd@aexp:
  1267                           
  1268                           ; 1 bytes @ 0x3F
  1269  003F'                    	ds	1
  1270  0040'                    ___fladd@bexp:
  1271                           
  1272                           ; 1 bytes @ 0x40
  1273  0040'                    	ds	1
  1274  0041'                    ___fladd@grs:
  1275                           
  1276                           ; 1 bytes @ 0x41
  1277  0041'                    	ds	1
  1278  0042'                    ?___flsub:
  1279  0042'                    ___flsub@a:	
  1280                           ; 4 bytes @ 0x42
  1281                           
  1282                           
  1283                           ; 4 bytes @ 0x42
  1284  0042'                    	ds	4
  1285  0046'                    ___flsub@b:
  1286                           
  1287                           ; 4 bytes @ 0x46
  1288  0046'                    	ds	4
  1289  004A'                    ?_sprintf:
  1290  004A'                    sprintf@f:	
  1291                           ; 2 bytes @ 0x4A
  1292                           
  1293                           
  1294                           ; 2 bytes @ 0x4A
  1295  004A'                    	ds	6
  1296                           
  1297                           	psect	maintext
  1298  0000'                    __pmaintext:	
  1299 ;;
  1300 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1301 ;;
  1302 ;; *************** function _main *****************
  1303 ;; Defined at:
  1304 ;;		line 27 in file "main.c"
  1305 ;; Parameters:    Size  Location     Type
  1306 ;;		None
  1307 ;; Auto vars:     Size  Location     Type
  1308 ;;  combinedText   20   20[BANK3 ] unsigned char [20]
  1309 ;;  combinedText   20    0[BANK3 ] unsigned char [20]
  1310 ;;  negativeDisp    2   48[BANK3 ] int 
  1311 ;;  adcString2      4   54[BANK3 ] unsigned char [4]
  1312 ;;  adcString1      4   50[BANK3 ] unsigned char [4]
  1313 ;;  floatVal        4   40[BANK3 ] float 
  1314 ;;  adcValue2       2   46[BANK3 ] unsigned int 
  1315 ;;  adcValue1       2   44[BANK3 ] unsigned int 
  1316 ;;  displayValue    2   58[BANK3 ] unsigned int 
  1317 ;;  a               2    0        unsigned int 
  1318 ;; Return value:  Size  Location     Type
  1319 ;;                  2  109[None  ] int 
  1320 ;; Registers used:
  1321 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1322 ;; Tracked objects:
  1323 ;;		On entry : B00/0
  1324 ;;		On exit  : 0/0
  1325 ;;		Unchanged: 0/0
  1326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1327 ;;      Params:         0       0       0       0       0
  1328 ;;      Locals:         0       0       0      60       0
  1329 ;;      Temps:          0       0       3       0       0
  1330 ;;      Totals:         0       0       3      60       0
  1331 ;;Total ram usage:       63 bytes
  1332 ;; Hardware stack levels required when called: 4
  1333 ;; This function calls:
  1334 ;;		_Lcd_Clear
  1335 ;;		_Lcd_Init
  1336 ;;		_Lcd_Set_Cursor
  1337 ;;		_Lcd_Write_String
  1338 ;;		_UART_Initialize
  1339 ;;		_UART_Write_Text
  1340 ;;		___fldiv
  1341 ;;		___xxtofl
  1342 ;;		_sprintf
  1343 ;; This function is called by:
  1344 ;;		Startup code after reset
  1345 ;; This function uses a non-reentrant model
  1346 ;;
  1347                           
  1348  0000'                    _main:	
  1349                           ;psect for function _main
  1350                           
  1351  0000'                    l3961:	
  1352                           ;incstack = 0
  1353                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1354                           
  1355                           
  1356                           ;main.c: 29:   unsigned int a;;main.c: 32:   TRISBbits.TRISB0 = 0;
  1357  0000' 1683               	bsf	3,5	;RP0=1, select bank1
  1358  0001' 1303               	bcf	3,6	;RP1=0, select bank1
  1359  0002' 1006               	bcf	6,0	;volatile
  1360                           
  1361                           ;main.c: 33:   TRISBbits.TRISB1 = 0;
  1362  0003' 1086               	bcf	6,1	;volatile
  1363                           
  1364                           ;main.c: 34:   TRISBbits.TRISB2 = 0;
  1365  0004' 1106               	bcf	6,2	;volatile
  1366                           
  1367                           ;main.c: 35:   TRISBbits.TRISB3 = 0;
  1368  0005' 1186               	bcf	6,3	;volatile
  1369                           
  1370                           ;main.c: 36:   TRISBbits.TRISB4 = 0;
  1371  0006' 1206               	bcf	6,4	;volatile
  1372                           
  1373                           ;main.c: 37:   TRISBbits.TRISB5 = 0;
  1374  0007' 1286               	bcf	6,5	;volatile
  1375                           
  1376                           ;main.c: 39:   TRISA4 = 0;
  1377  0008' 1205               	bcf	5,4	;volatile
  1378                           
  1379                           ;main.c: 41:  TRISE0 = 1;
  1380  0009' 1409               	bsf	9,0	;volatile
  1381                           
  1382                           ;main.c: 42:  TRISE1 = 1;
  1383  000A' 1489               	bsf	9,1	;volatile
  1384                           
  1385                           ;main.c: 43:  TRISC1 = 1;
  1386  000B' 1487               	bsf	7,1	;volatile
  1387                           
  1388                           ;main.c: 44:  TRISC2 = 1;
  1389  000C' 1507               	bsf	7,2	;volatile
  1390                           
  1391                           ;main.c: 45:  TRISE2 = 1;
  1392  000D' 1509               	bsf	9,2	;volatile
  1393                           
  1394                           ;main.c: 46:  TRISC0 = 1;
  1395  000E' 1407               	bsf	7,0	;volatile
  1396                           
  1397                           ;main.c: 47:  TRISC3 = 1;
  1398  000F' 1587               	bsf	7,3	;volatile
  1399                           
  1400                           ;main.c: 49:  TRISA1 = 1;
  1401  0010' 1485               	bsf	5,1	;volatile
  1402  0011'                    l3963:
  1403                           
  1404                           ;main.c: 50:     Lcd_Init();
  1405  0011' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Init
  1406  0016'                    l3965:
  1407                           
  1408                           ;main.c: 52:  TRISC6 = 0;
  1409  0016' 1683               	bsf	3,5	;RP0=1, select bank1
  1410  0017' 1303               	bcf	3,6	;RP1=0, select bank1
  1411  0018' 1307               	bcf	7,6	;volatile
  1412  0019'                    l3967:
  1413                           
  1414                           ;main.c: 53:  TRISC7 = 1;
  1415  0019' 1787               	bsf	7,7	;volatile
  1416  001A'                    l3969:
  1417                           
  1418                           ;main.c: 59:   _delay((unsigned long)((100)*(4000000/4000.0)));
  1419  001A' 3082               	movlw	130
  1420  001B' 1683               	bsf	3,5	;RP0=1, select bank1
  1421  001C' 1303               	bcf	3,6	;RP1=0, select bank1
  1422  001D' 0081'              	movwf	(??_main^(0+128)+1)
  1423  001E' 30DD               	movlw	221
  1424  001F' 0080'              	movwf	??_main^(0+128)
  1425  0020'                    u6937:
  1426  0020' 0B80'              	decfsz	??_main^(0+128),f
  1427  0021' 2800'              	goto	u6937
  1428  0022' 0B81'              	decfsz	(??_main^(0+128)+1),f
  1429  0023' 2800'              	goto	u6937
  1430  0024'                    l3971:
  1431                           
  1432                           ;main.c: 60:   RA4 = 0;
  1433  0024' 1283               	bcf	3,5	;RP0=0, select bank0
  1434  0025' 1303               	bcf	3,6	;RP1=0, select bank0
  1435  0026' 1205               	bcf	5,4	;volatile
  1436  0027'                    l3973:
  1437                           
  1438                           ;main.c: 64:     Lcd_Clear();
  1439  0027' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Clear
  1440  002C'                    l3975:
  1441                           
  1442                           ;main.c: 65:     Lcd_Set_Cursor(1,1);
  1443  002C' 0184'              	clrf	Lcd_Set_Cursor@b
  1444  002D' 0A84'              	incf	Lcd_Set_Cursor@b,f
  1445  002E' 3001               	movlw	1
  1446  002F' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Set_Cursor
  1447  0034'                    l3977:
  1448                           
  1449                           ;main.c: 66:     Lcd_Write_String("HiK-UZMANLAR");
  1450  0034' 3000'              	movlw	low (STR_1| (0+32768))
  1451  0035' 0085'              	movwf	Lcd_Write_String@a
  1452  0036' 3000'              	movlw	high (STR_1| (0+32768))
  1453  0037' 0086'              	movwf	Lcd_Write_String@a+1
  1454  0038' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Write_String
  1455  003D'                    l3979:
  1456                           
  1457                           ;main.c: 67:     Lcd_Set_Cursor(2,1);
  1458  003D' 0184'              	clrf	Lcd_Set_Cursor@b
  1459  003E' 0A84'              	incf	Lcd_Set_Cursor@b,f
  1460  003F' 3002               	movlw	2
  1461  0040' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Set_Cursor
  1462  0045'                    l3981:
  1463                           
  1464                           ;main.c: 68:     Lcd_Write_String("Project");
  1465  0045' 3000'              	movlw	low (STR_2| (0+32768))
  1466  0046' 0085'              	movwf	Lcd_Write_String@a
  1467  0047' 3000'              	movlw	high (STR_2| (0+32768))
  1468  0048' 0086'              	movwf	Lcd_Write_String@a+1
  1469  0049' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Write_String
  1470  004E'                    l3983:
  1471                           
  1472                           ;main.c: 69:     Lcd_Set_Cursor(2,17);
  1473  004E' 3011               	movlw	17
  1474  004F' 0084'              	movwf	Lcd_Set_Cursor@b
  1475  0050' 3002               	movlw	2
  1476  0051' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Set_Cursor
  1477  0056'                    l3985:
  1478                           
  1479                           ;main.c: 70:     Lcd_Write_String("V2");
  1480  0056' 3000'              	movlw	low (STR_3| (0+32768))
  1481  0057' 0085'              	movwf	Lcd_Write_String@a
  1482  0058' 3000'              	movlw	high (STR_3| (0+32768))
  1483  0059' 0086'              	movwf	Lcd_Write_String@a+1
  1484  005A' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Write_String
  1485  005F'                    l3987:
  1486                           
  1487                           ;main.c: 71:     _delay((unsigned long)((1000)*(4000000/4000.0)));
  1488  005F' 3006               	movlw	6
  1489  0060' 1683               	bsf	3,5	;RP0=1, select bank1
  1490  0061' 1303               	bcf	3,6	;RP1=0, select bank1
  1491  0062' 0082'              	movwf	(??_main^(0+128)+2)
  1492  0063' 3013               	movlw	19
  1493  0064' 0081'              	movwf	(??_main^(0+128)+1)
  1494  0065' 30AD               	movlw	173
  1495  0066' 0080'              	movwf	??_main^(0+128)
  1496  0067'                    u6947:
  1497  0067' 0B80'              	decfsz	??_main^(0+128),f
  1498  0068' 2800'              	goto	u6947
  1499  0069' 0B81'              	decfsz	(??_main^(0+128)+1),f
  1500  006A' 2800'              	goto	u6947
  1501  006B' 0B82'              	decfsz	(??_main^(0+128)+2),f
  1502  006C' 2800'              	goto	u6947
  1503  006D'                    l3989:
  1504                           
  1505                           ;main.c: 72:     Lcd_Clear();
  1506  006D' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Clear
  1507  0072'                    l3991:
  1508                           
  1509                           ;main.c: 77:     ADCON1 = 0x80;
  1510  0072' 3080               	movlw	128
  1511  0073' 1683               	bsf	3,5	;RP0=1, select bank1
  1512  0074' 1303               	bcf	3,6	;RP1=0, select bank1
  1513  0075' 009F               	movwf	31	;volatile
  1514  0076'                    l3993:
  1515                           
  1516                           ;main.c: 84:     SPBRG = ((4000000/16)/9600) - 1;
  1517  0076' 3019               	movlw	25
  1518  0077' 0099               	movwf	25	;volatile
  1519  0078'                    l3995:
  1520                           
  1521                           ;main.c: 85:     UART_Initialize();
  1522  0078' 120A' 118A' 2000' 120A' 118A' 	fcall	_UART_Initialize
  1523  007D'                    l3997:
  1524                           
  1525                           ;main.c: 86: unsigned int displayValue = 0;
  1526  007D' 1683               	bsf	3,5	;RP0=1, select bank3
  1527  007E' 1703               	bsf	3,6	;RP1=1, select bank3
  1528  007F' 0180'              	clrf	main@displayValue^(0+384)
  1529  0080' 0180'              	clrf	(main@displayValue+1)^(0+384)
  1530  0081'                    l3999:
  1531                           
  1532                           ;main.c: 93:   {;main.c: 97:         ADCON0 = 0b10000001;
  1533  0081' 3081               	movlw	129
  1534  0082' 1283               	bcf	3,5	;RP0=0, select bank0
  1535  0083' 1303               	bcf	3,6	;RP1=0, select bank0
  1536  0084' 009F               	movwf	31	;volatile
  1537  0085'                    l4001:
  1538                           
  1539                           ;main.c: 98:         GO = 1;
  1540  0085' 151F               	bsf	31,2	;volatile
  1541  0086'                    l111:	
  1542                           ;main.c: 99:         while (GO) ;
  1543                           
  1544  0086' 191F               	btfsc	31,2	;volatile
  1545  0087' 2800'              	goto	u6691
  1546  0088' 2800'              	goto	u6690
  1547  0089'                    u6691:
  1548  0089' 2800'              	goto	l111
  1549  008A'                    u6690:
  1550  008A'                    l4003:
  1551                           
  1552                           ;main.c: 100:         unsigned int adcValue1 = ADRESH;
  1553  008A' 081E               	movf	30,w	;volatile
  1554  008B' 1683               	bsf	3,5	;RP0=1, select bank1
  1555  008C' 1303               	bcf	3,6	;RP1=0, select bank1
  1556  008D' 0080'              	movwf	??_main^(0+128)
  1557  008E' 0181'              	clrf	(??_main^(0+128)+1)
  1558  008F' 0800'              	movf	??_main^(0+128),w
  1559  0090' 1683               	bsf	3,5	;RP0=1, select bank3
  1560  0091' 1703               	bsf	3,6	;RP1=1, select bank3
  1561  0092' 0080'              	movwf	main@adcValue1^(0+384)
  1562  0093' 1683               	bsf	3,5	;RP0=1, select bank1
  1563  0094' 1303               	bcf	3,6	;RP1=0, select bank1
  1564  0095' 0800'              	movf	(??_main+1)^(0+128),w
  1565  0096' 1683               	bsf	3,5	;RP0=1, select bank3
  1566  0097' 1703               	bsf	3,6	;RP1=1, select bank3
  1567  0098' 0080'              	movwf	(main@adcValue1+1)^(0+384)
  1568                           
  1569                           ;main.c: 103:         ADCON0 = 0b10001101;
  1570  0099' 308D               	movlw	141
  1571  009A' 1283               	bcf	3,5	;RP0=0, select bank0
  1572  009B' 1303               	bcf	3,6	;RP1=0, select bank0
  1573  009C' 009F               	movwf	31	;volatile
  1574  009D'                    l4005:
  1575                           
  1576                           ;main.c: 104:         GO = 1;
  1577  009D' 151F               	bsf	31,2	;volatile
  1578  009E'                    l114:	
  1579                           ;main.c: 105:         while (GO) ;
  1580                           
  1581  009E' 191F               	btfsc	31,2	;volatile
  1582  009F' 2800'              	goto	u6701
  1583  00A0' 2800'              	goto	u6700
  1584  00A1'                    u6701:
  1585  00A1' 2800'              	goto	l114
  1586  00A2'                    u6700:
  1587  00A2'                    l4007:
  1588                           
  1589                           ;main.c: 106:         unsigned int adcValue2 = ADRESH;
  1590  00A2' 081E               	movf	30,w	;volatile
  1591  00A3' 1683               	bsf	3,5	;RP0=1, select bank1
  1592  00A4' 1303               	bcf	3,6	;RP1=0, select bank1
  1593  00A5' 0080'              	movwf	??_main^(0+128)
  1594  00A6' 0181'              	clrf	(??_main^(0+128)+1)
  1595  00A7' 0800'              	movf	??_main^(0+128),w
  1596  00A8' 1683               	bsf	3,5	;RP0=1, select bank3
  1597  00A9' 1703               	bsf	3,6	;RP1=1, select bank3
  1598  00AA' 0080'              	movwf	main@adcValue2^(0+384)
  1599  00AB' 1683               	bsf	3,5	;RP0=1, select bank1
  1600  00AC' 1303               	bcf	3,6	;RP1=0, select bank1
  1601  00AD' 0800'              	movf	(??_main+1)^(0+128),w
  1602  00AE' 1683               	bsf	3,5	;RP0=1, select bank3
  1603  00AF' 1703               	bsf	3,6	;RP1=1, select bank3
  1604  00B0' 0080'              	movwf	(main@adcValue2+1)^(0+384)
  1605  00B1'                    l4009:
  1606                           
  1607                           ;main.c: 107:         float floatVal = adcValue2 / 255.0;
  1608  00B1' 3043               	movlw	67
  1609  00B2' 1283               	bcf	3,5	;RP0=0, select bank0
  1610  00B3' 1303               	bcf	3,6	;RP1=0, select bank0
  1611  00B4' 0083'              	movwf	___fldiv@a+3
  1612  00B5' 307F               	movlw	127
  1613  00B6' 0082'              	movwf	___fldiv@a+2
  1614  00B7' 3000               	movlw	0
  1615  00B8' 0081'              	movwf	___fldiv@a+1
  1616  00B9' 3000               	movlw	0
  1617  00BA' 0080'              	movwf	___fldiv@a
  1618  00BB' 1683               	bsf	3,5	;RP0=1, select bank3
  1619  00BC' 1703               	bsf	3,6	;RP1=1, select bank3
  1620  00BD' 0800'              	movf	main@adcValue2^(0+384),w
  1621  00BE' 0080'              	movwf	___xxtofl@val
  1622  00BF' 0800'              	movf	(main@adcValue2+1)^(0+384),w
  1623  00C0' 0081'              	movwf	___xxtofl@val+1
  1624  00C1' 0182'              	clrf	___xxtofl@val+2
  1625  00C2' 0183'              	clrf	___xxtofl@val+3
  1626  00C3' 3000               	movlw	0
  1627  00C4' 120A' 118A' 2000' 120A' 118A' 	fcall	___xxtofl
  1628  00C9' 0803'              	movf	?___xxtofl+3,w
  1629  00CA' 1283               	bcf	3,5	;RP0=0, select bank0
  1630  00CB' 1303               	bcf	3,6	;RP1=0, select bank0
  1631  00CC' 0087'              	movwf	___fldiv@b+3
  1632  00CD' 0802'              	movf	?___xxtofl+2,w
  1633  00CE' 0086'              	movwf	___fldiv@b+2
  1634  00CF' 0801'              	movf	?___xxtofl+1,w
  1635  00D0' 0085'              	movwf	___fldiv@b+1
  1636  00D1' 0800'              	movf	?___xxtofl,w
  1637  00D2' 0084'              	movwf	___fldiv@b
  1638  00D3' 120A' 118A' 2000' 120A' 118A' 	fcall	___fldiv
  1639  00D8' 1283               	bcf	3,5	;RP0=0, select bank0
  1640  00D9' 1303               	bcf	3,6	;RP1=0, select bank0
  1641  00DA' 0803'              	movf	?___fldiv+3,w
  1642  00DB' 1683               	bsf	3,5	;RP0=1, select bank3
  1643  00DC' 1703               	bsf	3,6	;RP1=1, select bank3
  1644  00DD' 0080'              	movwf	(main@floatVal+3)^(0+384)
  1645  00DE' 1283               	bcf	3,5	;RP0=0, select bank0
  1646  00DF' 1303               	bcf	3,6	;RP1=0, select bank0
  1647  00E0' 0802'              	movf	?___fldiv+2,w
  1648  00E1' 1683               	bsf	3,5	;RP0=1, select bank3
  1649  00E2' 1703               	bsf	3,6	;RP1=1, select bank3
  1650  00E3' 0080'              	movwf	(main@floatVal+2)^(0+384)
  1651  00E4' 1283               	bcf	3,5	;RP0=0, select bank0
  1652  00E5' 1303               	bcf	3,6	;RP1=0, select bank0
  1653  00E6' 0801'              	movf	?___fldiv+1,w
  1654  00E7' 1683               	bsf	3,5	;RP0=1, select bank3
  1655  00E8' 1703               	bsf	3,6	;RP1=1, select bank3
  1656  00E9' 0080'              	movwf	(main@floatVal+1)^(0+384)
  1657  00EA' 1283               	bcf	3,5	;RP0=0, select bank0
  1658  00EB' 1303               	bcf	3,6	;RP1=0, select bank0
  1659  00EC' 0800'              	movf	?___fldiv,w
  1660  00ED' 1683               	bsf	3,5	;RP0=1, select bank3
  1661  00EE' 1703               	bsf	3,6	;RP1=1, select bank3
  1662  00EF' 0080'              	movwf	main@floatVal^(0+384)
  1663  00F0'                    l4011:
  1664                           
  1665                           ;main.c: 110:         Lcd_Set_Cursor(2, 1);
  1666  00F0' 0184'              	clrf	Lcd_Set_Cursor@b
  1667  00F1' 0A84'              	incf	Lcd_Set_Cursor@b,f
  1668  00F2' 3002               	movlw	2
  1669  00F3' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Set_Cursor
  1670  00F8'                    l4013:
  1671                           
  1672                           ;main.c: 111:         Lcd_Write_String("rate: ");
  1673  00F8' 3000'              	movlw	low (STR_4| (0+32768))
  1674  00F9' 0085'              	movwf	Lcd_Write_String@a
  1675  00FA' 3000'              	movlw	high (STR_4| (0+32768))
  1676  00FB' 0086'              	movwf	Lcd_Write_String@a+1
  1677  00FC' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Write_String
  1678  0101'                    l4015:
  1679                           
  1680                           ;main.c: 112:         char adcString1[4];;main.c: 113:         sprintf(adcString1, "%3u"
      +                          , adcValue1);
  1681  0101' 3000'              	movlw	low (STR_5| (0+32768))
  1682  0102' 1283               	bcf	3,5	;RP0=0, select bank0
  1683  0103' 1303               	bcf	3,6	;RP1=0, select bank0
  1684  0104' 00CA'              	movwf	sprintf@f
  1685  0105' 3000'              	movlw	high (STR_5| (0+32768))
  1686  0106' 00CB'              	movwf	sprintf@f+1
  1687  0107' 1683               	bsf	3,5	;RP0=1, select bank3
  1688  0108' 1703               	bsf	3,6	;RP1=1, select bank3
  1689  0109' 0800'              	movf	(main@adcValue1+1)^(0+384),w
  1690  010A' 1283               	bcf	3,5	;RP0=0, select bank0
  1691  010B' 1303               	bcf	3,6	;RP1=0, select bank0
  1692  010C' 00CD'              	movwf	?_sprintf+3
  1693  010D' 1683               	bsf	3,5	;RP0=1, select bank3
  1694  010E' 1703               	bsf	3,6	;RP1=1, select bank3
  1695  010F' 0800'              	movf	main@adcValue1^(0+384),w
  1696  0110' 1283               	bcf	3,5	;RP0=0, select bank0
  1697  0111' 1303               	bcf	3,6	;RP1=0, select bank0
  1698  0112' 00CC'              	movwf	?_sprintf+2
  1699  0113' 3000'              	movlw	(low (main@adcString1| (0+256)))& (0+255)
  1700  0114' 120A' 118A' 2000' 120A' 118A' 	fcall	_sprintf
  1701  0119'                    l4017:
  1702                           
  1703                           ;main.c: 114:         Lcd_Set_Cursor(2, 7);
  1704  0119' 3007               	movlw	7
  1705  011A' 0084'              	movwf	Lcd_Set_Cursor@b
  1706  011B' 3002               	movlw	2
  1707  011C' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Set_Cursor
  1708  0121'                    l4019:
  1709                           
  1710                           ;main.c: 115:         Lcd_Write_String(adcString1);
  1711  0121' 3000'              	movlw	(low (main@adcString1| (0+256)))& (0+255)
  1712  0122' 0085'              	movwf	Lcd_Write_String@a
  1713  0123' 3001               	movlw	1
  1714  0124' 0086'              	movwf	Lcd_Write_String@a+1
  1715  0125' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Write_String
  1716  012A'                    l4021:
  1717                           
  1718                           ;main.c: 118:         Lcd_Set_Cursor(2, 13);
  1719  012A' 300D               	movlw	13
  1720  012B' 0084'              	movwf	Lcd_Set_Cursor@b
  1721  012C' 3002               	movlw	2
  1722  012D' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Set_Cursor
  1723  0132'                    l4023:
  1724                           
  1725                           ;main.c: 119:         Lcd_Write_String("float: ");
  1726  0132' 3000'              	movlw	low (STR_6| (0+32768))
  1727  0133' 0085'              	movwf	Lcd_Write_String@a
  1728  0134' 3000'              	movlw	high (STR_6| (0+32768))
  1729  0135' 0086'              	movwf	Lcd_Write_String@a+1
  1730  0136' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Write_String
  1731  013B'                    l4025:
  1732                           
  1733                           ;main.c: 120:         char adcString2[4];;main.c: 121:         sprintf(adcString2, "%3.1
      +                          f", floatVal);
  1734  013B' 3000'              	movlw	low (STR_7| (0+32768))
  1735  013C' 1283               	bcf	3,5	;RP0=0, select bank0
  1736  013D' 1303               	bcf	3,6	;RP1=0, select bank0
  1737  013E' 00CA'              	movwf	sprintf@f
  1738  013F' 3000'              	movlw	high (STR_7| (0+32768))
  1739  0140' 00CB'              	movwf	sprintf@f+1
  1740  0141' 1683               	bsf	3,5	;RP0=1, select bank3
  1741  0142' 1703               	bsf	3,6	;RP1=1, select bank3
  1742  0143' 0800'              	movf	(main@floatVal+3)^(0+384),w
  1743  0144' 1283               	bcf	3,5	;RP0=0, select bank0
  1744  0145' 1303               	bcf	3,6	;RP1=0, select bank0
  1745  0146' 00CF'              	movwf	?_sprintf+5
  1746  0147' 1683               	bsf	3,5	;RP0=1, select bank3
  1747  0148' 1703               	bsf	3,6	;RP1=1, select bank3
  1748  0149' 0800'              	movf	(main@floatVal+2)^(0+384),w
  1749  014A' 1283               	bcf	3,5	;RP0=0, select bank0
  1750  014B' 1303               	bcf	3,6	;RP1=0, select bank0
  1751  014C' 00CE'              	movwf	?_sprintf+4
  1752  014D' 1683               	bsf	3,5	;RP0=1, select bank3
  1753  014E' 1703               	bsf	3,6	;RP1=1, select bank3
  1754  014F' 0800'              	movf	(main@floatVal+1)^(0+384),w
  1755  0150' 1283               	bcf	3,5	;RP0=0, select bank0
  1756  0151' 1303               	bcf	3,6	;RP1=0, select bank0
  1757  0152' 00CD'              	movwf	?_sprintf+3
  1758  0153' 1683               	bsf	3,5	;RP0=1, select bank3
  1759  0154' 1703               	bsf	3,6	;RP1=1, select bank3
  1760  0155' 0800'              	movf	main@floatVal^(0+384),w
  1761  0156' 1283               	bcf	3,5	;RP0=0, select bank0
  1762  0157' 1303               	bcf	3,6	;RP1=0, select bank0
  1763  0158' 00CC'              	movwf	?_sprintf+2
  1764  0159' 3000'              	movlw	(low (main@adcString2| (0+256)))& (0+255)
  1765  015A' 120A' 118A' 2000' 120A' 118A' 	fcall	_sprintf
  1766  015F'                    l4027:
  1767                           
  1768                           ;main.c: 122:         Lcd_Set_Cursor(2, 20);
  1769  015F' 3014               	movlw	20
  1770  0160' 0084'              	movwf	Lcd_Set_Cursor@b
  1771  0161' 3002               	movlw	2
  1772  0162' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Set_Cursor
  1773  0167'                    l4029:
  1774                           
  1775                           ;main.c: 123:         Lcd_Write_String(adcString2);
  1776  0167' 3000'              	movlw	(low (main@adcString2| (0+256)))& (0+255)
  1777  0168' 0085'              	movwf	Lcd_Write_String@a
  1778  0169' 3001               	movlw	1
  1779  016A' 0086'              	movwf	Lcd_Write_String@a+1
  1780  016B' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Write_String
  1781  0170'                    l4031:
  1782                           
  1783                           ;main.c: 125:         _delay((unsigned long)((500)*(4000000/4000.0)));
  1784  0170' 3003               	movlw	3
  1785  0171' 1683               	bsf	3,5	;RP0=1, select bank1
  1786  0172' 1303               	bcf	3,6	;RP1=0, select bank1
  1787  0173' 0082'              	movwf	(??_main^(0+128)+2)
  1788  0174' 308A               	movlw	138
  1789  0175' 0081'              	movwf	(??_main^(0+128)+1)
  1790  0176' 3055               	movlw	85
  1791  0177' 0080'              	movwf	??_main^(0+128)
  1792  0178'                    u6957:
  1793  0178' 0B80'              	decfsz	??_main^(0+128),f
  1794  0179' 2800'              	goto	u6957
  1795  017A' 0B81'              	decfsz	(??_main^(0+128)+1),f
  1796  017B' 2800'              	goto	u6957
  1797  017C' 0B82'              	decfsz	(??_main^(0+128)+2),f
  1798  017D' 2800'              	goto	u6957
  1799  017E'                    l4033:
  1800                           
  1801                           ;main.c: 130:        if (RC1 == 1 && RE1==1)
  1802  017E' 1283               	bcf	3,5	;RP0=0, select bank0
  1803  017F' 1303               	bcf	3,6	;RP1=0, select bank0
  1804  0180' 1C87               	btfss	7,1	;volatile
  1805  0181' 2800'              	goto	u6711
  1806  0182' 2800'              	goto	u6710
  1807  0183'                    u6711:
  1808  0183' 2800'              	goto	l117
  1809  0184'                    u6710:
  1810  0184'                    l4035:
  1811  0184' 1C89               	btfss	9,1	;volatile
  1812  0185' 2800'              	goto	u6721
  1813  0186' 2800'              	goto	u6720
  1814  0187'                    u6721:
  1815  0187' 2800'              	goto	l117
  1816  0188'                    u6720:
  1817  0188'                    l4037:
  1818                           
  1819                           ;main.c: 131:         {;main.c: 132:             Lcd_Set_Cursor(1,10 );
  1820  0188' 300A               	movlw	10
  1821  0189' 0084'              	movwf	Lcd_Set_Cursor@b
  1822  018A' 3001               	movlw	1
  1823  018B' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Set_Cursor
  1824  0190'                    l4039:
  1825                           
  1826                           ;main.c: 133:             Lcd_Write_String("FWD LIMIT");
  1827  0190' 3000'              	movlw	low (STR_8| (0+32768))
  1828  0191' 0085'              	movwf	Lcd_Write_String@a
  1829  0192' 3000'              	movlw	high (STR_8| (0+32768))
  1830  0193' 0086'              	movwf	Lcd_Write_String@a+1
  1831  0194' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Write_String
  1832  0199'                    l4041:
  1833                           
  1834                           ;main.c: 134:             UART_Write_Text("s0\r\n");
  1835  0199' 3000'              	movlw	low (STR_9| (0+32768))
  1836  019A' 0081'              	movwf	UART_Write_Text@text
  1837  019B' 3000'              	movlw	high (STR_9| (0+32768))
  1838  019C' 0082'              	movwf	UART_Write_Text@text+1
  1839  019D' 120A' 118A' 2000' 120A' 118A' 	fcall	_UART_Write_Text
  1840                           
  1841                           ;main.c: 135:         }
  1842  01A2' 2800'              	goto	l4097
  1843  01A3'                    l117:	
  1844                           ;main.c: 137:         else if ((RC0 == 1 && RE1==1) || RC0==1 && RE0==0)
  1845                           
  1846  01A3' 1C07               	btfss	7,0	;volatile
  1847  01A4' 2800'              	goto	u6731
  1848  01A5' 2800'              	goto	u6730
  1849  01A6'                    u6731:
  1850  01A6' 2800'              	goto	l123
  1851  01A7'                    u6730:
  1852  01A7'                    l4043:
  1853  01A7' 1889               	btfsc	9,1	;volatile
  1854  01A8' 2800'              	goto	u6741
  1855  01A9' 2800'              	goto	u6740
  1856  01AA'                    u6741:
  1857  01AA' 2800'              	goto	l4047
  1858  01AB'                    u6740:
  1859  01AB'                    l123:
  1860  01AB' 1C07               	btfss	7,0	;volatile
  1861  01AC' 2800'              	goto	u6751
  1862  01AD' 2800'              	goto	u6750
  1863  01AE'                    u6751:
  1864  01AE' 2800'              	goto	l119
  1865  01AF'                    u6750:
  1866  01AF'                    l4045:
  1867  01AF' 1809               	btfsc	9,0	;volatile
  1868  01B0' 2800'              	goto	u6761
  1869  01B1' 2800'              	goto	u6760
  1870  01B2'                    u6761:
  1871  01B2' 2800'              	goto	l119
  1872  01B3'                    u6760:
  1873  01B3'                    l4047:
  1874                           
  1875                           ;main.c: 138:         {;main.c: 139:             Lcd_Set_Cursor(1, 12);
  1876  01B3' 300C               	movlw	12
  1877  01B4' 0084'              	movwf	Lcd_Set_Cursor@b
  1878  01B5' 3001               	movlw	1
  1879  01B6' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Set_Cursor
  1880  01BB'                    l4049:
  1881                           
  1882                           ;main.c: 140:             Lcd_Write_String("FEAD 400");
  1883  01BB' 3000'              	movlw	low (STR_10| (0+32768))
  1884  01BC' 0085'              	movwf	Lcd_Write_String@a
  1885  01BD' 3000'              	movlw	high (STR_10| (0+32768))
  1886  01BE' 0086'              	movwf	Lcd_Write_String@a+1
  1887  01BF' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Write_String
  1888  01C4'                    l4051:
  1889                           
  1890                           ;main.c: 141:             UART_Write_Text("s-255\r\n");
  1891  01C4' 3000'              	movlw	low (STR_11| (0+32768))
  1892  01C5' 0081'              	movwf	UART_Write_Text@text
  1893  01C6' 3000'              	movlw	high (STR_11| (0+32768))
  1894  01C7' 0082'              	movwf	UART_Write_Text@text+1
  1895  01C8' 120A' 118A' 2000' 120A' 118A' 	fcall	_UART_Write_Text
  1896                           
  1897                           ;main.c: 142:         }
  1898  01CD' 2800'              	goto	l4097
  1899  01CE'                    l119:	
  1900                           ;main.c: 144:         else if (RE1 == 1)
  1901                           
  1902  01CE' 1C89               	btfss	9,1	;volatile
  1903  01CF' 2800'              	goto	u6771
  1904  01D0' 2800'              	goto	u6770
  1905  01D1'                    u6771:
  1906  01D1' 2800'              	goto	l125
  1907  01D2'                    u6770:
  1908  01D2'                    l4053:
  1909                           
  1910                           ;main.c: 145:         {;main.c: 146:             Lcd_Set_Cursor(2, 16);
  1911  01D2' 3010               	movlw	16
  1912  01D3' 0084'              	movwf	Lcd_Set_Cursor@b
  1913  01D4' 3002               	movlw	2
  1914  01D5' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Set_Cursor
  1915  01DA'                    l4055:
  1916                           
  1917                           ;main.c: 147:              Lcd_Write_String("FWD ");
  1918  01DA' 3000'              	movlw	low (STR_12| (0+32768))
  1919  01DB' 0085'              	movwf	Lcd_Write_String@a
  1920  01DC' 3000'              	movlw	high (STR_12| (0+32768))
  1921  01DD' 0086'              	movwf	Lcd_Write_String@a+1
  1922  01DE' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Write_String
  1923  01E3'                    l4057:
  1924                           
  1925                           ;main.c: 148:     int negativeDisplayValue = -displayValue;
  1926  01E3' 1683               	bsf	3,5	;RP0=1, select bank3
  1927  01E4' 1703               	bsf	3,6	;RP1=1, select bank3
  1928  01E5' 0900'              	comf	main@displayValue^(0+384),w
  1929  01E6' 1683               	bsf	3,5	;RP0=1, select bank1
  1930  01E7' 1303               	bcf	3,6	;RP1=0, select bank1
  1931  01E8' 0080'              	movwf	??_main^(0+128)
  1932  01E9' 1683               	bsf	3,5	;RP0=1, select bank3
  1933  01EA' 1703               	bsf	3,6	;RP1=1, select bank3
  1934  01EB' 0900'              	comf	(main@displayValue+1)^(0+384),w
  1935  01EC' 1683               	bsf	3,5	;RP0=1, select bank1
  1936  01ED' 1303               	bcf	3,6	;RP1=0, select bank1
  1937  01EE' 0081'              	movwf	(??_main^(0+128)+1)
  1938  01EF' 0A80'              	incf	??_main^(0+128),f
  1939  01F0' 1903               	skipnz
  1940  01F1' 0A81'              	incf	(??_main^(0+128)+1),f
  1941  01F2' 0800'              	movf	??_main^(0+128),w
  1942  01F3' 1683               	bsf	3,5	;RP0=1, select bank3
  1943  01F4' 1703               	bsf	3,6	;RP1=1, select bank3
  1944  01F5' 0080'              	movwf	main@negativeDisplayValue^(0+384)
  1945  01F6' 1683               	bsf	3,5	;RP0=1, select bank1
  1946  01F7' 1303               	bcf	3,6	;RP1=0, select bank1
  1947  01F8' 0800'              	movf	(??_main+1)^(0+128),w
  1948  01F9' 1683               	bsf	3,5	;RP0=1, select bank3
  1949  01FA' 1703               	bsf	3,6	;RP1=1, select bank3
  1950  01FB' 0080'              	movwf	(main@negativeDisplayValue+1)^(0+384)
  1951  01FC'                    l4059:
  1952                           
  1953                           ;main.c: 149:     char combinedText[20];;main.c: 150:     sprintf(combinedText, "s%d\r\n
      +                          ", negativeDisplayValue);
  1954  01FC' 3000'              	movlw	low (STR_13| (0+32768))
  1955  01FD' 1283               	bcf	3,5	;RP0=0, select bank0
  1956  01FE' 1303               	bcf	3,6	;RP1=0, select bank0
  1957  01FF' 00CA'              	movwf	sprintf@f
  1958  0200' 3000'              	movlw	high (STR_13| (0+32768))
  1959  0201' 00CB'              	movwf	sprintf@f+1
  1960  0202' 1683               	bsf	3,5	;RP0=1, select bank3
  1961  0203' 1703               	bsf	3,6	;RP1=1, select bank3
  1962  0204' 0800'              	movf	(main@negativeDisplayValue+1)^(0+384),w
  1963  0205' 1283               	bcf	3,5	;RP0=0, select bank0
  1964  0206' 1303               	bcf	3,6	;RP1=0, select bank0
  1965  0207' 00CD'              	movwf	?_sprintf+3
  1966  0208' 1683               	bsf	3,5	;RP0=1, select bank3
  1967  0209' 1703               	bsf	3,6	;RP1=1, select bank3
  1968  020A' 0800'              	movf	main@negativeDisplayValue^(0+384),w
  1969  020B' 1283               	bcf	3,5	;RP0=0, select bank0
  1970  020C' 1303               	bcf	3,6	;RP1=0, select bank0
  1971  020D' 00CC'              	movwf	?_sprintf+2
  1972  020E' 3000'              	movlw	(low (main@combinedText| (0+256)))& (0+255)
  1973  020F' 120A' 118A' 2000' 120A' 118A' 	fcall	_sprintf
  1974  0214'                    l4061:
  1975                           
  1976                           ;main.c: 151:     UART_Write_Text(combinedText);
  1977  0214' 3000'              	movlw	(low (main@combinedText| (0+256)))& (0+255)
  1978  0215' 0081'              	movwf	UART_Write_Text@text
  1979  0216' 3001               	movlw	1
  1980  0217' 0082'              	movwf	UART_Write_Text@text+1
  1981  0218' 120A' 118A' 2000' 120A' 118A' 	fcall	_UART_Write_Text
  1982                           
  1983                           ;main.c: 152:         }
  1984  021D' 2800'              	goto	l4097
  1985  021E'                    l125:	
  1986                           ;main.c: 155:         else if (RC2 == 1 && RE0==1)
  1987                           
  1988  021E' 1D07               	btfss	7,2	;volatile
  1989  021F' 2800'              	goto	u6781
  1990  0220' 2800'              	goto	u6780
  1991  0221'                    u6781:
  1992  0221' 2800'              	goto	l127
  1993  0222'                    u6780:
  1994  0222'                    l4063:
  1995  0222' 1C09               	btfss	9,0	;volatile
  1996  0223' 2800'              	goto	u6791
  1997  0224' 2800'              	goto	u6790
  1998  0225'                    u6791:
  1999  0225' 2800'              	goto	l127
  2000  0226'                    u6790:
  2001  0226'                    l4065:
  2002                           
  2003                           ;main.c: 156:         {;main.c: 157:             Lcd_Set_Cursor(1, 10);
  2004  0226' 300A               	movlw	10
  2005  0227' 0084'              	movwf	Lcd_Set_Cursor@b
  2006  0228' 3001               	movlw	1
  2007  0229' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Set_Cursor
  2008  022E'                    l4067:
  2009                           
  2010                           ;main.c: 158:             Lcd_Write_String("REW LIMIT");
  2011  022E' 3000'              	movlw	low (STR_14| (0+32768))
  2012  022F' 0085'              	movwf	Lcd_Write_String@a
  2013  0230' 3000'              	movlw	high (STR_14| (0+32768))
  2014  0231' 0086'              	movwf	Lcd_Write_String@a+1
  2015  0232' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Write_String
  2016  0237'                    l4069:
  2017                           
  2018                           ;main.c: 159:             UART_Write_Text("s0\r\n");
  2019  0237' 3000'              	movlw	low (STR_9| (0+32768))
  2020  0238' 0081'              	movwf	UART_Write_Text@text
  2021  0239' 3000'              	movlw	high (STR_9| (0+32768))
  2022  023A' 0082'              	movwf	UART_Write_Text@text+1
  2023  023B' 120A' 118A' 2000' 120A' 118A' 	fcall	_UART_Write_Text
  2024                           
  2025                           ;main.c: 160:         }
  2026  0240' 2800'              	goto	l4097
  2027  0241'                    l127:	
  2028                           ;main.c: 161:         else if ((RE2 == 1 && RE0==1) || (RE2==1 && RE1==0) )
  2029                           
  2030  0241' 1D09               	btfss	9,2	;volatile
  2031  0242' 2800'              	goto	u6801
  2032  0243' 2800'              	goto	u6800
  2033  0244'                    u6801:
  2034  0244' 2800'              	goto	l133
  2035  0245'                    u6800:
  2036  0245'                    l4071:
  2037  0245' 1809               	btfsc	9,0	;volatile
  2038  0246' 2800'              	goto	u6811
  2039  0247' 2800'              	goto	u6810
  2040  0248'                    u6811:
  2041  0248' 2800'              	goto	l4075
  2042  0249'                    u6810:
  2043  0249'                    l133:
  2044  0249' 1D09               	btfss	9,2	;volatile
  2045  024A' 2800'              	goto	u6821
  2046  024B' 2800'              	goto	u6820
  2047  024C'                    u6821:
  2048  024C' 2800'              	goto	l129
  2049  024D'                    u6820:
  2050  024D'                    l4073:
  2051  024D' 1889               	btfsc	9,1	;volatile
  2052  024E' 2800'              	goto	u6831
  2053  024F' 2800'              	goto	u6830
  2054  0250'                    u6831:
  2055  0250' 2800'              	goto	l129
  2056  0251'                    u6830:
  2057  0251'                    l4075:
  2058                           
  2059                           ;main.c: 162:         {;main.c: 163:             Lcd_Set_Cursor(1, 12);
  2060  0251' 300C               	movlw	12
  2061  0252' 0084'              	movwf	Lcd_Set_Cursor@b
  2062  0253' 3001               	movlw	1
  2063  0254' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Set_Cursor
  2064  0259'                    l4077:
  2065                           
  2066                           ;main.c: 164:             Lcd_Write_String("FEAD 400");
  2067  0259' 3000'              	movlw	low (STR_10| (0+32768))
  2068  025A' 0085'              	movwf	Lcd_Write_String@a
  2069  025B' 3000'              	movlw	high (STR_10| (0+32768))
  2070  025C' 0086'              	movwf	Lcd_Write_String@a+1
  2071  025D' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Write_String
  2072  0262'                    l4079:
  2073                           
  2074                           ;main.c: 165:             UART_Write_Text("s255\r\n");
  2075  0262' 3000'              	movlw	low (STR_17| (0+32768))
  2076  0263' 0081'              	movwf	UART_Write_Text@text
  2077  0264' 3000'              	movlw	high (STR_17| (0+32768))
  2078  0265' 0082'              	movwf	UART_Write_Text@text+1
  2079  0266' 120A' 118A' 2000' 120A' 118A' 	fcall	_UART_Write_Text
  2080                           
  2081                           ;main.c: 166:         }
  2082  026B' 2800'              	goto	l4097
  2083  026C'                    l129:	
  2084                           ;main.c: 167:         else if (RE0 == 1)
  2085                           
  2086  026C' 1C09               	btfss	9,0	;volatile
  2087  026D' 2800'              	goto	u6841
  2088  026E' 2800'              	goto	u6840
  2089  026F'                    u6841:
  2090  026F' 2800'              	goto	l4089
  2091  0270'                    u6840:
  2092  0270'                    l4081:
  2093                           
  2094                           ;main.c: 168:         {;main.c: 169:             Lcd_Set_Cursor(2, 16);
  2095  0270' 3010               	movlw	16
  2096  0271' 0084'              	movwf	Lcd_Set_Cursor@b
  2097  0272' 3002               	movlw	2
  2098  0273' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Set_Cursor
  2099  0278'                    l4083:
  2100                           
  2101                           ;main.c: 170:             Lcd_Write_String("REW ");
  2102  0278' 3000'              	movlw	low (STR_18| (0+32768))
  2103  0279' 0085'              	movwf	Lcd_Write_String@a
  2104  027A' 3000'              	movlw	high (STR_18| (0+32768))
  2105  027B' 0086'              	movwf	Lcd_Write_String@a+1
  2106  027C' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Write_String
  2107  0281'                    l4085:
  2108                           
  2109                           ;main.c: 171:     char combinedText[20];;main.c: 172:     sprintf(combinedText, "s%d\r\n
      +                          ", displayValue);
  2110  0281' 3000'              	movlw	low (STR_13| (0+32768))
  2111  0282' 1283               	bcf	3,5	;RP0=0, select bank0
  2112  0283' 1303               	bcf	3,6	;RP1=0, select bank0
  2113  0284' 00CA'              	movwf	sprintf@f
  2114  0285' 3000'              	movlw	high (STR_13| (0+32768))
  2115  0286' 00CB'              	movwf	sprintf@f+1
  2116  0287' 1683               	bsf	3,5	;RP0=1, select bank3
  2117  0288' 1703               	bsf	3,6	;RP1=1, select bank3
  2118  0289' 0800'              	movf	(main@displayValue+1)^(0+384),w
  2119  028A' 1283               	bcf	3,5	;RP0=0, select bank0
  2120  028B' 1303               	bcf	3,6	;RP1=0, select bank0
  2121  028C' 00CD'              	movwf	?_sprintf+3
  2122  028D' 1683               	bsf	3,5	;RP0=1, select bank3
  2123  028E' 1703               	bsf	3,6	;RP1=1, select bank3
  2124  028F' 0800'              	movf	main@displayValue^(0+384),w
  2125  0290' 1283               	bcf	3,5	;RP0=0, select bank0
  2126  0291' 1303               	bcf	3,6	;RP1=0, select bank0
  2127  0292' 00CC'              	movwf	?_sprintf+2
  2128  0293' 3000'              	movlw	(low (main@combinedText_160| (0+256)))& (0+255)
  2129  0294' 120A' 118A' 2000' 120A' 118A' 	fcall	_sprintf
  2130  0299'                    l4087:
  2131                           
  2132                           ;main.c: 173:     UART_Write_Text(combinedText);
  2133  0299' 3000'              	movlw	(low (main@combinedText_160| (0+256)))& (0+255)
  2134  029A' 0081'              	movwf	UART_Write_Text@text
  2135  029B' 3001               	movlw	1
  2136  029C' 0082'              	movwf	UART_Write_Text@text+1
  2137  029D' 120A' 118A' 2000' 120A' 118A' 	fcall	_UART_Write_Text
  2138                           
  2139                           ;main.c: 174:         }
  2140  02A2' 2800'              	goto	l4097
  2141  02A3'                    l4089:
  2142                           
  2143                           ;main.c: 178:         {;main.c: 180:             Lcd_Set_Cursor(2, 16);
  2144  02A3' 3010               	movlw	16
  2145  02A4' 0084'              	movwf	Lcd_Set_Cursor@b
  2146  02A5' 3002               	movlw	2
  2147  02A6' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Set_Cursor
  2148  02AB'                    l4091:
  2149                           
  2150                           ;main.c: 181:             Lcd_Write_String("STOP");
  2151  02AB' 3000'              	movlw	low (STR_20| (0+32768))
  2152  02AC' 0085'              	movwf	Lcd_Write_String@a
  2153  02AD' 3000'              	movlw	high (STR_20| (0+32768))
  2154  02AE' 0086'              	movwf	Lcd_Write_String@a+1
  2155  02AF' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Write_String
  2156  02B4'                    l4093:
  2157                           
  2158                           ;main.c: 182:             UART_Write_Text("s0\r\n");
  2159  02B4' 3000'              	movlw	low (STR_9| (0+32768))
  2160  02B5' 0081'              	movwf	UART_Write_Text@text
  2161  02B6' 3000'              	movlw	high (STR_9| (0+32768))
  2162  02B7' 0082'              	movwf	UART_Write_Text@text+1
  2163  02B8' 120A' 118A' 2000' 120A' 118A' 	fcall	_UART_Write_Text
  2164                           
  2165                           ;main.c: 183:             Lcd_Set_Cursor(1, 10);
  2166  02BD' 300A               	movlw	10
  2167  02BE' 0084'              	movwf	Lcd_Set_Cursor@b
  2168  02BF' 3001               	movlw	1
  2169  02C0' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Set_Cursor
  2170  02C5'                    l4095:
  2171                           
  2172                           ;main.c: 184:             Lcd_Write_String("              ");
  2173  02C5' 3000'              	movlw	low (STR_22| (0+32768))
  2174  02C6' 0085'              	movwf	Lcd_Write_String@a
  2175  02C7' 3000'              	movlw	high (STR_22| (0+32768))
  2176  02C8' 0086'              	movwf	Lcd_Write_String@a+1
  2177  02C9' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Write_String
  2178  02CE'                    l4097:
  2179                           
  2180                           ;main.c: 191:             if(RC2==0 && RC1==0 && RE2==0 && RC0==0 && RC3==0){
  2181  02CE' 1283               	bcf	3,5	;RP0=0, select bank0
  2182  02CF' 1303               	bcf	3,6	;RP1=0, select bank0
  2183  02D0' 1907               	btfsc	7,2	;volatile
  2184  02D1' 2800'              	goto	u6851
  2185  02D2' 2800'              	goto	u6850
  2186  02D3'                    u6851:
  2187  02D3' 2800'              	goto	l4111
  2188  02D4'                    u6850:
  2189  02D4'                    l4099:
  2190  02D4' 1887               	btfsc	7,1	;volatile
  2191  02D5' 2800'              	goto	u6861
  2192  02D6' 2800'              	goto	u6860
  2193  02D7'                    u6861:
  2194  02D7' 2800'              	goto	l4111
  2195  02D8'                    u6860:
  2196  02D8'                    l4101:
  2197  02D8' 1909               	btfsc	9,2	;volatile
  2198  02D9' 2800'              	goto	u6871
  2199  02DA' 2800'              	goto	u6870
  2200  02DB'                    u6871:
  2201  02DB' 2800'              	goto	l4111
  2202  02DC'                    u6870:
  2203  02DC'                    l4103:
  2204  02DC' 1807               	btfsc	7,0	;volatile
  2205  02DD' 2800'              	goto	u6881
  2206  02DE' 2800'              	goto	u6880
  2207  02DF'                    u6881:
  2208  02DF' 2800'              	goto	l4111
  2209  02E0'                    u6880:
  2210  02E0'                    l4105:
  2211  02E0' 1987               	btfsc	7,3	;volatile
  2212  02E1' 2800'              	goto	u6891
  2213  02E2' 2800'              	goto	u6890
  2214  02E3'                    u6891:
  2215  02E3' 2800'              	goto	l4111
  2216  02E4'                    u6890:
  2217  02E4'                    l4107:
  2218                           
  2219                           ;main.c: 193:                 Lcd_Set_Cursor(1, 8);
  2220  02E4' 3008               	movlw	8
  2221  02E5' 0084'              	movwf	Lcd_Set_Cursor@b
  2222  02E6' 3001               	movlw	1
  2223  02E7' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Set_Cursor
  2224  02EC'                    l4109:
  2225                           
  2226                           ;main.c: 194:             Lcd_Write_String("              ");
  2227  02EC' 3000'              	movlw	low (STR_22| (0+32768))
  2228  02ED' 0085'              	movwf	Lcd_Write_String@a
  2229  02EE' 3000'              	movlw	high (STR_22| (0+32768))
  2230  02EF' 0086'              	movwf	Lcd_Write_String@a+1
  2231  02F0' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Write_String
  2232  02F5'                    l4111:
  2233                           
  2234                           ;main.c: 201:         if(RC1==1 || RC2==1){
  2235  02F5' 1283               	bcf	3,5	;RP0=0, select bank0
  2236  02F6' 1303               	bcf	3,6	;RP1=0, select bank0
  2237  02F7' 1887               	btfsc	7,1	;volatile
  2238  02F8' 2800'              	goto	u6901
  2239  02F9' 2800'              	goto	u6900
  2240  02FA'                    u6901:
  2241  02FA' 2800'              	goto	l140
  2242  02FB'                    u6900:
  2243  02FB'                    l4113:
  2244  02FB' 1D07               	btfss	7,2	;volatile
  2245  02FC' 2800'              	goto	u6911
  2246  02FD' 2800'              	goto	u6910
  2247  02FE'                    u6911:
  2248  02FE' 2800'              	goto	l138
  2249  02FF'                    u6910:
  2250  02FF'                    l140:
  2251                           
  2252                           ;main.c: 203:             RA4=1;
  2253  02FF' 1605               	bsf	5,4	;volatile
  2254                           
  2255                           ;main.c: 204:         }
  2256  0300' 2800'              	goto	l141
  2257  0301'                    l138:	
  2258                           ;main.c: 205:         else {
  2259                           
  2260                           
  2261                           ;main.c: 206:             RA4=0;
  2262  0301' 1205               	bcf	5,4	;volatile
  2263  0302'                    l141:	
  2264                           ;main.c: 207:         }
  2265                           
  2266                           
  2267                           ;main.c: 212: if (RC3==1){
  2268  0302' 1D87               	btfss	7,3	;volatile
  2269  0303' 2800'              	goto	u6921
  2270  0304' 2800'              	goto	u6920
  2271  0305'                    u6921:
  2272  0305' 2800'              	goto	l3999
  2273  0306'                    u6920:
  2274  0306'                    l4115:
  2275                           
  2276                           ;main.c: 213:     RA4=1;
  2277  0306' 1605               	bsf	5,4	;volatile
  2278  0307'                    l4117:
  2279                           
  2280                           ;main.c: 214:     Lcd_Set_Cursor(1,7);
  2281  0307' 3007               	movlw	7
  2282  0308' 0084'              	movwf	Lcd_Set_Cursor@b
  2283  0309' 3001               	movlw	1
  2284  030A' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Set_Cursor
  2285  030F'                    l4119:
  2286                           
  2287                           ;main.c: 215:             Lcd_Write_String("DC SERVO ERROR");
  2288  030F' 3000'              	movlw	low (STR_24| (0+32768))
  2289  0310' 0085'              	movwf	Lcd_Write_String@a
  2290  0311' 3000'              	movlw	high (STR_24| (0+32768))
  2291  0312' 0086'              	movwf	Lcd_Write_String@a+1
  2292  0313' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Write_String
  2293  0318' 2800'              	goto	l3999
  2294  0319' 120A' 118A' 2800'  	ljmp	start
  2295  031C'                    __end_of_main:
  2296                           
  2297                           	psect	text1
  2298  0000'                    __ptext1:	
  2299 ;; *************** function _sprintf *****************
  2300 ;; Defined at:
  2301 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c"
  2302 ;; Parameters:    Size  Location     Type
  2303 ;;  sp              1    wreg     PTR unsigned char 
  2304 ;;		 -> main@combinedText_160(20), main@combinedText(20), main@adcString2(4), main@adcString1(4), 
  2305 ;;  f               2   74[BANK0 ] PTR const unsigned char 
  2306 ;;		 -> STR_19(6), STR_13(6), STR_7(6), STR_5(4), 
  2307 ;; Auto vars:     Size  Location     Type
  2308 ;;  sp              1   28[BANK1 ] PTR unsigned char 
  2309 ;;		 -> main@combinedText_160(20), main@combinedText(20), main@adcString2(4), main@adcString1(4), 
  2310 ;;  fval            4   24[BANK1 ] PTR unsigned char 
  2311 ;;  val             4   18[BANK1 ] unsigned long 
  2312 ;;  tmpval          4   14[BANK1 ] struct .
  2313 ;;  prec            2   29[BANK1 ] int 
  2314 ;;  eexp            2   22[BANK1 ] int 
  2315 ;;  width           2   12[BANK1 ] int 
  2316 ;;  flag            2   10[BANK1 ] unsigned short 
  2317 ;;  cp              2    0        PTR const unsigned char 
  2318 ;;  len             2    0        unsigned int 
  2319 ;;  c               1   31[BANK1 ] unsigned char 
  2320 ;;  ap              1    9[BANK1 ] PTR void [1]
  2321 ;;		 -> ?_sprintf(2), 
  2322 ;;  d               1    0        unsigned char 
  2323 ;; Return value:  Size  Location     Type
  2324 ;;                  2   74[BANK0 ] int 
  2325 ;; Registers used:
  2326 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2327 ;; Tracked objects:
  2328 ;;		On entry : 0/0
  2329 ;;		On exit  : 0/0
  2330 ;;		Unchanged: 0/0
  2331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2332 ;;      Params:         0       6       0       0       0
  2333 ;;      Locals:         0       0      27       0       0
  2334 ;;      Temps:          0       0       5       0       0
  2335 ;;      Totals:         0       6      32       0       0
  2336 ;;Total ram usage:       38 bytes
  2337 ;; Hardware stack levels used: 1
  2338 ;; Hardware stack levels required when called: 3
  2339 ;; This function calls:
  2340 ;;		___awdiv
  2341 ;;		___fladd
  2342 ;;		___fleq
  2343 ;;		___flge
  2344 ;;		___flmul
  2345 ;;		___flneg
  2346 ;;		___flsub
  2347 ;;		___fltol
  2348 ;;		___lldiv
  2349 ;;		___llmod
  2350 ;;		___wmul
  2351 ;;		___xxtofl
  2352 ;;		__div_to_l_
  2353 ;;		__tdiv_to_l_
  2354 ;;		_fround
  2355 ;;		_isdigit
  2356 ;;		_scale
  2357 ;; This function is called by:
  2358 ;;		_main
  2359 ;; This function uses a non-reentrant model
  2360 ;;
  2361                           
  2362  0000'                    _sprintf:	
  2363                           ;psect for function _sprintf
  2364                           
  2365                           
  2366                           ;incstack = 0
  2367                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2368                           ;sprintf@sp stored from wreg
  2369  0000' 1683               	bsf	3,5	;RP0=1, select bank1
  2370  0001' 1303               	bcf	3,6	;RP1=0, select bank1
  2371  0002' 0080'              	movwf	sprintf@sp^(0+128)
  2372  0003'                    l3501:
  2373                           
  2374                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  2375  0003' 3000'              	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  2376  0004' 0080'              	movwf	sprintf@ap^(0+128)
  2377  0005'                    L1:
  2378                           
  2379                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2380  0005' 120A' 118A' 2800'  	goto	l3795
  2381  0008'                    l3503:
  2382                           
  2383                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2384  0008' 3025               	movlw	37
  2385  0009' 0600'              	xorwf	sprintf@c^(0+128),w
  2386  000A' 1903               	btfsc	3,2
  2387  000B' 2800'              	goto	u5831
  2388  000C' 2800'              	goto	u5830
  2389  000D'                    u5831:
  2390  000D' 2800'              	goto	l3509
  2391  000E'                    u5830:
  2392  000E'                    l3505:
  2393                           
  2394                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2395  000E' 0800'              	movf	sprintf@sp^(0+128),w
  2396  000F' 0084               	movwf	4
  2397  0010' 0800'              	movf	sprintf@c^(0+128),w
  2398  0011' 1783               	bsf	3,7	;select IRP bank2
  2399  0012' 0080               	movwf	0
  2400  0013'                    l3507:
  2401  0013' 3001               	movlw	1
  2402  0014' 00FF               	movwf	btemp+1
  2403  0015' 087F               	movf	btemp+1,w
  2404  0016' 0780'              	addwf	sprintf@sp^(0+128),f
  2405                           
  2406                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 559:    continue;
  2407  0017' 2800'              	goto	L1
  2408  0018'                    l3509:
  2409                           
  2410                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  2411  0018' 0180'              	clrf	sprintf@width^(0+128)
  2412  0019' 0180'              	clrf	(sprintf@width+1)^(0+128)
  2413                           
  2414                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2415  001A' 0180'              	clrf	sprintf@flag^(0+128)
  2416  001B' 0180'              	clrf	(sprintf@flag+1)^(0+128)
  2417  001C'                    l3511:
  2418                           
  2419                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  2420  001C' 1283               	bcf	3,5	;RP0=0, select bank0
  2421  001D' 1303               	bcf	3,6	;RP1=0, select bank0
  2422  001E' 084B'              	movf	sprintf@f+1,w
  2423  001F' 00FF               	movwf	btemp+1
  2424  0020' 084A'              	movf	sprintf@f,w
  2425  0021' 0084               	movwf	4
  2426  0022' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  2427  0027' 120A' 118A' 2000' 120A' 118A' 	fcall	_isdigit
  2428  002C' 1C03               	btfss	3,0
  2429  002D' 2800'              	goto	u5841
  2430  002E' 2800'              	goto	u5840
  2431  002F'                    u5841:
  2432  002F' 2800'              	goto	l3523
  2433  0030'                    u5840:
  2434  0030'                    l3513:
  2435                           
  2436                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  2437  0030' 1683               	bsf	3,5	;RP0=1, select bank1
  2438  0031' 1303               	bcf	3,6	;RP1=0, select bank1
  2439  0032' 0180'              	clrf	sprintf@width^(0+128)
  2440  0033' 0180'              	clrf	(sprintf@width+1)^(0+128)
  2441  0034'                    l3515:
  2442                           
  2443                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  2444  0034' 300A               	movlw	10
  2445  0035' 0080'              	movwf	___wmul@multiplier
  2446  0036' 3000               	movlw	0
  2447  0037' 0081'              	movwf	___wmul@multiplier+1
  2448  0038' 1683               	bsf	3,5	;RP0=1, select bank1
  2449  0039' 1303               	bcf	3,6	;RP1=0, select bank1
  2450  003A' 0800'              	movf	(sprintf@width+1)^(0+128),w
  2451  003B' 0083'              	movwf	___wmul@multiplicand+1
  2452  003C' 0800'              	movf	sprintf@width^(0+128),w
  2453  003D' 0082'              	movwf	___wmul@multiplicand
  2454  003E' 120A' 118A' 2000' 120A' 118A' 	fcall	___wmul
  2455  0043' 0801'              	movf	?___wmul+1,w
  2456  0044' 1683               	bsf	3,5	;RP0=1, select bank1
  2457  0045' 1303               	bcf	3,6	;RP1=0, select bank1
  2458  0046' 0080'              	movwf	(sprintf@width+1)^(0+128)
  2459  0047' 0800'              	movf	?___wmul,w
  2460  0048' 0080'              	movwf	sprintf@width^(0+128)
  2461  0049'                    l3517:
  2462                           
  2463                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  2464  0049' 1283               	bcf	3,5	;RP0=0, select bank0
  2465  004A' 1303               	bcf	3,6	;RP1=0, select bank0
  2466  004B' 084B'              	movf	sprintf@f+1,w
  2467  004C' 00FF               	movwf	btemp+1
  2468  004D' 084A'              	movf	sprintf@f,w
  2469  004E' 0084               	movwf	4
  2470  004F' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  2471  0054' 3ED0               	addlw	208
  2472  0055' 1683               	bsf	3,5	;RP0=1, select bank1
  2473  0056' 1303               	bcf	3,6	;RP1=0, select bank1
  2474  0057' 0080'              	movwf	??_sprintf^(0+128)
  2475  0058' 30FF               	movlw	255
  2476  0059' 1803               	skipnc
  2477  005A' 3000               	movlw	0
  2478  005B' 0081'              	movwf	(??_sprintf^(0+128)+1)
  2479  005C' 0800'              	movf	??_sprintf^(0+128),w
  2480  005D' 0780'              	addwf	sprintf@width^(0+128),f
  2481  005E' 1803               	skipnc
  2482  005F' 0A80'              	incf	(sprintf@width+1)^(0+128),f
  2483  0060' 0800'              	movf	(??_sprintf+1)^(0+128),w
  2484  0061' 0780'              	addwf	(sprintf@width+1)^(0+128),f
  2485  0062'                    l3519:
  2486  0062' 3001               	movlw	1
  2487  0063' 1283               	bcf	3,5	;RP0=0, select bank0
  2488  0064' 1303               	bcf	3,6	;RP1=0, select bank0
  2489  0065' 07CA'              	addwf	sprintf@f,f
  2490  0066' 1803               	skipnc
  2491  0067' 0ACB'              	incf	sprintf@f+1,f
  2492  0068' 3000               	movlw	0
  2493  0069' 07CB'              	addwf	sprintf@f+1,f
  2494  006A'                    l3521:
  2495                           
  2496                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  2497  006A' 084B'              	movf	sprintf@f+1,w
  2498  006B' 00FF               	movwf	btemp+1
  2499  006C' 084A'              	movf	sprintf@f,w
  2500  006D' 0084               	movwf	4
  2501  006E' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  2502  0073' 120A' 118A' 2000' 120A' 118A' 	fcall	_isdigit
  2503  0078' 1803               	btfsc	3,0
  2504  0079' 2800'              	goto	u5851
  2505  007A' 2800'              	goto	u5850
  2506  007B'                    u5851:
  2507  007B' 2800'              	goto	l3515
  2508  007C'                    u5850:
  2509  007C'                    l3523:
  2510                           
  2511                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  2512  007C' 1283               	bcf	3,5	;RP0=0, select bank0
  2513  007D' 1303               	bcf	3,6	;RP1=0, select bank0
  2514  007E' 084B'              	movf	sprintf@f+1,w
  2515  007F' 00FF               	movwf	btemp+1
  2516  0080' 084A'              	movf	sprintf@f,w
  2517  0081' 0084               	movwf	4
  2518  0082' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  2519  0087' 3A2E               	xorlw	46
  2520  0088' 1D03               	skipz
  2521  0089' 2800'              	goto	u5861
  2522  008A' 2800'              	goto	u5860
  2523  008B'                    u5861:
  2524  008B' 2800'              	goto	l3539
  2525  008C'                    u5860:
  2526  008C'                    l3525:
  2527                           
  2528                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  2529  008C' 1683               	bsf	3,5	;RP0=1, select bank1
  2530  008D' 1303               	bcf	3,6	;RP1=0, select bank1
  2531  008E' 1701'              	bsf	(sprintf@flag^(0+128)+1),6
  2532  008F'                    l3527:
  2533                           
  2534                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 630:    f++;
  2535  008F' 3001               	movlw	1
  2536  0090' 1283               	bcf	3,5	;RP0=0, select bank0
  2537  0091' 1303               	bcf	3,6	;RP1=0, select bank0
  2538  0092' 07CA'              	addwf	sprintf@f,f
  2539  0093' 1803               	skipnc
  2540  0094' 0ACB'              	incf	sprintf@f+1,f
  2541  0095' 3000               	movlw	0
  2542  0096' 07CB'              	addwf	sprintf@f+1,f
  2543  0097'                    l3529:
  2544                           
  2545                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  2546  0097' 1683               	bsf	3,5	;RP0=1, select bank1
  2547  0098' 1303               	bcf	3,6	;RP1=0, select bank1
  2548  0099' 0180'              	clrf	sprintf@prec^(0+128)
  2549  009A' 0180'              	clrf	(sprintf@prec+1)^(0+128)
  2550                           
  2551                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2552  009B' 2800'              	goto	l3537
  2553  009C'                    l3531:
  2554                           
  2555                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  2556  009C' 300A               	movlw	10
  2557  009D' 0080'              	movwf	___wmul@multiplier
  2558  009E' 3000               	movlw	0
  2559  009F' 0081'              	movwf	___wmul@multiplier+1
  2560  00A0' 1683               	bsf	3,5	;RP0=1, select bank1
  2561  00A1' 1303               	bcf	3,6	;RP1=0, select bank1
  2562  00A2' 0800'              	movf	(sprintf@prec+1)^(0+128),w
  2563  00A3' 0083'              	movwf	___wmul@multiplicand+1
  2564  00A4' 0800'              	movf	sprintf@prec^(0+128),w
  2565  00A5' 0082'              	movwf	___wmul@multiplicand
  2566  00A6' 120A' 118A' 2000' 120A' 118A' 	fcall	___wmul
  2567  00AB' 0801'              	movf	?___wmul+1,w
  2568  00AC' 1683               	bsf	3,5	;RP0=1, select bank1
  2569  00AD' 1303               	bcf	3,6	;RP1=0, select bank1
  2570  00AE' 0080'              	movwf	(sprintf@prec+1)^(0+128)
  2571  00AF' 0800'              	movf	?___wmul,w
  2572  00B0' 0080'              	movwf	sprintf@prec^(0+128)
  2573  00B1'                    l3533:
  2574                           
  2575                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  2576  00B1' 1283               	bcf	3,5	;RP0=0, select bank0
  2577  00B2' 1303               	bcf	3,6	;RP1=0, select bank0
  2578  00B3' 084B'              	movf	sprintf@f+1,w
  2579  00B4' 00FF               	movwf	btemp+1
  2580  00B5' 084A'              	movf	sprintf@f,w
  2581  00B6' 0084               	movwf	4
  2582  00B7' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  2583  00BC' 3ED0               	addlw	208
  2584  00BD' 1683               	bsf	3,5	;RP0=1, select bank1
  2585  00BE' 1303               	bcf	3,6	;RP1=0, select bank1
  2586  00BF' 0080'              	movwf	??_sprintf^(0+128)
  2587  00C0' 30FF               	movlw	255
  2588  00C1' 1803               	skipnc
  2589  00C2' 3000               	movlw	0
  2590  00C3' 0081'              	movwf	(??_sprintf^(0+128)+1)
  2591  00C4' 0800'              	movf	??_sprintf^(0+128),w
  2592  00C5' 0780'              	addwf	sprintf@prec^(0+128),f
  2593  00C6' 1803               	skipnc
  2594  00C7' 0A80'              	incf	(sprintf@prec+1)^(0+128),f
  2595  00C8' 0800'              	movf	(??_sprintf+1)^(0+128),w
  2596  00C9' 0780'              	addwf	(sprintf@prec+1)^(0+128),f
  2597  00CA'                    l3535:
  2598  00CA' 3001               	movlw	1
  2599  00CB' 1283               	bcf	3,5	;RP0=0, select bank0
  2600  00CC' 1303               	bcf	3,6	;RP1=0, select bank0
  2601  00CD' 07CA'              	addwf	sprintf@f,f
  2602  00CE' 1803               	skipnc
  2603  00CF' 0ACB'              	incf	sprintf@f+1,f
  2604  00D0' 3000               	movlw	0
  2605  00D1' 07CB'              	addwf	sprintf@f+1,f
  2606  00D2'                    l3537:
  2607                           
  2608                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2609  00D2' 1283               	bcf	3,5	;RP0=0, select bank0
  2610  00D3' 084B'              	movf	sprintf@f+1,w
  2611  00D4' 00FF               	movwf	btemp+1
  2612  00D5' 084A'              	movf	sprintf@f,w
  2613  00D6' 0084               	movwf	4
  2614  00D7' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  2615  00DC' 120A' 118A' 2000' 120A' 118A' 	fcall	_isdigit
  2616  00E1' 1803               	btfsc	3,0
  2617  00E2' 2800'              	goto	u5871
  2618  00E3' 2800'              	goto	u5870
  2619  00E4'                    u5871:
  2620  00E4' 2800'              	goto	l3531
  2621  00E5'                    u5870:
  2622  00E5' 2800'              	goto	l3545
  2623  00E6'                    l3539:
  2624                           
  2625                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  2626  00E6' 1683               	bsf	3,5	;RP0=1, select bank1
  2627  00E7' 1303               	bcf	3,6	;RP1=0, select bank1
  2628  00E8' 0180'              	clrf	sprintf@prec^(0+128)
  2629  00E9' 0180'              	clrf	(sprintf@prec+1)^(0+128)
  2630  00EA'                    l3541:
  2631                           
  2632                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  2633  00EA' 1601'              	bsf	(sprintf@flag^(0+128)+1),4
  2634  00EB' 2800'              	goto	l3545
  2635  00EC'                    l301:	
  2636                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  2637                           
  2638                           
  2639                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  2640  00EC' 1501'              	bsf	(sprintf@flag^(0+128)+1),2
  2641                           
  2642                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 690:    break;
  2643  00ED' 2800'              	goto	l3547
  2644  00EE'                    l306:	
  2645                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 843:   case 'u':
  2646                           
  2647                           
  2648                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          x40;
  2649  00EE' 1700'              	bsf	sprintf@flag^(0+128),6
  2650                           
  2651                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 845:    break;
  2652  00EF' 2800'              	goto	l3547
  2653  00F0'                    l3545:
  2654  00F0' 1283               	bcf	3,5	;RP0=0, select bank0
  2655  00F1' 1303               	bcf	3,6	;RP1=0, select bank0
  2656  00F2' 084B'              	movf	sprintf@f+1,w
  2657  00F3' 1683               	bsf	3,5	;RP0=1, select bank1
  2658  00F4' 1303               	bcf	3,6	;RP1=0, select bank1
  2659  00F5' 0081'              	movwf	(??_sprintf^(0+128)+1)
  2660  00F6' 1283               	bcf	3,5	;RP0=0, select bank0
  2661  00F7' 1303               	bcf	3,6	;RP1=0, select bank0
  2662  00F8' 084A'              	movf	sprintf@f,w
  2663  00F9' 1683               	bsf	3,5	;RP0=1, select bank1
  2664  00FA' 1303               	bcf	3,6	;RP1=0, select bank1
  2665  00FB' 0080'              	movwf	??_sprintf^(0+128)
  2666  00FC' 1283               	bcf	3,5	;RP0=0, select bank0
  2667  00FD' 1303               	bcf	3,6	;RP1=0, select bank0
  2668  00FE' 0ACA'              	incf	sprintf@f,f
  2669  00FF' 1903               	skipnz
  2670  0100' 0ACB'              	incf	sprintf@f+1,f
  2671  0101' 1683               	bsf	3,5	;RP0=1, select bank1
  2672  0102' 1303               	bcf	3,6	;RP1=0, select bank1
  2673  0103' 0800'              	movf	(??_sprintf+1)^(0+128),w
  2674  0104' 1283               	bcf	3,5	;RP0=0, select bank0
  2675  0105' 1303               	bcf	3,6	;RP1=0, select bank0
  2676  0106' 00FF               	movwf	btemp+1
  2677  0107' 1683               	bsf	3,5	;RP0=1, select bank1
  2678  0108' 1303               	bcf	3,6	;RP1=0, select bank1
  2679  0109' 0800'              	movf	??_sprintf^(0+128),w
  2680  010A' 0084               	movwf	4
  2681  010B' 1283               	bcf	3,5	;RP0=0, select bank0
  2682  010C' 1303               	bcf	3,6	;RP1=0, select bank0
  2683  010D' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  2684  0112' 1683               	bsf	3,5	;RP0=1, select bank1
  2685  0113' 1303               	bcf	3,6	;RP1=0, select bank1
  2686  0114' 0080'              	movwf	sprintf@c^(0+128)
  2687  0115' 0080'              	movwf	(??_sprintf+2)^(0+128)
  2688  0116' 0181'              	clrf	((??_sprintf+2)^(0+128)+1)
  2689                           
  2690                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2691                           ; Switch size 1, requested type "simple"
  2692                           ; Number of cases is 1, Range of values is 0 to 0
  2693                           ; switch strategies available:
  2694                           ; Name         Instructions Cycles
  2695                           ; simple_byte            4     3 (average)
  2696                           ; direct_byte           11     8 (fixed)
  2697                           ; jumptable            260     6 (fixed)
  2698                           ;	Chosen strategy is simple_byte
  2699  0117' 0800'              	movf	(??_sprintf+3)^(0+128),w
  2700  0118' 3A00               	xorlw	0	; case 0
  2701  0119' 1903               	skipnz
  2702  011A' 2800'              	goto	l4151
  2703  011B' 2800'              	goto	L1
  2704  011C'                    l4151:
  2705                           
  2706                           ; Switch size 1, requested type "simple"
  2707                           ; Number of cases is 5, Range of values is 0 to 117
  2708                           ; switch strategies available:
  2709                           ; Name         Instructions Cycles
  2710                           ; simple_byte           16     9 (average)
  2711                           ; jumptable            260     6 (fixed)
  2712                           ;	Chosen strategy is simple_byte
  2713  011C' 0800'              	movf	(??_sprintf+2)^(0+128),w
  2714  011D' 3A00               	xorlw	0	; case 0
  2715  011E' 1903               	skipnz
  2716  011F' 2800'              	goto	L3
  2717  0120' 3A64               	xorlw	100	; case 100
  2718  0121' 1903               	skipnz
  2719  0122' 2800'              	goto	l3547
  2720  0123' 3A02               	xorlw	2	; case 102
  2721  0124' 1903               	skipnz
  2722  0125' 2800'              	goto	l301
  2723  0126' 3A0F               	xorlw	15	; case 105
  2724  0127' 1903               	skipnz
  2725  0128' 2800'              	goto	l3547
  2726  0129' 3A1C               	xorlw	28	; case 117
  2727  012A' 1903               	skipnz
  2728  012B' 2800'              	goto	l306
  2729  012C' 2800'              	goto	L1
  2730  012D'                    l3547:
  2731                           
  2732                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  2733  012D' 3000               	movlw	0
  2734  012E' 0500'              	andwf	sprintf@flag^(0+128),w
  2735  012F' 0080'              	movwf	??_sprintf^(0+128)
  2736  0130' 3007               	movlw	7
  2737  0131' 0500'              	andwf	(sprintf@flag+1)^(0+128),w
  2738  0132' 0080'              	movwf	(??_sprintf+1)^(0+128)
  2739  0133' 0800'              	movf	??_sprintf^(0+128),w
  2740  0134' 0401'              	iorwf	(??_sprintf^(0+128)+1),w
  2741  0135' 1903               	btfsc	3,2
  2742  0136' 2800'              	goto	u5881
  2743  0137' 2800'              	goto	u5880
  2744  0138'                    u5881:
  2745  0138' 120A' 118A' 2800'  	goto	l307
  2746  013B'                    u5880:
  2747  013B'                    l3549:
  2748                           
  2749                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  2750  013B' 1E00'              	btfss	(sprintf@flag+1)^(0+128),4
  2751  013C' 2800'              	goto	u5891
  2752  013D' 2800'              	goto	u5890
  2753  013E'                    u5891:
  2754  013E' 2800'              	goto	l3553
  2755  013F'                    u5890:
  2756  013F'                    l3551:
  2757                           
  2758                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  2759  013F' 3006               	movlw	6
  2760  0140' 0080'              	movwf	sprintf@prec^(0+128)
  2761  0141' 3000               	movlw	0
  2762  0142' 0081'              	movwf	(sprintf@prec^(0+128)+1)
  2763  0143'                    l3553:
  2764                           
  2765                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  2766  0143' 0800'              	movf	sprintf@ap^(0+128),w
  2767  0144' 0084               	movwf	4
  2768  0145' 1383               	bcf	3,7	;select IRP bank0
  2769  0146' 0800               	movf	0,w
  2770  0147' 0080'              	movwf	sprintf@fval^(0+128)
  2771  0148' 0A84               	incf	4,f
  2772  0149' 0800               	movf	0,w
  2773  014A' 0080'              	movwf	(sprintf@fval+1)^(0+128)
  2774  014B' 0A84               	incf	4,f
  2775  014C' 0800               	movf	0,w
  2776  014D' 0080'              	movwf	(sprintf@fval+2)^(0+128)
  2777  014E' 0A84               	incf	4,f
  2778  014F' 0800               	movf	0,w
  2779  0150' 0080'              	movwf	(sprintf@fval+3)^(0+128)
  2780  0151'                    l3555:
  2781  0151' 3004               	movlw	4
  2782  0152' 00FF               	movwf	btemp+1
  2783  0153' 087F               	movf	btemp+1,w
  2784  0154' 0780'              	addwf	sprintf@ap^(0+128),f
  2785  0155'                    l3557:
  2786                           
  2787                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  2788  0155' 0800'              	movf	(sprintf@fval+3)^(0+128),w
  2789  0156' 0083'              	movwf	___flge@ff1+3
  2790  0157' 0800'              	movf	(sprintf@fval+2)^(0+128),w
  2791  0158' 0082'              	movwf	___flge@ff1+2
  2792  0159' 0800'              	movf	(sprintf@fval+1)^(0+128),w
  2793  015A' 0081'              	movwf	___flge@ff1+1
  2794  015B' 0800'              	movf	sprintf@fval^(0+128),w
  2795  015C' 0080'              	movwf	___flge@ff1
  2796  015D' 3000               	movlw	0
  2797  015E' 0087'              	movwf	___flge@ff2+3
  2798  015F' 3000               	movlw	0
  2799  0160' 0086'              	movwf	___flge@ff2+2
  2800  0161' 3000               	movlw	0
  2801  0162' 0085'              	movwf	___flge@ff2+1
  2802  0163' 3000               	movlw	0
  2803  0164' 0084'              	movwf	___flge@ff2
  2804  0165' 120A' 118A' 2000' 120A' 118A' 	fcall	___flge
  2805  016A' 1803               	btfsc	3,0
  2806  016B' 2800'              	goto	u5901
  2807  016C' 2800'              	goto	u5900
  2808  016D'                    u5901:
  2809  016D' 2800'              	goto	l3563
  2810  016E'                    u5900:
  2811  016E'                    l3559:
  2812                           
  2813                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  2814  016E' 1683               	bsf	3,5	;RP0=1, select bank1
  2815  016F' 1303               	bcf	3,6	;RP1=0, select bank1
  2816  0170' 0800'              	movf	(sprintf@fval+3)^(0+128),w
  2817  0171' 0083'              	movwf	___flneg@f1+3
  2818  0172' 0800'              	movf	(sprintf@fval+2)^(0+128),w
  2819  0173' 0082'              	movwf	___flneg@f1+2
  2820  0174' 0800'              	movf	(sprintf@fval+1)^(0+128),w
  2821  0175' 0081'              	movwf	___flneg@f1+1
  2822  0176' 0800'              	movf	sprintf@fval^(0+128),w
  2823  0177' 0080'              	movwf	___flneg@f1
  2824  0178' 120A' 118A' 2000' 120A' 118A' 	fcall	___flneg
  2825  017D' 0803'              	movf	?___flneg+3,w
  2826  017E' 1683               	bsf	3,5	;RP0=1, select bank1
  2827  017F' 1303               	bcf	3,6	;RP1=0, select bank1
  2828  0180' 0080'              	movwf	(sprintf@fval+3)^(0+128)
  2829  0181' 0802'              	movf	?___flneg+2,w
  2830  0182' 0080'              	movwf	(sprintf@fval+2)^(0+128)
  2831  0183' 0801'              	movf	?___flneg+1,w
  2832  0184' 0080'              	movwf	(sprintf@fval+1)^(0+128)
  2833  0185' 0800'              	movf	?___flneg,w
  2834  0186' 0080'              	movwf	sprintf@fval^(0+128)
  2835  0187'                    l3561:
  2836                           
  2837                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  2838  0187' 3003               	movlw	3
  2839  0188' 0480'              	iorwf	sprintf@flag^(0+128),f
  2840  0189' 3000               	movlw	0
  2841  018A' 0480'              	iorwf	(sprintf@flag+1)^(0+128),f
  2842  018B'                    l3563:
  2843                           
  2844                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2845  018B' 1683               	bsf	3,5	;RP0=1, select bank1
  2846  018C' 1303               	bcf	3,6	;RP1=0, select bank1
  2847  018D' 0180'              	clrf	sprintf@eexp^(0+128)
  2848  018E' 0180'              	clrf	(sprintf@eexp+1)^(0+128)
  2849  018F'                    l3565:
  2850                           
  2851                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2852  018F' 0800'              	movf	(sprintf@fval+3)^(0+128),w
  2853  0190' 0083'              	movwf	___fleq@ff1+3
  2854  0191' 0800'              	movf	(sprintf@fval+2)^(0+128),w
  2855  0192' 0082'              	movwf	___fleq@ff1+2
  2856  0193' 0800'              	movf	(sprintf@fval+1)^(0+128),w
  2857  0194' 0081'              	movwf	___fleq@ff1+1
  2858  0195' 0800'              	movf	sprintf@fval^(0+128),w
  2859  0196' 0080'              	movwf	___fleq@ff1
  2860  0197' 3000               	movlw	0
  2861  0198' 0087'              	movwf	___fleq@ff2+3
  2862  0199' 3000               	movlw	0
  2863  019A' 0086'              	movwf	___fleq@ff2+2
  2864  019B' 3000               	movlw	0
  2865  019C' 0085'              	movwf	___fleq@ff2+1
  2866  019D' 3000               	movlw	0
  2867  019E' 0084'              	movwf	___fleq@ff2
  2868  019F' 120A' 118A' 2000' 120A' 118A' 	fcall	___fleq
  2869  01A4' 1803               	btfsc	3,0
  2870  01A5' 2800'              	goto	u5911
  2871  01A6' 2800'              	goto	u5910
  2872  01A7'                    u5911:
  2873  01A7' 2800'              	goto	l3591
  2874  01A8'                    u5910:
  2875  01A8'                    l3567:
  2876                           
  2877                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2878  01A8' 1003               	clrc
  2879  01A9' 1683               	bsf	3,5	;RP0=1, select bank1
  2880  01AA' 1303               	bcf	3,6	;RP1=0, select bank1
  2881  01AB' 0D00'              	rlf	(sprintf@fval+2)^(0+128),w
  2882  01AC' 0D00'              	rlf	(sprintf@fval+3)^(0+128),w
  2883  01AD' 3E82               	addlw	130
  2884  01AE' 0080'              	movwf	sprintf@eexp^(0+128)
  2885  01AF' 30FF               	movlw	255
  2886  01B0' 1803               	skipnc
  2887  01B1' 3000               	movlw	0
  2888  01B2' 0081'              	movwf	(sprintf@eexp^(0+128)+1)
  2889  01B3'                    l3569:
  2890                           
  2891                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2892  01B3' 30FF               	movlw	255
  2893  01B4' 0780'              	addwf	sprintf@eexp^(0+128),f
  2894  01B5' 1803               	skipnc
  2895  01B6' 0A80'              	incf	(sprintf@eexp+1)^(0+128),f
  2896  01B7' 30FF               	movlw	255
  2897  01B8' 0780'              	addwf	(sprintf@eexp+1)^(0+128),f
  2898  01B9'                    l3571:
  2899                           
  2900                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2901  01B9' 3003               	movlw	3
  2902  01BA' 0080'              	movwf	___wmul@multiplier
  2903  01BB' 3000               	movlw	0
  2904  01BC' 0081'              	movwf	___wmul@multiplier+1
  2905  01BD' 0800'              	movf	(sprintf@eexp+1)^(0+128),w
  2906  01BE' 0083'              	movwf	___wmul@multiplicand+1
  2907  01BF' 0800'              	movf	sprintf@eexp^(0+128),w
  2908  01C0' 0082'              	movwf	___wmul@multiplicand
  2909  01C1' 120A' 118A' 2000' 120A' 118A' 	fcall	___wmul
  2910  01C6' 0801'              	movf	?___wmul+1,w
  2911  01C7' 1683               	bsf	3,5	;RP0=1, select bank1
  2912  01C8' 1303               	bcf	3,6	;RP1=0, select bank1
  2913  01C9' 0080'              	movwf	(sprintf@eexp+1)^(0+128)
  2914  01CA' 0800'              	movf	?___wmul,w
  2915  01CB' 0080'              	movwf	sprintf@eexp^(0+128)
  2916  01CC'                    l3573:
  2917                           
  2918                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2919  01CC' 300A               	movlw	10
  2920  01CD' 0086'              	movwf	___awdiv@divisor
  2921  01CE' 3000               	movlw	0
  2922  01CF' 0087'              	movwf	___awdiv@divisor+1
  2923  01D0' 0800'              	movf	(sprintf@eexp+1)^(0+128),w
  2924  01D1' 0089'              	movwf	___awdiv@dividend+1
  2925  01D2' 0800'              	movf	sprintf@eexp^(0+128),w
  2926  01D3' 0088'              	movwf	___awdiv@dividend
  2927  01D4' 120A' 118A' 2000' 120A' 118A' 	fcall	___awdiv
  2928  01D9' 0807'              	movf	?___awdiv+1,w
  2929  01DA' 1683               	bsf	3,5	;RP0=1, select bank1
  2930  01DB' 1303               	bcf	3,6	;RP1=0, select bank1
  2931  01DC' 0080'              	movwf	(sprintf@eexp+1)^(0+128)
  2932  01DD' 0806'              	movf	?___awdiv,w
  2933  01DE' 0080'              	movwf	sprintf@eexp^(0+128)
  2934  01DF'                    l3575:
  2935                           
  2936                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2937  01DF' 1F80'              	btfss	(sprintf@eexp+1)^(0+128),7
  2938  01E0' 2800'              	goto	u5921
  2939  01E1' 2800'              	goto	u5920
  2940  01E2'                    u5921:
  2941  01E2' 2800'              	goto	l3579
  2942  01E3'                    u5920:
  2943  01E3'                    l3577:
  2944                           
  2945                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2946  01E3' 30FF               	movlw	255
  2947  01E4' 0780'              	addwf	sprintf@eexp^(0+128),f
  2948  01E5' 1803               	skipnc
  2949  01E6' 0A80'              	incf	(sprintf@eexp+1)^(0+128),f
  2950  01E7' 30FF               	movlw	255
  2951  01E8' 0780'              	addwf	(sprintf@eexp+1)^(0+128),f
  2952  01E9'                    l3579:
  2953                           
  2954                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2955  01E9' 0300'              	decf	sprintf@eexp^(0+128),w
  2956  01EA' 3AFF               	xorlw	255
  2957  01EB' 120A' 118A' 2000' 120A' 118A' 	fcall	_scale
  2958  01F0' 1283               	bcf	3,5	;RP0=0, select bank0
  2959  01F1' 1303               	bcf	3,6	;RP1=0, select bank0
  2960  01F2' 081D'              	movf	?_scale+3,w
  2961  01F3' 1683               	bsf	3,5	;RP0=1, select bank1
  2962  01F4' 1303               	bcf	3,6	;RP1=0, select bank1
  2963  01F5' 0080'              	movwf	(sprintf@tmpval+3)^(0+128)
  2964  01F6' 1283               	bcf	3,5	;RP0=0, select bank0
  2965  01F7' 1303               	bcf	3,6	;RP1=0, select bank0
  2966  01F8' 081C'              	movf	?_scale+2,w
  2967  01F9' 1683               	bsf	3,5	;RP0=1, select bank1
  2968  01FA' 1303               	bcf	3,6	;RP1=0, select bank1
  2969  01FB' 0080'              	movwf	(sprintf@tmpval+2)^(0+128)
  2970  01FC' 1283               	bcf	3,5	;RP0=0, select bank0
  2971  01FD' 1303               	bcf	3,6	;RP1=0, select bank0
  2972  01FE' 081B'              	movf	?_scale+1,w
  2973  01FF' 1683               	bsf	3,5	;RP0=1, select bank1
  2974  0200' 1303               	bcf	3,6	;RP1=0, select bank1
  2975  0201' 0080'              	movwf	(sprintf@tmpval+1)^(0+128)
  2976  0202' 1283               	bcf	3,5	;RP0=0, select bank0
  2977  0203' 1303               	bcf	3,6	;RP1=0, select bank0
  2978  0204' 081A'              	movf	?_scale,w
  2979  0205' 1683               	bsf	3,5	;RP0=1, select bank1
  2980  0206' 1303               	bcf	3,6	;RP1=0, select bank1
  2981  0207' 0080'              	movwf	sprintf@tmpval^(0+128)
  2982  0208'                    l3581:
  2983                           
  2984                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2985  0208' 0800'              	movf	(sprintf@fval+3)^(0+128),w
  2986  0209' 1283               	bcf	3,5	;RP0=0, select bank0
  2987  020A' 1303               	bcf	3,6	;RP1=0, select bank0
  2988  020B' 0083'              	movwf	___flmul@b+3
  2989  020C' 1683               	bsf	3,5	;RP0=1, select bank1
  2990  020D' 1303               	bcf	3,6	;RP1=0, select bank1
  2991  020E' 0800'              	movf	(sprintf@fval+2)^(0+128),w
  2992  020F' 1283               	bcf	3,5	;RP0=0, select bank0
  2993  0210' 1303               	bcf	3,6	;RP1=0, select bank0
  2994  0211' 0082'              	movwf	___flmul@b+2
  2995  0212' 1683               	bsf	3,5	;RP0=1, select bank1
  2996  0213' 1303               	bcf	3,6	;RP1=0, select bank1
  2997  0214' 0800'              	movf	(sprintf@fval+1)^(0+128),w
  2998  0215' 1283               	bcf	3,5	;RP0=0, select bank0
  2999  0216' 1303               	bcf	3,6	;RP1=0, select bank0
  3000  0217' 0081'              	movwf	___flmul@b+1
  3001  0218' 1683               	bsf	3,5	;RP0=1, select bank1
  3002  0219' 1303               	bcf	3,6	;RP1=0, select bank1
  3003  021A' 0800'              	movf	sprintf@fval^(0+128),w
  3004  021B' 1283               	bcf	3,5	;RP0=0, select bank0
  3005  021C' 1303               	bcf	3,6	;RP1=0, select bank0
  3006  021D' 0080'              	movwf	___flmul@b
  3007  021E' 1683               	bsf	3,5	;RP0=1, select bank1
  3008  021F' 1303               	bcf	3,6	;RP1=0, select bank1
  3009  0220' 0800'              	movf	(sprintf@tmpval+3)^(0+128),w
  3010  0221' 1283               	bcf	3,5	;RP0=0, select bank0
  3011  0222' 1303               	bcf	3,6	;RP1=0, select bank0
  3012  0223' 0087'              	movwf	___flmul@a+3
  3013  0224' 1683               	bsf	3,5	;RP0=1, select bank1
  3014  0225' 1303               	bcf	3,6	;RP1=0, select bank1
  3015  0226' 0800'              	movf	(sprintf@tmpval+2)^(0+128),w
  3016  0227' 1283               	bcf	3,5	;RP0=0, select bank0
  3017  0228' 1303               	bcf	3,6	;RP1=0, select bank0
  3018  0229' 0086'              	movwf	___flmul@a+2
  3019  022A' 1683               	bsf	3,5	;RP0=1, select bank1
  3020  022B' 1303               	bcf	3,6	;RP1=0, select bank1
  3021  022C' 0800'              	movf	(sprintf@tmpval+1)^(0+128),w
  3022  022D' 1283               	bcf	3,5	;RP0=0, select bank0
  3023  022E' 1303               	bcf	3,6	;RP1=0, select bank0
  3024  022F' 0085'              	movwf	___flmul@a+1
  3025  0230' 1683               	bsf	3,5	;RP0=1, select bank1
  3026  0231' 1303               	bcf	3,6	;RP1=0, select bank1
  3027  0232' 0800'              	movf	sprintf@tmpval^(0+128),w
  3028  0233' 1283               	bcf	3,5	;RP0=0, select bank0
  3029  0234' 1303               	bcf	3,6	;RP1=0, select bank0
  3030  0235' 0084'              	movwf	___flmul@a
  3031  0236' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  3032  023B' 1283               	bcf	3,5	;RP0=0, select bank0
  3033  023C' 1303               	bcf	3,6	;RP1=0, select bank0
  3034  023D' 0803'              	movf	?___flmul+3,w
  3035  023E' 1683               	bsf	3,5	;RP0=1, select bank1
  3036  023F' 1303               	bcf	3,6	;RP1=0, select bank1
  3037  0240' 0080'              	movwf	(sprintf@tmpval+3)^(0+128)
  3038  0241' 1283               	bcf	3,5	;RP0=0, select bank0
  3039  0242' 1303               	bcf	3,6	;RP1=0, select bank0
  3040  0243' 0802'              	movf	?___flmul+2,w
  3041  0244' 1683               	bsf	3,5	;RP0=1, select bank1
  3042  0245' 1303               	bcf	3,6	;RP1=0, select bank1
  3043  0246' 0080'              	movwf	(sprintf@tmpval+2)^(0+128)
  3044  0247' 1283               	bcf	3,5	;RP0=0, select bank0
  3045  0248' 1303               	bcf	3,6	;RP1=0, select bank0
  3046  0249' 0801'              	movf	?___flmul+1,w
  3047  024A' 1683               	bsf	3,5	;RP0=1, select bank1
  3048  024B' 1303               	bcf	3,6	;RP1=0, select bank1
  3049  024C' 0080'              	movwf	(sprintf@tmpval+1)^(0+128)
  3050  024D' 1283               	bcf	3,5	;RP0=0, select bank0
  3051  024E' 1303               	bcf	3,6	;RP1=0, select bank0
  3052  024F' 0800'              	movf	?___flmul,w
  3053  0250' 1683               	bsf	3,5	;RP0=1, select bank1
  3054  0251' 1303               	bcf	3,6	;RP1=0, select bank1
  3055  0252' 0080'              	movwf	sprintf@tmpval^(0+128)
  3056  0253'                    l3583:
  3057                           
  3058                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  3059  0253' 0800'              	movf	(sprintf@tmpval+3)^(0+128),w
  3060  0254' 0083'              	movwf	___flge@ff1+3
  3061  0255' 0800'              	movf	(sprintf@tmpval+2)^(0+128),w
  3062  0256' 0082'              	movwf	___flge@ff1+2
  3063  0257' 0800'              	movf	(sprintf@tmpval+1)^(0+128),w
  3064  0258' 0081'              	movwf	___flge@ff1+1
  3065  0259' 0800'              	movf	sprintf@tmpval^(0+128),w
  3066  025A' 0080'              	movwf	___flge@ff1
  3067  025B' 303F               	movlw	63
  3068  025C' 0087'              	movwf	___flge@ff2+3
  3069  025D' 3080               	movlw	128
  3070  025E' 0086'              	movwf	___flge@ff2+2
  3071  025F' 3000               	movlw	0
  3072  0260' 0085'              	movwf	___flge@ff2+1
  3073  0261' 3000               	movlw	0
  3074  0262' 0084'              	movwf	___flge@ff2
  3075  0263' 120A' 118A' 2000' 120A' 118A' 	fcall	___flge
  3076  0268' 1803               	btfsc	3,0
  3077  0269' 2800'              	goto	u5931
  3078  026A' 2800'              	goto	u5930
  3079  026B'                    u5931:
  3080  026B' 2800'              	goto	l3587
  3081  026C'                    u5930:
  3082  026C'                    l3585:
  3083                           
  3084                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  3085  026C' 30FF               	movlw	255
  3086  026D' 1683               	bsf	3,5	;RP0=1, select bank1
  3087  026E' 1303               	bcf	3,6	;RP1=0, select bank1
  3088  026F' 0780'              	addwf	sprintf@eexp^(0+128),f
  3089  0270' 1803               	skipnc
  3090  0271' 0A80'              	incf	(sprintf@eexp+1)^(0+128),f
  3091  0272' 30FF               	movlw	255
  3092  0273' 0780'              	addwf	(sprintf@eexp+1)^(0+128),f
  3093  0274' 2800'              	goto	l3591
  3094  0275'                    l3587:
  3095  0275' 1683               	bsf	3,5	;RP0=1, select bank1
  3096  0276' 1303               	bcf	3,6	;RP1=0, select bank1
  3097  0277' 0800'              	movf	(sprintf@tmpval+3)^(0+128),w
  3098  0278' 0083'              	movwf	___flge@ff1+3
  3099  0279' 0800'              	movf	(sprintf@tmpval+2)^(0+128),w
  3100  027A' 0082'              	movwf	___flge@ff1+2
  3101  027B' 0800'              	movf	(sprintf@tmpval+1)^(0+128),w
  3102  027C' 0081'              	movwf	___flge@ff1+1
  3103  027D' 0800'              	movf	sprintf@tmpval^(0+128),w
  3104  027E' 0080'              	movwf	___flge@ff1
  3105  027F' 3041               	movlw	65
  3106  0280' 0087'              	movwf	___flge@ff2+3
  3107  0281' 3020               	movlw	32
  3108  0282' 0086'              	movwf	___flge@ff2+2
  3109  0283' 3000               	movlw	0
  3110  0284' 0085'              	movwf	___flge@ff2+1
  3111  0285' 3000               	movlw	0
  3112  0286' 0084'              	movwf	___flge@ff2
  3113  0287' 120A' 118A' 2000' 120A' 118A' 	fcall	___flge
  3114  028C' 1C03               	btfss	3,0
  3115  028D' 2800'              	goto	u5941
  3116  028E' 2800'              	goto	u5940
  3117  028F'                    u5941:
  3118  028F' 2800'              	goto	l3591
  3119  0290'                    u5940:
  3120  0290'                    l3589:
  3121                           
  3122                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  3123  0290' 3001               	movlw	1
  3124  0291' 1683               	bsf	3,5	;RP0=1, select bank1
  3125  0292' 1303               	bcf	3,6	;RP1=0, select bank1
  3126  0293' 0780'              	addwf	sprintf@eexp^(0+128),f
  3127  0294' 1803               	skipnc
  3128  0295' 0A80'              	incf	(sprintf@eexp+1)^(0+128),f
  3129  0296' 3000               	movlw	0
  3130  0297' 0780'              	addwf	(sprintf@eexp+1)^(0+128),f
  3131  0298'                    l3591:
  3132                           
  3133                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  3134  0298' 1683               	bsf	3,5	;RP0=1, select bank1
  3135  0299' 1303               	bcf	3,6	;RP1=0, select bank1
  3136  029A' 0800'              	movf	(sprintf@prec+1)^(0+128),w
  3137  029B' 3A80               	xorlw	128
  3138  029C' 00FF               	movwf	btemp+1
  3139  029D' 3080               	movlw	128
  3140  029E' 027F               	subwf	btemp+1,w
  3141  029F' 1D03               	skipz
  3142  02A0' 2800'              	goto	u5955
  3143  02A1' 300D               	movlw	13
  3144  02A2' 0200'              	subwf	sprintf@prec^(0+128),w
  3145  02A3'                    u5955:
  3146  02A3' 1803               	skipnc
  3147  02A4' 2800'              	goto	u5951
  3148  02A5' 2800'              	goto	u5950
  3149  02A6'                    u5951:
  3150  02A6' 2800'              	goto	l3595
  3151  02A7'                    u5950:
  3152  02A7'                    l3593:
  3153                           
  3154                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  3155  02A7' 1683               	bsf	3,5	;RP0=1, select bank1
  3156  02A8' 1303               	bcf	3,6	;RP1=0, select bank1
  3157  02A9' 0800'              	movf	sprintf@prec^(0+128),w
  3158  02AA' 120A' 118A' 2000' 120A' 118A' 	fcall	_fround
  3159  02AF' 1283               	bcf	3,5	;RP0=0, select bank0
  3160  02B0' 1303               	bcf	3,6	;RP1=0, select bank0
  3161  02B1' 081D'              	movf	?_fround+3,w
  3162  02B2' 00B1'              	movwf	___fladd@b+3
  3163  02B3' 081C'              	movf	?_fround+2,w
  3164  02B4' 00B0'              	movwf	___fladd@b+2
  3165  02B5' 081B'              	movf	?_fround+1,w
  3166  02B6' 00AF'              	movwf	___fladd@b+1
  3167  02B7' 081A'              	movf	?_fround,w
  3168  02B8' 00AE'              	movwf	___fladd@b
  3169  02B9' 1683               	bsf	3,5	;RP0=1, select bank1
  3170  02BA' 1303               	bcf	3,6	;RP1=0, select bank1
  3171  02BB' 0800'              	movf	(sprintf@fval+3)^(0+128),w
  3172  02BC' 1283               	bcf	3,5	;RP0=0, select bank0
  3173  02BD' 1303               	bcf	3,6	;RP1=0, select bank0
  3174  02BE' 00B5'              	movwf	___fladd@a+3
  3175  02BF' 1683               	bsf	3,5	;RP0=1, select bank1
  3176  02C0' 1303               	bcf	3,6	;RP1=0, select bank1
  3177  02C1' 0800'              	movf	(sprintf@fval+2)^(0+128),w
  3178  02C2' 1283               	bcf	3,5	;RP0=0, select bank0
  3179  02C3' 1303               	bcf	3,6	;RP1=0, select bank0
  3180  02C4' 00B4'              	movwf	___fladd@a+2
  3181  02C5' 1683               	bsf	3,5	;RP0=1, select bank1
  3182  02C6' 1303               	bcf	3,6	;RP1=0, select bank1
  3183  02C7' 0800'              	movf	(sprintf@fval+1)^(0+128),w
  3184  02C8' 1283               	bcf	3,5	;RP0=0, select bank0
  3185  02C9' 1303               	bcf	3,6	;RP1=0, select bank0
  3186  02CA' 00B3'              	movwf	___fladd@a+1
  3187  02CB' 1683               	bsf	3,5	;RP0=1, select bank1
  3188  02CC' 1303               	bcf	3,6	;RP1=0, select bank1
  3189  02CD' 0800'              	movf	sprintf@fval^(0+128),w
  3190  02CE' 1283               	bcf	3,5	;RP0=0, select bank0
  3191  02CF' 1303               	bcf	3,6	;RP1=0, select bank0
  3192  02D0' 00B2'              	movwf	___fladd@a
  3193  02D1' 120A' 118A' 2000' 120A' 118A' 	fcall	___fladd
  3194  02D6' 1283               	bcf	3,5	;RP0=0, select bank0
  3195  02D7' 1303               	bcf	3,6	;RP1=0, select bank0
  3196  02D8' 0831'              	movf	?___fladd+3,w
  3197  02D9' 1683               	bsf	3,5	;RP0=1, select bank1
  3198  02DA' 1303               	bcf	3,6	;RP1=0, select bank1
  3199  02DB' 0080'              	movwf	(sprintf@fval+3)^(0+128)
  3200  02DC' 1283               	bcf	3,5	;RP0=0, select bank0
  3201  02DD' 1303               	bcf	3,6	;RP1=0, select bank0
  3202  02DE' 0830'              	movf	?___fladd+2,w
  3203  02DF' 1683               	bsf	3,5	;RP0=1, select bank1
  3204  02E0' 1303               	bcf	3,6	;RP1=0, select bank1
  3205  02E1' 0080'              	movwf	(sprintf@fval+2)^(0+128)
  3206  02E2' 1283               	bcf	3,5	;RP0=0, select bank0
  3207  02E3' 1303               	bcf	3,6	;RP1=0, select bank0
  3208  02E4' 082F'              	movf	?___fladd+1,w
  3209  02E5' 1683               	bsf	3,5	;RP0=1, select bank1
  3210  02E6' 1303               	bcf	3,6	;RP1=0, select bank1
  3211  02E7' 0080'              	movwf	(sprintf@fval+1)^(0+128)
  3212  02E8' 1283               	bcf	3,5	;RP0=0, select bank0
  3213  02E9' 1303               	bcf	3,6	;RP1=0, select bank0
  3214  02EA' 082E'              	movf	?___fladd,w
  3215  02EB' 1683               	bsf	3,5	;RP0=1, select bank1
  3216  02EC' 1303               	bcf	3,6	;RP1=0, select bank1
  3217  02ED' 0080'              	movwf	sprintf@fval^(0+128)
  3218  02EE'                    l3595:
  3219                           
  3220                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  3221  02EE' 1683               	bsf	3,5	;RP0=1, select bank1
  3222  02EF' 1303               	bcf	3,6	;RP1=0, select bank1
  3223  02F0' 0800'              	movf	(sprintf@eexp+1)^(0+128),w
  3224  02F1' 3A80               	xorlw	128
  3225  02F2' 00FF               	movwf	btemp+1
  3226  02F3' 3080               	movlw	128
  3227  02F4' 027F               	subwf	btemp+1,w
  3228  02F5' 1D03               	skipz
  3229  02F6' 2800'              	goto	u5965
  3230  02F7' 300A               	movlw	10
  3231  02F8' 0200'              	subwf	sprintf@eexp^(0+128),w
  3232  02F9'                    u5965:
  3233  02F9' 1803               	skipnc
  3234  02FA' 2800'              	goto	u5961
  3235  02FB' 120A' 118A' 2800'  	goto	u5960
  3236  02FE'                    u5961:
  3237  02FE' 120A' 118A' 2800'  	goto	l3603
  3238  0301'                    L3:
  3239  0301'                    L2:
  3240  0301' 120A' 118A' 2800'  	ljmp	l3797
  3241                           
  3242                           	psect	text2
  3243  0000'                    __ptext2:	
  3244 ;; *************** function _scale *****************
  3245 ;; Defined at:
  3246 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c"
  3247 ;; Parameters:    Size  Location     Type
  3248 ;;  scl             1    wreg     char 
  3249 ;; Auto vars:     Size  Location     Type
  3250 ;;  scl             1   44[BANK0 ] char 
  3251 ;; Return value:  Size  Location     Type
  3252 ;;                  4   26[BANK0 ] char 
  3253 ;; Registers used:
  3254 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3255 ;; Tracked objects:
  3256 ;;		On entry : 0/0
  3257 ;;		On exit  : 0/0
  3258 ;;		Unchanged: 0/0
  3259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3260 ;;      Params:         0       4       0       0       0
  3261 ;;      Locals:         0       5       0       0       0
  3262 ;;      Temps:          0      10       0       0       0
  3263 ;;      Totals:         0      19       0       0       0
  3264 ;;Total ram usage:       19 bytes
  3265 ;; Hardware stack levels used: 1
  3266 ;; Hardware stack levels required when called: 2
  3267 ;; This function calls:
  3268 ;;		___awdiv
  3269 ;;		___awmod
  3270 ;;		___flmul
  3271 ;; This function is called by:
  3272 ;;		_sprintf
  3273 ;; This function uses a non-reentrant model
  3274 ;;
  3275                           
  3276  0000'                    _scale:	
  3277                           ;psect for function _scale
  3278                           
  3279                           
  3280                           ;incstack = 0
  3281                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3282                           ;scale@scl stored from wreg
  3283  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  3284  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  3285  0002' 00AC'              	movwf	scale@scl
  3286  0003'                    l3103:
  3287                           
  3288                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  3289  0003' 1FAC'              	btfss	scale@scl,7
  3290  0004' 2800'              	goto	u4791
  3291  0005' 2800'              	goto	u4790
  3292  0006'                    u4791:
  3293  0006' 2800'              	goto	l3125
  3294  0007'                    u4790:
  3295  0007'                    l3105:
  3296                           
  3297                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  3298  0007' 09AC'              	comf	scale@scl,f
  3299  0008' 0AAC'              	incf	scale@scl,f
  3300  0009'                    l3107:
  3301                           
  3302                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  3303  0009' 082C'              	movf	scale@scl,w
  3304  000A' 3A80               	xorlw	128
  3305  000B' 3E12               	addlw	-238
  3306  000C' 1C03               	skipc
  3307  000D' 2800'              	goto	u4801
  3308  000E' 2800'              	goto	u4800
  3309  000F'                    u4801:
  3310  000F' 2800'              	goto	l3115
  3311  0010'                    u4800:
  3312  0010'                    l3109:
  3313                           
  3314                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  3315  0010' 300A               	movlw	10
  3316  0011' 0086'              	movwf	___awdiv@divisor
  3317  0012' 3000               	movlw	0
  3318  0013' 0087'              	movwf	___awdiv@divisor+1
  3319  0014' 082C'              	movf	scale@scl,w
  3320  0015' 0082'              	movwf	___awmod@dividend
  3321  0016' 0183'              	clrf	___awmod@dividend+1
  3322  0017' 1B82'              	btfsc	___awmod@dividend,7
  3323  0018' 0383'              	decf	___awmod@dividend+1,f
  3324  0019' 3064               	movlw	100
  3325  001A' 0080'              	movwf	___awmod@divisor
  3326  001B' 3000               	movlw	0
  3327  001C' 0081'              	movwf	___awmod@divisor+1
  3328  001D' 120A' 118A' 2000' 120A' 118A' 	fcall	___awmod
  3329  0022' 0801'              	movf	?___awmod+1,w
  3330  0023' 0089'              	movwf	___awdiv@dividend+1
  3331  0024' 0800'              	movf	?___awmod,w
  3332  0025' 0088'              	movwf	___awdiv@dividend
  3333  0026' 120A' 118A' 2000' 120A' 118A' 	fcall	___awdiv
  3334  002B' 0806'              	movf	?___awdiv,w
  3335  002C' 1283               	bcf	3,5	;RP0=0, select bank0
  3336  002D' 1303               	bcf	3,6	;RP1=0, select bank0
  3337  002E' 009E'              	movwf	??_scale
  3338  002F' 3001               	movlw	1
  3339  0030'                    u4815:
  3340  0030' 1003               	clrc
  3341  0031' 0D9E'              	rlf	??_scale,f
  3342  0032' 3EFF               	addlw	-1
  3343  0033' 1D03               	skipz
  3344  0034' 2800'              	goto	u4815
  3345  0035' 1003               	clrc
  3346  0036' 0D1E'              	rlf	??_scale,w
  3347  0037' 3E24               	addlw	36
  3348  0038' 3E00'              	addlw	low (__npowers_| (0+32768))
  3349  0039' 0084               	movwf	4
  3350  003A' 3000'              	movlw	high (__npowers_| (0+32768))
  3351  003B' 1803               	skipnc
  3352  003C' 3E01               	addlw	1
  3353  003D' 00FF               	movwf	btemp+1
  3354  003E' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  3355  0043' 009F'              	movwf	??_scale+1
  3356  0044' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  3357  0049' 00A0'              	movwf	??_scale+2
  3358  004A' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  3359  004F' 00A1'              	movwf	??_scale+3
  3360  0050' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  3361  0055' 00A2'              	movwf	??_scale+4
  3362  0056' 0822'              	movf	??_scale+4,w
  3363  0057' 0083'              	movwf	___flmul@b+3
  3364  0058' 0821'              	movf	??_scale+3,w
  3365  0059' 0082'              	movwf	___flmul@b+2
  3366  005A' 0820'              	movf	??_scale+2,w
  3367  005B' 0081'              	movwf	___flmul@b+1
  3368  005C' 081F'              	movf	??_scale+1,w
  3369  005D' 0080'              	movwf	___flmul@b
  3370  005E' 3064               	movlw	100
  3371  005F' 0086'              	movwf	___awdiv@divisor
  3372  0060' 3000               	movlw	0
  3373  0061' 0087'              	movwf	___awdiv@divisor+1
  3374  0062' 082C'              	movf	scale@scl,w
  3375  0063' 0088'              	movwf	___awdiv@dividend
  3376  0064' 0189'              	clrf	___awdiv@dividend+1
  3377  0065' 1B88'              	btfsc	___awdiv@dividend,7
  3378  0066' 0389'              	decf	___awdiv@dividend+1,f
  3379  0067' 120A' 118A' 2000' 120A' 118A' 	fcall	___awdiv
  3380  006C' 0806'              	movf	?___awdiv,w
  3381  006D' 1283               	bcf	3,5	;RP0=0, select bank0
  3382  006E' 1303               	bcf	3,6	;RP1=0, select bank0
  3383  006F' 00A3'              	movwf	??_scale+5
  3384  0070' 3001               	movlw	1
  3385  0071'                    u4825:
  3386  0071' 1003               	clrc
  3387  0072' 0DA3'              	rlf	??_scale+5,f
  3388  0073' 3EFF               	addlw	-1
  3389  0074' 1D03               	skipz
  3390  0075' 2800'              	goto	u4825
  3391  0076' 1003               	clrc
  3392  0077' 0D23'              	rlf	??_scale+5,w
  3393  0078' 3E48               	addlw	72
  3394  0079' 3E00'              	addlw	low (__npowers_| (0+32768))
  3395  007A' 0084               	movwf	4
  3396  007B' 3000'              	movlw	high (__npowers_| (0+32768))
  3397  007C' 1803               	skipnc
  3398  007D' 3E01               	addlw	1
  3399  007E' 00FF               	movwf	btemp+1
  3400  007F' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  3401  0084' 00A4'              	movwf	??_scale+6
  3402  0085' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  3403  008A' 00A5'              	movwf	??_scale+7
  3404  008B' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  3405  0090' 00A6'              	movwf	??_scale+8
  3406  0091' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  3407  0096' 00A7'              	movwf	??_scale+9
  3408  0097' 0827'              	movf	??_scale+9,w
  3409  0098' 0087'              	movwf	___flmul@a+3
  3410  0099' 0826'              	movf	??_scale+8,w
  3411  009A' 0086'              	movwf	___flmul@a+2
  3412  009B' 0825'              	movf	??_scale+7,w
  3413  009C' 0085'              	movwf	___flmul@a+1
  3414  009D' 0824'              	movf	??_scale+6,w
  3415  009E' 0084'              	movwf	___flmul@a
  3416  009F' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  3417  00A4' 1283               	bcf	3,5	;RP0=0, select bank0
  3418  00A5' 1303               	bcf	3,6	;RP1=0, select bank0
  3419  00A6' 0803'              	movf	?___flmul+3,w
  3420  00A7' 00AB'              	movwf	_scale$873+3
  3421  00A8' 0802'              	movf	?___flmul+2,w
  3422  00A9' 00AA'              	movwf	_scale$873+2
  3423  00AA' 0801'              	movf	?___flmul+1,w
  3424  00AB' 00A9'              	movwf	_scale$873+1
  3425  00AC' 0800'              	movf	?___flmul,w
  3426  00AD' 00A8'              	movwf	_scale$873
  3427                           
  3428                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  3429  00AE' 300A               	movlw	10
  3430  00AF' 0080'              	movwf	___awmod@divisor
  3431  00B0' 3000               	movlw	0
  3432  00B1' 0081'              	movwf	___awmod@divisor+1
  3433  00B2' 082C'              	movf	scale@scl,w
  3434  00B3' 0082'              	movwf	___awmod@dividend
  3435  00B4' 0183'              	clrf	___awmod@dividend+1
  3436  00B5' 1B82'              	btfsc	___awmod@dividend,7
  3437  00B6' 0383'              	decf	___awmod@dividend+1,f
  3438  00B7' 120A' 118A' 2000' 120A' 118A' 	fcall	___awmod
  3439  00BC' 0800'              	movf	?___awmod,w
  3440  00BD' 1283               	bcf	3,5	;RP0=0, select bank0
  3441  00BE' 1303               	bcf	3,6	;RP1=0, select bank0
  3442  00BF' 009E'              	movwf	??_scale
  3443  00C0' 3001               	movlw	1
  3444  00C1'                    u4835:
  3445  00C1' 1003               	clrc
  3446  00C2' 0D9E'              	rlf	??_scale,f
  3447  00C3' 3EFF               	addlw	-1
  3448  00C4' 1D03               	skipz
  3449  00C5' 2800'              	goto	u4835
  3450  00C6' 1003               	clrc
  3451  00C7' 0D1E'              	rlf	??_scale,w
  3452  00C8' 3E00'              	addlw	low (__npowers_| (0+32768))
  3453  00C9' 0084               	movwf	4
  3454  00CA' 3000'              	movlw	high (__npowers_| (0+32768))
  3455  00CB' 1803               	skipnc
  3456  00CC' 3E01               	addlw	1
  3457  00CD' 00FF               	movwf	btemp+1
  3458  00CE' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  3459  00D3' 009F'              	movwf	??_scale+1
  3460  00D4' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  3461  00D9' 00A0'              	movwf	??_scale+2
  3462  00DA' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  3463  00DF' 00A1'              	movwf	??_scale+3
  3464  00E0' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  3465  00E5' 00A2'              	movwf	??_scale+4
  3466  00E6' 0822'              	movf	??_scale+4,w
  3467  00E7' 0083'              	movwf	___flmul@b+3
  3468  00E8' 0821'              	movf	??_scale+3,w
  3469  00E9' 0082'              	movwf	___flmul@b+2
  3470  00EA' 0820'              	movf	??_scale+2,w
  3471  00EB' 0081'              	movwf	___flmul@b+1
  3472  00EC' 081F'              	movf	??_scale+1,w
  3473  00ED' 0080'              	movwf	___flmul@b
  3474  00EE' 082B'              	movf	_scale$873+3,w
  3475  00EF' 0087'              	movwf	___flmul@a+3
  3476  00F0' 082A'              	movf	_scale$873+2,w
  3477  00F1' 0086'              	movwf	___flmul@a+2
  3478  00F2' 0829'              	movf	_scale$873+1,w
  3479  00F3' 0085'              	movwf	___flmul@a+1
  3480  00F4' 0828'              	movf	_scale$873,w
  3481  00F5' 0084'              	movwf	___flmul@a
  3482  00F6' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  3483  00FB' 1283               	bcf	3,5	;RP0=0, select bank0
  3484  00FC' 1303               	bcf	3,6	;RP1=0, select bank0
  3485  00FD' 0803'              	movf	?___flmul+3,w
  3486  00FE' 009D'              	movwf	?_scale+3
  3487  00FF' 0802'              	movf	?___flmul+2,w
  3488  0100' 009C'              	movwf	?_scale+2
  3489  0101' 0801'              	movf	?___flmul+1,w
  3490  0102' 009B'              	movwf	?_scale+1
  3491  0103' 0800'              	movf	?___flmul,w
  3492  0104' 009A'              	movwf	?_scale
  3493  0105' 2800'              	goto	l279
  3494  0106'                    l3115:
  3495  0106' 082C'              	movf	scale@scl,w
  3496  0107' 3A80               	xorlw	128
  3497  0108' 3E75               	addlw	-139
  3498  0109' 1C03               	skipc
  3499  010A' 2800'              	goto	u4841
  3500  010B' 2800'              	goto	u4840
  3501  010C'                    u4841:
  3502  010C' 2800'              	goto	l3121
  3503  010D'                    u4840:
  3504  010D'                    l3117:
  3505                           
  3506                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  3507  010D' 300A               	movlw	10
  3508  010E' 0080'              	movwf	___awmod@divisor
  3509  010F' 3000               	movlw	0
  3510  0110' 0081'              	movwf	___awmod@divisor+1
  3511  0111' 082C'              	movf	scale@scl,w
  3512  0112' 0082'              	movwf	___awmod@dividend
  3513  0113' 0183'              	clrf	___awmod@dividend+1
  3514  0114' 1B82'              	btfsc	___awmod@dividend,7
  3515  0115' 0383'              	decf	___awmod@dividend+1,f
  3516  0116' 120A' 118A' 2000' 120A' 118A' 	fcall	___awmod
  3517  011B' 0800'              	movf	?___awmod,w
  3518  011C' 1283               	bcf	3,5	;RP0=0, select bank0
  3519  011D' 1303               	bcf	3,6	;RP1=0, select bank0
  3520  011E' 009E'              	movwf	??_scale
  3521  011F' 3001               	movlw	1
  3522  0120'                    u4855:
  3523  0120' 1003               	clrc
  3524  0121' 0D9E'              	rlf	??_scale,f
  3525  0122' 3EFF               	addlw	-1
  3526  0123' 1D03               	skipz
  3527  0124' 2800'              	goto	u4855
  3528  0125' 1003               	clrc
  3529  0126' 0D1E'              	rlf	??_scale,w
  3530  0127' 3E00'              	addlw	low (__npowers_| (0+32768))
  3531  0128' 0084               	movwf	4
  3532  0129' 3000'              	movlw	high (__npowers_| (0+32768))
  3533  012A' 1803               	skipnc
  3534  012B' 3E01               	addlw	1
  3535  012C' 00FF               	movwf	btemp+1
  3536  012D' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  3537  0132' 009F'              	movwf	??_scale+1
  3538  0133' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  3539  0138' 00A0'              	movwf	??_scale+2
  3540  0139' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  3541  013E' 00A1'              	movwf	??_scale+3
  3542  013F' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  3543  0144' 00A2'              	movwf	??_scale+4
  3544  0145' 0822'              	movf	??_scale+4,w
  3545  0146' 0083'              	movwf	___flmul@b+3
  3546  0147' 0821'              	movf	??_scale+3,w
  3547  0148' 0082'              	movwf	___flmul@b+2
  3548  0149' 0820'              	movf	??_scale+2,w
  3549  014A' 0081'              	movwf	___flmul@b+1
  3550  014B' 081F'              	movf	??_scale+1,w
  3551  014C' 0080'              	movwf	___flmul@b
  3552  014D' 300A               	movlw	10
  3553  014E' 0086'              	movwf	___awdiv@divisor
  3554  014F' 3000               	movlw	0
  3555  0150' 0087'              	movwf	___awdiv@divisor+1
  3556  0151' 082C'              	movf	scale@scl,w
  3557  0152' 0088'              	movwf	___awdiv@dividend
  3558  0153' 0189'              	clrf	___awdiv@dividend+1
  3559  0154' 1B88'              	btfsc	___awdiv@dividend,7
  3560  0155' 0389'              	decf	___awdiv@dividend+1,f
  3561  0156' 120A' 118A' 2000' 120A' 118A' 	fcall	___awdiv
  3562  015B' 0806'              	movf	?___awdiv,w
  3563  015C' 1283               	bcf	3,5	;RP0=0, select bank0
  3564  015D' 1303               	bcf	3,6	;RP1=0, select bank0
  3565  015E' 00A3'              	movwf	??_scale+5
  3566  015F' 3001               	movlw	1
  3567  0160'                    u4865:
  3568  0160' 1003               	clrc
  3569  0161' 0DA3'              	rlf	??_scale+5,f
  3570  0162' 3EFF               	addlw	-1
  3571  0163' 1D03               	skipz
  3572  0164' 2800'              	goto	u4865
  3573  0165' 1003               	clrc
  3574  0166' 0D23'              	rlf	??_scale+5,w
  3575  0167' 3E24               	addlw	36
  3576  0168' 3E00'              	addlw	low (__npowers_| (0+32768))
  3577  0169' 0084               	movwf	4
  3578  016A' 3000'              	movlw	high (__npowers_| (0+32768))
  3579  016B' 1803               	skipnc
  3580  016C' 3E01               	addlw	1
  3581  016D' 00FF               	movwf	btemp+1
  3582  016E' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  3583  0173' 00A4'              	movwf	??_scale+6
  3584  0174' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  3585  0179' 00A5'              	movwf	??_scale+7
  3586  017A' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  3587  017F' 00A6'              	movwf	??_scale+8
  3588  0180' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  3589  0185' 00A7'              	movwf	??_scale+9
  3590  0186' 0827'              	movf	??_scale+9,w
  3591  0187' 0087'              	movwf	___flmul@a+3
  3592  0188' 0826'              	movf	??_scale+8,w
  3593  0189' 0086'              	movwf	___flmul@a+2
  3594  018A' 0825'              	movf	??_scale+7,w
  3595  018B' 0085'              	movwf	___flmul@a+1
  3596  018C' 0824'              	movf	??_scale+6,w
  3597  018D' 0084'              	movwf	___flmul@a
  3598  018E' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  3599  0193' 1283               	bcf	3,5	;RP0=0, select bank0
  3600  0194' 1303               	bcf	3,6	;RP1=0, select bank0
  3601  0195' 0803'              	movf	?___flmul+3,w
  3602  0196' 009D'              	movwf	?_scale+3
  3603  0197' 0802'              	movf	?___flmul+2,w
  3604  0198' 009C'              	movwf	?_scale+2
  3605  0199' 0801'              	movf	?___flmul+1,w
  3606  019A' 009B'              	movwf	?_scale+1
  3607  019B' 0800'              	movf	?___flmul,w
  3608  019C' 009A'              	movwf	?_scale
  3609  019D' 2800'              	goto	l279
  3610  019E'                    l3121:
  3611                           
  3612                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  3613  019E' 082C'              	movf	scale@scl,w
  3614  019F' 009E'              	movwf	??_scale
  3615  01A0' 3001               	movlw	1
  3616  01A1'                    u4875:
  3617  01A1' 1003               	clrc
  3618  01A2' 0D9E'              	rlf	??_scale,f
  3619  01A3' 3EFF               	addlw	-1
  3620  01A4' 1D03               	skipz
  3621  01A5' 2800'              	goto	u4875
  3622  01A6' 1003               	clrc
  3623  01A7' 0D1E'              	rlf	??_scale,w
  3624  01A8' 3E00'              	addlw	low (__npowers_| (0+32768))
  3625  01A9' 0084               	movwf	4
  3626  01AA' 3000'              	movlw	high (__npowers_| (0+32768))
  3627  01AB' 1803               	skipnc
  3628  01AC' 3E01               	addlw	1
  3629  01AD' 00FF               	movwf	btemp+1
  3630  01AE' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  3631  01B3' 009F'              	movwf	??_scale+1
  3632  01B4' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  3633  01B9' 00A0'              	movwf	??_scale+2
  3634  01BA' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  3635  01BF' 00A1'              	movwf	??_scale+3
  3636  01C0' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  3637  01C5' 00A2'              	movwf	??_scale+4
  3638  01C6' 0822'              	movf	??_scale+4,w
  3639  01C7' 009D'              	movwf	?_scale+3
  3640  01C8' 0821'              	movf	??_scale+3,w
  3641  01C9' 009C'              	movwf	?_scale+2
  3642  01CA' 0820'              	movf	??_scale+2,w
  3643  01CB' 009B'              	movwf	?_scale+1
  3644  01CC' 081F'              	movf	??_scale+1,w
  3645  01CD' 009A'              	movwf	?_scale
  3646  01CE' 2800'              	goto	l279
  3647  01CF'                    l3125:
  3648                           
  3649                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  3650  01CF' 082C'              	movf	scale@scl,w
  3651  01D0' 3A80               	xorlw	128
  3652  01D1' 3E12               	addlw	-238
  3653  01D2' 1C03               	skipc
  3654  01D3' 2800'              	goto	u4881
  3655  01D4' 2800'              	goto	u4880
  3656  01D5'                    u4881:
  3657  01D5' 2800'              	goto	l3133
  3658  01D6'                    u4880:
  3659  01D6'                    l3127:
  3660                           
  3661                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3662  01D6' 300A               	movlw	10
  3663  01D7' 0086'              	movwf	___awdiv@divisor
  3664  01D8' 3000               	movlw	0
  3665  01D9' 0087'              	movwf	___awdiv@divisor+1
  3666  01DA' 082C'              	movf	scale@scl,w
  3667  01DB' 0082'              	movwf	___awmod@dividend
  3668  01DC' 0183'              	clrf	___awmod@dividend+1
  3669  01DD' 1B82'              	btfsc	___awmod@dividend,7
  3670  01DE' 0383'              	decf	___awmod@dividend+1,f
  3671  01DF' 3064               	movlw	100
  3672  01E0' 0080'              	movwf	___awmod@divisor
  3673  01E1' 3000               	movlw	0
  3674  01E2' 0081'              	movwf	___awmod@divisor+1
  3675  01E3' 120A' 118A' 2000' 120A' 118A' 	fcall	___awmod
  3676  01E8' 0801'              	movf	?___awmod+1,w
  3677  01E9' 0089'              	movwf	___awdiv@dividend+1
  3678  01EA' 0800'              	movf	?___awmod,w
  3679  01EB' 0088'              	movwf	___awdiv@dividend
  3680  01EC' 120A' 118A' 2000' 120A' 118A' 	fcall	___awdiv
  3681  01F1' 0806'              	movf	?___awdiv,w
  3682  01F2' 1283               	bcf	3,5	;RP0=0, select bank0
  3683  01F3' 1303               	bcf	3,6	;RP1=0, select bank0
  3684  01F4' 009E'              	movwf	??_scale
  3685  01F5' 3001               	movlw	1
  3686  01F6'                    u4895:
  3687  01F6' 1003               	clrc
  3688  01F7' 0D9E'              	rlf	??_scale,f
  3689  01F8' 3EFF               	addlw	-1
  3690  01F9' 1D03               	skipz
  3691  01FA' 2800'              	goto	u4895
  3692  01FB' 1003               	clrc
  3693  01FC' 0D1E'              	rlf	??_scale,w
  3694  01FD' 3E24               	addlw	36
  3695  01FE' 3E00'              	addlw	low (__powers_| (0+32768))
  3696  01FF' 0084               	movwf	4
  3697  0200' 3000'              	movlw	high (__powers_| (0+32768))
  3698  0201' 1803               	skipnc
  3699  0202' 3E01               	addlw	1
  3700  0203' 00FF               	movwf	btemp+1
  3701  0204' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  3702  0209' 009F'              	movwf	??_scale+1
  3703  020A' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  3704  020F' 00A0'              	movwf	??_scale+2
  3705  0210' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  3706  0215' 00A1'              	movwf	??_scale+3
  3707  0216' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  3708  021B' 00A2'              	movwf	??_scale+4
  3709  021C' 0822'              	movf	??_scale+4,w
  3710  021D' 0083'              	movwf	___flmul@b+3
  3711  021E' 0821'              	movf	??_scale+3,w
  3712  021F' 0082'              	movwf	___flmul@b+2
  3713  0220' 0820'              	movf	??_scale+2,w
  3714  0221' 0081'              	movwf	___flmul@b+1
  3715  0222' 081F'              	movf	??_scale+1,w
  3716  0223' 0080'              	movwf	___flmul@b
  3717  0224' 3064               	movlw	100
  3718  0225' 0086'              	movwf	___awdiv@divisor
  3719  0226' 3000               	movlw	0
  3720  0227' 0087'              	movwf	___awdiv@divisor+1
  3721  0228' 082C'              	movf	scale@scl,w
  3722  0229' 0088'              	movwf	___awdiv@dividend
  3723  022A' 0189'              	clrf	___awdiv@dividend+1
  3724  022B' 1B88'              	btfsc	___awdiv@dividend,7
  3725  022C' 0389'              	decf	___awdiv@dividend+1,f
  3726  022D' 120A' 118A' 2000' 120A' 118A' 	fcall	___awdiv
  3727  0232' 0806'              	movf	?___awdiv,w
  3728  0233' 1283               	bcf	3,5	;RP0=0, select bank0
  3729  0234' 1303               	bcf	3,6	;RP1=0, select bank0
  3730  0235' 00A3'              	movwf	??_scale+5
  3731  0236' 3001               	movlw	1
  3732  0237'                    u4905:
  3733  0237' 1003               	clrc
  3734  0238' 0DA3'              	rlf	??_scale+5,f
  3735  0239' 3EFF               	addlw	-1
  3736  023A' 1D03               	skipz
  3737  023B' 2800'              	goto	u4905
  3738  023C' 1003               	clrc
  3739  023D' 0D23'              	rlf	??_scale+5,w
  3740  023E' 3E48               	addlw	72
  3741  023F' 3E00'              	addlw	low (__powers_| (0+32768))
  3742  0240' 0084               	movwf	4
  3743  0241' 3000'              	movlw	high (__powers_| (0+32768))
  3744  0242' 1803               	skipnc
  3745  0243' 3E01               	addlw	1
  3746  0244' 00FF               	movwf	btemp+1
  3747  0245' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  3748  024A' 00A4'              	movwf	??_scale+6
  3749  024B' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  3750  0250' 00A5'              	movwf	??_scale+7
  3751  0251' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  3752  0256' 00A6'              	movwf	??_scale+8
  3753  0257' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  3754  025C' 00A7'              	movwf	??_scale+9
  3755  025D' 0827'              	movf	??_scale+9,w
  3756  025E' 0087'              	movwf	___flmul@a+3
  3757  025F' 0826'              	movf	??_scale+8,w
  3758  0260' 0086'              	movwf	___flmul@a+2
  3759  0261' 0825'              	movf	??_scale+7,w
  3760  0262' 0085'              	movwf	___flmul@a+1
  3761  0263' 0824'              	movf	??_scale+6,w
  3762  0264' 0084'              	movwf	___flmul@a
  3763  0265' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  3764  026A' 1283               	bcf	3,5	;RP0=0, select bank0
  3765  026B' 1303               	bcf	3,6	;RP1=0, select bank0
  3766  026C' 0803'              	movf	?___flmul+3,w
  3767  026D' 00AB'              	movwf	_scale$873+3
  3768  026E' 0802'              	movf	?___flmul+2,w
  3769  026F' 00AA'              	movwf	_scale$873+2
  3770  0270' 0801'              	movf	?___flmul+1,w
  3771  0271' 00A9'              	movwf	_scale$873+1
  3772  0272' 0800'              	movf	?___flmul,w
  3773  0273' 00A8'              	movwf	_scale$873
  3774                           
  3775                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3776  0274' 300A               	movlw	10
  3777  0275' 0080'              	movwf	___awmod@divisor
  3778  0276' 3000               	movlw	0
  3779  0277' 0081'              	movwf	___awmod@divisor+1
  3780  0278' 082C'              	movf	scale@scl,w
  3781  0279' 0082'              	movwf	___awmod@dividend
  3782  027A' 0183'              	clrf	___awmod@dividend+1
  3783  027B' 1B82'              	btfsc	___awmod@dividend,7
  3784  027C' 0383'              	decf	___awmod@dividend+1,f
  3785  027D' 120A' 118A' 2000' 120A' 118A' 	fcall	___awmod
  3786  0282' 0800'              	movf	?___awmod,w
  3787  0283' 1283               	bcf	3,5	;RP0=0, select bank0
  3788  0284' 1303               	bcf	3,6	;RP1=0, select bank0
  3789  0285' 009E'              	movwf	??_scale
  3790  0286' 3001               	movlw	1
  3791  0287'                    u4915:
  3792  0287' 1003               	clrc
  3793  0288' 0D9E'              	rlf	??_scale,f
  3794  0289' 3EFF               	addlw	-1
  3795  028A' 1D03               	skipz
  3796  028B' 2800'              	goto	u4915
  3797  028C' 1003               	clrc
  3798  028D' 0D1E'              	rlf	??_scale,w
  3799  028E' 3E00'              	addlw	low (__powers_| (0+32768))
  3800  028F' 0084               	movwf	4
  3801  0290' 3000'              	movlw	high (__powers_| (0+32768))
  3802  0291' 1803               	skipnc
  3803  0292' 3E01               	addlw	1
  3804  0293' 00FF               	movwf	btemp+1
  3805  0294' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  3806  0299' 009F'              	movwf	??_scale+1
  3807  029A' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  3808  029F' 00A0'              	movwf	??_scale+2
  3809  02A0' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  3810  02A5' 00A1'              	movwf	??_scale+3
  3811  02A6' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  3812  02AB' 00A2'              	movwf	??_scale+4
  3813  02AC' 0822'              	movf	??_scale+4,w
  3814  02AD' 0083'              	movwf	___flmul@b+3
  3815  02AE' 0821'              	movf	??_scale+3,w
  3816  02AF' 0082'              	movwf	___flmul@b+2
  3817  02B0' 0820'              	movf	??_scale+2,w
  3818  02B1' 0081'              	movwf	___flmul@b+1
  3819  02B2' 081F'              	movf	??_scale+1,w
  3820  02B3' 0080'              	movwf	___flmul@b
  3821  02B4' 082B'              	movf	_scale$873+3,w
  3822  02B5' 0087'              	movwf	___flmul@a+3
  3823  02B6' 082A'              	movf	_scale$873+2,w
  3824  02B7' 0086'              	movwf	___flmul@a+2
  3825  02B8' 0829'              	movf	_scale$873+1,w
  3826  02B9' 0085'              	movwf	___flmul@a+1
  3827  02BA' 0828'              	movf	_scale$873,w
  3828  02BB' 0084'              	movwf	___flmul@a
  3829  02BC' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  3830  02C1' 1283               	bcf	3,5	;RP0=0, select bank0
  3831  02C2' 1303               	bcf	3,6	;RP1=0, select bank0
  3832  02C3' 0803'              	movf	?___flmul+3,w
  3833  02C4' 009D'              	movwf	?_scale+3
  3834  02C5' 0802'              	movf	?___flmul+2,w
  3835  02C6' 009C'              	movwf	?_scale+2
  3836  02C7' 0801'              	movf	?___flmul+1,w
  3837  02C8' 009B'              	movwf	?_scale+1
  3838  02C9' 0800'              	movf	?___flmul,w
  3839  02CA' 009A'              	movwf	?_scale
  3840  02CB' 2800'              	goto	l279
  3841  02CC'                    l3133:
  3842  02CC' 082C'              	movf	scale@scl,w
  3843  02CD' 3A80               	xorlw	128
  3844  02CE' 3E75               	addlw	-139
  3845  02CF' 1C03               	skipc
  3846  02D0' 2800'              	goto	u4921
  3847  02D1' 2800'              	goto	u4920
  3848  02D2'                    u4921:
  3849  02D2' 2800'              	goto	l3139
  3850  02D3'                    u4920:
  3851  02D3'                    l3135:
  3852                           
  3853                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  3854  02D3' 300A               	movlw	10
  3855  02D4' 0080'              	movwf	___awmod@divisor
  3856  02D5' 3000               	movlw	0
  3857  02D6' 0081'              	movwf	___awmod@divisor+1
  3858  02D7' 082C'              	movf	scale@scl,w
  3859  02D8' 0082'              	movwf	___awmod@dividend
  3860  02D9' 0183'              	clrf	___awmod@dividend+1
  3861  02DA' 1B82'              	btfsc	___awmod@dividend,7
  3862  02DB' 0383'              	decf	___awmod@dividend+1,f
  3863  02DC' 120A' 118A' 2000' 120A' 118A' 	fcall	___awmod
  3864  02E1' 0800'              	movf	?___awmod,w
  3865  02E2' 1283               	bcf	3,5	;RP0=0, select bank0
  3866  02E3' 1303               	bcf	3,6	;RP1=0, select bank0
  3867  02E4' 009E'              	movwf	??_scale
  3868  02E5' 3001               	movlw	1
  3869  02E6'                    u4935:
  3870  02E6' 1003               	clrc
  3871  02E7' 0D9E'              	rlf	??_scale,f
  3872  02E8' 3EFF               	addlw	-1
  3873  02E9' 1D03               	skipz
  3874  02EA' 2800'              	goto	u4935
  3875  02EB' 1003               	clrc
  3876  02EC' 0D1E'              	rlf	??_scale,w
  3877  02ED' 3E00'              	addlw	low (__powers_| (0+32768))
  3878  02EE' 0084               	movwf	4
  3879  02EF' 3000'              	movlw	high (__powers_| (0+32768))
  3880  02F0' 1803               	skipnc
  3881  02F1' 3E01               	addlw	1
  3882  02F2' 00FF               	movwf	btemp+1
  3883  02F3' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  3884  02F8' 009F'              	movwf	??_scale+1
  3885  02F9' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  3886  02FE' 00A0'              	movwf	??_scale+2
  3887  02FF' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  3888  0304' 00A1'              	movwf	??_scale+3
  3889  0305' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  3890  030A' 00A2'              	movwf	??_scale+4
  3891  030B' 0822'              	movf	??_scale+4,w
  3892  030C' 0083'              	movwf	___flmul@b+3
  3893  030D' 0821'              	movf	??_scale+3,w
  3894  030E' 0082'              	movwf	___flmul@b+2
  3895  030F' 0820'              	movf	??_scale+2,w
  3896  0310' 0081'              	movwf	___flmul@b+1
  3897  0311' 081F'              	movf	??_scale+1,w
  3898  0312' 0080'              	movwf	___flmul@b
  3899  0313' 300A               	movlw	10
  3900  0314' 0086'              	movwf	___awdiv@divisor
  3901  0315' 3000               	movlw	0
  3902  0316' 0087'              	movwf	___awdiv@divisor+1
  3903  0317' 082C'              	movf	scale@scl,w
  3904  0318' 0088'              	movwf	___awdiv@dividend
  3905  0319' 0189'              	clrf	___awdiv@dividend+1
  3906  031A' 1B88'              	btfsc	___awdiv@dividend,7
  3907  031B' 0389'              	decf	___awdiv@dividend+1,f
  3908  031C' 120A' 118A' 2000' 120A' 118A' 	fcall	___awdiv
  3909  0321' 0806'              	movf	?___awdiv,w
  3910  0322' 1283               	bcf	3,5	;RP0=0, select bank0
  3911  0323' 1303               	bcf	3,6	;RP1=0, select bank0
  3912  0324' 00A3'              	movwf	??_scale+5
  3913  0325' 3001               	movlw	1
  3914  0326'                    u4945:
  3915  0326' 1003               	clrc
  3916  0327' 0DA3'              	rlf	??_scale+5,f
  3917  0328' 3EFF               	addlw	-1
  3918  0329' 1D03               	skipz
  3919  032A' 2800'              	goto	u4945
  3920  032B' 1003               	clrc
  3921  032C' 0D23'              	rlf	??_scale+5,w
  3922  032D' 3E24               	addlw	36
  3923  032E' 3E00'              	addlw	low (__powers_| (0+32768))
  3924  032F' 0084               	movwf	4
  3925  0330' 3000'              	movlw	high (__powers_| (0+32768))
  3926  0331' 1803               	skipnc
  3927  0332' 3E01               	addlw	1
  3928  0333' 00FF               	movwf	btemp+1
  3929  0334' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  3930  0339' 00A4'              	movwf	??_scale+6
  3931  033A' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  3932  033F' 00A5'              	movwf	??_scale+7
  3933  0340' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  3934  0345' 00A6'              	movwf	??_scale+8
  3935  0346' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  3936  034B' 00A7'              	movwf	??_scale+9
  3937  034C' 0827'              	movf	??_scale+9,w
  3938  034D' 0087'              	movwf	___flmul@a+3
  3939  034E' 0826'              	movf	??_scale+8,w
  3940  034F' 0086'              	movwf	___flmul@a+2
  3941  0350' 0825'              	movf	??_scale+7,w
  3942  0351' 0085'              	movwf	___flmul@a+1
  3943  0352' 0824'              	movf	??_scale+6,w
  3944  0353' 0084'              	movwf	___flmul@a
  3945  0354' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  3946  0359' 1283               	bcf	3,5	;RP0=0, select bank0
  3947  035A' 1303               	bcf	3,6	;RP1=0, select bank0
  3948  035B' 0803'              	movf	?___flmul+3,w
  3949  035C' 009D'              	movwf	?_scale+3
  3950  035D' 0802'              	movf	?___flmul+2,w
  3951  035E' 009C'              	movwf	?_scale+2
  3952  035F' 0801'              	movf	?___flmul+1,w
  3953  0360' 009B'              	movwf	?_scale+1
  3954  0361' 0800'              	movf	?___flmul,w
  3955  0362' 009A'              	movwf	?_scale
  3956  0363' 2800'              	goto	l279
  3957  0364'                    l3139:
  3958                           
  3959                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  3960  0364' 082C'              	movf	scale@scl,w
  3961  0365' 009E'              	movwf	??_scale
  3962  0366' 3001               	movlw	1
  3963  0367'                    u4955:
  3964  0367' 1003               	clrc
  3965  0368' 0D9E'              	rlf	??_scale,f
  3966  0369' 3EFF               	addlw	-1
  3967  036A' 1D03               	skipz
  3968  036B' 2800'              	goto	u4955
  3969  036C' 1003               	clrc
  3970  036D' 0D1E'              	rlf	??_scale,w
  3971  036E' 3E00'              	addlw	low (__powers_| (0+32768))
  3972  036F' 0084               	movwf	4
  3973  0370' 3000'              	movlw	high (__powers_| (0+32768))
  3974  0371' 1803               	skipnc
  3975  0372' 3E01               	addlw	1
  3976  0373' 00FF               	movwf	btemp+1
  3977  0374' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  3978  0379' 009F'              	movwf	??_scale+1
  3979  037A' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  3980  037F' 00A0'              	movwf	??_scale+2
  3981  0380' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  3982  0385' 00A1'              	movwf	??_scale+3
  3983  0386' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  3984  038B' 00A2'              	movwf	??_scale+4
  3985  038C' 0822'              	movf	??_scale+4,w
  3986  038D' 009D'              	movwf	?_scale+3
  3987  038E' 0821'              	movf	??_scale+3,w
  3988  038F' 009C'              	movwf	?_scale+2
  3989  0390' 0820'              	movf	??_scale+2,w
  3990  0391' 009B'              	movwf	?_scale+1
  3991  0392' 081F'              	movf	??_scale+1,w
  3992  0393' 009A'              	movwf	?_scale
  3993  0394'                    l279:
  3994  0394' 0008               	return
  3995  0395'                    __end_of_scale:
  3996                           
  3997                           	psect	text3
  3998  0000'                    __ptext3:	
  3999 ;; *************** function ___awmod *****************
  4000 ;; Defined at:
  4001 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awmod.c"
  4002 ;; Parameters:    Size  Location     Type
  4003 ;;  divisor         2    0[COMMON] int 
  4004 ;;  dividend        2    2[COMMON] int 
  4005 ;; Auto vars:     Size  Location     Type
  4006 ;;  sign            1    5[COMMON] unsigned char 
  4007 ;;  counter         1    4[COMMON] unsigned char 
  4008 ;; Return value:  Size  Location     Type
  4009 ;;                  2    0[COMMON] int 
  4010 ;; Registers used:
  4011 ;;		wreg, status,2, status,0, btemp+1
  4012 ;; Tracked objects:
  4013 ;;		On entry : 0/0
  4014 ;;		On exit  : 0/0
  4015 ;;		Unchanged: 0/0
  4016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4017 ;;      Params:         4       0       0       0       0
  4018 ;;      Locals:         2       0       0       0       0
  4019 ;;      Temps:          0       0       0       0       0
  4020 ;;      Totals:         6       0       0       0       0
  4021 ;;Total ram usage:        6 bytes
  4022 ;; Hardware stack levels used: 1
  4023 ;; This function calls:
  4024 ;;		Nothing
  4025 ;; This function is called by:
  4026 ;;		_scale
  4027 ;; This function uses a non-reentrant model
  4028 ;;
  4029                           
  4030  0000'                    ___awmod:	
  4031                           ;psect for function ___awmod
  4032                           
  4033  0000'                    l2623:	
  4034                           ;incstack = 0
  4035                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
  4036                           
  4037  0000' 0185'              	clrf	___awmod@sign
  4038  0001'                    l2625:
  4039  0001' 1F83'              	btfss	___awmod@dividend+1,7
  4040  0002' 2800'              	goto	u3641
  4041  0003' 2800'              	goto	u3640
  4042  0004'                    u3641:
  4043  0004' 2800'              	goto	l2631
  4044  0005'                    u3640:
  4045  0005'                    l2627:
  4046  0005' 0982'              	comf	___awmod@dividend,f
  4047  0006' 0983'              	comf	___awmod@dividend+1,f
  4048  0007' 0A82'              	incf	___awmod@dividend,f
  4049  0008' 1903               	skipnz
  4050  0009' 0A83'              	incf	___awmod@dividend+1,f
  4051  000A'                    l2629:
  4052  000A' 0185'              	clrf	___awmod@sign
  4053  000B' 0A85'              	incf	___awmod@sign,f
  4054  000C'                    l2631:
  4055  000C' 1F81'              	btfss	___awmod@divisor+1,7
  4056  000D' 2800'              	goto	u3651
  4057  000E' 2800'              	goto	u3650
  4058  000F'                    u3651:
  4059  000F' 2800'              	goto	l2635
  4060  0010'                    u3650:
  4061  0010'                    l2633:
  4062  0010' 0980'              	comf	___awmod@divisor,f
  4063  0011' 0981'              	comf	___awmod@divisor+1,f
  4064  0012' 0A80'              	incf	___awmod@divisor,f
  4065  0013' 1903               	skipnz
  4066  0014' 0A81'              	incf	___awmod@divisor+1,f
  4067  0015'                    l2635:
  4068  0015' 0800'              	movf	___awmod@divisor,w
  4069  0016' 0401'              	iorwf	___awmod@divisor+1,w
  4070  0017' 1903               	btfsc	3,2
  4071  0018' 2800'              	goto	u3661
  4072  0019' 2800'              	goto	u3660
  4073  001A'                    u3661:
  4074  001A' 2800'              	goto	l2653
  4075  001B'                    u3660:
  4076  001B'                    l2637:
  4077  001B' 0184'              	clrf	___awmod@counter
  4078  001C' 0A84'              	incf	___awmod@counter,f
  4079  001D' 2800'              	goto	l2643
  4080  001E'                    l2639:
  4081  001E' 3001               	movlw	1
  4082  001F'                    u3675:
  4083  001F' 1003               	clrc
  4084  0020' 0D80'              	rlf	___awmod@divisor,f
  4085  0021' 0D81'              	rlf	___awmod@divisor+1,f
  4086  0022' 3EFF               	addlw	-1
  4087  0023' 1D03               	skipz
  4088  0024' 2800'              	goto	u3675
  4089  0025'                    l2641:
  4090  0025' 3001               	movlw	1
  4091  0026' 00FF               	movwf	btemp+1
  4092  0027' 087F               	movf	btemp+1,w
  4093  0028' 0784'              	addwf	___awmod@counter,f
  4094  0029'                    l2643:
  4095  0029' 1F81'              	btfss	___awmod@divisor+1,7
  4096  002A' 2800'              	goto	u3681
  4097  002B' 2800'              	goto	u3680
  4098  002C'                    u3681:
  4099  002C' 2800'              	goto	l2639
  4100  002D'                    u3680:
  4101  002D'                    l2645:
  4102  002D' 0801'              	movf	___awmod@divisor+1,w
  4103  002E' 0203'              	subwf	___awmod@dividend+1,w
  4104  002F' 1D03               	skipz
  4105  0030' 2800'              	goto	u3695
  4106  0031' 0800'              	movf	___awmod@divisor,w
  4107  0032' 0202'              	subwf	___awmod@dividend,w
  4108  0033'                    u3695:
  4109  0033' 1C03               	skipc
  4110  0034' 2800'              	goto	u3691
  4111  0035' 2800'              	goto	u3690
  4112  0036'                    u3691:
  4113  0036' 2800'              	goto	l2649
  4114  0037'                    u3690:
  4115  0037'                    l2647:
  4116  0037' 0800'              	movf	___awmod@divisor,w
  4117  0038' 0282'              	subwf	___awmod@dividend,f
  4118  0039' 0801'              	movf	___awmod@divisor+1,w
  4119  003A' 1C03               	skipc
  4120  003B' 0383'              	decf	___awmod@dividend+1,f
  4121  003C' 0283'              	subwf	___awmod@dividend+1,f
  4122  003D'                    l2649:
  4123  003D' 3001               	movlw	1
  4124  003E'                    u3705:
  4125  003E' 1003               	clrc
  4126  003F' 0C81'              	rrf	___awmod@divisor+1,f
  4127  0040' 0C80'              	rrf	___awmod@divisor,f
  4128  0041' 3EFF               	addlw	-1
  4129  0042' 1D03               	skipz
  4130  0043' 2800'              	goto	u3705
  4131  0044'                    l2651:
  4132  0044' 3001               	movlw	1
  4133  0045' 0284'              	subwf	___awmod@counter,f
  4134  0046' 1D03               	btfss	3,2
  4135  0047' 2800'              	goto	u3711
  4136  0048' 2800'              	goto	u3710
  4137  0049'                    u3711:
  4138  0049' 2800'              	goto	l2645
  4139  004A'                    u3710:
  4140  004A'                    l2653:
  4141  004A' 0805'              	movf	___awmod@sign,w
  4142  004B' 1903               	btfsc	3,2
  4143  004C' 2800'              	goto	u3721
  4144  004D' 2800'              	goto	u3720
  4145  004E'                    u3721:
  4146  004E' 2800'              	goto	l2657
  4147  004F'                    u3720:
  4148  004F'                    l2655:
  4149  004F' 0982'              	comf	___awmod@dividend,f
  4150  0050' 0983'              	comf	___awmod@dividend+1,f
  4151  0051' 0A82'              	incf	___awmod@dividend,f
  4152  0052' 1903               	skipnz
  4153  0053' 0A83'              	incf	___awmod@dividend+1,f
  4154  0054'                    l2657:
  4155  0054' 0803'              	movf	___awmod@dividend+1,w
  4156  0055' 0081'              	movwf	?___awmod+1
  4157  0056' 0802'              	movf	___awmod@dividend,w
  4158  0057' 0080'              	movwf	?___awmod
  4159  0058'                    l544:
  4160  0058' 0008               	return
  4161  0059'                    __end_of___awmod:
  4162                           
  4163                           	psect	text4
  4164  0000'                    __ptext4:	
  4165 ;; *************** function ___awdiv *****************
  4166 ;; Defined at:
  4167 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awdiv.c"
  4168 ;; Parameters:    Size  Location     Type
  4169 ;;  divisor         2    6[COMMON] int 
  4170 ;;  dividend        2    8[COMMON] int 
  4171 ;; Auto vars:     Size  Location     Type
  4172 ;;  quotient        2   12[COMMON] int 
  4173 ;;  sign            1   11[COMMON] unsigned char 
  4174 ;;  counter         1   10[COMMON] unsigned char 
  4175 ;; Return value:  Size  Location     Type
  4176 ;;                  2    6[COMMON] int 
  4177 ;; Registers used:
  4178 ;;		wreg, status,2, status,0, btemp+1
  4179 ;; Tracked objects:
  4180 ;;		On entry : 0/0
  4181 ;;		On exit  : 0/0
  4182 ;;		Unchanged: 0/0
  4183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4184 ;;      Params:         4       0       0       0       0
  4185 ;;      Locals:         4       0       0       0       0
  4186 ;;      Temps:          0       0       0       0       0
  4187 ;;      Totals:         8       0       0       0       0
  4188 ;;Total ram usage:        8 bytes
  4189 ;; Hardware stack levels used: 1
  4190 ;; This function calls:
  4191 ;;		Nothing
  4192 ;; This function is called by:
  4193 ;;		_scale
  4194 ;;		_sprintf
  4195 ;; This function uses a non-reentrant model
  4196 ;;
  4197                           
  4198  0000'                    ___awdiv:	
  4199                           ;psect for function ___awdiv
  4200                           
  4201  0000'                    l2579:	
  4202                           ;incstack = 0
  4203                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  4204                           
  4205  0000' 018B'              	clrf	___awdiv@sign
  4206  0001'                    l2581:
  4207  0001' 1F87'              	btfss	___awdiv@divisor+1,7
  4208  0002' 2800'              	goto	u3541
  4209  0003' 2800'              	goto	u3540
  4210  0004'                    u3541:
  4211  0004' 2800'              	goto	l2587
  4212  0005'                    u3540:
  4213  0005'                    l2583:
  4214  0005' 0986'              	comf	___awdiv@divisor,f
  4215  0006' 0987'              	comf	___awdiv@divisor+1,f
  4216  0007' 0A86'              	incf	___awdiv@divisor,f
  4217  0008' 1903               	skipnz
  4218  0009' 0A87'              	incf	___awdiv@divisor+1,f
  4219  000A'                    l2585:
  4220  000A' 018B'              	clrf	___awdiv@sign
  4221  000B' 0A8B'              	incf	___awdiv@sign,f
  4222  000C'                    l2587:
  4223  000C' 1F89'              	btfss	___awdiv@dividend+1,7
  4224  000D' 2800'              	goto	u3551
  4225  000E' 2800'              	goto	u3550
  4226  000F'                    u3551:
  4227  000F' 2800'              	goto	l2593
  4228  0010'                    u3550:
  4229  0010'                    l2589:
  4230  0010' 0988'              	comf	___awdiv@dividend,f
  4231  0011' 0989'              	comf	___awdiv@dividend+1,f
  4232  0012' 0A88'              	incf	___awdiv@dividend,f
  4233  0013' 1903               	skipnz
  4234  0014' 0A89'              	incf	___awdiv@dividend+1,f
  4235  0015'                    l2591:
  4236  0015' 3001               	movlw	1
  4237  0016' 00FF               	movwf	btemp+1
  4238  0017' 087F               	movf	btemp+1,w
  4239  0018' 068B'              	xorwf	___awdiv@sign,f
  4240  0019'                    l2593:
  4241  0019' 018C'              	clrf	___awdiv@quotient
  4242  001A' 018D'              	clrf	___awdiv@quotient+1
  4243  001B'                    l2595:
  4244  001B' 0806'              	movf	___awdiv@divisor,w
  4245  001C' 0407'              	iorwf	___awdiv@divisor+1,w
  4246  001D' 1903               	btfsc	3,2
  4247  001E' 2800'              	goto	u3561
  4248  001F' 2800'              	goto	u3560
  4249  0020'                    u3561:
  4250  0020' 2800'              	goto	l2615
  4251  0021'                    u3560:
  4252  0021'                    l2597:
  4253  0021' 018A'              	clrf	___awdiv@counter
  4254  0022' 0A8A'              	incf	___awdiv@counter,f
  4255  0023' 2800'              	goto	l2603
  4256  0024'                    l2599:
  4257  0024' 3001               	movlw	1
  4258  0025'                    u3575:
  4259  0025' 1003               	clrc
  4260  0026' 0D86'              	rlf	___awdiv@divisor,f
  4261  0027' 0D87'              	rlf	___awdiv@divisor+1,f
  4262  0028' 3EFF               	addlw	-1
  4263  0029' 1D03               	skipz
  4264  002A' 2800'              	goto	u3575
  4265  002B'                    l2601:
  4266  002B' 3001               	movlw	1
  4267  002C' 00FF               	movwf	btemp+1
  4268  002D' 087F               	movf	btemp+1,w
  4269  002E' 078A'              	addwf	___awdiv@counter,f
  4270  002F'                    l2603:
  4271  002F' 1F87'              	btfss	___awdiv@divisor+1,7
  4272  0030' 2800'              	goto	u3581
  4273  0031' 2800'              	goto	u3580
  4274  0032'                    u3581:
  4275  0032' 2800'              	goto	l2599
  4276  0033'                    u3580:
  4277  0033'                    l2605:
  4278  0033' 3001               	movlw	1
  4279  0034'                    u3595:
  4280  0034' 1003               	clrc
  4281  0035' 0D8C'              	rlf	___awdiv@quotient,f
  4282  0036' 0D8D'              	rlf	___awdiv@quotient+1,f
  4283  0037' 3EFF               	addlw	-1
  4284  0038' 1D03               	skipz
  4285  0039' 2800'              	goto	u3595
  4286  003A' 0807'              	movf	___awdiv@divisor+1,w
  4287  003B' 0209'              	subwf	___awdiv@dividend+1,w
  4288  003C' 1D03               	skipz
  4289  003D' 2800'              	goto	u3605
  4290  003E' 0806'              	movf	___awdiv@divisor,w
  4291  003F' 0208'              	subwf	___awdiv@dividend,w
  4292  0040'                    u3605:
  4293  0040' 1C03               	skipc
  4294  0041' 2800'              	goto	u3601
  4295  0042' 2800'              	goto	u3600
  4296  0043'                    u3601:
  4297  0043' 2800'              	goto	l2611
  4298  0044'                    u3600:
  4299  0044'                    l2607:
  4300  0044' 0806'              	movf	___awdiv@divisor,w
  4301  0045' 0288'              	subwf	___awdiv@dividend,f
  4302  0046' 0807'              	movf	___awdiv@divisor+1,w
  4303  0047' 1C03               	skipc
  4304  0048' 0389'              	decf	___awdiv@dividend+1,f
  4305  0049' 0289'              	subwf	___awdiv@dividend+1,f
  4306  004A'                    l2609:
  4307  004A' 140C'              	bsf	___awdiv@quotient,0
  4308  004B'                    l2611:
  4309  004B' 3001               	movlw	1
  4310  004C'                    u3615:
  4311  004C' 1003               	clrc
  4312  004D' 0C87'              	rrf	___awdiv@divisor+1,f
  4313  004E' 0C86'              	rrf	___awdiv@divisor,f
  4314  004F' 3EFF               	addlw	-1
  4315  0050' 1D03               	skipz
  4316  0051' 2800'              	goto	u3615
  4317  0052'                    l2613:
  4318  0052' 3001               	movlw	1
  4319  0053' 028A'              	subwf	___awdiv@counter,f
  4320  0054' 1D03               	btfss	3,2
  4321  0055' 2800'              	goto	u3621
  4322  0056' 2800'              	goto	u3620
  4323  0057'                    u3621:
  4324  0057' 2800'              	goto	l2605
  4325  0058'                    u3620:
  4326  0058'                    l2615:
  4327  0058' 080B'              	movf	___awdiv@sign,w
  4328  0059' 1903               	btfsc	3,2
  4329  005A' 2800'              	goto	u3631
  4330  005B' 2800'              	goto	u3630
  4331  005C'                    u3631:
  4332  005C' 2800'              	goto	l2619
  4333  005D'                    u3630:
  4334  005D'                    l2617:
  4335  005D' 098C'              	comf	___awdiv@quotient,f
  4336  005E' 098D'              	comf	___awdiv@quotient+1,f
  4337  005F' 0A8C'              	incf	___awdiv@quotient,f
  4338  0060' 1903               	skipnz
  4339  0061' 0A8D'              	incf	___awdiv@quotient+1,f
  4340  0062'                    l2619:
  4341  0062' 080D'              	movf	___awdiv@quotient+1,w
  4342  0063' 0087'              	movwf	?___awdiv+1
  4343  0064' 080C'              	movf	___awdiv@quotient,w
  4344  0065' 0086'              	movwf	?___awdiv
  4345  0066'                    l531:
  4346  0066' 0008               	return
  4347  0067'                    __end_of___awdiv:
  4348                           
  4349                           	psect	text5
  4350  0000'                    __ptext5:	
  4351 ;; *************** function _isdigit *****************
  4352 ;; Defined at:
  4353 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\isdigit.c"
  4354 ;; Parameters:    Size  Location     Type
  4355 ;;  c               1    wreg     unsigned char 
  4356 ;; Auto vars:     Size  Location     Type
  4357 ;;  c               1    1[COMMON] unsigned char 
  4358 ;; Return value:  Size  Location     Type
  4359 ;;		None               void
  4360 ;; Registers used:
  4361 ;;		wreg, status,2, status,0
  4362 ;; Tracked objects:
  4363 ;;		On entry : 0/0
  4364 ;;		On exit  : 0/0
  4365 ;;		Unchanged: 0/0
  4366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4367 ;;      Params:         0       0       0       0       0
  4368 ;;      Locals:         2       0       0       0       0
  4369 ;;      Temps:          0       0       0       0       0
  4370 ;;      Totals:         2       0       0       0       0
  4371 ;;Total ram usage:        2 bytes
  4372 ;; Hardware stack levels used: 1
  4373 ;; This function calls:
  4374 ;;		Nothing
  4375 ;; This function is called by:
  4376 ;;		_sprintf
  4377 ;; This function uses a non-reentrant model
  4378 ;;
  4379                           
  4380  0000'                    _isdigit:	
  4381                           ;psect for function _isdigit
  4382                           
  4383                           
  4384                           ;incstack = 0
  4385                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4386                           ;isdigit@c stored from wreg
  4387  0000' 0081'              	movwf	isdigit@c
  4388  0001'                    l3143:
  4389  0001' 0180'              	clrf	_isdigit$689
  4390  0002'                    l3145:
  4391  0002' 303A               	movlw	58
  4392  0003' 0201'              	subwf	isdigit@c,w
  4393  0004' 1803               	skipnc
  4394  0005' 2800'              	goto	u4961
  4395  0006' 2800'              	goto	u4960
  4396  0007'                    u4961:
  4397  0007' 2800'              	goto	l3151
  4398  0008'                    u4960:
  4399  0008'                    l3147:
  4400  0008' 3030               	movlw	48
  4401  0009' 0201'              	subwf	isdigit@c,w
  4402  000A' 1C03               	skipc
  4403  000B' 2800'              	goto	u4971
  4404  000C' 2800'              	goto	u4970
  4405  000D'                    u4971:
  4406  000D' 2800'              	goto	l3151
  4407  000E'                    u4970:
  4408  000E'                    l3149:
  4409  000E' 0180'              	clrf	_isdigit$689
  4410  000F' 0A80'              	incf	_isdigit$689,f
  4411  0010'                    l3151:
  4412  0010' 0C00'              	rrf	_isdigit$689,w
  4413  0011'                    l865:
  4414  0011' 0008               	return
  4415  0012'                    __end_of_isdigit:
  4416                           
  4417                           	psect	text6
  4418  0000'                    __ptext6:	
  4419 ;; *************** function _fround *****************
  4420 ;; Defined at:
  4421 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c"
  4422 ;; Parameters:    Size  Location     Type
  4423 ;;  prec            1    wreg     unsigned char 
  4424 ;; Auto vars:     Size  Location     Type
  4425 ;;  prec            1   45[BANK0 ] unsigned char 
  4426 ;; Return value:  Size  Location     Type
  4427 ;;                  4   26[BANK0 ] unsigned char 
  4428 ;; Registers used:
  4429 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4430 ;; Tracked objects:
  4431 ;;		On entry : 0/0
  4432 ;;		On exit  : 0/0
  4433 ;;		Unchanged: 0/0
  4434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4435 ;;      Params:         0       4       0       0       0
  4436 ;;      Locals:         0       9       0       0       0
  4437 ;;      Temps:          0       7       0       0       0
  4438 ;;      Totals:         0      20       0       0       0
  4439 ;;Total ram usage:       20 bytes
  4440 ;; Hardware stack levels used: 1
  4441 ;; Hardware stack levels required when called: 2
  4442 ;; This function calls:
  4443 ;;		___flmul
  4444 ;;		___lwdiv
  4445 ;;		___lwmod
  4446 ;; This function is called by:
  4447 ;;		_sprintf
  4448 ;; This function uses a non-reentrant model
  4449 ;;
  4450                           
  4451  0000'                    _fround:	
  4452                           ;psect for function _fround
  4453                           
  4454                           
  4455                           ;incstack = 0
  4456                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4457                           ;fround@prec stored from wreg
  4458  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  4459  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  4460  0002' 00AD'              	movwf	fround@prec
  4461  0003'                    l3085:
  4462                           
  4463                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  4464  0003' 306E               	movlw	110
  4465  0004' 022D'              	subwf	fround@prec,w
  4466  0005' 1C03               	skipc
  4467  0006' 2800'              	goto	u4711
  4468  0007' 2800'              	goto	u4710
  4469  0008'                    u4711:
  4470  0008' 2800'              	goto	l3093
  4471  0009'                    u4710:
  4472  0009'                    l3087:
  4473                           
  4474                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4475  0009' 303F               	movlw	63
  4476  000A' 0083'              	movwf	___flmul@b+3
  4477  000B' 3000               	movlw	0
  4478  000C' 0082'              	movwf	___flmul@b+2
  4479  000D' 3000               	movlw	0
  4480  000E' 0081'              	movwf	___flmul@b+1
  4481  000F' 3000               	movlw	0
  4482  0010' 0080'              	movwf	___flmul@b
  4483  0011' 3064               	movlw	100
  4484  0012' 0085'              	movwf	___lwdiv@divisor
  4485  0013' 3000               	movlw	0
  4486  0014' 0086'              	movwf	___lwdiv@divisor+1
  4487  0015' 082D'              	movf	fround@prec,w
  4488  0016' 009E'              	movwf	??_fround
  4489  0017' 019F'              	clrf	??_fround+1
  4490  0018' 081E'              	movf	??_fround,w
  4491  0019' 0087'              	movwf	___lwdiv@dividend
  4492  001A' 081F'              	movf	??_fround+1,w
  4493  001B' 0088'              	movwf	___lwdiv@dividend+1
  4494  001C' 120A' 118A' 2000' 120A' 118A' 	fcall	___lwdiv
  4495  0021' 0805'              	movf	?___lwdiv,w
  4496  0022' 1283               	bcf	3,5	;RP0=0, select bank0
  4497  0023' 1303               	bcf	3,6	;RP1=0, select bank0
  4498  0024' 00A0'              	movwf	??_fround+2
  4499  0025' 3001               	movlw	1
  4500  0026'                    u4725:
  4501  0026' 1003               	clrc
  4502  0027' 0DA0'              	rlf	??_fround+2,f
  4503  0028' 3EFF               	addlw	-1
  4504  0029' 1D03               	skipz
  4505  002A' 2800'              	goto	u4725
  4506  002B' 1003               	clrc
  4507  002C' 0D20'              	rlf	??_fround+2,w
  4508  002D' 3E00'              	addlw	low ((__npowers_| (0+32768)+72))
  4509  002E' 0084               	movwf	4
  4510  002F' 3000'              	movlw	high ((__npowers_| (0+32768)+72))
  4511  0030' 1803               	skipnc
  4512  0031' 3E01               	addlw	1
  4513  0032' 00FF               	movwf	btemp+1
  4514  0033' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  4515  0038' 00A1'              	movwf	??_fround+3
  4516  0039' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  4517  003E' 00A2'              	movwf	??_fround+4
  4518  003F' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  4519  0044' 00A3'              	movwf	??_fround+5
  4520  0045' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  4521  004A' 00A4'              	movwf	??_fround+6
  4522  004B' 0824'              	movf	??_fround+6,w
  4523  004C' 0087'              	movwf	___flmul@a+3
  4524  004D' 0823'              	movf	??_fround+5,w
  4525  004E' 0086'              	movwf	___flmul@a+2
  4526  004F' 0822'              	movf	??_fround+4,w
  4527  0050' 0085'              	movwf	___flmul@a+1
  4528  0051' 0821'              	movf	??_fround+3,w
  4529  0052' 0084'              	movwf	___flmul@a
  4530  0053' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  4531  0058' 1283               	bcf	3,5	;RP0=0, select bank0
  4532  0059' 1303               	bcf	3,6	;RP1=0, select bank0
  4533  005A' 0803'              	movf	?___flmul+3,w
  4534  005B' 00AC'              	movwf	_fround$871+3
  4535  005C' 0802'              	movf	?___flmul+2,w
  4536  005D' 00AB'              	movwf	_fround$871+2
  4537  005E' 0801'              	movf	?___flmul+1,w
  4538  005F' 00AA'              	movwf	_fround$871+1
  4539  0060' 0800'              	movf	?___flmul,w
  4540  0061' 00A9'              	movwf	_fround$871
  4541                           
  4542                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4543  0062' 300A               	movlw	10
  4544  0063' 0085'              	movwf	___lwdiv@divisor
  4545  0064' 3000               	movlw	0
  4546  0065' 0086'              	movwf	___lwdiv@divisor+1
  4547  0066' 082D'              	movf	fround@prec,w
  4548  0067' 009E'              	movwf	??_fround
  4549  0068' 019F'              	clrf	??_fround+1
  4550  0069' 081E'              	movf	??_fround,w
  4551  006A' 0082'              	movwf	___lwmod@dividend
  4552  006B' 081F'              	movf	??_fround+1,w
  4553  006C' 0083'              	movwf	___lwmod@dividend+1
  4554  006D' 3064               	movlw	100
  4555  006E' 0080'              	movwf	___lwmod@divisor
  4556  006F' 3000               	movlw	0
  4557  0070' 0081'              	movwf	___lwmod@divisor+1
  4558  0071' 120A' 118A' 2000' 120A' 118A' 	fcall	___lwmod
  4559  0076' 0801'              	movf	?___lwmod+1,w
  4560  0077' 0088'              	movwf	___lwdiv@dividend+1
  4561  0078' 0800'              	movf	?___lwmod,w
  4562  0079' 0087'              	movwf	___lwdiv@dividend
  4563  007A' 120A' 118A' 2000' 120A' 118A' 	fcall	___lwdiv
  4564  007F' 0805'              	movf	?___lwdiv,w
  4565  0080' 1283               	bcf	3,5	;RP0=0, select bank0
  4566  0081' 1303               	bcf	3,6	;RP1=0, select bank0
  4567  0082' 00A0'              	movwf	??_fround+2
  4568  0083' 3001               	movlw	1
  4569  0084'                    u4735:
  4570  0084' 1003               	clrc
  4571  0085' 0DA0'              	rlf	??_fround+2,f
  4572  0086' 3EFF               	addlw	-1
  4573  0087' 1D03               	skipz
  4574  0088' 2800'              	goto	u4735
  4575  0089' 1003               	clrc
  4576  008A' 0D20'              	rlf	??_fround+2,w
  4577  008B' 3E00'              	addlw	low ((__npowers_| (0+32768)+36))
  4578  008C' 0084               	movwf	4
  4579  008D' 3000'              	movlw	high ((__npowers_| (0+32768)+36))
  4580  008E' 1803               	skipnc
  4581  008F' 3E01               	addlw	1
  4582  0090' 00FF               	movwf	btemp+1
  4583  0091' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  4584  0096' 00A1'              	movwf	??_fround+3
  4585  0097' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  4586  009C' 00A2'              	movwf	??_fround+4
  4587  009D' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  4588  00A2' 00A3'              	movwf	??_fround+5
  4589  00A3' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  4590  00A8' 00A4'              	movwf	??_fround+6
  4591  00A9' 0824'              	movf	??_fround+6,w
  4592  00AA' 0083'              	movwf	___flmul@b+3
  4593  00AB' 0823'              	movf	??_fround+5,w
  4594  00AC' 0082'              	movwf	___flmul@b+2
  4595  00AD' 0822'              	movf	??_fround+4,w
  4596  00AE' 0081'              	movwf	___flmul@b+1
  4597  00AF' 0821'              	movf	??_fround+3,w
  4598  00B0' 0080'              	movwf	___flmul@b
  4599  00B1' 082C'              	movf	_fround$871+3,w
  4600  00B2' 0087'              	movwf	___flmul@a+3
  4601  00B3' 082B'              	movf	_fround$871+2,w
  4602  00B4' 0086'              	movwf	___flmul@a+2
  4603  00B5' 082A'              	movf	_fround$871+1,w
  4604  00B6' 0085'              	movwf	___flmul@a+1
  4605  00B7' 0829'              	movf	_fround$871,w
  4606  00B8' 0084'              	movwf	___flmul@a
  4607  00B9' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  4608  00BE' 1283               	bcf	3,5	;RP0=0, select bank0
  4609  00BF' 1303               	bcf	3,6	;RP1=0, select bank0
  4610  00C0' 0803'              	movf	?___flmul+3,w
  4611  00C1' 00A8'              	movwf	_fround$872+3
  4612  00C2' 0802'              	movf	?___flmul+2,w
  4613  00C3' 00A7'              	movwf	_fround$872+2
  4614  00C4' 0801'              	movf	?___flmul+1,w
  4615  00C5' 00A6'              	movwf	_fround$872+1
  4616  00C6' 0800'              	movf	?___flmul,w
  4617  00C7' 00A5'              	movwf	_fround$872
  4618                           
  4619                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4620  00C8' 300A               	movlw	10
  4621  00C9' 0080'              	movwf	___lwmod@divisor
  4622  00CA' 3000               	movlw	0
  4623  00CB' 0081'              	movwf	___lwmod@divisor+1
  4624  00CC' 082D'              	movf	fround@prec,w
  4625  00CD' 009E'              	movwf	??_fround
  4626  00CE' 019F'              	clrf	??_fround+1
  4627  00CF' 081E'              	movf	??_fround,w
  4628  00D0' 0082'              	movwf	___lwmod@dividend
  4629  00D1' 081F'              	movf	??_fround+1,w
  4630  00D2' 0083'              	movwf	___lwmod@dividend+1
  4631  00D3' 120A' 118A' 2000' 120A' 118A' 	fcall	___lwmod
  4632  00D8' 0800'              	movf	?___lwmod,w
  4633  00D9' 1283               	bcf	3,5	;RP0=0, select bank0
  4634  00DA' 1303               	bcf	3,6	;RP1=0, select bank0
  4635  00DB' 00A0'              	movwf	??_fround+2
  4636  00DC' 3001               	movlw	1
  4637  00DD'                    u4745:
  4638  00DD' 1003               	clrc
  4639  00DE' 0DA0'              	rlf	??_fround+2,f
  4640  00DF' 3EFF               	addlw	-1
  4641  00E0' 1D03               	skipz
  4642  00E1' 2800'              	goto	u4745
  4643  00E2' 1003               	clrc
  4644  00E3' 0D20'              	rlf	??_fround+2,w
  4645  00E4' 3E00'              	addlw	low (__npowers_| (0+32768))
  4646  00E5' 0084               	movwf	4
  4647  00E6' 3000'              	movlw	high (__npowers_| (0+32768))
  4648  00E7' 1803               	skipnc
  4649  00E8' 3E01               	addlw	1
  4650  00E9' 00FF               	movwf	btemp+1
  4651  00EA' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  4652  00EF' 00A1'              	movwf	??_fround+3
  4653  00F0' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  4654  00F5' 00A2'              	movwf	??_fround+4
  4655  00F6' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  4656  00FB' 00A3'              	movwf	??_fround+5
  4657  00FC' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  4658  0101' 00A4'              	movwf	??_fround+6
  4659  0102' 0824'              	movf	??_fround+6,w
  4660  0103' 0083'              	movwf	___flmul@b+3
  4661  0104' 0823'              	movf	??_fround+5,w
  4662  0105' 0082'              	movwf	___flmul@b+2
  4663  0106' 0822'              	movf	??_fround+4,w
  4664  0107' 0081'              	movwf	___flmul@b+1
  4665  0108' 0821'              	movf	??_fround+3,w
  4666  0109' 0080'              	movwf	___flmul@b
  4667  010A' 0828'              	movf	_fround$872+3,w
  4668  010B' 0087'              	movwf	___flmul@a+3
  4669  010C' 0827'              	movf	_fround$872+2,w
  4670  010D' 0086'              	movwf	___flmul@a+2
  4671  010E' 0826'              	movf	_fround$872+1,w
  4672  010F' 0085'              	movwf	___flmul@a+1
  4673  0110' 0825'              	movf	_fround$872,w
  4674  0111' 0084'              	movwf	___flmul@a
  4675  0112' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  4676  0117' 1283               	bcf	3,5	;RP0=0, select bank0
  4677  0118' 1303               	bcf	3,6	;RP1=0, select bank0
  4678  0119' 0803'              	movf	?___flmul+3,w
  4679  011A' 009D'              	movwf	?_fround+3
  4680  011B' 0802'              	movf	?___flmul+2,w
  4681  011C' 009C'              	movwf	?_fround+2
  4682  011D' 0801'              	movf	?___flmul+1,w
  4683  011E' 009B'              	movwf	?_fround+1
  4684  011F' 0800'              	movf	?___flmul,w
  4685  0120' 009A'              	movwf	?_fround
  4686  0121' 2800'              	goto	l272
  4687  0122'                    l3093:
  4688  0122' 300B               	movlw	11
  4689  0123' 022D'              	subwf	fround@prec,w
  4690  0124' 1C03               	skipc
  4691  0125' 2800'              	goto	u4751
  4692  0126' 2800'              	goto	u4750
  4693  0127'                    u4751:
  4694  0127' 2800'              	goto	l3099
  4695  0128'                    u4750:
  4696  0128'                    l3095:
  4697                           
  4698                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4699  0128' 303F               	movlw	63
  4700  0129' 0083'              	movwf	___flmul@b+3
  4701  012A' 3000               	movlw	0
  4702  012B' 0082'              	movwf	___flmul@b+2
  4703  012C' 3000               	movlw	0
  4704  012D' 0081'              	movwf	___flmul@b+1
  4705  012E' 3000               	movlw	0
  4706  012F' 0080'              	movwf	___flmul@b
  4707  0130' 300A               	movlw	10
  4708  0131' 0085'              	movwf	___lwdiv@divisor
  4709  0132' 3000               	movlw	0
  4710  0133' 0086'              	movwf	___lwdiv@divisor+1
  4711  0134' 082D'              	movf	fround@prec,w
  4712  0135' 009E'              	movwf	??_fround
  4713  0136' 019F'              	clrf	??_fround+1
  4714  0137' 081E'              	movf	??_fround,w
  4715  0138' 0087'              	movwf	___lwdiv@dividend
  4716  0139' 081F'              	movf	??_fround+1,w
  4717  013A' 0088'              	movwf	___lwdiv@dividend+1
  4718  013B' 120A' 118A' 2000' 120A' 118A' 	fcall	___lwdiv
  4719  0140' 0805'              	movf	?___lwdiv,w
  4720  0141' 1283               	bcf	3,5	;RP0=0, select bank0
  4721  0142' 1303               	bcf	3,6	;RP1=0, select bank0
  4722  0143' 00A0'              	movwf	??_fround+2
  4723  0144' 3001               	movlw	1
  4724  0145'                    u4765:
  4725  0145' 1003               	clrc
  4726  0146' 0DA0'              	rlf	??_fround+2,f
  4727  0147' 3EFF               	addlw	-1
  4728  0148' 1D03               	skipz
  4729  0149' 2800'              	goto	u4765
  4730  014A' 1003               	clrc
  4731  014B' 0D20'              	rlf	??_fround+2,w
  4732  014C' 3E00'              	addlw	low ((__npowers_| (0+32768)+36))
  4733  014D' 0084               	movwf	4
  4734  014E' 3000'              	movlw	high ((__npowers_| (0+32768)+36))
  4735  014F' 1803               	skipnc
  4736  0150' 3E01               	addlw	1
  4737  0151' 00FF               	movwf	btemp+1
  4738  0152' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  4739  0157' 00A1'              	movwf	??_fround+3
  4740  0158' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  4741  015D' 00A2'              	movwf	??_fround+4
  4742  015E' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  4743  0163' 00A3'              	movwf	??_fround+5
  4744  0164' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  4745  0169' 00A4'              	movwf	??_fround+6
  4746  016A' 0824'              	movf	??_fround+6,w
  4747  016B' 0087'              	movwf	___flmul@a+3
  4748  016C' 0823'              	movf	??_fround+5,w
  4749  016D' 0086'              	movwf	___flmul@a+2
  4750  016E' 0822'              	movf	??_fround+4,w
  4751  016F' 0085'              	movwf	___flmul@a+1
  4752  0170' 0821'              	movf	??_fround+3,w
  4753  0171' 0084'              	movwf	___flmul@a
  4754  0172' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  4755  0177' 1283               	bcf	3,5	;RP0=0, select bank0
  4756  0178' 1303               	bcf	3,6	;RP1=0, select bank0
  4757  0179' 0803'              	movf	?___flmul+3,w
  4758  017A' 00AC'              	movwf	_fround$871+3
  4759  017B' 0802'              	movf	?___flmul+2,w
  4760  017C' 00AB'              	movwf	_fround$871+2
  4761  017D' 0801'              	movf	?___flmul+1,w
  4762  017E' 00AA'              	movwf	_fround$871+1
  4763  017F' 0800'              	movf	?___flmul,w
  4764  0180' 00A9'              	movwf	_fround$871
  4765                           
  4766                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4767  0181' 300A               	movlw	10
  4768  0182' 0080'              	movwf	___lwmod@divisor
  4769  0183' 3000               	movlw	0
  4770  0184' 0081'              	movwf	___lwmod@divisor+1
  4771  0185' 082D'              	movf	fround@prec,w
  4772  0186' 009E'              	movwf	??_fround
  4773  0187' 019F'              	clrf	??_fround+1
  4774  0188' 081E'              	movf	??_fround,w
  4775  0189' 0082'              	movwf	___lwmod@dividend
  4776  018A' 081F'              	movf	??_fround+1,w
  4777  018B' 0083'              	movwf	___lwmod@dividend+1
  4778  018C' 120A' 118A' 2000' 120A' 118A' 	fcall	___lwmod
  4779  0191' 0800'              	movf	?___lwmod,w
  4780  0192' 1283               	bcf	3,5	;RP0=0, select bank0
  4781  0193' 1303               	bcf	3,6	;RP1=0, select bank0
  4782  0194' 00A0'              	movwf	??_fround+2
  4783  0195' 3001               	movlw	1
  4784  0196'                    u4775:
  4785  0196' 1003               	clrc
  4786  0197' 0DA0'              	rlf	??_fround+2,f
  4787  0198' 3EFF               	addlw	-1
  4788  0199' 1D03               	skipz
  4789  019A' 2800'              	goto	u4775
  4790  019B' 1003               	clrc
  4791  019C' 0D20'              	rlf	??_fround+2,w
  4792  019D' 3E00'              	addlw	low (__npowers_| (0+32768))
  4793  019E' 0084               	movwf	4
  4794  019F' 3000'              	movlw	high (__npowers_| (0+32768))
  4795  01A0' 1803               	skipnc
  4796  01A1' 3E01               	addlw	1
  4797  01A2' 00FF               	movwf	btemp+1
  4798  01A3' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  4799  01A8' 00A1'              	movwf	??_fround+3
  4800  01A9' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  4801  01AE' 00A2'              	movwf	??_fround+4
  4802  01AF' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  4803  01B4' 00A3'              	movwf	??_fround+5
  4804  01B5' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  4805  01BA' 00A4'              	movwf	??_fround+6
  4806  01BB' 0824'              	movf	??_fround+6,w
  4807  01BC' 0083'              	movwf	___flmul@b+3
  4808  01BD' 0823'              	movf	??_fround+5,w
  4809  01BE' 0082'              	movwf	___flmul@b+2
  4810  01BF' 0822'              	movf	??_fround+4,w
  4811  01C0' 0081'              	movwf	___flmul@b+1
  4812  01C1' 0821'              	movf	??_fround+3,w
  4813  01C2' 0080'              	movwf	___flmul@b
  4814  01C3' 082C'              	movf	_fround$871+3,w
  4815  01C4' 0087'              	movwf	___flmul@a+3
  4816  01C5' 082B'              	movf	_fround$871+2,w
  4817  01C6' 0086'              	movwf	___flmul@a+2
  4818  01C7' 082A'              	movf	_fround$871+1,w
  4819  01C8' 0085'              	movwf	___flmul@a+1
  4820  01C9' 0829'              	movf	_fround$871,w
  4821  01CA' 0084'              	movwf	___flmul@a
  4822  01CB' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  4823  01D0' 1283               	bcf	3,5	;RP0=0, select bank0
  4824  01D1' 1303               	bcf	3,6	;RP1=0, select bank0
  4825  01D2' 0803'              	movf	?___flmul+3,w
  4826  01D3' 009D'              	movwf	?_fround+3
  4827  01D4' 0802'              	movf	?___flmul+2,w
  4828  01D5' 009C'              	movwf	?_fround+2
  4829  01D6' 0801'              	movf	?___flmul+1,w
  4830  01D7' 009B'              	movwf	?_fround+1
  4831  01D8' 0800'              	movf	?___flmul,w
  4832  01D9' 009A'              	movwf	?_fround
  4833  01DA' 2800'              	goto	l272
  4834  01DB'                    l3099:
  4835                           
  4836                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  4837  01DB' 303F               	movlw	63
  4838  01DC' 0083'              	movwf	___flmul@b+3
  4839  01DD' 3000               	movlw	0
  4840  01DE' 0082'              	movwf	___flmul@b+2
  4841  01DF' 3000               	movlw	0
  4842  01E0' 0081'              	movwf	___flmul@b+1
  4843  01E1' 3000               	movlw	0
  4844  01E2' 0080'              	movwf	___flmul@b
  4845  01E3' 082D'              	movf	fround@prec,w
  4846  01E4' 009E'              	movwf	??_fround
  4847  01E5' 3001               	movlw	1
  4848  01E6'                    u4785:
  4849  01E6' 1003               	clrc
  4850  01E7' 0D9E'              	rlf	??_fround,f
  4851  01E8' 3EFF               	addlw	-1
  4852  01E9' 1D03               	skipz
  4853  01EA' 2800'              	goto	u4785
  4854  01EB' 1003               	clrc
  4855  01EC' 0D1E'              	rlf	??_fround,w
  4856  01ED' 3E00'              	addlw	low (__npowers_| (0+32768))
  4857  01EE' 0084               	movwf	4
  4858  01EF' 3000'              	movlw	high (__npowers_| (0+32768))
  4859  01F0' 1803               	skipnc
  4860  01F1' 3E01               	addlw	1
  4861  01F2' 00FF               	movwf	btemp+1
  4862  01F3' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  4863  01F8' 009F'              	movwf	??_fround+1
  4864  01F9' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  4865  01FE' 00A0'              	movwf	??_fround+2
  4866  01FF' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  4867  0204' 00A1'              	movwf	??_fround+3
  4868  0205' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  4869  020A' 00A2'              	movwf	??_fround+4
  4870  020B' 0822'              	movf	??_fround+4,w
  4871  020C' 0087'              	movwf	___flmul@a+3
  4872  020D' 0821'              	movf	??_fround+3,w
  4873  020E' 0086'              	movwf	___flmul@a+2
  4874  020F' 0820'              	movf	??_fround+2,w
  4875  0210' 0085'              	movwf	___flmul@a+1
  4876  0211' 081F'              	movf	??_fround+1,w
  4877  0212' 0084'              	movwf	___flmul@a
  4878  0213' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  4879  0218' 1283               	bcf	3,5	;RP0=0, select bank0
  4880  0219' 1303               	bcf	3,6	;RP1=0, select bank0
  4881  021A' 0803'              	movf	?___flmul+3,w
  4882  021B' 009D'              	movwf	?_fround+3
  4883  021C' 0802'              	movf	?___flmul+2,w
  4884  021D' 009C'              	movwf	?_fround+2
  4885  021E' 0801'              	movf	?___flmul+1,w
  4886  021F' 009B'              	movwf	?_fround+1
  4887  0220' 0800'              	movf	?___flmul,w
  4888  0221' 009A'              	movwf	?_fround
  4889  0222'                    l272:
  4890  0222' 0008               	return
  4891  0223'                    __end_of_fround:
  4892                           
  4893                           	psect	text7
  4894  0000'                    __ptext7:	
  4895 ;; *************** function ___lwmod *****************
  4896 ;; Defined at:
  4897 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwmod.c"
  4898 ;; Parameters:    Size  Location     Type
  4899 ;;  divisor         2    0[COMMON] unsigned int 
  4900 ;;  dividend        2    2[COMMON] unsigned int 
  4901 ;; Auto vars:     Size  Location     Type
  4902 ;;  counter         1    4[COMMON] unsigned char 
  4903 ;; Return value:  Size  Location     Type
  4904 ;;                  2    0[COMMON] unsigned int 
  4905 ;; Registers used:
  4906 ;;		wreg, status,2, status,0, btemp+1
  4907 ;; Tracked objects:
  4908 ;;		On entry : 0/0
  4909 ;;		On exit  : 0/0
  4910 ;;		Unchanged: 0/0
  4911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4912 ;;      Params:         4       0       0       0       0
  4913 ;;      Locals:         1       0       0       0       0
  4914 ;;      Temps:          0       0       0       0       0
  4915 ;;      Totals:         5       0       0       0       0
  4916 ;;Total ram usage:        5 bytes
  4917 ;; Hardware stack levels used: 1
  4918 ;; This function calls:
  4919 ;;		Nothing
  4920 ;; This function is called by:
  4921 ;;		_fround
  4922 ;; This function uses a non-reentrant model
  4923 ;;
  4924                           
  4925  0000'                    ___lwmod:	
  4926                           ;psect for function ___lwmod
  4927                           
  4928  0000'                    l2687:	
  4929                           ;incstack = 0
  4930                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
  4931                           
  4932  0000' 0800'              	movf	___lwmod@divisor,w
  4933  0001' 0401'              	iorwf	___lwmod@divisor+1,w
  4934  0002' 1903               	btfsc	3,2
  4935  0003' 2800'              	goto	u3801
  4936  0004' 2800'              	goto	u3800
  4937  0005'                    u3801:
  4938  0005' 2800'              	goto	l2705
  4939  0006'                    u3800:
  4940  0006'                    l2689:
  4941  0006' 0184'              	clrf	___lwmod@counter
  4942  0007' 0A84'              	incf	___lwmod@counter,f
  4943  0008' 2800'              	goto	l2695
  4944  0009'                    l2691:
  4945  0009' 3001               	movlw	1
  4946  000A'                    u3815:
  4947  000A' 1003               	clrc
  4948  000B' 0D80'              	rlf	___lwmod@divisor,f
  4949  000C' 0D81'              	rlf	___lwmod@divisor+1,f
  4950  000D' 3EFF               	addlw	-1
  4951  000E' 1D03               	skipz
  4952  000F' 2800'              	goto	u3815
  4953  0010'                    l2693:
  4954  0010' 3001               	movlw	1
  4955  0011' 00FF               	movwf	btemp+1
  4956  0012' 087F               	movf	btemp+1,w
  4957  0013' 0784'              	addwf	___lwmod@counter,f
  4958  0014'                    l2695:
  4959  0014' 1F81'              	btfss	___lwmod@divisor+1,7
  4960  0015' 2800'              	goto	u3821
  4961  0016' 2800'              	goto	u3820
  4962  0017'                    u3821:
  4963  0017' 2800'              	goto	l2691
  4964  0018'                    u3820:
  4965  0018'                    l2697:
  4966  0018' 0801'              	movf	___lwmod@divisor+1,w
  4967  0019' 0203'              	subwf	___lwmod@dividend+1,w
  4968  001A' 1D03               	skipz
  4969  001B' 2800'              	goto	u3835
  4970  001C' 0800'              	movf	___lwmod@divisor,w
  4971  001D' 0202'              	subwf	___lwmod@dividend,w
  4972  001E'                    u3835:
  4973  001E' 1C03               	skipc
  4974  001F' 2800'              	goto	u3831
  4975  0020' 2800'              	goto	u3830
  4976  0021'                    u3831:
  4977  0021' 2800'              	goto	l2701
  4978  0022'                    u3830:
  4979  0022'                    l2699:
  4980  0022' 0800'              	movf	___lwmod@divisor,w
  4981  0023' 0282'              	subwf	___lwmod@dividend,f
  4982  0024' 0801'              	movf	___lwmod@divisor+1,w
  4983  0025' 1C03               	skipc
  4984  0026' 0383'              	decf	___lwmod@dividend+1,f
  4985  0027' 0283'              	subwf	___lwmod@dividend+1,f
  4986  0028'                    l2701:
  4987  0028' 3001               	movlw	1
  4988  0029'                    u3845:
  4989  0029' 1003               	clrc
  4990  002A' 0C81'              	rrf	___lwmod@divisor+1,f
  4991  002B' 0C80'              	rrf	___lwmod@divisor,f
  4992  002C' 3EFF               	addlw	-1
  4993  002D' 1D03               	skipz
  4994  002E' 2800'              	goto	u3845
  4995  002F'                    l2703:
  4996  002F' 3001               	movlw	1
  4997  0030' 0284'              	subwf	___lwmod@counter,f
  4998  0031' 1D03               	btfss	3,2
  4999  0032' 2800'              	goto	u3851
  5000  0033' 2800'              	goto	u3850
  5001  0034'                    u3851:
  5002  0034' 2800'              	goto	l2697
  5003  0035'                    u3850:
  5004  0035'                    l2705:
  5005  0035' 0803'              	movf	___lwmod@dividend+1,w
  5006  0036' 0081'              	movwf	?___lwmod+1
  5007  0037' 0802'              	movf	___lwmod@dividend,w
  5008  0038' 0080'              	movwf	?___lwmod
  5009  0039'                    l694:
  5010  0039' 0008               	return
  5011  003A'                    __end_of___lwmod:
  5012                           
  5013                           	psect	text8
  5014  0000'                    __ptext8:	
  5015 ;; *************** function ___lwdiv *****************
  5016 ;; Defined at:
  5017 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwdiv.c"
  5018 ;; Parameters:    Size  Location     Type
  5019 ;;  divisor         2    5[COMMON] unsigned int 
  5020 ;;  dividend        2    7[COMMON] unsigned int 
  5021 ;; Auto vars:     Size  Location     Type
  5022 ;;  quotient        2    9[COMMON] unsigned int 
  5023 ;;  counter         1   11[COMMON] unsigned char 
  5024 ;; Return value:  Size  Location     Type
  5025 ;;                  2    5[COMMON] unsigned int 
  5026 ;; Registers used:
  5027 ;;		wreg, status,2, status,0, btemp+1
  5028 ;; Tracked objects:
  5029 ;;		On entry : 0/0
  5030 ;;		On exit  : 0/0
  5031 ;;		Unchanged: 0/0
  5032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5033 ;;      Params:         4       0       0       0       0
  5034 ;;      Locals:         3       0       0       0       0
  5035 ;;      Temps:          0       0       0       0       0
  5036 ;;      Totals:         7       0       0       0       0
  5037 ;;Total ram usage:        7 bytes
  5038 ;; Hardware stack levels used: 1
  5039 ;; This function calls:
  5040 ;;		Nothing
  5041 ;; This function is called by:
  5042 ;;		_fround
  5043 ;; This function uses a non-reentrant model
  5044 ;;
  5045                           
  5046  0000'                    ___lwdiv:	
  5047                           ;psect for function ___lwdiv
  5048                           
  5049  0000'                    l2661:	
  5050                           ;incstack = 0
  5051                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  5052                           
  5053  0000' 0189'              	clrf	___lwdiv@quotient
  5054  0001' 018A'              	clrf	___lwdiv@quotient+1
  5055  0002'                    l2663:
  5056  0002' 0805'              	movf	___lwdiv@divisor,w
  5057  0003' 0406'              	iorwf	___lwdiv@divisor+1,w
  5058  0004' 1903               	btfsc	3,2
  5059  0005' 2800'              	goto	u3731
  5060  0006' 2800'              	goto	u3730
  5061  0007'                    u3731:
  5062  0007' 2800'              	goto	l2683
  5063  0008'                    u3730:
  5064  0008'                    l2665:
  5065  0008' 018B'              	clrf	___lwdiv@counter
  5066  0009' 0A8B'              	incf	___lwdiv@counter,f
  5067  000A' 2800'              	goto	l2671
  5068  000B'                    l2667:
  5069  000B' 3001               	movlw	1
  5070  000C'                    u3745:
  5071  000C' 1003               	clrc
  5072  000D' 0D85'              	rlf	___lwdiv@divisor,f
  5073  000E' 0D86'              	rlf	___lwdiv@divisor+1,f
  5074  000F' 3EFF               	addlw	-1
  5075  0010' 1D03               	skipz
  5076  0011' 2800'              	goto	u3745
  5077  0012'                    l2669:
  5078  0012' 3001               	movlw	1
  5079  0013' 00FF               	movwf	btemp+1
  5080  0014' 087F               	movf	btemp+1,w
  5081  0015' 078B'              	addwf	___lwdiv@counter,f
  5082  0016'                    l2671:
  5083  0016' 1F86'              	btfss	___lwdiv@divisor+1,7
  5084  0017' 2800'              	goto	u3751
  5085  0018' 2800'              	goto	u3750
  5086  0019'                    u3751:
  5087  0019' 2800'              	goto	l2667
  5088  001A'                    u3750:
  5089  001A'                    l2673:
  5090  001A' 3001               	movlw	1
  5091  001B'                    u3765:
  5092  001B' 1003               	clrc
  5093  001C' 0D89'              	rlf	___lwdiv@quotient,f
  5094  001D' 0D8A'              	rlf	___lwdiv@quotient+1,f
  5095  001E' 3EFF               	addlw	-1
  5096  001F' 1D03               	skipz
  5097  0020' 2800'              	goto	u3765
  5098  0021' 0806'              	movf	___lwdiv@divisor+1,w
  5099  0022' 0208'              	subwf	___lwdiv@dividend+1,w
  5100  0023' 1D03               	skipz
  5101  0024' 2800'              	goto	u3775
  5102  0025' 0805'              	movf	___lwdiv@divisor,w
  5103  0026' 0207'              	subwf	___lwdiv@dividend,w
  5104  0027'                    u3775:
  5105  0027' 1C03               	skipc
  5106  0028' 2800'              	goto	u3771
  5107  0029' 2800'              	goto	u3770
  5108  002A'                    u3771:
  5109  002A' 2800'              	goto	l2679
  5110  002B'                    u3770:
  5111  002B'                    l2675:
  5112  002B' 0805'              	movf	___lwdiv@divisor,w
  5113  002C' 0287'              	subwf	___lwdiv@dividend,f
  5114  002D' 0806'              	movf	___lwdiv@divisor+1,w
  5115  002E' 1C03               	skipc
  5116  002F' 0388'              	decf	___lwdiv@dividend+1,f
  5117  0030' 0288'              	subwf	___lwdiv@dividend+1,f
  5118  0031'                    l2677:
  5119  0031' 1409'              	bsf	___lwdiv@quotient,0
  5120  0032'                    l2679:
  5121  0032' 3001               	movlw	1
  5122  0033'                    u3785:
  5123  0033' 1003               	clrc
  5124  0034' 0C86'              	rrf	___lwdiv@divisor+1,f
  5125  0035' 0C85'              	rrf	___lwdiv@divisor,f
  5126  0036' 3EFF               	addlw	-1
  5127  0037' 1D03               	skipz
  5128  0038' 2800'              	goto	u3785
  5129  0039'                    l2681:
  5130  0039' 3001               	movlw	1
  5131  003A' 028B'              	subwf	___lwdiv@counter,f
  5132  003B' 1D03               	btfss	3,2
  5133  003C' 2800'              	goto	u3791
  5134  003D' 2800'              	goto	u3790
  5135  003E'                    u3791:
  5136  003E' 2800'              	goto	l2673
  5137  003F'                    u3790:
  5138  003F'                    l2683:
  5139  003F' 080A'              	movf	___lwdiv@quotient+1,w
  5140  0040' 0086'              	movwf	?___lwdiv+1
  5141  0041' 0809'              	movf	___lwdiv@quotient,w
  5142  0042' 0085'              	movwf	?___lwdiv
  5143  0043'                    l684:
  5144  0043' 0008               	return
  5145  0044'                    __end_of___lwdiv:
  5146                           
  5147                           	psect	text9
  5148  0000'                    __ptext9:	
  5149 ;; *************** function ___flmul *****************
  5150 ;; Defined at:
  5151 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\sprcmul.c"
  5152 ;; Parameters:    Size  Location     Type
  5153 ;;  b               4    0[BANK0 ] unsigned int 
  5154 ;;  a               4    4[BANK0 ] unsigned int 
  5155 ;; Auto vars:     Size  Location     Type
  5156 ;;  prod            4   20[BANK0 ] struct .
  5157 ;;  grs             4   14[BANK0 ] unsigned long 
  5158 ;;  temp            2   24[BANK0 ] struct .
  5159 ;;  bexp            1   19[BANK0 ] unsigned char 
  5160 ;;  aexp            1   18[BANK0 ] unsigned char 
  5161 ;;  sign            1   13[BANK0 ] unsigned char 
  5162 ;; Return value:  Size  Location     Type
  5163 ;;                  4    0[BANK0 ] unsigned char 
  5164 ;; Registers used:
  5165 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5166 ;; Tracked objects:
  5167 ;;		On entry : 0/0
  5168 ;;		On exit  : 0/0
  5169 ;;		Unchanged: 0/0
  5170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5171 ;;      Params:         0       8       0       0       0
  5172 ;;      Locals:         0      13       0       0       0
  5173 ;;      Temps:          0       5       0       0       0
  5174 ;;      Totals:         0      26       0       0       0
  5175 ;;Total ram usage:       26 bytes
  5176 ;; Hardware stack levels used: 1
  5177 ;; Hardware stack levels required when called: 1
  5178 ;; This function calls:
  5179 ;;		__Umul8_16
  5180 ;; This function is called by:
  5181 ;;		_fround
  5182 ;;		_scale
  5183 ;;		_sprintf
  5184 ;; This function uses a non-reentrant model
  5185 ;;
  5186                           
  5187  0000'                    ___flmul:	
  5188                           ;psect for function ___flmul
  5189                           
  5190  0000'                    l2909:	
  5191                           ;incstack = 0
  5192                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5193                           
  5194  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  5195  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  5196  0002' 0803'              	movf	___flmul@b+3,w
  5197  0003' 3980               	andlw	128
  5198  0004' 008D'              	movwf	___flmul@sign
  5199  0005'                    l2911:
  5200  0005' 0803'              	movf	___flmul@b+3,w
  5201  0006' 0088'              	movwf	??___flmul
  5202  0007' 0708'              	addwf	??___flmul,w
  5203  0008' 0093'              	movwf	___flmul@bexp
  5204  0009'                    l2913:
  5205  0009' 1F82'              	btfss	___flmul@b+2,7
  5206  000A' 2800'              	goto	u4321
  5207  000B' 2800'              	goto	u4320
  5208  000C'                    u4321:
  5209  000C' 2800'              	goto	l2917
  5210  000D'                    u4320:
  5211  000D'                    l2915:
  5212  000D' 1413'              	bsf	___flmul@bexp,0
  5213  000E'                    l2917:
  5214  000E' 0813'              	movf	___flmul@bexp,w
  5215  000F' 1903               	btfsc	3,2
  5216  0010' 2800'              	goto	u4331
  5217  0011' 2800'              	goto	u4330
  5218  0012'                    u4331:
  5219  0012' 2800'              	goto	l2925
  5220  0013'                    u4330:
  5221  0013'                    l2919:
  5222  0013' 0A13'              	incf	___flmul@bexp,w
  5223  0014' 1D03               	btfss	3,2
  5224  0015' 2800'              	goto	u4341
  5225  0016' 2800'              	goto	u4340
  5226  0017'                    u4341:
  5227  0017' 2800'              	goto	l2923
  5228  0018'                    u4340:
  5229  0018'                    l2921:
  5230  0018' 3000               	movlw	0
  5231  0019' 0083'              	movwf	___flmul@b+3
  5232  001A' 3000               	movlw	0
  5233  001B' 0082'              	movwf	___flmul@b+2
  5234  001C' 3000               	movlw	0
  5235  001D' 0081'              	movwf	___flmul@b+1
  5236  001E' 3000               	movlw	0
  5237  001F' 0080'              	movwf	___flmul@b
  5238  0020'                    l2923:
  5239  0020' 1782'              	bsf	___flmul@b+2,7
  5240  0021' 2800'              	goto	l2927
  5241  0022'                    l2925:
  5242  0022' 3000               	movlw	0
  5243  0023' 0083'              	movwf	___flmul@b+3
  5244  0024' 3000               	movlw	0
  5245  0025' 0082'              	movwf	___flmul@b+2
  5246  0026' 3000               	movlw	0
  5247  0027' 0081'              	movwf	___flmul@b+1
  5248  0028' 3000               	movlw	0
  5249  0029' 0080'              	movwf	___flmul@b
  5250  002A'                    l2927:
  5251  002A' 0807'              	movf	___flmul@a+3,w
  5252  002B' 3980               	andlw	128
  5253  002C' 00FF               	movwf	btemp+1
  5254  002D' 087F               	movf	btemp+1,w
  5255  002E' 068D'              	xorwf	___flmul@sign,f
  5256  002F'                    l2929:
  5257  002F' 0807'              	movf	___flmul@a+3,w
  5258  0030' 0088'              	movwf	??___flmul
  5259  0031' 0708'              	addwf	??___flmul,w
  5260  0032' 0092'              	movwf	___flmul@aexp
  5261  0033'                    l2931:
  5262  0033' 1F86'              	btfss	___flmul@a+2,7
  5263  0034' 2800'              	goto	u4351
  5264  0035' 2800'              	goto	u4350
  5265  0036'                    u4351:
  5266  0036' 2800'              	goto	l2935
  5267  0037'                    u4350:
  5268  0037'                    l2933:
  5269  0037' 1412'              	bsf	___flmul@aexp,0
  5270  0038'                    l2935:
  5271  0038' 0812'              	movf	___flmul@aexp,w
  5272  0039' 1903               	btfsc	3,2
  5273  003A' 2800'              	goto	u4361
  5274  003B' 2800'              	goto	u4360
  5275  003C'                    u4361:
  5276  003C' 2800'              	goto	l2943
  5277  003D'                    u4360:
  5278  003D'                    l2937:
  5279  003D' 0A12'              	incf	___flmul@aexp,w
  5280  003E' 1D03               	btfss	3,2
  5281  003F' 2800'              	goto	u4371
  5282  0040' 2800'              	goto	u4370
  5283  0041'                    u4371:
  5284  0041' 2800'              	goto	l2941
  5285  0042'                    u4370:
  5286  0042'                    l2939:
  5287  0042' 3000               	movlw	0
  5288  0043' 0087'              	movwf	___flmul@a+3
  5289  0044' 3000               	movlw	0
  5290  0045' 0086'              	movwf	___flmul@a+2
  5291  0046' 3000               	movlw	0
  5292  0047' 0085'              	movwf	___flmul@a+1
  5293  0048' 3000               	movlw	0
  5294  0049' 0084'              	movwf	___flmul@a
  5295  004A'                    l2941:
  5296  004A' 1786'              	bsf	___flmul@a+2,7
  5297  004B' 2800'              	goto	l2945
  5298  004C'                    l2943:
  5299  004C' 3000               	movlw	0
  5300  004D' 0087'              	movwf	___flmul@a+3
  5301  004E' 3000               	movlw	0
  5302  004F' 0086'              	movwf	___flmul@a+2
  5303  0050' 3000               	movlw	0
  5304  0051' 0085'              	movwf	___flmul@a+1
  5305  0052' 3000               	movlw	0
  5306  0053' 0084'              	movwf	___flmul@a
  5307  0054'                    l2945:
  5308  0054' 0812'              	movf	___flmul@aexp,w
  5309  0055' 1903               	btfsc	3,2
  5310  0056' 2800'              	goto	u4381
  5311  0057' 2800'              	goto	u4380
  5312  0058'                    u4381:
  5313  0058' 2800'              	goto	l2949
  5314  0059'                    u4380:
  5315  0059'                    l2947:
  5316  0059' 0813'              	movf	___flmul@bexp,w
  5317  005A' 1D03               	btfss	3,2
  5318  005B' 2800'              	goto	u4391
  5319  005C' 2800'              	goto	u4390
  5320  005D'                    u4391:
  5321  005D' 2800'              	goto	l2953
  5322  005E'                    u4390:
  5323  005E'                    l2949:
  5324  005E' 3000               	movlw	0
  5325  005F' 0083'              	movwf	?___flmul+3
  5326  0060' 3000               	movlw	0
  5327  0061' 0082'              	movwf	?___flmul+2
  5328  0062' 3000               	movlw	0
  5329  0063' 0081'              	movwf	?___flmul+1
  5330  0064' 3000               	movlw	0
  5331  0065' 0080'              	movwf	?___flmul
  5332  0066' 2800'              	goto	l801
  5333  0067'                    l2953:
  5334  0067' 0800'              	movf	___flmul@b,w
  5335  0068' 0080'              	movwf	__Umul8_16@multiplicand
  5336  0069' 0806'              	movf	___flmul@a+2,w
  5337  006A' 120A' 118A' 2000' 120A' 118A' 	fcall	__Umul8_16
  5338  006F' 0801'              	movf	?__Umul8_16+1,w
  5339  0070' 1283               	bcf	3,5	;RP0=0, select bank0
  5340  0071' 1303               	bcf	3,6	;RP1=0, select bank0
  5341  0072' 0099'              	movwf	___flmul@temp+1
  5342  0073' 0800'              	movf	?__Umul8_16,w
  5343  0074' 0098'              	movwf	___flmul@temp
  5344  0075'                    l2955:
  5345  0075' 0818'              	movf	___flmul@temp,w
  5346  0076' 0088'              	movwf	??___flmul
  5347  0077' 0189'              	clrf	??___flmul+1
  5348  0078' 018A'              	clrf	??___flmul+2
  5349  0079' 018B'              	clrf	??___flmul+3
  5350  007A' 080B'              	movf	??___flmul+3,w
  5351  007B' 0091'              	movwf	___flmul@grs+3
  5352  007C' 080A'              	movf	??___flmul+2,w
  5353  007D' 0090'              	movwf	___flmul@grs+2
  5354  007E' 0809'              	movf	??___flmul+1,w
  5355  007F' 008F'              	movwf	___flmul@grs+1
  5356  0080' 0808'              	movf	??___flmul,w
  5357  0081' 008E'              	movwf	___flmul@grs
  5358  0082'                    l2957:
  5359  0082' 0819'              	movf	___flmul@temp+1,w
  5360  0083' 0088'              	movwf	??___flmul
  5361  0084' 0189'              	clrf	??___flmul+1
  5362  0085' 018A'              	clrf	??___flmul+2
  5363  0086' 018B'              	clrf	??___flmul+3
  5364  0087' 080B'              	movf	??___flmul+3,w
  5365  0088' 0097'              	movwf	___flmul@prod+3
  5366  0089' 080A'              	movf	??___flmul+2,w
  5367  008A' 0096'              	movwf	___flmul@prod+2
  5368  008B' 0809'              	movf	??___flmul+1,w
  5369  008C' 0095'              	movwf	___flmul@prod+1
  5370  008D' 0808'              	movf	??___flmul,w
  5371  008E' 0094'              	movwf	___flmul@prod
  5372  008F' 0801'              	movf	___flmul@b+1,w
  5373  0090' 0080'              	movwf	__Umul8_16@multiplicand
  5374  0091' 0805'              	movf	___flmul@a+1,w
  5375  0092' 120A' 118A' 2000' 120A' 118A' 	fcall	__Umul8_16
  5376  0097' 0801'              	movf	?__Umul8_16+1,w
  5377  0098' 1283               	bcf	3,5	;RP0=0, select bank0
  5378  0099' 1303               	bcf	3,6	;RP1=0, select bank0
  5379  009A' 0099'              	movwf	___flmul@temp+1
  5380  009B' 0800'              	movf	?__Umul8_16,w
  5381  009C' 0098'              	movwf	___flmul@temp
  5382  009D'                    l2959:
  5383  009D' 0818'              	movf	___flmul@temp,w
  5384  009E' 0088'              	movwf	??___flmul
  5385  009F' 0189'              	clrf	??___flmul+1
  5386  00A0' 018A'              	clrf	??___flmul+2
  5387  00A1' 018B'              	clrf	??___flmul+3
  5388  00A2' 0808'              	movf	??___flmul,w
  5389  00A3' 078E'              	addwf	___flmul@grs,f
  5390  00A4' 0809'              	movf	??___flmul+1,w
  5391  00A5' 1103               	clrz
  5392  00A6' 1803               	skipnc
  5393  00A7' 3E01               	addlw	1
  5394  00A8' 1903               	skipnz
  5395  00A9' 2800'              	goto	u4401
  5396  00AA' 078F'              	addwf	___flmul@grs+1,f
  5397  00AB'                    u4401:
  5398  00AB' 080A'              	movf	??___flmul+2,w
  5399  00AC' 1103               	clrz
  5400  00AD' 1803               	skipnc
  5401  00AE' 3E01               	addlw	1
  5402  00AF' 1903               	skipnz
  5403  00B0' 2800'              	goto	u4402
  5404  00B1' 0790'              	addwf	___flmul@grs+2,f
  5405  00B2'                    u4402:
  5406  00B2' 080B'              	movf	??___flmul+3,w
  5407  00B3' 1103               	clrz
  5408  00B4' 1803               	skipnc
  5409  00B5' 3E01               	addlw	1
  5410  00B6' 1903               	skipnz
  5411  00B7' 2800'              	goto	u4403
  5412  00B8' 0791'              	addwf	___flmul@grs+3,f
  5413  00B9'                    u4403:
  5414  00B9'                    l2961:
  5415  00B9' 0819'              	movf	___flmul@temp+1,w
  5416  00BA' 0088'              	movwf	??___flmul
  5417  00BB' 0189'              	clrf	??___flmul+1
  5418  00BC' 018A'              	clrf	??___flmul+2
  5419  00BD' 018B'              	clrf	??___flmul+3
  5420  00BE' 0808'              	movf	??___flmul,w
  5421  00BF' 0794'              	addwf	___flmul@prod,f
  5422  00C0' 0809'              	movf	??___flmul+1,w
  5423  00C1' 1103               	clrz
  5424  00C2' 1803               	skipnc
  5425  00C3' 3E01               	addlw	1
  5426  00C4' 1903               	skipnz
  5427  00C5' 2800'              	goto	u4411
  5428  00C6' 0795'              	addwf	___flmul@prod+1,f
  5429  00C7'                    u4411:
  5430  00C7' 080A'              	movf	??___flmul+2,w
  5431  00C8' 1103               	clrz
  5432  00C9' 1803               	skipnc
  5433  00CA' 3E01               	addlw	1
  5434  00CB' 1903               	skipnz
  5435  00CC' 2800'              	goto	u4412
  5436  00CD' 0796'              	addwf	___flmul@prod+2,f
  5437  00CE'                    u4412:
  5438  00CE' 080B'              	movf	??___flmul+3,w
  5439  00CF' 1103               	clrz
  5440  00D0' 1803               	skipnc
  5441  00D1' 3E01               	addlw	1
  5442  00D2' 1903               	skipnz
  5443  00D3' 2800'              	goto	u4413
  5444  00D4' 0797'              	addwf	___flmul@prod+3,f
  5445  00D5'                    u4413:
  5446  00D5' 0802'              	movf	___flmul@b+2,w
  5447  00D6' 0080'              	movwf	__Umul8_16@multiplicand
  5448  00D7' 0804'              	movf	___flmul@a,w
  5449  00D8' 120A' 118A' 2000' 120A' 118A' 	fcall	__Umul8_16
  5450  00DD' 0801'              	movf	?__Umul8_16+1,w
  5451  00DE' 1283               	bcf	3,5	;RP0=0, select bank0
  5452  00DF' 1303               	bcf	3,6	;RP1=0, select bank0
  5453  00E0' 0099'              	movwf	___flmul@temp+1
  5454  00E1' 0800'              	movf	?__Umul8_16,w
  5455  00E2' 0098'              	movwf	___flmul@temp
  5456  00E3'                    l2963:
  5457  00E3' 0818'              	movf	___flmul@temp,w
  5458  00E4' 0088'              	movwf	??___flmul
  5459  00E5' 0189'              	clrf	??___flmul+1
  5460  00E6' 018A'              	clrf	??___flmul+2
  5461  00E7' 018B'              	clrf	??___flmul+3
  5462  00E8' 0808'              	movf	??___flmul,w
  5463  00E9' 078E'              	addwf	___flmul@grs,f
  5464  00EA' 0809'              	movf	??___flmul+1,w
  5465  00EB' 1103               	clrz
  5466  00EC' 1803               	skipnc
  5467  00ED' 3E01               	addlw	1
  5468  00EE' 1903               	skipnz
  5469  00EF' 2800'              	goto	u4421
  5470  00F0' 078F'              	addwf	___flmul@grs+1,f
  5471  00F1'                    u4421:
  5472  00F1' 080A'              	movf	??___flmul+2,w
  5473  00F2' 1103               	clrz
  5474  00F3' 1803               	skipnc
  5475  00F4' 3E01               	addlw	1
  5476  00F5' 1903               	skipnz
  5477  00F6' 2800'              	goto	u4422
  5478  00F7' 0790'              	addwf	___flmul@grs+2,f
  5479  00F8'                    u4422:
  5480  00F8' 080B'              	movf	??___flmul+3,w
  5481  00F9' 1103               	clrz
  5482  00FA' 1803               	skipnc
  5483  00FB' 3E01               	addlw	1
  5484  00FC' 1903               	skipnz
  5485  00FD' 2800'              	goto	u4423
  5486  00FE' 0791'              	addwf	___flmul@grs+3,f
  5487  00FF'                    u4423:
  5488  00FF'                    l2965:
  5489  00FF' 0819'              	movf	___flmul@temp+1,w
  5490  0100' 0088'              	movwf	??___flmul
  5491  0101' 0189'              	clrf	??___flmul+1
  5492  0102' 018A'              	clrf	??___flmul+2
  5493  0103' 018B'              	clrf	??___flmul+3
  5494  0104' 0808'              	movf	??___flmul,w
  5495  0105' 0794'              	addwf	___flmul@prod,f
  5496  0106' 0809'              	movf	??___flmul+1,w
  5497  0107' 1103               	clrz
  5498  0108' 1803               	skipnc
  5499  0109' 3E01               	addlw	1
  5500  010A' 1903               	skipnz
  5501  010B' 2800'              	goto	u4431
  5502  010C' 0795'              	addwf	___flmul@prod+1,f
  5503  010D'                    u4431:
  5504  010D' 080A'              	movf	??___flmul+2,w
  5505  010E' 1103               	clrz
  5506  010F' 1803               	skipnc
  5507  0110' 3E01               	addlw	1
  5508  0111' 1903               	skipnz
  5509  0112' 2800'              	goto	u4432
  5510  0113' 0796'              	addwf	___flmul@prod+2,f
  5511  0114'                    u4432:
  5512  0114' 080B'              	movf	??___flmul+3,w
  5513  0115' 1103               	clrz
  5514  0116' 1803               	skipnc
  5515  0117' 3E01               	addlw	1
  5516  0118' 1903               	skipnz
  5517  0119' 2800'              	goto	u4433
  5518  011A' 0797'              	addwf	___flmul@prod+3,f
  5519  011B'                    u4433:
  5520  011B'                    l2967:
  5521  011B' 3008               	movlw	8
  5522  011C' 0088'              	movwf	??___flmul
  5523  011D'                    u4445:
  5524  011D' 1003               	clrc
  5525  011E' 0D8E'              	rlf	___flmul@grs,f
  5526  011F' 0D8F'              	rlf	___flmul@grs+1,f
  5527  0120' 0D90'              	rlf	___flmul@grs+2,f
  5528  0121' 0D91'              	rlf	___flmul@grs+3,f
  5529  0122' 0B88'              	decfsz	??___flmul,f
  5530  0123' 2800'              	goto	u4445
  5531  0124'                    l2969:
  5532  0124' 0801'              	movf	___flmul@b+1,w
  5533  0125' 0080'              	movwf	__Umul8_16@multiplicand
  5534  0126' 0804'              	movf	___flmul@a,w
  5535  0127' 120A' 118A' 2000' 120A' 118A' 	fcall	__Umul8_16
  5536  012C' 0801'              	movf	?__Umul8_16+1,w
  5537  012D' 1283               	bcf	3,5	;RP0=0, select bank0
  5538  012E' 1303               	bcf	3,6	;RP1=0, select bank0
  5539  012F' 0099'              	movwf	___flmul@temp+1
  5540  0130' 0800'              	movf	?__Umul8_16,w
  5541  0131' 0098'              	movwf	___flmul@temp
  5542  0132'                    l2971:
  5543  0132' 0818'              	movf	___flmul@temp,w
  5544  0133' 0088'              	movwf	??___flmul
  5545  0134' 0819'              	movf	___flmul@temp+1,w
  5546  0135' 0089'              	movwf	??___flmul+1
  5547  0136' 018A'              	clrf	??___flmul+2
  5548  0137' 018B'              	clrf	??___flmul+3
  5549  0138' 0808'              	movf	??___flmul,w
  5550  0139' 078E'              	addwf	___flmul@grs,f
  5551  013A' 0809'              	movf	??___flmul+1,w
  5552  013B' 1103               	clrz
  5553  013C' 1803               	skipnc
  5554  013D' 3E01               	addlw	1
  5555  013E' 1903               	skipnz
  5556  013F' 2800'              	goto	u4451
  5557  0140' 078F'              	addwf	___flmul@grs+1,f
  5558  0141'                    u4451:
  5559  0141' 080A'              	movf	??___flmul+2,w
  5560  0142' 1103               	clrz
  5561  0143' 1803               	skipnc
  5562  0144' 3E01               	addlw	1
  5563  0145' 1903               	skipnz
  5564  0146' 2800'              	goto	u4452
  5565  0147' 0790'              	addwf	___flmul@grs+2,f
  5566  0148'                    u4452:
  5567  0148' 080B'              	movf	??___flmul+3,w
  5568  0149' 1103               	clrz
  5569  014A' 1803               	skipnc
  5570  014B' 3E01               	addlw	1
  5571  014C' 1903               	skipnz
  5572  014D' 2800'              	goto	u4453
  5573  014E' 0791'              	addwf	___flmul@grs+3,f
  5574  014F'                    u4453:
  5575  014F'                    l2973:
  5576  014F' 0800'              	movf	___flmul@b,w
  5577  0150' 0080'              	movwf	__Umul8_16@multiplicand
  5578  0151' 0805'              	movf	___flmul@a+1,w
  5579  0152' 120A' 118A' 2000' 120A' 118A' 	fcall	__Umul8_16
  5580  0157' 0801'              	movf	?__Umul8_16+1,w
  5581  0158' 1283               	bcf	3,5	;RP0=0, select bank0
  5582  0159' 1303               	bcf	3,6	;RP1=0, select bank0
  5583  015A' 0099'              	movwf	___flmul@temp+1
  5584  015B' 0800'              	movf	?__Umul8_16,w
  5585  015C' 0098'              	movwf	___flmul@temp
  5586  015D'                    l2975:
  5587  015D' 0818'              	movf	___flmul@temp,w
  5588  015E' 0088'              	movwf	??___flmul
  5589  015F' 0819'              	movf	___flmul@temp+1,w
  5590  0160' 0089'              	movwf	??___flmul+1
  5591  0161' 018A'              	clrf	??___flmul+2
  5592  0162' 018B'              	clrf	??___flmul+3
  5593  0163' 0808'              	movf	??___flmul,w
  5594  0164' 078E'              	addwf	___flmul@grs,f
  5595  0165' 0809'              	movf	??___flmul+1,w
  5596  0166' 1103               	clrz
  5597  0167' 1803               	skipnc
  5598  0168' 3E01               	addlw	1
  5599  0169' 1903               	skipnz
  5600  016A' 2800'              	goto	u4461
  5601  016B' 078F'              	addwf	___flmul@grs+1,f
  5602  016C'                    u4461:
  5603  016C' 080A'              	movf	??___flmul+2,w
  5604  016D' 1103               	clrz
  5605  016E' 1803               	skipnc
  5606  016F' 3E01               	addlw	1
  5607  0170' 1903               	skipnz
  5608  0171' 2800'              	goto	u4462
  5609  0172' 0790'              	addwf	___flmul@grs+2,f
  5610  0173'                    u4462:
  5611  0173' 080B'              	movf	??___flmul+3,w
  5612  0174' 1103               	clrz
  5613  0175' 1803               	skipnc
  5614  0176' 3E01               	addlw	1
  5615  0177' 1903               	skipnz
  5616  0178' 2800'              	goto	u4463
  5617  0179' 0791'              	addwf	___flmul@grs+3,f
  5618  017A'                    u4463:
  5619  017A'                    l2977:
  5620  017A' 3008               	movlw	8
  5621  017B' 0088'              	movwf	??___flmul
  5622  017C'                    u4475:
  5623  017C' 1003               	clrc
  5624  017D' 0D8E'              	rlf	___flmul@grs,f
  5625  017E' 0D8F'              	rlf	___flmul@grs+1,f
  5626  017F' 0D90'              	rlf	___flmul@grs+2,f
  5627  0180' 0D91'              	rlf	___flmul@grs+3,f
  5628  0181' 0B88'              	decfsz	??___flmul,f
  5629  0182' 2800'              	goto	u4475
  5630  0183' 0800'              	movf	___flmul@b,w
  5631  0184' 0080'              	movwf	__Umul8_16@multiplicand
  5632  0185' 0804'              	movf	___flmul@a,w
  5633  0186' 120A' 118A' 2000' 120A' 118A' 	fcall	__Umul8_16
  5634  018B' 0801'              	movf	?__Umul8_16+1,w
  5635  018C' 1283               	bcf	3,5	;RP0=0, select bank0
  5636  018D' 1303               	bcf	3,6	;RP1=0, select bank0
  5637  018E' 0099'              	movwf	___flmul@temp+1
  5638  018F' 0800'              	movf	?__Umul8_16,w
  5639  0190' 0098'              	movwf	___flmul@temp
  5640  0191'                    l2979:
  5641  0191' 0818'              	movf	___flmul@temp,w
  5642  0192' 0088'              	movwf	??___flmul
  5643  0193' 0819'              	movf	___flmul@temp+1,w
  5644  0194' 0089'              	movwf	??___flmul+1
  5645  0195' 018A'              	clrf	??___flmul+2
  5646  0196' 018B'              	clrf	??___flmul+3
  5647  0197' 0808'              	movf	??___flmul,w
  5648  0198' 078E'              	addwf	___flmul@grs,f
  5649  0199' 0809'              	movf	??___flmul+1,w
  5650  019A' 1103               	clrz
  5651  019B' 1803               	skipnc
  5652  019C' 3E01               	addlw	1
  5653  019D' 1903               	skipnz
  5654  019E' 2800'              	goto	u4481
  5655  019F' 078F'              	addwf	___flmul@grs+1,f
  5656  01A0'                    u4481:
  5657  01A0' 080A'              	movf	??___flmul+2,w
  5658  01A1' 1103               	clrz
  5659  01A2' 1803               	skipnc
  5660  01A3' 3E01               	addlw	1
  5661  01A4' 1903               	skipnz
  5662  01A5' 2800'              	goto	u4482
  5663  01A6' 0790'              	addwf	___flmul@grs+2,f
  5664  01A7'                    u4482:
  5665  01A7' 080B'              	movf	??___flmul+3,w
  5666  01A8' 1103               	clrz
  5667  01A9' 1803               	skipnc
  5668  01AA' 3E01               	addlw	1
  5669  01AB' 1903               	skipnz
  5670  01AC' 2800'              	goto	u4483
  5671  01AD' 0791'              	addwf	___flmul@grs+3,f
  5672  01AE'                    u4483:
  5673  01AE'                    l2981:
  5674  01AE' 0801'              	movf	___flmul@b+1,w
  5675  01AF' 0080'              	movwf	__Umul8_16@multiplicand
  5676  01B0' 0806'              	movf	___flmul@a+2,w
  5677  01B1' 120A' 118A' 2000' 120A' 118A' 	fcall	__Umul8_16
  5678  01B6' 0801'              	movf	?__Umul8_16+1,w
  5679  01B7' 1283               	bcf	3,5	;RP0=0, select bank0
  5680  01B8' 1303               	bcf	3,6	;RP1=0, select bank0
  5681  01B9' 0099'              	movwf	___flmul@temp+1
  5682  01BA' 0800'              	movf	?__Umul8_16,w
  5683  01BB' 0098'              	movwf	___flmul@temp
  5684  01BC' 0818'              	movf	___flmul@temp,w
  5685  01BD' 0088'              	movwf	??___flmul
  5686  01BE' 0819'              	movf	___flmul@temp+1,w
  5687  01BF' 0089'              	movwf	??___flmul+1
  5688  01C0' 018A'              	clrf	??___flmul+2
  5689  01C1' 018B'              	clrf	??___flmul+3
  5690  01C2' 0808'              	movf	??___flmul,w
  5691  01C3' 0794'              	addwf	___flmul@prod,f
  5692  01C4' 0809'              	movf	??___flmul+1,w
  5693  01C5' 1103               	clrz
  5694  01C6' 1803               	skipnc
  5695  01C7' 3E01               	addlw	1
  5696  01C8' 1903               	skipnz
  5697  01C9' 2800'              	goto	u4491
  5698  01CA' 0795'              	addwf	___flmul@prod+1,f
  5699  01CB'                    u4491:
  5700  01CB' 080A'              	movf	??___flmul+2,w
  5701  01CC' 1103               	clrz
  5702  01CD' 1803               	skipnc
  5703  01CE' 3E01               	addlw	1
  5704  01CF' 1903               	skipnz
  5705  01D0' 2800'              	goto	u4492
  5706  01D1' 0796'              	addwf	___flmul@prod+2,f
  5707  01D2'                    u4492:
  5708  01D2' 080B'              	movf	??___flmul+3,w
  5709  01D3' 1103               	clrz
  5710  01D4' 1803               	skipnc
  5711  01D5' 3E01               	addlw	1
  5712  01D6' 1903               	skipnz
  5713  01D7' 2800'              	goto	u4493
  5714  01D8' 0797'              	addwf	___flmul@prod+3,f
  5715  01D9'                    u4493:
  5716  01D9'                    l2983:
  5717  01D9' 0802'              	movf	___flmul@b+2,w
  5718  01DA' 0080'              	movwf	__Umul8_16@multiplicand
  5719  01DB' 0805'              	movf	___flmul@a+1,w
  5720  01DC' 120A' 118A' 2000' 120A' 118A' 	fcall	__Umul8_16
  5721  01E1' 0801'              	movf	?__Umul8_16+1,w
  5722  01E2' 1283               	bcf	3,5	;RP0=0, select bank0
  5723  01E3' 1303               	bcf	3,6	;RP1=0, select bank0
  5724  01E4' 0099'              	movwf	___flmul@temp+1
  5725  01E5' 0800'              	movf	?__Umul8_16,w
  5726  01E6' 0098'              	movwf	___flmul@temp
  5727  01E7'                    l2985:
  5728  01E7' 0818'              	movf	___flmul@temp,w
  5729  01E8' 0088'              	movwf	??___flmul
  5730  01E9' 0819'              	movf	___flmul@temp+1,w
  5731  01EA' 0089'              	movwf	??___flmul+1
  5732  01EB' 018A'              	clrf	??___flmul+2
  5733  01EC' 018B'              	clrf	??___flmul+3
  5734  01ED' 0808'              	movf	??___flmul,w
  5735  01EE' 0794'              	addwf	___flmul@prod,f
  5736  01EF' 0809'              	movf	??___flmul+1,w
  5737  01F0' 1103               	clrz
  5738  01F1' 1803               	skipnc
  5739  01F2' 3E01               	addlw	1
  5740  01F3' 1903               	skipnz
  5741  01F4' 2800'              	goto	u4501
  5742  01F5' 0795'              	addwf	___flmul@prod+1,f
  5743  01F6'                    u4501:
  5744  01F6' 080A'              	movf	??___flmul+2,w
  5745  01F7' 1103               	clrz
  5746  01F8' 1803               	skipnc
  5747  01F9' 3E01               	addlw	1
  5748  01FA' 1903               	skipnz
  5749  01FB' 2800'              	goto	u4502
  5750  01FC' 0796'              	addwf	___flmul@prod+2,f
  5751  01FD'                    u4502:
  5752  01FD' 080B'              	movf	??___flmul+3,w
  5753  01FE' 1103               	clrz
  5754  01FF' 1803               	skipnc
  5755  0200' 3E01               	addlw	1
  5756  0201' 1903               	skipnz
  5757  0202' 2800'              	goto	u4503
  5758  0203' 0797'              	addwf	___flmul@prod+3,f
  5759  0204'                    u4503:
  5760  0204' 0802'              	movf	___flmul@b+2,w
  5761  0205' 0080'              	movwf	__Umul8_16@multiplicand
  5762  0206' 0806'              	movf	___flmul@a+2,w
  5763  0207' 120A' 118A' 2000' 120A' 118A' 	fcall	__Umul8_16
  5764  020C' 0801'              	movf	?__Umul8_16+1,w
  5765  020D' 1283               	bcf	3,5	;RP0=0, select bank0
  5766  020E' 1303               	bcf	3,6	;RP1=0, select bank0
  5767  020F' 0099'              	movwf	___flmul@temp+1
  5768  0210' 0800'              	movf	?__Umul8_16,w
  5769  0211' 0098'              	movwf	___flmul@temp
  5770  0212'                    l2987:
  5771  0212' 0818'              	movf	___flmul@temp,w
  5772  0213' 0088'              	movwf	??___flmul
  5773  0214' 0819'              	movf	___flmul@temp+1,w
  5774  0215' 0089'              	movwf	??___flmul+1
  5775  0216' 018A'              	clrf	??___flmul+2
  5776  0217' 018B'              	clrf	??___flmul+3
  5777  0218' 3008               	movlw	8
  5778  0219'                    u4515:
  5779  0219' 1003               	clrc
  5780  021A' 0D88'              	rlf	??___flmul,f
  5781  021B' 0D89'              	rlf	??___flmul+1,f
  5782  021C' 0D8A'              	rlf	??___flmul+2,f
  5783  021D' 0D8B'              	rlf	??___flmul+3,f
  5784  021E'                    u4510:
  5785  021E' 3EFF               	addlw	-1
  5786  021F' 1D03               	skipz
  5787  0220' 2800'              	goto	u4515
  5788  0221' 0808'              	movf	??___flmul,w
  5789  0222' 0794'              	addwf	___flmul@prod,f
  5790  0223' 0809'              	movf	??___flmul+1,w
  5791  0224' 1103               	clrz
  5792  0225' 1803               	skipnc
  5793  0226' 3E01               	addlw	1
  5794  0227' 1903               	skipnz
  5795  0228' 2800'              	goto	u4521
  5796  0229' 0795'              	addwf	___flmul@prod+1,f
  5797  022A'                    u4521:
  5798  022A' 080A'              	movf	??___flmul+2,w
  5799  022B' 1103               	clrz
  5800  022C' 1803               	skipnc
  5801  022D' 3E01               	addlw	1
  5802  022E' 1903               	skipnz
  5803  022F' 2800'              	goto	u4522
  5804  0230' 0796'              	addwf	___flmul@prod+2,f
  5805  0231'                    u4522:
  5806  0231' 080B'              	movf	??___flmul+3,w
  5807  0232' 1103               	clrz
  5808  0233' 1803               	skipnc
  5809  0234' 3E01               	addlw	1
  5810  0235' 1903               	skipnz
  5811  0236' 2800'              	goto	u4523
  5812  0237' 0797'              	addwf	___flmul@prod+3,f
  5813  0238'                    u4523:
  5814  0238'                    l2989:
  5815  0238' 080E'              	movf	___flmul@grs,w
  5816  0239' 0088'              	movwf	??___flmul
  5817  023A' 080F'              	movf	___flmul@grs+1,w
  5818  023B' 0089'              	movwf	??___flmul+1
  5819  023C' 0810'              	movf	___flmul@grs+2,w
  5820  023D' 008A'              	movwf	??___flmul+2
  5821  023E' 0811'              	movf	___flmul@grs+3,w
  5822  023F' 008B'              	movwf	??___flmul+3
  5823  0240' 3018               	movlw	24
  5824  0241'                    u4535:
  5825  0241' 1003               	clrc
  5826  0242' 0C8B'              	rrf	??___flmul+3,f
  5827  0243' 0C8A'              	rrf	??___flmul+2,f
  5828  0244' 0C89'              	rrf	??___flmul+1,f
  5829  0245' 0C88'              	rrf	??___flmul,f
  5830  0246'                    u4530:
  5831  0246' 3EFF               	addlw	-1
  5832  0247' 1D03               	skipz
  5833  0248' 2800'              	goto	u4535
  5834  0249' 0808'              	movf	??___flmul,w
  5835  024A' 0794'              	addwf	___flmul@prod,f
  5836  024B' 0809'              	movf	??___flmul+1,w
  5837  024C' 1103               	clrz
  5838  024D' 1803               	skipnc
  5839  024E' 3E01               	addlw	1
  5840  024F' 1903               	skipnz
  5841  0250' 2800'              	goto	u4541
  5842  0251' 0795'              	addwf	___flmul@prod+1,f
  5843  0252'                    u4541:
  5844  0252' 080A'              	movf	??___flmul+2,w
  5845  0253' 1103               	clrz
  5846  0254' 1803               	skipnc
  5847  0255' 3E01               	addlw	1
  5848  0256' 1903               	skipnz
  5849  0257' 2800'              	goto	u4542
  5850  0258' 0796'              	addwf	___flmul@prod+2,f
  5851  0259'                    u4542:
  5852  0259' 080B'              	movf	??___flmul+3,w
  5853  025A' 1103               	clrz
  5854  025B' 1803               	skipnc
  5855  025C' 3E01               	addlw	1
  5856  025D' 1903               	skipnz
  5857  025E' 2800'              	goto	u4543
  5858  025F' 0797'              	addwf	___flmul@prod+3,f
  5859  0260'                    u4543:
  5860  0260'                    l2991:
  5861  0260' 3008               	movlw	8
  5862  0261' 0088'              	movwf	??___flmul
  5863  0262'                    u4555:
  5864  0262' 1003               	clrc
  5865  0263' 0D8E'              	rlf	___flmul@grs,f
  5866  0264' 0D8F'              	rlf	___flmul@grs+1,f
  5867  0265' 0D90'              	rlf	___flmul@grs+2,f
  5868  0266' 0D91'              	rlf	___flmul@grs+3,f
  5869  0267' 0B88'              	decfsz	??___flmul,f
  5870  0268' 2800'              	goto	u4555
  5871  0269'                    l2993:
  5872  0269' 0813'              	movf	___flmul@bexp,w
  5873  026A' 0712'              	addwf	___flmul@aexp,w
  5874  026B' 0088'              	movwf	??___flmul
  5875  026C' 0189'              	clrf	??___flmul+1
  5876  026D' 0D89'              	rlf	??___flmul+1,f
  5877  026E' 0808'              	movf	??___flmul,w
  5878  026F' 3E82               	addlw	130
  5879  0270' 0098'              	movwf	___flmul@temp
  5880  0271' 0809'              	movf	??___flmul+1,w
  5881  0272' 1803               	skipnc
  5882  0273' 3E01               	addlw	1
  5883  0274' 3EFF               	addlw	255
  5884  0275' 0099'              	movwf	___flmul@temp+1
  5885  0276' 2800'              	goto	l3005
  5886  0277'                    l2995:
  5887  0277' 3001               	movlw	1
  5888  0278' 0088'              	movwf	??___flmul
  5889  0279'                    u4565:
  5890  0279' 1003               	clrc
  5891  027A' 0D94'              	rlf	___flmul@prod,f
  5892  027B' 0D95'              	rlf	___flmul@prod+1,f
  5893  027C' 0D96'              	rlf	___flmul@prod+2,f
  5894  027D' 0D97'              	rlf	___flmul@prod+3,f
  5895  027E' 0B88'              	decfsz	??___flmul,f
  5896  027F' 2800'              	goto	u4565
  5897  0280'                    l2997:
  5898  0280' 1F91'              	btfss	___flmul@grs+3,7
  5899  0281' 2800'              	goto	u4571
  5900  0282' 2800'              	goto	u4570
  5901  0283'                    u4571:
  5902  0283' 2800'              	goto	l3001
  5903  0284'                    u4570:
  5904  0284'                    l2999:
  5905  0284' 1414'              	bsf	___flmul@prod,0
  5906  0285'                    l3001:
  5907  0285' 3001               	movlw	1
  5908  0286' 0088'              	movwf	??___flmul
  5909  0287'                    u4585:
  5910  0287' 1003               	clrc
  5911  0288' 0D8E'              	rlf	___flmul@grs,f
  5912  0289' 0D8F'              	rlf	___flmul@grs+1,f
  5913  028A' 0D90'              	rlf	___flmul@grs+2,f
  5914  028B' 0D91'              	rlf	___flmul@grs+3,f
  5915  028C' 0B88'              	decfsz	??___flmul,f
  5916  028D' 2800'              	goto	u4585
  5917  028E'                    l3003:
  5918  028E' 30FF               	movlw	255
  5919  028F' 0798'              	addwf	___flmul@temp,f
  5920  0290' 1803               	skipnc
  5921  0291' 0A99'              	incf	___flmul@temp+1,f
  5922  0292' 30FF               	movlw	255
  5923  0293' 0799'              	addwf	___flmul@temp+1,f
  5924  0294'                    l3005:
  5925  0294' 1F96'              	btfss	___flmul@prod+2,7
  5926  0295' 2800'              	goto	u4591
  5927  0296' 2800'              	goto	u4590
  5928  0297'                    u4591:
  5929  0297' 2800'              	goto	l2995
  5930  0298'                    u4590:
  5931  0298'                    l3007:
  5932  0298' 0192'              	clrf	___flmul@aexp
  5933  0299'                    l3009:
  5934  0299' 1F91'              	btfss	___flmul@grs+3,7
  5935  029A' 2800'              	goto	u4601
  5936  029B' 2800'              	goto	u4600
  5937  029C'                    u4601:
  5938  029C' 2800'              	goto	l3017
  5939  029D'                    u4600:
  5940  029D'                    l3011:
  5941  029D' 30FF               	movlw	255
  5942  029E' 050E'              	andwf	___flmul@grs,w
  5943  029F' 0088'              	movwf	??___flmul
  5944  02A0' 30FF               	movlw	255
  5945  02A1' 050F'              	andwf	___flmul@grs+1,w
  5946  02A2' 0089'              	movwf	??___flmul+1
  5947  02A3' 30FF               	movlw	255
  5948  02A4' 0510'              	andwf	___flmul@grs+2,w
  5949  02A5' 008A'              	movwf	??___flmul+2
  5950  02A6' 307F               	movlw	127
  5951  02A7' 0511'              	andwf	___flmul@grs+3,w
  5952  02A8' 008B'              	movwf	??___flmul+3
  5953  02A9' 080B'              	movf	??___flmul+3,w
  5954  02AA' 040A'              	iorwf	??___flmul+2,w
  5955  02AB' 0409'              	iorwf	??___flmul+1,w
  5956  02AC' 0408'              	iorwf	??___flmul,w
  5957  02AD' 1903               	skipnz
  5958  02AE' 2800'              	goto	u4611
  5959  02AF' 2800'              	goto	u4610
  5960  02B0'                    u4611:
  5961  02B0' 2800'              	goto	l807
  5962  02B1'                    u4610:
  5963  02B1'                    l3013:
  5964  02B1' 0192'              	clrf	___flmul@aexp
  5965  02B2' 0A92'              	incf	___flmul@aexp,f
  5966  02B3' 2800'              	goto	l3017
  5967  02B4'                    l807:
  5968  02B4' 1C14'              	btfss	___flmul@prod,0
  5969  02B5' 2800'              	goto	u4621
  5970  02B6' 2800'              	goto	u4620
  5971  02B7'                    u4621:
  5972  02B7' 2800'              	goto	l3017
  5973  02B8'                    u4620:
  5974  02B8' 2800'              	goto	l3013
  5975  02B9'                    l3017:
  5976  02B9' 0812'              	movf	___flmul@aexp,w
  5977  02BA' 1903               	btfsc	3,2
  5978  02BB' 2800'              	goto	u4631
  5979  02BC' 2800'              	goto	u4630
  5980  02BD'                    u4631:
  5981  02BD' 2800'              	goto	l3027
  5982  02BE'                    u4630:
  5983  02BE'                    l3019:
  5984  02BE' 3001               	movlw	1
  5985  02BF' 0794'              	addwf	___flmul@prod,f
  5986  02C0' 3000               	movlw	0
  5987  02C1' 1803               	skipnc
  5988  02C2' 3001               	movlw	1
  5989  02C3' 0795'              	addwf	___flmul@prod+1,f
  5990  02C4' 3000               	movlw	0
  5991  02C5' 1803               	skipnc
  5992  02C6' 3001               	movlw	1
  5993  02C7' 0796'              	addwf	___flmul@prod+2,f
  5994  02C8' 3000               	movlw	0
  5995  02C9' 1803               	skipnc
  5996  02CA' 3001               	movlw	1
  5997  02CB' 0797'              	addwf	___flmul@prod+3,f
  5998  02CC'                    l3021:
  5999  02CC' 1C17'              	btfss	___flmul@prod+3,0
  6000  02CD' 2800'              	goto	u4641
  6001  02CE' 2800'              	goto	u4640
  6002  02CF'                    u4641:
  6003  02CF' 2800'              	goto	l3027
  6004  02D0'                    u4640:
  6005  02D0'                    l3023:
  6006  02D0' 0814'              	movf	___flmul@prod,w
  6007  02D1' 0088'              	movwf	??___flmul
  6008  02D2' 0815'              	movf	___flmul@prod+1,w
  6009  02D3' 0089'              	movwf	??___flmul+1
  6010  02D4' 0816'              	movf	___flmul@prod+2,w
  6011  02D5' 008A'              	movwf	??___flmul+2
  6012  02D6' 0817'              	movf	___flmul@prod+3,w
  6013  02D7' 008B'              	movwf	??___flmul+3
  6014  02D8' 3001               	movlw	1
  6015  02D9' 008C'              	movwf	??___flmul+4
  6016  02DA'                    u4655:
  6017  02DA' 0D0B'              	rlf	??___flmul+3,w
  6018  02DB' 0C8B'              	rrf	??___flmul+3,f
  6019  02DC' 0C8A'              	rrf	??___flmul+2,f
  6020  02DD' 0C89'              	rrf	??___flmul+1,f
  6021  02DE' 0C88'              	rrf	??___flmul,f
  6022  02DF'                    u4650:
  6023  02DF' 0B8C'              	decfsz	??___flmul+4,f
  6024  02E0' 2800'              	goto	u4655
  6025  02E1' 080B'              	movf	??___flmul+3,w
  6026  02E2' 0097'              	movwf	___flmul@prod+3
  6027  02E3' 080A'              	movf	??___flmul+2,w
  6028  02E4' 0096'              	movwf	___flmul@prod+2
  6029  02E5' 0809'              	movf	??___flmul+1,w
  6030  02E6' 0095'              	movwf	___flmul@prod+1
  6031  02E7' 0808'              	movf	??___flmul,w
  6032  02E8' 0094'              	movwf	___flmul@prod
  6033  02E9'                    l3025:
  6034  02E9' 3001               	movlw	1
  6035  02EA' 0798'              	addwf	___flmul@temp,f
  6036  02EB' 1803               	skipnc
  6037  02EC' 0A99'              	incf	___flmul@temp+1,f
  6038  02ED' 3000               	movlw	0
  6039  02EE' 0799'              	addwf	___flmul@temp+1,f
  6040  02EF'                    l3027:
  6041  02EF' 0819'              	movf	___flmul@temp+1,w
  6042  02F0' 3A80               	xorlw	128
  6043  02F1' 00FF               	movwf	btemp+1
  6044  02F2' 3080               	movlw	128
  6045  02F3' 027F               	subwf	btemp+1,w
  6046  02F4' 1D03               	skipz
  6047  02F5' 2800'              	goto	u4665
  6048  02F6' 30FF               	movlw	255
  6049  02F7' 0218'              	subwf	___flmul@temp,w
  6050  02F8'                    u4665:
  6051  02F8' 1C03               	skipc
  6052  02F9' 2800'              	goto	u4661
  6053  02FA' 2800'              	goto	u4660
  6054  02FB'                    u4661:
  6055  02FB' 2800'              	goto	l3031
  6056  02FC'                    u4660:
  6057  02FC'                    l3029:
  6058  02FC' 307F               	movlw	127
  6059  02FD' 1283               	bcf	3,5	;RP0=0, select bank0
  6060  02FE' 1303               	bcf	3,6	;RP1=0, select bank0
  6061  02FF' 0097'              	movwf	___flmul@prod+3
  6062  0300' 3080               	movlw	128
  6063  0301' 0096'              	movwf	___flmul@prod+2
  6064  0302' 3000               	movlw	0
  6065  0303' 0095'              	movwf	___flmul@prod+1
  6066  0304' 3000               	movlw	0
  6067  0305' 0094'              	movwf	___flmul@prod
  6068  0306' 2800'              	goto	l3045
  6069  0307'                    l3031:
  6070  0307' 1283               	bcf	3,5	;RP0=0, select bank0
  6071  0308' 1303               	bcf	3,6	;RP1=0, select bank0
  6072  0309' 0819'              	movf	___flmul@temp+1,w
  6073  030A' 3A80               	xorlw	128
  6074  030B' 00FF               	movwf	btemp+1
  6075  030C' 3080               	movlw	128
  6076  030D' 027F               	subwf	btemp+1,w
  6077  030E' 1D03               	skipz
  6078  030F' 2800'              	goto	u4675
  6079  0310' 3001               	movlw	1
  6080  0311' 0218'              	subwf	___flmul@temp,w
  6081  0312'                    u4675:
  6082  0312' 1803               	skipnc
  6083  0313' 2800'              	goto	u4671
  6084  0314' 2800'              	goto	u4670
  6085  0315'                    u4671:
  6086  0315' 2800'              	goto	l3037
  6087  0316'                    u4670:
  6088  0316'                    l3033:
  6089  0316' 3000               	movlw	0
  6090  0317' 1283               	bcf	3,5	;RP0=0, select bank0
  6091  0318' 1303               	bcf	3,6	;RP1=0, select bank0
  6092  0319' 0097'              	movwf	___flmul@prod+3
  6093  031A' 3000               	movlw	0
  6094  031B' 0096'              	movwf	___flmul@prod+2
  6095  031C' 3000               	movlw	0
  6096  031D' 0095'              	movwf	___flmul@prod+1
  6097  031E' 3000               	movlw	0
  6098  031F' 0094'              	movwf	___flmul@prod
  6099  0320'                    l3035:
  6100  0320' 018D'              	clrf	___flmul@sign
  6101  0321' 2800'              	goto	l3045
  6102  0322'                    l3037:
  6103  0322' 1283               	bcf	3,5	;RP0=0, select bank0
  6104  0323' 1303               	bcf	3,6	;RP1=0, select bank0
  6105  0324' 0818'              	movf	___flmul@temp,w
  6106  0325' 0093'              	movwf	___flmul@bexp
  6107  0326' 30FF               	movlw	255
  6108  0327' 0594'              	andwf	___flmul@prod,f
  6109  0328' 30FF               	movlw	255
  6110  0329' 0595'              	andwf	___flmul@prod+1,f
  6111  032A' 307F               	movlw	127
  6112  032B' 0596'              	andwf	___flmul@prod+2,f
  6113  032C' 3000               	movlw	0
  6114  032D' 0597'              	andwf	___flmul@prod+3,f
  6115  032E'                    l3039:
  6116  032E' 1C13'              	btfss	___flmul@bexp,0
  6117  032F' 2800'              	goto	u4681
  6118  0330' 2800'              	goto	u4680
  6119  0331'                    u4681:
  6120  0331' 2800'              	goto	l3043
  6121  0332'                    u4680:
  6122  0332'                    l3041:
  6123  0332' 1796'              	bsf	___flmul@prod+2,7
  6124  0333'                    l3043:
  6125  0333' 0813'              	movf	___flmul@bexp,w
  6126  0334' 0088'              	movwf	??___flmul
  6127  0335' 1003               	clrc
  6128  0336' 0C08'              	rrf	??___flmul,w
  6129  0337' 0097'              	movwf	___flmul@prod+3
  6130  0338'                    l3045:
  6131  0338' 080D'              	movf	___flmul@sign,w
  6132  0339' 00FF               	movwf	btemp+1
  6133  033A' 087F               	movf	btemp+1,w
  6134  033B' 0497'              	iorwf	___flmul@prod+3,f
  6135  033C'                    l3047:
  6136  033C' 0817'              	movf	___flmul@prod+3,w
  6137  033D' 0083'              	movwf	?___flmul+3
  6138  033E' 0816'              	movf	___flmul@prod+2,w
  6139  033F' 0082'              	movwf	?___flmul+2
  6140  0340' 0815'              	movf	___flmul@prod+1,w
  6141  0341' 0081'              	movwf	?___flmul+1
  6142  0342' 0814'              	movf	___flmul@prod,w
  6143  0343' 0080'              	movwf	?___flmul
  6144  0344'                    l801:
  6145  0344' 0008               	return
  6146  0345'                    __end_of___flmul:
  6147                           
  6148                           	psect	text10
  6149  0000'                    __ptext10:	
  6150 ;; *************** function __Umul8_16 *****************
  6151 ;; Defined at:
  6152 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul8_16.c"
  6153 ;; Parameters:    Size  Location     Type
  6154 ;;  multiplier      1    wreg     unsigned char 
  6155 ;;  multiplicand    1    0[COMMON] unsigned char 
  6156 ;; Auto vars:     Size  Location     Type
  6157 ;;  multiplier      1    8[COMMON] unsigned char 
  6158 ;;  word_mpld       2    6[COMMON] unsigned int 
  6159 ;;  product         2    4[COMMON] unsigned int 
  6160 ;; Return value:  Size  Location     Type
  6161 ;;                  2    0[COMMON] unsigned int 
  6162 ;; Registers used:
  6163 ;;		wreg, status,2, status,0
  6164 ;; Tracked objects:
  6165 ;;		On entry : 0/0
  6166 ;;		On exit  : 0/0
  6167 ;;		Unchanged: 0/0
  6168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6169 ;;      Params:         2       0       0       0       0
  6170 ;;      Locals:         5       0       0       0       0
  6171 ;;      Temps:          2       0       0       0       0
  6172 ;;      Totals:         9       0       0       0       0
  6173 ;;Total ram usage:        9 bytes
  6174 ;; Hardware stack levels used: 1
  6175 ;; This function calls:
  6176 ;;		Nothing
  6177 ;; This function is called by:
  6178 ;;		___flmul
  6179 ;; This function uses a non-reentrant model
  6180 ;;
  6181                           
  6182  0000'                    __Umul8_16:	
  6183                           ;psect for function __Umul8_16
  6184                           
  6185                           
  6186                           ;incstack = 0
  6187                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6188                           ;__Umul8_16@multiplier stored from wreg
  6189  0000' 0088'              	movwf	__Umul8_16@multiplier
  6190  0001'                    l2555:
  6191  0001' 0184'              	clrf	__Umul8_16@product
  6192  0002' 0185'              	clrf	__Umul8_16@product+1
  6193  0003'                    l2557:
  6194  0003' 0800'              	movf	__Umul8_16@multiplicand,w
  6195  0004' 0082'              	movwf	??__Umul8_16
  6196  0005' 0183'              	clrf	??__Umul8_16+1
  6197  0006' 0802'              	movf	??__Umul8_16,w
  6198  0007' 0086'              	movwf	__Umul8_16@word_mpld
  6199  0008' 0803'              	movf	??__Umul8_16+1,w
  6200  0009' 0087'              	movwf	__Umul8_16@word_mpld+1
  6201  000A'                    l2559:
  6202  000A' 1C08'              	btfss	__Umul8_16@multiplier,0
  6203  000B' 2800'              	goto	u3471
  6204  000C' 2800'              	goto	u3470
  6205  000D'                    u3471:
  6206  000D' 2800'              	goto	l820
  6207  000E'                    u3470:
  6208  000E'                    l2561:
  6209  000E' 0806'              	movf	__Umul8_16@word_mpld,w
  6210  000F' 0784'              	addwf	__Umul8_16@product,f
  6211  0010' 1803               	skipnc
  6212  0011' 0A85'              	incf	__Umul8_16@product+1,f
  6213  0012' 0807'              	movf	__Umul8_16@word_mpld+1,w
  6214  0013' 0785'              	addwf	__Umul8_16@product+1,f
  6215  0014'                    l820:
  6216  0014' 3001               	movlw	1
  6217  0015'                    u3485:
  6218  0015' 1003               	clrc
  6219  0016' 0D86'              	rlf	__Umul8_16@word_mpld,f
  6220  0017' 0D87'              	rlf	__Umul8_16@word_mpld+1,f
  6221  0018' 3EFF               	addlw	-1
  6222  0019' 1D03               	skipz
  6223  001A' 2800'              	goto	u3485
  6224  001B' 1003               	clrc
  6225  001C' 0C88'              	rrf	__Umul8_16@multiplier,f
  6226  001D'                    l2563:
  6227  001D' 0808'              	movf	__Umul8_16@multiplier,w
  6228  001E' 1D03               	btfss	3,2
  6229  001F' 2800'              	goto	u3491
  6230  0020' 2800'              	goto	u3490
  6231  0021'                    u3491:
  6232  0021' 2800'              	goto	l2559
  6233  0022'                    u3490:
  6234  0022'                    l2565:
  6235  0022' 0805'              	movf	__Umul8_16@product+1,w
  6236  0023' 0081'              	movwf	?__Umul8_16+1
  6237  0024' 0804'              	movf	__Umul8_16@product,w
  6238  0025' 0080'              	movwf	?__Umul8_16
  6239  0026'                    l822:
  6240  0026' 0008               	return
  6241  0027'                    __end_of__Umul8_16:
  6242                           
  6243                           	psect	text11
  6244  0000'                    __ptext11:	
  6245 ;; *************** function __tdiv_to_l_ *****************
  6246 ;; Defined at:
  6247 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\ftdivl.c"
  6248 ;; Parameters:    Size  Location     Type
  6249 ;;  f1              4    0[COMMON] float 
  6250 ;;  f2              4    4[COMMON] float 
  6251 ;; Auto vars:     Size  Location     Type
  6252 ;;  quot            4    0[BANK0 ] unsigned long 
  6253 ;;  exp1            1    5[BANK0 ] unsigned char 
  6254 ;;  cntr            1    4[BANK0 ] unsigned char 
  6255 ;; Return value:  Size  Location     Type
  6256 ;;                  4    0[COMMON] unsigned long 
  6257 ;; Registers used:
  6258 ;;		wreg, status,2, status,0, btemp+1
  6259 ;; Tracked objects:
  6260 ;;		On entry : 0/0
  6261 ;;		On exit  : 0/0
  6262 ;;		Unchanged: 0/0
  6263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6264 ;;      Params:         8       0       0       0       0
  6265 ;;      Locals:         0       6       0       0       0
  6266 ;;      Temps:          3       0       0       0       0
  6267 ;;      Totals:        11       6       0       0       0
  6268 ;;Total ram usage:       17 bytes
  6269 ;; Hardware stack levels used: 1
  6270 ;; This function calls:
  6271 ;;		Nothing
  6272 ;; This function is called by:
  6273 ;;		_sprintf
  6274 ;; This function uses a non-reentrant model
  6275 ;;
  6276                           
  6277  0000'                    __tdiv_to_l_:	
  6278                           ;psect for function __tdiv_to_l_
  6279                           
  6280  0000'                    l3155:	
  6281                           ;incstack = 0
  6282                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0+btemp+1]
  6283                           
  6284  0000' 0800'              	movf	__tdiv_to_l_@f1,w
  6285  0001' 0088'              	movwf	??__tdiv_to_l_
  6286  0002' 0801'              	movf	__tdiv_to_l_@f1+1,w
  6287  0003' 0089'              	movwf	??__tdiv_to_l_+1
  6288  0004' 0802'              	movf	__tdiv_to_l_@f1+2,w
  6289  0005' 008A'              	movwf	??__tdiv_to_l_+2
  6290  0006' 1003               	clrc
  6291  0007' 0D09'              	rlf	??__tdiv_to_l_+1,w
  6292  0008' 0D0A'              	rlf	??__tdiv_to_l_+2,w
  6293  0009' 1283               	bcf	3,5	;RP0=0, select bank0
  6294  000A' 1303               	bcf	3,6	;RP1=0, select bank0
  6295  000B' 0085'              	movwf	__tdiv_to_l_@exp1
  6296  000C' 0805'              	movf	__tdiv_to_l_@exp1,w
  6297  000D' 1D03               	btfss	3,2
  6298  000E' 2800'              	goto	u4981
  6299  000F' 2800'              	goto	u4980
  6300  0010'                    u4981:
  6301  0010' 2800'              	goto	l3161
  6302  0011'                    u4980:
  6303  0011'                    l3157:
  6304  0011' 3000               	movlw	0
  6305  0012' 0083'              	movwf	?__tdiv_to_l_+3
  6306  0013' 3000               	movlw	0
  6307  0014' 0082'              	movwf	?__tdiv_to_l_+2
  6308  0015' 3000               	movlw	0
  6309  0016' 0081'              	movwf	?__tdiv_to_l_+1
  6310  0017' 3000               	movlw	0
  6311  0018' 0080'              	movwf	?__tdiv_to_l_
  6312  0019' 2800'              	goto	l595
  6313  001A'                    l3161:
  6314  001A' 0804'              	movf	__tdiv_to_l_@f2,w
  6315  001B' 0088'              	movwf	??__tdiv_to_l_
  6316  001C' 0805'              	movf	__tdiv_to_l_@f2+1,w
  6317  001D' 0089'              	movwf	??__tdiv_to_l_+1
  6318  001E' 0806'              	movf	__tdiv_to_l_@f2+2,w
  6319  001F' 008A'              	movwf	??__tdiv_to_l_+2
  6320  0020' 1003               	clrc
  6321  0021' 0D09'              	rlf	??__tdiv_to_l_+1,w
  6322  0022' 0D0A'              	rlf	??__tdiv_to_l_+2,w
  6323  0023' 0084'              	movwf	__tdiv_to_l_@cntr
  6324  0024' 0804'              	movf	__tdiv_to_l_@cntr,w
  6325  0025' 1D03               	btfss	3,2
  6326  0026' 2800'              	goto	u4991
  6327  0027' 2800'              	goto	u4990
  6328  0028'                    u4991:
  6329  0028' 2800'              	goto	l596
  6330  0029'                    u4990:
  6331  0029' 2800'              	goto	l3157
  6332  002A'                    l596:
  6333  002A' 1781'              	bsf	__tdiv_to_l_@f1+1,7
  6334  002B'                    l3167:
  6335  002B' 30FF               	movlw	255
  6336  002C' 0580'              	andwf	__tdiv_to_l_@f1,f
  6337  002D' 30FF               	movlw	255
  6338  002E' 0581'              	andwf	__tdiv_to_l_@f1+1,f
  6339  002F' 3000               	movlw	0
  6340  0030' 0582'              	andwf	__tdiv_to_l_@f1+2,f
  6341  0031'                    l3169:
  6342  0031' 1785'              	bsf	__tdiv_to_l_@f2+1,7
  6343  0032' 30FF               	movlw	255
  6344  0033' 0584'              	andwf	__tdiv_to_l_@f2,f
  6345  0034' 30FF               	movlw	255
  6346  0035' 0585'              	andwf	__tdiv_to_l_@f2+1,f
  6347  0036' 3000               	movlw	0
  6348  0037' 0586'              	andwf	__tdiv_to_l_@f2+2,f
  6349  0038' 3000               	movlw	0
  6350  0039' 0083'              	movwf	__tdiv_to_l_@quot+3
  6351  003A' 3000               	movlw	0
  6352  003B' 0082'              	movwf	__tdiv_to_l_@quot+2
  6353  003C' 3000               	movlw	0
  6354  003D' 0081'              	movwf	__tdiv_to_l_@quot+1
  6355  003E' 3000               	movlw	0
  6356  003F' 0080'              	movwf	__tdiv_to_l_@quot
  6357  0040'                    l3171:
  6358  0040' 307F               	movlw	127
  6359  0041' 0285'              	subwf	__tdiv_to_l_@exp1,f
  6360  0042'                    l3173:
  6361  0042' 3098               	movlw	152
  6362  0043' 0704'              	addwf	__tdiv_to_l_@cntr,w
  6363  0044' 0088'              	movwf	??__tdiv_to_l_
  6364  0045' 0808'              	movf	??__tdiv_to_l_,w
  6365  0046' 0285'              	subwf	__tdiv_to_l_@exp1,f
  6366  0047' 3018               	movlw	24
  6367  0048' 0084'              	movwf	__tdiv_to_l_@cntr
  6368  0049'                    l3175:
  6369  0049' 3001               	movlw	1
  6370  004A' 0088'              	movwf	??__tdiv_to_l_
  6371  004B'                    u5005:
  6372  004B' 1003               	clrc
  6373  004C' 0D80'              	rlf	__tdiv_to_l_@quot,f
  6374  004D' 0D81'              	rlf	__tdiv_to_l_@quot+1,f
  6375  004E' 0D82'              	rlf	__tdiv_to_l_@quot+2,f
  6376  004F' 0D83'              	rlf	__tdiv_to_l_@quot+3,f
  6377  0050' 0B88'              	decfsz	??__tdiv_to_l_,f
  6378  0051' 2800'              	goto	u5005
  6379  0052'                    l3177:
  6380  0052' 0806'              	movf	__tdiv_to_l_@f2+2,w
  6381  0053' 0202'              	subwf	__tdiv_to_l_@f1+2,w
  6382  0054' 1D03               	skipz
  6383  0055' 2800'              	goto	u5015
  6384  0056' 0805'              	movf	__tdiv_to_l_@f2+1,w
  6385  0057' 0201'              	subwf	__tdiv_to_l_@f1+1,w
  6386  0058' 1D03               	skipz
  6387  0059' 2800'              	goto	u5015
  6388  005A' 0804'              	movf	__tdiv_to_l_@f2,w
  6389  005B' 0200'              	subwf	__tdiv_to_l_@f1,w
  6390  005C'                    u5015:
  6391  005C' 1C03               	skipc
  6392  005D' 2800'              	goto	u5011
  6393  005E' 2800'              	goto	u5010
  6394  005F'                    u5011:
  6395  005F' 2800'              	goto	l3183
  6396  0060'                    u5010:
  6397  0060'                    l3179:
  6398  0060' 0804'              	movf	__tdiv_to_l_@f2,w
  6399  0061' 0280'              	subwf	__tdiv_to_l_@f1,f
  6400  0062' 0805'              	movf	__tdiv_to_l_@f2+1,w
  6401  0063' 1C03               	skipc
  6402  0064' 0F05'              	incfsz	__tdiv_to_l_@f2+1,w
  6403  0065' 0281'              	subwf	__tdiv_to_l_@f1+1,f
  6404  0066' 0806'              	movf	__tdiv_to_l_@f2+2,w
  6405  0067' 1C03               	skipc
  6406  0068' 0A06'              	incf	__tdiv_to_l_@f2+2,w
  6407  0069' 0282'              	subwf	__tdiv_to_l_@f1+2,f
  6408  006A'                    l3181:
  6409  006A' 1400'              	bsf	__tdiv_to_l_@quot,0
  6410  006B'                    l3183:
  6411  006B' 3001               	movlw	1
  6412  006C'                    u5025:
  6413  006C' 1003               	clrc
  6414  006D' 0D80'              	rlf	__tdiv_to_l_@f1,f
  6415  006E' 0D81'              	rlf	__tdiv_to_l_@f1+1,f
  6416  006F' 0D82'              	rlf	__tdiv_to_l_@f1+2,f
  6417  0070' 3EFF               	addlw	-1
  6418  0071' 1D03               	skipz
  6419  0072' 2800'              	goto	u5025
  6420  0073'                    l3185:
  6421  0073' 3001               	movlw	1
  6422  0074' 0284'              	subwf	__tdiv_to_l_@cntr,f
  6423  0075' 1D03               	btfss	3,2
  6424  0076' 2800'              	goto	u5031
  6425  0077' 2800'              	goto	u5030
  6426  0078'                    u5031:
  6427  0078' 2800'              	goto	l3175
  6428  0079'                    u5030:
  6429  0079'                    l599:
  6430  0079' 1F85'              	btfss	__tdiv_to_l_@exp1,7
  6431  007A' 2800'              	goto	u5041
  6432  007B' 2800'              	goto	u5040
  6433  007C'                    u5041:
  6434  007C' 2800'              	goto	l3197
  6435  007D'                    u5040:
  6436  007D'                    l3187:
  6437  007D' 0805'              	movf	__tdiv_to_l_@exp1,w
  6438  007E' 3A80               	xorlw	128
  6439  007F' 3E97               	addlw	151
  6440  0080' 1803               	skipnc
  6441  0081' 2800'              	goto	u5051
  6442  0082' 2800'              	goto	u5050
  6443  0083'                    u5051:
  6444  0083' 2800'              	goto	l3193
  6445  0084'                    u5050:
  6446  0084' 2800'              	goto	l3157
  6447  0085'                    l3193:
  6448  0085' 3001               	movlw	1
  6449  0086'                    u5065:
  6450  0086' 1003               	clrc
  6451  0087' 0C83'              	rrf	__tdiv_to_l_@quot+3,f
  6452  0088' 0C82'              	rrf	__tdiv_to_l_@quot+2,f
  6453  0089' 0C81'              	rrf	__tdiv_to_l_@quot+1,f
  6454  008A' 0C80'              	rrf	__tdiv_to_l_@quot,f
  6455  008B' 3EFF               	addlw	-1
  6456  008C' 1D03               	skipz
  6457  008D' 2800'              	goto	u5065
  6458  008E'                    l3195:
  6459  008E' 3001               	movlw	1
  6460  008F' 00FF               	movwf	btemp+1
  6461  0090' 087F               	movf	btemp+1,w
  6462  0091' 0785'              	addwf	__tdiv_to_l_@exp1,f
  6463  0092' 1D03               	btfss	3,2
  6464  0093' 2800'              	goto	u5071
  6465  0094' 2800'              	goto	u5070
  6466  0095'                    u5071:
  6467  0095' 2800'              	goto	l3193
  6468  0096'                    u5070:
  6469  0096' 2800'              	goto	l3205
  6470  0097'                    l3197:
  6471  0097' 3018               	movlw	24
  6472  0098' 0205'              	subwf	__tdiv_to_l_@exp1,w
  6473  0099' 1C03               	skipc
  6474  009A' 2800'              	goto	u5081
  6475  009B' 2800'              	goto	u5080
  6476  009C'                    u5081:
  6477  009C' 2800'              	goto	l606
  6478  009D'                    u5080:
  6479  009D' 2800'              	goto	l3157
  6480  009E'                    l3203:
  6481  009E' 3001               	movlw	1
  6482  009F' 0088'              	movwf	??__tdiv_to_l_
  6483  00A0'                    u5095:
  6484  00A0' 1003               	clrc
  6485  00A1' 0D80'              	rlf	__tdiv_to_l_@quot,f
  6486  00A2' 0D81'              	rlf	__tdiv_to_l_@quot+1,f
  6487  00A3' 0D82'              	rlf	__tdiv_to_l_@quot+2,f
  6488  00A4' 0D83'              	rlf	__tdiv_to_l_@quot+3,f
  6489  00A5' 0B88'              	decfsz	??__tdiv_to_l_,f
  6490  00A6' 2800'              	goto	u5095
  6491  00A7' 3001               	movlw	1
  6492  00A8' 0285'              	subwf	__tdiv_to_l_@exp1,f
  6493  00A9'                    l606:
  6494  00A9' 0805'              	movf	__tdiv_to_l_@exp1,w
  6495  00AA' 1D03               	btfss	3,2
  6496  00AB' 2800'              	goto	u5101
  6497  00AC' 2800'              	goto	u5100
  6498  00AD'                    u5101:
  6499  00AD' 2800'              	goto	l3203
  6500  00AE'                    u5100:
  6501  00AE'                    l3205:
  6502  00AE' 0803'              	movf	__tdiv_to_l_@quot+3,w
  6503  00AF' 0083'              	movwf	?__tdiv_to_l_+3
  6504  00B0' 0802'              	movf	__tdiv_to_l_@quot+2,w
  6505  00B1' 0082'              	movwf	?__tdiv_to_l_+2
  6506  00B2' 0801'              	movf	__tdiv_to_l_@quot+1,w
  6507  00B3' 0081'              	movwf	?__tdiv_to_l_+1
  6508  00B4' 0800'              	movf	__tdiv_to_l_@quot,w
  6509  00B5' 0080'              	movwf	?__tdiv_to_l_
  6510  00B6'                    l595:
  6511  00B6' 0008               	return
  6512  00B7'                    __end_of__tdiv_to_l_:
  6513                           
  6514                           	psect	text12
  6515  0000'                    __ptext12:	
  6516 ;; *************** function __div_to_l_ *****************
  6517 ;; Defined at:
  6518 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\fldivl.c"
  6519 ;; Parameters:    Size  Location     Type
  6520 ;;  f1              4    0[COMMON] unsigned long 
  6521 ;;  f2              4    4[COMMON] unsigned long 
  6522 ;; Auto vars:     Size  Location     Type
  6523 ;;  quot            4    0[BANK0 ] unsigned long 
  6524 ;;  exp1            1    5[BANK0 ] unsigned char 
  6525 ;;  cntr            1    4[BANK0 ] unsigned char 
  6526 ;; Return value:  Size  Location     Type
  6527 ;;                  4    0[COMMON] unsigned long 
  6528 ;; Registers used:
  6529 ;;		wreg, status,2, status,0, btemp+1
  6530 ;; Tracked objects:
  6531 ;;		On entry : 0/0
  6532 ;;		On exit  : 0/0
  6533 ;;		Unchanged: 0/0
  6534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6535 ;;      Params:         8       0       0       0       0
  6536 ;;      Locals:         0       6       0       0       0
  6537 ;;      Temps:          1       0       0       0       0
  6538 ;;      Totals:         9       6       0       0       0
  6539 ;;Total ram usage:       15 bytes
  6540 ;; Hardware stack levels used: 1
  6541 ;; This function calls:
  6542 ;;		Nothing
  6543 ;; This function is called by:
  6544 ;;		_sprintf
  6545 ;; This function uses a non-reentrant model
  6546 ;;
  6547                           
  6548  0000'                    __div_to_l_:	
  6549                           ;psect for function __div_to_l_
  6550                           
  6551  0000'                    l3209:	
  6552                           ;incstack = 0
  6553                           ; Regs used in __div_to_l_: [wreg+status,2+status,0+btemp+1]
  6554                           
  6555  0000' 1003               	clrc
  6556  0001' 0D02'              	rlf	__div_to_l_@f1+2,w
  6557  0002' 0D03'              	rlf	__div_to_l_@f1+3,w
  6558  0003' 1283               	bcf	3,5	;RP0=0, select bank0
  6559  0004' 1303               	bcf	3,6	;RP1=0, select bank0
  6560  0005' 0085'              	movwf	__div_to_l_@exp1
  6561  0006' 0805'              	movf	__div_to_l_@exp1,w
  6562  0007' 1D03               	btfss	3,2
  6563  0008' 2800'              	goto	u5111
  6564  0009' 2800'              	goto	u5110
  6565  000A'                    u5111:
  6566  000A' 2800'              	goto	l3215
  6567  000B'                    u5110:
  6568  000B'                    l3211:
  6569  000B' 3000               	movlw	0
  6570  000C' 0083'              	movwf	?__div_to_l_+3
  6571  000D' 3000               	movlw	0
  6572  000E' 0082'              	movwf	?__div_to_l_+2
  6573  000F' 3000               	movlw	0
  6574  0010' 0081'              	movwf	?__div_to_l_+1
  6575  0011' 3000               	movlw	0
  6576  0012' 0080'              	movwf	?__div_to_l_
  6577  0013' 2800'              	goto	l548
  6578  0014'                    l3215:
  6579  0014' 1003               	clrc
  6580  0015' 0D06'              	rlf	__div_to_l_@f2+2,w
  6581  0016' 0D07'              	rlf	__div_to_l_@f2+3,w
  6582  0017' 0084'              	movwf	__div_to_l_@cntr
  6583  0018' 0804'              	movf	__div_to_l_@cntr,w
  6584  0019' 1D03               	btfss	3,2
  6585  001A' 2800'              	goto	u5121
  6586  001B' 2800'              	goto	u5120
  6587  001C'                    u5121:
  6588  001C' 2800'              	goto	l549
  6589  001D'                    u5120:
  6590  001D' 2800'              	goto	l3211
  6591  001E'                    l549:
  6592  001E' 1782'              	bsf	__div_to_l_@f1+2,7
  6593  001F'                    l3221:
  6594  001F' 30FF               	movlw	255
  6595  0020' 0580'              	andwf	__div_to_l_@f1,f
  6596  0021' 30FF               	movlw	255
  6597  0022' 0581'              	andwf	__div_to_l_@f1+1,f
  6598  0023' 30FF               	movlw	255
  6599  0024' 0582'              	andwf	__div_to_l_@f1+2,f
  6600  0025' 3000               	movlw	0
  6601  0026' 0583'              	andwf	__div_to_l_@f1+3,f
  6602  0027'                    l3223:
  6603  0027' 1786'              	bsf	__div_to_l_@f2+2,7
  6604  0028' 30FF               	movlw	255
  6605  0029' 0584'              	andwf	__div_to_l_@f2,f
  6606  002A' 30FF               	movlw	255
  6607  002B' 0585'              	andwf	__div_to_l_@f2+1,f
  6608  002C' 30FF               	movlw	255
  6609  002D' 0586'              	andwf	__div_to_l_@f2+2,f
  6610  002E' 3000               	movlw	0
  6611  002F' 0587'              	andwf	__div_to_l_@f2+3,f
  6612  0030' 3000               	movlw	0
  6613  0031' 0083'              	movwf	__div_to_l_@quot+3
  6614  0032' 3000               	movlw	0
  6615  0033' 0082'              	movwf	__div_to_l_@quot+2
  6616  0034' 3000               	movlw	0
  6617  0035' 0081'              	movwf	__div_to_l_@quot+1
  6618  0036' 3000               	movlw	0
  6619  0037' 0080'              	movwf	__div_to_l_@quot
  6620  0038'                    l3225:
  6621  0038' 307F               	movlw	127
  6622  0039' 0285'              	subwf	__div_to_l_@exp1,f
  6623  003A'                    l3227:
  6624  003A' 30A0               	movlw	160
  6625  003B' 0704'              	addwf	__div_to_l_@cntr,w
  6626  003C' 0088'              	movwf	??__div_to_l_
  6627  003D' 0808'              	movf	??__div_to_l_,w
  6628  003E' 0285'              	subwf	__div_to_l_@exp1,f
  6629  003F' 3020               	movlw	32
  6630  0040' 0084'              	movwf	__div_to_l_@cntr
  6631  0041'                    l3229:
  6632  0041' 3001               	movlw	1
  6633  0042' 0088'              	movwf	??__div_to_l_
  6634  0043'                    u5135:
  6635  0043' 1003               	clrc
  6636  0044' 0D80'              	rlf	__div_to_l_@quot,f
  6637  0045' 0D81'              	rlf	__div_to_l_@quot+1,f
  6638  0046' 0D82'              	rlf	__div_to_l_@quot+2,f
  6639  0047' 0D83'              	rlf	__div_to_l_@quot+3,f
  6640  0048' 0B88'              	decfsz	??__div_to_l_,f
  6641  0049' 2800'              	goto	u5135
  6642  004A'                    l3231:
  6643  004A' 0807'              	movf	__div_to_l_@f2+3,w
  6644  004B' 0203'              	subwf	__div_to_l_@f1+3,w
  6645  004C' 1D03               	skipz
  6646  004D' 2800'              	goto	u5145
  6647  004E' 0806'              	movf	__div_to_l_@f2+2,w
  6648  004F' 0202'              	subwf	__div_to_l_@f1+2,w
  6649  0050' 1D03               	skipz
  6650  0051' 2800'              	goto	u5145
  6651  0052' 0805'              	movf	__div_to_l_@f2+1,w
  6652  0053' 0201'              	subwf	__div_to_l_@f1+1,w
  6653  0054' 1D03               	skipz
  6654  0055' 2800'              	goto	u5145
  6655  0056' 0804'              	movf	__div_to_l_@f2,w
  6656  0057' 0200'              	subwf	__div_to_l_@f1,w
  6657  0058'                    u5145:
  6658  0058' 1C03               	skipc
  6659  0059' 2800'              	goto	u5141
  6660  005A' 2800'              	goto	u5140
  6661  005B'                    u5141:
  6662  005B' 2800'              	goto	l3237
  6663  005C'                    u5140:
  6664  005C'                    l3233:
  6665  005C' 0804'              	movf	__div_to_l_@f2,w
  6666  005D' 0280'              	subwf	__div_to_l_@f1,f
  6667  005E' 0805'              	movf	__div_to_l_@f2+1,w
  6668  005F' 1C03               	skipc
  6669  0060' 0F05'              	incfsz	__div_to_l_@f2+1,w
  6670  0061' 0281'              	subwf	__div_to_l_@f1+1,f
  6671  0062' 0806'              	movf	__div_to_l_@f2+2,w
  6672  0063' 1C03               	skipc
  6673  0064' 0F06'              	incfsz	__div_to_l_@f2+2,w
  6674  0065' 0282'              	subwf	__div_to_l_@f1+2,f
  6675  0066' 0807'              	movf	__div_to_l_@f2+3,w
  6676  0067' 1C03               	skipc
  6677  0068' 0F07'              	incfsz	__div_to_l_@f2+3,w
  6678  0069' 0283'              	subwf	__div_to_l_@f1+3,f
  6679  006A'                    l3235:
  6680  006A' 1400'              	bsf	__div_to_l_@quot,0
  6681  006B'                    l3237:
  6682  006B' 3001               	movlw	1
  6683  006C' 0088'              	movwf	??__div_to_l_
  6684  006D'                    u5155:
  6685  006D' 1003               	clrc
  6686  006E' 0D80'              	rlf	__div_to_l_@f1,f
  6687  006F' 0D81'              	rlf	__div_to_l_@f1+1,f
  6688  0070' 0D82'              	rlf	__div_to_l_@f1+2,f
  6689  0071' 0D83'              	rlf	__div_to_l_@f1+3,f
  6690  0072' 0B88'              	decfsz	??__div_to_l_,f
  6691  0073' 2800'              	goto	u5155
  6692  0074'                    l3239:
  6693  0074' 3001               	movlw	1
  6694  0075' 0284'              	subwf	__div_to_l_@cntr,f
  6695  0076' 1D03               	btfss	3,2
  6696  0077' 2800'              	goto	u5161
  6697  0078' 2800'              	goto	u5160
  6698  0079'                    u5161:
  6699  0079' 2800'              	goto	l3229
  6700  007A'                    u5160:
  6701  007A'                    l552:
  6702  007A' 1F85'              	btfss	__div_to_l_@exp1,7
  6703  007B' 2800'              	goto	u5171
  6704  007C' 2800'              	goto	u5170
  6705  007D'                    u5171:
  6706  007D' 2800'              	goto	l3251
  6707  007E'                    u5170:
  6708  007E'                    l3241:
  6709  007E' 0805'              	movf	__div_to_l_@exp1,w
  6710  007F' 3A80               	xorlw	128
  6711  0080' 3E9F               	addlw	159
  6712  0081' 1803               	skipnc
  6713  0082' 2800'              	goto	u5181
  6714  0083' 2800'              	goto	u5180
  6715  0084'                    u5181:
  6716  0084' 2800'              	goto	l3247
  6717  0085'                    u5180:
  6718  0085' 2800'              	goto	l3211
  6719  0086'                    l3247:
  6720  0086' 3001               	movlw	1
  6721  0087'                    u5195:
  6722  0087' 1003               	clrc
  6723  0088' 0C83'              	rrf	__div_to_l_@quot+3,f
  6724  0089' 0C82'              	rrf	__div_to_l_@quot+2,f
  6725  008A' 0C81'              	rrf	__div_to_l_@quot+1,f
  6726  008B' 0C80'              	rrf	__div_to_l_@quot,f
  6727  008C' 3EFF               	addlw	-1
  6728  008D' 1D03               	skipz
  6729  008E' 2800'              	goto	u5195
  6730  008F'                    l3249:
  6731  008F' 3001               	movlw	1
  6732  0090' 00FF               	movwf	btemp+1
  6733  0091' 087F               	movf	btemp+1,w
  6734  0092' 0785'              	addwf	__div_to_l_@exp1,f
  6735  0093' 1D03               	btfss	3,2
  6736  0094' 2800'              	goto	u5201
  6737  0095' 2800'              	goto	u5200
  6738  0096'                    u5201:
  6739  0096' 2800'              	goto	l3247
  6740  0097'                    u5200:
  6741  0097' 2800'              	goto	l3259
  6742  0098'                    l3251:
  6743  0098' 3020               	movlw	32
  6744  0099' 0205'              	subwf	__div_to_l_@exp1,w
  6745  009A' 1C03               	skipc
  6746  009B' 2800'              	goto	u5211
  6747  009C' 2800'              	goto	u5210
  6748  009D'                    u5211:
  6749  009D' 2800'              	goto	l559
  6750  009E'                    u5210:
  6751  009E' 2800'              	goto	l3211
  6752  009F'                    l3257:
  6753  009F' 3001               	movlw	1
  6754  00A0' 0088'              	movwf	??__div_to_l_
  6755  00A1'                    u5225:
  6756  00A1' 1003               	clrc
  6757  00A2' 0D80'              	rlf	__div_to_l_@quot,f
  6758  00A3' 0D81'              	rlf	__div_to_l_@quot+1,f
  6759  00A4' 0D82'              	rlf	__div_to_l_@quot+2,f
  6760  00A5' 0D83'              	rlf	__div_to_l_@quot+3,f
  6761  00A6' 0B88'              	decfsz	??__div_to_l_,f
  6762  00A7' 2800'              	goto	u5225
  6763  00A8' 3001               	movlw	1
  6764  00A9' 0285'              	subwf	__div_to_l_@exp1,f
  6765  00AA'                    l559:
  6766  00AA' 0805'              	movf	__div_to_l_@exp1,w
  6767  00AB' 1D03               	btfss	3,2
  6768  00AC' 2800'              	goto	u5231
  6769  00AD' 2800'              	goto	u5230
  6770  00AE'                    u5231:
  6771  00AE' 2800'              	goto	l3257
  6772  00AF'                    u5230:
  6773  00AF'                    l3259:
  6774  00AF' 0803'              	movf	__div_to_l_@quot+3,w
  6775  00B0' 0083'              	movwf	?__div_to_l_+3
  6776  00B1' 0802'              	movf	__div_to_l_@quot+2,w
  6777  00B2' 0082'              	movwf	?__div_to_l_+2
  6778  00B3' 0801'              	movf	__div_to_l_@quot+1,w
  6779  00B4' 0081'              	movwf	?__div_to_l_+1
  6780  00B5' 0800'              	movf	__div_to_l_@quot,w
  6781  00B6' 0080'              	movwf	?__div_to_l_
  6782  00B7'                    l548:
  6783  00B7' 0008               	return
  6784  00B8'                    __end_of__div_to_l_:
  6785                           
  6786                           	psect	text13
  6787  0000'                    __ptext13:	
  6788 ;; *************** function ___xxtofl *****************
  6789 ;; Defined at:
  6790 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\xxtofl.c"
  6791 ;; Parameters:    Size  Location     Type
  6792 ;;  sign            1    wreg     unsigned char 
  6793 ;;  val             4    0[COMMON] long 
  6794 ;; Auto vars:     Size  Location     Type
  6795 ;;  sign            1    8[COMMON] unsigned char 
  6796 ;;  arg             4   10[COMMON] unsigned long 
  6797 ;;  exp             1    9[COMMON] unsigned char 
  6798 ;; Return value:  Size  Location     Type
  6799 ;;                  4    0[COMMON] unsigned char 
  6800 ;; Registers used:
  6801 ;;		wreg, status,2, status,0, btemp+1
  6802 ;; Tracked objects:
  6803 ;;		On entry : 0/0
  6804 ;;		On exit  : 0/0
  6805 ;;		Unchanged: 0/0
  6806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6807 ;;      Params:         4       0       0       0       0
  6808 ;;      Locals:         6       0       0       0       0
  6809 ;;      Temps:          4       0       0       0       0
  6810 ;;      Totals:        14       0       0       0       0
  6811 ;;Total ram usage:       14 bytes
  6812 ;; Hardware stack levels used: 1
  6813 ;; This function calls:
  6814 ;;		Nothing
  6815 ;; This function is called by:
  6816 ;;		_main
  6817 ;;		_sprintf
  6818 ;; This function uses a non-reentrant model
  6819 ;;
  6820                           
  6821  0000'                    ___xxtofl:	
  6822                           ;psect for function ___xxtofl
  6823                           
  6824                           
  6825                           ;incstack = 0
  6826                           ; Regs used in ___xxtofl: [wreg+status,2+status,0+btemp+1]
  6827                           ;___xxtofl@sign stored from wreg
  6828  0000' 0088'              	movwf	___xxtofl@sign
  6829  0001'                    l3409:
  6830  0001' 0808'              	movf	___xxtofl@sign,w
  6831  0002' 1903               	btfsc	3,2
  6832  0003' 2800'              	goto	u5621
  6833  0004' 2800'              	goto	u5620
  6834  0005'                    u5621:
  6835  0005' 2800'              	goto	l3415
  6836  0006'                    u5620:
  6837  0006'                    l3411:
  6838  0006' 1F83'              	btfss	___xxtofl@val+3,7
  6839  0007' 2800'              	goto	u5631
  6840  0008' 2800'              	goto	u5630
  6841  0009'                    u5631:
  6842  0009' 2800'              	goto	l3415
  6843  000A'                    u5630:
  6844  000A'                    l3413:
  6845  000A' 0900'              	comf	___xxtofl@val,w
  6846  000B' 008A'              	movwf	___xxtofl@arg
  6847  000C' 0901'              	comf	___xxtofl@val+1,w
  6848  000D' 008B'              	movwf	___xxtofl@arg+1
  6849  000E' 0902'              	comf	___xxtofl@val+2,w
  6850  000F' 008C'              	movwf	___xxtofl@arg+2
  6851  0010' 0903'              	comf	___xxtofl@val+3,w
  6852  0011' 008D'              	movwf	___xxtofl@arg+3
  6853  0012' 0A8A'              	incf	___xxtofl@arg,f
  6854  0013' 1903               	skipnz
  6855  0014' 0A8B'              	incf	___xxtofl@arg+1,f
  6856  0015' 1903               	skipnz
  6857  0016' 0A8C'              	incf	___xxtofl@arg+2,f
  6858  0017' 1903               	skipnz
  6859  0018' 0A8D'              	incf	___xxtofl@arg+3,f
  6860  0019' 2800'              	goto	l845
  6861  001A'                    l3415:
  6862  001A' 0803'              	movf	___xxtofl@val+3,w
  6863  001B' 008D'              	movwf	___xxtofl@arg+3
  6864  001C' 0802'              	movf	___xxtofl@val+2,w
  6865  001D' 008C'              	movwf	___xxtofl@arg+2
  6866  001E' 0801'              	movf	___xxtofl@val+1,w
  6867  001F' 008B'              	movwf	___xxtofl@arg+1
  6868  0020' 0800'              	movf	___xxtofl@val,w
  6869  0021' 008A'              	movwf	___xxtofl@arg
  6870  0022'                    l845:
  6871  0022' 0803'              	movf	___xxtofl@val+3,w
  6872  0023' 0402'              	iorwf	___xxtofl@val+2,w
  6873  0024' 0401'              	iorwf	___xxtofl@val+1,w
  6874  0025' 0400'              	iorwf	___xxtofl@val,w
  6875  0026' 1D03               	skipz
  6876  0027' 2800'              	goto	u5641
  6877  0028' 2800'              	goto	u5640
  6878  0029'                    u5641:
  6879  0029' 2800'              	goto	l3421
  6880  002A'                    u5640:
  6881  002A'                    l3417:
  6882  002A' 3000               	movlw	0
  6883  002B' 0083'              	movwf	?___xxtofl+3
  6884  002C' 3000               	movlw	0
  6885  002D' 0082'              	movwf	?___xxtofl+2
  6886  002E' 3000               	movlw	0
  6887  002F' 0081'              	movwf	?___xxtofl+1
  6888  0030' 3000               	movlw	0
  6889  0031' 0080'              	movwf	?___xxtofl
  6890  0032' 2800'              	goto	l847
  6891  0033'                    l3421:
  6892  0033' 3096               	movlw	150
  6893  0034' 0089'              	movwf	___xxtofl@exp
  6894  0035' 2800'              	goto	l3427
  6895  0036'                    l3423:
  6896  0036' 3001               	movlw	1
  6897  0037' 00FF               	movwf	btemp+1
  6898  0038' 087F               	movf	btemp+1,w
  6899  0039' 0789'              	addwf	___xxtofl@exp,f
  6900  003A'                    l3425:
  6901  003A' 3001               	movlw	1
  6902  003B'                    u5655:
  6903  003B' 1003               	clrc
  6904  003C' 0C8D'              	rrf	___xxtofl@arg+3,f
  6905  003D' 0C8C'              	rrf	___xxtofl@arg+2,f
  6906  003E' 0C8B'              	rrf	___xxtofl@arg+1,f
  6907  003F' 0C8A'              	rrf	___xxtofl@arg,f
  6908  0040' 3EFF               	addlw	-1
  6909  0041' 1D03               	skipz
  6910  0042' 2800'              	goto	u5655
  6911  0043'                    l3427:
  6912  0043' 30FE               	movlw	254
  6913  0044' 050D'              	andwf	___xxtofl@arg+3,w
  6914  0045' 1D03               	btfss	3,2
  6915  0046' 2800'              	goto	u5661
  6916  0047' 2800'              	goto	u5660
  6917  0048'                    u5661:
  6918  0048' 2800'              	goto	l3423
  6919  0049'                    u5660:
  6920  0049' 2800'              	goto	l3435
  6921  004A'                    l3429:
  6922  004A' 3001               	movlw	1
  6923  004B' 00FF               	movwf	btemp+1
  6924  004C' 087F               	movf	btemp+1,w
  6925  004D' 0789'              	addwf	___xxtofl@exp,f
  6926  004E'                    l3431:
  6927  004E' 3001               	movlw	1
  6928  004F' 078A'              	addwf	___xxtofl@arg,f
  6929  0050' 3000               	movlw	0
  6930  0051' 1803               	skipnc
  6931  0052' 3001               	movlw	1
  6932  0053' 078B'              	addwf	___xxtofl@arg+1,f
  6933  0054' 3000               	movlw	0
  6934  0055' 1803               	skipnc
  6935  0056' 3001               	movlw	1
  6936  0057' 078C'              	addwf	___xxtofl@arg+2,f
  6937  0058' 3000               	movlw	0
  6938  0059' 1803               	skipnc
  6939  005A' 3001               	movlw	1
  6940  005B' 078D'              	addwf	___xxtofl@arg+3,f
  6941  005C'                    l3433:
  6942  005C' 3001               	movlw	1
  6943  005D'                    u5675:
  6944  005D' 1003               	clrc
  6945  005E' 0C8D'              	rrf	___xxtofl@arg+3,f
  6946  005F' 0C8C'              	rrf	___xxtofl@arg+2,f
  6947  0060' 0C8B'              	rrf	___xxtofl@arg+1,f
  6948  0061' 0C8A'              	rrf	___xxtofl@arg,f
  6949  0062' 3EFF               	addlw	-1
  6950  0063' 1D03               	skipz
  6951  0064' 2800'              	goto	u5675
  6952  0065'                    l3435:
  6953  0065' 30FF               	movlw	255
  6954  0066' 050D'              	andwf	___xxtofl@arg+3,w
  6955  0067' 1D03               	btfss	3,2
  6956  0068' 2800'              	goto	u5681
  6957  0069' 2800'              	goto	u5680
  6958  006A'                    u5681:
  6959  006A' 2800'              	goto	l3429
  6960  006B'                    u5680:
  6961  006B' 2800'              	goto	l3439
  6962  006C'                    l3437:
  6963  006C' 3001               	movlw	1
  6964  006D' 0289'              	subwf	___xxtofl@exp,f
  6965  006E' 3001               	movlw	1
  6966  006F' 0084'              	movwf	??___xxtofl
  6967  0070'                    u5695:
  6968  0070' 1003               	clrc
  6969  0071' 0D8A'              	rlf	___xxtofl@arg,f
  6970  0072' 0D8B'              	rlf	___xxtofl@arg+1,f
  6971  0073' 0D8C'              	rlf	___xxtofl@arg+2,f
  6972  0074' 0D8D'              	rlf	___xxtofl@arg+3,f
  6973  0075' 0B84'              	decfsz	??___xxtofl,f
  6974  0076' 2800'              	goto	u5695
  6975  0077'                    l3439:
  6976  0077' 1B8C'              	btfsc	___xxtofl@arg+2,7
  6977  0078' 2800'              	goto	u5701
  6978  0079' 2800'              	goto	u5700
  6979  007A'                    u5701:
  6980  007A' 2800'              	goto	l858
  6981  007B'                    u5700:
  6982  007B'                    l3441:
  6983  007B' 3002               	movlw	2
  6984  007C' 0209'              	subwf	___xxtofl@exp,w
  6985  007D' 1803               	skipnc
  6986  007E' 2800'              	goto	u5711
  6987  007F' 2800'              	goto	u5710
  6988  0080'                    u5711:
  6989  0080' 2800'              	goto	l3437
  6990  0081'                    u5710:
  6991  0081'                    l858:
  6992  0081' 1809'              	btfsc	___xxtofl@exp,0
  6993  0082' 2800'              	goto	u5721
  6994  0083' 2800'              	goto	u5720
  6995  0084'                    u5721:
  6996  0084' 2800'              	goto	l859
  6997  0085'                    u5720:
  6998  0085'                    l3443:
  6999  0085' 30FF               	movlw	255
  7000  0086' 058A'              	andwf	___xxtofl@arg,f
  7001  0087' 30FF               	movlw	255
  7002  0088' 058B'              	andwf	___xxtofl@arg+1,f
  7003  0089' 307F               	movlw	127
  7004  008A' 058C'              	andwf	___xxtofl@arg+2,f
  7005  008B' 30FF               	movlw	255
  7006  008C' 058D'              	andwf	___xxtofl@arg+3,f
  7007  008D'                    l859:
  7008  008D' 1003               	clrc
  7009  008E' 0C89'              	rrf	___xxtofl@exp,f
  7010  008F'                    l3445:
  7011  008F' 0809'              	movf	___xxtofl@exp,w
  7012  0090' 0084'              	movwf	??___xxtofl
  7013  0091' 0185'              	clrf	??___xxtofl+1
  7014  0092' 0186'              	clrf	??___xxtofl+2
  7015  0093' 0187'              	clrf	??___xxtofl+3
  7016  0094' 3018               	movlw	24
  7017  0095'                    u5735:
  7018  0095' 1003               	clrc
  7019  0096' 0D84'              	rlf	??___xxtofl,f
  7020  0097' 0D85'              	rlf	??___xxtofl+1,f
  7021  0098' 0D86'              	rlf	??___xxtofl+2,f
  7022  0099' 0D87'              	rlf	??___xxtofl+3,f
  7023  009A'                    u5730:
  7024  009A' 3EFF               	addlw	-1
  7025  009B' 1D03               	skipz
  7026  009C' 2800'              	goto	u5735
  7027  009D' 0804'              	movf	??___xxtofl,w
  7028  009E' 048A'              	iorwf	___xxtofl@arg,f
  7029  009F' 0805'              	movf	??___xxtofl+1,w
  7030  00A0' 048B'              	iorwf	___xxtofl@arg+1,f
  7031  00A1' 0806'              	movf	??___xxtofl+2,w
  7032  00A2' 048C'              	iorwf	___xxtofl@arg+2,f
  7033  00A3' 0807'              	movf	??___xxtofl+3,w
  7034  00A4' 048D'              	iorwf	___xxtofl@arg+3,f
  7035  00A5'                    l3447:
  7036  00A5' 0808'              	movf	___xxtofl@sign,w
  7037  00A6' 1903               	btfsc	3,2
  7038  00A7' 2800'              	goto	u5741
  7039  00A8' 2800'              	goto	u5740
  7040  00A9'                    u5741:
  7041  00A9' 2800'              	goto	l3453
  7042  00AA'                    u5740:
  7043  00AA'                    l3449:
  7044  00AA' 1F83'              	btfss	___xxtofl@val+3,7
  7045  00AB' 2800'              	goto	u5751
  7046  00AC' 2800'              	goto	u5750
  7047  00AD'                    u5751:
  7048  00AD' 2800'              	goto	l3453
  7049  00AE'                    u5750:
  7050  00AE'                    l3451:
  7051  00AE' 178D'              	bsf	___xxtofl@arg+3,7
  7052  00AF'                    l3453:
  7053  00AF' 080D'              	movf	___xxtofl@arg+3,w
  7054  00B0' 0083'              	movwf	?___xxtofl+3
  7055  00B1' 080C'              	movf	___xxtofl@arg+2,w
  7056  00B2' 0082'              	movwf	?___xxtofl+2
  7057  00B3' 080B'              	movf	___xxtofl@arg+1,w
  7058  00B4' 0081'              	movwf	?___xxtofl+1
  7059  00B5' 080A'              	movf	___xxtofl@arg,w
  7060  00B6' 0080'              	movwf	?___xxtofl
  7061  00B7'                    l847:
  7062  00B7' 0008               	return
  7063  00B8'                    __end_of___xxtofl:
  7064                           
  7065                           	psect	text14
  7066  0000'                    __ptext14:	
  7067 ;; *************** function ___wmul *****************
  7068 ;; Defined at:
  7069 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul16.c"
  7070 ;; Parameters:    Size  Location     Type
  7071 ;;  multiplier      2    0[COMMON] unsigned int 
  7072 ;;  multiplicand    2    2[COMMON] unsigned int 
  7073 ;; Auto vars:     Size  Location     Type
  7074 ;;  product         2    4[COMMON] unsigned int 
  7075 ;; Return value:  Size  Location     Type
  7076 ;;                  2    0[COMMON] unsigned int 
  7077 ;; Registers used:
  7078 ;;		wreg, status,2, status,0
  7079 ;; Tracked objects:
  7080 ;;		On entry : 0/0
  7081 ;;		On exit  : 0/0
  7082 ;;		Unchanged: 0/0
  7083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7084 ;;      Params:         4       0       0       0       0
  7085 ;;      Locals:         2       0       0       0       0
  7086 ;;      Temps:          0       0       0       0       0
  7087 ;;      Totals:         6       0       0       0       0
  7088 ;;Total ram usage:        6 bytes
  7089 ;; Hardware stack levels used: 1
  7090 ;; This function calls:
  7091 ;;		Nothing
  7092 ;; This function is called by:
  7093 ;;		_sprintf
  7094 ;; This function uses a non-reentrant model
  7095 ;;
  7096                           
  7097  0000'                    ___wmul:	
  7098                           ;psect for function ___wmul
  7099                           
  7100  0000'                    l3263:	
  7101                           ;incstack = 0
  7102                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7103                           
  7104  0000' 0184'              	clrf	___wmul@product
  7105  0001' 0185'              	clrf	___wmul@product+1
  7106  0002'                    l3265:
  7107  0002' 1C00'              	btfss	___wmul@multiplier,0
  7108  0003' 2800'              	goto	u5241
  7109  0004' 2800'              	goto	u5240
  7110  0005'                    u5241:
  7111  0005' 2800'              	goto	l378
  7112  0006'                    u5240:
  7113  0006'                    l3267:
  7114  0006' 0802'              	movf	___wmul@multiplicand,w
  7115  0007' 0784'              	addwf	___wmul@product,f
  7116  0008' 1803               	skipnc
  7117  0009' 0A85'              	incf	___wmul@product+1,f
  7118  000A' 0803'              	movf	___wmul@multiplicand+1,w
  7119  000B' 0785'              	addwf	___wmul@product+1,f
  7120  000C'                    l378:
  7121  000C' 3001               	movlw	1
  7122  000D'                    u5255:
  7123  000D' 1003               	clrc
  7124  000E' 0D82'              	rlf	___wmul@multiplicand,f
  7125  000F' 0D83'              	rlf	___wmul@multiplicand+1,f
  7126  0010' 3EFF               	addlw	-1
  7127  0011' 1D03               	skipz
  7128  0012' 2800'              	goto	u5255
  7129  0013'                    l3269:
  7130  0013' 3001               	movlw	1
  7131  0014'                    u5265:
  7132  0014' 1003               	clrc
  7133  0015' 0C81'              	rrf	___wmul@multiplier+1,f
  7134  0016' 0C80'              	rrf	___wmul@multiplier,f
  7135  0017' 3EFF               	addlw	-1
  7136  0018' 1D03               	skipz
  7137  0019' 2800'              	goto	u5265
  7138  001A'                    l3271:
  7139  001A' 0800'              	movf	___wmul@multiplier,w
  7140  001B' 0401'              	iorwf	___wmul@multiplier+1,w
  7141  001C' 1D03               	btfss	3,2
  7142  001D' 2800'              	goto	u5271
  7143  001E' 2800'              	goto	u5270
  7144  001F'                    u5271:
  7145  001F' 2800'              	goto	l3265
  7146  0020'                    u5270:
  7147  0020'                    l3273:
  7148  0020' 0805'              	movf	___wmul@product+1,w
  7149  0021' 0081'              	movwf	?___wmul+1
  7150  0022' 0804'              	movf	___wmul@product,w
  7151  0023' 0080'              	movwf	?___wmul
  7152  0024'                    l380:
  7153  0024' 0008               	return
  7154  0025'                    __end_of___wmul:
  7155                           
  7156                           	psect	text15
  7157  0000'                    __ptext15:	
  7158 ;; *************** function ___llmod *****************
  7159 ;; Defined at:
  7160 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\llmod.c"
  7161 ;; Parameters:    Size  Location     Type
  7162 ;;  divisor         4    0[BANK0 ] unsigned long 
  7163 ;;  dividend        4    4[BANK0 ] unsigned long 
  7164 ;; Auto vars:     Size  Location     Type
  7165 ;;  counter         1    9[BANK0 ] unsigned char 
  7166 ;; Return value:  Size  Location     Type
  7167 ;;                  4    0[BANK0 ] unsigned long 
  7168 ;; Registers used:
  7169 ;;		wreg, status,2, status,0, btemp+1
  7170 ;; Tracked objects:
  7171 ;;		On entry : 0/0
  7172 ;;		On exit  : 0/0
  7173 ;;		Unchanged: 0/0
  7174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7175 ;;      Params:         0       8       0       0       0
  7176 ;;      Locals:         0       1       0       0       0
  7177 ;;      Temps:          0       1       0       0       0
  7178 ;;      Totals:         0      10       0       0       0
  7179 ;;Total ram usage:       10 bytes
  7180 ;; Hardware stack levels used: 1
  7181 ;; This function calls:
  7182 ;;		Nothing
  7183 ;; This function is called by:
  7184 ;;		_sprintf
  7185 ;; This function uses a non-reentrant model
  7186 ;;
  7187                           
  7188  0000'                    ___llmod:	
  7189                           ;psect for function ___llmod
  7190                           
  7191  0000'                    l3381:	
  7192                           ;incstack = 0
  7193                           ; Regs used in ___llmod: [wreg+status,2+status,0+btemp+1]
  7194                           
  7195  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  7196  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  7197  0002' 0803'              	movf	___llmod@divisor+3,w
  7198  0003' 0402'              	iorwf	___llmod@divisor+2,w
  7199  0004' 0401'              	iorwf	___llmod@divisor+1,w
  7200  0005' 0400'              	iorwf	___llmod@divisor,w
  7201  0006' 1903               	skipnz
  7202  0007' 2800'              	goto	u5561
  7203  0008' 2800'              	goto	u5560
  7204  0009'                    u5561:
  7205  0009' 2800'              	goto	l3399
  7206  000A'                    u5560:
  7207  000A'                    l3383:
  7208  000A' 0189'              	clrf	___llmod@counter
  7209  000B' 0A89'              	incf	___llmod@counter,f
  7210  000C' 2800'              	goto	l3389
  7211  000D'                    l3385:
  7212  000D' 3001               	movlw	1
  7213  000E' 0088'              	movwf	??___llmod
  7214  000F'                    u5575:
  7215  000F' 1003               	clrc
  7216  0010' 0D80'              	rlf	___llmod@divisor,f
  7217  0011' 0D81'              	rlf	___llmod@divisor+1,f
  7218  0012' 0D82'              	rlf	___llmod@divisor+2,f
  7219  0013' 0D83'              	rlf	___llmod@divisor+3,f
  7220  0014' 0B88'              	decfsz	??___llmod,f
  7221  0015' 2800'              	goto	u5575
  7222  0016'                    l3387:
  7223  0016' 3001               	movlw	1
  7224  0017' 00FF               	movwf	btemp+1
  7225  0018' 087F               	movf	btemp+1,w
  7226  0019' 0789'              	addwf	___llmod@counter,f
  7227  001A'                    l3389:
  7228  001A' 1F83'              	btfss	___llmod@divisor+3,7
  7229  001B' 2800'              	goto	u5581
  7230  001C' 2800'              	goto	u5580
  7231  001D'                    u5581:
  7232  001D' 2800'              	goto	l3385
  7233  001E'                    u5580:
  7234  001E'                    l3391:
  7235  001E' 0803'              	movf	___llmod@divisor+3,w
  7236  001F' 0207'              	subwf	___llmod@dividend+3,w
  7237  0020' 1D03               	skipz
  7238  0021' 2800'              	goto	u5595
  7239  0022' 0802'              	movf	___llmod@divisor+2,w
  7240  0023' 0206'              	subwf	___llmod@dividend+2,w
  7241  0024' 1D03               	skipz
  7242  0025' 2800'              	goto	u5595
  7243  0026' 0801'              	movf	___llmod@divisor+1,w
  7244  0027' 0205'              	subwf	___llmod@dividend+1,w
  7245  0028' 1D03               	skipz
  7246  0029' 2800'              	goto	u5595
  7247  002A' 0800'              	movf	___llmod@divisor,w
  7248  002B' 0204'              	subwf	___llmod@dividend,w
  7249  002C'                    u5595:
  7250  002C' 1C03               	skipc
  7251  002D' 2800'              	goto	u5591
  7252  002E' 2800'              	goto	u5590
  7253  002F'                    u5591:
  7254  002F' 2800'              	goto	l3395
  7255  0030'                    u5590:
  7256  0030'                    l3393:
  7257  0030' 0800'              	movf	___llmod@divisor,w
  7258  0031' 0284'              	subwf	___llmod@dividend,f
  7259  0032' 0801'              	movf	___llmod@divisor+1,w
  7260  0033' 1C03               	skipc
  7261  0034' 0F01'              	incfsz	___llmod@divisor+1,w
  7262  0035' 0285'              	subwf	___llmod@dividend+1,f
  7263  0036' 0802'              	movf	___llmod@divisor+2,w
  7264  0037' 1C03               	skipc
  7265  0038' 0F02'              	incfsz	___llmod@divisor+2,w
  7266  0039' 0286'              	subwf	___llmod@dividend+2,f
  7267  003A' 0803'              	movf	___llmod@divisor+3,w
  7268  003B' 1C03               	skipc
  7269  003C' 0F03'              	incfsz	___llmod@divisor+3,w
  7270  003D' 0287'              	subwf	___llmod@dividend+3,f
  7271  003E'                    l3395:
  7272  003E' 3001               	movlw	1
  7273  003F'                    u5605:
  7274  003F' 1003               	clrc
  7275  0040' 0C83'              	rrf	___llmod@divisor+3,f
  7276  0041' 0C82'              	rrf	___llmod@divisor+2,f
  7277  0042' 0C81'              	rrf	___llmod@divisor+1,f
  7278  0043' 0C80'              	rrf	___llmod@divisor,f
  7279  0044' 3EFF               	addlw	-1
  7280  0045' 1D03               	skipz
  7281  0046' 2800'              	goto	u5605
  7282  0047'                    l3397:
  7283  0047' 3001               	movlw	1
  7284  0048' 0289'              	subwf	___llmod@counter,f
  7285  0049' 1D03               	btfss	3,2
  7286  004A' 2800'              	goto	u5611
  7287  004B' 2800'              	goto	u5610
  7288  004C'                    u5611:
  7289  004C' 2800'              	goto	l3391
  7290  004D'                    u5610:
  7291  004D'                    l3399:
  7292  004D' 0807'              	movf	___llmod@dividend+3,w
  7293  004E' 0083'              	movwf	?___llmod+3
  7294  004F' 0806'              	movf	___llmod@dividend+2,w
  7295  0050' 0082'              	movwf	?___llmod+2
  7296  0051' 0805'              	movf	___llmod@dividend+1,w
  7297  0052' 0081'              	movwf	?___llmod+1
  7298  0053' 0804'              	movf	___llmod@dividend,w
  7299  0054' 0080'              	movwf	?___llmod
  7300  0055'                    l634:
  7301  0055' 0008               	return
  7302  0056'                    __end_of___llmod:
  7303                           
  7304                           	psect	text16
  7305  0000'                    __ptext16:	
  7306 ;; *************** function ___lldiv *****************
  7307 ;; Defined at:
  7308 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\__lldiv.c"
  7309 ;; Parameters:    Size  Location     Type
  7310 ;;  divisor         4    0[COMMON] unsigned long 
  7311 ;;  dividend        4    4[COMMON] unsigned long 
  7312 ;; Auto vars:     Size  Location     Type
  7313 ;;  quotient        4    9[COMMON] unsigned long 
  7314 ;;  counter         1   13[COMMON] unsigned char 
  7315 ;; Return value:  Size  Location     Type
  7316 ;;                  4    0[COMMON] unsigned long 
  7317 ;; Registers used:
  7318 ;;		wreg, status,2, status,0, btemp+1
  7319 ;; Tracked objects:
  7320 ;;		On entry : 0/0
  7321 ;;		On exit  : 0/0
  7322 ;;		Unchanged: 0/0
  7323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7324 ;;      Params:         8       0       0       0       0
  7325 ;;      Locals:         5       0       0       0       0
  7326 ;;      Temps:          1       0       0       0       0
  7327 ;;      Totals:        14       0       0       0       0
  7328 ;;Total ram usage:       14 bytes
  7329 ;; Hardware stack levels used: 1
  7330 ;; This function calls:
  7331 ;;		Nothing
  7332 ;; This function is called by:
  7333 ;;		_sprintf
  7334 ;; This function uses a non-reentrant model
  7335 ;;
  7336                           
  7337  0000'                    ___lldiv:	
  7338                           ;psect for function ___lldiv
  7339                           
  7340  0000'                    l3277:	
  7341                           ;incstack = 0
  7342                           ; Regs used in ___lldiv: [wreg+status,2+status,0+btemp+1]
  7343                           
  7344  0000' 3000               	movlw	0
  7345  0001' 008C'              	movwf	___lldiv@quotient+3
  7346  0002' 3000               	movlw	0
  7347  0003' 008B'              	movwf	___lldiv@quotient+2
  7348  0004' 3000               	movlw	0
  7349  0005' 008A'              	movwf	___lldiv@quotient+1
  7350  0006' 3000               	movlw	0
  7351  0007' 0089'              	movwf	___lldiv@quotient
  7352  0008' 0803'              	movf	___lldiv@divisor+3,w
  7353  0009' 0402'              	iorwf	___lldiv@divisor+2,w
  7354  000A' 0401'              	iorwf	___lldiv@divisor+1,w
  7355  000B' 0400'              	iorwf	___lldiv@divisor,w
  7356  000C' 1903               	skipnz
  7357  000D' 2800'              	goto	u5281
  7358  000E' 2800'              	goto	u5280
  7359  000F'                    u5281:
  7360  000F' 2800'              	goto	l3299
  7361  0010'                    u5280:
  7362  0010'                    l3279:
  7363  0010' 018D'              	clrf	___lldiv@counter
  7364  0011' 0A8D'              	incf	___lldiv@counter,f
  7365  0012' 2800'              	goto	l3285
  7366  0013'                    l3281:
  7367  0013' 3001               	movlw	1
  7368  0014' 0088'              	movwf	??___lldiv
  7369  0015'                    u5295:
  7370  0015' 1003               	clrc
  7371  0016' 0D80'              	rlf	___lldiv@divisor,f
  7372  0017' 0D81'              	rlf	___lldiv@divisor+1,f
  7373  0018' 0D82'              	rlf	___lldiv@divisor+2,f
  7374  0019' 0D83'              	rlf	___lldiv@divisor+3,f
  7375  001A' 0B88'              	decfsz	??___lldiv,f
  7376  001B' 2800'              	goto	u5295
  7377  001C'                    l3283:
  7378  001C' 3001               	movlw	1
  7379  001D' 00FF               	movwf	btemp+1
  7380  001E' 087F               	movf	btemp+1,w
  7381  001F' 078D'              	addwf	___lldiv@counter,f
  7382  0020'                    l3285:
  7383  0020' 1F83'              	btfss	___lldiv@divisor+3,7
  7384  0021' 2800'              	goto	u5301
  7385  0022' 2800'              	goto	u5300
  7386  0023'                    u5301:
  7387  0023' 2800'              	goto	l3281
  7388  0024'                    u5300:
  7389  0024'                    l3287:
  7390  0024' 3001               	movlw	1
  7391  0025' 0088'              	movwf	??___lldiv
  7392  0026'                    u5315:
  7393  0026' 1003               	clrc
  7394  0027' 0D89'              	rlf	___lldiv@quotient,f
  7395  0028' 0D8A'              	rlf	___lldiv@quotient+1,f
  7396  0029' 0D8B'              	rlf	___lldiv@quotient+2,f
  7397  002A' 0D8C'              	rlf	___lldiv@quotient+3,f
  7398  002B' 0B88'              	decfsz	??___lldiv,f
  7399  002C' 2800'              	goto	u5315
  7400  002D'                    l3289:
  7401  002D' 0803'              	movf	___lldiv@divisor+3,w
  7402  002E' 0207'              	subwf	___lldiv@dividend+3,w
  7403  002F' 1D03               	skipz
  7404  0030' 2800'              	goto	u5325
  7405  0031' 0802'              	movf	___lldiv@divisor+2,w
  7406  0032' 0206'              	subwf	___lldiv@dividend+2,w
  7407  0033' 1D03               	skipz
  7408  0034' 2800'              	goto	u5325
  7409  0035' 0801'              	movf	___lldiv@divisor+1,w
  7410  0036' 0205'              	subwf	___lldiv@dividend+1,w
  7411  0037' 1D03               	skipz
  7412  0038' 2800'              	goto	u5325
  7413  0039' 0800'              	movf	___lldiv@divisor,w
  7414  003A' 0204'              	subwf	___lldiv@dividend,w
  7415  003B'                    u5325:
  7416  003B' 1C03               	skipc
  7417  003C' 2800'              	goto	u5321
  7418  003D' 2800'              	goto	u5320
  7419  003E'                    u5321:
  7420  003E' 2800'              	goto	l3295
  7421  003F'                    u5320:
  7422  003F'                    l3291:
  7423  003F' 0800'              	movf	___lldiv@divisor,w
  7424  0040' 0284'              	subwf	___lldiv@dividend,f
  7425  0041' 0801'              	movf	___lldiv@divisor+1,w
  7426  0042' 1C03               	skipc
  7427  0043' 0F01'              	incfsz	___lldiv@divisor+1,w
  7428  0044' 0285'              	subwf	___lldiv@dividend+1,f
  7429  0045' 0802'              	movf	___lldiv@divisor+2,w
  7430  0046' 1C03               	skipc
  7431  0047' 0F02'              	incfsz	___lldiv@divisor+2,w
  7432  0048' 0286'              	subwf	___lldiv@dividend+2,f
  7433  0049' 0803'              	movf	___lldiv@divisor+3,w
  7434  004A' 1C03               	skipc
  7435  004B' 0F03'              	incfsz	___lldiv@divisor+3,w
  7436  004C' 0287'              	subwf	___lldiv@dividend+3,f
  7437  004D'                    l3293:
  7438  004D' 1409'              	bsf	___lldiv@quotient,0
  7439  004E'                    l3295:
  7440  004E' 3001               	movlw	1
  7441  004F'                    u5335:
  7442  004F' 1003               	clrc
  7443  0050' 0C83'              	rrf	___lldiv@divisor+3,f
  7444  0051' 0C82'              	rrf	___lldiv@divisor+2,f
  7445  0052' 0C81'              	rrf	___lldiv@divisor+1,f
  7446  0053' 0C80'              	rrf	___lldiv@divisor,f
  7447  0054' 3EFF               	addlw	-1
  7448  0055' 1D03               	skipz
  7449  0056' 2800'              	goto	u5335
  7450  0057'                    l3297:
  7451  0057' 3001               	movlw	1
  7452  0058' 028D'              	subwf	___lldiv@counter,f
  7453  0059' 1D03               	btfss	3,2
  7454  005A' 2800'              	goto	u5341
  7455  005B' 2800'              	goto	u5340
  7456  005C'                    u5341:
  7457  005C' 2800'              	goto	l3287
  7458  005D'                    u5340:
  7459  005D'                    l3299:
  7460  005D' 080C'              	movf	___lldiv@quotient+3,w
  7461  005E' 0083'              	movwf	?___lldiv+3
  7462  005F' 080B'              	movf	___lldiv@quotient+2,w
  7463  0060' 0082'              	movwf	?___lldiv+2
  7464  0061' 080A'              	movf	___lldiv@quotient+1,w
  7465  0062' 0081'              	movwf	?___lldiv+1
  7466  0063' 0809'              	movf	___lldiv@quotient,w
  7467  0064' 0080'              	movwf	?___lldiv
  7468  0065'                    l414:
  7469  0065' 0008               	return
  7470  0066'                    __end_of___lldiv:
  7471                           
  7472                           	psect	text17
  7473  0000'                    __ptext17:	
  7474 ;; *************** function ___fltol *****************
  7475 ;; Defined at:
  7476 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\fltol.c"
  7477 ;; Parameters:    Size  Location     Type
  7478 ;;  f1              4   45[BANK0 ] unsigned long 
  7479 ;; Auto vars:     Size  Location     Type
  7480 ;;  exp1            1   54[BANK0 ] unsigned char 
  7481 ;;  sign1           1   53[BANK0 ] unsigned char 
  7482 ;; Return value:  Size  Location     Type
  7483 ;;                  4   45[BANK0 ] long 
  7484 ;; Registers used:
  7485 ;;		wreg, status,2, status,0, btemp+1
  7486 ;; Tracked objects:
  7487 ;;		On entry : 0/0
  7488 ;;		On exit  : 0/0
  7489 ;;		Unchanged: 0/0
  7490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7491 ;;      Params:         0       4       0       0       0
  7492 ;;      Locals:         0       2       0       0       0
  7493 ;;      Temps:          0       4       0       0       0
  7494 ;;      Totals:         0      10       0       0       0
  7495 ;;Total ram usage:       10 bytes
  7496 ;; Hardware stack levels used: 1
  7497 ;; This function calls:
  7498 ;;		Nothing
  7499 ;; This function is called by:
  7500 ;;		_sprintf
  7501 ;; This function uses a non-reentrant model
  7502 ;;
  7503                           
  7504  0000'                    ___fltol:	
  7505                           ;psect for function ___fltol
  7506                           
  7507  0000'                    l3343:	
  7508                           ;incstack = 0
  7509                           ; Regs used in ___fltol: [wreg+status,2+status,0+btemp+1]
  7510                           
  7511  0000' 1003               	clrc
  7512  0001' 1283               	bcf	3,5	;RP0=0, select bank0
  7513  0002' 1303               	bcf	3,6	;RP1=0, select bank0
  7514  0003' 0D2F'              	rlf	___fltol@f1+2,w
  7515  0004' 0D30'              	rlf	___fltol@f1+3,w
  7516  0005' 00B6'              	movwf	___fltol@exp1
  7517  0006' 0836'              	movf	___fltol@exp1,w
  7518  0007' 1D03               	btfss	3,2
  7519  0008' 2800'              	goto	u5461
  7520  0009' 2800'              	goto	u5460
  7521  000A'                    u5461:
  7522  000A' 2800'              	goto	l3349
  7523  000B'                    u5460:
  7524  000B'                    l3345:
  7525  000B' 3000               	movlw	0
  7526  000C' 00B0'              	movwf	?___fltol+3
  7527  000D' 3000               	movlw	0
  7528  000E' 00AF'              	movwf	?___fltol+2
  7529  000F' 3000               	movlw	0
  7530  0010' 00AE'              	movwf	?___fltol+1
  7531  0011' 3000               	movlw	0
  7532  0012' 00AD'              	movwf	?___fltol
  7533  0013' 2800'              	goto	l581
  7534  0014'                    l3349:
  7535  0014' 082D'              	movf	___fltol@f1,w
  7536  0015' 00B1'              	movwf	??___fltol
  7537  0016' 082E'              	movf	___fltol@f1+1,w
  7538  0017' 00B2'              	movwf	??___fltol+1
  7539  0018' 082F'              	movf	___fltol@f1+2,w
  7540  0019' 00B3'              	movwf	??___fltol+2
  7541  001A' 0830'              	movf	___fltol@f1+3,w
  7542  001B' 00B4'              	movwf	??___fltol+3
  7543  001C' 301F               	movlw	31
  7544  001D'                    u5475:
  7545  001D' 1003               	clrc
  7546  001E' 0CB4'              	rrf	??___fltol+3,f
  7547  001F' 0CB3'              	rrf	??___fltol+2,f
  7548  0020' 0CB2'              	rrf	??___fltol+1,f
  7549  0021' 0CB1'              	rrf	??___fltol,f
  7550  0022'                    u5470:
  7551  0022' 3EFF               	addlw	-1
  7552  0023' 1D03               	skipz
  7553  0024' 2800'              	goto	u5475
  7554  0025' 0831'              	movf	??___fltol,w
  7555  0026' 00B5'              	movwf	___fltol@sign1
  7556  0027'                    l3351:
  7557  0027' 17AF'              	bsf	___fltol@f1+2,7
  7558  0028'                    l3353:
  7559  0028' 30FF               	movlw	255
  7560  0029' 05AD'              	andwf	___fltol@f1,f
  7561  002A' 30FF               	movlw	255
  7562  002B' 05AE'              	andwf	___fltol@f1+1,f
  7563  002C' 30FF               	movlw	255
  7564  002D' 05AF'              	andwf	___fltol@f1+2,f
  7565  002E' 3000               	movlw	0
  7566  002F' 05B0'              	andwf	___fltol@f1+3,f
  7567  0030'                    l3355:
  7568  0030' 3096               	movlw	150
  7569  0031' 02B6'              	subwf	___fltol@exp1,f
  7570  0032'                    l3357:
  7571  0032' 1FB6'              	btfss	___fltol@exp1,7
  7572  0033' 2800'              	goto	u5481
  7573  0034' 2800'              	goto	u5480
  7574  0035'                    u5481:
  7575  0035' 2800'              	goto	l3369
  7576  0036'                    u5480:
  7577  0036'                    l3359:
  7578  0036' 0836'              	movf	___fltol@exp1,w
  7579  0037' 3A80               	xorlw	128
  7580  0038' 3E97               	addlw	151
  7581  0039' 1803               	skipnc
  7582  003A' 2800'              	goto	u5491
  7583  003B' 2800'              	goto	u5490
  7584  003C'                    u5491:
  7585  003C' 2800'              	goto	l3365
  7586  003D'                    u5490:
  7587  003D' 2800'              	goto	l3345
  7588  003E'                    l3365:
  7589  003E' 3001               	movlw	1
  7590  003F'                    u5505:
  7591  003F' 1003               	clrc
  7592  0040' 0CB0'              	rrf	___fltol@f1+3,f
  7593  0041' 0CAF'              	rrf	___fltol@f1+2,f
  7594  0042' 0CAE'              	rrf	___fltol@f1+1,f
  7595  0043' 0CAD'              	rrf	___fltol@f1,f
  7596  0044' 3EFF               	addlw	-1
  7597  0045' 1D03               	skipz
  7598  0046' 2800'              	goto	u5505
  7599  0047'                    l3367:
  7600  0047' 3001               	movlw	1
  7601  0048' 00FF               	movwf	btemp+1
  7602  0049' 087F               	movf	btemp+1,w
  7603  004A' 07B6'              	addwf	___fltol@exp1,f
  7604  004B' 1D03               	btfss	3,2
  7605  004C' 2800'              	goto	u5511
  7606  004D' 2800'              	goto	u5510
  7607  004E'                    u5511:
  7608  004E' 2800'              	goto	l3365
  7609  004F'                    u5510:
  7610  004F' 2800'              	goto	l3377
  7611  0050'                    l3369:
  7612  0050' 3020               	movlw	32
  7613  0051' 0236'              	subwf	___fltol@exp1,w
  7614  0052' 1C03               	skipc
  7615  0053' 2800'              	goto	u5521
  7616  0054' 2800'              	goto	u5520
  7617  0055'                    u5521:
  7618  0055' 2800'              	goto	l588
  7619  0056'                    u5520:
  7620  0056' 2800'              	goto	l3345
  7621  0057'                    l3375:
  7622  0057' 3001               	movlw	1
  7623  0058' 00B1'              	movwf	??___fltol
  7624  0059'                    u5535:
  7625  0059' 1003               	clrc
  7626  005A' 0DAD'              	rlf	___fltol@f1,f
  7627  005B' 0DAE'              	rlf	___fltol@f1+1,f
  7628  005C' 0DAF'              	rlf	___fltol@f1+2,f
  7629  005D' 0DB0'              	rlf	___fltol@f1+3,f
  7630  005E' 0BB1'              	decfsz	??___fltol,f
  7631  005F' 2800'              	goto	u5535
  7632  0060' 3001               	movlw	1
  7633  0061' 02B6'              	subwf	___fltol@exp1,f
  7634  0062'                    l588:
  7635  0062' 0836'              	movf	___fltol@exp1,w
  7636  0063' 1D03               	btfss	3,2
  7637  0064' 2800'              	goto	u5541
  7638  0065' 2800'              	goto	u5540
  7639  0066'                    u5541:
  7640  0066' 2800'              	goto	l3375
  7641  0067'                    u5540:
  7642  0067'                    l3377:
  7643  0067' 0835'              	movf	___fltol@sign1,w
  7644  0068' 1903               	btfsc	3,2
  7645  0069' 2800'              	goto	u5551
  7646  006A' 2800'              	goto	u5550
  7647  006B'                    u5551:
  7648  006B' 2800'              	goto	l591
  7649  006C'                    u5550:
  7650  006C'                    l3379:
  7651  006C' 09AD'              	comf	___fltol@f1,f
  7652  006D' 09AE'              	comf	___fltol@f1+1,f
  7653  006E' 09AF'              	comf	___fltol@f1+2,f
  7654  006F' 09B0'              	comf	___fltol@f1+3,f
  7655  0070' 0AAD'              	incf	___fltol@f1,f
  7656  0071' 1903               	skipnz
  7657  0072' 0AAE'              	incf	___fltol@f1+1,f
  7658  0073' 1903               	skipnz
  7659  0074' 0AAF'              	incf	___fltol@f1+2,f
  7660  0075' 1903               	skipnz
  7661  0076' 0AB0'              	incf	___fltol@f1+3,f
  7662  0077'                    l591:
  7663  0077'                    l581:
  7664  0077' 0008               	return
  7665  0078'                    __end_of___fltol:
  7666                           
  7667                           	psect	text18
  7668  0000'                    __ptext18:	
  7669 ;; *************** function ___flsub *****************
  7670 ;; Defined at:
  7671 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\sprcadd.c"
  7672 ;; Parameters:    Size  Location     Type
  7673 ;;  a               4   66[BANK0 ] long 
  7674 ;;  b               4   70[BANK0 ] long 
  7675 ;; Auto vars:     Size  Location     Type
  7676 ;;		None
  7677 ;; Return value:  Size  Location     Type
  7678 ;;                  4   66[BANK0 ] long 
  7679 ;; Registers used:
  7680 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7681 ;; Tracked objects:
  7682 ;;		On entry : 0/0
  7683 ;;		On exit  : 0/0
  7684 ;;		Unchanged: 0/0
  7685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7686 ;;      Params:         0       8       0       0       0
  7687 ;;      Locals:         0       0       0       0       0
  7688 ;;      Temps:          0       0       0       0       0
  7689 ;;      Totals:         0       8       0       0       0
  7690 ;;Total ram usage:        8 bytes
  7691 ;; Hardware stack levels used: 1
  7692 ;; Hardware stack levels required when called: 1
  7693 ;; This function calls:
  7694 ;;		___fladd
  7695 ;; This function is called by:
  7696 ;;		_sprintf
  7697 ;; This function uses a non-reentrant model
  7698 ;;
  7699                           
  7700  0000'                    ___flsub:	
  7701                           ;psect for function ___flsub
  7702                           
  7703  0000'                    l3403:	
  7704                           ;incstack = 0
  7705                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7706                           
  7707  0000' 3080               	movlw	128
  7708  0001' 1283               	bcf	3,5	;RP0=0, select bank0
  7709  0002' 1303               	bcf	3,6	;RP1=0, select bank0
  7710  0003' 06C5'              	xorwf	___flsub@a+3,f
  7711  0004'                    l3405:
  7712  0004' 0849'              	movf	___flsub@b+3,w
  7713  0005' 00B1'              	movwf	___fladd@b+3
  7714  0006' 0848'              	movf	___flsub@b+2,w
  7715  0007' 00B0'              	movwf	___fladd@b+2
  7716  0008' 0847'              	movf	___flsub@b+1,w
  7717  0009' 00AF'              	movwf	___fladd@b+1
  7718  000A' 0846'              	movf	___flsub@b,w
  7719  000B' 00AE'              	movwf	___fladd@b
  7720  000C' 0845'              	movf	___flsub@a+3,w
  7721  000D' 00B5'              	movwf	___fladd@a+3
  7722  000E' 0844'              	movf	___flsub@a+2,w
  7723  000F' 00B4'              	movwf	___fladd@a+2
  7724  0010' 0843'              	movf	___flsub@a+1,w
  7725  0011' 00B3'              	movwf	___fladd@a+1
  7726  0012' 0842'              	movf	___flsub@a,w
  7727  0013' 00B2'              	movwf	___fladd@a
  7728  0014' 120A' 118A' 2000' 120A' 118A' 	fcall	___fladd
  7729  0019' 1283               	bcf	3,5	;RP0=0, select bank0
  7730  001A' 1303               	bcf	3,6	;RP1=0, select bank0
  7731  001B' 0831'              	movf	?___fladd+3,w
  7732  001C' 00C5'              	movwf	?___flsub+3
  7733  001D' 0830'              	movf	?___fladd+2,w
  7734  001E' 00C4'              	movwf	?___flsub+2
  7735  001F' 082F'              	movf	?___fladd+1,w
  7736  0020' 00C3'              	movwf	?___flsub+1
  7737  0021' 082E'              	movf	?___fladd,w
  7738  0022' 00C2'              	movwf	?___flsub
  7739  0023'                    l751:
  7740  0023' 0008               	return
  7741  0024'                    __end_of___flsub:
  7742                           
  7743                           	psect	text19
  7744  0000'                    __ptext19:	
  7745 ;; *************** function ___fladd *****************
  7746 ;; Defined at:
  7747 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\sprcadd.c"
  7748 ;; Parameters:    Size  Location     Type
  7749 ;;  b               4   46[BANK0 ] long 
  7750 ;;  a               4   50[BANK0 ] long 
  7751 ;; Auto vars:     Size  Location     Type
  7752 ;;  grs             1   65[BANK0 ] unsigned char 
  7753 ;;  bexp            1   64[BANK0 ] unsigned char 
  7754 ;;  aexp            1   63[BANK0 ] unsigned char 
  7755 ;;  signs           1   62[BANK0 ] unsigned char 
  7756 ;; Return value:  Size  Location     Type
  7757 ;;                  4   46[BANK0 ] unsigned char 
  7758 ;; Registers used:
  7759 ;;		wreg, status,2, status,0, btemp+1
  7760 ;; Tracked objects:
  7761 ;;		On entry : 0/0
  7762 ;;		On exit  : 0/0
  7763 ;;		Unchanged: 0/0
  7764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7765 ;;      Params:         0       8       0       0       0
  7766 ;;      Locals:         0       4       0       0       0
  7767 ;;      Temps:          0       8       0       0       0
  7768 ;;      Totals:         0      20       0       0       0
  7769 ;;Total ram usage:       20 bytes
  7770 ;; Hardware stack levels used: 1
  7771 ;; This function calls:
  7772 ;;		Nothing
  7773 ;; This function is called by:
  7774 ;;		_sprintf
  7775 ;;		___flsub
  7776 ;; This function uses a non-reentrant model
  7777 ;;
  7778                           
  7779  0000'                    ___fladd:	
  7780                           ;psect for function ___fladd
  7781                           
  7782  0000'                    l2709:	
  7783                           ;incstack = 0
  7784                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  7785                           
  7786  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  7787  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  7788  0002' 0831'              	movf	___fladd@b+3,w
  7789  0003' 3980               	andlw	128
  7790  0004' 00BE'              	movwf	___fladd@signs
  7791  0005'                    l2711:
  7792  0005' 0831'              	movf	___fladd@b+3,w
  7793  0006' 00B6'              	movwf	??___fladd
  7794  0007' 0736'              	addwf	??___fladd,w
  7795  0008' 00C0'              	movwf	___fladd@bexp
  7796  0009'                    l2713:
  7797  0009' 1FB0'              	btfss	___fladd@b+2,7
  7798  000A' 2800'              	goto	u3861
  7799  000B' 2800'              	goto	u3860
  7800  000C'                    u3861:
  7801  000C' 2800'              	goto	l2717
  7802  000D'                    u3860:
  7803  000D'                    l2715:
  7804  000D' 1440'              	bsf	___fladd@bexp,0
  7805  000E'                    l2717:
  7806  000E' 0840'              	movf	___fladd@bexp,w
  7807  000F' 1903               	btfsc	3,2
  7808  0010' 2800'              	goto	u3871
  7809  0011' 2800'              	goto	u3870
  7810  0012'                    u3871:
  7811  0012' 2800'              	goto	l2727
  7812  0013'                    u3870:
  7813  0013'                    l2719:
  7814  0013' 0A40'              	incf	___fladd@bexp,w
  7815  0014' 1D03               	btfss	3,2
  7816  0015' 2800'              	goto	u3881
  7817  0016' 2800'              	goto	u3880
  7818  0017'                    u3881:
  7819  0017' 2800'              	goto	l2723
  7820  0018'                    u3880:
  7821  0018'                    l2721:
  7822  0018' 3000               	movlw	0
  7823  0019' 00B1'              	movwf	___fladd@b+3
  7824  001A' 3000               	movlw	0
  7825  001B' 00B0'              	movwf	___fladd@b+2
  7826  001C' 3000               	movlw	0
  7827  001D' 00AF'              	movwf	___fladd@b+1
  7828  001E' 3000               	movlw	0
  7829  001F' 00AE'              	movwf	___fladd@b
  7830  0020'                    l2723:
  7831  0020' 17B0'              	bsf	___fladd@b+2,7
  7832  0021'                    l2725:
  7833  0021' 01B1'              	clrf	___fladd@b+3
  7834  0022' 2800'              	goto	l2729
  7835  0023'                    l2727:
  7836  0023' 3000               	movlw	0
  7837  0024' 00B1'              	movwf	___fladd@b+3
  7838  0025' 3000               	movlw	0
  7839  0026' 00B0'              	movwf	___fladd@b+2
  7840  0027' 3000               	movlw	0
  7841  0028' 00AF'              	movwf	___fladd@b+1
  7842  0029' 3000               	movlw	0
  7843  002A' 00AE'              	movwf	___fladd@b
  7844  002B'                    l2729:
  7845  002B' 0835'              	movf	___fladd@a+3,w
  7846  002C' 3980               	andlw	128
  7847  002D' 00BF'              	movwf	___fladd@aexp
  7848  002E'                    l2731:
  7849  002E' 083F'              	movf	___fladd@aexp,w
  7850  002F' 063E'              	xorwf	___fladd@signs,w
  7851  0030' 1903               	skipnz
  7852  0031' 2800'              	goto	u3891
  7853  0032' 2800'              	goto	u3890
  7854  0033'                    u3891:
  7855  0033' 2800'              	goto	l2735
  7856  0034'                    u3890:
  7857  0034'                    l2733:
  7858  0034' 173E'              	bsf	___fladd@signs,6
  7859  0035'                    l2735:
  7860  0035' 0835'              	movf	___fladd@a+3,w
  7861  0036' 00B6'              	movwf	??___fladd
  7862  0037' 0736'              	addwf	??___fladd,w
  7863  0038' 00BF'              	movwf	___fladd@aexp
  7864  0039'                    l2737:
  7865  0039' 1FB4'              	btfss	___fladd@a+2,7
  7866  003A' 2800'              	goto	u3901
  7867  003B' 2800'              	goto	u3900
  7868  003C'                    u3901:
  7869  003C' 2800'              	goto	l2741
  7870  003D'                    u3900:
  7871  003D'                    l2739:
  7872  003D' 143F'              	bsf	___fladd@aexp,0
  7873  003E'                    l2741:
  7874  003E' 083F'              	movf	___fladd@aexp,w
  7875  003F' 1903               	btfsc	3,2
  7876  0040' 2800'              	goto	u3911
  7877  0041' 2800'              	goto	u3910
  7878  0042'                    u3911:
  7879  0042' 2800'              	goto	l2751
  7880  0043'                    u3910:
  7881  0043'                    l2743:
  7882  0043' 0A3F'              	incf	___fladd@aexp,w
  7883  0044' 1D03               	btfss	3,2
  7884  0045' 2800'              	goto	u3921
  7885  0046' 2800'              	goto	u3920
  7886  0047'                    u3921:
  7887  0047' 2800'              	goto	l2747
  7888  0048'                    u3920:
  7889  0048'                    l2745:
  7890  0048' 3000               	movlw	0
  7891  0049' 00B5'              	movwf	___fladd@a+3
  7892  004A' 3000               	movlw	0
  7893  004B' 00B4'              	movwf	___fladd@a+2
  7894  004C' 3000               	movlw	0
  7895  004D' 00B3'              	movwf	___fladd@a+1
  7896  004E' 3000               	movlw	0
  7897  004F' 00B2'              	movwf	___fladd@a
  7898  0050'                    l2747:
  7899  0050' 17B4'              	bsf	___fladd@a+2,7
  7900  0051'                    l2749:
  7901  0051' 01B5'              	clrf	___fladd@a+3
  7902  0052' 2800'              	goto	l705
  7903  0053'                    l2751:
  7904  0053' 3000               	movlw	0
  7905  0054' 00B5'              	movwf	___fladd@a+3
  7906  0055' 3000               	movlw	0
  7907  0056' 00B4'              	movwf	___fladd@a+2
  7908  0057' 3000               	movlw	0
  7909  0058' 00B3'              	movwf	___fladd@a+1
  7910  0059' 3000               	movlw	0
  7911  005A' 00B2'              	movwf	___fladd@a
  7912  005B'                    l705:
  7913  005B' 0840'              	movf	___fladd@bexp,w
  7914  005C' 023F'              	subwf	___fladd@aexp,w
  7915  005D' 1803               	skipnc
  7916  005E' 2800'              	goto	u3931
  7917  005F' 2800'              	goto	u3930
  7918  0060'                    u3931:
  7919  0060' 2800'              	goto	l2787
  7920  0061'                    u3930:
  7921  0061'                    l2753:
  7922  0061' 1F3E'              	btfss	___fladd@signs,6
  7923  0062' 2800'              	goto	u3941
  7924  0063' 2800'              	goto	u3940
  7925  0064'                    u3941:
  7926  0064' 2800'              	goto	l2757
  7927  0065'                    u3940:
  7928  0065'                    l2755:
  7929  0065' 3080               	movlw	128
  7930  0066' 00FF               	movwf	btemp+1
  7931  0067' 087F               	movf	btemp+1,w
  7932  0068' 06BE'              	xorwf	___fladd@signs,f
  7933  0069'                    l2757:
  7934  0069' 0840'              	movf	___fladd@bexp,w
  7935  006A' 00C1'              	movwf	___fladd@grs
  7936  006B'                    l2759:
  7937  006B' 083F'              	movf	___fladd@aexp,w
  7938  006C' 00C0'              	movwf	___fladd@bexp
  7939  006D'                    l2761:
  7940  006D' 0841'              	movf	___fladd@grs,w
  7941  006E' 00BF'              	movwf	___fladd@aexp
  7942  006F'                    l2763:
  7943  006F' 082E'              	movf	___fladd@b,w
  7944  0070' 00C1'              	movwf	___fladd@grs
  7945  0071'                    l2765:
  7946  0071' 0832'              	movf	___fladd@a,w
  7947  0072' 00AE'              	movwf	___fladd@b
  7948  0073'                    l2767:
  7949  0073' 0841'              	movf	___fladd@grs,w
  7950  0074' 00B2'              	movwf	___fladd@a
  7951  0075'                    l2769:
  7952  0075' 082F'              	movf	___fladd@b+1,w
  7953  0076' 00C1'              	movwf	___fladd@grs
  7954  0077'                    l2771:
  7955  0077' 0833'              	movf	___fladd@a+1,w
  7956  0078' 00AF'              	movwf	___fladd@b+1
  7957  0079'                    l2773:
  7958  0079' 0841'              	movf	___fladd@grs,w
  7959  007A' 00B3'              	movwf	___fladd@a+1
  7960  007B'                    l2775:
  7961  007B' 0830'              	movf	___fladd@b+2,w
  7962  007C' 00C1'              	movwf	___fladd@grs
  7963  007D'                    l2777:
  7964  007D' 0834'              	movf	___fladd@a+2,w
  7965  007E' 00B0'              	movwf	___fladd@b+2
  7966  007F'                    l2779:
  7967  007F' 0841'              	movf	___fladd@grs,w
  7968  0080' 00B4'              	movwf	___fladd@a+2
  7969  0081'                    l2781:
  7970  0081' 0831'              	movf	___fladd@b+3,w
  7971  0082' 00C1'              	movwf	___fladd@grs
  7972  0083'                    l2783:
  7973  0083' 0835'              	movf	___fladd@a+3,w
  7974  0084' 00B1'              	movwf	___fladd@b+3
  7975  0085'                    l2785:
  7976  0085' 0841'              	movf	___fladd@grs,w
  7977  0086' 00B5'              	movwf	___fladd@a+3
  7978  0087'                    l2787:
  7979  0087' 01C1'              	clrf	___fladd@grs
  7980  0088'                    l2789:
  7981  0088' 083F'              	movf	___fladd@aexp,w
  7982  0089' 00B6'              	movwf	??___fladd
  7983  008A' 01B7'              	clrf	??___fladd+1
  7984  008B' 0837'              	movf	??___fladd+1,w
  7985  008C' 00B9'              	movwf	??___fladd+3
  7986  008D' 0840'              	movf	___fladd@bexp,w
  7987  008E' 0236'              	subwf	??___fladd,w
  7988  008F' 00B8'              	movwf	??___fladd+2
  7989  0090' 1C03               	skipc
  7990  0091' 03B9'              	decf	??___fladd+3,f
  7991  0092' 0839'              	movf	??___fladd+3,w
  7992  0093' 3A80               	xorlw	128
  7993  0094' 00FF               	movwf	btemp+1
  7994  0095' 3080               	movlw	128
  7995  0096' 027F               	subwf	btemp+1,w
  7996  0097' 1D03               	skipz
  7997  0098' 2800'              	goto	u3955
  7998  0099' 301A               	movlw	26
  7999  009A' 0238'              	subwf	??___fladd+2,w
  8000  009B'                    u3955:
  8001  009B' 1C03               	skipc
  8002  009C' 2800'              	goto	u3951
  8003  009D' 2800'              	goto	u3950
  8004  009E'                    u3951:
  8005  009E' 2800'              	goto	l2805
  8006  009F'                    u3950:
  8007  009F'                    l2791:
  8008  009F' 1283               	bcf	3,5	;RP0=0, select bank0
  8009  00A0' 1303               	bcf	3,6	;RP1=0, select bank0
  8010  00A1' 0831'              	movf	___fladd@b+3,w
  8011  00A2' 0430'              	iorwf	___fladd@b+2,w
  8012  00A3' 042F'              	iorwf	___fladd@b+1,w
  8013  00A4' 042E'              	iorwf	___fladd@b,w
  8014  00A5' 1D03               	skipz
  8015  00A6' 2800'              	goto	u3961
  8016  00A7' 2800'              	goto	u3960
  8017  00A8'                    u3961:
  8018  00A8' 3001               	movlw	1
  8019  00A9' 2800'              	goto	u3970
  8020  00AA'                    u3960:
  8021  00AA' 3000               	movlw	0
  8022  00AB'                    u3970:
  8023  00AB' 00C1'              	movwf	___fladd@grs
  8024  00AC' 3000               	movlw	0
  8025  00AD' 00B1'              	movwf	___fladd@b+3
  8026  00AE' 3000               	movlw	0
  8027  00AF' 00B0'              	movwf	___fladd@b+2
  8028  00B0' 3000               	movlw	0
  8029  00B1' 00AF'              	movwf	___fladd@b+1
  8030  00B2' 3000               	movlw	0
  8031  00B3' 00AE'              	movwf	___fladd@b
  8032  00B4' 083F'              	movf	___fladd@aexp,w
  8033  00B5' 00C0'              	movwf	___fladd@bexp
  8034  00B6' 2800'              	goto	l709
  8035  00B7'                    l711:
  8036  00B7' 1C41'              	btfss	___fladd@grs,0
  8037  00B8' 2800'              	goto	u3981
  8038  00B9' 2800'              	goto	u3980
  8039  00BA'                    u3981:
  8040  00BA' 2800'              	goto	l2795
  8041  00BB'                    u3980:
  8042  00BB'                    l2793:
  8043  00BB' 0841'              	movf	___fladd@grs,w
  8044  00BC' 00B6'              	movwf	??___fladd
  8045  00BD' 1003               	clrc
  8046  00BE' 0C36'              	rrf	??___fladd,w
  8047  00BF' 3801               	iorlw	1
  8048  00C0' 00C1'              	movwf	___fladd@grs
  8049  00C1' 2800'              	goto	l2797
  8050  00C2'                    l2795:
  8051  00C2' 1003               	clrc
  8052  00C3' 0CC1'              	rrf	___fladd@grs,f
  8053  00C4'                    l2797:
  8054  00C4' 1C2E'              	btfss	___fladd@b,0
  8055  00C5' 2800'              	goto	u3991
  8056  00C6' 2800'              	goto	u3990
  8057  00C7'                    u3991:
  8058  00C7' 2800'              	goto	l2801
  8059  00C8'                    u3990:
  8060  00C8'                    l2799:
  8061  00C8' 17C1'              	bsf	___fladd@grs,7
  8062  00C9'                    l2801:
  8063  00C9' 3001               	movlw	1
  8064  00CA' 00B6'              	movwf	??___fladd
  8065  00CB'                    u4005:
  8066  00CB' 0D31'              	rlf	___fladd@b+3,w
  8067  00CC' 0CB1'              	rrf	___fladd@b+3,f
  8068  00CD' 0CB0'              	rrf	___fladd@b+2,f
  8069  00CE' 0CAF'              	rrf	___fladd@b+1,f
  8070  00CF' 0CAE'              	rrf	___fladd@b,f
  8071  00D0' 0B80'              	decfsz	??___fladd& (0+127),f
  8072  00D1' 2800'              	goto	u4005
  8073  00D2'                    l2803:
  8074  00D2' 3001               	movlw	1
  8075  00D3' 00FF               	movwf	btemp+1
  8076  00D4' 087F               	movf	btemp+1,w
  8077  00D5' 07C0'              	addwf	___fladd@bexp,f
  8078  00D6'                    l2805:
  8079  00D6' 1283               	bcf	3,5	;RP0=0, select bank0
  8080  00D7' 1303               	bcf	3,6	;RP1=0, select bank0
  8081  00D8' 083F'              	movf	___fladd@aexp,w
  8082  00D9' 0240'              	subwf	___fladd@bexp,w
  8083  00DA' 1C03               	skipc
  8084  00DB' 2800'              	goto	u4011
  8085  00DC' 2800'              	goto	u4010
  8086  00DD'                    u4011:
  8087  00DD' 2800'              	goto	l711
  8088  00DE'                    u4010:
  8089  00DE'                    l709:
  8090  00DE' 1B3E'              	btfsc	___fladd@signs,6
  8091  00DF' 2800'              	goto	u4021
  8092  00E0' 2800'              	goto	u4020
  8093  00E1'                    u4021:
  8094  00E1' 2800'              	goto	l2831
  8095  00E2'                    u4020:
  8096  00E2'                    l2807:
  8097  00E2' 0840'              	movf	___fladd@bexp,w
  8098  00E3' 1D03               	btfss	3,2
  8099  00E4' 2800'              	goto	u4031
  8100  00E5' 2800'              	goto	u4030
  8101  00E6'                    u4031:
  8102  00E6' 2800'              	goto	l2813
  8103  00E7'                    u4030:
  8104  00E7'                    l2809:
  8105  00E7' 3000               	movlw	0
  8106  00E8' 00B1'              	movwf	?___fladd+3
  8107  00E9' 3000               	movlw	0
  8108  00EA' 00B0'              	movwf	?___fladd+2
  8109  00EB' 3000               	movlw	0
  8110  00EC' 00AF'              	movwf	?___fladd+1
  8111  00ED' 3000               	movlw	0
  8112  00EE' 00AE'              	movwf	?___fladd
  8113  00EF' 2800'              	goto	l718
  8114  00F0'                    l2813:
  8115  00F0' 0832'              	movf	___fladd@a,w
  8116  00F1' 07AE'              	addwf	___fladd@b,f
  8117  00F2' 0833'              	movf	___fladd@a+1,w
  8118  00F3' 1103               	clrz
  8119  00F4' 1803               	skipnc
  8120  00F5' 3E01               	addlw	1
  8121  00F6' 1903               	skipnz
  8122  00F7' 2800'              	goto	u4041
  8123  00F8' 07AF'              	addwf	___fladd@b+1,f
  8124  00F9'                    u4041:
  8125  00F9' 0834'              	movf	___fladd@a+2,w
  8126  00FA' 1103               	clrz
  8127  00FB' 1803               	skipnc
  8128  00FC' 3E01               	addlw	1
  8129  00FD' 1903               	skipnz
  8130  00FE' 2800'              	goto	u4042
  8131  00FF' 07B0'              	addwf	___fladd@b+2,f
  8132  0100'                    u4042:
  8133  0100' 0835'              	movf	___fladd@a+3,w
  8134  0101' 1103               	clrz
  8135  0102' 1803               	skipnc
  8136  0103' 3E01               	addlw	1
  8137  0104' 1903               	skipnz
  8138  0105' 2800'              	goto	u4043
  8139  0106' 07B1'              	addwf	___fladd@b+3,f
  8140  0107'                    u4043:
  8141  0107'                    l2815:
  8142  0107' 1C31'              	btfss	___fladd@b+3,0
  8143  0108' 2800'              	goto	u4051
  8144  0109' 2800'              	goto	u4050
  8145  010A'                    u4051:
  8146  010A' 2800'              	goto	l2867
  8147  010B'                    u4050:
  8148  010B'                    l2817:
  8149  010B' 1C41'              	btfss	___fladd@grs,0
  8150  010C' 2800'              	goto	u4061
  8151  010D' 2800'              	goto	u4060
  8152  010E'                    u4061:
  8153  010E' 2800'              	goto	l2821
  8154  010F'                    u4060:
  8155  010F'                    l2819:
  8156  010F' 0841'              	movf	___fladd@grs,w
  8157  0110' 00B6'              	movwf	??___fladd
  8158  0111' 1003               	clrc
  8159  0112' 0C36'              	rrf	??___fladd,w
  8160  0113' 3801               	iorlw	1
  8161  0114' 00C1'              	movwf	___fladd@grs
  8162  0115' 2800'              	goto	l2823
  8163  0116'                    l2821:
  8164  0116' 1003               	clrc
  8165  0117' 0CC1'              	rrf	___fladd@grs,f
  8166  0118'                    l2823:
  8167  0118' 1C2E'              	btfss	___fladd@b,0
  8168  0119' 2800'              	goto	u4071
  8169  011A' 2800'              	goto	u4070
  8170  011B'                    u4071:
  8171  011B' 2800'              	goto	l2827
  8172  011C'                    u4070:
  8173  011C'                    l2825:
  8174  011C' 17C1'              	bsf	___fladd@grs,7
  8175  011D'                    l2827:
  8176  011D' 3001               	movlw	1
  8177  011E' 00B6'              	movwf	??___fladd
  8178  011F'                    u4085:
  8179  011F' 0D31'              	rlf	___fladd@b+3,w
  8180  0120' 0CB1'              	rrf	___fladd@b+3,f
  8181  0121' 0CB0'              	rrf	___fladd@b+2,f
  8182  0122' 0CAF'              	rrf	___fladd@b+1,f
  8183  0123' 0CAE'              	rrf	___fladd@b,f
  8184  0124' 0B80'              	decfsz	??___fladd& (0+127),f
  8185  0125' 2800'              	goto	u4085
  8186  0126'                    l2829:
  8187  0126' 3001               	movlw	1
  8188  0127' 00FF               	movwf	btemp+1
  8189  0128' 087F               	movf	btemp+1,w
  8190  0129' 07C0'              	addwf	___fladd@bexp,f
  8191  012A' 2800'              	goto	l2867
  8192  012B'                    l2831:
  8193  012B' 0831'              	movf	___fladd@b+3,w
  8194  012C' 3A80               	xorlw	128
  8195  012D' 00FF               	movwf	btemp+1
  8196  012E' 0835'              	movf	___fladd@a+3,w
  8197  012F' 3A80               	xorlw	128
  8198  0130' 027F               	subwf	btemp+1,w
  8199  0131' 1D03               	skipz
  8200  0132' 2800'              	goto	u4093
  8201  0133' 0834'              	movf	___fladd@a+2,w
  8202  0134' 0230'              	subwf	___fladd@b+2,w
  8203  0135' 1D03               	skipz
  8204  0136' 2800'              	goto	u4093
  8205  0137' 0833'              	movf	___fladd@a+1,w
  8206  0138' 022F'              	subwf	___fladd@b+1,w
  8207  0139' 1D03               	skipz
  8208  013A' 2800'              	goto	u4093
  8209  013B' 0832'              	movf	___fladd@a,w
  8210  013C' 022E'              	subwf	___fladd@b,w
  8211  013D'                    u4093:
  8212  013D' 1803               	skipnc
  8213  013E' 2800'              	goto	u4091
  8214  013F' 2800'              	goto	u4090
  8215  0140'                    u4091:
  8216  0140' 2800'              	goto	l2843
  8217  0141'                    u4090:
  8218  0141'                    l2833:
  8219  0141' 30FF               	movlw	255
  8220  0142' 00B6'              	movwf	??___fladd
  8221  0143' 30FF               	movlw	255
  8222  0144' 00B7'              	movwf	??___fladd+1
  8223  0145' 30FF               	movlw	255
  8224  0146' 00B8'              	movwf	??___fladd+2
  8225  0147' 30FF               	movlw	255
  8226  0148' 00B9'              	movwf	??___fladd+3
  8227  0149' 0832'              	movf	___fladd@a,w
  8228  014A' 00BA'              	movwf	??___fladd+4
  8229  014B' 0833'              	movf	___fladd@a+1,w
  8230  014C' 00BB'              	movwf	??___fladd+5
  8231  014D' 0834'              	movf	___fladd@a+2,w
  8232  014E' 00BC'              	movwf	??___fladd+6
  8233  014F' 0835'              	movf	___fladd@a+3,w
  8234  0150' 00BD'              	movwf	??___fladd+7
  8235  0151' 082E'              	movf	___fladd@b,w
  8236  0152' 02BA'              	subwf	??___fladd+4,f
  8237  0153' 082F'              	movf	___fladd@b+1,w
  8238  0154' 1C03               	skipc
  8239  0155' 0F2F'              	incfsz	___fladd@b+1,w
  8240  0156' 2800'              	goto	u4101
  8241  0157' 2800'              	goto	u4102
  8242  0158'                    u4101:
  8243  0158' 02BB'              	subwf	??___fladd+5,f
  8244  0159'                    u4102:
  8245  0159' 0830'              	movf	___fladd@b+2,w
  8246  015A' 1C03               	skipc
  8247  015B' 0F30'              	incfsz	___fladd@b+2,w
  8248  015C' 2800'              	goto	u4103
  8249  015D' 2800'              	goto	u4104
  8250  015E'                    u4103:
  8251  015E' 02BC'              	subwf	??___fladd+6,f
  8252  015F'                    u4104:
  8253  015F' 0831'              	movf	___fladd@b+3,w
  8254  0160' 1C03               	skipc
  8255  0161' 0F31'              	incfsz	___fladd@b+3,w
  8256  0162' 2800'              	goto	u4105
  8257  0163' 2800'              	goto	u4106
  8258  0164'                    u4105:
  8259  0164' 02BD'              	subwf	??___fladd+7,f
  8260  0165'                    u4106:
  8261  0165' 083A'              	movf	??___fladd+4,w
  8262  0166' 07B6'              	addwf	??___fladd,f
  8263  0167' 083B'              	movf	??___fladd+5,w
  8264  0168' 1803               	skipnc
  8265  0169' 0F3B'              	incfsz	??___fladd+5,w
  8266  016A' 2800'              	goto	u4110
  8267  016B' 2800'              	goto	u4111
  8268  016C'                    u4110:
  8269  016C' 07B7'              	addwf	??___fladd+1,f
  8270  016D'                    u4111:
  8271  016D' 083C'              	movf	??___fladd+6,w
  8272  016E' 1803               	skipnc
  8273  016F' 0F3C'              	incfsz	??___fladd+6,w
  8274  0170' 2800'              	goto	u4112
  8275  0171' 2800'              	goto	u4113
  8276  0172'                    u4112:
  8277  0172' 07B8'              	addwf	??___fladd+2,f
  8278  0173'                    u4113:
  8279  0173' 083D'              	movf	??___fladd+7,w
  8280  0174' 1803               	skipnc
  8281  0175' 0A3D'              	incf	??___fladd+7,w
  8282  0176' 07B9'              	addwf	??___fladd+3,f
  8283  0177' 0839'              	movf	??___fladd+3,w
  8284  0178' 00B1'              	movwf	___fladd@b+3
  8285  0179' 0838'              	movf	??___fladd+2,w
  8286  017A' 00B0'              	movwf	___fladd@b+2
  8287  017B' 0837'              	movf	??___fladd+1,w
  8288  017C' 00AF'              	movwf	___fladd@b+1
  8289  017D' 0836'              	movf	??___fladd,w
  8290  017E' 00AE'              	movwf	___fladd@b
  8291  017F'                    l2835:
  8292  017F' 3080               	movlw	128
  8293  0180' 00FF               	movwf	btemp+1
  8294  0181' 087F               	movf	btemp+1,w
  8295  0182' 06BE'              	xorwf	___fladd@signs,f
  8296  0183'                    l2837:
  8297  0183' 09C1'              	comf	___fladd@grs,f
  8298  0184' 0AC1'              	incf	___fladd@grs,f
  8299  0185'                    l2839:
  8300  0185' 0841'              	movf	___fladd@grs,w
  8301  0186' 1D03               	btfss	3,2
  8302  0187' 2800'              	goto	u4121
  8303  0188' 2800'              	goto	u4120
  8304  0189'                    u4121:
  8305  0189' 2800'              	goto	l726
  8306  018A'                    u4120:
  8307  018A'                    l2841:
  8308  018A' 3001               	movlw	1
  8309  018B' 07AE'              	addwf	___fladd@b,f
  8310  018C' 3000               	movlw	0
  8311  018D' 1803               	skipnc
  8312  018E' 3001               	movlw	1
  8313  018F' 07AF'              	addwf	___fladd@b+1,f
  8314  0190' 3000               	movlw	0
  8315  0191' 1803               	skipnc
  8316  0192' 3001               	movlw	1
  8317  0193' 07B0'              	addwf	___fladd@b+2,f
  8318  0194' 3000               	movlw	0
  8319  0195' 1803               	skipnc
  8320  0196' 3001               	movlw	1
  8321  0197' 07B1'              	addwf	___fladd@b+3,f
  8322  0198' 2800'              	goto	l726
  8323  0199'                    l2843:
  8324  0199' 0832'              	movf	___fladd@a,w
  8325  019A' 02AE'              	subwf	___fladd@b,f
  8326  019B' 0833'              	movf	___fladd@a+1,w
  8327  019C' 1C03               	skipc
  8328  019D' 0F33'              	incfsz	___fladd@a+1,w
  8329  019E' 02AF'              	subwf	___fladd@b+1,f
  8330  019F' 0834'              	movf	___fladd@a+2,w
  8331  01A0' 1C03               	skipc
  8332  01A1' 0F34'              	incfsz	___fladd@a+2,w
  8333  01A2' 02B0'              	subwf	___fladd@b+2,f
  8334  01A3' 0835'              	movf	___fladd@a+3,w
  8335  01A4' 1C03               	skipc
  8336  01A5' 0F35'              	incfsz	___fladd@a+3,w
  8337  01A6' 02B1'              	subwf	___fladd@b+3,f
  8338  01A7'                    l726:
  8339  01A7' 0831'              	movf	___fladd@b+3,w
  8340  01A8' 0430'              	iorwf	___fladd@b+2,w
  8341  01A9' 042F'              	iorwf	___fladd@b+1,w
  8342  01AA' 042E'              	iorwf	___fladd@b,w
  8343  01AB' 1D03               	skipz
  8344  01AC' 2800'              	goto	u4131
  8345  01AD' 2800'              	goto	u4130
  8346  01AE'                    u4131:
  8347  01AE' 2800'              	goto	l2865
  8348  01AF'                    u4130:
  8349  01AF'                    l2845:
  8350  01AF' 0841'              	movf	___fladd@grs,w
  8351  01B0' 1D03               	btfss	3,2
  8352  01B1' 2800'              	goto	u4141
  8353  01B2' 2800'              	goto	u4140
  8354  01B3'                    u4141:
  8355  01B3' 2800'              	goto	l2865
  8356  01B4'                    u4140:
  8357  01B4'                    l2847:
  8358  01B4' 3000               	movlw	0
  8359  01B5' 00B1'              	movwf	?___fladd+3
  8360  01B6' 3000               	movlw	0
  8361  01B7' 00B0'              	movwf	?___fladd+2
  8362  01B8' 3000               	movlw	0
  8363  01B9' 00AF'              	movwf	?___fladd+1
  8364  01BA' 3000               	movlw	0
  8365  01BB' 00AE'              	movwf	?___fladd
  8366  01BC' 2800'              	goto	l718
  8367  01BD'                    l2851:
  8368  01BD' 3001               	movlw	1
  8369  01BE' 00B6'              	movwf	??___fladd
  8370  01BF'                    u4155:
  8371  01BF' 1003               	clrc
  8372  01C0' 0DAE'              	rlf	___fladd@b,f
  8373  01C1' 0DAF'              	rlf	___fladd@b+1,f
  8374  01C2' 0DB0'              	rlf	___fladd@b+2,f
  8375  01C3' 0DB1'              	rlf	___fladd@b+3,f
  8376  01C4' 0BB6'              	decfsz	??___fladd,f
  8377  01C5' 2800'              	goto	u4155
  8378  01C6'                    l2853:
  8379  01C6' 1FC1'              	btfss	___fladd@grs,7
  8380  01C7' 2800'              	goto	u4161
  8381  01C8' 2800'              	goto	u4160
  8382  01C9'                    u4161:
  8383  01C9' 2800'              	goto	l730
  8384  01CA'                    u4160:
  8385  01CA'                    l2855:
  8386  01CA' 142E'              	bsf	___fladd@b,0
  8387  01CB'                    l730:
  8388  01CB' 1C41'              	btfss	___fladd@grs,0
  8389  01CC' 2800'              	goto	u4171
  8390  01CD' 2800'              	goto	u4170
  8391  01CE'                    u4171:
  8392  01CE' 2800'              	goto	l2859
  8393  01CF'                    u4170:
  8394  01CF'                    l2857:
  8395  01CF' 1403               	setc
  8396  01D0' 0DC1'              	rlf	___fladd@grs,f
  8397  01D1' 2800'              	goto	l2861
  8398  01D2'                    l2859:
  8399  01D2' 1003               	clrc
  8400  01D3' 0DC1'              	rlf	___fladd@grs,f
  8401  01D4'                    l2861:
  8402  01D4' 0840'              	movf	___fladd@bexp,w
  8403  01D5' 1903               	btfsc	3,2
  8404  01D6' 2800'              	goto	u4181
  8405  01D7' 2800'              	goto	u4180
  8406  01D8'                    u4181:
  8407  01D8' 2800'              	goto	l2865
  8408  01D9'                    u4180:
  8409  01D9'                    l2863:
  8410  01D9' 3001               	movlw	1
  8411  01DA' 02C0'              	subwf	___fladd@bexp,f
  8412  01DB'                    l2865:
  8413  01DB' 1FB0'              	btfss	___fladd@b+2,7
  8414  01DC' 2800'              	goto	u4191
  8415  01DD' 2800'              	goto	u4190
  8416  01DE'                    u4191:
  8417  01DE' 2800'              	goto	l2851
  8418  01DF'                    u4190:
  8419  01DF'                    l2867:
  8420  01DF' 01BF'              	clrf	___fladd@aexp
  8421  01E0'                    l2869:
  8422  01E0' 1FC1'              	btfss	___fladd@grs,7
  8423  01E1' 2800'              	goto	u4201
  8424  01E2' 2800'              	goto	u4200
  8425  01E3'                    u4201:
  8426  01E3' 2800'              	goto	l2877
  8427  01E4'                    u4200:
  8428  01E4'                    l2871:
  8429  01E4' 0841'              	movf	___fladd@grs,w
  8430  01E5' 397F               	andlw	127
  8431  01E6' 1903               	btfsc	3,2
  8432  01E7' 2800'              	goto	u4211
  8433  01E8' 2800'              	goto	u4210
  8434  01E9'                    u4211:
  8435  01E9' 2800'              	goto	l736
  8436  01EA'                    u4210:
  8437  01EA'                    l2873:
  8438  01EA' 01BF'              	clrf	___fladd@aexp
  8439  01EB' 0ABF'              	incf	___fladd@aexp,f
  8440  01EC' 2800'              	goto	l2877
  8441  01ED'                    l736:
  8442  01ED' 1C2E'              	btfss	___fladd@b,0
  8443  01EE' 2800'              	goto	u4221
  8444  01EF' 2800'              	goto	u4220
  8445  01F0'                    u4221:
  8446  01F0' 2800'              	goto	l2877
  8447  01F1'                    u4220:
  8448  01F1' 2800'              	goto	l2873
  8449  01F2'                    l2877:
  8450  01F2' 083F'              	movf	___fladd@aexp,w
  8451  01F3' 1903               	btfsc	3,2
  8452  01F4' 2800'              	goto	u4231
  8453  01F5' 2800'              	goto	u4230
  8454  01F6'                    u4231:
  8455  01F6' 2800'              	goto	l2887
  8456  01F7'                    u4230:
  8457  01F7'                    l2879:
  8458  01F7' 3001               	movlw	1
  8459  01F8' 07AE'              	addwf	___fladd@b,f
  8460  01F9' 3000               	movlw	0
  8461  01FA' 1803               	skipnc
  8462  01FB' 3001               	movlw	1
  8463  01FC' 07AF'              	addwf	___fladd@b+1,f
  8464  01FD' 3000               	movlw	0
  8465  01FE' 1803               	skipnc
  8466  01FF' 3001               	movlw	1
  8467  0200' 07B0'              	addwf	___fladd@b+2,f
  8468  0201' 3000               	movlw	0
  8469  0202' 1803               	skipnc
  8470  0203' 3001               	movlw	1
  8471  0204' 07B1'              	addwf	___fladd@b+3,f
  8472  0205'                    l2881:
  8473  0205' 1C31'              	btfss	___fladd@b+3,0
  8474  0206' 2800'              	goto	u4241
  8475  0207' 2800'              	goto	u4240
  8476  0208'                    u4241:
  8477  0208' 2800'              	goto	l2887
  8478  0209'                    u4240:
  8479  0209'                    l2883:
  8480  0209' 082E'              	movf	___fladd@b,w
  8481  020A' 00B6'              	movwf	??___fladd
  8482  020B' 082F'              	movf	___fladd@b+1,w
  8483  020C' 00B7'              	movwf	??___fladd+1
  8484  020D' 0830'              	movf	___fladd@b+2,w
  8485  020E' 00B8'              	movwf	??___fladd+2
  8486  020F' 0831'              	movf	___fladd@b+3,w
  8487  0210' 00B9'              	movwf	??___fladd+3
  8488  0211' 3001               	movlw	1
  8489  0212' 00BA'              	movwf	??___fladd+4
  8490  0213'                    u4255:
  8491  0213' 0D39'              	rlf	??___fladd+3,w
  8492  0214' 0CB9'              	rrf	??___fladd+3,f
  8493  0215' 0CB8'              	rrf	??___fladd+2,f
  8494  0216' 0CB7'              	rrf	??___fladd+1,f
  8495  0217' 0CB6'              	rrf	??___fladd,f
  8496  0218'                    u4250:
  8497  0218' 0BBA'              	decfsz	??___fladd+4,f
  8498  0219' 2800'              	goto	u4255
  8499  021A' 0839'              	movf	??___fladd+3,w
  8500  021B' 00B1'              	movwf	___fladd@b+3
  8501  021C' 0838'              	movf	??___fladd+2,w
  8502  021D' 00B0'              	movwf	___fladd@b+2
  8503  021E' 0837'              	movf	??___fladd+1,w
  8504  021F' 00AF'              	movwf	___fladd@b+1
  8505  0220' 0836'              	movf	??___fladd,w
  8506  0221' 00AE'              	movwf	___fladd@b
  8507  0222' 0A40'              	incf	___fladd@bexp,w
  8508  0223' 1903               	btfsc	3,2
  8509  0224' 2800'              	goto	u4261
  8510  0225' 2800'              	goto	u4260
  8511  0226'                    u4261:
  8512  0226' 2800'              	goto	l2887
  8513  0227'                    u4260:
  8514  0227'                    l2885:
  8515  0227' 3001               	movlw	1
  8516  0228' 00FF               	movwf	btemp+1
  8517  0229' 087F               	movf	btemp+1,w
  8518  022A' 07C0'              	addwf	___fladd@bexp,f
  8519  022B'                    l2887:
  8520  022B' 0A40'              	incf	___fladd@bexp,w
  8521  022C' 1903               	btfsc	3,2
  8522  022D' 2800'              	goto	u4271
  8523  022E' 2800'              	goto	u4270
  8524  022F'                    u4271:
  8525  022F' 2800'              	goto	l2891
  8526  0230'                    u4270:
  8527  0230'                    l2889:
  8528  0230' 0840'              	movf	___fladd@bexp,w
  8529  0231' 1D03               	btfss	3,2
  8530  0232' 2800'              	goto	u4281
  8531  0233' 2800'              	goto	u4280
  8532  0234'                    u4281:
  8533  0234' 2800'              	goto	l2897
  8534  0235'                    u4280:
  8535  0235'                    l2891:
  8536  0235' 3000               	movlw	0
  8537  0236' 00B1'              	movwf	___fladd@b+3
  8538  0237' 3000               	movlw	0
  8539  0238' 00B0'              	movwf	___fladd@b+2
  8540  0239' 3000               	movlw	0
  8541  023A' 00AF'              	movwf	___fladd@b+1
  8542  023B' 3000               	movlw	0
  8543  023C' 00AE'              	movwf	___fladd@b
  8544  023D'                    l2893:
  8545  023D' 0840'              	movf	___fladd@bexp,w
  8546  023E' 1D03               	btfss	3,2
  8547  023F' 2800'              	goto	u4291
  8548  0240' 2800'              	goto	u4290
  8549  0241'                    u4291:
  8550  0241' 2800'              	goto	l2897
  8551  0242'                    u4290:
  8552  0242'                    l2895:
  8553  0242' 01BE'              	clrf	___fladd@signs
  8554  0243'                    l2897:
  8555  0243' 1C40'              	btfss	___fladd@bexp,0
  8556  0244' 2800'              	goto	u4301
  8557  0245' 2800'              	goto	u4300
  8558  0246'                    u4301:
  8559  0246' 2800'              	goto	l2901
  8560  0247'                    u4300:
  8561  0247'                    l2899:
  8562  0247' 17B0'              	bsf	___fladd@b+2,7
  8563  0248' 2800'              	goto	l2903
  8564  0249'                    l2901:
  8565  0249' 307F               	movlw	127
  8566  024A' 00FF               	movwf	btemp+1
  8567  024B' 087F               	movf	btemp+1,w
  8568  024C' 05B0'              	andwf	___fladd@b+2,f
  8569  024D'                    l2903:
  8570  024D' 0840'              	movf	___fladd@bexp,w
  8571  024E' 00B6'              	movwf	??___fladd
  8572  024F' 1003               	clrc
  8573  0250' 0C36'              	rrf	??___fladd,w
  8574  0251' 00B1'              	movwf	___fladd@b+3
  8575  0252'                    l2905:
  8576  0252' 1FBE'              	btfss	___fladd@signs,7
  8577  0253' 2800'              	goto	u4311
  8578  0254' 2800'              	goto	u4310
  8579  0255'                    u4311:
  8580  0255' 2800'              	goto	l748
  8581  0256'                    u4310:
  8582  0256'                    l2907:
  8583  0256' 17B1'              	bsf	___fladd@b+3,7
  8584  0257'                    l748:
  8585  0257'                    l718:
  8586  0257' 0008               	return
  8587  0258'                    __end_of___fladd:
  8588                           
  8589                           	psect	text20
  8590  0000'                    __ptext20:	
  8591 ;; *************** function ___flneg *****************
  8592 ;; Defined at:
  8593 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\flneg.c"
  8594 ;; Parameters:    Size  Location     Type
  8595 ;;  f1              4    0[COMMON] unsigned char 
  8596 ;; Auto vars:     Size  Location     Type
  8597 ;;		None
  8598 ;; Return value:  Size  Location     Type
  8599 ;;                  4    0[COMMON] unsigned char 
  8600 ;; Registers used:
  8601 ;;		wreg
  8602 ;; Tracked objects:
  8603 ;;		On entry : 0/0
  8604 ;;		On exit  : 0/0
  8605 ;;		Unchanged: 0/0
  8606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8607 ;;      Params:         4       0       0       0       0
  8608 ;;      Locals:         0       0       0       0       0
  8609 ;;      Temps:          0       0       0       0       0
  8610 ;;      Totals:         4       0       0       0       0
  8611 ;;Total ram usage:        4 bytes
  8612 ;; Hardware stack levels used: 1
  8613 ;; This function calls:
  8614 ;;		Nothing
  8615 ;; This function is called by:
  8616 ;;		_sprintf
  8617 ;; This function uses a non-reentrant model
  8618 ;;
  8619                           
  8620  0000'                    ___flneg:	
  8621                           ;psect for function ___flneg
  8622                           
  8623  0000'                    l3335:	
  8624                           ;incstack = 0
  8625                           ; Regs used in ___flneg: [wreg]
  8626                           
  8627  0000' 0803'              	movf	___flneg@f1+3,w
  8628  0001' 0402'              	iorwf	___flneg@f1+2,w
  8629  0002' 0401'              	iorwf	___flneg@f1+1,w
  8630  0003' 0400'              	iorwf	___flneg@f1,w
  8631  0004' 1903               	skipnz
  8632  0005' 2800'              	goto	u5451
  8633  0006' 2800'              	goto	u5450
  8634  0007'                    u5451:
  8635  0007' 2800'              	goto	l3339
  8636  0008'                    u5450:
  8637  0008'                    l3337:
  8638  0008' 3080               	movlw	128
  8639  0009' 0683'              	xorwf	___flneg@f1+3,f
  8640  000A'                    l3339:
  8641  000A'                    l577:
  8642  000A' 0008               	return
  8643  000B'                    __end_of___flneg:
  8644                           
  8645                           	psect	text21
  8646  0000'                    __ptext21:	
  8647 ;; *************** function ___flge *****************
  8648 ;; Defined at:
  8649 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\flge.c"
  8650 ;; Parameters:    Size  Location     Type
  8651 ;;  ff1             4    0[COMMON] unsigned char 
  8652 ;;  ff2             4    4[COMMON] unsigned char 
  8653 ;; Auto vars:     Size  Location     Type
  8654 ;;		None
  8655 ;; Return value:  Size  Location     Type
  8656 ;;		None               void
  8657 ;; Registers used:
  8658 ;;		wreg, status,2, status,0
  8659 ;; Tracked objects:
  8660 ;;		On entry : 0/0
  8661 ;;		On exit  : 0/0
  8662 ;;		Unchanged: 0/0
  8663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8664 ;;      Params:         8       0       0       0       0
  8665 ;;      Locals:         0       0       0       0       0
  8666 ;;      Temps:          4       0       0       0       0
  8667 ;;      Totals:        12       0       0       0       0
  8668 ;;Total ram usage:       12 bytes
  8669 ;; Hardware stack levels used: 1
  8670 ;; This function calls:
  8671 ;;		Nothing
  8672 ;; This function is called by:
  8673 ;;		_sprintf
  8674 ;; This function uses a non-reentrant model
  8675 ;;
  8676                           
  8677  0000'                    ___flge:	
  8678                           ;psect for function ___flge
  8679                           
  8680  0000'                    l3315:	
  8681                           ;incstack = 0
  8682                           ; Regs used in ___flge: [wreg+status,2+status,0]
  8683                           
  8684  0000' 3000               	movlw	0
  8685  0001' 0500'              	andwf	___flge@ff1,w
  8686  0002' 0088'              	movwf	??___flge
  8687  0003' 3000               	movlw	0
  8688  0004' 0501'              	andwf	___flge@ff1+1,w
  8689  0005' 0089'              	movwf	??___flge+1
  8690  0006' 3080               	movlw	128
  8691  0007' 0502'              	andwf	___flge@ff1+2,w
  8692  0008' 008A'              	movwf	??___flge+2
  8693  0009' 307F               	movlw	127
  8694  000A' 0503'              	andwf	___flge@ff1+3,w
  8695  000B' 008B'              	movwf	??___flge+3
  8696  000C' 080B'              	movf	??___flge+3,w
  8697  000D' 040A'              	iorwf	??___flge+2,w
  8698  000E' 0409'              	iorwf	??___flge+1,w
  8699  000F' 0408'              	iorwf	??___flge,w
  8700  0010' 1D03               	skipz
  8701  0011' 2800'              	goto	u5381
  8702  0012' 2800'              	goto	u5380
  8703  0013'                    u5381:
  8704  0013' 2800'              	goto	l569
  8705  0014'                    u5380:
  8706  0014'                    l3317:
  8707  0014' 3000               	movlw	0
  8708  0015' 0083'              	movwf	___flge@ff1+3
  8709  0016' 3000               	movlw	0
  8710  0017' 0082'              	movwf	___flge@ff1+2
  8711  0018' 3000               	movlw	0
  8712  0019' 0081'              	movwf	___flge@ff1+1
  8713  001A' 3000               	movlw	0
  8714  001B' 0080'              	movwf	___flge@ff1
  8715  001C'                    l569:
  8716  001C' 3000               	movlw	0
  8717  001D' 0504'              	andwf	___flge@ff2,w
  8718  001E' 0088'              	movwf	??___flge
  8719  001F' 3000               	movlw	0
  8720  0020' 0505'              	andwf	___flge@ff2+1,w
  8721  0021' 0089'              	movwf	??___flge+1
  8722  0022' 3080               	movlw	128
  8723  0023' 0506'              	andwf	___flge@ff2+2,w
  8724  0024' 008A'              	movwf	??___flge+2
  8725  0025' 307F               	movlw	127
  8726  0026' 0507'              	andwf	___flge@ff2+3,w
  8727  0027' 008B'              	movwf	??___flge+3
  8728  0028' 080B'              	movf	??___flge+3,w
  8729  0029' 040A'              	iorwf	??___flge+2,w
  8730  002A' 0409'              	iorwf	??___flge+1,w
  8731  002B' 0408'              	iorwf	??___flge,w
  8732  002C' 1D03               	skipz
  8733  002D' 2800'              	goto	u5391
  8734  002E' 2800'              	goto	u5390
  8735  002F'                    u5391:
  8736  002F' 2800'              	goto	l3321
  8737  0030'                    u5390:
  8738  0030'                    l3319:
  8739  0030' 3000               	movlw	0
  8740  0031' 0087'              	movwf	___flge@ff2+3
  8741  0032' 3000               	movlw	0
  8742  0033' 0086'              	movwf	___flge@ff2+2
  8743  0034' 3000               	movlw	0
  8744  0035' 0085'              	movwf	___flge@ff2+1
  8745  0036' 3000               	movlw	0
  8746  0037' 0084'              	movwf	___flge@ff2
  8747  0038'                    l3321:
  8748  0038' 1F83'              	btfss	___flge@ff1+3,7
  8749  0039' 2800'              	goto	u5401
  8750  003A' 2800'              	goto	u5400
  8751  003B'                    u5401:
  8752  003B' 2800'              	goto	l3325
  8753  003C'                    u5400:
  8754  003C'                    l3323:
  8755  003C' 3000               	movlw	0
  8756  003D' 0088'              	movwf	??___flge
  8757  003E' 3000               	movlw	0
  8758  003F' 0089'              	movwf	??___flge+1
  8759  0040' 3000               	movlw	0
  8760  0041' 008A'              	movwf	??___flge+2
  8761  0042' 3080               	movlw	128
  8762  0043' 008B'              	movwf	??___flge+3
  8763  0044' 0800'              	movf	___flge@ff1,w
  8764  0045' 0288'              	subwf	??___flge,f
  8765  0046' 0801'              	movf	___flge@ff1+1,w
  8766  0047' 1C03               	skipc
  8767  0048' 0F01'              	incfsz	___flge@ff1+1,w
  8768  0049' 2800'              	goto	u5411
  8769  004A' 2800'              	goto	u5412
  8770  004B'                    u5411:
  8771  004B' 0289'              	subwf	??___flge+1,f
  8772  004C'                    u5412:
  8773  004C' 0802'              	movf	___flge@ff1+2,w
  8774  004D' 1C03               	skipc
  8775  004E' 0F02'              	incfsz	___flge@ff1+2,w
  8776  004F' 2800'              	goto	u5413
  8777  0050' 2800'              	goto	u5414
  8778  0051'                    u5413:
  8779  0051' 028A'              	subwf	??___flge+2,f
  8780  0052'                    u5414:
  8781  0052' 0803'              	movf	___flge@ff1+3,w
  8782  0053' 1C03               	skipc
  8783  0054' 0F03'              	incfsz	___flge@ff1+3,w
  8784  0055' 2800'              	goto	u5415
  8785  0056' 2800'              	goto	u5416
  8786  0057'                    u5415:
  8787  0057' 028B'              	subwf	??___flge+3,f
  8788  0058'                    u5416:
  8789  0058' 080B'              	movf	??___flge+3,w
  8790  0059' 0083'              	movwf	___flge@ff1+3
  8791  005A' 080A'              	movf	??___flge+2,w
  8792  005B' 0082'              	movwf	___flge@ff1+2
  8793  005C' 0809'              	movf	??___flge+1,w
  8794  005D' 0081'              	movwf	___flge@ff1+1
  8795  005E' 0808'              	movf	??___flge,w
  8796  005F' 0080'              	movwf	___flge@ff1
  8797  0060'                    l3325:
  8798  0060' 1F87'              	btfss	___flge@ff2+3,7
  8799  0061' 2800'              	goto	u5421
  8800  0062' 2800'              	goto	u5420
  8801  0063'                    u5421:
  8802  0063' 2800'              	goto	l572
  8803  0064'                    u5420:
  8804  0064'                    l3327:
  8805  0064' 3000               	movlw	0
  8806  0065' 0088'              	movwf	??___flge
  8807  0066' 3000               	movlw	0
  8808  0067' 0089'              	movwf	??___flge+1
  8809  0068' 3000               	movlw	0
  8810  0069' 008A'              	movwf	??___flge+2
  8811  006A' 3080               	movlw	128
  8812  006B' 008B'              	movwf	??___flge+3
  8813  006C' 0804'              	movf	___flge@ff2,w
  8814  006D' 0288'              	subwf	??___flge,f
  8815  006E' 0805'              	movf	___flge@ff2+1,w
  8816  006F' 1C03               	skipc
  8817  0070' 0F05'              	incfsz	___flge@ff2+1,w
  8818  0071' 2800'              	goto	u5431
  8819  0072' 2800'              	goto	u5432
  8820  0073'                    u5431:
  8821  0073' 0289'              	subwf	??___flge+1,f
  8822  0074'                    u5432:
  8823  0074' 0806'              	movf	___flge@ff2+2,w
  8824  0075' 1C03               	skipc
  8825  0076' 0F06'              	incfsz	___flge@ff2+2,w
  8826  0077' 2800'              	goto	u5433
  8827  0078' 2800'              	goto	u5434
  8828  0079'                    u5433:
  8829  0079' 028A'              	subwf	??___flge+2,f
  8830  007A'                    u5434:
  8831  007A' 0807'              	movf	___flge@ff2+3,w
  8832  007B' 1C03               	skipc
  8833  007C' 0F07'              	incfsz	___flge@ff2+3,w
  8834  007D' 2800'              	goto	u5435
  8835  007E' 2800'              	goto	u5436
  8836  007F'                    u5435:
  8837  007F' 028B'              	subwf	??___flge+3,f
  8838  0080'                    u5436:
  8839  0080' 080B'              	movf	??___flge+3,w
  8840  0081' 0087'              	movwf	___flge@ff2+3
  8841  0082' 080A'              	movf	??___flge+2,w
  8842  0083' 0086'              	movwf	___flge@ff2+2
  8843  0084' 0809'              	movf	??___flge+1,w
  8844  0085' 0085'              	movwf	___flge@ff2+1
  8845  0086' 0808'              	movf	??___flge,w
  8846  0087' 0084'              	movwf	___flge@ff2
  8847  0088'                    l572:
  8848  0088' 3080               	movlw	128
  8849  0089' 0683'              	xorwf	___flge@ff1+3,f
  8850  008A' 3080               	movlw	128
  8851  008B' 0687'              	xorwf	___flge@ff2+3,f
  8852  008C' 0807'              	movf	___flge@ff2+3,w
  8853  008D' 0203'              	subwf	___flge@ff1+3,w
  8854  008E' 1D03               	skipz
  8855  008F' 2800'              	goto	u5445
  8856  0090' 0806'              	movf	___flge@ff2+2,w
  8857  0091' 0202'              	subwf	___flge@ff1+2,w
  8858  0092' 1D03               	skipz
  8859  0093' 2800'              	goto	u5445
  8860  0094' 0805'              	movf	___flge@ff2+1,w
  8861  0095' 0201'              	subwf	___flge@ff1+1,w
  8862  0096' 1D03               	skipz
  8863  0097' 2800'              	goto	u5445
  8864  0098' 0804'              	movf	___flge@ff2,w
  8865  0099' 0200'              	subwf	___flge@ff1,w
  8866  009A'                    u5445:
  8867  009A' 1803               	skipnc
  8868  009B' 2800'              	goto	u5441
  8869  009C' 2800'              	goto	u5440
  8870  009D'                    u5441:
  8871  009D' 2800'              	goto	l3331
  8872  009E'                    u5440:
  8873  009E'                    l3329:
  8874  009E' 1003               	clrc
  8875  009F' 2800'              	goto	l573
  8876  00A0'                    l3331:
  8877  00A0' 1403               	setc
  8878  00A1'                    l573:
  8879  00A1' 0008               	return
  8880  00A2'                    __end_of___flge:
  8881                           
  8882                           	psect	text22
  8883  0000'                    __ptext22:	
  8884 ;; *************** function ___fleq *****************
  8885 ;; Defined at:
  8886 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\fleq.c"
  8887 ;; Parameters:    Size  Location     Type
  8888 ;;  ff1             4    0[COMMON] unsigned char 
  8889 ;;  ff2             4    4[COMMON] unsigned char 
  8890 ;; Auto vars:     Size  Location     Type
  8891 ;;		None
  8892 ;; Return value:  Size  Location     Type
  8893 ;;		None               void
  8894 ;; Registers used:
  8895 ;;		wreg, status,2, status,0
  8896 ;; Tracked objects:
  8897 ;;		On entry : 0/0
  8898 ;;		On exit  : 0/0
  8899 ;;		Unchanged: 0/0
  8900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8901 ;;      Params:         8       0       0       0       0
  8902 ;;      Locals:         0       0       0       0       0
  8903 ;;      Temps:          4       0       0       0       0
  8904 ;;      Totals:        12       0       0       0       0
  8905 ;;Total ram usage:       12 bytes
  8906 ;; Hardware stack levels used: 1
  8907 ;; This function calls:
  8908 ;;		Nothing
  8909 ;; This function is called by:
  8910 ;;		_sprintf
  8911 ;; This function uses a non-reentrant model
  8912 ;;
  8913                           
  8914  0000'                    ___fleq:	
  8915                           ;psect for function ___fleq
  8916                           
  8917  0000'                    l3303:	
  8918                           ;incstack = 0
  8919                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  8920                           
  8921  0000' 3000               	movlw	0
  8922  0001' 0500'              	andwf	___fleq@ff1,w
  8923  0002' 0088'              	movwf	??___fleq
  8924  0003' 3000               	movlw	0
  8925  0004' 0501'              	andwf	___fleq@ff1+1,w
  8926  0005' 0089'              	movwf	??___fleq+1
  8927  0006' 3080               	movlw	128
  8928  0007' 0502'              	andwf	___fleq@ff1+2,w
  8929  0008' 008A'              	movwf	??___fleq+2
  8930  0009' 307F               	movlw	127
  8931  000A' 0503'              	andwf	___fleq@ff1+3,w
  8932  000B' 008B'              	movwf	??___fleq+3
  8933  000C' 080B'              	movf	??___fleq+3,w
  8934  000D' 040A'              	iorwf	??___fleq+2,w
  8935  000E' 0409'              	iorwf	??___fleq+1,w
  8936  000F' 0408'              	iorwf	??___fleq,w
  8937  0010' 1D03               	skipz
  8938  0011' 2800'              	goto	u5351
  8939  0012' 2800'              	goto	u5350
  8940  0013'                    u5351:
  8941  0013' 2800'              	goto	l564
  8942  0014'                    u5350:
  8943  0014'                    l3305:
  8944  0014' 3000               	movlw	0
  8945  0015' 0083'              	movwf	___fleq@ff1+3
  8946  0016' 3000               	movlw	0
  8947  0017' 0082'              	movwf	___fleq@ff1+2
  8948  0018' 3000               	movlw	0
  8949  0019' 0081'              	movwf	___fleq@ff1+1
  8950  001A' 3000               	movlw	0
  8951  001B' 0080'              	movwf	___fleq@ff1
  8952  001C'                    l564:
  8953  001C' 3000               	movlw	0
  8954  001D' 0504'              	andwf	___fleq@ff2,w
  8955  001E' 0088'              	movwf	??___fleq
  8956  001F' 3000               	movlw	0
  8957  0020' 0505'              	andwf	___fleq@ff2+1,w
  8958  0021' 0089'              	movwf	??___fleq+1
  8959  0022' 3080               	movlw	128
  8960  0023' 0506'              	andwf	___fleq@ff2+2,w
  8961  0024' 008A'              	movwf	??___fleq+2
  8962  0025' 307F               	movlw	127
  8963  0026' 0507'              	andwf	___fleq@ff2+3,w
  8964  0027' 008B'              	movwf	??___fleq+3
  8965  0028' 080B'              	movf	??___fleq+3,w
  8966  0029' 040A'              	iorwf	??___fleq+2,w
  8967  002A' 0409'              	iorwf	??___fleq+1,w
  8968  002B' 0408'              	iorwf	??___fleq,w
  8969  002C' 1D03               	skipz
  8970  002D' 2800'              	goto	u5361
  8971  002E' 2800'              	goto	u5360
  8972  002F'                    u5361:
  8973  002F' 2800'              	goto	l565
  8974  0030'                    u5360:
  8975  0030'                    l3307:
  8976  0030' 3000               	movlw	0
  8977  0031' 0087'              	movwf	___fleq@ff2+3
  8978  0032' 3000               	movlw	0
  8979  0033' 0086'              	movwf	___fleq@ff2+2
  8980  0034' 3000               	movlw	0
  8981  0035' 0085'              	movwf	___fleq@ff2+1
  8982  0036' 3000               	movlw	0
  8983  0037' 0084'              	movwf	___fleq@ff2
  8984  0038'                    l565:
  8985  0038' 0807'              	movf	___fleq@ff2+3,w
  8986  0039' 0603'              	xorwf	___fleq@ff1+3,w
  8987  003A' 1D03               	skipz
  8988  003B' 2800'              	goto	u5375
  8989  003C' 0806'              	movf	___fleq@ff2+2,w
  8990  003D' 0602'              	xorwf	___fleq@ff1+2,w
  8991  003E' 1D03               	skipz
  8992  003F' 2800'              	goto	u5375
  8993  0040' 0805'              	movf	___fleq@ff2+1,w
  8994  0041' 0601'              	xorwf	___fleq@ff1+1,w
  8995  0042' 1D03               	skipz
  8996  0043' 2800'              	goto	u5375
  8997  0044' 0804'              	movf	___fleq@ff2,w
  8998  0045' 0600'              	xorwf	___fleq@ff1,w
  8999  0046'                    u5375:
  9000  0046' 1903               	skipnz
  9001  0047' 2800'              	goto	u5371
  9002  0048' 2800'              	goto	u5370
  9003  0049'                    u5371:
  9004  0049' 2800'              	goto	l3311
  9005  004A'                    u5370:
  9006  004A'                    l3309:
  9007  004A' 1003               	clrc
  9008  004B' 2800'              	goto	l566
  9009  004C'                    l3311:
  9010  004C' 1403               	setc
  9011  004D'                    l566:
  9012  004D' 0008               	return
  9013  004E'                    __end_of___fleq:
  9014                           
  9015                           	psect	text23
  9016  0000'                    __ptext23:	
  9017 ;; *************** function ___fldiv *****************
  9018 ;; Defined at:
  9019 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\sprcdiv.c"
  9020 ;; Parameters:    Size  Location     Type
  9021 ;;  a               4    0[BANK0 ] unsigned char 
  9022 ;;  b               4    4[BANK0 ] unsigned char 
  9023 ;; Auto vars:     Size  Location     Type
  9024 ;;  grs             4   20[BANK0 ] unsigned long 
  9025 ;;  rem             4   13[BANK0 ] unsigned long 
  9026 ;;  new_exp         2   18[BANK0 ] int 
  9027 ;;  aexp            1   25[BANK0 ] unsigned char 
  9028 ;;  bexp            1   24[BANK0 ] unsigned char 
  9029 ;;  sign            1   17[BANK0 ] unsigned char 
  9030 ;; Return value:  Size  Location     Type
  9031 ;;                  4    0[BANK0 ] unsigned char 
  9032 ;; Registers used:
  9033 ;;		wreg, status,2, status,0, btemp+1
  9034 ;; Tracked objects:
  9035 ;;		On entry : 0/0
  9036 ;;		On exit  : 0/0
  9037 ;;		Unchanged: 0/0
  9038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9039 ;;      Params:         0       8       0       0       0
  9040 ;;      Locals:         0      13       0       0       0
  9041 ;;      Temps:          0       5       0       0       0
  9042 ;;      Totals:         0      26       0       0       0
  9043 ;;Total ram usage:       26 bytes
  9044 ;; Hardware stack levels used: 1
  9045 ;; This function calls:
  9046 ;;		Nothing
  9047 ;; This function is called by:
  9048 ;;		_main
  9049 ;; This function uses a non-reentrant model
  9050 ;;
  9051                           
  9052  0000'                    ___fldiv:	
  9053                           ;psect for function ___fldiv
  9054                           
  9055  0000'                    l3815:	
  9056                           ;incstack = 0
  9057                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  9058                           
  9059  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  9060  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  9061  0002' 0807'              	movf	___fldiv@b+3,w
  9062  0003' 3980               	andlw	128
  9063  0004' 0091'              	movwf	___fldiv@sign
  9064  0005'                    l3817:
  9065  0005' 0807'              	movf	___fldiv@b+3,w
  9066  0006' 0088'              	movwf	??___fldiv
  9067  0007' 0708'              	addwf	??___fldiv,w
  9068  0008' 0098'              	movwf	___fldiv@bexp
  9069  0009'                    l3819:
  9070  0009' 1F86'              	btfss	___fldiv@b+2,7
  9071  000A' 2800'              	goto	u6401
  9072  000B' 2800'              	goto	u6400
  9073  000C'                    u6401:
  9074  000C' 2800'              	goto	l3823
  9075  000D'                    u6400:
  9076  000D'                    l3821:
  9077  000D' 1418'              	bsf	___fldiv@bexp,0
  9078  000E'                    l3823:
  9079  000E' 0818'              	movf	___fldiv@bexp,w
  9080  000F' 1903               	btfsc	3,2
  9081  0010' 2800'              	goto	u6411
  9082  0011' 2800'              	goto	u6410
  9083  0012'                    u6411:
  9084  0012' 2800'              	goto	l3833
  9085  0013'                    u6410:
  9086  0013'                    l3825:
  9087  0013' 0A18'              	incf	___fldiv@bexp,w
  9088  0014' 1D03               	btfss	3,2
  9089  0015' 2800'              	goto	u6421
  9090  0016' 2800'              	goto	u6420
  9091  0017'                    u6421:
  9092  0017' 2800'              	goto	l3829
  9093  0018'                    u6420:
  9094  0018'                    l3827:
  9095  0018' 3000               	movlw	0
  9096  0019' 0087'              	movwf	___fldiv@b+3
  9097  001A' 3000               	movlw	0
  9098  001B' 0086'              	movwf	___fldiv@b+2
  9099  001C' 3000               	movlw	0
  9100  001D' 0085'              	movwf	___fldiv@b+1
  9101  001E' 3000               	movlw	0
  9102  001F' 0084'              	movwf	___fldiv@b
  9103  0020'                    l3829:
  9104  0020' 1786'              	bsf	___fldiv@b+2,7
  9105  0021'                    l3831:
  9106  0021' 0187'              	clrf	___fldiv@b+3
  9107  0022' 2800'              	goto	l3835
  9108  0023'                    l3833:
  9109  0023' 3000               	movlw	0
  9110  0024' 0087'              	movwf	___fldiv@b+3
  9111  0025' 3000               	movlw	0
  9112  0026' 0086'              	movwf	___fldiv@b+2
  9113  0027' 3000               	movlw	0
  9114  0028' 0085'              	movwf	___fldiv@b+1
  9115  0029' 3000               	movlw	0
  9116  002A' 0084'              	movwf	___fldiv@b
  9117  002B'                    l3835:
  9118  002B' 0803'              	movf	___fldiv@a+3,w
  9119  002C' 3980               	andlw	128
  9120  002D' 00FF               	movwf	btemp+1
  9121  002E' 087F               	movf	btemp+1,w
  9122  002F' 0691'              	xorwf	___fldiv@sign,f
  9123  0030'                    l3837:
  9124  0030' 0803'              	movf	___fldiv@a+3,w
  9125  0031' 0088'              	movwf	??___fldiv
  9126  0032' 0708'              	addwf	??___fldiv,w
  9127  0033' 0099'              	movwf	___fldiv@aexp
  9128  0034'                    l3839:
  9129  0034' 1F82'              	btfss	___fldiv@a+2,7
  9130  0035' 2800'              	goto	u6431
  9131  0036' 2800'              	goto	u6430
  9132  0037'                    u6431:
  9133  0037' 2800'              	goto	l3843
  9134  0038'                    u6430:
  9135  0038'                    l3841:
  9136  0038' 1419'              	bsf	___fldiv@aexp,0
  9137  0039'                    l3843:
  9138  0039' 0819'              	movf	___fldiv@aexp,w
  9139  003A' 1903               	btfsc	3,2
  9140  003B' 2800'              	goto	u6441
  9141  003C' 2800'              	goto	u6440
  9142  003D'                    u6441:
  9143  003D' 2800'              	goto	l3853
  9144  003E'                    u6440:
  9145  003E'                    l3845:
  9146  003E' 0A19'              	incf	___fldiv@aexp,w
  9147  003F' 1D03               	btfss	3,2
  9148  0040' 2800'              	goto	u6451
  9149  0041' 2800'              	goto	u6450
  9150  0042'                    u6451:
  9151  0042' 2800'              	goto	l3849
  9152  0043'                    u6450:
  9153  0043'                    l3847:
  9154  0043' 3000               	movlw	0
  9155  0044' 0083'              	movwf	___fldiv@a+3
  9156  0045' 3000               	movlw	0
  9157  0046' 0082'              	movwf	___fldiv@a+2
  9158  0047' 3000               	movlw	0
  9159  0048' 0081'              	movwf	___fldiv@a+1
  9160  0049' 3000               	movlw	0
  9161  004A' 0080'              	movwf	___fldiv@a
  9162  004B'                    l3849:
  9163  004B' 1782'              	bsf	___fldiv@a+2,7
  9164  004C'                    l3851:
  9165  004C' 0183'              	clrf	___fldiv@a+3
  9166  004D' 2800'              	goto	l761
  9167  004E'                    l3853:
  9168  004E' 3000               	movlw	0
  9169  004F' 0083'              	movwf	___fldiv@a+3
  9170  0050' 3000               	movlw	0
  9171  0051' 0082'              	movwf	___fldiv@a+2
  9172  0052' 3000               	movlw	0
  9173  0053' 0081'              	movwf	___fldiv@a+1
  9174  0054' 3000               	movlw	0
  9175  0055' 0080'              	movwf	___fldiv@a
  9176  0056'                    l761:
  9177  0056' 0803'              	movf	___fldiv@a+3,w
  9178  0057' 0402'              	iorwf	___fldiv@a+2,w
  9179  0058' 0401'              	iorwf	___fldiv@a+1,w
  9180  0059' 0400'              	iorwf	___fldiv@a,w
  9181  005A' 1D03               	skipz
  9182  005B' 2800'              	goto	u6461
  9183  005C' 2800'              	goto	u6460
  9184  005D'                    u6461:
  9185  005D' 2800'              	goto	l3863
  9186  005E'                    u6460:
  9187  005E'                    l3855:
  9188  005E' 3000               	movlw	0
  9189  005F' 0087'              	movwf	___fldiv@b+3
  9190  0060' 3000               	movlw	0
  9191  0061' 0086'              	movwf	___fldiv@b+2
  9192  0062' 3000               	movlw	0
  9193  0063' 0085'              	movwf	___fldiv@b+1
  9194  0064' 3000               	movlw	0
  9195  0065' 0084'              	movwf	___fldiv@b
  9196  0066' 3080               	movlw	128
  9197  0067' 0486'              	iorwf	___fldiv@b+2,f
  9198  0068' 307F               	movlw	127
  9199  0069' 0487'              	iorwf	___fldiv@b+3,f
  9200  006A'                    l3857:
  9201  006A' 0811'              	movf	___fldiv@sign,w
  9202  006B' 00FF               	movwf	btemp+1
  9203  006C' 087F               	movf	btemp+1,w
  9204  006D' 0487'              	iorwf	___fldiv@b+3,f
  9205  006E'                    l3859:
  9206  006E' 0807'              	movf	___fldiv@b+3,w
  9207  006F' 0083'              	movwf	?___fldiv+3
  9208  0070' 0806'              	movf	___fldiv@b+2,w
  9209  0071' 0082'              	movwf	?___fldiv+2
  9210  0072' 0805'              	movf	___fldiv@b+1,w
  9211  0073' 0081'              	movwf	?___fldiv+1
  9212  0074' 0804'              	movf	___fldiv@b,w
  9213  0075' 0080'              	movwf	?___fldiv
  9214  0076' 2800'              	goto	l763
  9215  0077'                    l3863:
  9216  0077' 0818'              	movf	___fldiv@bexp,w
  9217  0078' 1D03               	btfss	3,2
  9218  0079' 2800'              	goto	u6471
  9219  007A' 2800'              	goto	u6470
  9220  007B'                    u6471:
  9221  007B' 2800'              	goto	l3869
  9222  007C'                    u6470:
  9223  007C'                    l3865:
  9224  007C' 3000               	movlw	0
  9225  007D' 0083'              	movwf	?___fldiv+3
  9226  007E' 3000               	movlw	0
  9227  007F' 0082'              	movwf	?___fldiv+2
  9228  0080' 3000               	movlw	0
  9229  0081' 0081'              	movwf	?___fldiv+1
  9230  0082' 3000               	movlw	0
  9231  0083' 0080'              	movwf	?___fldiv
  9232  0084' 2800'              	goto	l763
  9233  0085'                    l3869:
  9234  0085' 0818'              	movf	___fldiv@bexp,w
  9235  0086' 0088'              	movwf	??___fldiv
  9236  0087' 0189'              	clrf	??___fldiv+1
  9237  0088' 0809'              	movf	??___fldiv+1,w
  9238  0089' 008B'              	movwf	??___fldiv+3
  9239  008A' 0819'              	movf	___fldiv@aexp,w
  9240  008B' 0208'              	subwf	??___fldiv,w
  9241  008C' 008A'              	movwf	??___fldiv+2
  9242  008D' 1C03               	skipc
  9243  008E' 038B'              	decf	??___fldiv+3,f
  9244  008F' 080A'              	movf	??___fldiv+2,w
  9245  0090' 3E7F               	addlw	127
  9246  0091' 0092'              	movwf	___fldiv@new_exp
  9247  0092' 080B'              	movf	??___fldiv+3,w
  9248  0093' 1803               	skipnc
  9249  0094' 3E01               	addlw	1
  9250  0095' 3E00               	addlw	0
  9251  0096' 0093'              	movwf	___fldiv@new_exp+1
  9252  0097'                    l3871:
  9253  0097' 0807'              	movf	___fldiv@b+3,w
  9254  0098' 0090'              	movwf	___fldiv@rem+3
  9255  0099' 0806'              	movf	___fldiv@b+2,w
  9256  009A' 008F'              	movwf	___fldiv@rem+2
  9257  009B' 0805'              	movf	___fldiv@b+1,w
  9258  009C' 008E'              	movwf	___fldiv@rem+1
  9259  009D' 0804'              	movf	___fldiv@b,w
  9260  009E' 008D'              	movwf	___fldiv@rem
  9261  009F'                    l3873:
  9262  009F' 3000               	movlw	0
  9263  00A0' 0087'              	movwf	___fldiv@b+3
  9264  00A1' 3000               	movlw	0
  9265  00A2' 0086'              	movwf	___fldiv@b+2
  9266  00A3' 3000               	movlw	0
  9267  00A4' 0085'              	movwf	___fldiv@b+1
  9268  00A5' 3000               	movlw	0
  9269  00A6' 0084'              	movwf	___fldiv@b
  9270  00A7'                    l3875:
  9271  00A7' 3000               	movlw	0
  9272  00A8' 0097'              	movwf	___fldiv@grs+3
  9273  00A9' 3000               	movlw	0
  9274  00AA' 0096'              	movwf	___fldiv@grs+2
  9275  00AB' 3000               	movlw	0
  9276  00AC' 0095'              	movwf	___fldiv@grs+1
  9277  00AD' 3000               	movlw	0
  9278  00AE' 0094'              	movwf	___fldiv@grs
  9279  00AF'                    l3877:
  9280  00AF' 0199'              	clrf	___fldiv@aexp
  9281  00B0' 2800'              	goto	l3897
  9282  00B1'                    l3879:
  9283  00B1' 0819'              	movf	___fldiv@aexp,w
  9284  00B2' 1903               	btfsc	3,2
  9285  00B3' 2800'              	goto	u6481
  9286  00B4' 2800'              	goto	u6480
  9287  00B5'                    u6481:
  9288  00B5' 2800'              	goto	l3889
  9289  00B6'                    u6480:
  9290  00B6'                    l3881:
  9291  00B6' 3001               	movlw	1
  9292  00B7' 0088'              	movwf	??___fldiv
  9293  00B8'                    u6495:
  9294  00B8' 1003               	clrc
  9295  00B9' 0D8D'              	rlf	___fldiv@rem,f
  9296  00BA' 0D8E'              	rlf	___fldiv@rem+1,f
  9297  00BB' 0D8F'              	rlf	___fldiv@rem+2,f
  9298  00BC' 0D90'              	rlf	___fldiv@rem+3,f
  9299  00BD' 0B88'              	decfsz	??___fldiv,f
  9300  00BE' 2800'              	goto	u6495
  9301  00BF' 3001               	movlw	1
  9302  00C0' 0088'              	movwf	??___fldiv
  9303  00C1'                    u6505:
  9304  00C1' 1003               	clrc
  9305  00C2' 0D84'              	rlf	___fldiv@b,f
  9306  00C3' 0D85'              	rlf	___fldiv@b+1,f
  9307  00C4' 0D86'              	rlf	___fldiv@b+2,f
  9308  00C5' 0D87'              	rlf	___fldiv@b+3,f
  9309  00C6' 0B88'              	decfsz	??___fldiv,f
  9310  00C7' 2800'              	goto	u6505
  9311  00C8'                    l3883:
  9312  00C8' 1F97'              	btfss	___fldiv@grs+3,7
  9313  00C9' 2800'              	goto	u6511
  9314  00CA' 2800'              	goto	u6510
  9315  00CB'                    u6511:
  9316  00CB' 2800'              	goto	l3887
  9317  00CC'                    u6510:
  9318  00CC'                    l3885:
  9319  00CC' 1404'              	bsf	___fldiv@b,0
  9320  00CD'                    l3887:
  9321  00CD' 3001               	movlw	1
  9322  00CE' 0088'              	movwf	??___fldiv
  9323  00CF'                    u6525:
  9324  00CF' 1003               	clrc
  9325  00D0' 0D94'              	rlf	___fldiv@grs,f
  9326  00D1' 0D95'              	rlf	___fldiv@grs+1,f
  9327  00D2' 0D96'              	rlf	___fldiv@grs+2,f
  9328  00D3' 0D97'              	rlf	___fldiv@grs+3,f
  9329  00D4' 0B88'              	decfsz	??___fldiv,f
  9330  00D5' 2800'              	goto	u6525
  9331  00D6'                    l3889:
  9332  00D6' 0803'              	movf	___fldiv@a+3,w
  9333  00D7' 0210'              	subwf	___fldiv@rem+3,w
  9334  00D8' 1D03               	skipz
  9335  00D9' 2800'              	goto	u6535
  9336  00DA' 0802'              	movf	___fldiv@a+2,w
  9337  00DB' 020F'              	subwf	___fldiv@rem+2,w
  9338  00DC' 1D03               	skipz
  9339  00DD' 2800'              	goto	u6535
  9340  00DE' 0801'              	movf	___fldiv@a+1,w
  9341  00DF' 020E'              	subwf	___fldiv@rem+1,w
  9342  00E0' 1D03               	skipz
  9343  00E1' 2800'              	goto	u6535
  9344  00E2' 0800'              	movf	___fldiv@a,w
  9345  00E3' 020D'              	subwf	___fldiv@rem,w
  9346  00E4'                    u6535:
  9347  00E4' 1C03               	skipc
  9348  00E5' 2800'              	goto	u6531
  9349  00E6' 2800'              	goto	u6530
  9350  00E7'                    u6531:
  9351  00E7' 2800'              	goto	l3895
  9352  00E8'                    u6530:
  9353  00E8'                    l3891:
  9354  00E8' 1717'              	bsf	___fldiv@grs+3,6
  9355  00E9'                    l3893:
  9356  00E9' 0800'              	movf	___fldiv@a,w
  9357  00EA' 028D'              	subwf	___fldiv@rem,f
  9358  00EB' 0801'              	movf	___fldiv@a+1,w
  9359  00EC' 1C03               	skipc
  9360  00ED' 0F01'              	incfsz	___fldiv@a+1,w
  9361  00EE' 028E'              	subwf	___fldiv@rem+1,f
  9362  00EF' 0802'              	movf	___fldiv@a+2,w
  9363  00F0' 1C03               	skipc
  9364  00F1' 0F02'              	incfsz	___fldiv@a+2,w
  9365  00F2' 028F'              	subwf	___fldiv@rem+2,f
  9366  00F3' 0803'              	movf	___fldiv@a+3,w
  9367  00F4' 1C03               	skipc
  9368  00F5' 0F03'              	incfsz	___fldiv@a+3,w
  9369  00F6' 0290'              	subwf	___fldiv@rem+3,f
  9370  00F7'                    l3895:
  9371  00F7' 3001               	movlw	1
  9372  00F8' 00FF               	movwf	btemp+1
  9373  00F9' 087F               	movf	btemp+1,w
  9374  00FA' 0799'              	addwf	___fldiv@aexp,f
  9375  00FB'                    l3897:
  9376  00FB' 301A               	movlw	26
  9377  00FC' 0219'              	subwf	___fldiv@aexp,w
  9378  00FD' 1C03               	skipc
  9379  00FE' 2800'              	goto	u6541
  9380  00FF' 2800'              	goto	u6540
  9381  0100'                    u6541:
  9382  0100' 2800'              	goto	l3879
  9383  0101'                    u6540:
  9384  0101'                    l3899:
  9385  0101' 0810'              	movf	___fldiv@rem+3,w
  9386  0102' 040F'              	iorwf	___fldiv@rem+2,w
  9387  0103' 040E'              	iorwf	___fldiv@rem+1,w
  9388  0104' 040D'              	iorwf	___fldiv@rem,w
  9389  0105' 1903               	skipnz
  9390  0106' 2800'              	goto	u6551
  9391  0107' 2800'              	goto	u6550
  9392  0108'                    u6551:
  9393  0108' 2800'              	goto	l3913
  9394  0109'                    u6550:
  9395  0109'                    l3901:
  9396  0109' 1414'              	bsf	___fldiv@grs,0
  9397  010A' 2800'              	goto	l3913
  9398  010B'                    l3903:
  9399  010B' 3001               	movlw	1
  9400  010C' 0088'              	movwf	??___fldiv
  9401  010D'                    u6565:
  9402  010D' 1003               	clrc
  9403  010E' 0D84'              	rlf	___fldiv@b,f
  9404  010F' 0D85'              	rlf	___fldiv@b+1,f
  9405  0110' 0D86'              	rlf	___fldiv@b+2,f
  9406  0111' 0D87'              	rlf	___fldiv@b+3,f
  9407  0112' 0B88'              	decfsz	??___fldiv,f
  9408  0113' 2800'              	goto	u6565
  9409  0114'                    l3905:
  9410  0114' 1F97'              	btfss	___fldiv@grs+3,7
  9411  0115' 2800'              	goto	u6571
  9412  0116' 2800'              	goto	u6570
  9413  0117'                    u6571:
  9414  0117' 2800'              	goto	l3909
  9415  0118'                    u6570:
  9416  0118'                    l3907:
  9417  0118' 1404'              	bsf	___fldiv@b,0
  9418  0119'                    l3909:
  9419  0119' 3001               	movlw	1
  9420  011A' 0088'              	movwf	??___fldiv
  9421  011B'                    u6585:
  9422  011B' 1003               	clrc
  9423  011C' 0D94'              	rlf	___fldiv@grs,f
  9424  011D' 0D95'              	rlf	___fldiv@grs+1,f
  9425  011E' 0D96'              	rlf	___fldiv@grs+2,f
  9426  011F' 0D97'              	rlf	___fldiv@grs+3,f
  9427  0120' 0B88'              	decfsz	??___fldiv,f
  9428  0121' 2800'              	goto	u6585
  9429  0122'                    l3911:
  9430  0122' 30FF               	movlw	255
  9431  0123' 0792'              	addwf	___fldiv@new_exp,f
  9432  0124' 1803               	skipnc
  9433  0125' 0A93'              	incf	___fldiv@new_exp+1,f
  9434  0126' 30FF               	movlw	255
  9435  0127' 0793'              	addwf	___fldiv@new_exp+1,f
  9436  0128'                    l3913:
  9437  0128' 1F86'              	btfss	___fldiv@b+2,7
  9438  0129' 2800'              	goto	u6591
  9439  012A' 2800'              	goto	u6590
  9440  012B'                    u6591:
  9441  012B' 2800'              	goto	l3903
  9442  012C'                    u6590:
  9443  012C'                    l3915:
  9444  012C' 0199'              	clrf	___fldiv@aexp
  9445  012D'                    l3917:
  9446  012D' 1F97'              	btfss	___fldiv@grs+3,7
  9447  012E' 2800'              	goto	u6601
  9448  012F' 2800'              	goto	u6600
  9449  0130'                    u6601:
  9450  0130' 2800'              	goto	l3925
  9451  0131'                    u6600:
  9452  0131'                    l3919:
  9453  0131' 30FF               	movlw	255
  9454  0132' 0514'              	andwf	___fldiv@grs,w
  9455  0133' 0088'              	movwf	??___fldiv
  9456  0134' 30FF               	movlw	255
  9457  0135' 0515'              	andwf	___fldiv@grs+1,w
  9458  0136' 0089'              	movwf	??___fldiv+1
  9459  0137' 30FF               	movlw	255
  9460  0138' 0516'              	andwf	___fldiv@grs+2,w
  9461  0139' 008A'              	movwf	??___fldiv+2
  9462  013A' 307F               	movlw	127
  9463  013B' 0517'              	andwf	___fldiv@grs+3,w
  9464  013C' 008B'              	movwf	??___fldiv+3
  9465  013D' 080B'              	movf	??___fldiv+3,w
  9466  013E' 040A'              	iorwf	??___fldiv+2,w
  9467  013F' 0409'              	iorwf	??___fldiv+1,w
  9468  0140' 0408'              	iorwf	??___fldiv,w
  9469  0141' 1903               	skipnz
  9470  0142' 2800'              	goto	u6611
  9471  0143' 2800'              	goto	u6610
  9472  0144'                    u6611:
  9473  0144' 2800'              	goto	l777
  9474  0145'                    u6610:
  9475  0145'                    l3921:
  9476  0145' 0199'              	clrf	___fldiv@aexp
  9477  0146' 0A99'              	incf	___fldiv@aexp,f
  9478  0147' 2800'              	goto	l3925
  9479  0148'                    l777:
  9480  0148' 1C04'              	btfss	___fldiv@b,0
  9481  0149' 2800'              	goto	u6621
  9482  014A' 2800'              	goto	u6620
  9483  014B'                    u6621:
  9484  014B' 2800'              	goto	l3925
  9485  014C'                    u6620:
  9486  014C' 2800'              	goto	l3921
  9487  014D'                    l3925:
  9488  014D' 0819'              	movf	___fldiv@aexp,w
  9489  014E' 1903               	btfsc	3,2
  9490  014F' 2800'              	goto	u6631
  9491  0150' 2800'              	goto	u6630
  9492  0151'                    u6631:
  9493  0151' 2800'              	goto	l3935
  9494  0152'                    u6630:
  9495  0152'                    l3927:
  9496  0152' 3001               	movlw	1
  9497  0153' 0784'              	addwf	___fldiv@b,f
  9498  0154' 3000               	movlw	0
  9499  0155' 1803               	skipnc
  9500  0156' 3001               	movlw	1
  9501  0157' 0785'              	addwf	___fldiv@b+1,f
  9502  0158' 3000               	movlw	0
  9503  0159' 1803               	skipnc
  9504  015A' 3001               	movlw	1
  9505  015B' 0786'              	addwf	___fldiv@b+2,f
  9506  015C' 3000               	movlw	0
  9507  015D' 1803               	skipnc
  9508  015E' 3001               	movlw	1
  9509  015F' 0787'              	addwf	___fldiv@b+3,f
  9510  0160'                    l3929:
  9511  0160' 1C07'              	btfss	___fldiv@b+3,0
  9512  0161' 2800'              	goto	u6641
  9513  0162' 2800'              	goto	u6640
  9514  0163'                    u6641:
  9515  0163' 2800'              	goto	l3935
  9516  0164'                    u6640:
  9517  0164'                    l3931:
  9518  0164' 0804'              	movf	___fldiv@b,w
  9519  0165' 0088'              	movwf	??___fldiv
  9520  0166' 0805'              	movf	___fldiv@b+1,w
  9521  0167' 0089'              	movwf	??___fldiv+1
  9522  0168' 0806'              	movf	___fldiv@b+2,w
  9523  0169' 008A'              	movwf	??___fldiv+2
  9524  016A' 0807'              	movf	___fldiv@b+3,w
  9525  016B' 008B'              	movwf	??___fldiv+3
  9526  016C' 3001               	movlw	1
  9527  016D' 008C'              	movwf	??___fldiv+4
  9528  016E'                    u6655:
  9529  016E' 0D0B'              	rlf	??___fldiv+3,w
  9530  016F' 0C8B'              	rrf	??___fldiv+3,f
  9531  0170' 0C8A'              	rrf	??___fldiv+2,f
  9532  0171' 0C89'              	rrf	??___fldiv+1,f
  9533  0172' 0C88'              	rrf	??___fldiv,f
  9534  0173'                    u6650:
  9535  0173' 0B8C'              	decfsz	??___fldiv+4,f
  9536  0174' 2800'              	goto	u6655
  9537  0175' 080B'              	movf	??___fldiv+3,w
  9538  0176' 0087'              	movwf	___fldiv@b+3
  9539  0177' 080A'              	movf	??___fldiv+2,w
  9540  0178' 0086'              	movwf	___fldiv@b+2
  9541  0179' 0809'              	movf	??___fldiv+1,w
  9542  017A' 0085'              	movwf	___fldiv@b+1
  9543  017B' 0808'              	movf	??___fldiv,w
  9544  017C' 0084'              	movwf	___fldiv@b
  9545  017D'                    l3933:
  9546  017D' 3001               	movlw	1
  9547  017E' 0792'              	addwf	___fldiv@new_exp,f
  9548  017F' 1803               	skipnc
  9549  0180' 0A93'              	incf	___fldiv@new_exp+1,f
  9550  0181' 3000               	movlw	0
  9551  0182' 0793'              	addwf	___fldiv@new_exp+1,f
  9552  0183'                    l3935:
  9553  0183' 0813'              	movf	___fldiv@new_exp+1,w
  9554  0184' 3A80               	xorlw	128
  9555  0185' 00FF               	movwf	btemp+1
  9556  0186' 3080               	movlw	128
  9557  0187' 027F               	subwf	btemp+1,w
  9558  0188' 1D03               	skipz
  9559  0189' 2800'              	goto	u6665
  9560  018A' 30FF               	movlw	255
  9561  018B' 0212'              	subwf	___fldiv@new_exp,w
  9562  018C'                    u6665:
  9563  018C' 1C03               	skipc
  9564  018D' 2800'              	goto	u6661
  9565  018E' 2800'              	goto	u6660
  9566  018F'                    u6661:
  9567  018F' 2800'              	goto	l3939
  9568  0190'                    u6660:
  9569  0190'                    l3937:
  9570  0190' 30FF               	movlw	255
  9571  0191' 1283               	bcf	3,5	;RP0=0, select bank0
  9572  0192' 1303               	bcf	3,6	;RP1=0, select bank0
  9573  0193' 0092'              	movwf	___fldiv@new_exp
  9574  0194' 3000               	movlw	0
  9575  0195' 0093'              	movwf	___fldiv@new_exp+1
  9576  0196' 3000               	movlw	0
  9577  0197' 0087'              	movwf	___fldiv@b+3
  9578  0198' 3000               	movlw	0
  9579  0199' 0086'              	movwf	___fldiv@b+2
  9580  019A' 3000               	movlw	0
  9581  019B' 0085'              	movwf	___fldiv@b+1
  9582  019C' 3000               	movlw	0
  9583  019D' 0084'              	movwf	___fldiv@b
  9584  019E'                    l3939:
  9585  019E' 1283               	bcf	3,5	;RP0=0, select bank0
  9586  019F' 1303               	bcf	3,6	;RP1=0, select bank0
  9587  01A0' 0813'              	movf	___fldiv@new_exp+1,w
  9588  01A1' 3A80               	xorlw	128
  9589  01A2' 00FF               	movwf	btemp+1
  9590  01A3' 3080               	movlw	128
  9591  01A4' 027F               	subwf	btemp+1,w
  9592  01A5' 1D03               	skipz
  9593  01A6' 2800'              	goto	u6675
  9594  01A7' 3001               	movlw	1
  9595  01A8' 0212'              	subwf	___fldiv@new_exp,w
  9596  01A9'                    u6675:
  9597  01A9' 1803               	skipnc
  9598  01AA' 2800'              	goto	u6671
  9599  01AB' 2800'              	goto	u6670
  9600  01AC'                    u6671:
  9601  01AC' 2800'              	goto	l783
  9602  01AD'                    u6670:
  9603  01AD'                    l3941:
  9604  01AD' 1283               	bcf	3,5	;RP0=0, select bank0
  9605  01AE' 1303               	bcf	3,6	;RP1=0, select bank0
  9606  01AF' 0192'              	clrf	___fldiv@new_exp
  9607  01B0' 0193'              	clrf	___fldiv@new_exp+1
  9608  01B1'                    l3943:
  9609  01B1' 3000               	movlw	0
  9610  01B2' 0087'              	movwf	___fldiv@b+3
  9611  01B3' 3000               	movlw	0
  9612  01B4' 0086'              	movwf	___fldiv@b+2
  9613  01B5' 3000               	movlw	0
  9614  01B6' 0085'              	movwf	___fldiv@b+1
  9615  01B7' 3000               	movlw	0
  9616  01B8' 0084'              	movwf	___fldiv@b
  9617  01B9'                    l3945:
  9618  01B9' 0191'              	clrf	___fldiv@sign
  9619  01BA'                    l783:
  9620  01BA' 1283               	bcf	3,5	;RP0=0, select bank0
  9621  01BB' 1303               	bcf	3,6	;RP1=0, select bank0
  9622  01BC' 0812'              	movf	___fldiv@new_exp,w
  9623  01BD' 0098'              	movwf	___fldiv@bexp
  9624  01BE'                    l3947:
  9625  01BE' 1C18'              	btfss	___fldiv@bexp,0
  9626  01BF' 2800'              	goto	u6681
  9627  01C0' 2800'              	goto	u6680
  9628  01C1'                    u6681:
  9629  01C1' 2800'              	goto	l3951
  9630  01C2'                    u6680:
  9631  01C2'                    l3949:
  9632  01C2' 1786'              	bsf	___fldiv@b+2,7
  9633  01C3' 2800'              	goto	l3953
  9634  01C4'                    l3951:
  9635  01C4' 307F               	movlw	127
  9636  01C5' 00FF               	movwf	btemp+1
  9637  01C6' 087F               	movf	btemp+1,w
  9638  01C7' 0586'              	andwf	___fldiv@b+2,f
  9639  01C8'                    l3953:
  9640  01C8' 0818'              	movf	___fldiv@bexp,w
  9641  01C9' 0088'              	movwf	??___fldiv
  9642  01CA' 1003               	clrc
  9643  01CB' 0C08'              	rrf	??___fldiv,w
  9644  01CC' 0087'              	movwf	___fldiv@b+3
  9645  01CD' 2800'              	goto	l3857
  9646  01CE'                    l763:
  9647  01CE' 0008               	return
  9648  01CF'                    __end_of___fldiv:
  9649                           
  9650                           	psect	text24
  9651  0000'                    __ptext24:	
  9652 ;; *************** function _UART_Write_Text *****************
  9653 ;; Defined at:
  9654 ;;		line 18 in file "uart_lib.c"
  9655 ;; Parameters:    Size  Location     Type
  9656 ;;  text            2    1[COMMON] PTR unsigned char 
  9657 ;;		 -> STR_21(5), main@combinedText_160(20), STR_17(7), STR_15(5), 
  9658 ;;		 -> main@combinedText(20), STR_11(8), STR_9(5), 
  9659 ;; Auto vars:     Size  Location     Type
  9660 ;;  i               2    6[COMMON] int 
  9661 ;; Return value:  Size  Location     Type
  9662 ;;                  1    wreg      void 
  9663 ;; Registers used:
  9664 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9665 ;; Tracked objects:
  9666 ;;		On entry : 0/0
  9667 ;;		On exit  : 0/0
  9668 ;;		Unchanged: 0/0
  9669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9670 ;;      Params:         2       0       0       0       0
  9671 ;;      Locals:         2       0       0       0       0
  9672 ;;      Temps:          3       0       0       0       0
  9673 ;;      Totals:         7       0       0       0       0
  9674 ;;Total ram usage:        7 bytes
  9675 ;; Hardware stack levels used: 1
  9676 ;; Hardware stack levels required when called: 1
  9677 ;; This function calls:
  9678 ;;		_UART_Write
  9679 ;; This function is called by:
  9680 ;;		_main
  9681 ;; This function uses a non-reentrant model
  9682 ;;
  9683                           
  9684  0000'                    _UART_Write_Text:	
  9685                           ;psect for function _UART_Write_Text
  9686                           
  9687  0000'                    l3807:	
  9688                           ;incstack = 0
  9689                           ; Regs used in _UART_Write_Text: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9690                           
  9691                           
  9692                           ;uart_lib.c: 18: void UART_Write_Text(char *text);uart_lib.c: 19: {;uart_lib.c: 20:   in
      +                          t i;;uart_lib.c: 21:   for(i=0;text[i]!='\0';i++)
  9693  0000' 0186'              	clrf	UART_Write_Text@i
  9694  0001' 0187'              	clrf	UART_Write_Text@i+1
  9695  0002' 2800'              	goto	l3813
  9696  0003'                    l3809:
  9697                           
  9698                           ;uart_lib.c: 22:     UART_Write(text[i]);
  9699  0003' 0806'              	movf	UART_Write_Text@i,w
  9700  0004' 0701'              	addwf	UART_Write_Text@text,w
  9701  0005' 0084'              	movwf	??_UART_Write_Text+1
  9702  0006' 0802'              	movf	UART_Write_Text@text+1,w
  9703  0007' 0083'              	movwf	??_UART_Write_Text
  9704  0008' 1803               	skipnc
  9705  0009' 0A83'              	incf	??_UART_Write_Text,f
  9706  000A' 1F86'              	btfss	UART_Write_Text@i,7
  9707  000B' 2800'              	goto	u6370
  9708  000C' 0383'              	decf	??_UART_Write_Text,f
  9709  000D'                    u6370:
  9710  000D' 0803'              	movf	??_UART_Write_Text,w
  9711  000E' 0085'              	movwf	??_UART_Write_Text+2
  9712  000F' 0805'              	movf	??_UART_Write_Text+2,w
  9713  0010' 1283               	bcf	3,5	;RP0=0, select bank0
  9714  0011' 1303               	bcf	3,6	;RP1=0, select bank0
  9715  0012' 00FF               	movwf	btemp+1
  9716  0013' 0804'              	movf	??_UART_Write_Text+1,w
  9717  0014' 0084               	movwf	4
  9718  0015' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  9719  001A' 120A' 118A' 2000' 120A' 118A' 	fcall	_UART_Write
  9720  001F'                    l3811:
  9721  001F' 3001               	movlw	1
  9722  0020' 0786'              	addwf	UART_Write_Text@i,f
  9723  0021' 1803               	skipnc
  9724  0022' 0A87'              	incf	UART_Write_Text@i+1,f
  9725  0023' 3000               	movlw	0
  9726  0024' 0787'              	addwf	UART_Write_Text@i+1,f
  9727  0025'                    l3813:
  9728  0025' 0806'              	movf	UART_Write_Text@i,w
  9729  0026' 0701'              	addwf	UART_Write_Text@text,w
  9730  0027' 0084'              	movwf	??_UART_Write_Text+1
  9731  0028' 0802'              	movf	UART_Write_Text@text+1,w
  9732  0029' 0083'              	movwf	??_UART_Write_Text
  9733  002A' 1803               	skipnc
  9734  002B' 0A83'              	incf	??_UART_Write_Text,f
  9735  002C' 1F86'              	btfss	UART_Write_Text@i,7
  9736  002D' 2800'              	goto	u6380
  9737  002E' 0383'              	decf	??_UART_Write_Text,f
  9738  002F'                    u6380:
  9739  002F' 0803'              	movf	??_UART_Write_Text,w
  9740  0030' 0085'              	movwf	??_UART_Write_Text+2
  9741  0031' 0805'              	movf	??_UART_Write_Text+2,w
  9742  0032' 1283               	bcf	3,5	;RP0=0, select bank0
  9743  0033' 1303               	bcf	3,6	;RP1=0, select bank0
  9744  0034' 00FF               	movwf	btemp+1
  9745  0035' 0804'              	movf	??_UART_Write_Text+1,w
  9746  0036' 0084               	movwf	4
  9747  0037' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  9748  003C' 3A00               	xorlw	0
  9749  003D' 1D03               	skipz
  9750  003E' 2800'              	goto	u6391
  9751  003F' 2800'              	goto	u6390
  9752  0040'                    u6391:
  9753  0040' 2800'              	goto	l3809
  9754  0041'                    u6390:
  9755  0041'                    l170:
  9756  0041' 0008               	return
  9757  0042'                    __end_of_UART_Write_Text:
  9758                           
  9759                           	psect	text25
  9760  0000'                    __ptext25:	
  9761 ;; *************** function _UART_Write *****************
  9762 ;; Defined at:
  9763 ;;		line 12 in file "uart_lib.c"
  9764 ;; Parameters:    Size  Location     Type
  9765 ;;  data            1    wreg     unsigned char 
  9766 ;; Auto vars:     Size  Location     Type
  9767 ;;  data            1    0[COMMON] unsigned char 
  9768 ;; Return value:  Size  Location     Type
  9769 ;;                  1    wreg      void 
  9770 ;; Registers used:
  9771 ;;		wreg
  9772 ;; Tracked objects:
  9773 ;;		On entry : 0/0
  9774 ;;		On exit  : 0/0
  9775 ;;		Unchanged: 0/0
  9776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9777 ;;      Params:         0       0       0       0       0
  9778 ;;      Locals:         1       0       0       0       0
  9779 ;;      Temps:          0       0       0       0       0
  9780 ;;      Totals:         1       0       0       0       0
  9781 ;;Total ram usage:        1 bytes
  9782 ;; Hardware stack levels used: 1
  9783 ;; This function calls:
  9784 ;;		Nothing
  9785 ;; This function is called by:
  9786 ;;		_UART_Write_Text
  9787 ;; This function uses a non-reentrant model
  9788 ;;
  9789                           
  9790  0000'                    _UART_Write:	
  9791                           ;psect for function _UART_Write
  9792                           
  9793                           
  9794                           ;incstack = 0
  9795                           ; Regs used in _UART_Write: [wreg]
  9796                           ;UART_Write@data stored from wreg
  9797  0000' 0080'              	movwf	UART_Write@data
  9798  0001'                    l3081:
  9799  0001'                    l161:	
  9800                           ;uart_lib.c: 12: void UART_Write(char data);uart_lib.c: 13: {;uart_lib.c: 14:   while(!T
      +                          RMT);
  9801                           
  9802  0001' 1683               	bsf	3,5	;RP0=1, select bank1
  9803  0002' 1303               	bcf	3,6	;RP1=0, select bank1
  9804  0003' 1C98               	btfss	24,1	;volatile
  9805  0004' 2800'              	goto	u4701
  9806  0005' 2800'              	goto	u4700
  9807  0006'                    u4701:
  9808  0006' 2800'              	goto	l161
  9809  0007'                    u4700:
  9810  0007'                    l3083:
  9811                           
  9812                           ;uart_lib.c: 15:   TXREG = data;
  9813  0007' 0800'              	movf	UART_Write@data,w
  9814  0008' 1283               	bcf	3,5	;RP0=0, select bank0
  9815  0009' 1303               	bcf	3,6	;RP1=0, select bank0
  9816  000A' 0099               	movwf	25	;volatile
  9817  000B'                    l164:
  9818  000B' 0008               	return
  9819  000C'                    __end_of_UART_Write:
  9820                           
  9821                           	psect	text26
  9822  0000'                    __ptext26:	
  9823 ;; *************** function _UART_Initialize *****************
  9824 ;; Defined at:
  9825 ;;		line 4 in file "uart_lib.c"
  9826 ;; Parameters:    Size  Location     Type
  9827 ;;		None
  9828 ;; Auto vars:     Size  Location     Type
  9829 ;;		None
  9830 ;; Return value:  Size  Location     Type
  9831 ;;                  1    wreg      void 
  9832 ;; Registers used:
  9833 ;;		wreg, status,2
  9834 ;; Tracked objects:
  9835 ;;		On entry : 0/0
  9836 ;;		On exit  : 0/0
  9837 ;;		Unchanged: 0/0
  9838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9839 ;;      Params:         0       0       0       0       0
  9840 ;;      Locals:         0       0       0       0       0
  9841 ;;      Temps:          0       0       0       0       0
  9842 ;;      Totals:         0       0       0       0       0
  9843 ;;Total ram usage:        0 bytes
  9844 ;; Hardware stack levels used: 1
  9845 ;; This function calls:
  9846 ;;		Nothing
  9847 ;; This function is called by:
  9848 ;;		_main
  9849 ;; This function uses a non-reentrant model
  9850 ;;
  9851                           
  9852  0000'                    _UART_Initialize:	
  9853                           ;psect for function _UART_Initialize
  9854                           
  9855  0000'                    l3497:	
  9856                           ;incstack = 0
  9857                           ; Regs used in _UART_Initialize: [wreg+status,2]
  9858                           
  9859                           
  9860                           ;uart_lib.c: 6:     TXSTA=0b00100100;
  9861  0000' 3024               	movlw	36
  9862  0001' 1683               	bsf	3,5	;RP0=1, select bank1
  9863  0002' 1303               	bcf	3,6	;RP1=0, select bank1
  9864  0003' 0098               	movwf	24	;volatile
  9865                           
  9866                           ;uart_lib.c: 7:     RCSTA=0b10010000;
  9867  0004' 3090               	movlw	144
  9868  0005' 1283               	bcf	3,5	;RP0=0, select bank0
  9869  0006' 1303               	bcf	3,6	;RP1=0, select bank0
  9870  0007' 0098               	movwf	24	;volatile
  9871                           
  9872                           ;uart_lib.c: 8:     SPBRG=25;
  9873  0008' 3019               	movlw	25
  9874  0009' 1683               	bsf	3,5	;RP0=1, select bank1
  9875  000A' 1303               	bcf	3,6	;RP1=0, select bank1
  9876  000B' 0099               	movwf	25	;volatile
  9877  000C'                    l3499:
  9878                           
  9879                           ;uart_lib.c: 9:     TXREG=0x00;
  9880  000C' 1283               	bcf	3,5	;RP0=0, select bank0
  9881  000D' 1303               	bcf	3,6	;RP1=0, select bank0
  9882  000E' 0199               	clrf	25	;volatile
  9883  000F'                    l158:
  9884  000F' 0008               	return
  9885  0010'                    __end_of_UART_Initialize:
  9886                           
  9887                           	psect	text27
  9888  0000'                    __ptext27:	
  9889 ;; *************** function _Lcd_Write_String *****************
  9890 ;; Defined at:
  9891 ;;		line 96 in file "./lcd.h"
  9892 ;; Parameters:    Size  Location     Type
  9893 ;;  a               2    5[COMMON] PTR unsigned char 
  9894 ;;		 -> STR_24(15), STR_23(15), STR_22(15), STR_20(5), 
  9895 ;;		 -> STR_18(5), STR_16(9), STR_14(10), STR_12(5), 
  9896 ;;		 -> STR_10(9), STR_8(10), main@adcString2(4), STR_6(8), 
  9897 ;;		 -> main@adcString1(4), STR_4(7), STR_3(3), STR_2(8), 
  9898 ;;		 -> STR_1(13), 
  9899 ;; Auto vars:     Size  Location     Type
  9900 ;;  i               2   10[COMMON] int 
  9901 ;; Return value:  Size  Location     Type
  9902 ;;                  1    wreg      void 
  9903 ;; Registers used:
  9904 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9905 ;; Tracked objects:
  9906 ;;		On entry : 0/0
  9907 ;;		On exit  : 0/0
  9908 ;;		Unchanged: 0/0
  9909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9910 ;;      Params:         2       0       0       0       0
  9911 ;;      Locals:         2       0       0       0       0
  9912 ;;      Temps:          3       0       0       0       0
  9913 ;;      Totals:         7       0       0       0       0
  9914 ;;Total ram usage:        7 bytes
  9915 ;; Hardware stack levels used: 1
  9916 ;; Hardware stack levels required when called: 2
  9917 ;; This function calls:
  9918 ;;		_Lcd_Write_Char
  9919 ;; This function is called by:
  9920 ;;		_main
  9921 ;; This function uses a non-reentrant model
  9922 ;;
  9923                           
  9924  0000'                    _Lcd_Write_String:	
  9925                           ;psect for function _Lcd_Write_String
  9926                           
  9927  0000'                    l3489:	
  9928                           ;incstack = 0
  9929                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9930                           
  9931                           
  9932                           ;./lcd.h: 96: void Lcd_Write_String(char *a);./lcd.h: 97: {;./lcd.h: 98:  int i;;./lcd.h
      +                          : 99:  for(i=0;a[i]!='\0';i++)
  9933  0000' 018A'              	clrf	Lcd_Write_String@i
  9934  0001' 018B'              	clrf	Lcd_Write_String@i+1
  9935  0002' 2800'              	goto	l3495
  9936  0003'                    l3491:
  9937                           
  9938                           ;./lcd.h: 100:     Lcd_Write_Char(a[i]);
  9939  0003' 080A'              	movf	Lcd_Write_String@i,w
  9940  0004' 0705'              	addwf	Lcd_Write_String@a,w
  9941  0005' 0088'              	movwf	??_Lcd_Write_String+1
  9942  0006' 0806'              	movf	Lcd_Write_String@a+1,w
  9943  0007' 0087'              	movwf	??_Lcd_Write_String
  9944  0008' 1803               	skipnc
  9945  0009' 0A87'              	incf	??_Lcd_Write_String,f
  9946  000A' 1F8A'              	btfss	Lcd_Write_String@i,7
  9947  000B' 2800'              	goto	u5800
  9948  000C' 0387'              	decf	??_Lcd_Write_String,f
  9949  000D'                    u5800:
  9950  000D' 0807'              	movf	??_Lcd_Write_String,w
  9951  000E' 0089'              	movwf	??_Lcd_Write_String+2
  9952  000F' 0809'              	movf	??_Lcd_Write_String+2,w
  9953  0010' 1283               	bcf	3,5	;RP0=0, select bank0
  9954  0011' 1303               	bcf	3,6	;RP1=0, select bank0
  9955  0012' 00FF               	movwf	btemp+1
  9956  0013' 0808'              	movf	??_Lcd_Write_String+1,w
  9957  0014' 0084               	movwf	4
  9958  0015' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  9959  001A' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Write_Char
  9960  001F'                    l3493:
  9961  001F' 3001               	movlw	1
  9962  0020' 078A'              	addwf	Lcd_Write_String@i,f
  9963  0021' 1803               	skipnc
  9964  0022' 0A8B'              	incf	Lcd_Write_String@i+1,f
  9965  0023' 3000               	movlw	0
  9966  0024' 078B'              	addwf	Lcd_Write_String@i+1,f
  9967  0025'                    l3495:
  9968  0025' 080A'              	movf	Lcd_Write_String@i,w
  9969  0026' 0705'              	addwf	Lcd_Write_String@a,w
  9970  0027' 0088'              	movwf	??_Lcd_Write_String+1
  9971  0028' 0806'              	movf	Lcd_Write_String@a+1,w
  9972  0029' 0087'              	movwf	??_Lcd_Write_String
  9973  002A' 1803               	skipnc
  9974  002B' 0A87'              	incf	??_Lcd_Write_String,f
  9975  002C' 1F8A'              	btfss	Lcd_Write_String@i,7
  9976  002D' 2800'              	goto	u5810
  9977  002E' 0387'              	decf	??_Lcd_Write_String,f
  9978  002F'                    u5810:
  9979  002F' 0807'              	movf	??_Lcd_Write_String,w
  9980  0030' 0089'              	movwf	??_Lcd_Write_String+2
  9981  0031' 0809'              	movf	??_Lcd_Write_String+2,w
  9982  0032' 1283               	bcf	3,5	;RP0=0, select bank0
  9983  0033' 1303               	bcf	3,6	;RP1=0, select bank0
  9984  0034' 00FF               	movwf	btemp+1
  9985  0035' 0808'              	movf	??_Lcd_Write_String+1,w
  9986  0036' 0084               	movwf	4
  9987  0037' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  9988  003C' 3A00               	xorlw	0
  9989  003D' 1D03               	skipz
  9990  003E' 2800'              	goto	u5821
  9991  003F' 2800'              	goto	u5820
  9992  0040'                    u5821:
  9993  0040' 2800'              	goto	l3491
  9994  0041'                    u5820:
  9995  0041'                    l105:
  9996  0041' 0008               	return
  9997  0042'                    __end_of_Lcd_Write_String:
  9998                           
  9999                           	psect	text28
 10000  0000'                    __ptext28:	
 10001 ;; *************** function _Lcd_Write_Char *****************
 10002 ;; Defined at:
 10003 ;;		line 80 in file "./lcd.h"
 10004 ;; Parameters:    Size  Location     Type
 10005 ;;  a               1    wreg     unsigned char 
 10006 ;; Auto vars:     Size  Location     Type
 10007 ;;  a               1    4[COMMON] unsigned char 
 10008 ;;  y               1    3[COMMON] unsigned char 
 10009 ;;  temp            1    2[COMMON] unsigned char 
 10010 ;; Return value:  Size  Location     Type
 10011 ;;                  1    wreg      void 
 10012 ;; Registers used:
 10013 ;;		wreg, status,2, status,0, pclath, cstack
 10014 ;; Tracked objects:
 10015 ;;		On entry : 0/0
 10016 ;;		On exit  : 0/0
 10017 ;;		Unchanged: 0/0
 10018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10019 ;;      Params:         0       0       0       0       0
 10020 ;;      Locals:         3       0       0       0       0
 10021 ;;      Temps:          1       0       0       0       0
 10022 ;;      Totals:         4       0       0       0       0
 10023 ;;Total ram usage:        4 bytes
 10024 ;; Hardware stack levels used: 1
 10025 ;; Hardware stack levels required when called: 1
 10026 ;; This function calls:
 10027 ;;		_Lcd_Port
 10028 ;; This function is called by:
 10029 ;;		_Lcd_Write_String
 10030 ;; This function uses a non-reentrant model
 10031 ;;
 10032                           
 10033  0000'                    _Lcd_Write_Char:	
 10034                           ;psect for function _Lcd_Write_Char
 10035                           
 10036                           
 10037                           ;incstack = 0
 10038                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
 10039                           ;Lcd_Write_Char@a stored from wreg
 10040  0000' 0084'              	movwf	Lcd_Write_Char@a
 10041  0001'                    l3061:
 10042                           
 10043                           ;./lcd.h: 80: void Lcd_Write_Char(char a);./lcd.h: 81: {;./lcd.h: 82:    char temp,y;;./
      +                          lcd.h: 83:    temp = a&0x0F;
 10044  0001' 0804'              	movf	Lcd_Write_Char@a,w
 10045  0002' 390F               	andlw	15
 10046  0003' 0082'              	movwf	Lcd_Write_Char@temp
 10047                           
 10048                           ;./lcd.h: 84:    y = a&0xF0;
 10049  0004' 0804'              	movf	Lcd_Write_Char@a,w
 10050  0005' 39F0               	andlw	240
 10051  0006' 0083'              	movwf	Lcd_Write_Char@y
 10052  0007'                    l3063:
 10053                           
 10054                           ;./lcd.h: 85:    RB5 = 1;
 10055  0007' 1283               	bcf	3,5	;RP0=0, select bank0
 10056  0008' 1303               	bcf	3,6	;RP1=0, select bank0
 10057  0009' 1686               	bsf	6,5	;volatile
 10058  000A'                    l3065:
 10059                           
 10060                           ;./lcd.h: 86:    Lcd_Port(y>>4);
 10061  000A' 0803'              	movf	Lcd_Write_Char@y,w
 10062  000B' 0081'              	movwf	??_Lcd_Write_Char
 10063  000C' 3004               	movlw	4
 10064  000D'                    u4695:
 10065  000D' 1003               	clrc
 10066  000E' 0C81'              	rrf	??_Lcd_Write_Char,f
 10067  000F' 3EFF               	addlw	-1
 10068  0010' 1D03               	skipz
 10069  0011' 2800'              	goto	u4695
 10070  0012' 0801'              	movf	??_Lcd_Write_Char,w
 10071  0013' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Port
 10072  0018'                    l3067:
 10073                           
 10074                           ;./lcd.h: 87:    RB4 = 1;
 10075  0018' 1283               	bcf	3,5	;RP0=0, select bank0
 10076  0019' 1303               	bcf	3,6	;RP1=0, select bank0
 10077  001A' 1606               	bsf	6,4	;volatile
 10078  001B'                    l3069:
 10079                           
 10080                           ;./lcd.h: 88:    _delay((unsigned long)((40)*(4000000/4000000.0)));
 10081  001B' 300D               	movlw	13
 10082  001C' 0081'              	movwf	??_Lcd_Write_Char
 10083  001D'                    u6967:
 10084  001D' 0B81'              	decfsz	??_Lcd_Write_Char,f
 10085  001E' 2800'              	goto	u6967
 10086  001F'                    l3071:
 10087                           
 10088                           ;./lcd.h: 89:    RB4 = 0;
 10089  001F' 1283               	bcf	3,5	;RP0=0, select bank0
 10090  0020' 1303               	bcf	3,6	;RP1=0, select bank0
 10091  0021' 1206               	bcf	6,4	;volatile
 10092  0022'                    l3073:
 10093                           
 10094                           ;./lcd.h: 90:    Lcd_Port(temp);
 10095  0022' 0802'              	movf	Lcd_Write_Char@temp,w
 10096  0023' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Port
 10097  0028'                    l3075:
 10098                           
 10099                           ;./lcd.h: 91:    RB4 = 1;
 10100  0028' 1283               	bcf	3,5	;RP0=0, select bank0
 10101  0029' 1303               	bcf	3,6	;RP1=0, select bank0
 10102  002A' 1606               	bsf	6,4	;volatile
 10103  002B'                    l3077:
 10104                           
 10105                           ;./lcd.h: 92:    _delay((unsigned long)((40)*(4000000/4000000.0)));
 10106  002B' 300D               	movlw	13
 10107  002C' 0081'              	movwf	??_Lcd_Write_Char
 10108  002D'                    u6977:
 10109  002D' 0B81'              	decfsz	??_Lcd_Write_Char,f
 10110  002E' 2800'              	goto	u6977
 10111  002F'                    l3079:
 10112                           
 10113                           ;./lcd.h: 93:    RB4 = 0;
 10114  002F' 1283               	bcf	3,5	;RP0=0, select bank0
 10115  0030' 1303               	bcf	3,6	;RP1=0, select bank0
 10116  0031' 1206               	bcf	6,4	;volatile
 10117  0032'                    l99:
 10118  0032' 0008               	return
 10119  0033'                    __end_of_Lcd_Write_Char:
 10120                           
 10121                           	psect	text29
 10122  0000'                    __ptext29:	
 10123 ;; *************** function _Lcd_Set_Cursor *****************
 10124 ;; Defined at:
 10125 ;;		line 40 in file "./lcd.h"
 10126 ;; Parameters:    Size  Location     Type
 10127 ;;  a               1    wreg     unsigned char 
 10128 ;;  b               1    4[COMMON] unsigned char 
 10129 ;; Auto vars:     Size  Location     Type
 10130 ;;  a               1    6[COMMON] unsigned char 
 10131 ;;  temp            1    9[COMMON] unsigned char 
 10132 ;;  y               1    8[COMMON] unsigned char 
 10133 ;;  z               1    7[COMMON] unsigned char 
 10134 ;; Return value:  Size  Location     Type
 10135 ;;                  1    wreg      void 
 10136 ;; Registers used:
 10137 ;;		wreg, status,2, status,0, pclath, cstack
 10138 ;; Tracked objects:
 10139 ;;		On entry : 0/0
 10140 ;;		On exit  : 0/0
 10141 ;;		Unchanged: 0/0
 10142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10143 ;;      Params:         1       0       0       0       0
 10144 ;;      Locals:         4       0       0       0       0
 10145 ;;      Temps:          1       0       0       0       0
 10146 ;;      Totals:         6       0       0       0       0
 10147 ;;Total ram usage:        6 bytes
 10148 ;; Hardware stack levels used: 1
 10149 ;; Hardware stack levels required when called: 2
 10150 ;; This function calls:
 10151 ;;		_Lcd_Cmd
 10152 ;; This function is called by:
 10153 ;;		_main
 10154 ;; This function uses a non-reentrant model
 10155 ;;
 10156                           
 10157  0000'                    _Lcd_Set_Cursor:	
 10158                           ;psect for function _Lcd_Set_Cursor
 10159                           
 10160                           
 10161                           ;incstack = 0
 10162                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
 10163                           ;Lcd_Set_Cursor@a stored from wreg
 10164  0000' 0086'              	movwf	Lcd_Set_Cursor@a
 10165  0001'                    l3459:
 10166                           
 10167                           ;./lcd.h: 40: void Lcd_Set_Cursor(char a, char b);./lcd.h: 41: {;./lcd.h: 42:  char temp
      +                          ,z,y;;./lcd.h: 43:  if(a == 1)
 10168  0001' 0306'              	decf	Lcd_Set_Cursor@a,w
 10169  0002' 1D03               	btfss	3,2
 10170  0003' 2800'              	goto	u5761
 10171  0004' 2800'              	goto	u5760
 10172  0005'                    u5761:
 10173  0005' 2800'              	goto	l3469
 10174  0006'                    u5760:
 10175  0006'                    l3461:
 10176                           
 10177                           ;./lcd.h: 44:  {;./lcd.h: 45:    temp = 0x80 + b - 1;
 10178  0006' 0804'              	movf	Lcd_Set_Cursor@b,w
 10179  0007' 3E7F               	addlw	127
 10180  0008' 0089'              	movwf	Lcd_Set_Cursor@temp
 10181                           
 10182                           ;./lcd.h: 46:   z = temp>>4;
 10183  0009' 0809'              	movf	Lcd_Set_Cursor@temp,w
 10184  000A' 0085'              	movwf	??_Lcd_Set_Cursor
 10185  000B' 3004               	movlw	4
 10186  000C'                    u5775:
 10187  000C' 1003               	clrc
 10188  000D' 0C85'              	rrf	??_Lcd_Set_Cursor,f
 10189  000E' 3EFF               	addlw	-1
 10190  000F' 1D03               	skipz
 10191  0010' 2800'              	goto	u5775
 10192  0011' 0805'              	movf	??_Lcd_Set_Cursor,w
 10193  0012' 0087'              	movwf	Lcd_Set_Cursor@z
 10194  0013'                    l3463:
 10195                           
 10196                           ;./lcd.h: 47:   y = temp & 0x0F;
 10197  0013' 0809'              	movf	Lcd_Set_Cursor@temp,w
 10198  0014' 390F               	andlw	15
 10199  0015' 0088'              	movwf	Lcd_Set_Cursor@y
 10200  0016'                    l3465:
 10201                           
 10202                           ;./lcd.h: 48:   Lcd_Cmd(z);
 10203  0016' 0807'              	movf	Lcd_Set_Cursor@z,w
 10204  0017' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Cmd
 10205  001C'                    l3467:
 10206                           
 10207                           ;./lcd.h: 49:   Lcd_Cmd(y);
 10208  001C' 0808'              	movf	Lcd_Set_Cursor@y,w
 10209  001D' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Cmd
 10210                           
 10211                           ;./lcd.h: 50:  }
 10212  0022' 2800'              	goto	l93
 10213  0023'                    l3469:
 10214  0023' 3002               	movlw	2
 10215  0024' 0606'              	xorwf	Lcd_Set_Cursor@a,w
 10216  0025' 1D03               	btfss	3,2
 10217  0026' 2800'              	goto	u5781
 10218  0027' 2800'              	goto	u5780
 10219  0028'                    u5781:
 10220  0028' 2800'              	goto	l93
 10221  0029'                    u5780:
 10222  0029'                    l3471:
 10223                           
 10224                           ;./lcd.h: 52:  {;./lcd.h: 53:   temp = 0xC0 + b - 1;
 10225  0029' 0804'              	movf	Lcd_Set_Cursor@b,w
 10226  002A' 3EBF               	addlw	191
 10227  002B' 0089'              	movwf	Lcd_Set_Cursor@temp
 10228                           
 10229                           ;./lcd.h: 54:   z = temp>>4;
 10230  002C' 0809'              	movf	Lcd_Set_Cursor@temp,w
 10231  002D' 0085'              	movwf	??_Lcd_Set_Cursor
 10232  002E' 3004               	movlw	4
 10233  002F'                    u5795:
 10234  002F' 1003               	clrc
 10235  0030' 0C85'              	rrf	??_Lcd_Set_Cursor,f
 10236  0031' 3EFF               	addlw	-1
 10237  0032' 1D03               	skipz
 10238  0033' 2800'              	goto	u5795
 10239  0034' 0805'              	movf	??_Lcd_Set_Cursor,w
 10240  0035' 0087'              	movwf	Lcd_Set_Cursor@z
 10241  0036'                    l3473:
 10242                           
 10243                           ;./lcd.h: 55:   y = temp & 0x0F;
 10244  0036' 0809'              	movf	Lcd_Set_Cursor@temp,w
 10245  0037' 390F               	andlw	15
 10246  0038' 0088'              	movwf	Lcd_Set_Cursor@y
 10247  0039'                    l3475:
 10248                           
 10249                           ;./lcd.h: 56:   Lcd_Cmd(z);
 10250  0039' 0807'              	movf	Lcd_Set_Cursor@z,w
 10251  003A' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Cmd
 10252  003F'                    l3477:
 10253                           
 10254                           ;./lcd.h: 57:   Lcd_Cmd(y);
 10255  003F' 0808'              	movf	Lcd_Set_Cursor@y,w
 10256  0040' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Cmd
 10257  0045'                    l93:
 10258  0045' 0008               	return
 10259  0046'                    __end_of_Lcd_Set_Cursor:
 10260                           
 10261                           	psect	text30
 10262  0000'                    __ptext30:	
 10263 ;; *************** function _Lcd_Init *****************
 10264 ;; Defined at:
 10265 ;;		line 61 in file "./lcd.h"
 10266 ;; Parameters:    Size  Location     Type
 10267 ;;		None
 10268 ;; Auto vars:     Size  Location     Type
 10269 ;;		None
 10270 ;; Return value:  Size  Location     Type
 10271 ;;                  1    wreg      void 
 10272 ;; Registers used:
 10273 ;;		wreg, status,2, status,0, pclath, cstack
 10274 ;; Tracked objects:
 10275 ;;		On entry : 0/0
 10276 ;;		On exit  : 0/0
 10277 ;;		Unchanged: 0/0
 10278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10279 ;;      Params:         0       0       0       0       0
 10280 ;;      Locals:         0       0       0       0       0
 10281 ;;      Temps:          2       0       0       0       0
 10282 ;;      Totals:         2       0       0       0       0
 10283 ;;Total ram usage:        2 bytes
 10284 ;; Hardware stack levels used: 1
 10285 ;; Hardware stack levels required when called: 2
 10286 ;; This function calls:
 10287 ;;		_Lcd_Cmd
 10288 ;;		_Lcd_Port
 10289 ;; This function is called by:
 10290 ;;		_main
 10291 ;; This function uses a non-reentrant model
 10292 ;;
 10293                           
 10294  0000'                    _Lcd_Init:	
 10295                           ;psect for function _Lcd_Init
 10296                           
 10297  0000'                    l3479:	
 10298                           ;incstack = 0
 10299                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
 10300                           
 10301                           
 10302                           ;./lcd.h: 63:   Lcd_Port(0x00);
 10303  0000' 3000               	movlw	0
 10304  0001' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Port
 10305  0006'                    l3481:
 10306                           
 10307                           ;./lcd.h: 64:    _delay((unsigned long)((20)*(4000000/4000.0)));
 10308  0006' 301A               	movlw	26
 10309  0007' 0085'              	movwf	??_Lcd_Init+1
 10310  0008' 30F8               	movlw	248
 10311  0009' 0084'              	movwf	??_Lcd_Init
 10312  000A'                    u6987:
 10313  000A' 0B84'              	decfsz	??_Lcd_Init,f
 10314  000B' 2800'              	goto	u6987
 10315  000C' 0B85'              	decfsz	??_Lcd_Init+1,f
 10316  000D' 2800'              	goto	u6987
 10317  000E' 0000               	nop
 10318  000F'                    l3483:
 10319                           
 10320                           ;./lcd.h: 65:   Lcd_Cmd(0x03);
 10321  000F' 3003               	movlw	3
 10322  0010' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Cmd
 10323                           
 10324                           ;./lcd.h: 66:  _delay((unsigned long)((5)*(4000000/4000.0)));
 10325  0015' 3007               	movlw	7
 10326  0016' 0085'              	movwf	??_Lcd_Init+1
 10327  0017' 307D               	movlw	125
 10328  0018' 0084'              	movwf	??_Lcd_Init
 10329  0019'                    u6997:
 10330  0019' 0B84'              	decfsz	??_Lcd_Init,f
 10331  001A' 2800'              	goto	u6997
 10332  001B' 0B85'              	decfsz	??_Lcd_Init+1,f
 10333  001C' 2800'              	goto	u6997
 10334  001D'                    l3485:
 10335                           
 10336                           ;./lcd.h: 67:   Lcd_Cmd(0x03);
 10337  001D' 3003               	movlw	3
 10338  001E' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Cmd
 10339  0023'                    l3487:
 10340                           
 10341                           ;./lcd.h: 68:  _delay((unsigned long)((11)*(4000000/4000.0)));
 10342  0023' 300F               	movlw	15
 10343  0024' 0085'              	movwf	??_Lcd_Init+1
 10344  0025' 3047               	movlw	71
 10345  0026' 0084'              	movwf	??_Lcd_Init
 10346  0027'                    u7007:
 10347  0027' 0B84'              	decfsz	??_Lcd_Init,f
 10348  0028' 2800'              	goto	u7007
 10349  0029' 0B85'              	decfsz	??_Lcd_Init+1,f
 10350  002A' 2800'              	goto	u7007
 10351  002B' 2800'              	nop2
 10352                           
 10353                           ;./lcd.h: 69:   Lcd_Cmd(0x03);
 10354  002C' 3003               	movlw	3
 10355  002D' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Cmd
 10356                           
 10357                           ;./lcd.h: 71:   Lcd_Cmd(0x02);
 10358  0032' 3002               	movlw	2
 10359  0033' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Cmd
 10360                           
 10361                           ;./lcd.h: 72:   Lcd_Cmd(0x02);
 10362  0038' 3002               	movlw	2
 10363  0039' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Cmd
 10364                           
 10365                           ;./lcd.h: 73:   Lcd_Cmd(0x08);
 10366  003E' 3008               	movlw	8
 10367  003F' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Cmd
 10368                           
 10369                           ;./lcd.h: 74:   Lcd_Cmd(0x00);
 10370  0044' 3000               	movlw	0
 10371  0045' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Cmd
 10372                           
 10373                           ;./lcd.h: 75:   Lcd_Cmd(0x0C);
 10374  004A' 300C               	movlw	12
 10375  004B' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Cmd
 10376                           
 10377                           ;./lcd.h: 76:   Lcd_Cmd(0x00);
 10378  0050' 3000               	movlw	0
 10379  0051' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Cmd
 10380                           
 10381                           ;./lcd.h: 77:   Lcd_Cmd(0x06);
 10382  0056' 3006               	movlw	6
 10383  0057' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Cmd
 10384  005C'                    l96:
 10385  005C' 0008               	return
 10386  005D'                    __end_of_Lcd_Init:
 10387                           
 10388                           	psect	text31
 10389  0000'                    __ptext31:	
 10390 ;; *************** function _Lcd_Clear *****************
 10391 ;; Defined at:
 10392 ;;		line 34 in file "./lcd.h"
 10393 ;; Parameters:    Size  Location     Type
 10394 ;;		None
 10395 ;; Auto vars:     Size  Location     Type
 10396 ;;		None
 10397 ;; Return value:  Size  Location     Type
 10398 ;;                  1    wreg      void 
 10399 ;; Registers used:
 10400 ;;		wreg, status,2, status,0, pclath, cstack
 10401 ;; Tracked objects:
 10402 ;;		On entry : 0/0
 10403 ;;		On exit  : 0/0
 10404 ;;		Unchanged: 0/0
 10405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10406 ;;      Params:         0       0       0       0       0
 10407 ;;      Locals:         0       0       0       0       0
 10408 ;;      Temps:          0       0       0       0       0
 10409 ;;      Totals:         0       0       0       0       0
 10410 ;;Total ram usage:        0 bytes
 10411 ;; Hardware stack levels used: 1
 10412 ;; Hardware stack levels required when called: 2
 10413 ;; This function calls:
 10414 ;;		_Lcd_Cmd
 10415 ;; This function is called by:
 10416 ;;		_main
 10417 ;; This function uses a non-reentrant model
 10418 ;;
 10419                           
 10420  0000'                    _Lcd_Clear:	
 10421                           ;psect for function _Lcd_Clear
 10422                           
 10423  0000'                    l3457:	
 10424                           ;incstack = 0
 10425                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
 10426                           
 10427                           
 10428                           ;./lcd.h: 36:  Lcd_Cmd(0);
 10429  0000' 3000               	movlw	0
 10430  0001' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Cmd
 10431                           
 10432                           ;./lcd.h: 37:  Lcd_Cmd(1);
 10433  0006' 3001               	movlw	1
 10434  0007' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Cmd
 10435  000C'                    l87:
 10436  000C' 0008               	return
 10437  000D'                    __end_of_Lcd_Clear:
 10438                           
 10439                           	psect	text32
 10440  0000'                    __ptext32:	
 10441 ;; *************** function _Lcd_Cmd *****************
 10442 ;; Defined at:
 10443 ;;		line 25 in file "./lcd.h"
 10444 ;; Parameters:    Size  Location     Type
 10445 ;;  a               1    wreg     unsigned char 
 10446 ;; Auto vars:     Size  Location     Type
 10447 ;;  a               1    3[COMMON] unsigned char 
 10448 ;; Return value:  Size  Location     Type
 10449 ;;                  1    wreg      void 
 10450 ;; Registers used:
 10451 ;;		wreg, status,2, status,0, pclath, cstack
 10452 ;; Tracked objects:
 10453 ;;		On entry : 0/0
 10454 ;;		On exit  : 0/0
 10455 ;;		Unchanged: 0/0
 10456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10457 ;;      Params:         0       0       0       0       0
 10458 ;;      Locals:         1       0       0       0       0
 10459 ;;      Temps:          2       0       0       0       0
 10460 ;;      Totals:         3       0       0       0       0
 10461 ;;Total ram usage:        3 bytes
 10462 ;; Hardware stack levels used: 1
 10463 ;; Hardware stack levels required when called: 1
 10464 ;; This function calls:
 10465 ;;		_Lcd_Port
 10466 ;; This function is called by:
 10467 ;;		_Lcd_Clear
 10468 ;;		_Lcd_Set_Cursor
 10469 ;;		_Lcd_Init
 10470 ;; This function uses a non-reentrant model
 10471 ;;
 10472                           
 10473  0000'                    _Lcd_Cmd:	
 10474                           ;psect for function _Lcd_Cmd
 10475                           
 10476                           
 10477                           ;incstack = 0
 10478                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
 10479                           ;Lcd_Cmd@a stored from wreg
 10480  0000' 0083'              	movwf	Lcd_Cmd@a
 10481  0001'                    l3051:
 10482                           
 10483                           ;./lcd.h: 25: void Lcd_Cmd(char a);./lcd.h: 26: {;./lcd.h: 27:  RB5 = 0;
 10484  0001' 1283               	bcf	3,5	;RP0=0, select bank0
 10485  0002' 1303               	bcf	3,6	;RP1=0, select bank0
 10486  0003' 1286               	bcf	6,5	;volatile
 10487  0004'                    l3053:
 10488                           
 10489                           ;./lcd.h: 28:  Lcd_Port(a);
 10490  0004' 0803'              	movf	Lcd_Cmd@a,w
 10491  0005' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Port
 10492  000A'                    l3055:
 10493                           
 10494                           ;./lcd.h: 29:  RB4 = 1;
 10495  000A' 1283               	bcf	3,5	;RP0=0, select bank0
 10496  000B' 1303               	bcf	3,6	;RP1=0, select bank0
 10497  000C' 1606               	bsf	6,4	;volatile
 10498  000D'                    l3057:
 10499                           
 10500                           ;./lcd.h: 30:         _delay((unsigned long)((4)*(4000000/4000.0)));
 10501  000D' 3006               	movlw	6
 10502  000E' 0082'              	movwf	??_Lcd_Cmd+1
 10503  000F' 3030               	movlw	48
 10504  0010' 0081'              	movwf	??_Lcd_Cmd
 10505  0011'                    u7017:
 10506  0011' 0B81'              	decfsz	??_Lcd_Cmd,f
 10507  0012' 2800'              	goto	u7017
 10508  0013' 0B82'              	decfsz	??_Lcd_Cmd+1,f
 10509  0014' 2800'              	goto	u7017
 10510  0015' 0000               	nop
 10511  0016'                    l3059:
 10512                           
 10513                           ;./lcd.h: 31:         RB4 = 0;
 10514  0016' 1283               	bcf	3,5	;RP0=0, select bank0
 10515  0017' 1303               	bcf	3,6	;RP1=0, select bank0
 10516  0018' 1206               	bcf	6,4	;volatile
 10517  0019'                    l84:
 10518  0019' 0008               	return
 10519  001A'                    __end_of_Lcd_Cmd:
 10520                           
 10521                           	psect	text33
 10522  0000'                    __ptext33:	
 10523 ;; *************** function _Lcd_Port *****************
 10524 ;; Defined at:
 10525 ;;		line 3 in file "./lcd.h"
 10526 ;; Parameters:    Size  Location     Type
 10527 ;;  a               1    wreg     unsigned char 
 10528 ;; Auto vars:     Size  Location     Type
 10529 ;;  a               1    0[COMMON] unsigned char 
 10530 ;; Return value:  Size  Location     Type
 10531 ;;                  1    wreg      void 
 10532 ;; Registers used:
 10533 ;;		wreg
 10534 ;; Tracked objects:
 10535 ;;		On entry : 0/0
 10536 ;;		On exit  : 0/0
 10537 ;;		Unchanged: 0/0
 10538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10539 ;;      Params:         0       0       0       0       0
 10540 ;;      Locals:         1       0       0       0       0
 10541 ;;      Temps:          0       0       0       0       0
 10542 ;;      Totals:         1       0       0       0       0
 10543 ;;Total ram usage:        1 bytes
 10544 ;; Hardware stack levels used: 1
 10545 ;; This function calls:
 10546 ;;		Nothing
 10547 ;; This function is called by:
 10548 ;;		_Lcd_Cmd
 10549 ;;		_Lcd_Init
 10550 ;;		_Lcd_Write_Char
 10551 ;; This function uses a non-reentrant model
 10552 ;;
 10553                           
 10554  0000'                    _Lcd_Port:	
 10555                           ;psect for function _Lcd_Port
 10556                           
 10557                           
 10558                           ;incstack = 0
 10559                           ; Regs used in _Lcd_Port: [wreg]
 10560                           ;Lcd_Port@a stored from wreg
 10561  0000' 0080'              	movwf	Lcd_Port@a
 10562  0001'                    l2569:
 10563                           
 10564                           ;./lcd.h: 3: void Lcd_Port(char a);./lcd.h: 4: {;./lcd.h: 5:  if(a & 1)
 10565  0001' 1C00'              	btfss	Lcd_Port@a,0
 10566  0002' 2800'              	goto	u3501
 10567  0003' 2800'              	goto	u3500
 10568  0004'                    u3501:
 10569  0004' 2800'              	goto	l73
 10570  0005'                    u3500:
 10571  0005'                    l2571:
 10572                           
 10573                           ;./lcd.h: 6:   RB3 = 1;
 10574  0005' 1283               	bcf	3,5	;RP0=0, select bank0
 10575  0006' 1303               	bcf	3,6	;RP1=0, select bank0
 10576  0007' 1586               	bsf	6,3	;volatile
 10577  0008' 2800'              	goto	l74
 10578  0009'                    l73:	
 10579                           ;./lcd.h: 7:  else
 10580                           
 10581                           
 10582                           ;./lcd.h: 8:   RB3 = 0;
 10583  0009' 1283               	bcf	3,5	;RP0=0, select bank0
 10584  000A' 1303               	bcf	3,6	;RP1=0, select bank0
 10585  000B' 1186               	bcf	6,3	;volatile
 10586  000C'                    l74:
 10587                           
 10588                           ;./lcd.h: 10:  if(a & 2)
 10589  000C' 1C80'              	btfss	Lcd_Port@a,1
 10590  000D' 2800'              	goto	u3511
 10591  000E' 2800'              	goto	u3510
 10592  000F'                    u3511:
 10593  000F' 2800'              	goto	l75
 10594  0010'                    u3510:
 10595  0010'                    l2573:
 10596                           
 10597                           ;./lcd.h: 11:   RB2 = 1;
 10598  0010' 1506               	bsf	6,2	;volatile
 10599  0011' 2800'              	goto	l76
 10600  0012'                    l75:	
 10601                           ;./lcd.h: 12:  else
 10602                           
 10603                           
 10604                           ;./lcd.h: 13:   RB2 = 0;
 10605  0012' 1106               	bcf	6,2	;volatile
 10606  0013'                    l76:
 10607                           
 10608                           ;./lcd.h: 15:  if(a & 4)
 10609  0013' 1D00'              	btfss	Lcd_Port@a,2
 10610  0014' 2800'              	goto	u3521
 10611  0015' 2800'              	goto	u3520
 10612  0016'                    u3521:
 10613  0016' 2800'              	goto	l77
 10614  0017'                    u3520:
 10615  0017'                    l2575:
 10616                           
 10617                           ;./lcd.h: 16:   RB1 = 1;
 10618  0017' 1486               	bsf	6,1	;volatile
 10619  0018' 2800'              	goto	l78
 10620  0019'                    l77:	
 10621                           ;./lcd.h: 17:  else
 10622                           
 10623                           
 10624                           ;./lcd.h: 18:   RB1 = 0;
 10625  0019' 1086               	bcf	6,1	;volatile
 10626  001A'                    l78:
 10627                           
 10628                           ;./lcd.h: 20:  if(a & 8)
 10629  001A' 1D80'              	btfss	Lcd_Port@a,3
 10630  001B' 2800'              	goto	u3531
 10631  001C' 2800'              	goto	u3530
 10632  001D'                    u3531:
 10633  001D' 2800'              	goto	l79
 10634  001E'                    u3530:
 10635  001E'                    l2577:
 10636                           
 10637                           ;./lcd.h: 21:   RB0 = 1;
 10638  001E' 1406               	bsf	6,0	;volatile
 10639  001F' 2800'              	goto	l81
 10640  0020'                    l79:	
 10641                           ;./lcd.h: 22:  else
 10642                           
 10643                           
 10644                           ;./lcd.h: 23:   RB0 = 0;
 10645  0020' 1006               	bcf	6,0	;volatile
 10646  0021'                    l81:
 10647  0021' 0008               	return
 10648  0022'                    __end_of_Lcd_Port:
 10649  007E                     btemp	set	126	;btemp
 10650  007E                     wtemp0	set	126
 10651                           
 10652                           	psect	config
 10653                           
 10654                           ;Config register CONFIG @ 0x2007
 10655                           ;	Oscillator Selection bits
 10656                           ;	FOSC = XT, XT oscillator
 10657                           ;	Watchdog Timer Enable bit
 10658                           ;	WDTE = OFF, WDT disabled
 10659                           ;	Power-up Timer Enable bit
 10660                           ;	PWRTE = ON, PWRT enabled
 10661                           ;	Brown-out Reset Enable bit
 10662                           ;	BOREN = ON, BOR enabled
 10663                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
 10664                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
 10665                           ;	Data EEPROM Memory Code Protection bit
 10666                           ;	CPD = OFF, Data EEPROM code protection off
 10667                           ;	Flash Program Memory Write Enable bits
 10668                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
 10669                           ;	In-Circuit Debugger Mode bit
 10670                           ;	DEBUG = 0x1, unprogrammed default
 10671                           ;	Flash Program Memory Code Protection bit
 10672                           ;	CP = OFF, Code protection off
 10673  2007                     	org	8199
 10674  2007  3F71               	dw	16241
 10675                           
 10676                           	psect	text1_split_1
 10677  0000'                    u5960:
 10678  0000'                    l3597:
 10679  0000' 1683               	bsf	3,5	;RP0=1, select bank1
 10680  0001' 1303               	bcf	3,6	;RP1=0, select bank1
 10681  0002' 0800'              	movf	(sprintf@fval+3)^(0+128),w
 10682  0003' 0083'              	movwf	___fleq@ff1+3
 10683  0004' 0800'              	movf	(sprintf@fval+2)^(0+128),w
 10684  0005' 0082'              	movwf	___fleq@ff1+2
 10685  0006' 0800'              	movf	(sprintf@fval+1)^(0+128),w
 10686  0007' 0081'              	movwf	___fleq@ff1+1
 10687  0008' 0800'              	movf	sprintf@fval^(0+128),w
 10688  0009' 0080'              	movwf	___fleq@ff1
 10689  000A' 3000               	movlw	0
 10690  000B' 0087'              	movwf	___fleq@ff2+3
 10691  000C' 3000               	movlw	0
 10692  000D' 0086'              	movwf	___fleq@ff2+2
 10693  000E' 3000               	movlw	0
 10694  000F' 0085'              	movwf	___fleq@ff2+1
 10695  0010' 3000               	movlw	0
 10696  0011' 0084'              	movwf	___fleq@ff2
 10697  0012' 120A' 118A' 2000' 120A' 118A' 	fcall	___fleq
 10698  0017' 1803               	btfsc	3,0
 10699  0018' 2800'              	goto	u5971
 10700  0019' 2800'              	goto	u5970
 10701  001A'                    u5971:
 10702  001A' 2800'              	goto	l3617
 10703  001B'                    u5970:
 10704  001B'                    l3599:
 10705  001B' 1683               	bsf	3,5	;RP0=1, select bank1
 10706  001C' 1303               	bcf	3,6	;RP1=0, select bank1
 10707  001D' 0800'              	movf	(sprintf@fval+3)^(0+128),w
 10708  001E' 1283               	bcf	3,5	;RP0=0, select bank0
 10709  001F' 1303               	bcf	3,6	;RP1=0, select bank0
 10710  0020' 00B0'              	movwf	___fltol@f1+3
 10711  0021' 1683               	bsf	3,5	;RP0=1, select bank1
 10712  0022' 1303               	bcf	3,6	;RP1=0, select bank1
 10713  0023' 0800'              	movf	(sprintf@fval+2)^(0+128),w
 10714  0024' 1283               	bcf	3,5	;RP0=0, select bank0
 10715  0025' 1303               	bcf	3,6	;RP1=0, select bank0
 10716  0026' 00AF'              	movwf	___fltol@f1+2
 10717  0027' 1683               	bsf	3,5	;RP0=1, select bank1
 10718  0028' 1303               	bcf	3,6	;RP1=0, select bank1
 10719  0029' 0800'              	movf	(sprintf@fval+1)^(0+128),w
 10720  002A' 1283               	bcf	3,5	;RP0=0, select bank0
 10721  002B' 1303               	bcf	3,6	;RP1=0, select bank0
 10722  002C' 00AE'              	movwf	___fltol@f1+1
 10723  002D' 1683               	bsf	3,5	;RP0=1, select bank1
 10724  002E' 1303               	bcf	3,6	;RP1=0, select bank1
 10725  002F' 0800'              	movf	sprintf@fval^(0+128),w
 10726  0030' 1283               	bcf	3,5	;RP0=0, select bank0
 10727  0031' 1303               	bcf	3,6	;RP1=0, select bank0
 10728  0032' 00AD'              	movwf	___fltol@f1
 10729  0033' 120A' 118A' 2000' 120A' 118A' 	fcall	___fltol
 10730  0038' 1283               	bcf	3,5	;RP0=0, select bank0
 10731  0039' 1303               	bcf	3,6	;RP1=0, select bank0
 10732  003A' 0830'              	movf	?___fltol+3,w
 10733  003B' 042F'              	iorwf	?___fltol+2,w
 10734  003C' 042E'              	iorwf	?___fltol+1,w
 10735  003D' 042D'              	iorwf	?___fltol,w
 10736  003E' 1D03               	skipz
 10737  003F' 2800'              	goto	u5981
 10738  0040' 2800'              	goto	u5980
 10739  0041'                    u5981:
 10740  0041' 2800'              	goto	l3617
 10741  0042'                    u5980:
 10742  0042'                    l3601:
 10743  0042' 1683               	bsf	3,5	;RP0=1, select bank1
 10744  0043' 1303               	bcf	3,6	;RP1=0, select bank1
 10745  0044' 0800'              	movf	(sprintf@eexp+1)^(0+128),w
 10746  0045' 3A80               	xorlw	128
 10747  0046' 00FF               	movwf	btemp+1
 10748  0047' 3080               	movlw	128
 10749  0048' 027F               	subwf	btemp+1,w
 10750  0049' 1D03               	skipz
 10751  004A' 2800'              	goto	u5995
 10752  004B' 3002               	movlw	2
 10753  004C' 0200'              	subwf	sprintf@eexp^(0+128),w
 10754  004D'                    u5995:
 10755  004D' 1C03               	skipc
 10756  004E' 2800'              	goto	u5991
 10757  004F' 2800'              	goto	u5990
 10758  0050'                    u5991:
 10759  0050' 2800'              	goto	l3617
 10760  0051'                    u5990:
 10761  0051'                    l3603:
 10762                           
 10763                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
 10764  0051' 1683               	bsf	3,5	;RP0=1, select bank1
 10765  0052' 1303               	bcf	3,6	;RP1=0, select bank1
 10766  0053' 0800'              	movf	(sprintf@tmpval+3)^(0+128),w
 10767  0054' 0083'              	movwf	___flge@ff1+3
 10768  0055' 0800'              	movf	(sprintf@tmpval+2)^(0+128),w
 10769  0056' 0082'              	movwf	___flge@ff1+2
 10770  0057' 0800'              	movf	(sprintf@tmpval+1)^(0+128),w
 10771  0058' 0081'              	movwf	___flge@ff1+1
 10772  0059' 0800'              	movf	sprintf@tmpval^(0+128),w
 10773  005A' 0080'              	movwf	___flge@ff1
 10774  005B' 3040               	movlw	64
 10775  005C' 0087'              	movwf	___flge@ff2+3
 10776  005D' 3089               	movlw	137
 10777  005E' 0086'              	movwf	___flge@ff2+2
 10778  005F' 3070               	movlw	112
 10779  0060' 0085'              	movwf	___flge@ff2+1
 10780  0061' 305F               	movlw	95
 10781  0062' 0084'              	movwf	___flge@ff2
 10782  0063' 120A' 118A' 2000' 120A' 118A' 	fcall	___flge
 10783  0068' 1803               	btfsc	3,0
 10784  0069' 2800'              	goto	u6001
 10785  006A' 2800'              	goto	u6000
 10786  006B'                    u6001:
 10787  006B' 2800'              	goto	l3607
 10788  006C'                    u6000:
 10789  006C'                    l3605:
 10790                           
 10791                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
 10792  006C' 30F7               	movlw	247
 10793  006D' 1683               	bsf	3,5	;RP0=1, select bank1
 10794  006E' 1303               	bcf	3,6	;RP1=0, select bank1
 10795  006F' 0780'              	addwf	sprintf@eexp^(0+128),f
 10796  0070' 1803               	skipnc
 10797  0071' 0A80'              	incf	(sprintf@eexp+1)^(0+128),f
 10798  0072' 30FF               	movlw	255
 10799  0073' 0780'              	addwf	(sprintf@eexp+1)^(0+128),f
 10800                           
 10801                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1148:      }else{
 10802  0074' 2800'              	goto	l3609
 10803  0075'                    l3607:
 10804                           
 10805                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
 10806  0075' 30F8               	movlw	248
 10807  0076' 1683               	bsf	3,5	;RP0=1, select bank1
 10808  0077' 1303               	bcf	3,6	;RP1=0, select bank1
 10809  0078' 0780'              	addwf	sprintf@eexp^(0+128),f
 10810  0079' 1803               	skipnc
 10811  007A' 0A80'              	incf	(sprintf@eexp+1)^(0+128),f
 10812  007B' 30FF               	movlw	255
 10813  007C' 0780'              	addwf	(sprintf@eexp+1)^(0+128),f
 10814  007D'                    l3609:
 10815                           
 10816                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
 10817  007D' 0800'              	movf	sprintf@eexp^(0+128),w
 10818  007E' 120A' 118A' 2000' 120A' 118A' 	fcall	_scale
 10819  0083' 1283               	bcf	3,5	;RP0=0, select bank0
 10820  0084' 1303               	bcf	3,6	;RP1=0, select bank0
 10821  0085' 081D'              	movf	?_scale+3,w
 10822  0086' 1683               	bsf	3,5	;RP0=1, select bank1
 10823  0087' 1303               	bcf	3,6	;RP1=0, select bank1
 10824  0088' 0080'              	movwf	(sprintf@tmpval+3)^(0+128)
 10825  0089' 1283               	bcf	3,5	;RP0=0, select bank0
 10826  008A' 1303               	bcf	3,6	;RP1=0, select bank0
 10827  008B' 081C'              	movf	?_scale+2,w
 10828  008C' 1683               	bsf	3,5	;RP0=1, select bank1
 10829  008D' 1303               	bcf	3,6	;RP1=0, select bank1
 10830  008E' 0080'              	movwf	(sprintf@tmpval+2)^(0+128)
 10831  008F' 1283               	bcf	3,5	;RP0=0, select bank0
 10832  0090' 1303               	bcf	3,6	;RP1=0, select bank0
 10833  0091' 081B'              	movf	?_scale+1,w
 10834  0092' 1683               	bsf	3,5	;RP0=1, select bank1
 10835  0093' 1303               	bcf	3,6	;RP1=0, select bank1
 10836  0094' 0080'              	movwf	(sprintf@tmpval+1)^(0+128)
 10837  0095' 1283               	bcf	3,5	;RP0=0, select bank0
 10838  0096' 1303               	bcf	3,6	;RP1=0, select bank0
 10839  0097' 081A'              	movf	?_scale,w
 10840  0098' 1683               	bsf	3,5	;RP0=1, select bank1
 10841  0099' 1303               	bcf	3,6	;RP1=0, select bank1
 10842  009A' 0080'              	movwf	sprintf@tmpval^(0+128)
 10843  009B'                    l3611:
 10844  009B' 0800'              	movf	(sprintf@fval+3)^(0+128),w
 10845  009C' 0083'              	movwf	__div_to_l_@f1+3
 10846  009D' 0800'              	movf	(sprintf@fval+2)^(0+128),w
 10847  009E' 0082'              	movwf	__div_to_l_@f1+2
 10848  009F' 0800'              	movf	(sprintf@fval+1)^(0+128),w
 10849  00A0' 0081'              	movwf	__div_to_l_@f1+1
 10850  00A1' 0800'              	movf	sprintf@fval^(0+128),w
 10851  00A2' 0080'              	movwf	__div_to_l_@f1
 10852  00A3' 0800'              	movf	(sprintf@tmpval+3)^(0+128),w
 10853  00A4' 0087'              	movwf	__div_to_l_@f2+3
 10854  00A5' 0800'              	movf	(sprintf@tmpval+2)^(0+128),w
 10855  00A6' 0086'              	movwf	__div_to_l_@f2+2
 10856  00A7' 0800'              	movf	(sprintf@tmpval+1)^(0+128),w
 10857  00A8' 0085'              	movwf	__div_to_l_@f2+1
 10858  00A9' 0800'              	movf	sprintf@tmpval^(0+128),w
 10859  00AA' 0084'              	movwf	__div_to_l_@f2
 10860  00AB' 120A' 118A' 2000' 120A' 118A' 	fcall	__div_to_l_
 10861  00B0' 0803'              	movf	?__div_to_l_+3,w
 10862  00B1' 1683               	bsf	3,5	;RP0=1, select bank1
 10863  00B2' 1303               	bcf	3,6	;RP1=0, select bank1
 10864  00B3' 0080'              	movwf	(sprintf@val+3)^(0+128)
 10865  00B4' 0802'              	movf	?__div_to_l_+2,w
 10866  00B5' 0080'              	movwf	(sprintf@val+2)^(0+128)
 10867  00B6' 0801'              	movf	?__div_to_l_+1,w
 10868  00B7' 0080'              	movwf	(sprintf@val+1)^(0+128)
 10869  00B8' 0800'              	movf	?__div_to_l_,w
 10870  00B9' 0080'              	movwf	sprintf@val^(0+128)
 10871  00BA'                    l3615:
 10872                           
 10873                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
 10874  00BA' 3000               	movlw	0
 10875  00BB' 0080'              	movwf	(sprintf@fval+3)^(0+128)
 10876  00BC' 3000               	movlw	0
 10877  00BD' 0080'              	movwf	(sprintf@fval+2)^(0+128)
 10878  00BE' 3000               	movlw	0
 10879  00BF' 0080'              	movwf	(sprintf@fval+1)^(0+128)
 10880  00C0' 3000               	movlw	0
 10881  00C1' 0080'              	movwf	sprintf@fval^(0+128)
 10882                           
 10883                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
 10884  00C2' 2800'              	goto	l3621
 10885  00C3'                    l3617:
 10886                           
 10887                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
 10888  00C3' 1683               	bsf	3,5	;RP0=1, select bank1
 10889  00C4' 1303               	bcf	3,6	;RP1=0, select bank1
 10890  00C5' 0800'              	movf	(sprintf@fval+3)^(0+128),w
 10891  00C6' 1283               	bcf	3,5	;RP0=0, select bank0
 10892  00C7' 1303               	bcf	3,6	;RP1=0, select bank0
 10893  00C8' 00B0'              	movwf	___fltol@f1+3
 10894  00C9' 1683               	bsf	3,5	;RP0=1, select bank1
 10895  00CA' 1303               	bcf	3,6	;RP1=0, select bank1
 10896  00CB' 0800'              	movf	(sprintf@fval+2)^(0+128),w
 10897  00CC' 1283               	bcf	3,5	;RP0=0, select bank0
 10898  00CD' 1303               	bcf	3,6	;RP1=0, select bank0
 10899  00CE' 00AF'              	movwf	___fltol@f1+2
 10900  00CF' 1683               	bsf	3,5	;RP0=1, select bank1
 10901  00D0' 1303               	bcf	3,6	;RP1=0, select bank1
 10902  00D1' 0800'              	movf	(sprintf@fval+1)^(0+128),w
 10903  00D2' 1283               	bcf	3,5	;RP0=0, select bank0
 10904  00D3' 1303               	bcf	3,6	;RP1=0, select bank0
 10905  00D4' 00AE'              	movwf	___fltol@f1+1
 10906  00D5' 1683               	bsf	3,5	;RP0=1, select bank1
 10907  00D6' 1303               	bcf	3,6	;RP1=0, select bank1
 10908  00D7' 0800'              	movf	sprintf@fval^(0+128),w
 10909  00D8' 1283               	bcf	3,5	;RP0=0, select bank0
 10910  00D9' 1303               	bcf	3,6	;RP1=0, select bank0
 10911  00DA' 00AD'              	movwf	___fltol@f1
 10912  00DB' 120A' 118A' 2000' 120A' 118A' 	fcall	___fltol
 10913  00E0' 1283               	bcf	3,5	;RP0=0, select bank0
 10914  00E1' 1303               	bcf	3,6	;RP1=0, select bank0
 10915  00E2' 0830'              	movf	?___fltol+3,w
 10916  00E3' 1683               	bsf	3,5	;RP0=1, select bank1
 10917  00E4' 1303               	bcf	3,6	;RP1=0, select bank1
 10918  00E5' 0080'              	movwf	(sprintf@val+3)^(0+128)
 10919  00E6' 1283               	bcf	3,5	;RP0=0, select bank0
 10920  00E7' 1303               	bcf	3,6	;RP1=0, select bank0
 10921  00E8' 082F'              	movf	?___fltol+2,w
 10922  00E9' 1683               	bsf	3,5	;RP0=1, select bank1
 10923  00EA' 1303               	bcf	3,6	;RP1=0, select bank1
 10924  00EB' 0080'              	movwf	(sprintf@val+2)^(0+128)
 10925  00EC' 1283               	bcf	3,5	;RP0=0, select bank0
 10926  00ED' 1303               	bcf	3,6	;RP1=0, select bank0
 10927  00EE' 082E'              	movf	?___fltol+1,w
 10928  00EF' 1683               	bsf	3,5	;RP0=1, select bank1
 10929  00F0' 1303               	bcf	3,6	;RP1=0, select bank1
 10930  00F1' 0080'              	movwf	(sprintf@val+1)^(0+128)
 10931  00F2' 1283               	bcf	3,5	;RP0=0, select bank0
 10932  00F3' 1303               	bcf	3,6	;RP1=0, select bank0
 10933  00F4' 082D'              	movf	?___fltol,w
 10934  00F5' 1683               	bsf	3,5	;RP0=1, select bank1
 10935  00F6' 1303               	bcf	3,6	;RP1=0, select bank1
 10936  00F7' 0080'              	movwf	sprintf@val^(0+128)
 10937                           
 10938                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
 10939  00F8' 0800'              	movf	(sprintf@val+3)^(0+128),w
 10940  00F9' 0083'              	movwf	___xxtofl@val+3
 10941  00FA' 0800'              	movf	(sprintf@val+2)^(0+128),w
 10942  00FB' 0082'              	movwf	___xxtofl@val+2
 10943  00FC' 0800'              	movf	(sprintf@val+1)^(0+128),w
 10944  00FD' 0081'              	movwf	___xxtofl@val+1
 10945  00FE' 0800'              	movf	sprintf@val^(0+128),w
 10946  00FF' 0080'              	movwf	___xxtofl@val
 10947  0100' 3000               	movlw	0
 10948  0101' 120A' 118A' 2000' 120A' 118A' 	fcall	___xxtofl
 10949  0106' 0803'              	movf	?___xxtofl+3,w
 10950  0107' 1283               	bcf	3,5	;RP0=0, select bank0
 10951  0108' 1303               	bcf	3,6	;RP1=0, select bank0
 10952  0109' 00C5'              	movwf	___flsub@a+3
 10953  010A' 0802'              	movf	?___xxtofl+2,w
 10954  010B' 00C4'              	movwf	___flsub@a+2
 10955  010C' 0801'              	movf	?___xxtofl+1,w
 10956  010D' 00C3'              	movwf	___flsub@a+1
 10957  010E' 0800'              	movf	?___xxtofl,w
 10958  010F' 00C2'              	movwf	___flsub@a
 10959  0110' 1683               	bsf	3,5	;RP0=1, select bank1
 10960  0111' 1303               	bcf	3,6	;RP1=0, select bank1
 10961  0112' 0800'              	movf	(sprintf@fval+3)^(0+128),w
 10962  0113' 1283               	bcf	3,5	;RP0=0, select bank0
 10963  0114' 1303               	bcf	3,6	;RP1=0, select bank0
 10964  0115' 00C9'              	movwf	___flsub@b+3
 10965  0116' 1683               	bsf	3,5	;RP0=1, select bank1
 10966  0117' 1303               	bcf	3,6	;RP1=0, select bank1
 10967  0118' 0800'              	movf	(sprintf@fval+2)^(0+128),w
 10968  0119' 1283               	bcf	3,5	;RP0=0, select bank0
 10969  011A' 1303               	bcf	3,6	;RP1=0, select bank0
 10970  011B' 00C8'              	movwf	___flsub@b+2
 10971  011C' 1683               	bsf	3,5	;RP0=1, select bank1
 10972  011D' 1303               	bcf	3,6	;RP1=0, select bank1
 10973  011E' 0800'              	movf	(sprintf@fval+1)^(0+128),w
 10974  011F' 1283               	bcf	3,5	;RP0=0, select bank0
 10975  0120' 1303               	bcf	3,6	;RP1=0, select bank0
 10976  0121' 00C7'              	movwf	___flsub@b+1
 10977  0122' 1683               	bsf	3,5	;RP0=1, select bank1
 10978  0123' 1303               	bcf	3,6	;RP1=0, select bank1
 10979  0124' 0800'              	movf	sprintf@fval^(0+128),w
 10980  0125' 1283               	bcf	3,5	;RP0=0, select bank0
 10981  0126' 1303               	bcf	3,6	;RP1=0, select bank0
 10982  0127' 00C6'              	movwf	___flsub@b
 10983  0128' 120A' 118A' 2000' 120A' 118A' 	fcall	___flsub
 10984  012D' 1283               	bcf	3,5	;RP0=0, select bank0
 10985  012E' 1303               	bcf	3,6	;RP1=0, select bank0
 10986  012F' 0845'              	movf	?___flsub+3,w
 10987  0130' 1683               	bsf	3,5	;RP0=1, select bank1
 10988  0131' 1303               	bcf	3,6	;RP1=0, select bank1
 10989  0132' 0080'              	movwf	(sprintf@fval+3)^(0+128)
 10990  0133' 1283               	bcf	3,5	;RP0=0, select bank0
 10991  0134' 1303               	bcf	3,6	;RP1=0, select bank0
 10992  0135' 0844'              	movf	?___flsub+2,w
 10993  0136' 1683               	bsf	3,5	;RP0=1, select bank1
 10994  0137' 1303               	bcf	3,6	;RP1=0, select bank1
 10995  0138' 0080'              	movwf	(sprintf@fval+2)^(0+128)
 10996  0139' 1283               	bcf	3,5	;RP0=0, select bank0
 10997  013A' 1303               	bcf	3,6	;RP1=0, select bank0
 10998  013B' 0843'              	movf	?___flsub+1,w
 10999  013C' 1683               	bsf	3,5	;RP0=1, select bank1
 11000  013D' 1303               	bcf	3,6	;RP1=0, select bank1
 11001  013E' 0080'              	movwf	(sprintf@fval+1)^(0+128)
 11002  013F' 1283               	bcf	3,5	;RP0=0, select bank0
 11003  0140' 1303               	bcf	3,6	;RP1=0, select bank0
 11004  0141' 0842'              	movf	?___flsub,w
 11005  0142' 1683               	bsf	3,5	;RP0=1, select bank1
 11006  0143' 1303               	bcf	3,6	;RP1=0, select bank1
 11007  0144' 0080'              	movwf	sprintf@fval^(0+128)
 11008  0145'                    l3619:
 11009                           
 11010                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
 11011  0145' 0180'              	clrf	sprintf@eexp^(0+128)
 11012  0146' 0180'              	clrf	(sprintf@eexp+1)^(0+128)
 11013  0147'                    l3621:
 11014                           
 11015                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 11016  0147' 0180'              	clrf	sprintf@c^(0+128)
 11017  0148' 0A80'              	incf	sprintf@c^(0+128),f
 11018  0149'                    l3627:
 11019                           
 11020                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
 11021  0149' 0800'              	movf	sprintf@c^(0+128),w
 11022  014A' 0080'              	movwf	??_sprintf^(0+128)
 11023  014B' 3001               	movlw	1
 11024  014C'                    u6015:
 11025  014C' 1003               	clrc
 11026  014D' 0D80'              	rlf	??_sprintf^(0+128),f
 11027  014E' 3EFF               	addlw	-1
 11028  014F' 1D03               	skipz
 11029  0150' 2800'              	goto	u6015
 11030  0151' 1003               	clrc
 11031  0152' 0D00'              	rlf	??_sprintf^(0+128),w
 11032  0153' 3E00'              	addlw	low (_dpowers| (0+32768))
 11033  0154' 0084               	movwf	4
 11034  0155' 3000'              	movlw	high (_dpowers| (0+32768))
 11035  0156' 1803               	skipnc
 11036  0157' 3E01               	addlw	1
 11037  0158' 1283               	bcf	3,5	;RP0=0, select bank0
 11038  0159' 1303               	bcf	3,6	;RP1=0, select bank0
 11039  015A' 00FF               	movwf	btemp+1
 11040  015B' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
 11041  0160' 1683               	bsf	3,5	;RP0=1, select bank1
 11042  0161' 1303               	bcf	3,6	;RP1=0, select bank1
 11043  0162' 0080'              	movwf	(??_sprintf+1)^(0+128)
 11044  0163' 1283               	bcf	3,5	;RP0=0, select bank0
 11045  0164' 1303               	bcf	3,6	;RP1=0, select bank0
 11046  0165' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
 11047  016A' 1683               	bsf	3,5	;RP0=1, select bank1
 11048  016B' 1303               	bcf	3,6	;RP1=0, select bank1
 11049  016C' 0081'              	movwf	((??_sprintf+1)^(0+128)+1)
 11050  016D' 1283               	bcf	3,5	;RP0=0, select bank0
 11051  016E' 1303               	bcf	3,6	;RP1=0, select bank0
 11052  016F' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
 11053  0174' 1683               	bsf	3,5	;RP0=1, select bank1
 11054  0175' 1303               	bcf	3,6	;RP1=0, select bank1
 11055  0176' 0082'              	movwf	((??_sprintf+1)^(0+128)+2)
 11056  0177' 1283               	bcf	3,5	;RP0=0, select bank0
 11057  0178' 1303               	bcf	3,6	;RP1=0, select bank0
 11058  0179' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
 11059  017E' 1683               	bsf	3,5	;RP0=1, select bank1
 11060  017F' 1303               	bcf	3,6	;RP1=0, select bank1
 11061  0180' 0083'              	movwf	((??_sprintf+1)^(0+128)+3)
 11062  0181' 0800'              	movf	(??_sprintf+4)^(0+128),w
 11063  0182' 0200'              	subwf	(sprintf@val+3)^(0+128),w
 11064  0183' 1D03               	skipz
 11065  0184' 2800'              	goto	u6025
 11066  0185' 0800'              	movf	(??_sprintf+3)^(0+128),w
 11067  0186' 0200'              	subwf	(sprintf@val+2)^(0+128),w
 11068  0187' 1D03               	skipz
 11069  0188' 2800'              	goto	u6025
 11070  0189' 0800'              	movf	(??_sprintf+2)^(0+128),w
 11071  018A' 0200'              	subwf	(sprintf@val+1)^(0+128),w
 11072  018B' 1D03               	skipz
 11073  018C' 2800'              	goto	u6025
 11074  018D' 0800'              	movf	(??_sprintf+1)^(0+128),w
 11075  018E' 0200'              	subwf	sprintf@val^(0+128),w
 11076  018F'                    u6025:
 11077  018F' 1803               	skipnc
 11078  0190' 2800'              	goto	u6021
 11079  0191' 2800'              	goto	u6020
 11080  0192'                    u6021:
 11081  0192' 2800'              	goto	l3631
 11082  0193'                    u6020:
 11083  0193' 2800'              	goto	l3635
 11084  0194'                    l3631:
 11085  0194' 3001               	movlw	1
 11086  0195' 00FF               	movwf	btemp+1
 11087  0196' 087F               	movf	btemp+1,w
 11088  0197' 0780'              	addwf	sprintf@c^(0+128),f
 11089  0198'                    l3633:
 11090  0198' 300A               	movlw	10
 11091  0199' 0600'              	xorwf	sprintf@c^(0+128),w
 11092  019A' 1D03               	btfss	3,2
 11093  019B' 2800'              	goto	u6031
 11094  019C' 2800'              	goto	u6030
 11095  019D'                    u6031:
 11096  019D' 2800'              	goto	l3627
 11097  019E'                    u6030:
 11098  019E'                    l3635:
 11099                           
 11100                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1168:     width -
      +                          = prec + c + eexp;
 11101  019E' 0800'              	movf	sprintf@c^(0+128),w
 11102  019F' 0700'              	addwf	sprintf@prec^(0+128),w
 11103  01A0' 0080'              	movwf	??_sprintf^(0+128)
 11104  01A1' 0800'              	movf	(sprintf@prec+1)^(0+128),w
 11105  01A2' 1803               	skipnc
 11106  01A3' 0A00'              	incf	(sprintf@prec+1)^(0+128),w
 11107  01A4' 0081'              	movwf	(??_sprintf^(0+128)+1)
 11108  01A5' 0800'              	movf	sprintf@eexp^(0+128),w
 11109  01A6' 0700'              	addwf	??_sprintf^(0+128),w
 11110  01A7' 0080'              	movwf	(??_sprintf+2)^(0+128)
 11111  01A8' 0800'              	movf	(sprintf@eexp+1)^(0+128),w
 11112  01A9' 1803               	skipnc
 11113  01AA' 0A00'              	incf	(sprintf@eexp+1)^(0+128),w
 11114  01AB' 0700'              	addwf	(??_sprintf+1)^(0+128),w
 11115  01AC' 0080'              	movwf	(??_sprintf+3)^(0+128)
 11116  01AD' 0800'              	movf	(??_sprintf+2)^(0+128),w
 11117  01AE' 0280'              	subwf	sprintf@width^(0+128),f
 11118  01AF' 0800'              	movf	(??_sprintf+3)^(0+128),w
 11119  01B0' 1C03               	skipc
 11120  01B1' 0380'              	decf	(sprintf@width+1)^(0+128),f
 11121  01B2' 0280'              	subwf	(sprintf@width+1)^(0+128),f
 11122                           
 11123                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1169:     if(
 11124  01B3' 0800'              	movf	sprintf@prec^(0+128),w
 11125  01B4' 0400'              	iorwf	(sprintf@prec+1)^(0+128),w
 11126  01B5' 1903               	btfsc	3,2
 11127  01B6' 2800'              	goto	u6041
 11128  01B7' 2800'              	goto	u6040
 11129  01B8'                    u6041:
 11130  01B8' 2800'              	goto	l3639
 11131  01B9'                    u6040:
 11132  01B9'                    l3637:
 11133                           
 11134                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1174:      width-
      +                          -;
 11135  01B9' 30FF               	movlw	255
 11136  01BA' 0780'              	addwf	sprintf@width^(0+128),f
 11137  01BB' 1803               	skipnc
 11138  01BC' 0A80'              	incf	(sprintf@width+1)^(0+128),f
 11139  01BD' 30FF               	movlw	255
 11140  01BE' 0780'              	addwf	(sprintf@width+1)^(0+128),f
 11141  01BF'                    l3639:
 11142                           
 11143                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1175:     if(flag
      +                           & 0x03)
 11144  01BF' 3003               	movlw	3
 11145  01C0' 0500'              	andwf	sprintf@flag^(0+128),w
 11146  01C1' 0080'              	movwf	??_sprintf^(0+128)
 11147  01C2' 3000               	movlw	0
 11148  01C3' 0500'              	andwf	(sprintf@flag+1)^(0+128),w
 11149  01C4' 0080'              	movwf	(??_sprintf+1)^(0+128)
 11150  01C5' 0800'              	movf	??_sprintf^(0+128),w
 11151  01C6' 0401'              	iorwf	(??_sprintf^(0+128)+1),w
 11152  01C7' 1903               	btfsc	3,2
 11153  01C8' 2800'              	goto	u6051
 11154  01C9' 2800'              	goto	u6050
 11155  01CA'                    u6051:
 11156  01CA' 2800'              	goto	l3649
 11157  01CB'                    u6050:
 11158  01CB'                    l3641:
 11159                           
 11160                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1176:      width-
      +                          -;
 11161  01CB' 30FF               	movlw	255
 11162  01CC' 0780'              	addwf	sprintf@width^(0+128),f
 11163  01CD' 1803               	skipnc
 11164  01CE' 0A80'              	incf	(sprintf@width+1)^(0+128),f
 11165  01CF' 30FF               	movlw	255
 11166  01D0' 0780'              	addwf	(sprintf@width+1)^(0+128),f
 11167  01D1' 2800'              	goto	l3649
 11168  01D2'                    l3643:
 11169                           
 11170                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1207:       ((*sp
      +                          ++ = (' ')));
 11171  01D2' 1683               	bsf	3,5	;RP0=1, select bank1
 11172  01D3' 1303               	bcf	3,6	;RP1=0, select bank1
 11173  01D4' 0800'              	movf	sprintf@sp^(0+128),w
 11174  01D5' 0084               	movwf	4
 11175  01D6' 3020               	movlw	32
 11176  01D7' 1783               	bsf	3,7	;select IRP bank2
 11177  01D8' 0080               	movwf	0
 11178  01D9'                    l3645:
 11179  01D9' 3001               	movlw	1
 11180  01DA' 00FF               	movwf	btemp+1
 11181  01DB' 087F               	movf	btemp+1,w
 11182  01DC' 0780'              	addwf	sprintf@sp^(0+128),f
 11183  01DD' 2800'              	goto	l3641
 11184  01DE'                    l3649:
 11185                           
 11186                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1206:      while(
      +                          width > 0) {
 11187  01DE' 0800'              	movf	(sprintf@width+1)^(0+128),w
 11188  01DF' 3A80               	xorlw	128
 11189  01E0' 00FF               	movwf	btemp+1
 11190  01E1' 3080               	movlw	128
 11191  01E2' 027F               	subwf	btemp+1,w
 11192  01E3' 1D03               	skipz
 11193  01E4' 2800'              	goto	u6065
 11194  01E5' 3001               	movlw	1
 11195  01E6' 0200'              	subwf	sprintf@width^(0+128),w
 11196  01E7'                    u6065:
 11197  01E7' 1803               	skipnc
 11198  01E8' 2800'              	goto	u6061
 11199  01E9' 2800'              	goto	u6060
 11200  01EA'                    u6061:
 11201  01EA' 2800'              	goto	l3643
 11202  01EB'                    u6060:
 11203  01EB'                    l3651:
 11204                           
 11205                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1214:     if(flag
      +                           & 0x03)
 11206  01EB' 3003               	movlw	3
 11207  01EC' 1683               	bsf	3,5	;RP0=1, select bank1
 11208  01ED' 1303               	bcf	3,6	;RP1=0, select bank1
 11209  01EE' 0500'              	andwf	sprintf@flag^(0+128),w
 11210  01EF' 0080'              	movwf	??_sprintf^(0+128)
 11211  01F0' 3000               	movlw	0
 11212  01F1' 0500'              	andwf	(sprintf@flag+1)^(0+128),w
 11213  01F2' 0080'              	movwf	(??_sprintf+1)^(0+128)
 11214  01F3' 0800'              	movf	??_sprintf^(0+128),w
 11215  01F4' 0401'              	iorwf	(??_sprintf^(0+128)+1),w
 11216  01F5' 1903               	btfsc	3,2
 11217  01F6' 2800'              	goto	u6071
 11218  01F7' 2800'              	goto	u6070
 11219  01F8'                    u6071:
 11220  01F8' 2800'              	goto	l3665
 11221  01F9'                    u6070:
 11222  01F9'                    l3653:
 11223                           
 11224                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
 11225  01F9' 0800'              	movf	sprintf@sp^(0+128),w
 11226  01FA' 0084               	movwf	4
 11227  01FB' 302D               	movlw	45
 11228  01FC' 1783               	bsf	3,7	;select IRP bank2
 11229  01FD' 0080               	movwf	0
 11230  01FE'                    l3655:
 11231  01FE' 3001               	movlw	1
 11232  01FF' 00FF               	movwf	btemp+1
 11233  0200' 087F               	movf	btemp+1,w
 11234  0201' 0780'              	addwf	sprintf@sp^(0+128),f
 11235  0202' 2800'              	goto	l3665
 11236  0203'                    l3657:
 11237                           
 11238                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
 11239  0203' 0800'              	movf	sprintf@c^(0+128),w
 11240  0204' 0080'              	movwf	??_sprintf^(0+128)
 11241  0205' 3001               	movlw	1
 11242  0206'                    u6085:
 11243  0206' 1003               	clrc
 11244  0207' 0D80'              	rlf	??_sprintf^(0+128),f
 11245  0208' 3EFF               	addlw	-1
 11246  0209' 1D03               	skipz
 11247  020A' 2800'              	goto	u6085
 11248  020B' 1003               	clrc
 11249  020C' 0D00'              	rlf	??_sprintf^(0+128),w
 11250  020D' 3E00'              	addlw	low (_dpowers| (0+32768))
 11251  020E' 0084               	movwf	4
 11252  020F' 3000'              	movlw	high (_dpowers| (0+32768))
 11253  0210' 1803               	skipnc
 11254  0211' 3E01               	addlw	1
 11255  0212' 1283               	bcf	3,5	;RP0=0, select bank0
 11256  0213' 1303               	bcf	3,6	;RP1=0, select bank0
 11257  0214' 00FF               	movwf	btemp+1
 11258  0215' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
 11259  021A' 0080'              	movwf	___lldiv@divisor
 11260  021B' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
 11261  0220' 0081'              	movwf	___lldiv@divisor+1
 11262  0221' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
 11263  0226' 0082'              	movwf	___lldiv@divisor+2
 11264  0227' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
 11265  022C' 0083'              	movwf	___lldiv@divisor+3
 11266  022D' 1683               	bsf	3,5	;RP0=1, select bank1
 11267  022E' 1303               	bcf	3,6	;RP1=0, select bank1
 11268  022F' 0800'              	movf	(sprintf@val+3)^(0+128),w
 11269  0230' 0087'              	movwf	___lldiv@dividend+3
 11270  0231' 0800'              	movf	(sprintf@val+2)^(0+128),w
 11271  0232' 0086'              	movwf	___lldiv@dividend+2
 11272  0233' 0800'              	movf	(sprintf@val+1)^(0+128),w
 11273  0234' 0085'              	movwf	___lldiv@dividend+1
 11274  0235' 0800'              	movf	sprintf@val^(0+128),w
 11275  0236' 0084'              	movwf	___lldiv@dividend
 11276  0237' 120A' 118A' 2000' 120A' 118A' 	fcall	___lldiv
 11277  023C' 0803'              	movf	?___lldiv+3,w
 11278  023D' 1683               	bsf	3,5	;RP0=1, select bank1
 11279  023E' 1303               	bcf	3,6	;RP1=0, select bank1
 11280  023F' 0080'              	movwf	(sprintf@tmpval+3)^(0+128)
 11281  0240' 0802'              	movf	?___lldiv+2,w
 11282  0241' 0080'              	movwf	(sprintf@tmpval+2)^(0+128)
 11283  0242' 0801'              	movf	?___lldiv+1,w
 11284  0243' 0080'              	movwf	(sprintf@tmpval+1)^(0+128)
 11285  0244' 0800'              	movf	?___lldiv,w
 11286  0245' 0080'              	movwf	sprintf@tmpval^(0+128)
 11287  0246'                    l3659:
 11288                           
 11289                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
 11290  0246' 3000               	movlw	0
 11291  0247' 1283               	bcf	3,5	;RP0=0, select bank0
 11292  0248' 1303               	bcf	3,6	;RP1=0, select bank0
 11293  0249' 0083'              	movwf	___llmod@divisor+3
 11294  024A' 3000               	movlw	0
 11295  024B' 0082'              	movwf	___llmod@divisor+2
 11296  024C' 3000               	movlw	0
 11297  024D' 0081'              	movwf	___llmod@divisor+1
 11298  024E' 300A               	movlw	10
 11299  024F' 0080'              	movwf	___llmod@divisor
 11300  0250' 1683               	bsf	3,5	;RP0=1, select bank1
 11301  0251' 1303               	bcf	3,6	;RP1=0, select bank1
 11302  0252' 0800'              	movf	(sprintf@tmpval+3)^(0+128),w
 11303  0253' 1283               	bcf	3,5	;RP0=0, select bank0
 11304  0254' 1303               	bcf	3,6	;RP1=0, select bank0
 11305  0255' 0087'              	movwf	___llmod@dividend+3
 11306  0256' 1683               	bsf	3,5	;RP0=1, select bank1
 11307  0257' 1303               	bcf	3,6	;RP1=0, select bank1
 11308  0258' 0800'              	movf	(sprintf@tmpval+2)^(0+128),w
 11309  0259' 1283               	bcf	3,5	;RP0=0, select bank0
 11310  025A' 1303               	bcf	3,6	;RP1=0, select bank0
 11311  025B' 0086'              	movwf	___llmod@dividend+2
 11312  025C' 1683               	bsf	3,5	;RP0=1, select bank1
 11313  025D' 1303               	bcf	3,6	;RP1=0, select bank1
 11314  025E' 0800'              	movf	(sprintf@tmpval+1)^(0+128),w
 11315  025F' 1283               	bcf	3,5	;RP0=0, select bank0
 11316  0260' 1303               	bcf	3,6	;RP1=0, select bank0
 11317  0261' 0085'              	movwf	___llmod@dividend+1
 11318  0262' 1683               	bsf	3,5	;RP0=1, select bank1
 11319  0263' 1303               	bcf	3,6	;RP1=0, select bank1
 11320  0264' 0800'              	movf	sprintf@tmpval^(0+128),w
 11321  0265' 1283               	bcf	3,5	;RP0=0, select bank0
 11322  0266' 1303               	bcf	3,6	;RP1=0, select bank0
 11323  0267' 0084'              	movwf	___llmod@dividend
 11324  0268' 120A' 118A' 2000' 120A' 118A' 	fcall	___llmod
 11325  026D' 1283               	bcf	3,5	;RP0=0, select bank0
 11326  026E' 1303               	bcf	3,6	;RP1=0, select bank0
 11327  026F' 0803'              	movf	?___llmod+3,w
 11328  0270' 1683               	bsf	3,5	;RP0=1, select bank1
 11329  0271' 1303               	bcf	3,6	;RP1=0, select bank1
 11330  0272' 0080'              	movwf	(sprintf@tmpval+3)^(0+128)
 11331  0273' 1283               	bcf	3,5	;RP0=0, select bank0
 11332  0274' 1303               	bcf	3,6	;RP1=0, select bank0
 11333  0275' 0802'              	movf	?___llmod+2,w
 11334  0276' 1683               	bsf	3,5	;RP0=1, select bank1
 11335  0277' 1303               	bcf	3,6	;RP1=0, select bank1
 11336  0278' 0080'              	movwf	(sprintf@tmpval+2)^(0+128)
 11337  0279' 1283               	bcf	3,5	;RP0=0, select bank0
 11338  027A' 1303               	bcf	3,6	;RP1=0, select bank0
 11339  027B' 0801'              	movf	?___llmod+1,w
 11340  027C' 1683               	bsf	3,5	;RP0=1, select bank1
 11341  027D' 1303               	bcf	3,6	;RP1=0, select bank1
 11342  027E' 0080'              	movwf	(sprintf@tmpval+1)^(0+128)
 11343  027F' 1283               	bcf	3,5	;RP0=0, select bank0
 11344  0280' 1303               	bcf	3,6	;RP1=0, select bank0
 11345  0281' 0800'              	movf	?___llmod,w
 11346  0282' 1683               	bsf	3,5	;RP0=1, select bank1
 11347  0283' 1303               	bcf	3,6	;RP1=0, select bank1
 11348  0284' 0080'              	movwf	sprintf@tmpval^(0+128)
 11349  0285'                    l3661:
 11350                           
 11351                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
 11352  0285' 0800'              	movf	sprintf@sp^(0+128),w
 11353  0286' 0084               	movwf	4
 11354  0287' 0800'              	movf	sprintf@tmpval^(0+128),w
 11355  0288' 3E30               	addlw	48
 11356  0289' 1783               	bsf	3,7	;select IRP bank2
 11357  028A' 0080               	movwf	0
 11358  028B' 2800'              	goto	l3655
 11359  028C'                    l3665:
 11360                           
 11361                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
 11362  028C' 3001               	movlw	1
 11363  028D' 0280'              	subwf	sprintf@c^(0+128),f
 11364  028E' 0A00'              	incf	sprintf@c^(0+128),w
 11365  028F' 1D03               	btfss	3,2
 11366  0290' 2800'              	goto	u6091
 11367  0291' 2800'              	goto	u6090
 11368  0292'                    u6091:
 11369  0292' 2800'              	goto	l3657
 11370  0293'                    u6090:
 11371  0293' 2800'              	goto	l3673
 11372  0294'                    l3667:
 11373                           
 11374                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
 11375  0294' 1683               	bsf	3,5	;RP0=1, select bank1
 11376  0295' 1303               	bcf	3,6	;RP1=0, select bank1
 11377  0296' 0800'              	movf	sprintf@sp^(0+128),w
 11378  0297' 0084               	movwf	4
 11379  0298' 3030               	movlw	48
 11380  0299' 1783               	bsf	3,7	;select IRP bank2
 11381  029A' 0080               	movwf	0
 11382  029B'                    l3669:
 11383  029B' 3001               	movlw	1
 11384  029C' 00FF               	movwf	btemp+1
 11385  029D' 087F               	movf	btemp+1,w
 11386  029E' 0780'              	addwf	sprintf@sp^(0+128),f
 11387  029F'                    l3671:
 11388                           
 11389                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
 11390  029F' 30FF               	movlw	255
 11391  02A0' 0780'              	addwf	sprintf@eexp^(0+128),f
 11392  02A1' 1803               	skipnc
 11393  02A2' 0A80'              	incf	(sprintf@eexp+1)^(0+128),f
 11394  02A3' 30FF               	movlw	255
 11395  02A4' 0780'              	addwf	(sprintf@eexp+1)^(0+128),f
 11396  02A5'                    l3673:
 11397                           
 11398                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
 11399  02A5' 0800'              	movf	(sprintf@eexp+1)^(0+128),w
 11400  02A6' 3A80               	xorlw	128
 11401  02A7' 00FF               	movwf	btemp+1
 11402  02A8' 3080               	movlw	128
 11403  02A9' 027F               	subwf	btemp+1,w
 11404  02AA' 1D03               	skipz
 11405  02AB' 2800'              	goto	u6105
 11406  02AC' 3001               	movlw	1
 11407  02AD' 0200'              	subwf	sprintf@eexp^(0+128),w
 11408  02AE'                    u6105:
 11409  02AE' 1803               	skipnc
 11410  02AF' 2800'              	goto	u6101
 11411  02B0' 2800'              	goto	u6100
 11412  02B1'                    u6101:
 11413  02B1' 2800'              	goto	l3667
 11414  02B2'                    u6100:
 11415  02B2'                    l3675:
 11416                           
 11417                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 11418  02B2' 1683               	bsf	3,5	;RP0=1, select bank1
 11419  02B3' 1303               	bcf	3,6	;RP1=0, select bank1
 11420  02B4' 0800'              	movf	(sprintf@prec+1)^(0+128),w
 11421  02B5' 3A80               	xorlw	128
 11422  02B6' 00FF               	movwf	btemp+1
 11423  02B7' 3080               	movlw	128
 11424  02B8' 027F               	subwf	btemp+1,w
 11425  02B9' 1D03               	skipz
 11426  02BA' 2800'              	goto	u6115
 11427  02BB' 3009               	movlw	9
 11428  02BC' 0200'              	subwf	sprintf@prec^(0+128),w
 11429  02BD'                    u6115:
 11430  02BD' 1C03               	skipc
 11431  02BE' 2800'              	goto	u6111
 11432  02BF' 2800'              	goto	u6110
 11433  02C0'                    u6111:
 11434  02C0' 2800'              	goto	l3679
 11435  02C1'                    u6110:
 11436  02C1'                    l3677:
 11437                           
 11438                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
 11439  02C1' 3008               	movlw	8
 11440  02C2' 1683               	bsf	3,5	;RP0=1, select bank1
 11441  02C3' 1303               	bcf	3,6	;RP1=0, select bank1
 11442  02C4' 0080'              	movwf	sprintf@c^(0+128)
 11443  02C5' 2800'              	goto	l342
 11444  02C6'                    l3679:
 11445                           
 11446                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
 11447  02C6' 1683               	bsf	3,5	;RP0=1, select bank1
 11448  02C7' 1303               	bcf	3,6	;RP1=0, select bank1
 11449  02C8' 0800'              	movf	sprintf@prec^(0+128),w
 11450  02C9' 0080'              	movwf	sprintf@c^(0+128)
 11451  02CA'                    l342:
 11452                           
 11453                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
 11454  02CA' 0800'              	movf	sprintf@c^(0+128),w
 11455  02CB' 0080'              	movwf	??_sprintf^(0+128)
 11456  02CC' 0181'              	clrf	(??_sprintf^(0+128)+1)
 11457  02CD' 0800'              	movf	??_sprintf^(0+128),w
 11458  02CE' 0280'              	subwf	sprintf@prec^(0+128),f
 11459  02CF' 0800'              	movf	(??_sprintf+1)^(0+128),w
 11460  02D0' 1C03               	skipc
 11461  02D1' 0380'              	decf	(sprintf@prec+1)^(0+128),f
 11462  02D2' 0280'              	subwf	(sprintf@prec+1)^(0+128),f
 11463  02D3'                    l3681:
 11464                           
 11465                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1245:    if(c)
 11466  02D3' 0800'              	movf	sprintf@c^(0+128),w
 11467  02D4' 1903               	btfsc	3,2
 11468  02D5' 2800'              	goto	u6121
 11469  02D6' 2800'              	goto	u6120
 11470  02D7'                    u6121:
 11471  02D7' 2800'              	goto	l3687
 11472  02D8'                    u6120:
 11473  02D8'                    l3683:
 11474                           
 11475                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
 11476  02D8' 0800'              	movf	sprintf@sp^(0+128),w
 11477  02D9' 0084               	movwf	4
 11478  02DA' 302E               	movlw	46
 11479  02DB' 1783               	bsf	3,7	;select IRP bank2
 11480  02DC' 0080               	movwf	0
 11481  02DD'                    l3685:
 11482  02DD' 3001               	movlw	1
 11483  02DE' 00FF               	movwf	btemp+1
 11484  02DF' 087F               	movf	btemp+1,w
 11485  02E0' 0780'              	addwf	sprintf@sp^(0+128),f
 11486  02E1'                    l3687:
 11487                           
 11488                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
 11489  02E1' 0800'              	movf	sprintf@c^(0+128),w
 11490  02E2' 120A' 118A' 2000' 120A' 118A' 	fcall	_scale
 11491  02E7' 1283               	bcf	3,5	;RP0=0, select bank0
 11492  02E8' 1303               	bcf	3,6	;RP1=0, select bank0
 11493  02E9' 081D'              	movf	?_scale+3,w
 11494  02EA' 1683               	bsf	3,5	;RP0=1, select bank1
 11495  02EB' 1303               	bcf	3,6	;RP1=0, select bank1
 11496  02EC' 0080'              	movwf	(_sprintf$874+3)^(0+128)
 11497  02ED' 1283               	bcf	3,5	;RP0=0, select bank0
 11498  02EE' 1303               	bcf	3,6	;RP1=0, select bank0
 11499  02EF' 081C'              	movf	?_scale+2,w
 11500  02F0' 1683               	bsf	3,5	;RP0=1, select bank1
 11501  02F1' 1303               	bcf	3,6	;RP1=0, select bank1
 11502  02F2' 0080'              	movwf	(_sprintf$874+2)^(0+128)
 11503  02F3' 1283               	bcf	3,5	;RP0=0, select bank0
 11504  02F4' 1303               	bcf	3,6	;RP1=0, select bank0
 11505  02F5' 081B'              	movf	?_scale+1,w
 11506  02F6' 1683               	bsf	3,5	;RP0=1, select bank1
 11507  02F7' 1303               	bcf	3,6	;RP1=0, select bank1
 11508  02F8' 0080'              	movwf	(_sprintf$874+1)^(0+128)
 11509  02F9' 1283               	bcf	3,5	;RP0=0, select bank0
 11510  02FA' 1303               	bcf	3,6	;RP1=0, select bank0
 11511  02FB' 081A'              	movf	?_scale,w
 11512  02FC' 1683               	bsf	3,5	;RP0=1, select bank1
 11513  02FD' 1303               	bcf	3,6	;RP1=0, select bank1
 11514  02FE' 0080'              	movwf	_sprintf$874^(0+128)
 11515  02FF'                    l3689:
 11516                           
 11517                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
 11518  02FF' 0800'              	movf	(_sprintf$874+3)^(0+128),w
 11519  0300' 1283               	bcf	3,5	;RP0=0, select bank0
 11520  0301' 1303               	bcf	3,6	;RP1=0, select bank0
 11521  0302' 0087'              	movwf	___flmul@a+3
 11522  0303' 1683               	bsf	3,5	;RP0=1, select bank1
 11523  0304' 1303               	bcf	3,6	;RP1=0, select bank1
 11524  0305' 0800'              	movf	(_sprintf$874+2)^(0+128),w
 11525  0306' 1283               	bcf	3,5	;RP0=0, select bank0
 11526  0307' 1303               	bcf	3,6	;RP1=0, select bank0
 11527  0308' 0086'              	movwf	___flmul@a+2
 11528  0309' 1683               	bsf	3,5	;RP0=1, select bank1
 11529  030A' 1303               	bcf	3,6	;RP1=0, select bank1
 11530  030B' 0800'              	movf	(_sprintf$874+1)^(0+128),w
 11531  030C' 1283               	bcf	3,5	;RP0=0, select bank0
 11532  030D' 1303               	bcf	3,6	;RP1=0, select bank0
 11533  030E' 0085'              	movwf	___flmul@a+1
 11534  030F' 1683               	bsf	3,5	;RP0=1, select bank1
 11535  0310' 1303               	bcf	3,6	;RP1=0, select bank1
 11536  0311' 0800'              	movf	_sprintf$874^(0+128),w
 11537  0312' 1283               	bcf	3,5	;RP0=0, select bank0
 11538  0313' 1303               	bcf	3,6	;RP1=0, select bank0
 11539  0314' 0084'              	movwf	___flmul@a
 11540  0315' 1683               	bsf	3,5	;RP0=1, select bank1
 11541  0316' 1303               	bcf	3,6	;RP1=0, select bank1
 11542  0317' 0800'              	movf	(sprintf@fval+3)^(0+128),w
 11543  0318' 1283               	bcf	3,5	;RP0=0, select bank0
 11544  0319' 1303               	bcf	3,6	;RP1=0, select bank0
 11545  031A' 0083'              	movwf	___flmul@b+3
 11546  031B' 1683               	bsf	3,5	;RP0=1, select bank1
 11547  031C' 1303               	bcf	3,6	;RP1=0, select bank1
 11548  031D' 0800'              	movf	(sprintf@fval+2)^(0+128),w
 11549  031E' 1283               	bcf	3,5	;RP0=0, select bank0
 11550  031F' 1303               	bcf	3,6	;RP1=0, select bank0
 11551  0320' 0082'              	movwf	___flmul@b+2
 11552  0321' 1683               	bsf	3,5	;RP0=1, select bank1
 11553  0322' 1303               	bcf	3,6	;RP1=0, select bank1
 11554  0323' 0800'              	movf	(sprintf@fval+1)^(0+128),w
 11555  0324' 1283               	bcf	3,5	;RP0=0, select bank0
 11556  0325' 1303               	bcf	3,6	;RP1=0, select bank0
 11557  0326' 0081'              	movwf	___flmul@b+1
 11558  0327' 1683               	bsf	3,5	;RP0=1, select bank1
 11559  0328' 1303               	bcf	3,6	;RP1=0, select bank1
 11560  0329' 0800'              	movf	sprintf@fval^(0+128),w
 11561  032A' 1283               	bcf	3,5	;RP0=0, select bank0
 11562  032B' 1303               	bcf	3,6	;RP1=0, select bank0
 11563  032C' 0080'              	movwf	___flmul@b
 11564  032D' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
 11565  0332' 1283               	bcf	3,5	;RP0=0, select bank0
 11566  0333' 1303               	bcf	3,6	;RP1=0, select bank0
 11567  0334' 0803'              	movf	?___flmul+3,w
 11568  0335' 00B0'              	movwf	___fltol@f1+3
 11569  0336' 0802'              	movf	?___flmul+2,w
 11570  0337' 00AF'              	movwf	___fltol@f1+2
 11571  0338' 0801'              	movf	?___flmul+1,w
 11572  0339' 00AE'              	movwf	___fltol@f1+1
 11573  033A' 0800'              	movf	?___flmul,w
 11574  033B' 00AD'              	movwf	___fltol@f1
 11575  033C' 120A' 118A' 2000' 120A' 118A' 	fcall	___fltol
 11576  0341' 1283               	bcf	3,5	;RP0=0, select bank0
 11577  0342' 1303               	bcf	3,6	;RP1=0, select bank0
 11578  0343' 0830'              	movf	?___fltol+3,w
 11579  0344' 1683               	bsf	3,5	;RP0=1, select bank1
 11580  0345' 1303               	bcf	3,6	;RP1=0, select bank1
 11581  0346' 0080'              	movwf	(sprintf@val+3)^(0+128)
 11582  0347' 1283               	bcf	3,5	;RP0=0, select bank0
 11583  0348' 1303               	bcf	3,6	;RP1=0, select bank0
 11584  0349' 082F'              	movf	?___fltol+2,w
 11585  034A' 1683               	bsf	3,5	;RP0=1, select bank1
 11586  034B' 1303               	bcf	3,6	;RP1=0, select bank1
 11587  034C' 0080'              	movwf	(sprintf@val+2)^(0+128)
 11588  034D' 1283               	bcf	3,5	;RP0=0, select bank0
 11589  034E' 1303               	bcf	3,6	;RP1=0, select bank0
 11590  034F' 082E'              	movf	?___fltol+1,w
 11591  0350' 1683               	bsf	3,5	;RP0=1, select bank1
 11592  0351' 1303               	bcf	3,6	;RP1=0, select bank1
 11593  0352' 0080'              	movwf	(sprintf@val+1)^(0+128)
 11594  0353' 1283               	bcf	3,5	;RP0=0, select bank0
 11595  0354' 1303               	bcf	3,6	;RP1=0, select bank0
 11596  0355' 082D'              	movf	?___fltol,w
 11597  0356' 1683               	bsf	3,5	;RP0=1, select bank1
 11598  0357' 1303               	bcf	3,6	;RP1=0, select bank1
 11599  0358' 0080'              	movwf	sprintf@val^(0+128)
 11600                           
 11601                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 11602  0359' 2800'              	goto	l3701
 11603  035A'                    l3691:
 11604                           
 11605                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
 11606  035A' 0800'              	movf	sprintf@c^(0+128),w
 11607  035B' 0080'              	movwf	??_sprintf^(0+128)
 11608  035C' 3001               	movlw	1
 11609  035D'                    u6135:
 11610  035D' 1003               	clrc
 11611  035E' 0D80'              	rlf	??_sprintf^(0+128),f
 11612  035F' 3EFF               	addlw	-1
 11613  0360' 1D03               	skipz
 11614  0361' 2800'              	goto	u6135
 11615  0362' 1003               	clrc
 11616  0363' 0D00'              	rlf	??_sprintf^(0+128),w
 11617  0364' 3E00'              	addlw	low (_dpowers| (0+32768))
 11618  0365' 0084               	movwf	4
 11619  0366' 3000'              	movlw	high (_dpowers| (0+32768))
 11620  0367' 1803               	skipnc
 11621  0368' 3E01               	addlw	1
 11622  0369' 1283               	bcf	3,5	;RP0=0, select bank0
 11623  036A' 1303               	bcf	3,6	;RP1=0, select bank0
 11624  036B' 00FF               	movwf	btemp+1
 11625  036C' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
 11626  0371' 0080'              	movwf	___lldiv@divisor
 11627  0372' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
 11628  0377' 0081'              	movwf	___lldiv@divisor+1
 11629  0378' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
 11630  037D' 0082'              	movwf	___lldiv@divisor+2
 11631  037E' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
 11632  0383' 0083'              	movwf	___lldiv@divisor+3
 11633  0384' 1683               	bsf	3,5	;RP0=1, select bank1
 11634  0385' 1303               	bcf	3,6	;RP1=0, select bank1
 11635  0386' 0800'              	movf	(sprintf@val+3)^(0+128),w
 11636  0387' 0087'              	movwf	___lldiv@dividend+3
 11637  0388' 0800'              	movf	(sprintf@val+2)^(0+128),w
 11638  0389' 0086'              	movwf	___lldiv@dividend+2
 11639  038A' 0800'              	movf	(sprintf@val+1)^(0+128),w
 11640  038B' 0085'              	movwf	___lldiv@dividend+1
 11641  038C' 0800'              	movf	sprintf@val^(0+128),w
 11642  038D' 0084'              	movwf	___lldiv@dividend
 11643  038E' 120A' 118A' 2000' 120A' 118A' 	fcall	___lldiv
 11644  0393' 0803'              	movf	?___lldiv+3,w
 11645  0394' 1683               	bsf	3,5	;RP0=1, select bank1
 11646  0395' 1303               	bcf	3,6	;RP1=0, select bank1
 11647  0396' 0080'              	movwf	(sprintf@tmpval+3)^(0+128)
 11648  0397' 0802'              	movf	?___lldiv+2,w
 11649  0398' 0080'              	movwf	(sprintf@tmpval+2)^(0+128)
 11650  0399' 0801'              	movf	?___lldiv+1,w
 11651  039A' 0080'              	movwf	(sprintf@tmpval+1)^(0+128)
 11652  039B' 0800'              	movf	?___lldiv,w
 11653  039C' 0080'              	movwf	sprintf@tmpval^(0+128)
 11654  039D'                    l3693:
 11655                           
 11656                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
 11657  039D' 3000               	movlw	0
 11658  039E' 1283               	bcf	3,5	;RP0=0, select bank0
 11659  039F' 1303               	bcf	3,6	;RP1=0, select bank0
 11660  03A0' 0083'              	movwf	___llmod@divisor+3
 11661  03A1' 3000               	movlw	0
 11662  03A2' 0082'              	movwf	___llmod@divisor+2
 11663  03A3' 3000               	movlw	0
 11664  03A4' 0081'              	movwf	___llmod@divisor+1
 11665  03A5' 300A               	movlw	10
 11666  03A6' 0080'              	movwf	___llmod@divisor
 11667  03A7' 1683               	bsf	3,5	;RP0=1, select bank1
 11668  03A8' 1303               	bcf	3,6	;RP1=0, select bank1
 11669  03A9' 0800'              	movf	(sprintf@tmpval+3)^(0+128),w
 11670  03AA' 1283               	bcf	3,5	;RP0=0, select bank0
 11671  03AB' 1303               	bcf	3,6	;RP1=0, select bank0
 11672  03AC' 0087'              	movwf	___llmod@dividend+3
 11673  03AD' 1683               	bsf	3,5	;RP0=1, select bank1
 11674  03AE' 1303               	bcf	3,6	;RP1=0, select bank1
 11675  03AF' 0800'              	movf	(sprintf@tmpval+2)^(0+128),w
 11676  03B0' 1283               	bcf	3,5	;RP0=0, select bank0
 11677  03B1' 1303               	bcf	3,6	;RP1=0, select bank0
 11678  03B2' 0086'              	movwf	___llmod@dividend+2
 11679  03B3' 1683               	bsf	3,5	;RP0=1, select bank1
 11680  03B4' 1303               	bcf	3,6	;RP1=0, select bank1
 11681  03B5' 0800'              	movf	(sprintf@tmpval+1)^(0+128),w
 11682  03B6' 1283               	bcf	3,5	;RP0=0, select bank0
 11683  03B7' 1303               	bcf	3,6	;RP1=0, select bank0
 11684  03B8' 0085'              	movwf	___llmod@dividend+1
 11685  03B9' 1683               	bsf	3,5	;RP0=1, select bank1
 11686  03BA' 1303               	bcf	3,6	;RP1=0, select bank1
 11687  03BB' 0800'              	movf	sprintf@tmpval^(0+128),w
 11688  03BC' 1283               	bcf	3,5	;RP0=0, select bank0
 11689  03BD' 1303               	bcf	3,6	;RP1=0, select bank0
 11690  03BE' 0084'              	movwf	___llmod@dividend
 11691  03BF' 120A' 118A' 2000' 120A' 118A' 	fcall	___llmod
 11692  03C4' 1283               	bcf	3,5	;RP0=0, select bank0
 11693  03C5' 1303               	bcf	3,6	;RP1=0, select bank0
 11694  03C6' 0803'              	movf	?___llmod+3,w
 11695  03C7' 1683               	bsf	3,5	;RP0=1, select bank1
 11696  03C8' 1303               	bcf	3,6	;RP1=0, select bank1
 11697  03C9' 0080'              	movwf	(sprintf@tmpval+3)^(0+128)
 11698  03CA' 1283               	bcf	3,5	;RP0=0, select bank0
 11699  03CB' 1303               	bcf	3,6	;RP1=0, select bank0
 11700  03CC' 0802'              	movf	?___llmod+2,w
 11701  03CD' 1683               	bsf	3,5	;RP0=1, select bank1
 11702  03CE' 1303               	bcf	3,6	;RP1=0, select bank1
 11703  03CF' 0080'              	movwf	(sprintf@tmpval+2)^(0+128)
 11704  03D0' 1283               	bcf	3,5	;RP0=0, select bank0
 11705  03D1' 1303               	bcf	3,6	;RP1=0, select bank0
 11706  03D2' 0801'              	movf	?___llmod+1,w
 11707  03D3' 1683               	bsf	3,5	;RP0=1, select bank1
 11708  03D4' 1303               	bcf	3,6	;RP1=0, select bank1
 11709  03D5' 0080'              	movwf	(sprintf@tmpval+1)^(0+128)
 11710  03D6' 1283               	bcf	3,5	;RP0=0, select bank0
 11711  03D7' 1303               	bcf	3,6	;RP1=0, select bank0
 11712  03D8' 0800'              	movf	?___llmod,w
 11713  03D9' 1683               	bsf	3,5	;RP0=1, select bank1
 11714  03DA' 1303               	bcf	3,6	;RP1=0, select bank1
 11715  03DB' 0080'              	movwf	sprintf@tmpval^(0+128)
 11716  03DC'                    l3695:
 11717                           
 11718                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
 11719  03DC' 0800'              	movf	sprintf@sp^(0+128),w
 11720  03DD' 0084               	movwf	4
 11721  03DE' 0800'              	movf	sprintf@tmpval^(0+128),w
 11722  03DF' 3E30               	addlw	48
 11723  03E0' 1783               	bsf	3,7	;select IRP bank2
 11724  03E1' 0080               	movwf	0
 11725  03E2'                    l3697:
 11726  03E2' 3001               	movlw	1
 11727  03E3' 00FF               	movwf	btemp+1
 11728  03E4' 087F               	movf	btemp+1,w
 11729  03E5' 0780'              	addwf	sprintf@sp^(0+128),f
 11730  03E6'                    l3699:
 11731                           
 11732                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
 11733  03E6' 0800'              	movf	sprintf@c^(0+128),w
 11734  03E7' 0080'              	movwf	??_sprintf^(0+128)
 11735  03E8' 3001               	movlw	1
 11736  03E9'                    u6145:
 11737  03E9' 1003               	clrc
 11738  03EA' 0D80'              	rlf	??_sprintf^(0+128),f
 11739  03EB' 3EFF               	addlw	-1
 11740  03EC' 1D03               	skipz
 11741  03ED' 2800'              	goto	u6145
 11742  03EE' 1003               	clrc
 11743  03EF' 0D00'              	rlf	??_sprintf^(0+128),w
 11744  03F0' 3E00'              	addlw	low (_dpowers| (0+32768))
 11745  03F1' 0084               	movwf	4
 11746  03F2' 3000'              	movlw	high (_dpowers| (0+32768))
 11747  03F3' 1803               	skipnc
 11748  03F4' 3E01               	addlw	1
 11749  03F5' 1283               	bcf	3,5	;RP0=0, select bank0
 11750  03F6' 1303               	bcf	3,6	;RP1=0, select bank0
 11751  03F7' 00FF               	movwf	btemp+1
 11752  03F8' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
 11753  03FD' 0080'              	movwf	___llmod@divisor
 11754  03FE' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
 11755  0403' 0081'              	movwf	___llmod@divisor+1
 11756  0404' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
 11757  0409' 0082'              	movwf	___llmod@divisor+2
 11758  040A' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
 11759  040F' 0083'              	movwf	___llmod@divisor+3
 11760  0410' 1683               	bsf	3,5	;RP0=1, select bank1
 11761  0411' 1303               	bcf	3,6	;RP1=0, select bank1
 11762  0412' 0800'              	movf	(sprintf@val+3)^(0+128),w
 11763  0413' 1283               	bcf	3,5	;RP0=0, select bank0
 11764  0414' 1303               	bcf	3,6	;RP1=0, select bank0
 11765  0415' 0087'              	movwf	___llmod@dividend+3
 11766  0416' 1683               	bsf	3,5	;RP0=1, select bank1
 11767  0417' 1303               	bcf	3,6	;RP1=0, select bank1
 11768  0418' 0800'              	movf	(sprintf@val+2)^(0+128),w
 11769  0419' 1283               	bcf	3,5	;RP0=0, select bank0
 11770  041A' 1303               	bcf	3,6	;RP1=0, select bank0
 11771  041B' 0086'              	movwf	___llmod@dividend+2
 11772  041C' 1683               	bsf	3,5	;RP0=1, select bank1
 11773  041D' 1303               	bcf	3,6	;RP1=0, select bank1
 11774  041E' 0800'              	movf	(sprintf@val+1)^(0+128),w
 11775  041F' 1283               	bcf	3,5	;RP0=0, select bank0
 11776  0420' 1303               	bcf	3,6	;RP1=0, select bank0
 11777  0421' 0085'              	movwf	___llmod@dividend+1
 11778  0422' 1683               	bsf	3,5	;RP0=1, select bank1
 11779  0423' 1303               	bcf	3,6	;RP1=0, select bank1
 11780  0424' 0800'              	movf	sprintf@val^(0+128),w
 11781  0425' 1283               	bcf	3,5	;RP0=0, select bank0
 11782  0426' 1303               	bcf	3,6	;RP1=0, select bank0
 11783  0427' 0084'              	movwf	___llmod@dividend
 11784  0428' 120A' 118A' 2000' 120A' 118A' 	fcall	___llmod
 11785  042D' 1283               	bcf	3,5	;RP0=0, select bank0
 11786  042E' 1303               	bcf	3,6	;RP1=0, select bank0
 11787  042F' 0803'              	movf	?___llmod+3,w
 11788  0430' 1683               	bsf	3,5	;RP0=1, select bank1
 11789  0431' 1303               	bcf	3,6	;RP1=0, select bank1
 11790  0432' 0080'              	movwf	(sprintf@val+3)^(0+128)
 11791  0433' 1283               	bcf	3,5	;RP0=0, select bank0
 11792  0434' 1303               	bcf	3,6	;RP1=0, select bank0
 11793  0435' 0802'              	movf	?___llmod+2,w
 11794  0436' 1683               	bsf	3,5	;RP0=1, select bank1
 11795  0437' 1303               	bcf	3,6	;RP1=0, select bank1
 11796  0438' 0080'              	movwf	(sprintf@val+2)^(0+128)
 11797  0439' 1283               	bcf	3,5	;RP0=0, select bank0
 11798  043A' 1303               	bcf	3,6	;RP1=0, select bank0
 11799  043B' 0801'              	movf	?___llmod+1,w
 11800  043C' 1683               	bsf	3,5	;RP0=1, select bank1
 11801  043D' 1303               	bcf	3,6	;RP1=0, select bank1
 11802  043E' 0080'              	movwf	(sprintf@val+1)^(0+128)
 11803  043F' 1283               	bcf	3,5	;RP0=0, select bank0
 11804  0440' 1303               	bcf	3,6	;RP1=0, select bank0
 11805  0441' 0800'              	movf	?___llmod,w
 11806  0442' 1683               	bsf	3,5	;RP0=1, select bank1
 11807  0443' 1303               	bcf	3,6	;RP1=0, select bank1
 11808  0444' 0080'              	movwf	sprintf@val^(0+128)
 11809  0445'                    l3701:
 11810                           
 11811                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 11812  0445' 3001               	movlw	1
 11813  0446' 0280'              	subwf	sprintf@c^(0+128),f
 11814  0447' 0A00'              	incf	sprintf@c^(0+128),w
 11815  0448' 1D03               	btfss	3,2
 11816  0449' 2800'              	goto	u6151
 11817  044A' 2800'              	goto	u6150
 11818  044B'                    u6151:
 11819  044B' 2800'              	goto	l3691
 11820  044C'                    u6150:
 11821  044C' 2800'              	goto	l3709
 11822  044D'                    l3703:
 11823                           
 11824                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
 11825  044D' 0800'              	movf	sprintf@sp^(0+128),w
 11826  044E' 0084               	movwf	4
 11827  044F' 3030               	movlw	48
 11828  0450' 1783               	bsf	3,7	;select IRP bank2
 11829  0451' 0080               	movwf	0
 11830  0452'                    l3705:
 11831  0452' 3001               	movlw	1
 11832  0453' 00FF               	movwf	btemp+1
 11833  0454' 087F               	movf	btemp+1,w
 11834  0455' 0780'              	addwf	sprintf@sp^(0+128),f
 11835  0456'                    l3707:
 11836                           
 11837                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1263:     prec--;
 11838  0456' 30FF               	movlw	255
 11839  0457' 0780'              	addwf	sprintf@prec^(0+128),f
 11840  0458' 1803               	skipnc
 11841  0459' 0A80'              	incf	(sprintf@prec+1)^(0+128),f
 11842  045A' 30FF               	movlw	255
 11843  045B' 0780'              	addwf	(sprintf@prec+1)^(0+128),f
 11844  045C'                    l3709:
 11845                           
 11846                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
 11847  045C' 0800'              	movf	sprintf@prec^(0+128),w
 11848  045D' 0400'              	iorwf	(sprintf@prec+1)^(0+128),w
 11849  045E' 1D03               	btfss	3,2
 11850  045F' 2800'              	goto	u6161
 11851  0460' 2800'              	goto	u6160
 11852  0461'                    u6161:
 11853  0461' 2800'              	goto	l3703
 11854  0462'                    u6160:
 11855  0462' 2800'              	goto	l3795
 11856  0463'                    l307:	
 11857                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1272:   }
 11858                           
 11859                           
 11860                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1277:   if((flag 
      +                          & 0x40) == 0x00)
 11861  0463' 1B00'              	btfsc	sprintf@flag^(0+128),6
 11862  0464' 2800'              	goto	u6171
 11863  0465' 2800'              	goto	u6170
 11864  0466'                    u6171:
 11865  0466' 2800'              	goto	l3721
 11866  0467'                    u6170:
 11867  0467'                    l3711:
 11868                           
 11869                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           long)(*(int *)__va_arg((*(int **)ap), (int)0));
 11870  0467' 0800'              	movf	sprintf@ap^(0+128),w
 11871  0468' 0084               	movwf	4
 11872  0469' 1383               	bcf	3,7	;select IRP bank0
 11873  046A' 0800               	movf	0,w
 11874  046B' 0080'              	movwf	??_sprintf^(0+128)
 11875  046C' 0A84               	incf	4,f
 11876  046D' 0800               	movf	0,w
 11877  046E' 0081'              	movwf	(??_sprintf^(0+128)+1)
 11878  046F' 0800'              	movf	??_sprintf^(0+128),w
 11879  0470' 0080'              	movwf	sprintf@val^(0+128)
 11880  0471' 0800'              	movf	(??_sprintf+1)^(0+128),w
 11881  0472' 0080'              	movwf	(sprintf@val+1)^(0+128)
 11882  0473' 3000               	movlw	0
 11883  0474' 1B80'              	btfsc	(sprintf@val+1)^(0+128),7
 11884  0475' 30FF               	movlw	255
 11885  0476' 0080'              	movwf	(sprintf@val+2)^(0+128)
 11886  0477' 0080'              	movwf	(sprintf@val+3)^(0+128)
 11887  0478'                    l3713:
 11888  0478' 3002               	movlw	2
 11889  0479' 00FF               	movwf	btemp+1
 11890  047A' 087F               	movf	btemp+1,w
 11891  047B' 0780'              	addwf	sprintf@ap^(0+128),f
 11892  047C'                    l3715:
 11893                           
 11894                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1287:    if((long
      +                          )val < 0) {
 11895  047C' 1F80'              	btfss	(sprintf@val+3)^(0+128),7
 11896  047D' 2800'              	goto	u6181
 11897  047E' 2800'              	goto	u6180
 11898  047F'                    u6181:
 11899  047F' 2800'              	goto	l3725
 11900  0480'                    u6180:
 11901  0480'                    l3717:
 11902                           
 11903                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
 11904  0480' 3003               	movlw	3
 11905  0481' 0480'              	iorwf	sprintf@flag^(0+128),f
 11906  0482' 3000               	movlw	0
 11907  0483' 0480'              	iorwf	(sprintf@flag+1)^(0+128),f
 11908  0484'                    l3719:
 11909                           
 11910                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
 11911  0484' 0980'              	comf	sprintf@val^(0+128),f
 11912  0485' 0980'              	comf	(sprintf@val+1)^(0+128),f
 11913  0486' 0980'              	comf	(sprintf@val+2)^(0+128),f
 11914  0487' 0980'              	comf	(sprintf@val+3)^(0+128),f
 11915  0488' 0A80'              	incf	sprintf@val^(0+128),f
 11916  0489' 1903               	skipnz
 11917  048A' 0A80'              	incf	(sprintf@val+1)^(0+128),f
 11918  048B' 1903               	skipnz
 11919  048C' 0A80'              	incf	(sprintf@val+2)^(0+128),f
 11920  048D' 1903               	skipnz
 11921  048E' 0A80'              	incf	(sprintf@val+3)^(0+128),f
 11922  048F' 2800'              	goto	l3725
 11923  0490'                    l3721:
 11924                           
 11925                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
 11926  0490' 0800'              	movf	sprintf@ap^(0+128),w
 11927  0491' 0084               	movwf	4
 11928  0492' 1383               	bcf	3,7	;select IRP bank0
 11929  0493' 0800               	movf	0,w
 11930  0494' 0080'              	movwf	??_sprintf^(0+128)
 11931  0495' 0A84               	incf	4,f
 11932  0496' 0800               	movf	0,w
 11933  0497' 0081'              	movwf	(??_sprintf^(0+128)+1)
 11934  0498' 0800'              	movf	??_sprintf^(0+128),w
 11935  0499' 0080'              	movwf	sprintf@val^(0+128)
 11936  049A' 0800'              	movf	(??_sprintf+1)^(0+128),w
 11937  049B' 0081'              	movwf	(sprintf@val^(0+128)+1)
 11938  049C' 0182'              	clrf	(sprintf@val^(0+128)+2)
 11939  049D' 0183'              	clrf	(sprintf@val^(0+128)+3)
 11940  049E'                    l3723:
 11941  049E' 3002               	movlw	2
 11942  049F' 00FF               	movwf	btemp+1
 11943  04A0' 087F               	movf	btemp+1,w
 11944  04A1' 0780'              	addwf	sprintf@ap^(0+128),f
 11945  04A2'                    l3725:
 11946                           
 11947                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1316:   if(prec =
      +                          = 0 && val == 0)
 11948  04A2' 0800'              	movf	sprintf@prec^(0+128),w
 11949  04A3' 0400'              	iorwf	(sprintf@prec+1)^(0+128),w
 11950  04A4' 1D03               	btfss	3,2
 11951  04A5' 2800'              	goto	u6191
 11952  04A6' 2800'              	goto	u6190
 11953  04A7'                    u6191:
 11954  04A7' 2800'              	goto	l3731
 11955  04A8'                    u6190:
 11956  04A8'                    l3727:
 11957  04A8' 0800'              	movf	(sprintf@val+3)^(0+128),w
 11958  04A9' 0400'              	iorwf	(sprintf@val+2)^(0+128),w
 11959  04AA' 0400'              	iorwf	(sprintf@val+1)^(0+128),w
 11960  04AB' 0400'              	iorwf	sprintf@val^(0+128),w
 11961  04AC' 1D03               	skipz
 11962  04AD' 2800'              	goto	u6201
 11963  04AE' 2800'              	goto	u6200
 11964  04AF'                    u6201:
 11965  04AF' 2800'              	goto	l3731
 11966  04B0'                    u6200:
 11967  04B0'                    l3729:
 11968                           
 11969                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1317:    prec++;
 11970  04B0' 3001               	movlw	1
 11971  04B1' 0780'              	addwf	sprintf@prec^(0+128),f
 11972  04B2' 1803               	skipnc
 11973  04B3' 0A80'              	incf	(sprintf@prec+1)^(0+128),f
 11974  04B4' 3000               	movlw	0
 11975  04B5' 0780'              	addwf	(sprintf@prec+1)^(0+128),f
 11976  04B6'                    l3731:
 11977                           
 11978                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 11979  04B6' 0180'              	clrf	sprintf@c^(0+128)
 11980  04B7' 0A80'              	incf	sprintf@c^(0+128),f
 11981  04B8'                    l3737:
 11982                           
 11983                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
 11984  04B8' 0800'              	movf	sprintf@c^(0+128),w
 11985  04B9' 0080'              	movwf	??_sprintf^(0+128)
 11986  04BA' 3001               	movlw	1
 11987  04BB'                    u6215:
 11988  04BB' 1003               	clrc
 11989  04BC' 0D80'              	rlf	??_sprintf^(0+128),f
 11990  04BD' 3EFF               	addlw	-1
 11991  04BE' 1D03               	skipz
 11992  04BF' 2800'              	goto	u6215
 11993  04C0' 1003               	clrc
 11994  04C1' 0D00'              	rlf	??_sprintf^(0+128),w
 11995  04C2' 3E00'              	addlw	low (_dpowers| (0+32768))
 11996  04C3' 0084               	movwf	4
 11997  04C4' 3000'              	movlw	high (_dpowers| (0+32768))
 11998  04C5' 1803               	skipnc
 11999  04C6' 3E01               	addlw	1
 12000  04C7' 1283               	bcf	3,5	;RP0=0, select bank0
 12001  04C8' 1303               	bcf	3,6	;RP1=0, select bank0
 12002  04C9' 00FF               	movwf	btemp+1
 12003  04CA' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
 12004  04CF' 1683               	bsf	3,5	;RP0=1, select bank1
 12005  04D0' 1303               	bcf	3,6	;RP1=0, select bank1
 12006  04D1' 0080'              	movwf	(??_sprintf+1)^(0+128)
 12007  04D2' 1283               	bcf	3,5	;RP0=0, select bank0
 12008  04D3' 1303               	bcf	3,6	;RP1=0, select bank0
 12009  04D4' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
 12010  04D9' 1683               	bsf	3,5	;RP0=1, select bank1
 12011  04DA' 1303               	bcf	3,6	;RP1=0, select bank1
 12012  04DB' 0081'              	movwf	((??_sprintf+1)^(0+128)+1)
 12013  04DC' 1283               	bcf	3,5	;RP0=0, select bank0
 12014  04DD' 1303               	bcf	3,6	;RP1=0, select bank0
 12015  04DE' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
 12016  04E3' 1683               	bsf	3,5	;RP0=1, select bank1
 12017  04E4' 1303               	bcf	3,6	;RP1=0, select bank1
 12018  04E5' 0082'              	movwf	((??_sprintf+1)^(0+128)+2)
 12019  04E6' 1283               	bcf	3,5	;RP0=0, select bank0
 12020  04E7' 1303               	bcf	3,6	;RP1=0, select bank0
 12021  04E8' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
 12022  04ED' 1683               	bsf	3,5	;RP0=1, select bank1
 12023  04EE' 1303               	bcf	3,6	;RP1=0, select bank1
 12024  04EF' 0083'              	movwf	((??_sprintf+1)^(0+128)+3)
 12025  04F0' 0800'              	movf	(??_sprintf+4)^(0+128),w
 12026  04F1' 0200'              	subwf	(sprintf@val+3)^(0+128),w
 12027  04F2' 1D03               	skipz
 12028  04F3' 2800'              	goto	u6225
 12029  04F4' 0800'              	movf	(??_sprintf+3)^(0+128),w
 12030  04F5' 0200'              	subwf	(sprintf@val+2)^(0+128),w
 12031  04F6' 1D03               	skipz
 12032  04F7' 2800'              	goto	u6225
 12033  04F8' 0800'              	movf	(??_sprintf+2)^(0+128),w
 12034  04F9' 0200'              	subwf	(sprintf@val+1)^(0+128),w
 12035  04FA' 1D03               	skipz
 12036  04FB' 2800'              	goto	u6225
 12037  04FC' 0800'              	movf	(??_sprintf+1)^(0+128),w
 12038  04FD' 0200'              	subwf	sprintf@val^(0+128),w
 12039  04FE'                    u6225:
 12040  04FE' 1803               	skipnc
 12041  04FF' 2800'              	goto	u6221
 12042  0500' 2800'              	goto	u6220
 12043  0501'                    u6221:
 12044  0501' 2800'              	goto	l3741
 12045  0502'                    u6220:
 12046  0502' 2800'              	goto	l3745
 12047  0503'                    l3741:
 12048  0503' 3001               	movlw	1
 12049  0504' 00FF               	movwf	btemp+1
 12050  0505' 087F               	movf	btemp+1,w
 12051  0506' 0780'              	addwf	sprintf@c^(0+128),f
 12052  0507'                    l3743:
 12053  0507' 300A               	movlw	10
 12054  0508' 0600'              	xorwf	sprintf@c^(0+128),w
 12055  0509' 1D03               	btfss	3,2
 12056  050A' 2800'              	goto	u6231
 12057  050B' 2800'              	goto	u6230
 12058  050C'                    u6231:
 12059  050C' 2800'              	goto	l3737
 12060  050D'                    u6230:
 12061  050D'                    l3745:
 12062                           
 12063                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
 12064  050D' 0800'              	movf	(sprintf@prec+1)^(0+128),w
 12065  050E' 3A80               	xorlw	128
 12066  050F' 3C80               	sublw	128
 12067  0510' 1D03               	skipz
 12068  0511' 2800'              	goto	u6245
 12069  0512' 0800'              	movf	sprintf@prec^(0+128),w
 12070  0513' 0200'              	subwf	sprintf@c^(0+128),w
 12071  0514'                    u6245:
 12072  0514' 1803               	skipnc
 12073  0515' 2800'              	goto	u6241
 12074  0516' 2800'              	goto	u6240
 12075  0517'                    u6241:
 12076  0517' 2800'              	goto	l3749
 12077  0518'                    u6240:
 12078  0518'                    l3747:
 12079                           
 12080                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1366:    c = (cha
      +                          r)prec;
 12081  0518' 1683               	bsf	3,5	;RP0=1, select bank1
 12082  0519' 1303               	bcf	3,6	;RP1=0, select bank1
 12083  051A' 0800'              	movf	sprintf@prec^(0+128),w
 12084  051B' 0080'              	movwf	sprintf@c^(0+128)
 12085  051C' 2800'              	goto	l3753
 12086  051D'                    l3749:
 12087  051D' 1683               	bsf	3,5	;RP0=1, select bank1
 12088  051E' 1303               	bcf	3,6	;RP1=0, select bank1
 12089  051F' 0800'              	movf	(sprintf@prec+1)^(0+128),w
 12090  0520' 3A80               	xorlw	128
 12091  0521' 0080'              	movwf	??_sprintf^(0+128)
 12092  0522' 3080               	movlw	128
 12093  0523' 0200'              	subwf	??_sprintf^(0+128),w
 12094  0524' 1D03               	skipz
 12095  0525' 2800'              	goto	u6255
 12096  0526' 0800'              	movf	sprintf@c^(0+128),w
 12097  0527' 0200'              	subwf	sprintf@prec^(0+128),w
 12098  0528'                    u6255:
 12099  0528' 1803               	skipnc
 12100  0529' 2800'              	goto	u6251
 12101  052A' 2800'              	goto	u6250
 12102  052B'                    u6251:
 12103  052B' 2800'              	goto	l3753
 12104  052C'                    u6250:
 12105  052C'                    l3751:
 12106                           
 12107                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
 12108  052C' 1683               	bsf	3,5	;RP0=1, select bank1
 12109  052D' 1303               	bcf	3,6	;RP1=0, select bank1
 12110  052E' 0800'              	movf	sprintf@c^(0+128),w
 12111  052F' 0080'              	movwf	??_sprintf^(0+128)
 12112  0530' 0181'              	clrf	(??_sprintf^(0+128)+1)
 12113  0531' 0800'              	movf	??_sprintf^(0+128),w
 12114  0532' 0080'              	movwf	sprintf@prec^(0+128)
 12115  0533' 0800'              	movf	(??_sprintf+1)^(0+128),w
 12116  0534' 0080'              	movwf	(sprintf@prec+1)^(0+128)
 12117  0535'                    l3753:
 12118                           
 12119                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
 12120  0535' 1683               	bsf	3,5	;RP0=1, select bank1
 12121  0536' 1303               	bcf	3,6	;RP1=0, select bank1
 12122  0537' 0800'              	movf	sprintf@width^(0+128),w
 12123  0538' 0400'              	iorwf	(sprintf@width+1)^(0+128),w
 12124  0539' 1903               	btfsc	3,2
 12125  053A' 2800'              	goto	u6261
 12126  053B' 2800'              	goto	u6260
 12127  053C'                    u6261:
 12128  053C' 2800'              	goto	l3759
 12129  053D'                    u6260:
 12130  053D'                    l3755:
 12131  053D' 3003               	movlw	3
 12132  053E' 0500'              	andwf	sprintf@flag^(0+128),w
 12133  053F' 0080'              	movwf	??_sprintf^(0+128)
 12134  0540' 3000               	movlw	0
 12135  0541' 0500'              	andwf	(sprintf@flag+1)^(0+128),w
 12136  0542' 0080'              	movwf	(??_sprintf+1)^(0+128)
 12137  0543' 0800'              	movf	??_sprintf^(0+128),w
 12138  0544' 0401'              	iorwf	(??_sprintf^(0+128)+1),w
 12139  0545' 1903               	btfsc	3,2
 12140  0546' 2800'              	goto	u6271
 12141  0547' 2800'              	goto	u6270
 12142  0548'                    u6271:
 12143  0548' 2800'              	goto	l3759
 12144  0549'                    u6270:
 12145  0549'                    l3757:
 12146                           
 12147                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1372:    width--;
 12148  0549' 30FF               	movlw	255
 12149  054A' 0780'              	addwf	sprintf@width^(0+128),f
 12150  054B' 1803               	skipnc
 12151  054C' 0A80'              	incf	(sprintf@width+1)^(0+128),f
 12152  054D' 30FF               	movlw	255
 12153  054E' 0780'              	addwf	(sprintf@width+1)^(0+128),f
 12154  054F'                    l3759:
 12155                           
 12156                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1374:   if(flag &
      +                           0x4000) {
 12157  054F' 1F00'              	btfss	(sprintf@flag+1)^(0+128),6
 12158  0550' 2800'              	goto	u6281
 12159  0551' 2800'              	goto	u6280
 12160  0552'                    u6281:
 12161  0552' 2800'              	goto	l3767
 12162  0553'                    u6280:
 12163  0553'                    l3761:
 12164                           
 12165                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1375:    if(width
      +                           > prec)
 12166  0553' 0800'              	movf	(sprintf@prec+1)^(0+128),w
 12167  0554' 3A80               	xorlw	128
 12168  0555' 0080'              	movwf	??_sprintf^(0+128)
 12169  0556' 0800'              	movf	(sprintf@width+1)^(0+128),w
 12170  0557' 3A80               	xorlw	128
 12171  0558' 0200'              	subwf	??_sprintf^(0+128),w
 12172  0559' 1D03               	skipz
 12173  055A' 2800'              	goto	u6295
 12174  055B' 0800'              	movf	sprintf@width^(0+128),w
 12175  055C' 0200'              	subwf	sprintf@prec^(0+128),w
 12176  055D'                    u6295:
 12177  055D' 1803               	skipnc
 12178  055E' 2800'              	goto	u6291
 12179  055F' 2800'              	goto	u6290
 12180  0560'                    u6291:
 12181  0560' 2800'              	goto	l3765
 12182  0561'                    u6290:
 12183  0561'                    l3763:
 12184                           
 12185                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1376:     width -
      +                          = prec;
 12186  0561' 1683               	bsf	3,5	;RP0=1, select bank1
 12187  0562' 1303               	bcf	3,6	;RP1=0, select bank1
 12188  0563' 0800'              	movf	sprintf@prec^(0+128),w
 12189  0564' 0280'              	subwf	sprintf@width^(0+128),f
 12190  0565' 0800'              	movf	(sprintf@prec+1)^(0+128),w
 12191  0566' 1C03               	skipc
 12192  0567' 0380'              	decf	(sprintf@width+1)^(0+128),f
 12193  0568' 0280'              	subwf	(sprintf@width+1)^(0+128),f
 12194  0569' 2800'              	goto	l3767
 12195  056A'                    l3765:
 12196                           
 12197                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1378:     width =
      +                           0;
 12198  056A' 1683               	bsf	3,5	;RP0=1, select bank1
 12199  056B' 1303               	bcf	3,6	;RP1=0, select bank1
 12200  056C' 0180'              	clrf	sprintf@width^(0+128)
 12201  056D' 0180'              	clrf	(sprintf@width+1)^(0+128)
 12202  056E'                    l3767:
 12203                           
 12204                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
 12205  056E' 0800'              	movf	(sprintf@width+1)^(0+128),w
 12206  056F' 3A80               	xorlw	128
 12207  0570' 3C80               	sublw	128
 12208  0571' 1D03               	skipz
 12209  0572' 2800'              	goto	u6305
 12210  0573' 0800'              	movf	sprintf@width^(0+128),w
 12211  0574' 0200'              	subwf	sprintf@c^(0+128),w
 12212  0575'                    u6305:
 12213  0575' 1803               	skipnc
 12214  0576' 2800'              	goto	u6301
 12215  0577' 2800'              	goto	u6300
 12216  0578'                    u6301:
 12217  0578' 2800'              	goto	l3771
 12218  0579'                    u6300:
 12219  0579'                    l3769:
 12220                           
 12221                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
 12222  0579' 1683               	bsf	3,5	;RP0=1, select bank1
 12223  057A' 1303               	bcf	3,6	;RP1=0, select bank1
 12224  057B' 0800'              	movf	sprintf@c^(0+128),w
 12225  057C' 0080'              	movwf	??_sprintf^(0+128)
 12226  057D' 0181'              	clrf	(??_sprintf^(0+128)+1)
 12227  057E' 0800'              	movf	??_sprintf^(0+128),w
 12228  057F' 0280'              	subwf	sprintf@width^(0+128),f
 12229  0580' 0800'              	movf	(??_sprintf+1)^(0+128),w
 12230  0581' 1C03               	skipc
 12231  0582' 0380'              	decf	(sprintf@width+1)^(0+128),f
 12232  0583' 0280'              	subwf	(sprintf@width+1)^(0+128),f
 12233  0584' 2800'              	goto	l3773
 12234  0585'                    l3771:
 12235                           
 12236                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
 12237  0585' 1683               	bsf	3,5	;RP0=1, select bank1
 12238  0586' 1303               	bcf	3,6	;RP1=0, select bank1
 12239  0587' 0180'              	clrf	sprintf@width^(0+128)
 12240  0588' 0180'              	clrf	(sprintf@width+1)^(0+128)
 12241  0589'                    l3773:
 12242                           
 12243                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1450:    if(width
 12244  0589' 0800'              	movf	sprintf@width^(0+128),w
 12245  058A' 0400'              	iorwf	(sprintf@width+1)^(0+128),w
 12246  058B' 1903               	btfsc	3,2
 12247  058C' 2800'              	goto	u6311
 12248  058D' 2800'              	goto	u6310
 12249  058E'                    u6311:
 12250  058E' 2800'              	goto	l3781
 12251  058F'                    u6310:
 12252  058F'                    l3775:
 12253                           
 12254                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
 12255  058F' 0800'              	movf	sprintf@sp^(0+128),w
 12256  0590' 0084               	movwf	4
 12257  0591' 3020               	movlw	32
 12258  0592' 1783               	bsf	3,7	;select IRP bank2
 12259  0593' 0080               	movwf	0
 12260  0594'                    l3777:
 12261  0594' 3001               	movlw	1
 12262  0595' 00FF               	movwf	btemp+1
 12263  0596' 087F               	movf	btemp+1,w
 12264  0597' 0780'              	addwf	sprintf@sp^(0+128),f
 12265  0598'                    l3779:
 12266  0598' 30FF               	movlw	255
 12267  0599' 0780'              	addwf	sprintf@width^(0+128),f
 12268  059A' 1803               	skipnc
 12269  059B' 0A80'              	incf	(sprintf@width+1)^(0+128),f
 12270  059C' 30FF               	movlw	255
 12271  059D' 0780'              	addwf	(sprintf@width+1)^(0+128),f
 12272  059E' 0800'              	movf	sprintf@width^(0+128),w
 12273  059F' 0400'              	iorwf	(sprintf@width+1)^(0+128),w
 12274  05A0' 1D03               	btfss	3,2
 12275  05A1' 2800'              	goto	u6321
 12276  05A2' 2800'              	goto	u6320
 12277  05A3'                    u6321:
 12278  05A3' 2800'              	goto	l3775
 12279  05A4'                    u6320:
 12280  05A4'                    l3781:
 12281                           
 12282                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
 12283  05A4' 3003               	movlw	3
 12284  05A5' 0500'              	andwf	sprintf@flag^(0+128),w
 12285  05A6' 0080'              	movwf	??_sprintf^(0+128)
 12286  05A7' 3000               	movlw	0
 12287  05A8' 0500'              	andwf	(sprintf@flag+1)^(0+128),w
 12288  05A9' 0080'              	movwf	(??_sprintf+1)^(0+128)
 12289  05AA' 0800'              	movf	??_sprintf^(0+128),w
 12290  05AB' 0401'              	iorwf	(??_sprintf^(0+128)+1),w
 12291  05AC' 1903               	btfsc	3,2
 12292  05AD' 2800'              	goto	u6331
 12293  05AE' 2800'              	goto	u6330
 12294  05AF'                    u6331:
 12295  05AF' 2800'              	goto	l3793
 12296  05B0'                    u6330:
 12297  05B0'                    l3783:
 12298                           
 12299                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
 12300  05B0' 0800'              	movf	sprintf@sp^(0+128),w
 12301  05B1' 0084               	movwf	4
 12302  05B2' 302D               	movlw	45
 12303  05B3' 1783               	bsf	3,7	;select IRP bank2
 12304  05B4' 0080               	movwf	0
 12305  05B5'                    l3785:
 12306  05B5' 3001               	movlw	1
 12307  05B6' 00FF               	movwf	btemp+1
 12308  05B7' 087F               	movf	btemp+1,w
 12309  05B8' 0780'              	addwf	sprintf@sp^(0+128),f
 12310  05B9' 2800'              	goto	l3793
 12311  05BA'                    l3787:
 12312                           
 12313                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned int)prec]) % 10 + '0';
 12314  05BA' 3000               	movlw	0
 12315  05BB' 1283               	bcf	3,5	;RP0=0, select bank0
 12316  05BC' 1303               	bcf	3,6	;RP1=0, select bank0
 12317  05BD' 0083'              	movwf	___llmod@divisor+3
 12318  05BE' 3000               	movlw	0
 12319  05BF' 0082'              	movwf	___llmod@divisor+2
 12320  05C0' 3000               	movlw	0
 12321  05C1' 0081'              	movwf	___llmod@divisor+1
 12322  05C2' 300A               	movlw	10
 12323  05C3' 0080'              	movwf	___llmod@divisor
 12324  05C4' 1683               	bsf	3,5	;RP0=1, select bank1
 12325  05C5' 1303               	bcf	3,6	;RP1=0, select bank1
 12326  05C6' 0800'              	movf	sprintf@prec^(0+128),w
 12327  05C7' 0080'              	movwf	??_sprintf^(0+128)
 12328  05C8' 3001               	movlw	1
 12329  05C9'                    u6345:
 12330  05C9' 1003               	clrc
 12331  05CA' 0D80'              	rlf	??_sprintf^(0+128),f
 12332  05CB' 3EFF               	addlw	-1
 12333  05CC' 1D03               	skipz
 12334  05CD' 2800'              	goto	u6345
 12335  05CE' 1003               	clrc
 12336  05CF' 0D00'              	rlf	??_sprintf^(0+128),w
 12337  05D0' 3E00'              	addlw	low (_dpowers| (0+32768))
 12338  05D1' 0084               	movwf	4
 12339  05D2' 3000'              	movlw	high (_dpowers| (0+32768))
 12340  05D3' 1803               	skipnc
 12341  05D4' 3E01               	addlw	1
 12342  05D5' 1283               	bcf	3,5	;RP0=0, select bank0
 12343  05D6' 1303               	bcf	3,6	;RP1=0, select bank0
 12344  05D7' 00FF               	movwf	btemp+1
 12345  05D8' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
 12346  05DD' 0080'              	movwf	___lldiv@divisor
 12347  05DE' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
 12348  05E3' 0081'              	movwf	___lldiv@divisor+1
 12349  05E4' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
 12350  05E9' 0082'              	movwf	___lldiv@divisor+2
 12351  05EA' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
 12352  05EF' 0083'              	movwf	___lldiv@divisor+3
 12353  05F0' 1683               	bsf	3,5	;RP0=1, select bank1
 12354  05F1' 1303               	bcf	3,6	;RP1=0, select bank1
 12355  05F2' 0800'              	movf	(sprintf@val+3)^(0+128),w
 12356  05F3' 0087'              	movwf	___lldiv@dividend+3
 12357  05F4' 0800'              	movf	(sprintf@val+2)^(0+128),w
 12358  05F5' 0086'              	movwf	___lldiv@dividend+2
 12359  05F6' 0800'              	movf	(sprintf@val+1)^(0+128),w
 12360  05F7' 0085'              	movwf	___lldiv@dividend+1
 12361  05F8' 0800'              	movf	sprintf@val^(0+128),w
 12362  05F9' 0084'              	movwf	___lldiv@dividend
 12363  05FA' 120A' 118A' 2000' 120A' 118A' 	fcall	___lldiv
 12364  05FF' 0803'              	movf	?___lldiv+3,w
 12365  0600' 1283               	bcf	3,5	;RP0=0, select bank0
 12366  0601' 1303               	bcf	3,6	;RP1=0, select bank0
 12367  0602' 0087'              	movwf	___llmod@dividend+3
 12368  0603' 0802'              	movf	?___lldiv+2,w
 12369  0604' 0086'              	movwf	___llmod@dividend+2
 12370  0605' 0801'              	movf	?___lldiv+1,w
 12371  0606' 0085'              	movwf	___llmod@dividend+1
 12372  0607' 0800'              	movf	?___lldiv,w
 12373  0608' 0084'              	movwf	___llmod@dividend
 12374  0609' 120A' 118A' 2000' 120A' 118A' 	fcall	___llmod
 12375  060E' 1283               	bcf	3,5	;RP0=0, select bank0
 12376  060F' 1303               	bcf	3,6	;RP1=0, select bank0
 12377  0610' 0800'              	movf	?___llmod,w
 12378  0611' 3E30               	addlw	48
 12379  0612' 1683               	bsf	3,5	;RP0=1, select bank1
 12380  0613' 1303               	bcf	3,6	;RP1=0, select bank1
 12381  0614' 0080'              	movwf	sprintf@c^(0+128)
 12382  0615'                    l3789:
 12383                           
 12384                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
 12385  0615' 0800'              	movf	sprintf@sp^(0+128),w
 12386  0616' 0084               	movwf	4
 12387  0617' 0800'              	movf	sprintf@c^(0+128),w
 12388  0618' 1783               	bsf	3,7	;select IRP bank2
 12389  0619' 0080               	movwf	0
 12390  061A' 2800'              	goto	l3785
 12391  061B'                    l3793:
 12392                           
 12393                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
 12394  061B' 30FF               	movlw	255
 12395  061C' 0780'              	addwf	sprintf@prec^(0+128),f
 12396  061D' 1803               	skipnc
 12397  061E' 0A80'              	incf	(sprintf@prec+1)^(0+128),f
 12398  061F' 30FF               	movlw	255
 12399  0620' 0780'              	addwf	(sprintf@prec+1)^(0+128),f
 12400  0621' 0A00'              	incf	sprintf@prec^(0+128),w
 12401  0622' 1D03               	skipz
 12402  0623' 2800'              	goto	u6351
 12403  0624' 0A00'              	incf	(sprintf@prec+1)^(0+128),w
 12404  0625' 1D03               	btfss	3,2
 12405  0626' 2800'              	goto	u6351
 12406  0627' 2800'              	goto	u6350
 12407  0628'                    u6351:
 12408  0628' 2800'              	goto	l3787
 12409  0629'                    u6350:
 12410  0629'                    l3795:
 12411                           
 12412                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
 12413  0629' 1283               	bcf	3,5	;RP0=0, select bank0
 12414  062A' 1303               	bcf	3,6	;RP1=0, select bank0
 12415  062B' 084B'              	movf	sprintf@f+1,w
 12416  062C' 1683               	bsf	3,5	;RP0=1, select bank1
 12417  062D' 1303               	bcf	3,6	;RP1=0, select bank1
 12418  062E' 0081'              	movwf	(??_sprintf^(0+128)+1)
 12419  062F' 1283               	bcf	3,5	;RP0=0, select bank0
 12420  0630' 1303               	bcf	3,6	;RP1=0, select bank0
 12421  0631' 084A'              	movf	sprintf@f,w
 12422  0632' 1683               	bsf	3,5	;RP0=1, select bank1
 12423  0633' 1303               	bcf	3,6	;RP1=0, select bank1
 12424  0634' 0080'              	movwf	??_sprintf^(0+128)
 12425  0635' 1283               	bcf	3,5	;RP0=0, select bank0
 12426  0636' 1303               	bcf	3,6	;RP1=0, select bank0
 12427  0637' 0ACA'              	incf	sprintf@f,f
 12428  0638' 1903               	skipnz
 12429  0639' 0ACB'              	incf	sprintf@f+1,f
 12430  063A' 1683               	bsf	3,5	;RP0=1, select bank1
 12431  063B' 1303               	bcf	3,6	;RP1=0, select bank1
 12432  063C' 0800'              	movf	(??_sprintf+1)^(0+128),w
 12433  063D' 1283               	bcf	3,5	;RP0=0, select bank0
 12434  063E' 1303               	bcf	3,6	;RP1=0, select bank0
 12435  063F' 00FF               	movwf	btemp+1
 12436  0640' 1683               	bsf	3,5	;RP0=1, select bank1
 12437  0641' 1303               	bcf	3,6	;RP1=0, select bank1
 12438  0642' 0800'              	movf	??_sprintf^(0+128),w
 12439  0643' 0084               	movwf	4
 12440  0644' 1283               	bcf	3,5	;RP0=0, select bank0
 12441  0645' 1303               	bcf	3,6	;RP1=0, select bank0
 12442  0646' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
 12443  064B' 1683               	bsf	3,5	;RP0=1, select bank1
 12444  064C' 1303               	bcf	3,6	;RP1=0, select bank1
 12445  064D' 0080'              	movwf	sprintf@c^(0+128)
 12446  064E' 0800'              	movf	sprintf@c^(0+128),w
 12447  064F' 1D03               	btfss	3,2
 12448  0650' 2800'              	goto	u6361
 12449  0651' 2800'              	goto	u6360
 12450  0652'                    u6361:
 12451  0652' 120A' 118A' 2800'  	goto	l3503
 12452  0655'                    u6360:
 12453  0655'                    l3797:
 12454                           
 12455                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
 12456  0655' 0800'              	movf	sprintf@sp^(0+128),w
 12457  0656' 0084               	movwf	4
 12458  0657' 1783               	bsf	3,7	;select IRP bank2
 12459  0658' 0180               	clrf	0
 12460  0659'                    l374:
 12461  0659' 0008               	return
 12462  065A'                    __end_of_sprintf:

Data Sizes:
    Strings     149
    Constant    144
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     35      35
    BANK3            96     60      60
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_19(CODE[6]), STR_13(CODE[6]), STR_7(CODE[6]), STR_5(CODE[4]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> main@combinedText_160(BANK3[20]), main@combinedText(BANK3[20]), main@adcString2(BANK3[4]), main@adcString1(BANK3[4]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    UART_Write_Text@text	PTR unsigned char  size(2) Largest target is 20
		 -> STR_21(CODE[5]), main@combinedText_160(BANK3[20]), STR_17(CODE[7]), STR_15(CODE[5]), 
		 -> main@combinedText(BANK3[20]), STR_11(CODE[8]), STR_9(CODE[5]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 15
		 -> STR_24(CODE[15]), STR_23(CODE[15]), STR_22(CODE[15]), STR_20(CODE[5]), 
		 -> STR_18(CODE[5]), STR_16(CODE[9]), STR_14(CODE[10]), STR_12(CODE[5]), 
		 -> STR_10(CODE[9]), STR_8(CODE[10]), main@adcString2(BANK3[4]), STR_6(CODE[8]), 
		 -> main@adcString1(BANK3[4]), STR_4(CODE[7]), STR_3(CODE[3]), STR_2(CODE[8]), 
		 -> STR_1(CODE[13]), 


Critical Paths under _main in COMMON

    _main->___xxtofl
    _sprintf->___awdiv
    _sprintf->___lldiv
    _sprintf->___xxtofl
    _scale->___awdiv
    ___awdiv->___awmod
    ___lwdiv->___lwmod
    ___flmul->___awdiv
    ___llmod->___lldiv
    ___flsub->___xxtofl
    ___fldiv->___xxtofl
    _UART_Write_Text->_UART_Write
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                65    65      0   38470
                                             32 BANK1      3     3      0
                                              0 BANK3     60    60      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                    _UART_Initialize
                    _UART_Write_Text
                            ___fldiv
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             43    37      6   32122
                                             74 BANK0      6     0      6
                                              0 BANK1     32    32      0
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    7408
                                             26 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1208
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1364
                                              6 COMMON     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    5871
                                             26 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     615
                                              0 COMMON     5     1      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     618
                                              5 COMMON     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4393
                                              0 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         17     9      8     455
                                              0 COMMON    11     3      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     767
                                              0 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     618
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     457
                                             45 BANK0     10     6      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                             66 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             46 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             26    18      8    1273
                                              0 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _UART_Write_Text                                      7     5      2     644
                                              1 COMMON     7     5      2
                         _UART_Write
 ---------------------------------------------------------------------------------
 (2) _UART_Write                                           1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2    1560
                                              5 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1    1672
                                              4 COMMON     6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _UART_Initialize
   _UART_Write_Text
     _UART_Write
   ___fldiv
     ___xxtofl (ARG)
   ___xxtofl
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___lwdiv
         ___lwmod
     ___fleq
     ___flge
     ___flmul
     ___flneg
     ___flsub
       ___fladd
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
       _scale (ARG)
         ___awdiv
         ___awmod
         ___flmul
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
     _isdigit
     _scale

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     23      23       7       43.8%
BITBANK3            60      0       0       8        0.0%
BANK3               60     3C      3C       9       62.5%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Fri Aug 25 14:10:03 2023

            ___fldiv@aexp 0019              ___fldiv@bexp 0018                         pc 0002  
            ___fldiv@sign 0011                        l81 0021                        l73 0009  
                      l74 000C                        l75 0012                        l76 0013  
                      l84 0019                        l77 0019                        l93 0045  
                      l78 001A                        l79 0020                        l87 000C  
                      l96 005C                        _GO 00FA                        l99 0032  
            ___awdiv@sign 000B                        fsr 0004       ___wmul@multiplicand 0002  
     __Umul8_16@word_mpld 0006                       l111 0086                       l105 0041  
                     l114 009E                       l123 01AB                       l140 02FF  
                     l301 00EC                       l141 0302                       l133 0249  
                     l125 021E                       l117 01A3                       l127 0241  
                     l119 01CE                       l161 0001                       l129 026C  
                     l170 0041                       l306 00EE                       l138 0301  
                     l307 0463                       l164 000B                       l158 000F  
                     l414 0065                       l342 02CA                       l272 0222  
                     l531 0066                       l380 0024                       l606 00A9  
                     l374 0659                       l711 00B7                       l279 0394  
                     l552 007A                       l544 0058                       l705 005B  
                     l801 0344                       l730 01CB                       l634 0055  
                     l378 000C                       l564 001C                       l572 0088  
                     l548 00B7                       l820 0014                       l565 0038  
                     l573 00A1                       l709 00DE                       l581 0077  
                     l549 001E                       l566 004D                       l726 01A7  
                     l718 0257                       l822 0026                       l751 0023  
                     l591 0077                       l559 00AA                       l807 02B4  
                     l736 01ED                       l761 0056                       l569 001C  
                     l577 000A                       l763 01CE                       l595 00B6  
                     l748 0257                       l588 0062                       l596 002A  
                     l684 0043                       l845 0022                       l694 0039  
                     l783 01BA                       l847 00B7                       l599 0079  
                     l777 0148                       l865 0011                       l858 0081  
                     l859 008D                       _RB0 0030                       _RB1 0031  
                     _RB2 0032                       _RA4 002C                       _RC0 0038  
                     _RB3 0033                       _RC1 0039                       _RB4 0034  
                     _RC2 003A                       _RB5 0035                       _RC3 003B  
                     _RE0 0048                       _RE1 0049                       _RE2 004A  
                     fsr0 0004                       indf 0000              ___awmod@sign 0005  
            ___flmul@aexp 0012              ___flmul@bexp 0013               _sprintf$874 0005  
            ___flmul@sign 000D              ___flmul@temp 0018              ___flmul@prod 0014  
            ___fltol@exp1 0036                      l3001 0285                      l3011 029D  
                    l3003 028E                      l3021 02CC                      l3013 02B1  
                    l3005 0294                      l3031 0307                      l3023 02D0  
                    l3007 0298                      l3103 0003                      l3041 0332  
                    l3033 0316                      l3025 02E9                      l3017 02B9  
                    l3009 0299                      l3121 019E                      l3105 0007  
                    l4001 0085                      l3051 0001                      l3211 000B  
                    l3203 009E                      l3043 0333                      l3035 0320  
                    l3019 02BE                      l3027 02EF                      l3115 0106  
                    l3107 0009                      l4011 00F0                      l4003 008A  
                    l3053 0004                      l3061 0001                      l3221 001F  
                    l3205 00AE                      l3037 0322                      l3045 0338  
                    l3029 02FC                      l3133 02CC                      l3117 010D  
                    l3109 0010                      l3125 01CF                      l4101 02D8  
                    l4021 012A                      l4013 00F8                      l4005 009D  
                    l3055 000A                      l3071 001F                      l3063 0007  
                    l3311 004C                      l3303 0000                      l3231 004A  
                    l3223 0027                      l3215 0014                      l3047 033C  
                    l3039 032E                      l3151 0010                      l3143 0001  
                    l3135 02D3                      l3127 01D6                      l4103 02DC  
                    l4111 02F5                      l4031 0170                      l4023 0132  
                    l4015 0101                      l4007 00A2                      l3057 000D  
                    l3073 0022                      l3065 000A                      l3081 0001  
                    l3305 0014                      l3321 0038                      l3241 007E  
                    l3233 005C                      l3225 0038                      l3209 0000  
                    l3161 001A                      l3145 0002                      l2601 002B  
                    l4113 02FB                      l4105 02E0                      l4041 0199  
                    l4033 017E                      l4025 013B                      l4017 0119  
                    l4009 00B1                      l3059 0016                      l3075 0028  
                    l3067 0018                      l3083 0007                      l3307 0030  
                    l3331 00A0                      l3323 003C                      l3315 0000  
                    l3403 0000                      l3411 0006                      l3251 0098  
                    l3235 006A                      l3227 003A                      l3171 0040  
                    l3155 0000                      l3147 0008                      l2611 004B  
                    l2603 002F                      l3139 0364                      l4115 0306  
                    l4107 02E4                      l4051 01C4                      l4043 01A7  
                    l4035 0184                      l4027 015F                      l4019 0121  
                    l3077 002B                      l3069 001B                      l3309 004A  
                    l3325 0060                      l3317 0014                      l3405 0004  
                    l3421 0033                      l3413 000A                      l3237 006B  
                    l3229 0041                      l3181 006A                      l3173 0042  
                    l3157 0011                      l2701 0028                      l3093 0122  
                    l3085 0003                      l3149 000E                      l2613 0052  
                    l2605 0033                      l3501 0003                      l4117 0307  
                    l4109 02EC                      l4061 0214                      l4053 01D2  
                    l4045 01AF                      l4037 0188                      l4029 0167  
                    l3079 002F                      l3327 0064                      l3319 0030  
                    l3335 0000                      l2711 0005                      l3351 0027  
                    l3343 0000                      l3271 001A                      l3263 0000  
                    l3431 004E                      l3423 0036                      l3415 001A  
                    l3247 0086                      l3239 0074                      l3183 006B  
                    l3175 0049                      l3167 002B                      l2703 002F  
                    l3095 0128                      l3087 0009                      l2607 0044  
                    l2615 0058                      l2631 000C                      l2623 0000  
                    l4151 011C                      l3511 001C                      l3503 0008  
                    l4119 030F                      l4071 0245                      l4063 0222  
                    l4055 01DA                      l4047 01B3                      l4039 0190  
                    l3329 009E                      l3337 0008                      l2801 00C9  
                    l2721 0018                      l2713 0009                      l3353 0028  
                    l3345 000B                      l3281 0013                      l3273 0020  
                    l3265 0002                      l3441 007B                      l3433 005C  
                    l3425 003A                      l3417 002A                      l3409 0001  
                    l3257 009F                      l3249 008F                      l3193 0085  
                    l3185 0073                      l3177 0052                      l3169 0031  
                    l2561 000E                      l2705 0035                      l2617 005D  
                    l2609 004A                      l2641 0025                      l2633 0010  
                    l2625 0001                      l3601 0042                      l3521 006A  
                    l3513 0030                      l3505 000E                      l4081 0270  
                    l4073 024D                      l4065 0226                      l4057 01E3  
                    l4049 01BB                      l2571 0005                      l3339 000A  
                    l2803 00D2                      l2731 002E                      l2723 0020  
                    l2715 000D                      l3355 0030                      l3291 003F  
                    l3283 001C                      l3267 0006                      l3451 00AE  
                    l3443 0085                      l3435 0065                      l3427 0043  
                    l3259 00AF                      l3195 008E                      l3187 007D  
                    l3179 0060                      l2563 001D                      l2555 0001  
                    l3099 01DB                      l2619 0062                      l2651 0044  
                    l2643 0029                      l2635 0015                      l2627 0005  
                    l3611 009B                      l3603 0051                      l3531 009C  
                    l3515 0034                      l3523 007C                      l3507 0013  
                    l4091 02AB                      l4083 0278                      l4075 0251  
                    l4067 022E                      l4059 01FC                      l2573 0010  
                    l3461 0006                      l2901 0249                      l2821 0116  
                    l2813 00F0                      l2805 00D6                      l2741 003E  
                    l2733 0034                      l2725 0021                      l2717 000E  
                    l2709 0000                      l3365 003E                      l3357 0032  
                    l3349 0014                      l3293 004D                      l3285 0020  
                    l3277 0000                      l3381 0000                      l3269 0013  
                    l3453 00AF                      l3445 008F                      l3437 006C  
                    l3429 004A                      l3197 0097                      l2565 0022  
                    l2557 0003                      l2661 0000                      l2581 0001  
                    l2645 002D                      l2637 001B                      l2653 004A  
                    l2629 000A                      l3701 0445                      l3621 0147  
                    l3605 006C                      l3541 00EA                      l3533 00B1  
                    l3525 008C                      l3517 0049                      l3509 0018  
                    l4093 02B4                      l4085 0281                      l4077 0259  
                    l4069 0237                      l2575 0017                      l3471 0029  
                    l3463 0013                      l2903 024D                      l2823 0118  
                    l2815 0107                      l2807 00E2                      l2831 012B  
                    l2743 0043                      l2751 0053                      l2735 0035  
                    l2719 0013                      l2727 0023                      l3375 0057  
                    l3367 0047                      l3359 0036                      l3295 004E  
                    l3287 0024                      l3279 0010                      l3391 001E  
                    l3383 000A                      l3447 00A5                      l3439 0077  
                    l2559 000A                      l2911 0005                      l2671 0016  
                    l2663 0002                      l2591 0015                      l2583 0005  
                    l2655 004F                      l2647 0037                      l2639 001E  
                    l3711 0467                      l3703 044D                      l3631 0194  
                    l3615 00BA                      l3607 0075                      l3551 013F  
                    l3535 00CA                      l3527 008F                      l3519 0062  
                    l4095 02C5                      l4087 0299                      l4079 0262  
                    l2577 001E                      l2569 0001                      l3457 0000  
                    l3481 0006                      l3473 0036                      l3465 0016  
                    l2905 0252                      l2841 018A                      l2833 0141  
                    l2825 011C                      l2817 010B                      l2809 00E7  
                    l2761 006D                      l2753 0061                      l2745 0048  
                    l2737 0039                      l2729 002B                      l3377 0067  
                    l3369 0050                      l3297 0057                      l3289 002D  
                    l3393 0030                      l3385 000D                      l3449 00AA  
                    l2921 0018                      l2913 0009                      l2681 0039  
                    l2673 001A                      l2665 0008                      l2593 0019  
                    l2585 000A                      l2657 0054                      l2649 003D  
                    l3713 0478                      l3721 0490                      l3705 0452  
                    l3641 01CB                      l3633 0198                      l3609 007D  
                    l3617 00C3                      l3561 0187                      l3553 0143  
                    l3545 00F0                      l3537 00D2                      l3529 0097  
                    l4089 02A3                      l4097 02CE                      l3483 000F  
                    l3475 0039                      l3467 001C                      l3459 0001  
                    l3491 0003                      l3811 001F                      l2907 0256  
                    l2851 01BD                      l2835 017F                      l2843 0199  
                    l2827 011D                      l2819 010F                      l2771 0077  
                    l2763 006F                      l2755 0065                      l2747 0050  
                    l2739 003D                      l3379 006C                      l3299 005D  
                    l3395 003E                      l3387 0016                      l2931 0033  
                    l2923 0020                      l2915 000D                      l2675 002B  
                    l2667 000B                      l2683 003F                      l2691 0009  
                    l2595 001B                      l2587 000C                      l2579 0000  
                    l3731 04B6                      l3723 049E                      l3715 047C  
                    l3707 0456                      l3651 01EB                      l3643 01D2  
                    l3635 019E                      l3627 0149                      l3619 0145  
                    l3571 01B9                      l3563 018B                      l3555 0151  
                    l3547 012D                      l3539 00E6                      l4099 02D4  
                    l3485 001D                      l3477 003F                      l3469 0023  
                    l3493 001F                      l3813 0025                      l3901 0109  
                    l3821 000D                      l2861 01D4                      l2853 01C6  
                    l2845 01AF                      l2837 0183                      l2829 0126  
                    l2781 0081                      l2773 0079                      l2765 0071  
                    l2757 0069                      l2749 0051                      l3397 0047  
                    l3389 001A                      l2941 004A                      l2933 0037  
                    l2925 0022                      l2917 000E                      l2909 0000  
                    l2677 0031                      l2669 0012                      l2693 0010  
                    l2597 0021                      l2589 0010                      l3741 0503  
                    l3717 0480                      l3725 04A2                      l3709 045C  
                    l3661 0285                      l3653 01F9                      l3645 01D9  
                    l3637 01B9                      l3581 0208                      l3573 01CC  
                    l3565 018F                      l3557 0155                      l3549 013B  
                    l3487 0023                      l3479 0000                      l3495 0025  
                    l3807 0000                      l3911 0122                      l3903 010B  
                    l3831 0021                      l3823 000E                      l3815 0000  
                    l2871 01E4                      l2863 01D9                      l2855 01CA  
                    l2847 01B4                      l2839 0185                      l2791 009F  
                    l2783 0083                      l2775 007B                      l2767 0073  
                    l2759 006B                      l3399 004D                      l2943 004C  
                    l2935 0038                      l2927 002A                      l2919 0013  
                    l2679 0032                      l2695 0014                      l2687 0000  
                    l2599 0024                      l3751 052C                      l3743 0507  
                    l3727 04A8                      l3719 0484                      l3671 029F  
                    l3655 01FE                      l3639 01BF                      l3583 0253  
                    l3575 01DF                      l3567 01A8                      l3591 0298  
                    l3559 016E                      l3489 0000                      l3497 0000  
                    l3809 0003                      l3921 0145                      l3905 0114  
                    l3913 0128                      l3841 0038                      l3825 0013  
                    l3833 0023                      l3817 0005                      l2881 0205  
                    l2873 01EA                      l2857 01CF                      l2865 01DB  
                    l2793 00BB                      l2785 0085                      l2777 007D  
                    l2769 0075                      l2961 00B9                      l2953 0067  
                    l2945 0054                      l2937 003D                      l2929 002F  
                    l2697 0018                      l2689 0006                      l3761 0553  
                    l3753 0535                      l3745 050D                      l3737 04B8  
                    l3729 04B0                      l3681 02D3                      l3673 02A5  
                    l3657 0203                      l3665 028C                      l3649 01DE  
                    l3593 02A7                      l3585 026C                      l3577 01E3  
                    l3569 01B3                      l3499 000C                      l3931 0164  
                    l3915 012C                      l3907 0118                      l3851 004C  
                    l3843 0039                      l3835 002B                      l3827 0018  
                    l3819 0009                      l2891 0235                      l2883 0209  
                    l2859 01D2                      l2867 01DF                      l2795 00C2  
                    l2779 007F                      l2787 0087                      l2971 0132  
                    l2963 00E3                      l2955 0075                      l2947 0059  
                    l2939 0042                      l2699 0022                      l3771 0585  
                    l3763 0561                      l3755 053D                      l3747 0518  
                    l3691 035A                      l3683 02D8                      l3675 02B2  
                    l3667 0294                      l3659 0246                      l3595 02EE  
                    l3587 0275                      l3579 01E9                      l3941 01AD  
                    l3933 017D                      l3925 014D                      l3917 012D  
                    l3909 0119                      l3845 003E                      l3853 004E  
                    l3837 0030                      l3829 0020                      l2893 023D  
                    l2885 0227                      l2877 01F2                      l2869 01E0  
                    l2797 00C4                      l2789 0088                      l2981 01AE  
                    l2973 014F                      l2965 00FF                      l2957 0082  
                    l2949 005E                      l3781 05A4                      l3773 0589  
                    l3765 056A                      l3757 0549                      l3749 051D  
                    l3693 039D                      l3685 02DD                      l3677 02C1  
                    l3669 029B                      l3597 0000                      l3589 0290  
                    l3951 01C4                      l3943 01B1                      l3927 0152  
                    l3935 0183                      l3919 0131                      l3871 0097  
                    l3855 005E                      l3863 0077                      l3847 0043  
                    l3839 0034                      l2895 0242                      l2879 01F7  
                    l2887 022B                      l2799 00C8                      l2991 0260  
                    l2983 01D9                      l2975 015D                      l2967 011B  
                    l2959 009D                      l3783 05B0                      l3775 058F  
                    l3767 056E                      l3759 054F                      l3695 03DC  
                    l3687 02E1                      l3679 02C6                      l3599 001B  
                    l3953 01C8                      l3945 01B9                      l3937 0190  
                    l3929 0160                      l3881 00B6                      l3873 009F  
                    l3865 007C                      l3857 006A                      l3849 004B  
                    l2897 0243                      l2889 0230                      l2993 0269  
                    l2985 01E7                      l2977 017A                      l2969 0124  
                    l3785 05B5                      l3793 061B                      l3777 0594  
                    l3769 0579                      l3697 03E2                      l3689 02FF  
                    l3961 0000                      l3947 01BE                      l3939 019E  
                    l3891 00E8                      l3883 00C8                      l3875 00A7  
                    l3859 006E                      l2899 0247                      l2995 0277  
                    l2987 0212                      l2979 0191                      l3787 05BA  
                    l3779 0598                      l3699 03E6                      l3795 0629  
                    l3971 0024                      l3963 0011                      l3949 01C2  
                    l3893 00E9                      l3885 00CC                      l3877 00AF  
                    l3869 0085                      l2997 0280                      l2989 0238  
                    l3789 0615                      l3797 0655                      l3981 0045  
                    l3973 0027                      l3965 0016                      l3895 00F7  
                    l3887 00CD                      l3879 00B1                      l2999 0284  
                    l3991 0072                      l3983 004E                      l3975 002C  
                    l3967 0019                      l3889 00D6                      l3897 00FB  
                    l3993 0076                      l3985 0056                      l3977 0034  
                    l3969 001A                      l3899 0101                      l3995 0078  
                    l3987 005F                      l3979 003D                      l3997 007D  
                    l3989 006D                      l3999 0081                      STR_1 00C0  
                    STR_2 00FA                      STR_3 0134                      STR_4 0109  
                    STR_5 0130                      STR_6 00F2                      STR_7 0116  
                    STR_8 00CD                      STR_9 011C                      u4010 00DE  
                    u4011 00DD                      u4020 00E2                      u4101 0158  
                    u4021 00E1                      u4005 00CB                      u4110 016C  
                    u4102 0159                      u4030 00E7                      u4111 016D  
                    u4103 015E                      u4031 00E6                      u4200 01E4  
                    u4120 018A                      u4112 0172                      u4104 015F  
                    u4201 01E3                      u4121 0189                      u4113 0173  
                    u4105 0164                      u4041 00F9                      u4210 01EA  
                    u4130 01AF                      u4106 0165                      u4050 010B  
                    u4042 0100                      u5010 0060                      u4211 01E9  
                    u4131 01AE                      u4051 010A                      u4043 0107  
                    u5011 005F                      u3500 0005                      u4300 0247  
                    u4220 01F1                      u4140 01B4                      u4060 010F  
                    u5100 00AE                      u3501 0004                      u4301 0246  
                    u4221 01F0                      u4141 01B3                      u4061 010E  
                    u5101 00AD                      u5005 004B                      u3510 0010  
                    u4310 0256                      u4230 01F7                      u4070 011C  
                    u5110 000B                      u5030 0079                      u3511 000F  
                    u4311 0255                      u4231 01F6                      u4071 011B  
                    u5111 000A                      u5031 0078                      u5015 005C  
                    u3520 0017                      u4240 0209                      u4160 01CA  
                    u5200 0097                      u5120 001D                      u5040 007D  
                    u4320 000D                      u3600 0044                      u6000 006C  
                    u3521 0016                      u4241 0208                      u4161 01C9  
                    u5201 0096                      u5121 001C                      u5041 007C  
                    u5025 006C                      u4401 00AB                      u4321 000C  
                    u3601 0043                      u6001 006B                      u3530 001E  
                    u4250 0218                      u4170 01CF                      u4090 0141  
                    u5210 009E                      u5050 0084                      u4402 00B2  
                    u4330 0013                      u3531 001D                      u4171 01CE  
                    u4155 01BF                      u4091 0140                      u5211 009D  
                    u5051 0083                      u4411 00C7                      u4403 00B9  
                    u4331 0012                      u4260 0227                      u4180 01D9  
                    u5300 0024                      u5140 005C                      u4412 00CE  
                    u4340 0018                      u3620 0058                      u3540 0005  
                    u6100 02B2                      u6020 0193                      u4261 0226  
                    u4181 01D8                      u4093 013D                      u4085 011F  
                    u5301 0023                      u5141 005B                      u4501 01F6  
                    u4421 00F1                      u4413 00D5                      u4341 0017  
                    u3621 0057                      u3605 0040                      u3541 0004  
                    u6101 02B1                      u6021 0192                      u4270 0230  
                    u4190 01DF                      u5230 00AF                      u5070 0096  
                    u3470 000E                      u4510 021E                      u4502 01FD  
                    u4422 00F8                      u4350 0037                      u3630 005D  
                    u3550 0010                      u3710 004A                      u6110 02C1  
                    u6030 019E                      u4271 022F                      u4255 0213  
                    u4191 01DE                      u5231 00AE                      u5135 0043  
                    u5071 0095                      u3471 000D                      u4503 0204  
                    u4431 010D                      u4423 00FF                      u4351 0036  
                    u3631 005C                      u3615 004C                      u3551 000F  
                    u3711 0049                      u6111 02C0                      u6031 019D  
                    u6015 014C                      u5400 003C                      u4280 0235  
                    u5320 003F                      u5240 0006                      u5160 007A  
                    u5080 009D                      u4600 029D                      u4432 0114  
                    u4360 003D                      u3800 0006                      u3560 0021  
                    u3720 004F                      u3640 0005                      u6200 04B0  
                    u6120 02D8                      u6040 01B9                      u5401 003B  
                    u4281 0234                      u5321 003E                      u5241 0005  
                    u5225 00A1                      u5161 0079                      u5145 0058  
                    u5081 009C                      u5065 0086                      u4601 029C  
                    u4521 022A                      u4433 011B                      u4361 003C  
                    u3801 0005                      u3561 0020                      u3721 004E  
                    u3705 003E                      u3641 0004                      u6201 04AF  
                    u6121 02D7                      u6105 02AE                      u6041 01B8  
                    u6025 018F                      u4290 0242                      u5170 007E  
                    u3490 0022                      u4610 02B1                      u4530 0246  
                    u4522 0231                      u4370 0042                      u3730 0008  
                    u3650 0010                      u6050 01CB                      u5411 004B  
                    u4291 0241                      u5315 0026                      u5171 007D  
                    u5155 006D                      u3491 0021                      u4611 02B0  
                    u4523 0238                      u4515 0219                      u4451 0141  
                    u4371 0041                      u3731 0007                      u3651 000F  
                    u6115 02BD                      u6051 01CA                      u4700 0007  
                    u5420 0064                      u5412 004C                      u3900 003D  
                    u5340 005D                      u5180 0085                      u4620 02B8  
                    u4452 0148                      u4380 0059                      u3820 0018  
                    u3580 0033                      u3660 001B                      u6300 0579  
                    u6220 0502                      u6060 01EB                      u4701 0006  
                    u5421 0063                      u5413 0051                      u3901 003C  
                    u5341 005C                      u5325 003B                      u5181 0084  
                    u3485 0015                      u4621 02B7                      u4541 0252  
                    u4461 016C                      u4453 014F                      u4445 011D  
                    u4381 0058                      u3821 0017                      u3581 0032  
                    u3661 001A                      u6301 0578                      u6221 0501  
                    u6061 01EA                      u5350 0014                      u5414 0052  
                    u3910 0043                      u5510 004F                      u5270 0020  
                    u4630 02BE                      u4542 0259                      u4462 0173  
                    u4390 005E                      u3750 001A                      u3830 0022  
                    u4710 0009                      u6310 058F                      u6230 050D  
                    u6150 044C                      u6070 01F9                      u7007 0027  
                    u5351 0013                      u5431 0073                      u5415 0057  
                    u3911 0042                      u5511 004E                      u5335 004F  
                    u5271 001F                      u5255 000D                      u5095 00A0  
                    u4631 02BD                      u4543 0260                      u4535 0241  
                    u4463 017A                      u4391 005D                      u3751 0019  
                    u3831 0021                      u3815 000A                      u4711 0008  
                    u3575 0025                      u6311 058E                      u6231 050C  
                    u6215 04BB                      u6151 044B                      u6135 035D  
                    u6071 01F8                      u6400 000D                      u5360 0030  
                    u5440 009E                      u5432 0074                      u5416 0058  
                    u3920 0048                      u5520 0056                      u5280 0010  
                    u4640 02D0                      u3680 002D                      u4800 0010  
                    u6320 05A4                      u6240 0518                      u6160 0462  
                    u7017 0011                      u6401 000C                      u5361 002F  
                    u5441 009D                      u5433 0079                      u3921 0047  
                    u5521 0055                      u5505 003F                      u5281 000F  
                    u5265 0014                      u4641 02CF                      u4481 01A0  
                    u3745 000C                      u3681 002C                      u4801 000F  
                    u6321 05A3                      u6305 0575                      u6241 0517  
                    u6225 04FE                      u6161 0461                      u6145 03E9  
                    u6065 01E7                      u6410 0013                      u5370 004A  
                    u5434 007A                      u5450 0008                      u3930 0061  
                    u5610 004D                      u4650 02DF                      u4570 0284  
                    u4482 01A7                      u3770 002B                      u3850 0035  
                    u3690 0037                      u6330 05B0                      u6250 052C  
                    u6170 0467                      u6090 0293                      u6411 0012  
                    u5371 0049                      u5435 007F                      u5451 0007  
                    u3931 0060                      u5611 004C                      u5195 0087  
                    u4571 0283                      u4555 0262                      u4491 01CB  
                    u4483 01AE                      u4475 017C                      u3771 002A  
                    u3851 0034                      u3835 001E                      u3595 0034  
                    u3691 0036                      u3675 001F                      u6331 05AF  
                    u6251 052B                      u6171 0466                      u6091 0292  
                    u6420 0018                      u5436 0080                      u5380 0014  
                    u3940 0065                      u3860 000D                      u5540 0067  
                    u5460 000B                      u5700 007B                      u5620 0006  
                    u4660 02FC                      u4492 01D2                      u6260 053D  
                    u6180 0480                      u6421 0017                      u5445 009A  
                    u5381 0013                      u3941 0064                      u3861 000C  
                    u5541 0066                      u5461 000A                      u5605 003F  
                    u5701 007A                      u5621 0005                      u4661 02FB  
                    u4565 0279                      u4493 01D9                      u3765 001B  
                    u3845 0029                      u4725 0026                      u6261 053C  
                    u6245 0514                      u6181 047F                      u6085 0206  
                    u6510 00CC                      u6430 0038                      u5390 0030  
                    u3950 009F                      u3870 0013                      u5550 006C  
                    u5470 0022                      u5710 0081                      u5630 000A  
                    u4670 0316                      u4590 0298                      u3790 003F  
                    u4750 0128                      u6350 0629                      u6270 0549  
                    u6190 04A8                      u6511 00CB                      u6431 0037  
                    u5375 0046                      u5391 002F                      u3951 009E  
                    u3871 0012                      u5551 006B                      u5535 0059  
                    u5295 0015                      u5711 0080                      u5631 0009  
                    u4671 0315                      u4655 02DA                      u4591 0297  
                    u3791 003E                      u3775 0027                      u4751 0127  
                    u4735 0084                      u3695 0033                      u4815 0030  
                    u6351 0628                      u6271 0548                      u6255 0528  
                    u6191 04A7                      u5800 000D                      u6600 0131  
                    u6440 003E                      u3960 00AA                      u3880 0018  
                    u5480 0036                      u5560 000A                      u5720 0085  
                    u5640 002A                      u4680 0332                      u4920 02D3  
                    u4840 010D                      u6360 0655                      u6280 0553  
                    u6601 0130                      u6505 00C1                      u6441 003D  
                    u3961 00A8                      u3881 0017                      u5481 0035  
                    u5561 0009                      u5721 0084                      u5641 0029  
                    u4681 0331                      u4665 02F8                      u4585 0287  
                    u3785 0033                      u4745 00DD                      u4921 02D2  
                    u4905 0237                      u4841 010C                      u4825 0071  
                    u6361 0652                      u6345 05C9                      u6281 0552  
                    u5810 002F                      u6370 000D                      u6610 0145  
                    u6530 00E8                      u6450 0043                      u3970 00AB  
                    u3890 0034                      u5490 003D                      u5730 009A  
                    u6290 0561                      u6611 0144                      u6531 00E7  
                    u6451 0042                      u3955 009B                      u3891 0033  
                    u5491 003C                      u5475 001D                      u4675 0312  
                    u4915 0287                      u4835 00C1                      u6291 0560  
                    u5820 0041                      u6380 002F                      u6620 014C  
                    u6540 0101                      u6460 005E                      u3980 00BB  
                    u5580 001E                      u5740 00AA                      u5660 0049  
                    u5900 016E                      u6700 00A2                      u5821 0040  
                    u6621 014B                      u6541 0100                      u6525 00CF  
                    u6461 005D                      u3981 00BA                      u5581 001D  
                    u5741 00A9                      u5661 0048                      u4765 0145  
                    u5901 016D                      u6701 00A1                      u6390 0041  
                    u6630 0152                      u6550 0109                      u6470 007C  
                    u3990 00C8                      u5590 0030                      u5750 00AE  
                    u4790 0007                      u5910 01A8                      u5830 000E  
                    u6710 0184                      u4695 000D                      u6391 0040  
                    u6631 0151                      u6551 0108                      u6535 00E4  
                    u6471 007B                      u3991 00C7                      u5591 002F  
                    u5575 000F                      u5751 00AD                      u5735 0095  
                    u5655 003B                      u4775 0196                      u4935 02E6  
                    u4855 0120                      u4791 0006                      u6295 055D  
                    u5911 01A7                      u5831 000D                      u6711 0183  
                    u5760 0006                      u6640 0164                      u6480 00B6  
                    u5680 006B                      u4960 0008                      u4880 01D6  
                    u5920 01E3                      u5840 0030                      u6800 0245  
                    u6720 0188                      u5761 0005                      u6641 0163  
                    u6481 00B5                      u5681 006A                      u4785 01E6  
                    u4961 0007                      u4945 0326                      u4881 01D5  
                    u4865 0160                      u5921 01E2                      u5841 002F  
                    u6801 0244                      u6721 0187                      u6650 0173  
                    u6570 0118                      u4970 000E                      u5930 026C  
                    u5850 007C                      u6810 0249                      u6730 01A7  
                    u6571 0117                      u5595 002C                      u5675 005D  
                    u4971 000D                      u4955 0367                      u4875 01A1  
                    u5931 026B                      u5851 007B                      u6811 0248  
                    u6731 01A6                      u5780 0029                      u6660 0190  
                    u4980 0011                      u5940 0290                      u5860 008C  
                    u6900 02FB                      u6820 024D                      u6740 01AB  
                    u5781 0028                      u6661 018F                      u6565 010D  
                    u4981 0010                      u5941 028F                      u5861 008B  
                    u6901 02FA                      u6821 024C                      u6741 01AA  
                    u6670 01AD                      u6590 012C                      u4990 0029  
                    u5950 02A7                      u5870 00E5                      u6910 02FF  
                    u6830 0251                      u6750 01AF                      u5775 000C  
                    u6671 01AC                      u6655 016E                      u6591 012B  
                    u6495 00B8                      u5695 0070                      u4991 0028  
                    u4895 01F6                      u5951 02A6                      u5871 00E4  
                    u6911 02FE                      u6831 0250                      u6751 01AE  
                    u6680 01C2                      u5960 0000                      u5880 013B  
                    u6920 0306                      u6840 0270                      u6760 01B3  
                    u6681 01C1                      u6665 018C                      u6585 011B  
                    u5961 02FE                      u5881 0138                      u6921 0305  
                    u6841 026F                      u6761 01B2                      u5970 001B  
                    u5890 013F                      u6850 02D4                      u6770 01D2  
                    u6690 008A                      u5795 002F                      u6675 01A9  
                    u5971 001A                      u5955 02A3                      u5891 013E  
                    u6851 02D3                      u6771 01D1                      u6691 0089  
                    u5980 0042                      u6860 02D8                      u6780 0222  
                    u5981 0041                      u5965 02F9                      u6861 02D7  
                    u6781 0221                      u5990 0051                      u6870 02DC  
                    u6790 0226                      u5991 0050                      u6871 02DB  
                    u6791 0225                      u6880 02E0                      u6881 02DF  
                    u6937 0020                      u6890 02E4                      u5995 004D  
                    u6891 02E3                      u6947 0067                      u6957 0178  
                    u6967 001D                      u6977 002D                      u6987 000A  
                    u6997 0019                      _TRMT 04C1         ?_Lcd_Write_String 0005  
                    _main 0000                      btemp 007E                      start 0000* 
      ??_Lcd_Write_String 0007           ___fldiv@new_exp 0012           __end_of_Lcd_Cmd 001A  
 __end_of_UART_Write_Text 0042          ?_UART_Initialize 0000             ___fltol@sign1 0035  
            main@floatVal 0028           __end_of___fladd 0258                     ?_main 0000  
         __end_of___fldiv 01CF           __end_of___awdiv 0067           __end_of___flneg 000B  
                   STR_10 00E1                     STR_11 00EA                     STR_20 012B  
                   STR_12 0121                     STR_21 011C                     STR_13 0110  
                   STR_14 00D7                     STR_22 00A2                     STR_15 011C  
                   STR_23 00A2                     STR_16 00E1                     STR_24 00B1  
                   STR_17 0102                     STR_18 0126                     STR_19 0110  
         __end_of___awmod 0059           __end_of___flmul 0345           __end_of___flsub 0024  
         __end_of___fltol 0078           __end_of___lldiv 0066           ___awdiv@divisor 0006  
         __end_of___llmod 0056           __end_of___lwdiv 0044           __end_of___lwmod 003A  
         ___awdiv@counter 000A                     _RCSTA 0018                     _SPBRG 0099  
                   _TXREG 0019                     _TXSTA 0098               ?_UART_Write 0000  
         __end_of_dpowers 00A2                     _scale 0000           __end_of_isdigit 0012  
           main@adcValue1 002C             main@adcValue2 002E                     pclath 000A  
                   status 0003                     wtemp0 007E           __end_of_sprintf 065A  
        __end_of_Lcd_Init 005D          __end_of_Lcd_Port 0022           __initialization 0000  
            __end_of_main 031C                    ??_main 0020                    _ADCON0 001F  
                  _ADCON1 009F          ___llmod@dividend 0004                    ?_scale 001A  
                  _ADRESH 001E          ___awdiv@dividend 0008                 ??_Lcd_Cmd 0001  
                  _TRISA1 0429                    _TRISA4 042C                    _TRISC0 0438  
                  _TRISC1 0439                    _TRISC2 043A                    _TRISC3 043B  
                  _TRISE0 0448                    _TRISE1 0449                    _TRISE2 044A  
                  _TRISC6 043E                    _TRISC7 043F          __end_of___xxtofl 00B8  
        __end_of__powers_ 0046                    ___flge 0000                    ___fleq 0000  
               ??___fladd 0036                    ___wmul 0000                 ??___fldiv 0008  
               ??___awdiv 000A                 ??___flneg 0004                 ??___awmod 0004  
               ??___flmul 0008          ?_UART_Write_Text 0001                 ??___flsub 000E  
               ??___fltol 0031                 ??___lldiv 0008                 ??___llmod 0008  
               ??___lwdiv 0009                 ??___lwmod 0004                    _fround 0000  
        ___awdiv@quotient 000C           ___awmod@divisor 0000           ___awmod@counter 0004  
               ??_isdigit 0000            main@adcString1 0032            main@adcString2 0036  
               ??_sprintf 0000           Lcd_Set_Cursor@a 0006           Lcd_Set_Cursor@b 0004  
         Lcd_Set_Cursor@y 0008           Lcd_Set_Cursor@z 0007                ___flge@ff1 0000  
              ___flge@ff2 0004              ___xxtofl@arg 000A              ___xxtofl@exp 0009  
            ___xxtofl@val 0000                ___fleq@ff1 0000                ___fleq@ff2 0004  
 __end_of__initialization 0000                ___flneg@f1 0000         __end_of_Lcd_Clear 000D  
              ___fltol@f1 002D            __pcstackCOMMON 0000             __end_of_scale 0395  
          _Lcd_Set_Cursor 0000                __div_to_l_ 0000                 ?_Lcd_Init 0000  
               ?_Lcd_Port 0000           __div_to_l_@exp1 0005           __div_to_l_@cntr 0004  
                 ??_scale 001E           __div_to_l_@quot 0000              sprintf@width 000C  
        main@combinedText 0000             __div_to_l_@f1 0000             __div_to_l_@f2 0004  
       __end_of__Umul8_16 0027                __pmaintext 0000                   ?___flge 0000  
                 ?___fleq 0000                   ?___wmul 0000                   ?_fround 001A  
  __end_of_Lcd_Set_Cursor 0046          main@displayValue 003A                 ?___xxtofl 0000  
            ??_UART_Write 0000                ??_Lcd_Init 0004                ??_Lcd_Port 0000  
              __stringtab 0000            _Lcd_Write_Char 0000                   _Lcd_Cmd 0000  
       __end_of__npowers_ 007A                   ___fladd 0000                   ___fldiv 0000  
                 ___awdiv 0000                   ___flneg 0000                   ___awmod 0000  
                 ___flmul 0000                   ___flsub 0000                   ___fltol 0000  
                 ___lldiv 0000        __end_of_UART_Write 000C                   ___llmod 0000  
                 ___lwdiv 0000                _fround$871 0029                _fround$872 0025  
                 ___lwmod 0000           ?_Lcd_Set_Cursor 0004                   __ptext1 0000  
                 __ptext2 0000                   __ptext3 0000                   __ptext4 0000  
                 __ptext5 0000                   __ptext6 0000                   __ptext7 0000  
                 __ptext8 0000                   __ptext9 0000               ?__div_to_l_ 0000  
                 _dpowers 007A                   _isdigit 0000                ??___xxtofl 0004  
        ___awmod@dividend 0002                   _sprintf 0000    __end_of_Lcd_Write_Char 0033  
    end_of_initialization 0000           ___lldiv@divisor 0000           ___lldiv@counter 000D  
                 psplit$0 9002B                 Lcd_Port@a 0000              __pstringtext 0000  
          __tdiv_to_l_@f1 0000            __tdiv_to_l_@f2 0004             ??__tdiv_to_l_ 0008  
          UART_Write@data 0000               ___fladd@grs 0041             ___xxtofl@sign 0008  
               _TRISBbits 0086               ___fldiv@grs 0014               ___fldiv@rem 000D  
         ?_Lcd_Write_Char 0000         Lcd_Write_String@a 0005         Lcd_Write_String@i 000A  
             ___flmul@grs 000E                 _Lcd_Clear 0000            __end_of___flge 00A2  
          __end_of___fleq 004E            __end_of___wmul 0025          _Lcd_Write_String 0000  
       pnum$text1_split_1 002B            __end_of_fround 0223       start_initialization 0000  
     __end_of__tdiv_to_l_ 00B7         ??_UART_Initialize 0000           ___llmod@divisor 0000  
         ___llmod@counter 0009                ?_Lcd_Clear 0000                  ??___flge 0008  
                ??___fleq 0008                  ??___wmul 0004                 __Umul8_16 0000  
         Lcd_Write_Char@a 0004           Lcd_Write_Char@y 0003                  ??_fround 001E  
           sprintf@tmpval 000E                 ___fladd@a 0032                 ___fladd@b 002E  
              fround@prec 002D                 ___fldiv@a 0000                 ___fldiv@b 0004  
               ___flmul@a 0004                 ___flmul@b 0000                 ___flsub@a 0042  
               ___flsub@b 0046                 ___latbits 0002             __pcstackBANK0 0000  
           __pcstackBANK1 0000             __pcstackBANK3 0000                  ?_Lcd_Cmd 0000  
             sprintf@flag 000A               sprintf@eexp 0016               sprintf@fval 0018  
             sprintf@prec 001D          ___lwdiv@dividend 0007  main@negativeDisplayValue 0030  
        ??_Lcd_Set_Cursor 0005                  ?___fladd 002E                  ?___fldiv 0000  
                ?___awdiv 0006                  ?___flneg 0000                  ?___awmod 0000  
                ?___flmul 0000                  ?___flsub 0042                  ?___fltol 002D  
                ?___lldiv 0000                  ?___llmod 0000                 __npowers_ 0046  
              ?__Umul8_16 0000                  ?___lwdiv 0005                  ?___lwmod 0000  
             __tdiv_to_l_ 0000              ??__div_to_l_ 0008                  ?_isdigit 0000  
               _scale$873 0028          ___lwdiv@quotient 0009                  ?_sprintf 004A  
       ??_UART_Write_Text 0003            ___wmul@product 0004                  Lcd_Cmd@a 0003  
      __end_of__div_to_l_ 00B8               ??_Lcd_Clear 0004               __stringbase 0012  
       ___wmul@multiplier 0000          ??_Lcd_Write_Char 0001                  _Lcd_Init 0000  
                _Lcd_Port 0000  __end_of_Lcd_Write_String 0042               ??__Umul8_16 0002  
      __end_of__stringtab 0012               _isdigit$689 0000           _UART_Initialize 0000  
              sprintf@val 0012                  ___xxtofl 0000           ___lwdiv@divisor 0005  
         ___lwdiv@counter 000B                  __ptext10 0000                  __ptext11 0000  
                __ptext20 0000                  __ptext12 0000                  __ptext21 0000  
                __ptext13 0000                  __ptext30 0000                  __ptext22 0000  
                __ptext14 0000                  __ptext31 0000                  __ptext23 0000  
                __ptext15 0000                  __ptext32 0000                  __ptext24 0000  
                __ptext16 0000                  __ptext33 0000                  __ptext25 0000  
                __ptext17 0000                  __ptext26 0000                  __ptext18 0000  
                __ptext27 0000                  __ptext19 0000                  __ptext28 0000  
                __ptext29 0000                  __powers_ 0012       UART_Write_Text@text 0001  
               pnum$text1 0009                  isdigit@c 0001                  scale@scl 002C  
      Lcd_Write_Char@temp 0002                 sprintf@ap 0009          __tdiv_to_l_@exp1 0005  
        __tdiv_to_l_@cntr 0004                 sprintf@sp 001C          __tdiv_to_l_@quot 0000  
        ___lwmod@dividend 0002          ___lldiv@dividend 0004                 stringcode 000A  
 __end_of_UART_Initialize 0010        Lcd_Set_Cursor@temp 0009      main@combinedText_160 0014  
            ?__tdiv_to_l_ 0000    __Umul8_16@multiplicand 0000           _UART_Write_Text 0000  
                sprintf@c 001F                  sprintf@f 004A          ___lldiv@quotient 0009  
         ___lwmod@divisor 0000           ___lwmod@counter 0004                  stringtab 0000  
              _UART_Write 0000             ___fladd@signs 003E          UART_Write_Text@i 0006  
            ___fladd@aexp 003F              ___fladd@bexp 0040      __Umul8_16@multiplier 0008  
       __Umul8_16@product 0004  
