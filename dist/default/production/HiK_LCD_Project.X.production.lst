

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sun Sep 17 21:23:37 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK3,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,noexec
     9                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=3
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	intentry,global,class=CODE,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    40                           	psect	maintext_split_1,global,class=CODE,split=1,delta=2
    41                           	psect	maintext_split_2,global,class=CODE,split=1,delta=2
    42                           	psect	maintext_split_3,global,class=CODE,split=1,delta=2
    43                           	dabs	1,0x7E,2
    44     0000                     
    45                           ; Generated 22/03/2023 GMT
    46                           ; 
    47                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution. Publication is not required when
    61                           ;        this file is used in an embedded application.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC16F877A Definitions
    77                           ; 
    78                           ; SFR Addresses
    79     0000                     	;# 
    80     0001                     	;# 
    81     0002                     	;# 
    82     0003                     	;# 
    83     0004                     	;# 
    84     0005                     	;# 
    85     0006                     	;# 
    86     0007                     	;# 
    87     0008                     	;# 
    88     0009                     	;# 
    89     000A                     	;# 
    90     000B                     	;# 
    91     000C                     	;# 
    92     000D                     	;# 
    93     000E                     	;# 
    94     000E                     	;# 
    95     000F                     	;# 
    96     0010                     	;# 
    97     0011                     	;# 
    98     0012                     	;# 
    99     0013                     	;# 
   100     0014                     	;# 
   101     0015                     	;# 
   102     0015                     	;# 
   103     0016                     	;# 
   104     0017                     	;# 
   105     0018                     	;# 
   106     0019                     	;# 
   107     001A                     	;# 
   108     001B                     	;# 
   109     001B                     	;# 
   110     001C                     	;# 
   111     001D                     	;# 
   112     001E                     	;# 
   113     001F                     	;# 
   114     0081                     	;# 
   115     0085                     	;# 
   116     0086                     	;# 
   117     0087                     	;# 
   118     0088                     	;# 
   119     0089                     	;# 
   120     008C                     	;# 
   121     008D                     	;# 
   122     008E                     	;# 
   123     0091                     	;# 
   124     0092                     	;# 
   125     0093                     	;# 
   126     0094                     	;# 
   127     0098                     	;# 
   128     0099                     	;# 
   129     009C                     	;# 
   130     009D                     	;# 
   131     009E                     	;# 
   132     009F                     	;# 
   133     010C                     	;# 
   134     010D                     	;# 
   135     010E                     	;# 
   136     010F                     	;# 
   137     018C                     	;# 
   138     018D                     	;# 
   139     0000                     	;# 
   140     0001                     	;# 
   141     0002                     	;# 
   142     0003                     	;# 
   143     0004                     	;# 
   144     0005                     	;# 
   145     0006                     	;# 
   146     0007                     	;# 
   147     0008                     	;# 
   148     0009                     	;# 
   149     000A                     	;# 
   150     000B                     	;# 
   151     000C                     	;# 
   152     000D                     	;# 
   153     000E                     	;# 
   154     000E                     	;# 
   155     000F                     	;# 
   156     0010                     	;# 
   157     0011                     	;# 
   158     0012                     	;# 
   159     0013                     	;# 
   160     0014                     	;# 
   161     0015                     	;# 
   162     0015                     	;# 
   163     0016                     	;# 
   164     0017                     	;# 
   165     0018                     	;# 
   166     0019                     	;# 
   167     001A                     	;# 
   168     001B                     	;# 
   169     001B                     	;# 
   170     001C                     	;# 
   171     001D                     	;# 
   172     001E                     	;# 
   173     001F                     	;# 
   174     0081                     	;# 
   175     0085                     	;# 
   176     0086                     	;# 
   177     0087                     	;# 
   178     0088                     	;# 
   179     0089                     	;# 
   180     008C                     	;# 
   181     008D                     	;# 
   182     008E                     	;# 
   183     0091                     	;# 
   184     0092                     	;# 
   185     0093                     	;# 
   186     0094                     	;# 
   187     0098                     	;# 
   188     0099                     	;# 
   189     009C                     	;# 
   190     009D                     	;# 
   191     009E                     	;# 
   192     009F                     	;# 
   193     010C                     	;# 
   194     010D                     	;# 
   195     010E                     	;# 
   196     010F                     	;# 
   197     018C                     	;# 
   198     018D                     	;# 
   199     0000                     	;# 
   200     0001                     	;# 
   201     0002                     	;# 
   202     0003                     	;# 
   203     0004                     	;# 
   204     0005                     	;# 
   205     0006                     	;# 
   206     0007                     	;# 
   207     0008                     	;# 
   208     0009                     	;# 
   209     000A                     	;# 
   210     000B                     	;# 
   211     000C                     	;# 
   212     000D                     	;# 
   213     000E                     	;# 
   214     000E                     	;# 
   215     000F                     	;# 
   216     0010                     	;# 
   217     0011                     	;# 
   218     0012                     	;# 
   219     0013                     	;# 
   220     0014                     	;# 
   221     0015                     	;# 
   222     0015                     	;# 
   223     0016                     	;# 
   224     0017                     	;# 
   225     0018                     	;# 
   226     0019                     	;# 
   227     001A                     	;# 
   228     001B                     	;# 
   229     001B                     	;# 
   230     001C                     	;# 
   231     001D                     	;# 
   232     001E                     	;# 
   233     001F                     	;# 
   234     0081                     	;# 
   235     0085                     	;# 
   236     0086                     	;# 
   237     0087                     	;# 
   238     0088                     	;# 
   239     0089                     	;# 
   240     008C                     	;# 
   241     008D                     	;# 
   242     008E                     	;# 
   243     0091                     	;# 
   244     0092                     	;# 
   245     0093                     	;# 
   246     0094                     	;# 
   247     0098                     	;# 
   248     0099                     	;# 
   249     009C                     	;# 
   250     009D                     	;# 
   251     009E                     	;# 
   252     009F                     	;# 
   253     010C                     	;# 
   254     010D                     	;# 
   255     010E                     	;# 
   256     010F                     	;# 
   257     018C                     	;# 
   258     018D                     	;# 
   259                           
   260                           	psect	idataBANK3
   261     11D1                     __pidataBANK3:
   262                           
   263                           ;initializer for _currentTime
   264     11D1  34F4               	retlw	244
   265     11D2  3401               	retlw	1
   266     11D3  3400               	retlw	0
   267     11D4  3400               	retlw	0
   268     11D5  3400               	retlw	0
   269     11D6  3400               	retlw	0
   270                           
   271                           	psect	stringtext
   272     1800                     __pstringtext:
   273     1800                     stringtab:
   274     1800                     __stringtab:
   275                           
   276                           ;	String table - string pointers are 2 bytes each
   277     1800  1BFF               	btfsc	btemp+1,7
   278     1801  280A               	ljmp	stringcode
   279     1802  1383               	bcf	3,7
   280     1803  187F               	btfsc	btemp+1,0
   281     1804  1783               	bsf	3,7
   282     1805  0800               	movf	0,w
   283     1806  0A84               	incf	4,f
   284     1807  1903               	skipnz
   285     1808  0AFF               	incf	btemp+1,f
   286     1809  0008               	return
   287     180A                     stringcode:
   288     180A  087F               	movf	btemp+1,w
   289     180B  397F               	andlw	127
   290     180C  008A               	movwf	10
   291     180D  0804               	movf	4,w
   292     180E  0A84               	incf	4,f
   293     180F  1903               	skipnz
   294     1810  0AFF               	incf	btemp+1,f
   295     1811  0082               	movwf	2
   296     1812                     __stringbase:
   297     1812                     __end_of__stringtab:
   298     1812                     _dpowers:
   299     1812  3401               	retlw	1
   300     1813  3400               	retlw	0
   301     1814  340A               	retlw	10
   302     1815  3400               	retlw	0
   303     1816  3464               	retlw	100
   304     1817  3400               	retlw	0
   305     1818  34E8               	retlw	232
   306     1819  3403               	retlw	3
   307     181A  3410               	retlw	16
   308     181B  3427               	retlw	39
   309     181C                     __end_of_dpowers:
   310     0019                     _TXREG	set	25
   311     0018                     _RCSTA	set	24
   312     001E                     _ADRESH	set	30
   313     001F                     _ADCON0bits	set	31
   314     000B                     _INTCONbits	set	11
   315     0001                     _TMR0	set	1
   316     0040                     _RD0	set	64
   317     003B                     _RC3	set	59
   318     0049                     _RE1	set	73
   319     0038                     _RC0	set	56
   320     003A                     _RC2	set	58
   321     0048                     _RE0	set	72
   322     004A                     _RE2	set	74
   323     0039                     _RC1	set	57
   324     002C                     _RA4	set	44
   325     005A                     _T0IF	set	90
   326     005F                     _GIE	set	95
   327     0034                     _RB4	set	52
   328     0035                     _RB5	set	53
   329     0030                     _RB0	set	48
   330     0031                     _RB1	set	49
   331     0032                     _RB2	set	50
   332     0033                     _RB3	set	51
   333     0098                     _TXSTA	set	152
   334     009E                     _ADRESL	set	158
   335     009F                     _ADCON1bits	set	159
   336     0099                     _SPBRG	set	153
   337     0081                     _OPTION_REGbits	set	129
   338     0088                     _TRISD	set	136
   339     0086                     _TRISB	set	134
   340     04C1                     _TRMT	set	1217
   341     043D                     _TRISC5	set	1085
   342     043C                     _TRISC4	set	1084
   343     042D                     _TRISA5	set	1069
   344     0428                     _TRISA0	set	1064
   345     043F                     _TRISC7	set	1087
   346     043E                     _TRISC6	set	1086
   347     042B                     _TRISA3	set	1067
   348     042A                     _TRISA2	set	1066
   349     0429                     _TRISA1	set	1065
   350     0440                     _TRISD0	set	1088
   351     043B                     _TRISC3	set	1083
   352     0438                     _TRISC0	set	1080
   353     044A                     _TRISE2	set	1098
   354     043A                     _TRISC2	set	1082
   355     0439                     _TRISC1	set	1081
   356     0449                     _TRISE1	set	1097
   357     0448                     _TRISE0	set	1096
   358     042C                     _TRISA4	set	1068
   359     010C                     _EEDATA	set	268
   360     010D                     _EEADR	set	269
   361     018D                     _EECON2	set	397
   362     0C60                     _RD	set	3168
   363     0C61                     _WR	set	3169
   364     0C62                     _WREN	set	3170
   365     181C                     STR_39:
   366     181C  3420               	retlw	32	;' '
   367     181D  3420               	retlw	32	;' '
   368     181E  3420               	retlw	32	;' '
   369     181F  3449               	retlw	73	;'I'
   370     1820  344C               	retlw	76	;'L'
   371     1821  3445               	retlw	69	;'E'
   372     1822  3452               	retlw	82	;'R'
   373     1823  344C               	retlw	76	;'L'
   374     1824  3445               	retlw	69	;'E'
   375     1825  344D               	retlw	77	;'M'
   376     1826  3445               	retlw	69	;'E'
   377     1827  3420               	retlw	32	;' '
   378     1828  3448               	retlw	72	;'H'
   379     1829  3441               	retlw	65	;'A'
   380     182A  3454               	retlw	84	;'T'
   381     182B  3441               	retlw	65	;'A'
   382     182C  3453               	retlw	83	;'S'
   383     182D  3449               	retlw	73	;'I'
   384     182E  3420               	retlw	32	;' '
   385     182F  3420               	retlw	32	;' '
   386     1830  3420               	retlw	32	;' '
   387     1831  3420               	retlw	32	;' '
   388     1832  3420               	retlw	32	;' '
   389     1833  3420               	retlw	32	;' '
   390     1834  3420               	retlw	32	;' '
   391     1835  3420               	retlw	32	;' '
   392     1836  3400               	retlw	0
   393     1837                     STR_38:
   394     1837  3420               	retlw	32	;' '
   395     1838  3420               	retlw	32	;' '
   396     1839  3420               	retlw	32	;' '
   397     183A  3446               	retlw	70	;'F'
   398     183B  3445               	retlw	69	;'E'
   399     183C  3445               	retlw	69	;'E'
   400     183D  3444               	retlw	68	;'D'
   401     183E  3420               	retlw	32	;' '
   402     183F  3452               	retlw	82	;'R'
   403     1840  3441               	retlw	65	;'A'
   404     1841  3454               	retlw	84	;'T'
   405     1842  3445               	retlw	69	;'E'
   406     1843  3420               	retlw	32	;' '
   407     1844  3445               	retlw	69	;'E'
   408     1845  3452               	retlw	82	;'R'
   409     1846  3452               	retlw	82	;'R'
   410     1847  344F               	retlw	79	;'O'
   411     1848  3452               	retlw	82	;'R'
   412     1849  3420               	retlw	32	;' '
   413     184A  3420               	retlw	32	;' '
   414     184B  3420               	retlw	32	;' '
   415     184C  3420               	retlw	32	;' '
   416     184D  3420               	retlw	32	;' '
   417     184E  3420               	retlw	32	;' '
   418     184F  3420               	retlw	32	;' '
   419     1850  3400               	retlw	0
   420     1851                     STR_43:
   421     1851  3420               	retlw	32	;' '
   422     1852  3420               	retlw	32	;' '
   423     1853  3420               	retlw	32	;' '
   424     1854  3444               	retlw	68	;'D'
   425     1855  344F               	retlw	79	;'O'
   426     1856  344E               	retlw	78	;'N'
   427     1857  344D               	retlw	77	;'M'
   428     1858  3445               	retlw	69	;'E'
   429     1859  3420               	retlw	32	;' '
   430     185A  3448               	retlw	72	;'H'
   431     185B  3441               	retlw	65	;'A'
   432     185C  3454               	retlw	84	;'T'
   433     185D  3441               	retlw	65	;'A'
   434     185E  3453               	retlw	83	;'S'
   435     185F  3449               	retlw	73	;'I'
   436     1860  3420               	retlw	32	;' '
   437     1861  3420               	retlw	32	;' '
   438     1862  3420               	retlw	32	;' '
   439     1863  3420               	retlw	32	;' '
   440     1864  3420               	retlw	32	;' '
   441     1865  3420               	retlw	32	;' '
   442     1866  3420               	retlw	32	;' '
   443     1867  3420               	retlw	32	;' '
   444     1868  3400               	retlw	0
   445     1869                     STR_42:
   446     1869  3420               	retlw	32	;' '
   447     186A  3420               	retlw	32	;' '
   448     186B  3420               	retlw	32	;' '
   449     186C  3452               	retlw	82	;'R'
   450     186D  344F               	retlw	79	;'O'
   451     186E  3454               	retlw	84	;'T'
   452     186F  3441               	retlw	65	;'A'
   453     1870  3454               	retlw	84	;'T'
   454     1871  3449               	retlw	73	;'I'
   455     1872  344F               	retlw	79	;'O'
   456     1873  344E               	retlw	78	;'N'
   457     1874  3420               	retlw	32	;' '
   458     1875  3445               	retlw	69	;'E'
   459     1876  3452               	retlw	82	;'R'
   460     1877  3452               	retlw	82	;'R'
   461     1878  344F               	retlw	79	;'O'
   462     1879  3452               	retlw	82	;'R'
   463     187A  3420               	retlw	32	;' '
   464     187B  3420               	retlw	32	;' '
   465     187C  3420               	retlw	32	;' '
   466     187D  3420               	retlw	32	;' '
   467     187E  3420               	retlw	32	;' '
   468     187F  3420               	retlw	32	;' '
   469     1880  3400               	retlw	0
   470     1881                     STR_5:
   471     1881  3450               	retlw	80	;'P'
   472     1882  3455               	retlw	85	;'U'
   473     1883  3454               	retlw	84	;'T'
   474     1884  3420               	retlw	32	;' '
   475     1885  3449               	retlw	73	;'I'
   476     1886  3454               	retlw	84	;'T'
   477     1887  3420               	retlw	32	;' '
   478     1888  3449               	retlw	73	;'I'
   479     1889  344E               	retlw	78	;'N'
   480     188A  3420               	retlw	32	;' '
   481     188B  3453               	retlw	83	;'S'
   482     188C  3454               	retlw	84	;'T'
   483     188D  344F               	retlw	79	;'O'
   484     188E  3450               	retlw	80	;'P'
   485     188F  3420               	retlw	32	;' '
   486     1890  3453               	retlw	83	;'S'
   487     1891  3454               	retlw	84	;'T'
   488     1892  3441               	retlw	65	;'A'
   489     1893  3454               	retlw	84	;'T'
   490     1894  3445               	retlw	69	;'E'
   491     1895  3400               	retlw	0
   492     1896                     STR_4:
   493     1896  3453               	retlw	83	;'S'
   494     1897  3454               	retlw	84	;'T'
   495     1898  344F               	retlw	79	;'O'
   496     1899  3450               	retlw	80	;'P'
   497     189A  3420               	retlw	32	;' '
   498     189B  3444               	retlw	68	;'D'
   499     189C  3455               	retlw	85	;'U'
   500     189D  3452               	retlw	82	;'R'
   501     189E  3455               	retlw	85	;'U'
   502     189F  344D               	retlw	77	;'M'
   503     18A0  3455               	retlw	85	;'U'
   504     18A1  344E               	retlw	78	;'N'
   505     18A2  3441               	retlw	65	;'A'
   506     18A3  3420               	retlw	32	;' '
   507     18A4  3447               	retlw	71	;'G'
   508     18A5  3445               	retlw	69	;'E'
   509     18A6  3454               	retlw	84	;'T'
   510     18A7  3449               	retlw	73	;'I'
   511     18A8  3452               	retlw	82	;'R'
   512     18A9  3400               	retlw	0
   513     18AA                     STR_6:
   514     18AA  3459               	retlw	89	;'Y'
   515     18AB  3441               	retlw	65	;'A'
   516     18AC  3447               	retlw	71	;'G'
   517     18AD  3420               	retlw	32	;' '
   518     18AE  3442               	retlw	66	;'B'
   519     18AF  3441               	retlw	65	;'A'
   520     18B0  344B               	retlw	75	;'K'
   521     18B1  3449               	retlw	73	;'I'
   522     18B2  344D               	retlw	77	;'M'
   523     18B3  3449               	retlw	73	;'I'
   524     18B4  3420               	retlw	32	;' '
   525     18B5  3459               	retlw	89	;'Y'
   526     18B6  3441               	retlw	65	;'A'
   527     18B7  3450               	retlw	80	;'P'
   528     18B8  3449               	retlw	73	;'I'
   529     18B9  344E               	retlw	78	;'N'
   530     18BA  3449               	retlw	73	;'I'
   531     18BB  345A               	retlw	90	;'Z'
   532     18BC  3400               	retlw	0
   533     18BD                     STR_1:
   534     18BD  3455               	retlw	85	;'U'
   535     18BE  345A               	retlw	90	;'Z'
   536     18BF  344D               	retlw	77	;'M'
   537     18C0  3441               	retlw	65	;'A'
   538     18C1  344E               	retlw	78	;'N'
   539     18C2  344C               	retlw	76	;'L'
   540     18C3  3441               	retlw	65	;'A'
   541     18C4  3452               	retlw	82	;'R'
   542     18C5  3420               	retlw	32	;' '
   543     18C6  344D               	retlw	77	;'M'
   544     18C7  3441               	retlw	65	;'A'
   545     18C8  344B               	retlw	75	;'K'
   546     18C9  3449               	retlw	73	;'I'
   547     18CA  344E               	retlw	78	;'N'
   548     18CB  3441               	retlw	65	;'A'
   549     18CC  3400               	retlw	0
   550     18CD                     STR_28:
   551     18CD  3420               	retlw	32	;' '
   552     18CE  3446               	retlw	70	;'F'
   553     18CF  3457               	retlw	87	;'W'
   554     18D0  3444               	retlw	68	;'D'
   555     18D1  3420               	retlw	32	;' '
   556     18D2  3420               	retlw	32	;' '
   557     18D3  3420               	retlw	32	;' '
   558     18D4  3420               	retlw	32	;' '
   559     18D5  3420               	retlw	32	;' '
   560     18D6  3420               	retlw	32	;' '
   561     18D7  3420               	retlw	32	;' '
   562     18D8  3420               	retlw	32	;' '
   563     18D9  3420               	retlw	32	;' '
   564     18DA  3420               	retlw	32	;' '
   565     18DB  3400               	retlw	0
   566     18DC                     STR_2:
   567     18DC  3477               	retlw	119	;'w'
   568     18DD  3477               	retlw	119	;'w'
   569     18DE  3477               	retlw	119	;'w'
   570     18DF  342E               	retlw	46	;'.'
   571     18E0  3462               	retlw	98	;'b'
   572     18E1  346F               	retlw	111	;'o'
   573     18E2  3472               	retlw	114	;'r'
   574     18E3  3476               	retlw	118	;'v'
   575     18E4  3465               	retlw	101	;'e'
   576     18E5  346B               	retlw	107	;'k'
   577     18E6  342E               	retlw	46	;'.'
   578     18E7  3463               	retlw	99	;'c'
   579     18E8  346F               	retlw	111	;'o'
   580     18E9  346D               	retlw	109	;'m'
   581     18EA  3400               	retlw	0
   582     18EB                     STR_34:
   583     18EB  3420               	retlw	32	;' '
   584     18EC  3452               	retlw	82	;'R'
   585     18ED  3445               	retlw	69	;'E'
   586     18EE  3457               	retlw	87	;'W'
   587     18EF  3420               	retlw	32	;' '
   588     18F0  3420               	retlw	32	;' '
   589     18F1  3420               	retlw	32	;' '
   590     18F2  3420               	retlw	32	;' '
   591     18F3  3420               	retlw	32	;' '
   592     18F4  3420               	retlw	32	;' '
   593     18F5  3420               	retlw	32	;' '
   594     18F6  3420               	retlw	32	;' '
   595     18F7  3420               	retlw	32	;' '
   596     18F8  3400               	retlw	0
   597     18F9                     STR_7:
   598     18F9  344F               	retlw	79	;'O'
   599     18FA  3449               	retlw	73	;'I'
   600     18FB  344C               	retlw	76	;'L'
   601     18FC  3420               	retlw	32	;' '
   602     18FD  3454               	retlw	84	;'T'
   603     18FE  3448               	retlw	72	;'H'
   604     18FF  3445               	retlw	69	;'E'
   605     1900  3420               	retlw	32	;' '
   606     1901  3447               	retlw	71	;'G'
   607     1902  3445               	retlw	69	;'E'
   608     1903  3441               	retlw	65	;'A'
   609     1904  3452               	retlw	82	;'R'
   610     1905  3453               	retlw	83	;'S'
   611     1906  3400               	retlw	0
   612     1907                     STR_36:
   613     1907  3420               	retlw	32	;' '
   614     1908  3453               	retlw	83	;'S'
   615     1909  3454               	retlw	84	;'T'
   616     190A  344F               	retlw	79	;'O'
   617     190B  3450               	retlw	80	;'P'
   618     190C  3420               	retlw	32	;' '
   619     190D  3420               	retlw	32	;' '
   620     190E  3420               	retlw	32	;' '
   621     190F  3420               	retlw	32	;' '
   622     1910  3420               	retlw	32	;' '
   623     1911  3420               	retlw	32	;' '
   624     1912  3420               	retlw	32	;' '
   625     1913  3400               	retlw	0
   626     1914                     STR_18:
   627     1914  3425               	retlw	37	;'%'
   628     1915  3435               	retlw	53	;'5'
   629     1916  3475               	retlw	117	;'u'
   630     1917  3468               	retlw	104	;'h'
   631     1918  3420               	retlw	32	;' '
   632     1919  3425               	retlw	37	;'%'
   633     191A  3430               	retlw	48	;'0'
   634     191B  3432               	retlw	50	;'2'
   635     191C  3475               	retlw	117	;'u'
   636     191D  346D               	retlw	109	;'m'
   637     191E  3400               	retlw	0
   638     191F                     STR_20:
   639     191F  3446               	retlw	70	;'F'
   640     1920  3465               	retlw	101	;'e'
   641     1921  3465               	retlw	101	;'e'
   642     1922  3464               	retlw	100	;'d'
   643     1923  3452               	retlw	82	;'R'
   644     1924  3461               	retlw	97	;'a'
   645     1925  3474               	retlw	116	;'t'
   646     1926  3465               	retlw	101	;'e'
   647     1927  343A               	retlw	58	;':'
   648     1928  3400               	retlw	0
   649     1929                     STR_26:
   650     1929  3420               	retlw	32	;' '
   651     192A  3446               	retlw	70	;'F'
   652     192B  3457               	retlw	87	;'W'
   653     192C  3444               	retlw	68	;'D'
   654     192D  3420               	retlw	32	;' '
   655     192E  3431               	retlw	49	;'1'
   656     192F  342E               	retlw	46	;'.'
   657     1930  3436               	retlw	54	;'6'
   658     1931  344B               	retlw	75	;'K'
   659     1932  3400               	retlw	0
   660     1933                     STR_32:
   661     1933  3420               	retlw	32	;' '
   662     1934  3452               	retlw	82	;'R'
   663     1935  3445               	retlw	69	;'E'
   664     1936  3457               	retlw	87	;'W'
   665     1937  3420               	retlw	32	;' '
   666     1938  3431               	retlw	49	;'1'
   667     1939  342E               	retlw	46	;'.'
   668     193A  3436               	retlw	54	;'6'
   669     193B  344B               	retlw	75	;'K'
   670     193C  3400               	retlw	0
   671     193D                     STR_23:
   672     193D  3425               	retlw	37	;'%'
   673     193E  3475               	retlw	117	;'u'
   674     193F  3425               	retlw	37	;'%'
   675     1940  3475               	retlw	117	;'u'
   676     1941  3425               	retlw	37	;'%'
   677     1942  3475               	retlw	117	;'u'
   678     1943  342E               	retlw	46	;'.'
   679     1944  3425               	retlw	37	;'%'
   680     1945  3475               	retlw	117	;'u'
   681     1946  3400               	retlw	0
   682     1947                     STR_24:
   683     1947  3420               	retlw	32	;' '
   684     1948  3446               	retlw	70	;'F'
   685     1949  3457               	retlw	87	;'W'
   686     194A  3444               	retlw	68	;'D'
   687     194B  3420               	retlw	32	;' '
   688     194C  344C               	retlw	76	;'L'
   689     194D  344D               	retlw	77	;'M'
   690     194E  3454               	retlw	84	;'T'
   691     194F  3400               	retlw	0
   692     1950                     STR_30:
   693     1950  3420               	retlw	32	;' '
   694     1951  3452               	retlw	82	;'R'
   695     1952  3445               	retlw	69	;'E'
   696     1953  3457               	retlw	87	;'W'
   697     1954  3420               	retlw	32	;' '
   698     1955  344C               	retlw	76	;'L'
   699     1956  344D               	retlw	77	;'M'
   700     1957  3454               	retlw	84	;'T'
   701     1958  3400               	retlw	0
   702     1959                     STR_27:
   703     1959  3473               	retlw	115	;'s'
   704     195A  3425               	retlw	37	;'%'
   705     195B  3464               	retlw	100	;'d'
   706     195C  340D               	retlw	13
   707     195D  340A               	retlw	10
   708     195E  3400               	retlw	0
   709     195F                     STR_21:
   710     195F  3425               	retlw	37	;'%'
   711     1960  3430               	retlw	48	;'0'
   712     1961  3430               	retlw	48	;'0'
   713     1962  3433               	retlw	51	;'3'
   714     1963  3475               	retlw	117	;'u'
   715     1964  3400               	retlw	0
   716     1965                     STR_25:
   717     1965  3473               	retlw	115	;'s'
   718     1966  3430               	retlw	48	;'0'
   719     1967  340D               	retlw	13
   720     1968  340A               	retlw	10
   721     1969  3400               	retlw	0
   722     196A                     STR_22:
   723     196A  3452               	retlw	82	;'R'
   724     196B  3450               	retlw	80	;'P'
   725     196C  344D               	retlw	77	;'M'
   726     196D  343A               	retlw	58	;':'
   727     196E  3400               	retlw	0
   728     196F                     STR_3:
   729     196F  3456               	retlw	86	;'V'
   730     1970  3433               	retlw	51	;'3'
   731     1971  3400               	retlw	0
   732     1965                     
   733                           	psect	cinit
   734     0011                     start_initialization:	
   735                           ; #config settings
   736                           
   737     0011                     __initialization:
   738                           
   739                           ; Initialize objects allocated to BANK3
   740     0011  1683               	bsf	3,5	;RP0=1, select bank3
   741     0012  1703               	bsf	3,6	;RP1=1, select bank3
   742     0013  160A  118A  21D1  120A  118A  	fcall	__pidataBANK3	;fetch initializer
   743     0018  00A0               	movwf	__pdataBANK3& (0+127)
   744     0019  160A  118A  21D2  120A  118A  	fcall	__pidataBANK3+1	;fetch initializer
   745     001E  00A1               	movwf	(__pdataBANK3+1)& (0+127)
   746     001F  160A  118A  21D3  120A  118A  	fcall	__pidataBANK3+2	;fetch initializer
   747     0024  00A2               	movwf	(__pdataBANK3+2)& (0+127)
   748     0025  160A  118A  21D4  120A  118A  	fcall	__pidataBANK3+3	;fetch initializer
   749     002A  00A3               	movwf	(__pdataBANK3+3)& (0+127)
   750     002B  160A  118A  21D5  120A  118A  	fcall	__pidataBANK3+4	;fetch initializer
   751     0030  00A4               	movwf	(__pdataBANK3+4)& (0+127)
   752     0031  160A  118A  21D6  120A  118A  	fcall	__pidataBANK3+5	;fetch initializer
   753     0036  00A5               	movwf	(__pdataBANK3+5)& (0+127)
   754                           
   755                           ; Clear objects allocated to COMMON
   756     0037  01F6               	clrf	__pbssCOMMON& (0+127)
   757     0038  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   758     0039                     end_of_initialization:	
   759                           ;End of C runtime variable initialization code
   760                           
   761     0039                     __end_of__initialization:
   762     0039  0183               	clrf	3
   763     003A  120A  118A  2EC7   	ljmp	_main	;jump to C main() function
   764                           
   765                           	psect	bssCOMMON
   766     0076                     __pbssCOMMON:
   767     0076                     _kesmeSayaci:
   768     0076                     	ds	2
   769                           
   770                           	psect	dataBANK3
   771     01A0                     __pdataBANK3:
   772     01A0                     _currentTime:
   773     01A0                     	ds	6
   774                           
   775                           	psect	cstackBANK3
   776     0190                     __pcstackBANK3:
   777     0190                     main@i_324:
   778                           
   779                           ; 2 bytes @ 0x0
   780     0190                     	ds	2
   781     0192                     main@i_327:
   782                           
   783                           ; 2 bytes @ 0x2
   784     0192                     	ds	2
   785     0194                     main@i_330:
   786                           
   787                           ; 2 bytes @ 0x4
   788     0194                     	ds	2
   789     0196                     main@i_333:
   790                           
   791                           ; 2 bytes @ 0x6
   792     0196                     	ds	2
   793     0198                     main@binler:
   794                           
   795                           ; 2 bytes @ 0x8
   796     0198                     	ds	2
   797     019A                     main@integerPart:
   798                           
   799                           ; 2 bytes @ 0xA
   800     019A                     	ds	2
   801     019C                     main@negativeFeedValue:
   802                           
   803                           ; 2 bytes @ 0xC
   804     019C                     	ds	2
   805     019E                     main@displayValue:
   806                           
   807                           ; 2 bytes @ 0xE
   808     019E                     	ds	2
   809                           
   810                           	psect	cstackBANK1
   811     00A0                     __pcstackBANK1:
   812     00A0                     main@combinedText_375:
   813                           
   814                           ; 20 bytes @ 0x0
   815     00A0                     	ds	20
   816     00B4                     main@lcdText:
   817                           
   818                           ; 9 bytes @ 0x14
   819     00B4                     	ds	9
   820     00BD                     main@uartMessage:
   821                           
   822                           ; 8 bytes @ 0x1D
   823     00BD                     	ds	8
   824     00C5                     main@uartMessage_371:
   825                           
   826                           ; 8 bytes @ 0x25
   827     00C5                     	ds	8
   828     00CD                     main@gostermeliklcd:
   829                           
   830                           ; 4 bytes @ 0x2D
   831     00CD                     	ds	4
   832     00D1                     main@rpmString:
   833                           
   834                           ; 5 bytes @ 0x31
   835     00D1                     	ds	5
   836     00D6                     main@adcValue2:
   837                           
   838                           ; 2 bytes @ 0x36
   839     00D6                     	ds	2
   840     00D8                     main@adcValue3:
   841                           
   842                           ; 2 bytes @ 0x38
   843     00D8                     	ds	2
   844     00DA                     main@onlar:
   845                           
   846                           ; 2 bytes @ 0x3A
   847     00DA                     	ds	2
   848     00DC                     main@birler:
   849                           
   850                           ; 2 bytes @ 0x3C
   851     00DC                     	ds	2
   852     00DE                     main@negativeDisplayValue:
   853                           
   854                           ; 2 bytes @ 0x3E
   855     00DE                     	ds	2
   856     00E0                     main@adcString1:
   857                           
   858                           ; 4 bytes @ 0x40
   859     00E0                     	ds	4
   860     00E4                     main@ilkAcilis:
   861                           
   862                           ; 2 bytes @ 0x44
   863     00E4                     	ds	2
   864     00E6                     main@adcValue1:
   865                           
   866                           ; 4 bytes @ 0x46
   867     00E6                     	ds	4
   868     00EA                     main@yuzler:
   869                           
   870                           ; 2 bytes @ 0x4A
   871     00EA                     	ds	2
   872     00EC                     main@i:
   873                           
   874                           ; 2 bytes @ 0x4C
   875     00EC                     	ds	2
   876     00EE                     main@i_321:
   877                           
   878                           ; 2 bytes @ 0x4E
   879     00EE                     	ds	2
   880                           
   881                           	psect	cstackCOMMON
   882     0070                     __pcstackCOMMON:
   883     0070                     ?_isdigit:
   884     0070                     ?_UART_Initialize:	
   885                           ; 1 bit 
   886                           
   887     0070                     ?_Lcd_Port:	
   888                           ; 1 bytes @ 0x0
   889                           
   890     0070                     ?_Lcd_Cmd:	
   891                           ; 1 bytes @ 0x0
   892                           
   893     0070                     ?_Lcd_Clear:	
   894                           ; 1 bytes @ 0x0
   895                           
   896     0070                     ?_Lcd_Init:	
   897                           ; 1 bytes @ 0x0
   898                           
   899     0070                     ?_Lcd_Write_Char:	
   900                           ; 1 bytes @ 0x0
   901                           
   902     0070                     ?_incrementTime:	
   903                           ; 1 bytes @ 0x0
   904                           
   905     0070                     ??_incrementTime:	
   906                           ; 1 bytes @ 0x0
   907                           
   908     0070                     ?_timer_isr:	
   909                           ; 1 bytes @ 0x0
   910                           
   911     0070                     ?_UART_Write:	
   912                           ; 1 bytes @ 0x0
   913                           
   914     0070                     ?_main:	
   915                           ; 1 bytes @ 0x0
   916                           
   917                           
   918                           ; 2 bytes @ 0x0
   919     0070                     	ds	2
   920     0072                     incrementTime@time:
   921                           
   922                           ; 1 bytes @ 0x2
   923     0072                     	ds	1
   924     0073                     ??_timer_isr:
   925                           
   926                           ; 1 bytes @ 0x3
   927     0073                     	ds	3
   928     0076                     ??_UART_Initialize:
   929     0076                     ??_isdigit:	
   930                           ; 1 bytes @ 0x6
   931                           
   932     0076                     ??_Lcd_Port:	
   933                           ; 1 bytes @ 0x6
   934                           
   935     0076                     ??_Lcd_Clear:	
   936                           ; 1 bytes @ 0x6
   937                           
   938     0076                     ??_writeEEPROM:	
   939                           ; 1 bytes @ 0x6
   940                           
   941     0076                     ??_UART_Write:	
   942                           ; 1 bytes @ 0x6
   943                           
   944     0076                     ??___wmul:	
   945                           ; 1 bytes @ 0x6
   946                           
   947     0076                     ??___lwdiv:	
   948                           ; 1 bytes @ 0x6
   949                           
   950     0076                     ??___lwmod:	
   951                           ; 1 bytes @ 0x6
   952                           
   953                           
   954                           	psect	cstackBANK0
   955     0020                     __pcstackBANK0:	
   956                           ; 1 bytes @ 0x6
   957                           
   958     0020                     ?_writeEEPROM:
   959     0020                     ?__Umul8_16:	
   960                           ; 1 bytes @ 0x0
   961                           
   962     0020                     ?_readEEPROM:	
   963                           ; 2 bytes @ 0x0
   964                           
   965     0020                     ?___wmul:	
   966                           ; 2 bytes @ 0x0
   967                           
   968     0020                     ?___fltol:	
   969                           ; 2 bytes @ 0x0
   970                           
   971     0020                     ?___fldiv:	
   972                           ; 4 bytes @ 0x0
   973                           
   974     0020                     ?___xxtofl:	
   975                           ; 4 bytes @ 0x0
   976                           
   977     0020                     Lcd_Port@a:	
   978                           ; 4 bytes @ 0x0
   979                           
   980     0020                     UART_Write@data:	
   981                           ; 1 bytes @ 0x0
   982                           
   983     0020                     __Umul8_16@multiplicand:	
   984                           ; 1 bytes @ 0x0
   985                           
   986     0020                     _isdigit$850:	
   987                           ; 1 bytes @ 0x0
   988                           
   989     0020                     writeEEPROM@address:	
   990                           ; 1 bytes @ 0x0
   991                           
   992     0020                     readEEPROM@address:	
   993                           ; 2 bytes @ 0x0
   994                           
   995     0020                     ___wmul@multiplier:	
   996                           ; 2 bytes @ 0x0
   997                           
   998     0020                     ___fltol@f1:	
   999                           ; 2 bytes @ 0x0
  1000                           
  1001     0020                     ___fldiv@a:	
  1002                           ; 4 bytes @ 0x0
  1003                           
  1004     0020                     ___xxtofl@val:	
  1005                           ; 4 bytes @ 0x0
  1006                           
  1007                           
  1008                           ; 4 bytes @ 0x0
  1009     0020                     	ds	1
  1010     0021                     ?_UART_Write_Text:
  1011     0021                     ??_Lcd_Cmd:	
  1012                           ; 1 bytes @ 0x1
  1013                           
  1014     0021                     ??_Lcd_Write_Char:	
  1015                           ; 1 bytes @ 0x1
  1016                           
  1017     0021                     isdigit@c:	
  1018                           ; 1 bytes @ 0x1
  1019                           
  1020     0021                     UART_Write_Text@text:	
  1021                           ; 1 bytes @ 0x1
  1022                           
  1023                           
  1024                           ; 2 bytes @ 0x1
  1025     0021                     	ds	1
  1026     0022                     ??__Umul8_16:
  1027     0022                     ??_readEEPROM:	
  1028                           ; 1 bytes @ 0x2
  1029                           
  1030     0022                     Lcd_Write_Char@temp:	
  1031                           ; 1 bytes @ 0x2
  1032                           
  1033     0022                     writeEEPROM@data:	
  1034                           ; 1 bytes @ 0x2
  1035                           
  1036     0022                     ___wmul@multiplicand:	
  1037                           ; 2 bytes @ 0x2
  1038                           
  1039                           
  1040                           ; 2 bytes @ 0x2
  1041     0022                     	ds	1
  1042     0023                     ??_UART_Write_Text:
  1043     0023                     Lcd_Cmd@a:	
  1044                           ; 1 bytes @ 0x3
  1045                           
  1046     0023                     Lcd_Write_Char@y:	
  1047                           ; 1 bytes @ 0x3
  1048                           
  1049                           
  1050                           ; 1 bytes @ 0x3
  1051     0023                     	ds	1
  1052     0024                     ?_Lcd_Set_Cursor:
  1053     0024                     ??_Lcd_Init:	
  1054                           ; 1 bytes @ 0x4
  1055                           
  1056     0024                     ??___fltol:	
  1057                           ; 1 bytes @ 0x4
  1058                           
  1059     0024                     ??___xxtofl:	
  1060                           ; 1 bytes @ 0x4
  1061                           
  1062     0024                     Lcd_Set_Cursor@b:	
  1063                           ; 1 bytes @ 0x4
  1064                           
  1065     0024                     Lcd_Write_Char@a:	
  1066                           ; 1 bytes @ 0x4
  1067                           
  1068     0024                     ___wmul@product:	
  1069                           ; 1 bytes @ 0x4
  1070                           
  1071     0024                     __Umul8_16@product:	
  1072                           ; 2 bytes @ 0x4
  1073                           
  1074     0024                     ___fldiv@b:	
  1075                           ; 2 bytes @ 0x4
  1076                           
  1077                           
  1078                           ; 4 bytes @ 0x4
  1079     0024                     	ds	1
  1080     0025                     ??_Lcd_Set_Cursor:
  1081     0025                     ?_Lcd_Write_String:	
  1082                           ; 1 bytes @ 0x5
  1083                           
  1084     0025                     Lcd_Write_String@a:	
  1085                           ; 1 bytes @ 0x5
  1086                           
  1087                           
  1088                           ; 2 bytes @ 0x5
  1089     0025                     	ds	1
  1090     0026                     ?___lwdiv:
  1091     0026                     Lcd_Set_Cursor@a:	
  1092                           ; 2 bytes @ 0x6
  1093                           
  1094     0026                     UART_Write_Text@i:	
  1095                           ; 1 bytes @ 0x6
  1096                           
  1097     0026                     ___lwdiv@divisor:	
  1098                           ; 2 bytes @ 0x6
  1099                           
  1100     0026                     __Umul8_16@word_mpld:	
  1101                           ; 2 bytes @ 0x6
  1102                           
  1103                           
  1104                           ; 2 bytes @ 0x6
  1105     0026                     	ds	1
  1106     0027                     ??_Lcd_Write_String:
  1107     0027                     Lcd_Set_Cursor@z:	
  1108                           ; 1 bytes @ 0x7
  1109                           
  1110                           
  1111                           ; 1 bytes @ 0x7
  1112     0027                     	ds	1
  1113     0028                     ??___fldiv:
  1114     0028                     Lcd_Set_Cursor@y:	
  1115                           ; 1 bytes @ 0x8
  1116                           
  1117     0028                     ___fltol@sign1:	
  1118                           ; 1 bytes @ 0x8
  1119                           
  1120     0028                     __Umul8_16@multiplier:	
  1121                           ; 1 bytes @ 0x8
  1122                           
  1123     0028                     ___xxtofl@sign:	
  1124                           ; 1 bytes @ 0x8
  1125                           
  1126     0028                     ___lwdiv@dividend:	
  1127                           ; 1 bytes @ 0x8
  1128                           
  1129                           
  1130                           ; 2 bytes @ 0x8
  1131     0028                     	ds	1
  1132     0029                     Lcd_Set_Cursor@temp:
  1133     0029                     ___fltol@exp1:	
  1134                           ; 1 bytes @ 0x9
  1135                           
  1136     0029                     ___xxtofl@exp:	
  1137                           ; 1 bytes @ 0x9
  1138                           
  1139                           
  1140                           ; 1 bytes @ 0x9
  1141     0029                     	ds	1
  1142     002A                     Lcd_Write_String@i:
  1143     002A                     ___lwdiv@quotient:	
  1144                           ; 2 bytes @ 0xA
  1145                           
  1146     002A                     ___xxtofl@arg:	
  1147                           ; 2 bytes @ 0xA
  1148                           
  1149                           
  1150                           ; 4 bytes @ 0xA
  1151     002A                     	ds	2
  1152     002C                     ___lwdiv@counter:
  1153                           
  1154                           ; 1 bytes @ 0xC
  1155     002C                     	ds	1
  1156     002D                     ?___lwmod:
  1157     002D                     ___lwmod@divisor:	
  1158                           ; 2 bytes @ 0xD
  1159                           
  1160     002D                     ___fldiv@rem:	
  1161                           ; 2 bytes @ 0xD
  1162                           
  1163                           
  1164                           ; 4 bytes @ 0xD
  1165     002D                     	ds	2
  1166     002F                     ___lwmod@dividend:
  1167                           
  1168                           ; 2 bytes @ 0xF
  1169     002F                     	ds	2
  1170     0031                     ___lwmod@counter:
  1171     0031                     ___fldiv@sign:	
  1172                           ; 1 bytes @ 0x11
  1173                           
  1174                           
  1175                           ; 1 bytes @ 0x11
  1176     0031                     	ds	1
  1177     0032                     ?_sprintf:
  1178     0032                     sprintf@f:	
  1179                           ; 2 bytes @ 0x12
  1180                           
  1181     0032                     ___fldiv@new_exp:	
  1182                           ; 2 bytes @ 0x12
  1183                           
  1184                           
  1185                           ; 2 bytes @ 0x12
  1186     0032                     	ds	2
  1187     0034                     ___fldiv@grs:
  1188                           
  1189                           ; 4 bytes @ 0x14
  1190     0034                     	ds	4
  1191     0038                     ___fldiv@bexp:
  1192                           
  1193                           ; 1 bytes @ 0x18
  1194     0038                     	ds	1
  1195     0039                     ___fldiv@aexp:
  1196                           
  1197                           ; 1 bytes @ 0x19
  1198     0039                     	ds	1
  1199     003A                     ?___flmul:
  1200     003A                     ___flmul@b:	
  1201                           ; 4 bytes @ 0x1A
  1202                           
  1203                           
  1204                           ; 4 bytes @ 0x1A
  1205     003A                     	ds	2
  1206     003C                     ??_sprintf:
  1207                           
  1208                           ; 1 bytes @ 0x1C
  1209     003C                     	ds	2
  1210     003E                     ___flmul@a:
  1211                           
  1212                           ; 4 bytes @ 0x1E
  1213     003E                     	ds	2
  1214     0040                     sprintf@prec:
  1215                           
  1216                           ; 1 bytes @ 0x20
  1217     0040                     	ds	1
  1218     0041                     sprintf@ap:
  1219                           
  1220                           ; 1 bytes @ 0x21
  1221     0041                     	ds	1
  1222     0042                     ??___flmul:
  1223     0042                     sprintf@val:	
  1224                           ; 1 bytes @ 0x22
  1225                           
  1226                           
  1227                           ; 2 bytes @ 0x22
  1228     0042                     	ds	2
  1229     0044                     sprintf@flag:
  1230                           
  1231                           ; 1 bytes @ 0x24
  1232     0044                     	ds	1
  1233     0045                     sprintf@width:
  1234                           
  1235                           ; 2 bytes @ 0x25
  1236     0045                     	ds	2
  1237     0047                     sprintf@c:
  1238     0047                     ___flmul@sign:	
  1239                           ; 1 bytes @ 0x27
  1240                           
  1241                           
  1242                           ; 1 bytes @ 0x27
  1243     0047                     	ds	1
  1244     0048                     sprintf@sp:
  1245     0048                     ___flmul@aexp:	
  1246                           ; 1 bytes @ 0x28
  1247                           
  1248                           
  1249                           ; 1 bytes @ 0x28
  1250     0048                     	ds	1
  1251     0049                     ___flmul@grs:
  1252                           
  1253                           ; 4 bytes @ 0x29
  1254     0049                     	ds	4
  1255     004D                     ___flmul@bexp:
  1256                           
  1257                           ; 1 bytes @ 0x2D
  1258     004D                     	ds	1
  1259     004E                     ___flmul@prod:
  1260                           
  1261                           ; 4 bytes @ 0x2E
  1262     004E                     	ds	4
  1263     0052                     ___flmul@temp:
  1264                           
  1265                           ; 2 bytes @ 0x32
  1266     0052                     	ds	2
  1267     0054                     ??_main:
  1268                           
  1269                           ; 1 bytes @ 0x34
  1270     0054                     	ds	4
  1271     0058                     main@combinedText:
  1272                           
  1273                           ; 20 bytes @ 0x38
  1274     0058                     	ds	20
  1275     006C                     main@rpmValue:
  1276                           
  1277                           ; 2 bytes @ 0x4C
  1278     006C                     	ds	2
  1279                           
  1280                           	psect	maintext
  1281     06C7                     __pmaintext:	
  1282 ;;
  1283 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1284 ;;
  1285 ;; *************** function _main *****************
  1286 ;; Defined at:
  1287 ;;		line 87 in file "main.c"
  1288 ;; Parameters:    Size  Location     Type
  1289 ;;		None
  1290 ;; Auto vars:     Size  Location     Type
  1291 ;;  uartMessage     8   37[BANK1 ] unsigned char [8]
  1292 ;;  uartMessage     8   29[BANK1 ] unsigned char [8]
  1293 ;;  combinedText   20    0[BANK1 ] unsigned char [20]
  1294 ;;  negativeDisp    2   62[BANK1 ] int 
  1295 ;;  negativeFeed    2   12[BANK3 ] int 
  1296 ;;  combinedText   20   56[BANK0 ] unsigned char [20]
  1297 ;;  i               2    6[BANK3 ] int 
  1298 ;;  i               2    4[BANK3 ] int 
  1299 ;;  i               2    2[BANK3 ] int 
  1300 ;;  i               2    0[BANK3 ] int 
  1301 ;;  i               2   78[BANK1 ] int 
  1302 ;;  i               2   76[BANK1 ] int 
  1303 ;;  rpmString       5   49[BANK1 ] unsigned char [5]
  1304 ;;  adcString1      4   64[BANK1 ] unsigned char [4]
  1305 ;;  gostermelikl    4   45[BANK1 ] float 
  1306 ;;  integerPart     2   10[BANK3 ] unsigned int 
  1307 ;;  binler          2    8[BANK3 ] int 
  1308 ;;  yuzler          2   74[BANK1 ] int 
  1309 ;;  birler          2   60[BANK1 ] int 
  1310 ;;  onlar           2   58[BANK1 ] int 
  1311 ;;  rpmValue        2   76[BANK0 ] unsigned int 
  1312 ;;  lcdText         9   20[BANK1 ] unsigned char [9]
  1313 ;;  adcValue1       4   70[BANK1 ] float 
  1314 ;;  rpmtofloat      4    0        float 
  1315 ;;  displayValue    2   14[BANK3 ] unsigned int 
  1316 ;;  ilkAcilis       2   68[BANK1 ] int 
  1317 ;;  adcValue3       2   56[BANK1 ] unsigned int 
  1318 ;;  adcValue2       2   54[BANK1 ] unsigned int 
  1319 ;;  a               2    0        unsigned int 
  1320 ;; Return value:  Size  Location     Type
  1321 ;;                  2  174[None  ] int 
  1322 ;; Registers used:
  1323 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1324 ;; Tracked objects:
  1325 ;;		On entry : B00/0
  1326 ;;		On exit  : 0/0
  1327 ;;		Unchanged: 0/0
  1328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1329 ;;      Params:         0       0       0       0       0
  1330 ;;      Locals:         0      22      80      16       0
  1331 ;;      Temps:          0       4       0       0       0
  1332 ;;      Totals:         0      26      80      16       0
  1333 ;;Total ram usage:      122 bytes
  1334 ;; Hardware stack levels required when called: 5
  1335 ;; This function calls:
  1336 ;;		_Lcd_Clear
  1337 ;;		_Lcd_Init
  1338 ;;		_Lcd_Set_Cursor
  1339 ;;		_Lcd_Write_String
  1340 ;;		_UART_Initialize
  1341 ;;		_UART_Write_Text
  1342 ;;		___fldiv
  1343 ;;		___flmul
  1344 ;;		___fltol
  1345 ;;		___lwdiv
  1346 ;;		___lwmod
  1347 ;;		___wmul
  1348 ;;		___xxtofl
  1349 ;;		_readEEPROM
  1350 ;;		_sprintf
  1351 ;;		_writeEEPROM
  1352 ;; This function is called by:
  1353 ;;		Startup code after reset
  1354 ;; This function uses a non-reentrant model
  1355 ;;
  1356                           
  1357     06C7                     _main:	
  1358                           ;psect for function _main
  1359                           
  1360     06C7                     l3948:	
  1361                           ;incstack = 0
  1362                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1363                           
  1364                           
  1365                           ;main.c: 89:   unsigned int a;;main.c: 92: TRISB = 0b00000000;
  1366     06C7  1683               	bsf	3,5	;RP0=1, select bank1
  1367     06C8  1303               	bcf	3,6	;RP1=0, select bank1
  1368     06C9  0186               	clrf	6	;volatile
  1369     06CA                     l3950:
  1370                           
  1371                           ;main.c: 93: TRISA4 = 0;
  1372     06CA  1205               	bcf	5,4	;volatile
  1373     06CB                     l3952:
  1374                           
  1375                           ;main.c: 94: TRISE0 = 1;
  1376     06CB  1409               	bsf	9,0	;volatile
  1377     06CC                     l3954:
  1378                           
  1379                           ;main.c: 95: TRISE1 = 1;
  1380     06CC  1489               	bsf	9,1	;volatile
  1381     06CD                     l3956:
  1382                           
  1383                           ;main.c: 96: TRISC1 = 1;
  1384     06CD  1487               	bsf	7,1	;volatile
  1385     06CE                     l3958:
  1386                           
  1387                           ;main.c: 97: TRISC2 = 1;
  1388     06CE  1507               	bsf	7,2	;volatile
  1389     06CF                     l3960:
  1390                           
  1391                           ;main.c: 98: TRISE2 = 1;
  1392     06CF  1509               	bsf	9,2	;volatile
  1393     06D0                     l3962:
  1394                           
  1395                           ;main.c: 99: TRISC0 = 1;
  1396     06D0  1407               	bsf	7,0	;volatile
  1397     06D1                     l3964:
  1398                           
  1399                           ;main.c: 100: TRISC3 = 1;
  1400     06D1  1587               	bsf	7,3	;volatile
  1401     06D2                     l3966:
  1402                           
  1403                           ;main.c: 101: TRISD0 = 1;
  1404     06D2  1408               	bsf	8,0	;volatile
  1405     06D3                     l3968:
  1406                           
  1407                           ;main.c: 103: TRISA1 = 1;
  1408     06D3  1485               	bsf	5,1	;volatile
  1409     06D4                     l3970:
  1410                           
  1411                           ;main.c: 104: TRISA2 = 1;
  1412     06D4  1505               	bsf	5,2	;volatile
  1413     06D5                     l3972:
  1414                           
  1415                           ;main.c: 105: TRISA3 = 1;
  1416     06D5  1585               	bsf	5,3	;volatile
  1417     06D6                     l3974:
  1418                           
  1419                           ;main.c: 106: Lcd_Init();
  1420     06D6  160A  118A  249C  120A  118A  	fcall	_Lcd_Init
  1421     06DB                     l3976:
  1422                           
  1423                           ;main.c: 108: TRISC6 = 0;
  1424     06DB  1683               	bsf	3,5	;RP0=1, select bank1
  1425     06DC  1303               	bcf	3,6	;RP1=0, select bank1
  1426     06DD  1307               	bcf	7,6	;volatile
  1427     06DE                     l3978:
  1428                           
  1429                           ;main.c: 109: TRISC7 = 1;
  1430     06DE  1787               	bsf	7,7	;volatile
  1431     06DF                     l3980:
  1432                           
  1433                           ;main.c: 112: TRISA0 = 0;
  1434     06DF  1005               	bcf	5,0	;volatile
  1435     06E0                     l3982:
  1436                           
  1437                           ;main.c: 113: TRISA5 = 0;
  1438     06E0  1285               	bcf	5,5	;volatile
  1439     06E1                     l3984:
  1440                           
  1441                           ;main.c: 114: TRISC0 = 0;
  1442     06E1  1007               	bcf	7,0	;volatile
  1443     06E2                     l3986:
  1444                           
  1445                           ;main.c: 115: TRISC4 = 0;
  1446     06E2  1207               	bcf	7,4	;volatile
  1447     06E3                     l3988:
  1448                           
  1449                           ;main.c: 116: TRISC5 = 0;
  1450     06E3  1287               	bcf	7,5	;volatile
  1451     06E4                     l3990:
  1452                           
  1453                           ;main.c: 117: TRISD = 0b00000001;
  1454     06E4  3001               	movlw	1
  1455     06E5  0088               	movwf	8	;volatile
  1456     06E6                     l3992:
  1457                           
  1458                           ;main.c: 120:   _delay((unsigned long)((100)*(4000000/4000.0)));
  1459     06E6  3082               	movlw	130
  1460     06E7  1283               	bcf	3,5	;RP0=0, select bank0
  1461     06E8  1303               	bcf	3,6	;RP1=0, select bank0
  1462     06E9  00D5               	movwf	??_main+1
  1463     06EA  30DD               	movlw	221
  1464     06EB  00D4               	movwf	??_main
  1465     06EC                     u6077:
  1466     06EC  0BD4               	decfsz	??_main,f
  1467     06ED  2EEC               	goto	u6077
  1468     06EE  0BD5               	decfsz	??_main+1,f
  1469     06EF  2EEC               	goto	u6077
  1470     06F0                     l3994:
  1471                           
  1472                           ;main.c: 121:   RA4 = 0;
  1473     06F0  1283               	bcf	3,5	;RP0=0, select bank0
  1474     06F1  1303               	bcf	3,6	;RP1=0, select bank0
  1475     06F2  1205               	bcf	5,4	;volatile
  1476     06F3                     l3996:
  1477                           
  1478                           ;main.c: 125:     currentTime.hours = readEEPROM(0x00);
  1479     06F3  3000               	movlw	0
  1480     06F4  00A0               	movwf	readEEPROM@address
  1481     06F5  00A1               	movwf	readEEPROM@address+1
  1482     06F6  160A  118A  2216  120A  118A  	fcall	_readEEPROM
  1483     06FB  1283               	bcf	3,5	;RP0=0, select bank0
  1484     06FC  1303               	bcf	3,6	;RP1=0, select bank0
  1485     06FD  0821               	movf	?_readEEPROM+1,w
  1486     06FE  1683               	bsf	3,5	;RP0=1, select bank3
  1487     06FF  1703               	bsf	3,6	;RP1=1, select bank3
  1488     0700  00A1               	movwf	(_currentTime+1)^(0+384)
  1489     0701  1283               	bcf	3,5	;RP0=0, select bank0
  1490     0702  1303               	bcf	3,6	;RP1=0, select bank0
  1491     0703  0820               	movf	?_readEEPROM,w
  1492     0704  1683               	bsf	3,5	;RP0=1, select bank3
  1493     0705  1703               	bsf	3,6	;RP1=1, select bank3
  1494     0706  00A0               	movwf	_currentTime^(0+384)
  1495     0707                     l3998:
  1496                           
  1497                           ;main.c: 126:     currentTime.minutes = readEEPROM(0x01);
  1498     0707  3001               	movlw	1
  1499     0708  1283               	bcf	3,5	;RP0=0, select bank0
  1500     0709  1303               	bcf	3,6	;RP1=0, select bank0
  1501     070A  00A0               	movwf	readEEPROM@address
  1502     070B  3000               	movlw	0
  1503     070C  00A1               	movwf	readEEPROM@address+1
  1504     070D  160A  118A  2216  120A  118A  	fcall	_readEEPROM
  1505     0712  1283               	bcf	3,5	;RP0=0, select bank0
  1506     0713  1303               	bcf	3,6	;RP1=0, select bank0
  1507     0714  0821               	movf	?_readEEPROM+1,w
  1508     0715  1683               	bsf	3,5	;RP0=1, select bank3
  1509     0716  1703               	bsf	3,6	;RP1=1, select bank3
  1510     0717  00A3               	movwf	((_currentTime+1)^(0+384)+2)
  1511     0718  1283               	bcf	3,5	;RP0=0, select bank0
  1512     0719  1303               	bcf	3,6	;RP1=0, select bank0
  1513     071A  0820               	movf	?_readEEPROM,w
  1514     071B  1683               	bsf	3,5	;RP0=1, select bank3
  1515     071C  1703               	bsf	3,6	;RP1=1, select bank3
  1516     071D  00A2               	movwf	(_currentTime^(0+384)+2)
  1517     071E                     l4000:
  1518                           
  1519                           ;main.c: 127:     currentTime.seconds = readEEPROM(0x02);
  1520     071E  3002               	movlw	2
  1521     071F  1283               	bcf	3,5	;RP0=0, select bank0
  1522     0720  1303               	bcf	3,6	;RP1=0, select bank0
  1523     0721  00A0               	movwf	readEEPROM@address
  1524     0722  3000               	movlw	0
  1525     0723  00A1               	movwf	readEEPROM@address+1
  1526     0724  160A  118A  2216  120A  118A  	fcall	_readEEPROM
  1527     0729  1283               	bcf	3,5	;RP0=0, select bank0
  1528     072A  1303               	bcf	3,6	;RP1=0, select bank0
  1529     072B  0821               	movf	?_readEEPROM+1,w
  1530     072C  1683               	bsf	3,5	;RP0=1, select bank3
  1531     072D  1703               	bsf	3,6	;RP1=1, select bank3
  1532     072E  00A5               	movwf	((_currentTime+1)^(0+384)+4)
  1533     072F  1283               	bcf	3,5	;RP0=0, select bank0
  1534     0730  1303               	bcf	3,6	;RP1=0, select bank0
  1535     0731  0820               	movf	?_readEEPROM,w
  1536     0732  1683               	bsf	3,5	;RP0=1, select bank3
  1537     0733  1703               	bsf	3,6	;RP1=1, select bank3
  1538     0734  00A4               	movwf	(_currentTime^(0+384)+4)
  1539     0735                     l4002:
  1540                           
  1541                           ;main.c: 128:     char lcdText[9];;main.c: 130:     OPTION_REGbits.T0CS = 0;
  1542     0735  1683               	bsf	3,5	;RP0=1, select bank1
  1543     0736  1303               	bcf	3,6	;RP1=0, select bank1
  1544     0737  1281               	bcf	1,5	;volatile
  1545     0738                     l4004:
  1546                           
  1547                           ;main.c: 131:     OPTION_REGbits.PSA = 0;
  1548     0738  1181               	bcf	1,3	;volatile
  1549     0739                     l4006:
  1550                           
  1551                           ;main.c: 132:     OPTION_REGbits.PS2 = 1;
  1552     0739  1501               	bsf	1,2	;volatile
  1553     073A                     l4008:
  1554                           
  1555                           ;main.c: 133:     OPTION_REGbits.PS1 = 1;
  1556     073A  1481               	bsf	1,1	;volatile
  1557     073B                     l4010:
  1558                           
  1559                           ;main.c: 134:     OPTION_REGbits.PS0 = 1;
  1560     073B  1401               	bsf	1,0	;volatile
  1561     073C                     l4012:
  1562                           
  1563                           ;main.c: 137:     INTCONbits.GIE = 1;
  1564     073C  178B               	bsf	11,7	;volatile
  1565     073D                     l4014:
  1566                           
  1567                           ;main.c: 138:     INTCONbits.PEIE = 1;
  1568     073D  170B               	bsf	11,6	;volatile
  1569     073E                     l4016:
  1570                           
  1571                           ;main.c: 139:     INTCONbits.T0IE = 1;
  1572     073E  168B               	bsf	11,5	;volatile
  1573     073F                     l4018:
  1574                           
  1575                           ;main.c: 142:     Lcd_Clear();
  1576     073F  160A  118A  21D7  120A  118A  	fcall	_Lcd_Clear
  1577     0744                     l4020:
  1578                           
  1579                           ;main.c: 143:     Lcd_Set_Cursor(1,1);
  1580     0744  1283               	bcf	3,5	;RP0=0, select bank0
  1581     0745  1303               	bcf	3,6	;RP1=0, select bank0
  1582     0746  01A4               	clrf	Lcd_Set_Cursor@b
  1583     0747  0AA4               	incf	Lcd_Set_Cursor@b,f
  1584     0748  3001               	movlw	1
  1585     0749  160A  118A  2450  120A  118A  	fcall	_Lcd_Set_Cursor
  1586     074E                     l4022:
  1587                           
  1588                           ;main.c: 144:     Lcd_Write_String("UZMANLAR MAKINA");
  1589     074E  30BD               	movlw	low (STR_1| (0+32768))
  1590     074F  1283               	bcf	3,5	;RP0=0, select bank0
  1591     0750  1303               	bcf	3,6	;RP1=0, select bank0
  1592     0751  00A5               	movwf	Lcd_Write_String@a
  1593     0752  3098               	movlw	high (STR_1| (0+32768))
  1594     0753  00A6               	movwf	Lcd_Write_String@a+1
  1595     0754  160A  118A  2336  120A  118A  	fcall	_Lcd_Write_String
  1596     0759                     l4024:
  1597                           
  1598                           ;main.c: 145:     Lcd_Set_Cursor(2,1);
  1599     0759  1283               	bcf	3,5	;RP0=0, select bank0
  1600     075A  1303               	bcf	3,6	;RP1=0, select bank0
  1601     075B  01A4               	clrf	Lcd_Set_Cursor@b
  1602     075C  0AA4               	incf	Lcd_Set_Cursor@b,f
  1603     075D  3002               	movlw	2
  1604     075E  160A  118A  2450  120A  118A  	fcall	_Lcd_Set_Cursor
  1605     0763                     l4026:
  1606                           
  1607                           ;main.c: 146:     Lcd_Write_String("www.borvek.com");
  1608     0763  30DC               	movlw	low (STR_2| (0+32768))
  1609     0764  1283               	bcf	3,5	;RP0=0, select bank0
  1610     0765  1303               	bcf	3,6	;RP1=0, select bank0
  1611     0766  00A5               	movwf	Lcd_Write_String@a
  1612     0767  3098               	movlw	high (STR_2| (0+32768))
  1613     0768  00A6               	movwf	Lcd_Write_String@a+1
  1614     0769  160A  118A  2336  120A  118A  	fcall	_Lcd_Write_String
  1615     076E                     l4028:
  1616                           
  1617                           ;main.c: 147:     Lcd_Set_Cursor(2,17);
  1618     076E  3011               	movlw	17
  1619     076F  1283               	bcf	3,5	;RP0=0, select bank0
  1620     0770  1303               	bcf	3,6	;RP1=0, select bank0
  1621     0771  00A4               	movwf	Lcd_Set_Cursor@b
  1622     0772  3002               	movlw	2
  1623     0773  160A  118A  2450  120A  118A  	fcall	_Lcd_Set_Cursor
  1624     0778                     l4030:
  1625                           
  1626                           ;main.c: 148:     Lcd_Write_String("V3");
  1627     0778  306F               	movlw	low (STR_3| (0+32768))
  1628     0779  1283               	bcf	3,5	;RP0=0, select bank0
  1629     077A  1303               	bcf	3,6	;RP1=0, select bank0
  1630     077B  00A5               	movwf	Lcd_Write_String@a
  1631     077C  3099               	movlw	high (STR_3| (0+32768))
  1632     077D  00A6               	movwf	Lcd_Write_String@a+1
  1633     077E  160A  118A  2336  120A  118A  	fcall	_Lcd_Write_String
  1634     0783                     l4032:
  1635                           
  1636                           ;main.c: 150:     _delay((unsigned long)((1000)*(4000000/4000.0)));
  1637     0783  3006               	movlw	6
  1638     0784  1283               	bcf	3,5	;RP0=0, select bank0
  1639     0785  1303               	bcf	3,6	;RP1=0, select bank0
  1640     0786  00D6               	movwf	??_main+2
  1641     0787  3013               	movlw	19
  1642     0788  00D5               	movwf	??_main+1
  1643     0789  30AD               	movlw	173
  1644     078A  00D4               	movwf	??_main
  1645     078B                     u6087:
  1646     078B  0BD4               	decfsz	??_main,f
  1647     078C  2F8B               	goto	u6087
  1648     078D  0BD5               	decfsz	??_main+1,f
  1649     078E  2F8B               	goto	u6087
  1650     078F  0BD6               	decfsz	??_main+2,f
  1651     0790  2F8B               	goto	u6087
  1652     0791                     l4034:
  1653                           
  1654                           ;main.c: 151:     Lcd_Clear();
  1655     0791  160A  118A  21D7  120A  118A  	fcall	_Lcd_Clear
  1656     0796                     l4036:
  1657                           
  1658                           ;main.c: 156:     SPBRG = ((4000000/16)/19200) - 1;
  1659     0796  300C               	movlw	12
  1660     0797  1683               	bsf	3,5	;RP0=1, select bank1
  1661     0798  1303               	bcf	3,6	;RP1=0, select bank1
  1662     0799  0099               	movwf	25	;volatile
  1663     079A                     l4038:
  1664                           
  1665                           ;main.c: 157:     UART_Initialize();
  1666     079A  160A  118A  21F2  120A  118A  	fcall	_UART_Initialize
  1667     079F                     l4040:
  1668                           
  1669                           ;main.c: 158: unsigned int displayValue = 0;
  1670     079F  1683               	bsf	3,5	;RP0=1, select bank3
  1671     07A0  1703               	bsf	3,6	;RP1=1, select bank3
  1672     07A1  019E               	clrf	main@displayValue^(0+384)
  1673     07A2  019F               	clrf	(main@displayValue+1)^(0+384)
  1674     07A3                     l4042:
  1675                           
  1676                           ;main.c: 163:     ADCON1bits.ADFM = 1;
  1677     07A3  1683               	bsf	3,5	;RP0=1, select bank1
  1678     07A4  1303               	bcf	3,6	;RP1=0, select bank1
  1679     07A5  179F               	bsf	31,7	;volatile
  1680     07A6                     l4044:
  1681                           
  1682                           ;main.c: 164:     ADCON1bits.PCFG = 0b100;
  1683     07A6  081F               	movf	31,w	;volatile
  1684     07A7  39F0               	andlw	-16
  1685     07A8  3804               	iorlw	4
  1686     07A9  009F               	movwf	31	;volatile
  1687     07AA                     l4046:
  1688                           
  1689                           ;main.c: 165:     ADCON0bits.ADCS = 0b10;
  1690     07AA  1283               	bcf	3,5	;RP0=0, select bank0
  1691     07AB  1303               	bcf	3,6	;RP1=0, select bank0
  1692     07AC  081F               	movf	31,w	;volatile
  1693     07AD  393F               	andlw	-193
  1694     07AE  3880               	iorlw	128
  1695     07AF  009F               	movwf	31	;volatile
  1696     07B0                     l4048:
  1697                           
  1698                           ;main.c: 166:     ADCON0bits.ADON = 1;
  1699     07B0  141F               	bsf	31,0	;volatile
  1700     07B1                     l4050:
  1701                           
  1702                           ;main.c: 168:     float adcValue1;;main.c: 169:     unsigned int adcValue2;;main.c: 170:
      +                               unsigned int adcValue3;;main.c: 171:     float rpmtofloat;;main.c: 179:     RC1 = 0
      +                          ;
  1703     07B1  1087               	bcf	7,1	;volatile
  1704     07B2                     l4052:
  1705                           
  1706                           ;main.c: 180:     RE2 = 0;
  1707     07B2  1109               	bcf	9,2	;volatile
  1708     07B3                     l4054:
  1709                           
  1710                           ;main.c: 181:     RE0 = 0;
  1711     07B3  1009               	bcf	9,0	;volatile
  1712     07B4                     l4056:
  1713                           
  1714                           ;main.c: 182:     RC2 = 0;
  1715     07B4  1107               	bcf	7,2	;volatile
  1716     07B5                     l4058:
  1717                           
  1718                           ;main.c: 183:     RC0 = 0;
  1719     07B5  1007               	bcf	7,0	;volatile
  1720     07B6                     l4060:
  1721                           
  1722                           ;main.c: 184:     RE1 = 0;
  1723     07B6  1089               	bcf	9,1	;volatile
  1724     07B7                     l4062:
  1725                           
  1726                           ;main.c: 186: int ilkAcilis = 1;
  1727     07B7  3001               	movlw	1
  1728     07B8  1683               	bsf	3,5	;RP0=1, select bank1
  1729     07B9  1303               	bcf	3,6	;RP1=0, select bank1
  1730     07BA  00E4               	movwf	main@ilkAcilis^(0+128)
  1731     07BB  3000               	movlw	0
  1732     07BC  00E5               	movwf	(main@ilkAcilis^(0+128)+1)
  1733     07BD                     l4064:
  1734                           
  1735                           ;main.c: 190: if (ilkAcilis) {
  1736     07BD  1683               	bsf	3,5	;RP0=1, select bank1
  1737     07BE  1303               	bcf	3,6	;RP1=0, select bank1
  1738     07BF  0864               	movf	main@ilkAcilis^(0+128),w
  1739     07C0  0465               	iorwf	(main@ilkAcilis+1)^(0+128),w
  1740     07C1  1903               	btfsc	3,2
  1741     07C2  2FC4               	goto	u5371
  1742     07C3  2FC7               	goto	u5370
  1743     07C4                     u5371:
  1744     07C4  160A  118A  2D89   	goto	l176
  1745     07C7                     u5370:
  1746     07C7                     l4066:
  1747                           
  1748                           ;main.c: 192:     Lcd_Set_Cursor(1,1);
  1749     07C7  1283               	bcf	3,5	;RP0=0, select bank0
  1750     07C8  1303               	bcf	3,6	;RP1=0, select bank0
  1751     07C9  01A4               	clrf	Lcd_Set_Cursor@b
  1752     07CA  0AA4               	incf	Lcd_Set_Cursor@b,f
  1753     07CB  3001               	movlw	1
  1754     07CC  160A  118A  2450  120A  118A  	fcall	_Lcd_Set_Cursor
  1755     07D1                     l4068:
  1756                           
  1757                           ;main.c: 193:     Lcd_Write_String("STOP DURUMUNA GETIR");
  1758     07D1  3096               	movlw	low (STR_4| (0+32768))
  1759     07D2  1283               	bcf	3,5	;RP0=0, select bank0
  1760     07D3  1303               	bcf	3,6	;RP1=0, select bank0
  1761     07D4  00A5               	movwf	Lcd_Write_String@a
  1762     07D5  3098               	movlw	high (STR_4| (0+32768))
  1763     07D6  00A6               	movwf	Lcd_Write_String@a+1
  1764     07D7  160A  118A  2336  120A  118A  	fcall	_Lcd_Write_String
  1765     07DC                     l4070:
  1766                           
  1767                           ;main.c: 194:     Lcd_Set_Cursor(2,1);
  1768     07DC  1283               	bcf	3,5	;RP0=0, select bank0
  1769     07DD  1303               	bcf	3,6	;RP1=0, select bank0
  1770     07DE  01A4               	clrf	Lcd_Set_Cursor@b
  1771     07DF  0AA4               	incf	Lcd_Set_Cursor@b,f
  1772     07E0  3002               	movlw	2
  1773     07E1  160A  118A  2450  120A  118A  	fcall	_Lcd_Set_Cursor
  1774                           
  1775                           ;main.c: 195:     Lcd_Write_String("PUT IT IN STOP STATE");
  1776     07E6  3081               	movlw	low (STR_5| (0+32768))
  1777     07E7  1283               	bcf	3,5	;RP0=0, select bank0
  1778     07E8  1303               	bcf	3,6	;RP1=0, select bank0
  1779     07E9  00A5               	movwf	Lcd_Write_String@a
  1780     07EA  3098               	movlw	high (STR_5| (0+32768))
  1781     07EB  00A6               	movwf	Lcd_Write_String@a+1
  1782     07EC  160A  118A  2336  120A  118A  	fcall	_Lcd_Write_String
  1783     07F1                     l4072:
  1784                           
  1785                           ;main.c: 196:         if ( RE2 == 0 && RE0 == 0 && RC0 == 0 && RE1 == 0) {
  1786     07F1  1283               	bcf	3,5	;RP0=0, select bank0
  1787     07F2  1303               	bcf	3,6	;RP1=0, select bank0
  1788     07F3  1909               	btfsc	9,2	;volatile
  1789     07F4  2FF8               	goto	u5381
  1790     07F5  160A  118A  2D77   	goto	u5380
  1791     07F8                     u5381:
  1792     07F8  120A  118A  2EC4   	goto	l179
  1793                           
  1794                           	psect	text1
  1795     1247                     __ptext1:	
  1796 ;; *************** function _writeEEPROM *****************
  1797 ;; Defined at:
  1798 ;;		line 39 in file "main.c"
  1799 ;; Parameters:    Size  Location     Type
  1800 ;;  address         2    0[BANK0 ] unsigned int 
  1801 ;;  data            2    2[BANK0 ] unsigned int 
  1802 ;; Auto vars:     Size  Location     Type
  1803 ;;		None
  1804 ;; Return value:  Size  Location     Type
  1805 ;;                  1    wreg      void 
  1806 ;; Registers used:
  1807 ;;		wreg
  1808 ;; Tracked objects:
  1809 ;;		On entry : 0/0
  1810 ;;		On exit  : 0/0
  1811 ;;		Unchanged: 0/0
  1812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1813 ;;      Params:         0       4       0       0       0
  1814 ;;      Locals:         0       0       0       0       0
  1815 ;;      Temps:          0       0       0       0       0
  1816 ;;      Totals:         0       4       0       0       0
  1817 ;;Total ram usage:        4 bytes
  1818 ;; Hardware stack levels used: 1
  1819 ;; Hardware stack levels required when called: 2
  1820 ;; This function calls:
  1821 ;;		Nothing
  1822 ;; This function is called by:
  1823 ;;		_main
  1824 ;; This function uses a non-reentrant model
  1825 ;;
  1826                           
  1827     1247                     _writeEEPROM:	
  1828                           ;psect for function _writeEEPROM
  1829                           
  1830     1247                     l2394:	
  1831                           ;incstack = 0
  1832                           ; Regs used in _writeEEPROM: [wreg]
  1833                           
  1834                           
  1835                           ;main.c: 41:     EEADR = address;
  1836     1247  1283               	bcf	3,5	;RP0=0, select bank0
  1837     1248  1303               	bcf	3,6	;RP1=0, select bank0
  1838     1249  0820               	movf	writeEEPROM@address,w
  1839     124A  1283               	bcf	3,5	;RP0=0, select bank2
  1840     124B  1703               	bsf	3,6	;RP1=1, select bank2
  1841     124C  008D               	movwf	13	;volatile
  1842                           
  1843                           ;main.c: 42:     EEDATA = data;
  1844     124D  1283               	bcf	3,5	;RP0=0, select bank0
  1845     124E  1303               	bcf	3,6	;RP1=0, select bank0
  1846     124F  0822               	movf	writeEEPROM@data,w
  1847     1250  1283               	bcf	3,5	;RP0=0, select bank2
  1848     1251  1703               	bsf	3,6	;RP1=1, select bank2
  1849     1252  008C               	movwf	12	;volatile
  1850     1253                     l2396:
  1851                           
  1852                           ;main.c: 43:     WREN = 1;
  1853     1253  1683               	bsf	3,5	;RP0=1, select bank3
  1854     1254  1703               	bsf	3,6	;RP1=1, select bank3
  1855     1255  150C               	bsf	12,2	;volsfr
  1856     1256                     l2398:
  1857                           
  1858                           ;main.c: 44:     GIE = 0;
  1859     1256  138B               	bcf	11,7	;volatile
  1860                           
  1861                           ;main.c: 45:     EECON2 = 0x55;
  1862     1257  3055               	movlw	85
  1863     1258  008D               	movwf	13	;volsfr
  1864                           
  1865                           ;main.c: 46:     EECON2 = 0xAA;
  1866     1259  30AA               	movlw	170
  1867     125A  008D               	movwf	13	;volsfr
  1868     125B                     l2400:
  1869                           
  1870                           ;main.c: 47:     WR = 1;
  1871     125B  148C               	bsf	12,1	;volsfr
  1872     125C                     l2402:
  1873                           
  1874                           ;main.c: 48:     GIE = 1;
  1875     125C  178B               	bsf	11,7	;volatile
  1876     125D                     l2404:
  1877                           
  1878                           ;main.c: 49:     WREN = 0;
  1879     125D  110C               	bcf	12,2	;volsfr
  1880     125E                     l152:	
  1881                           ;main.c: 50:     while (WR == 1);
  1882                           
  1883     125E  188C               	btfsc	12,1	;volsfr
  1884     125F  2A61               	goto	u2591
  1885     1260  2A62               	goto	u2590
  1886     1261                     u2591:
  1887     1261  2A5E               	goto	l152
  1888     1262                     u2590:
  1889     1262                     l155:
  1890     1262  0008               	return
  1891     1263                     __end_of_writeEEPROM:
  1892                           
  1893                           	psect	text2
  1894     0AC4                     __ptext2:	
  1895 ;; *************** function _sprintf *****************
  1896 ;; Defined at:
  1897 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c"
  1898 ;; Parameters:    Size  Location     Type
  1899 ;;  sp              1    wreg     PTR unsigned char 
  1900 ;;		 -> main@combinedText_375(20), main@uartMessage_371(8), main@combinedText(20), main@uartMessage(8), 
  1901 ;;		 -> main@rpmString(5), main@adcString1(4), main@lcdText(9), 
  1902 ;;  f               2   18[BANK0 ] PTR const unsigned char 
  1903 ;;		 -> STR_35(6), STR_33(6), STR_29(6), STR_27(6), 
  1904 ;;		 -> STR_23(10), STR_21(6), STR_18(11), 
  1905 ;; Auto vars:     Size  Location     Type
  1906 ;;  sp              1   40[BANK0 ] PTR unsigned char 
  1907 ;;		 -> main@combinedText_375(20), main@uartMessage_371(8), main@combinedText(20), main@uartMessage(8), 
  1908 ;;		 -> main@rpmString(5), main@adcString1(4), main@lcdText(9), 
  1909 ;;  tmpval          4    0        struct .
  1910 ;;  width           2   37[BANK0 ] int 
  1911 ;;  val             2   34[BANK0 ] unsigned int 
  1912 ;;  cp              2    0        PTR const unsigned char 
  1913 ;;  len             2    0        unsigned int 
  1914 ;;  c               1   39[BANK0 ] unsigned char 
  1915 ;;  flag            1   36[BANK0 ] unsigned char 
  1916 ;;  ap              1   33[BANK0 ] PTR void [1]
  1917 ;;		 -> ?_sprintf(2), 
  1918 ;;  prec            1   32[BANK0 ] char 
  1919 ;; Return value:  Size  Location     Type
  1920 ;;                  2   18[BANK0 ] int 
  1921 ;; Registers used:
  1922 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1923 ;; Tracked objects:
  1924 ;;		On entry : 0/0
  1925 ;;		On exit  : 0/0
  1926 ;;		Unchanged: 0/0
  1927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1928 ;;      Params:         0      10       0       0       0
  1929 ;;      Locals:         0       9       0       0       0
  1930 ;;      Temps:          0       4       0       0       0
  1931 ;;      Totals:         0      23       0       0       0
  1932 ;;Total ram usage:       23 bytes
  1933 ;; Hardware stack levels used: 1
  1934 ;; Hardware stack levels required when called: 3
  1935 ;; This function calls:
  1936 ;;		___lwdiv
  1937 ;;		___lwmod
  1938 ;;		___wmul
  1939 ;;		_isdigit
  1940 ;; This function is called by:
  1941 ;;		_main
  1942 ;; This function uses a non-reentrant model
  1943 ;;
  1944                           
  1945     0AC4                     _sprintf:	
  1946                           ;psect for function _sprintf
  1947                           
  1948                           
  1949                           ;incstack = 0
  1950                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1951                           ;sprintf@sp stored from wreg
  1952     0AC4  1283               	bcf	3,5	;RP0=0, select bank0
  1953     0AC5  1303               	bcf	3,6	;RP1=0, select bank0
  1954     0AC6  00C8               	movwf	sprintf@sp
  1955     0AC7                     l3636:
  1956                           
  1957                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 521:  
      +                          signed char prec;
  1958     0AC7  3034               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  1959     0AC8  00C1               	movwf	sprintf@ap
  1960                           
  1961                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1962     0AC9  2CA0               	goto	l3746
  1963     0ACA                     l3638:
  1964                           
  1965                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1966     0ACA  3025               	movlw	37
  1967     0ACB  0647               	xorwf	sprintf@c,w
  1968     0ACC  1903               	btfsc	3,2
  1969     0ACD  2ACF               	goto	u4681
  1970     0ACE  2AD0               	goto	u4680
  1971     0ACF                     u4681:
  1972     0ACF  2ADA               	goto	l3644
  1973     0AD0                     u4680:
  1974     0AD0                     l3640:
  1975                           
  1976                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1977     0AD0  0848               	movf	sprintf@sp,w
  1978     0AD1  0084               	movwf	4
  1979     0AD2  0847               	movf	sprintf@c,w
  1980     0AD3  1383               	bcf	3,7	;select IRP bank0
  1981     0AD4  0080               	movwf	0
  1982     0AD5                     l3642:
  1983     0AD5  3001               	movlw	1
  1984     0AD6  00FF               	movwf	btemp+1
  1985     0AD7  087F               	movf	btemp+1,w
  1986     0AD8  07C8               	addwf	sprintf@sp,f
  1987                           
  1988                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 559:    continue;
  1989     0AD9  2CA0               	goto	l3746
  1990     0ADA                     l3644:
  1991                           
  1992                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  1993     0ADA  01C5               	clrf	sprintf@width
  1994     0ADB  01C6               	clrf	sprintf@width+1
  1995                           
  1996                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1997     0ADC  01C4               	clrf	sprintf@flag
  1998     0ADD  2AE5               	goto	l3650
  1999     0ADE                     l385:	
  2000                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 596:    case '0':
  2001                           
  2002                           
  2003                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 597:     flag |= 
      +                          0x04;
  2004     0ADE  1544               	bsf	sprintf@flag,2
  2005     0ADF                     l3646:
  2006                           
  2007                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 598:     f++;
  2008     0ADF  3001               	movlw	1
  2009     0AE0  07B2               	addwf	sprintf@f,f
  2010     0AE1  1803               	skipnc
  2011     0AE2  0AB3               	incf	sprintf@f+1,f
  2012     0AE3  3000               	movlw	0
  2013     0AE4  07B3               	addwf	sprintf@f+1,f
  2014     0AE5                     l3650:	
  2015                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 599:     continue
      +                          ;
  2016                           
  2017     0AE5  0833               	movf	sprintf@f+1,w
  2018     0AE6  00FF               	movwf	btemp+1
  2019     0AE7  0832               	movf	sprintf@f,w
  2020     0AE8  0084               	movwf	4
  2021     0AE9  160A  158A  2000  120A  158A  	fcall	stringtab
  2022     0AEE  00BC               	movwf	??_sprintf
  2023     0AEF  01BD               	clrf	??_sprintf+1
  2024                           
  2025                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2026                           ; Switch size 1, requested type "simple"
  2027                           ; Number of cases is 1, Range of values is 0 to 0
  2028                           ; switch strategies available:
  2029                           ; Name         Instructions Cycles
  2030                           ; simple_byte            4     3 (average)
  2031                           ; direct_byte           11     8 (fixed)
  2032                           ; jumptable            260     6 (fixed)
  2033                           ;	Chosen strategy is simple_byte
  2034     0AF0  083D               	movf	??_sprintf+1,w
  2035     0AF1  3A00               	xorlw	0	; case 0
  2036     0AF2  1903               	skipnz
  2037     0AF3  2AF5               	goto	l4514
  2038     0AF4  2AFA               	goto	l3652
  2039     0AF5                     l4514:
  2040                           
  2041                           ; Switch size 1, requested type "simple"
  2042                           ; Number of cases is 1, Range of values is 48 to 48
  2043                           ; switch strategies available:
  2044                           ; Name         Instructions Cycles
  2045                           ; simple_byte            4     3 (average)
  2046                           ; direct_byte           14    11 (fixed)
  2047                           ; jumptable            263     9 (fixed)
  2048                           ;	Chosen strategy is simple_byte
  2049     0AF5  083C               	movf	??_sprintf,w
  2050     0AF6  3A30               	xorlw	48	; case 48
  2051     0AF7  1903               	skipnz
  2052     0AF8  2ADE               	goto	l385
  2053     0AF9  2AFA               	goto	l3652
  2054     0AFA                     l3652:
  2055                           
  2056                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  2057     0AFA  0833               	movf	sprintf@f+1,w
  2058     0AFB  00FF               	movwf	btemp+1
  2059     0AFC  0832               	movf	sprintf@f,w
  2060     0AFD  0084               	movwf	4
  2061     0AFE  160A  158A  2000  120A  158A  	fcall	stringtab
  2062     0B03  160A  118A  2202  120A  158A  	fcall	_isdigit
  2063     0B08  1C03               	btfss	3,0
  2064     0B09  2B0B               	goto	u4691
  2065     0B0A  2B0C               	goto	u4690
  2066     0B0B                     u4691:
  2067     0B0B  2B55               	goto	l3666
  2068     0B0C                     u4690:
  2069     0B0C                     l3654:
  2070                           
  2071                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  2072     0B0C  1283               	bcf	3,5	;RP0=0, select bank0
  2073     0B0D  1303               	bcf	3,6	;RP1=0, select bank0
  2074     0B0E  01C5               	clrf	sprintf@width
  2075     0B0F  01C6               	clrf	sprintf@width+1
  2076     0B10                     l3656:
  2077                           
  2078                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  2079     0B10  300A               	movlw	10
  2080     0B11  1283               	bcf	3,5	;RP0=0, select bank0
  2081     0B12  1303               	bcf	3,6	;RP1=0, select bank0
  2082     0B13  00A0               	movwf	___wmul@multiplier
  2083     0B14  3000               	movlw	0
  2084     0B15  00A1               	movwf	___wmul@multiplier+1
  2085     0B16  0846               	movf	sprintf@width+1,w
  2086     0B17  00A3               	movwf	___wmul@multiplicand+1
  2087     0B18  0845               	movf	sprintf@width,w
  2088     0B19  00A2               	movwf	___wmul@multiplicand
  2089     0B1A  160A  118A  22AA  120A  158A  	fcall	___wmul
  2090     0B1F  1283               	bcf	3,5	;RP0=0, select bank0
  2091     0B20  1303               	bcf	3,6	;RP1=0, select bank0
  2092     0B21  0821               	movf	?___wmul+1,w
  2093     0B22  00C6               	movwf	sprintf@width+1
  2094     0B23  0820               	movf	?___wmul,w
  2095     0B24  00C5               	movwf	sprintf@width
  2096     0B25                     l3658:
  2097                           
  2098                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  2099     0B25  0833               	movf	sprintf@f+1,w
  2100     0B26  00FF               	movwf	btemp+1
  2101     0B27  0832               	movf	sprintf@f,w
  2102     0B28  0084               	movwf	4
  2103     0B29  160A  158A  2000  120A  158A  	fcall	stringtab
  2104     0B2E  3ED0               	addlw	208
  2105     0B2F  00BC               	movwf	??_sprintf
  2106     0B30  30FF               	movlw	255
  2107     0B31  1803               	skipnc
  2108     0B32  3000               	movlw	0
  2109     0B33  00BD               	movwf	??_sprintf+1
  2110     0B34  083C               	movf	??_sprintf,w
  2111     0B35  07C5               	addwf	sprintf@width,f
  2112     0B36  1803               	skipnc
  2113     0B37  0AC6               	incf	sprintf@width+1,f
  2114     0B38  083D               	movf	??_sprintf+1,w
  2115     0B39  07C6               	addwf	sprintf@width+1,f
  2116     0B3A                     l3660:
  2117     0B3A  3001               	movlw	1
  2118     0B3B  07B2               	addwf	sprintf@f,f
  2119     0B3C  1803               	skipnc
  2120     0B3D  0AB3               	incf	sprintf@f+1,f
  2121     0B3E  3000               	movlw	0
  2122     0B3F  07B3               	addwf	sprintf@f+1,f
  2123     0B40                     l3662:
  2124                           
  2125                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  2126     0B40  0833               	movf	sprintf@f+1,w
  2127     0B41  00FF               	movwf	btemp+1
  2128     0B42  0832               	movf	sprintf@f,w
  2129     0B43  0084               	movwf	4
  2130     0B44  160A  158A  2000  120A  158A  	fcall	stringtab
  2131     0B49  160A  118A  2202  120A  158A  	fcall	_isdigit
  2132     0B4E  1803               	btfsc	3,0
  2133     0B4F  2B51               	goto	u4701
  2134     0B50  2B52               	goto	u4700
  2135     0B51                     u4701:
  2136     0B51  2B10               	goto	l3656
  2137     0B52                     u4700:
  2138     0B52  2B55               	goto	l3666
  2139     0B53                     l399:	
  2140                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 843:   case 'u':
  2141                           
  2142                           
  2143                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          x40;
  2144     0B53  1744               	bsf	sprintf@flag,6
  2145                           
  2146                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 845:    break;
  2147     0B54  2B7D               	goto	l397
  2148     0B55                     l3666:
  2149     0B55  1283               	bcf	3,5	;RP0=0, select bank0
  2150     0B56  1303               	bcf	3,6	;RP1=0, select bank0
  2151     0B57  0833               	movf	sprintf@f+1,w
  2152     0B58  00BD               	movwf	??_sprintf+1
  2153     0B59  0832               	movf	sprintf@f,w
  2154     0B5A  00BC               	movwf	??_sprintf
  2155     0B5B  0AB2               	incf	sprintf@f,f
  2156     0B5C  1903               	skipnz
  2157     0B5D  0AB3               	incf	sprintf@f+1,f
  2158     0B5E  083D               	movf	??_sprintf+1,w
  2159     0B5F  00FF               	movwf	btemp+1
  2160     0B60  083C               	movf	??_sprintf,w
  2161     0B61  0084               	movwf	4
  2162     0B62  160A  158A  2000  120A  158A  	fcall	stringtab
  2163     0B67  00C7               	movwf	sprintf@c
  2164     0B68  00BE               	movwf	??_sprintf+2
  2165     0B69  01BF               	clrf	??_sprintf+3
  2166                           
  2167                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2168                           ; Switch size 1, requested type "simple"
  2169                           ; Number of cases is 1, Range of values is 0 to 0
  2170                           ; switch strategies available:
  2171                           ; Name         Instructions Cycles
  2172                           ; simple_byte            4     3 (average)
  2173                           ; direct_byte           11     8 (fixed)
  2174                           ; jumptable            260     6 (fixed)
  2175                           ;	Chosen strategy is simple_byte
  2176     0B6A  083F               	movf	??_sprintf+3,w
  2177     0B6B  3A00               	xorlw	0	; case 0
  2178     0B6C  1903               	skipnz
  2179     0B6D  2B6F               	goto	l4516
  2180     0B6E  2CA0               	goto	l3746
  2181     0B6F                     l4516:
  2182                           
  2183                           ; Switch size 1, requested type "simple"
  2184                           ; Number of cases is 4, Range of values is 0 to 117
  2185                           ; switch strategies available:
  2186                           ; Name         Instructions Cycles
  2187                           ; simple_byte           13     7 (average)
  2188                           ; jumptable            260     6 (fixed)
  2189                           ;	Chosen strategy is simple_byte
  2190     0B6F  083E               	movf	??_sprintf+2,w
  2191     0B70  3A00               	xorlw	0	; case 0
  2192     0B71  1903               	skipnz
  2193     0B72  2CB6               	goto	l3748
  2194     0B73  3A64               	xorlw	100	; case 100
  2195     0B74  1903               	skipnz
  2196     0B75  2B7D               	goto	l397
  2197     0B76  3A0D               	xorlw	13	; case 105
  2198     0B77  1903               	skipnz
  2199     0B78  2B7D               	goto	l397
  2200     0B79  3A1C               	xorlw	28	; case 117
  2201     0B7A  1903               	skipnz
  2202     0B7B  2B53               	goto	l399
  2203     0B7C  2CA0               	goto	l3746
  2204     0B7D                     l397:
  2205                           
  2206                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1277:   if((flag 
      +                          & 0x40) == 0x00)
  2207     0B7D  1B44               	btfsc	sprintf@flag,6
  2208     0B7E  2B80               	goto	u4711
  2209     0B7F  2B81               	goto	u4710
  2210     0B80                     u4711:
  2211     0B80  2B9B               	goto	l3678
  2212     0B81                     u4710:
  2213     0B81                     l3668:
  2214                           
  2215                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2216     0B81  0841               	movf	sprintf@ap,w
  2217     0B82  0084               	movwf	4
  2218     0B83  1383               	bcf	3,7	;select IRP bank0
  2219     0B84  0800               	movf	0,w
  2220     0B85  00C2               	movwf	sprintf@val
  2221     0B86  0A84               	incf	4,f
  2222     0B87  0800               	movf	0,w
  2223     0B88  00C3               	movwf	sprintf@val+1
  2224     0B89                     l3670:
  2225     0B89  3002               	movlw	2
  2226     0B8A  00FF               	movwf	btemp+1
  2227     0B8B  087F               	movf	btemp+1,w
  2228     0B8C  07C1               	addwf	sprintf@ap,f
  2229     0B8D                     l3672:
  2230                           
  2231                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  2232     0B8D  1FC3               	btfss	sprintf@val+1,7
  2233     0B8E  2B90               	goto	u4721
  2234     0B8F  2B91               	goto	u4720
  2235     0B90                     u4721:
  2236     0B90  2BA7               	goto	l3682
  2237     0B91                     u4720:
  2238     0B91                     l3674:
  2239                           
  2240                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  2241     0B91  3003               	movlw	3
  2242     0B92  00FF               	movwf	btemp+1
  2243     0B93  087F               	movf	btemp+1,w
  2244     0B94  04C4               	iorwf	sprintf@flag,f
  2245     0B95                     l3676:
  2246                           
  2247                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  2248     0B95  09C2               	comf	sprintf@val,f
  2249     0B96  09C3               	comf	sprintf@val+1,f
  2250     0B97  0AC2               	incf	sprintf@val,f
  2251     0B98  1903               	skipnz
  2252     0B99  0AC3               	incf	sprintf@val+1,f
  2253     0B9A  2BA7               	goto	l3682
  2254     0B9B                     l3678:
  2255                           
  2256                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
  2257     0B9B  0841               	movf	sprintf@ap,w
  2258     0B9C  0084               	movwf	4
  2259     0B9D  1383               	bcf	3,7	;select IRP bank0
  2260     0B9E  0800               	movf	0,w
  2261     0B9F  00C2               	movwf	sprintf@val
  2262     0BA0  0A84               	incf	4,f
  2263     0BA1  0800               	movf	0,w
  2264     0BA2  00C3               	movwf	sprintf@val+1
  2265     0BA3                     l3680:
  2266     0BA3  3002               	movlw	2
  2267     0BA4  00FF               	movwf	btemp+1
  2268     0BA5  087F               	movf	btemp+1,w
  2269     0BA6  07C1               	addwf	sprintf@ap,f
  2270     0BA7                     l3682:
  2271                           
  2272                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2273     0BA7  01C7               	clrf	sprintf@c
  2274     0BA8  0AC7               	incf	sprintf@c,f
  2275     0BA9                     l3688:
  2276                           
  2277                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  2278     0BA9  0847               	movf	sprintf@c,w
  2279     0BAA  00BC               	movwf	??_sprintf
  2280     0BAB  073C               	addwf	??_sprintf,w
  2281     0BAC  3E12               	addlw	low (_dpowers| (0+32768))
  2282     0BAD  0084               	movwf	4
  2283     0BAE  3098               	movlw	high (_dpowers| (0+32768))
  2284     0BAF  1803               	skipnc
  2285     0BB0  3E01               	addlw	1
  2286     0BB1  00FF               	movwf	btemp+1
  2287     0BB2  160A  158A  2000  120A  158A  	fcall	stringtab
  2288     0BB7  00BD               	movwf	??_sprintf+1
  2289     0BB8  160A  158A  2000  120A  158A  	fcall	stringtab
  2290     0BBD  00BE               	movwf	??_sprintf+2
  2291     0BBE  083E               	movf	??_sprintf+2,w
  2292     0BBF  0243               	subwf	sprintf@val+1,w
  2293     0BC0  1D03               	skipz
  2294     0BC1  2BC4               	goto	u4735
  2295     0BC2  083D               	movf	??_sprintf+1,w
  2296     0BC3  0242               	subwf	sprintf@val,w
  2297     0BC4                     u4735:
  2298     0BC4  1803               	skipnc
  2299     0BC5  2BC7               	goto	u4731
  2300     0BC6  2BC8               	goto	u4730
  2301     0BC7                     u4731:
  2302     0BC7  2BC9               	goto	l3692
  2303     0BC8                     u4730:
  2304     0BC8  2BD3               	goto	l3696
  2305     0BC9                     l3692:
  2306     0BC9  3001               	movlw	1
  2307     0BCA  00FF               	movwf	btemp+1
  2308     0BCB  087F               	movf	btemp+1,w
  2309     0BCC  07C7               	addwf	sprintf@c,f
  2310     0BCD                     l3694:
  2311     0BCD  3005               	movlw	5
  2312     0BCE  0647               	xorwf	sprintf@c,w
  2313     0BCF  1D03               	btfss	3,2
  2314     0BD0  2BD2               	goto	u4741
  2315     0BD1  2BD3               	goto	u4740
  2316     0BD2                     u4741:
  2317     0BD2  2BA9               	goto	l3688
  2318     0BD3                     u4740:
  2319     0BD3                     l3696:
  2320                           
  2321                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
  2322     0BD3  0845               	movf	sprintf@width,w
  2323     0BD4  0446               	iorwf	sprintf@width+1,w
  2324     0BD5  1903               	btfsc	3,2
  2325     0BD6  2BD8               	goto	u4751
  2326     0BD7  2BD9               	goto	u4750
  2327     0BD8                     u4751:
  2328     0BD8  2BE5               	goto	l406
  2329     0BD9                     u4750:
  2330     0BD9                     l3698:
  2331     0BD9  0844               	movf	sprintf@flag,w
  2332     0BDA  3903               	andlw	3
  2333     0BDB  1903               	btfsc	3,2
  2334     0BDC  2BDE               	goto	u4761
  2335     0BDD  2BDF               	goto	u4760
  2336     0BDE                     u4761:
  2337     0BDE  2BE5               	goto	l406
  2338     0BDF                     u4760:
  2339     0BDF                     l3700:
  2340                           
  2341                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1372:    width--;
  2342     0BDF  30FF               	movlw	255
  2343     0BE0  07C5               	addwf	sprintf@width,f
  2344     0BE1  1803               	skipnc
  2345     0BE2  0AC6               	incf	sprintf@width+1,f
  2346     0BE3  30FF               	movlw	255
  2347     0BE4  07C6               	addwf	sprintf@width+1,f
  2348     0BE5                     l406:
  2349                           
  2350                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
  2351     0BE5  0846               	movf	sprintf@width+1,w
  2352     0BE6  3A80               	xorlw	128
  2353     0BE7  3C80               	sublw	128
  2354     0BE8  1D03               	skipz
  2355     0BE9  2BEC               	goto	u4775
  2356     0BEA  0845               	movf	sprintf@width,w
  2357     0BEB  0247               	subwf	sprintf@c,w
  2358     0BEC                     u4775:
  2359     0BEC  1803               	skipnc
  2360     0BED  2BEF               	goto	u4771
  2361     0BEE  2BF0               	goto	u4770
  2362     0BEF                     u4771:
  2363     0BEF  2BFC               	goto	l3704
  2364     0BF0                     u4770:
  2365     0BF0                     l3702:
  2366                           
  2367                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
  2368     0BF0  1283               	bcf	3,5	;RP0=0, select bank0
  2369     0BF1  1303               	bcf	3,6	;RP1=0, select bank0
  2370     0BF2  0847               	movf	sprintf@c,w
  2371     0BF3  00BC               	movwf	??_sprintf
  2372     0BF4  01BD               	clrf	??_sprintf+1
  2373     0BF5  083C               	movf	??_sprintf,w
  2374     0BF6  02C5               	subwf	sprintf@width,f
  2375     0BF7  083D               	movf	??_sprintf+1,w
  2376     0BF8  1C03               	skipc
  2377     0BF9  03C6               	decf	sprintf@width+1,f
  2378     0BFA  02C6               	subwf	sprintf@width+1,f
  2379     0BFB  2C00               	goto	l3706
  2380     0BFC                     l3704:
  2381                           
  2382                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
  2383     0BFC  1283               	bcf	3,5	;RP0=0, select bank0
  2384     0BFD  1303               	bcf	3,6	;RP1=0, select bank0
  2385     0BFE  01C5               	clrf	sprintf@width
  2386     0BFF  01C6               	clrf	sprintf@width+1
  2387     0C00                     l3706:
  2388                           
  2389                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1413:   if(flag &
      +                           0x04) {
  2390     0C00  1D44               	btfss	sprintf@flag,2
  2391     0C01  2C03               	goto	u4781
  2392     0C02  2C04               	goto	u4780
  2393     0C03                     u4781:
  2394     0C03  2C2F               	goto	l3722
  2395     0C04                     u4780:
  2396     0C04                     l3708:
  2397                           
  2398                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1418:    if(flag 
      +                          & 0x03)
  2399     0C04  0844               	movf	sprintf@flag,w
  2400     0C05  3903               	andlw	3
  2401     0C06  1903               	btfsc	3,2
  2402     0C07  2C09               	goto	u4791
  2403     0C08  2C0A               	goto	u4790
  2404     0C09                     u4791:
  2405     0C09  2C13               	goto	l3714
  2406     0C0A                     u4790:
  2407     0C0A                     l3710:
  2408                           
  2409                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1419:     ((*sp++
      +                           = ('-')));
  2410     0C0A  0848               	movf	sprintf@sp,w
  2411     0C0B  0084               	movwf	4
  2412     0C0C  302D               	movlw	45
  2413     0C0D  1383               	bcf	3,7	;select IRP bank0
  2414     0C0E  0080               	movwf	0
  2415     0C0F                     l3712:
  2416     0C0F  3001               	movlw	1
  2417     0C10  00FF               	movwf	btemp+1
  2418     0C11  087F               	movf	btemp+1,w
  2419     0C12  07C8               	addwf	sprintf@sp,f
  2420     0C13                     l3714:
  2421                           
  2422                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1441:    if(width
      +                          )
  2423     0C13  0845               	movf	sprintf@width,w
  2424     0C14  0446               	iorwf	sprintf@width+1,w
  2425     0C15  1903               	btfsc	3,2
  2426     0C16  2C18               	goto	u4801
  2427     0C17  2C19               	goto	u4800
  2428     0C18                     u4801:
  2429     0C18  2C59               	goto	l3736
  2430     0C19                     u4800:
  2431     0C19                     l3716:
  2432                           
  2433                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1443:      ((*sp+
      +                          + = ('0')));
  2434     0C19  0848               	movf	sprintf@sp,w
  2435     0C1A  0084               	movwf	4
  2436     0C1B  3030               	movlw	48
  2437     0C1C  1383               	bcf	3,7	;select IRP bank0
  2438     0C1D  0080               	movwf	0
  2439     0C1E                     l3718:
  2440     0C1E  3001               	movlw	1
  2441     0C1F  00FF               	movwf	btemp+1
  2442     0C20  087F               	movf	btemp+1,w
  2443     0C21  07C8               	addwf	sprintf@sp,f
  2444     0C22                     l3720:
  2445     0C22  30FF               	movlw	255
  2446     0C23  07C5               	addwf	sprintf@width,f
  2447     0C24  1803               	skipnc
  2448     0C25  0AC6               	incf	sprintf@width+1,f
  2449     0C26  30FF               	movlw	255
  2450     0C27  07C6               	addwf	sprintf@width+1,f
  2451     0C28  0845               	movf	sprintf@width,w
  2452     0C29  0446               	iorwf	sprintf@width+1,w
  2453     0C2A  1D03               	btfss	3,2
  2454     0C2B  2C2D               	goto	u4811
  2455     0C2C  2C2E               	goto	u4810
  2456     0C2D                     u4811:
  2457     0C2D  2C19               	goto	l3716
  2458     0C2E                     u4810:
  2459     0C2E  2C59               	goto	l3736
  2460     0C2F                     l3722:
  2461                           
  2462                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1450:    if(width
  2463     0C2F  0845               	movf	sprintf@width,w
  2464     0C30  0446               	iorwf	sprintf@width+1,w
  2465     0C31  1903               	btfsc	3,2
  2466     0C32  2C34               	goto	u4821
  2467     0C33  2C35               	goto	u4820
  2468     0C34                     u4821:
  2469     0C34  2C4A               	goto	l3730
  2470     0C35                     u4820:
  2471     0C35                     l3724:
  2472                           
  2473                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
  2474     0C35  0848               	movf	sprintf@sp,w
  2475     0C36  0084               	movwf	4
  2476     0C37  3020               	movlw	32
  2477     0C38  1383               	bcf	3,7	;select IRP bank0
  2478     0C39  0080               	movwf	0
  2479     0C3A                     l3726:
  2480     0C3A  3001               	movlw	1
  2481     0C3B  00FF               	movwf	btemp+1
  2482     0C3C  087F               	movf	btemp+1,w
  2483     0C3D  07C8               	addwf	sprintf@sp,f
  2484     0C3E                     l3728:
  2485     0C3E  30FF               	movlw	255
  2486     0C3F  07C5               	addwf	sprintf@width,f
  2487     0C40  1803               	skipnc
  2488     0C41  0AC6               	incf	sprintf@width+1,f
  2489     0C42  30FF               	movlw	255
  2490     0C43  07C6               	addwf	sprintf@width+1,f
  2491     0C44  0845               	movf	sprintf@width,w
  2492     0C45  0446               	iorwf	sprintf@width+1,w
  2493     0C46  1D03               	btfss	3,2
  2494     0C47  2C49               	goto	u4831
  2495     0C48  2C4A               	goto	u4830
  2496     0C49                     u4831:
  2497     0C49  2C35               	goto	l3724
  2498     0C4A                     u4830:
  2499     0C4A                     l3730:
  2500                           
  2501                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
  2502     0C4A  0844               	movf	sprintf@flag,w
  2503     0C4B  3903               	andlw	3
  2504     0C4C  1903               	btfsc	3,2
  2505     0C4D  2C4F               	goto	u4841
  2506     0C4E  2C50               	goto	u4840
  2507     0C4F                     u4841:
  2508     0C4F  2C59               	goto	l3736
  2509     0C50                     u4840:
  2510     0C50                     l3732:
  2511                           
  2512                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  2513     0C50  0848               	movf	sprintf@sp,w
  2514     0C51  0084               	movwf	4
  2515     0C52  302D               	movlw	45
  2516     0C53  1383               	bcf	3,7	;select IRP bank0
  2517     0C54  0080               	movwf	0
  2518     0C55                     l3734:
  2519     0C55  3001               	movlw	1
  2520     0C56  00FF               	movwf	btemp+1
  2521     0C57  087F               	movf	btemp+1,w
  2522     0C58  07C8               	addwf	sprintf@sp,f
  2523     0C59                     l3736:
  2524                           
  2525                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  2526     0C59  0847               	movf	sprintf@c,w
  2527     0C5A  00C0               	movwf	sprintf@prec
  2528                           
  2529                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2530     0C5B  2C97               	goto	l3744
  2531     0C5C                     l3738:
  2532                           
  2533                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  2534     0C5C  300A               	movlw	10
  2535     0C5D  00AD               	movwf	___lwmod@divisor
  2536     0C5E  3000               	movlw	0
  2537     0C5F  00AE               	movwf	___lwmod@divisor+1
  2538     0C60  0840               	movf	sprintf@prec,w
  2539     0C61  00BC               	movwf	??_sprintf
  2540     0C62  073C               	addwf	??_sprintf,w
  2541     0C63  3E12               	addlw	low (_dpowers| (0+32768))
  2542     0C64  0084               	movwf	4
  2543     0C65  3098               	movlw	high (_dpowers| (0+32768))
  2544     0C66  1803               	skipnc
  2545     0C67  3E01               	addlw	1
  2546     0C68  00FF               	movwf	btemp+1
  2547     0C69  160A  158A  2000  120A  158A  	fcall	stringtab
  2548     0C6E  00A6               	movwf	___lwdiv@divisor
  2549     0C6F  160A  158A  2000  120A  158A  	fcall	stringtab
  2550     0C74  00A7               	movwf	___lwdiv@divisor+1
  2551     0C75  0843               	movf	sprintf@val+1,w
  2552     0C76  00A9               	movwf	___lwdiv@dividend+1
  2553     0C77  0842               	movf	sprintf@val,w
  2554     0C78  00A8               	movwf	___lwdiv@dividend
  2555     0C79  160A  118A  23C2  120A  158A  	fcall	___lwdiv
  2556     0C7E  1283               	bcf	3,5	;RP0=0, select bank0
  2557     0C7F  1303               	bcf	3,6	;RP1=0, select bank0
  2558     0C80  0827               	movf	?___lwdiv+1,w
  2559     0C81  00B0               	movwf	___lwmod@dividend+1
  2560     0C82  0826               	movf	?___lwdiv,w
  2561     0C83  00AF               	movwf	___lwmod@dividend
  2562     0C84  160A  118A  22FA  120A  158A  	fcall	___lwmod
  2563     0C89  1283               	bcf	3,5	;RP0=0, select bank0
  2564     0C8A  1303               	bcf	3,6	;RP1=0, select bank0
  2565     0C8B  082D               	movf	?___lwmod,w
  2566     0C8C  3E30               	addlw	48
  2567     0C8D  00C7               	movwf	sprintf@c
  2568     0C8E                     l3740:
  2569                           
  2570                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  2571     0C8E  0848               	movf	sprintf@sp,w
  2572     0C8F  0084               	movwf	4
  2573     0C90  0847               	movf	sprintf@c,w
  2574     0C91  1383               	bcf	3,7	;select IRP bank0
  2575     0C92  0080               	movwf	0
  2576     0C93                     l3742:
  2577     0C93  3001               	movlw	1
  2578     0C94  00FF               	movwf	btemp+1
  2579     0C95  087F               	movf	btemp+1,w
  2580     0C96  07C8               	addwf	sprintf@sp,f
  2581     0C97                     l3744:
  2582                           
  2583                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2584     0C97  30FF               	movlw	255
  2585     0C98  00FF               	movwf	btemp+1
  2586     0C99  087F               	movf	btemp+1,w
  2587     0C9A  07C0               	addwf	sprintf@prec,f
  2588     0C9B  0A40               	incf	sprintf@prec,w
  2589     0C9C  1D03               	btfss	3,2
  2590     0C9D  2C9F               	goto	u4851
  2591     0C9E  2CA0               	goto	u4850
  2592     0C9F                     u4851:
  2593     0C9F  2C5C               	goto	l3738
  2594     0CA0                     u4850:
  2595     0CA0                     l3746:
  2596                           
  2597                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2598     0CA0  0833               	movf	sprintf@f+1,w
  2599     0CA1  00BD               	movwf	??_sprintf+1
  2600     0CA2  0832               	movf	sprintf@f,w
  2601     0CA3  00BC               	movwf	??_sprintf
  2602     0CA4  0AB2               	incf	sprintf@f,f
  2603     0CA5  1903               	skipnz
  2604     0CA6  0AB3               	incf	sprintf@f+1,f
  2605     0CA7  083D               	movf	??_sprintf+1,w
  2606     0CA8  00FF               	movwf	btemp+1
  2607     0CA9  083C               	movf	??_sprintf,w
  2608     0CAA  0084               	movwf	4
  2609     0CAB  160A  158A  2000  120A  158A  	fcall	stringtab
  2610     0CB0  00C7               	movwf	sprintf@c
  2611     0CB1  0847               	movf	sprintf@c,w
  2612     0CB2  1D03               	btfss	3,2
  2613     0CB3  2CB5               	goto	u4861
  2614     0CB4  2CB6               	goto	u4860
  2615     0CB5                     u4861:
  2616     0CB5  2ACA               	goto	l3638
  2617     0CB6                     u4860:
  2618     0CB6                     l3748:
  2619                           
  2620                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  2621     0CB6  0848               	movf	sprintf@sp,w
  2622     0CB7  0084               	movwf	4
  2623     0CB8  1383               	bcf	3,7	;select IRP bank0
  2624     0CB9  0180               	clrf	0
  2625     0CBA                     l423:
  2626     0CBA  0008               	return
  2627     0CBB                     __end_of_sprintf:
  2628                           
  2629                           	psect	text3
  2630     1202                     __ptext3:	
  2631 ;; *************** function _isdigit *****************
  2632 ;; Defined at:
  2633 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\isdigit.c"
  2634 ;; Parameters:    Size  Location     Type
  2635 ;;  c               1    wreg     unsigned char 
  2636 ;; Auto vars:     Size  Location     Type
  2637 ;;  c               1    1[BANK0 ] unsigned char 
  2638 ;; Return value:  Size  Location     Type
  2639 ;;		None               void
  2640 ;; Registers used:
  2641 ;;		wreg, status,2, status,0
  2642 ;; Tracked objects:
  2643 ;;		On entry : 0/0
  2644 ;;		On exit  : 0/0
  2645 ;;		Unchanged: 0/0
  2646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2647 ;;      Params:         0       0       0       0       0
  2648 ;;      Locals:         0       2       0       0       0
  2649 ;;      Temps:          0       0       0       0       0
  2650 ;;      Totals:         0       2       0       0       0
  2651 ;;Total ram usage:        2 bytes
  2652 ;; Hardware stack levels used: 1
  2653 ;; Hardware stack levels required when called: 2
  2654 ;; This function calls:
  2655 ;;		Nothing
  2656 ;; This function is called by:
  2657 ;;		_sprintf
  2658 ;; This function uses a non-reentrant model
  2659 ;;
  2660                           
  2661     1202                     _isdigit:	
  2662                           ;psect for function _isdigit
  2663                           
  2664                           
  2665                           ;incstack = 0
  2666                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  2667                           ;isdigit@c stored from wreg
  2668     1202  1283               	bcf	3,5	;RP0=0, select bank0
  2669     1203  1303               	bcf	3,6	;RP1=0, select bank0
  2670     1204  00A1               	movwf	isdigit@c
  2671     1205                     l3550:
  2672     1205  01A0               	clrf	_isdigit$850
  2673     1206                     l3552:
  2674     1206  303A               	movlw	58
  2675     1207  0221               	subwf	isdigit@c,w
  2676     1208  1803               	skipnc
  2677     1209  2A0B               	goto	u4521
  2678     120A  2A0C               	goto	u4520
  2679     120B                     u4521:
  2680     120B  2A14               	goto	l3558
  2681     120C                     u4520:
  2682     120C                     l3554:
  2683     120C  3030               	movlw	48
  2684     120D  0221               	subwf	isdigit@c,w
  2685     120E  1C03               	skipc
  2686     120F  2A11               	goto	u4531
  2687     1210  2A12               	goto	u4530
  2688     1211                     u4531:
  2689     1211  2A14               	goto	l3558
  2690     1212                     u4530:
  2691     1212                     l3556:
  2692     1212  01A0               	clrf	_isdigit$850
  2693     1213  0AA0               	incf	_isdigit$850,f
  2694     1214                     l3558:
  2695     1214  0C20               	rrf	_isdigit$850,w
  2696     1215                     l880:
  2697     1215  0008               	return
  2698     1216                     __end_of_isdigit:
  2699                           
  2700                           	psect	text4
  2701     12AA                     __ptext4:	
  2702 ;; *************** function ___wmul *****************
  2703 ;; Defined at:
  2704 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul16.c"
  2705 ;; Parameters:    Size  Location     Type
  2706 ;;  multiplier      2    0[BANK0 ] unsigned int 
  2707 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  2708 ;; Auto vars:     Size  Location     Type
  2709 ;;  product         2    4[BANK0 ] unsigned int 
  2710 ;; Return value:  Size  Location     Type
  2711 ;;                  2    0[BANK0 ] unsigned int 
  2712 ;; Registers used:
  2713 ;;		wreg, status,2, status,0
  2714 ;; Tracked objects:
  2715 ;;		On entry : 0/0
  2716 ;;		On exit  : 0/0
  2717 ;;		Unchanged: 0/0
  2718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2719 ;;      Params:         0       4       0       0       0
  2720 ;;      Locals:         0       2       0       0       0
  2721 ;;      Temps:          0       0       0       0       0
  2722 ;;      Totals:         0       6       0       0       0
  2723 ;;Total ram usage:        6 bytes
  2724 ;; Hardware stack levels used: 1
  2725 ;; Hardware stack levels required when called: 2
  2726 ;; This function calls:
  2727 ;;		Nothing
  2728 ;; This function is called by:
  2729 ;;		_main
  2730 ;;		_sprintf
  2731 ;; This function uses a non-reentrant model
  2732 ;;
  2733                           
  2734     12AA                     ___wmul:	
  2735                           ;psect for function ___wmul
  2736                           
  2737     12AA                     l3562:	
  2738                           ;incstack = 0
  2739                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2740                           
  2741     12AA  1283               	bcf	3,5	;RP0=0, select bank0
  2742     12AB  1303               	bcf	3,6	;RP1=0, select bank0
  2743     12AC  01A4               	clrf	___wmul@product
  2744     12AD  01A5               	clrf	___wmul@product+1
  2745     12AE                     l3564:
  2746     12AE  1C20               	btfss	___wmul@multiplier,0
  2747     12AF  2AB1               	goto	u4541
  2748     12B0  2AB2               	goto	u4540
  2749     12B1                     u4541:
  2750     12B1  2AB8               	goto	l427
  2751     12B2                     u4540:
  2752     12B2                     l3566:
  2753     12B2  0822               	movf	___wmul@multiplicand,w
  2754     12B3  07A4               	addwf	___wmul@product,f
  2755     12B4  1803               	skipnc
  2756     12B5  0AA5               	incf	___wmul@product+1,f
  2757     12B6  0823               	movf	___wmul@multiplicand+1,w
  2758     12B7  07A5               	addwf	___wmul@product+1,f
  2759     12B8                     l427:
  2760     12B8  3001               	movlw	1
  2761     12B9                     u4555:
  2762     12B9  1003               	clrc
  2763     12BA  0DA2               	rlf	___wmul@multiplicand,f
  2764     12BB  0DA3               	rlf	___wmul@multiplicand+1,f
  2765     12BC  3EFF               	addlw	-1
  2766     12BD  1D03               	skipz
  2767     12BE  2AB9               	goto	u4555
  2768     12BF                     l3568:
  2769     12BF  3001               	movlw	1
  2770     12C0                     u4565:
  2771     12C0  1003               	clrc
  2772     12C1  0CA1               	rrf	___wmul@multiplier+1,f
  2773     12C2  0CA0               	rrf	___wmul@multiplier,f
  2774     12C3  3EFF               	addlw	-1
  2775     12C4  1D03               	skipz
  2776     12C5  2AC0               	goto	u4565
  2777     12C6                     l3570:
  2778     12C6  0820               	movf	___wmul@multiplier,w
  2779     12C7  0421               	iorwf	___wmul@multiplier+1,w
  2780     12C8  1D03               	btfss	3,2
  2781     12C9  2ACB               	goto	u4571
  2782     12CA  2ACC               	goto	u4570
  2783     12CB                     u4571:
  2784     12CB  2AAE               	goto	l3564
  2785     12CC                     u4570:
  2786     12CC                     l3572:
  2787     12CC  0825               	movf	___wmul@product+1,w
  2788     12CD  00A1               	movwf	?___wmul+1
  2789     12CE  0824               	movf	___wmul@product,w
  2790     12CF  00A0               	movwf	?___wmul
  2791     12D0                     l429:
  2792     12D0  0008               	return
  2793     12D1                     __end_of___wmul:
  2794                           
  2795                           	psect	text5
  2796     12FA                     __ptext5:	
  2797 ;; *************** function ___lwmod *****************
  2798 ;; Defined at:
  2799 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwmod.c"
  2800 ;; Parameters:    Size  Location     Type
  2801 ;;  divisor         2   13[BANK0 ] unsigned int 
  2802 ;;  dividend        2   15[BANK0 ] unsigned int 
  2803 ;; Auto vars:     Size  Location     Type
  2804 ;;  counter         1   17[BANK0 ] unsigned char 
  2805 ;; Return value:  Size  Location     Type
  2806 ;;                  2   13[BANK0 ] unsigned int 
  2807 ;; Registers used:
  2808 ;;		wreg, status,2, status,0, btemp+1
  2809 ;; Tracked objects:
  2810 ;;		On entry : 0/0
  2811 ;;		On exit  : 0/0
  2812 ;;		Unchanged: 0/0
  2813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2814 ;;      Params:         0       4       0       0       0
  2815 ;;      Locals:         0       1       0       0       0
  2816 ;;      Temps:          0       0       0       0       0
  2817 ;;      Totals:         0       5       0       0       0
  2818 ;;Total ram usage:        5 bytes
  2819 ;; Hardware stack levels used: 1
  2820 ;; Hardware stack levels required when called: 2
  2821 ;; This function calls:
  2822 ;;		Nothing
  2823 ;; This function is called by:
  2824 ;;		_main
  2825 ;;		_sprintf
  2826 ;; This function uses a non-reentrant model
  2827 ;;
  2828                           
  2829     12FA                     ___lwmod:	
  2830                           ;psect for function ___lwmod
  2831                           
  2832     12FA                     l2318:	
  2833                           ;incstack = 0
  2834                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
  2835                           
  2836     12FA  1283               	bcf	3,5	;RP0=0, select bank0
  2837     12FB  1303               	bcf	3,6	;RP1=0, select bank0
  2838     12FC  082D               	movf	___lwmod@divisor,w
  2839     12FD  042E               	iorwf	___lwmod@divisor+1,w
  2840     12FE  1903               	btfsc	3,2
  2841     12FF  2B01               	goto	u2431
  2842     1300  2B02               	goto	u2430
  2843     1301                     u2431:
  2844     1301  2B31               	goto	l2336
  2845     1302                     u2430:
  2846     1302                     l2320:
  2847     1302  01B1               	clrf	___lwmod@counter
  2848     1303  0AB1               	incf	___lwmod@counter,f
  2849     1304  2B10               	goto	l2326
  2850     1305                     l2322:
  2851     1305  3001               	movlw	1
  2852     1306                     u2445:
  2853     1306  1003               	clrc
  2854     1307  0DAD               	rlf	___lwmod@divisor,f
  2855     1308  0DAE               	rlf	___lwmod@divisor+1,f
  2856     1309  3EFF               	addlw	-1
  2857     130A  1D03               	skipz
  2858     130B  2B06               	goto	u2445
  2859     130C                     l2324:
  2860     130C  3001               	movlw	1
  2861     130D  00FF               	movwf	btemp+1
  2862     130E  087F               	movf	btemp+1,w
  2863     130F  07B1               	addwf	___lwmod@counter,f
  2864     1310                     l2326:
  2865     1310  1FAE               	btfss	___lwmod@divisor+1,7
  2866     1311  2B13               	goto	u2451
  2867     1312  2B14               	goto	u2450
  2868     1313                     u2451:
  2869     1313  2B05               	goto	l2322
  2870     1314                     u2450:
  2871     1314                     l2328:
  2872     1314  082E               	movf	___lwmod@divisor+1,w
  2873     1315  0230               	subwf	___lwmod@dividend+1,w
  2874     1316  1D03               	skipz
  2875     1317  2B1A               	goto	u2465
  2876     1318  082D               	movf	___lwmod@divisor,w
  2877     1319  022F               	subwf	___lwmod@dividend,w
  2878     131A                     u2465:
  2879     131A  1C03               	skipc
  2880     131B  2B1D               	goto	u2461
  2881     131C  2B1E               	goto	u2460
  2882     131D                     u2461:
  2883     131D  2B24               	goto	l2332
  2884     131E                     u2460:
  2885     131E                     l2330:
  2886     131E  082D               	movf	___lwmod@divisor,w
  2887     131F  02AF               	subwf	___lwmod@dividend,f
  2888     1320  082E               	movf	___lwmod@divisor+1,w
  2889     1321  1C03               	skipc
  2890     1322  03B0               	decf	___lwmod@dividend+1,f
  2891     1323  02B0               	subwf	___lwmod@dividend+1,f
  2892     1324                     l2332:
  2893     1324  3001               	movlw	1
  2894     1325                     u2475:
  2895     1325  1003               	clrc
  2896     1326  0CAE               	rrf	___lwmod@divisor+1,f
  2897     1327  0CAD               	rrf	___lwmod@divisor,f
  2898     1328  3EFF               	addlw	-1
  2899     1329  1D03               	skipz
  2900     132A  2B25               	goto	u2475
  2901     132B                     l2334:
  2902     132B  3001               	movlw	1
  2903     132C  02B1               	subwf	___lwmod@counter,f
  2904     132D  1D03               	btfss	3,2
  2905     132E  2B30               	goto	u2481
  2906     132F  2B31               	goto	u2480
  2907     1330                     u2481:
  2908     1330  2B14               	goto	l2328
  2909     1331                     u2480:
  2910     1331                     l2336:
  2911     1331  0830               	movf	___lwmod@dividend+1,w
  2912     1332  00AE               	movwf	?___lwmod+1
  2913     1333  082F               	movf	___lwmod@dividend,w
  2914     1334  00AD               	movwf	?___lwmod
  2915     1335                     l709:
  2916     1335  0008               	return
  2917     1336                     __end_of___lwmod:
  2918                           
  2919                           	psect	text6
  2920     13C2                     __ptext6:	
  2921 ;; *************** function ___lwdiv *****************
  2922 ;; Defined at:
  2923 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwdiv.c"
  2924 ;; Parameters:    Size  Location     Type
  2925 ;;  divisor         2    6[BANK0 ] unsigned int 
  2926 ;;  dividend        2    8[BANK0 ] unsigned int 
  2927 ;; Auto vars:     Size  Location     Type
  2928 ;;  quotient        2   10[BANK0 ] unsigned int 
  2929 ;;  counter         1   12[BANK0 ] unsigned char 
  2930 ;; Return value:  Size  Location     Type
  2931 ;;                  2    6[BANK0 ] unsigned int 
  2932 ;; Registers used:
  2933 ;;		wreg, status,2, status,0, btemp+1
  2934 ;; Tracked objects:
  2935 ;;		On entry : 0/0
  2936 ;;		On exit  : 0/0
  2937 ;;		Unchanged: 0/0
  2938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2939 ;;      Params:         0       4       0       0       0
  2940 ;;      Locals:         0       3       0       0       0
  2941 ;;      Temps:          0       0       0       0       0
  2942 ;;      Totals:         0       7       0       0       0
  2943 ;;Total ram usage:        7 bytes
  2944 ;; Hardware stack levels used: 1
  2945 ;; Hardware stack levels required when called: 2
  2946 ;; This function calls:
  2947 ;;		Nothing
  2948 ;; This function is called by:
  2949 ;;		_main
  2950 ;;		_sprintf
  2951 ;; This function uses a non-reentrant model
  2952 ;;
  2953                           
  2954     13C2                     ___lwdiv:	
  2955                           ;psect for function ___lwdiv
  2956                           
  2957     13C2                     l2292:	
  2958                           ;incstack = 0
  2959                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  2960                           
  2961     13C2  1283               	bcf	3,5	;RP0=0, select bank0
  2962     13C3  1303               	bcf	3,6	;RP1=0, select bank0
  2963     13C4  01AA               	clrf	___lwdiv@quotient
  2964     13C5  01AB               	clrf	___lwdiv@quotient+1
  2965     13C6                     l2294:
  2966     13C6  0826               	movf	___lwdiv@divisor,w
  2967     13C7  0427               	iorwf	___lwdiv@divisor+1,w
  2968     13C8  1903               	btfsc	3,2
  2969     13C9  2BCB               	goto	u2361
  2970     13CA  2BCC               	goto	u2360
  2971     13CB                     u2361:
  2972     13CB  2C03               	goto	l2314
  2973     13CC                     u2360:
  2974     13CC                     l2296:
  2975     13CC  01AC               	clrf	___lwdiv@counter
  2976     13CD  0AAC               	incf	___lwdiv@counter,f
  2977     13CE  2BDA               	goto	l2302
  2978     13CF                     l2298:
  2979     13CF  3001               	movlw	1
  2980     13D0                     u2375:
  2981     13D0  1003               	clrc
  2982     13D1  0DA6               	rlf	___lwdiv@divisor,f
  2983     13D2  0DA7               	rlf	___lwdiv@divisor+1,f
  2984     13D3  3EFF               	addlw	-1
  2985     13D4  1D03               	skipz
  2986     13D5  2BD0               	goto	u2375
  2987     13D6                     l2300:
  2988     13D6  3001               	movlw	1
  2989     13D7  00FF               	movwf	btemp+1
  2990     13D8  087F               	movf	btemp+1,w
  2991     13D9  07AC               	addwf	___lwdiv@counter,f
  2992     13DA                     l2302:
  2993     13DA  1FA7               	btfss	___lwdiv@divisor+1,7
  2994     13DB  2BDD               	goto	u2381
  2995     13DC  2BDE               	goto	u2380
  2996     13DD                     u2381:
  2997     13DD  2BCF               	goto	l2298
  2998     13DE                     u2380:
  2999     13DE                     l2304:
  3000     13DE  3001               	movlw	1
  3001     13DF                     u2395:
  3002     13DF  1003               	clrc
  3003     13E0  0DAA               	rlf	___lwdiv@quotient,f
  3004     13E1  0DAB               	rlf	___lwdiv@quotient+1,f
  3005     13E2  3EFF               	addlw	-1
  3006     13E3  1D03               	skipz
  3007     13E4  2BDF               	goto	u2395
  3008     13E5  0827               	movf	___lwdiv@divisor+1,w
  3009     13E6  0229               	subwf	___lwdiv@dividend+1,w
  3010     13E7  1D03               	skipz
  3011     13E8  2BEB               	goto	u2405
  3012     13E9  0826               	movf	___lwdiv@divisor,w
  3013     13EA  0228               	subwf	___lwdiv@dividend,w
  3014     13EB                     u2405:
  3015     13EB  1C03               	skipc
  3016     13EC  2BEE               	goto	u2401
  3017     13ED  2BEF               	goto	u2400
  3018     13EE                     u2401:
  3019     13EE  2BF6               	goto	l2310
  3020     13EF                     u2400:
  3021     13EF                     l2306:
  3022     13EF  0826               	movf	___lwdiv@divisor,w
  3023     13F0  02A8               	subwf	___lwdiv@dividend,f
  3024     13F1  0827               	movf	___lwdiv@divisor+1,w
  3025     13F2  1C03               	skipc
  3026     13F3  03A9               	decf	___lwdiv@dividend+1,f
  3027     13F4  02A9               	subwf	___lwdiv@dividend+1,f
  3028     13F5                     l2308:
  3029     13F5  142A               	bsf	___lwdiv@quotient,0
  3030     13F6                     l2310:
  3031     13F6  3001               	movlw	1
  3032     13F7                     u2415:
  3033     13F7  1003               	clrc
  3034     13F8  0CA7               	rrf	___lwdiv@divisor+1,f
  3035     13F9  0CA6               	rrf	___lwdiv@divisor,f
  3036     13FA  3EFF               	addlw	-1
  3037     13FB  1D03               	skipz
  3038     13FC  2BF7               	goto	u2415
  3039     13FD                     l2312:
  3040     13FD  3001               	movlw	1
  3041     13FE  02AC               	subwf	___lwdiv@counter,f
  3042     13FF  1D03               	btfss	3,2
  3043     1400  2C02               	goto	u2421
  3044     1401  2C03               	goto	u2420
  3045     1402                     u2421:
  3046     1402  2BDE               	goto	l2304
  3047     1403                     u2420:
  3048     1403                     l2314:
  3049     1403  082B               	movf	___lwdiv@quotient+1,w
  3050     1404  00A7               	movwf	?___lwdiv+1
  3051     1405  082A               	movf	___lwdiv@quotient,w
  3052     1406  00A6               	movwf	?___lwdiv
  3053     1407                     l699:
  3054     1407  0008               	return
  3055     1408                     __end_of___lwdiv:
  3056                           
  3057                           	psect	text7
  3058     1216                     __ptext7:	
  3059 ;; *************** function _readEEPROM *****************
  3060 ;; Defined at:
  3061 ;;		line 53 in file "main.c"
  3062 ;; Parameters:    Size  Location     Type
  3063 ;;  address         2    0[BANK0 ] unsigned int 
  3064 ;; Auto vars:     Size  Location     Type
  3065 ;;		None
  3066 ;; Return value:  Size  Location     Type
  3067 ;;                  2    0[BANK0 ] unsigned int 
  3068 ;; Registers used:
  3069 ;;		wreg
  3070 ;; Tracked objects:
  3071 ;;		On entry : 0/0
  3072 ;;		On exit  : 0/0
  3073 ;;		Unchanged: 0/0
  3074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3075 ;;      Params:         0       2       0       0       0
  3076 ;;      Locals:         0       0       0       0       0
  3077 ;;      Temps:          0       2       0       0       0
  3078 ;;      Totals:         0       4       0       0       0
  3079 ;;Total ram usage:        4 bytes
  3080 ;; Hardware stack levels used: 1
  3081 ;; Hardware stack levels required when called: 2
  3082 ;; This function calls:
  3083 ;;		Nothing
  3084 ;; This function is called by:
  3085 ;;		_main
  3086 ;; This function uses a non-reentrant model
  3087 ;;
  3088                           
  3089     1216                     _readEEPROM:	
  3090                           ;psect for function _readEEPROM
  3091                           
  3092     1216                     l3630:	
  3093                           ;incstack = 0
  3094                           ; Regs used in _readEEPROM: [wreg]
  3095                           
  3096                           
  3097                           ;main.c: 55:     EEADR = address;
  3098     1216  1283               	bcf	3,5	;RP0=0, select bank0
  3099     1217  1303               	bcf	3,6	;RP1=0, select bank0
  3100     1218  0820               	movf	readEEPROM@address,w
  3101     1219  1283               	bcf	3,5	;RP0=0, select bank2
  3102     121A  1703               	bsf	3,6	;RP1=1, select bank2
  3103     121B  008D               	movwf	13	;volatile
  3104     121C                     l3632:
  3105                           
  3106                           ;main.c: 56:     RD = 1;
  3107     121C  1683               	bsf	3,5	;RP0=1, select bank3
  3108     121D  1703               	bsf	3,6	;RP1=1, select bank3
  3109     121E  140C               	bsf	12,0	;volsfr
  3110                           
  3111                           ;main.c: 57:     return EEDATA;
  3112     121F  1283               	bcf	3,5	;RP0=0, select bank2
  3113     1220  1703               	bsf	3,6	;RP1=1, select bank2
  3114     1221  080C               	movf	12,w	;volatile
  3115     1222  1283               	bcf	3,5	;RP0=0, select bank0
  3116     1223  1303               	bcf	3,6	;RP1=0, select bank0
  3117     1224  00A2               	movwf	??_readEEPROM
  3118     1225  01A3               	clrf	??_readEEPROM+1
  3119     1226  0822               	movf	??_readEEPROM,w
  3120     1227  00A0               	movwf	?_readEEPROM
  3121     1228  0823               	movf	??_readEEPROM+1,w
  3122     1229  00A1               	movwf	?_readEEPROM+1
  3123     122A                     l158:
  3124     122A  0008               	return
  3125     122B                     __end_of_readEEPROM:
  3126                           
  3127                           	psect	text8
  3128     083B                     __ptext8:	
  3129 ;; *************** function ___xxtofl *****************
  3130 ;; Defined at:
  3131 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\xxtofl.c"
  3132 ;; Parameters:    Size  Location     Type
  3133 ;;  sign            1    wreg     unsigned char 
  3134 ;;  val             4    0[BANK0 ] long 
  3135 ;; Auto vars:     Size  Location     Type
  3136 ;;  sign            1    8[BANK0 ] unsigned char 
  3137 ;;  arg             4   10[BANK0 ] unsigned long 
  3138 ;;  exp             1    9[BANK0 ] unsigned char 
  3139 ;; Return value:  Size  Location     Type
  3140 ;;                  4    0[BANK0 ] unsigned char 
  3141 ;; Registers used:
  3142 ;;		wreg, status,2, status,0, btemp+1
  3143 ;; Tracked objects:
  3144 ;;		On entry : 0/0
  3145 ;;		On exit  : 0/0
  3146 ;;		Unchanged: 0/0
  3147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3148 ;;      Params:         0       4       0       0       0
  3149 ;;      Locals:         0       6       0       0       0
  3150 ;;      Temps:          0       4       0       0       0
  3151 ;;      Totals:         0      14       0       0       0
  3152 ;;Total ram usage:       14 bytes
  3153 ;; Hardware stack levels used: 1
  3154 ;; Hardware stack levels required when called: 2
  3155 ;; This function calls:
  3156 ;;		Nothing
  3157 ;; This function is called by:
  3158 ;;		_main
  3159 ;; This function uses a non-reentrant model
  3160 ;;
  3161                           
  3162     083B                     ___xxtofl:	
  3163                           ;psect for function ___xxtofl
  3164                           
  3165                           
  3166                           ;incstack = 0
  3167                           ; Regs used in ___xxtofl: [wreg+status,2+status,0+btemp+1]
  3168                           ;___xxtofl@sign stored from wreg
  3169     083B  1283               	bcf	3,5	;RP0=0, select bank0
  3170     083C  1303               	bcf	3,6	;RP1=0, select bank0
  3171     083D  00A8               	movwf	___xxtofl@sign
  3172     083E                     l2880:
  3173     083E  0828               	movf	___xxtofl@sign,w
  3174     083F  1903               	btfsc	3,2
  3175     0840  2842               	goto	u3601
  3176     0841  2843               	goto	u3600
  3177     0842                     u3601:
  3178     0842  2857               	goto	l2886
  3179     0843                     u3600:
  3180     0843                     l2882:
  3181     0843  1FA3               	btfss	___xxtofl@val+3,7
  3182     0844  2846               	goto	u3611
  3183     0845  2847               	goto	u3610
  3184     0846                     u3611:
  3185     0846  2857               	goto	l2886
  3186     0847                     u3610:
  3187     0847                     l2884:
  3188     0847  0920               	comf	___xxtofl@val,w
  3189     0848  00AA               	movwf	___xxtofl@arg
  3190     0849  0921               	comf	___xxtofl@val+1,w
  3191     084A  00AB               	movwf	___xxtofl@arg+1
  3192     084B  0922               	comf	___xxtofl@val+2,w
  3193     084C  00AC               	movwf	___xxtofl@arg+2
  3194     084D  0923               	comf	___xxtofl@val+3,w
  3195     084E  00AD               	movwf	___xxtofl@arg+3
  3196     084F  0AAA               	incf	___xxtofl@arg,f
  3197     0850  1903               	skipnz
  3198     0851  0AAB               	incf	___xxtofl@arg+1,f
  3199     0852  1903               	skipnz
  3200     0853  0AAC               	incf	___xxtofl@arg+2,f
  3201     0854  1903               	skipnz
  3202     0855  0AAD               	incf	___xxtofl@arg+3,f
  3203     0856  285F               	goto	l860
  3204     0857                     l2886:
  3205     0857  0823               	movf	___xxtofl@val+3,w
  3206     0858  00AD               	movwf	___xxtofl@arg+3
  3207     0859  0822               	movf	___xxtofl@val+2,w
  3208     085A  00AC               	movwf	___xxtofl@arg+2
  3209     085B  0821               	movf	___xxtofl@val+1,w
  3210     085C  00AB               	movwf	___xxtofl@arg+1
  3211     085D  0820               	movf	___xxtofl@val,w
  3212     085E  00AA               	movwf	___xxtofl@arg
  3213     085F                     l860:
  3214     085F  0823               	movf	___xxtofl@val+3,w
  3215     0860  0422               	iorwf	___xxtofl@val+2,w
  3216     0861  0421               	iorwf	___xxtofl@val+1,w
  3217     0862  0420               	iorwf	___xxtofl@val,w
  3218     0863  1D03               	skipz
  3219     0864  2866               	goto	u3621
  3220     0865  2867               	goto	u3620
  3221     0866                     u3621:
  3222     0866  2870               	goto	l2892
  3223     0867                     u3620:
  3224     0867                     l2888:
  3225     0867  3000               	movlw	0
  3226     0868  00A3               	movwf	?___xxtofl+3
  3227     0869  3000               	movlw	0
  3228     086A  00A2               	movwf	?___xxtofl+2
  3229     086B  3000               	movlw	0
  3230     086C  00A1               	movwf	?___xxtofl+1
  3231     086D  3000               	movlw	0
  3232     086E  00A0               	movwf	?___xxtofl
  3233     086F  28F4               	goto	l862
  3234     0870                     l2892:
  3235     0870  3096               	movlw	150
  3236     0871  00A9               	movwf	___xxtofl@exp
  3237     0872  2880               	goto	l2898
  3238     0873                     l2894:
  3239     0873  3001               	movlw	1
  3240     0874  00FF               	movwf	btemp+1
  3241     0875  087F               	movf	btemp+1,w
  3242     0876  07A9               	addwf	___xxtofl@exp,f
  3243     0877                     l2896:
  3244     0877  3001               	movlw	1
  3245     0878                     u3635:
  3246     0878  1003               	clrc
  3247     0879  0CAD               	rrf	___xxtofl@arg+3,f
  3248     087A  0CAC               	rrf	___xxtofl@arg+2,f
  3249     087B  0CAB               	rrf	___xxtofl@arg+1,f
  3250     087C  0CAA               	rrf	___xxtofl@arg,f
  3251     087D  3EFF               	addlw	-1
  3252     087E  1D03               	skipz
  3253     087F  2878               	goto	u3635
  3254     0880                     l2898:
  3255     0880  30FE               	movlw	254
  3256     0881  052D               	andwf	___xxtofl@arg+3,w
  3257     0882  1D03               	btfss	3,2
  3258     0883  2885               	goto	u3641
  3259     0884  2886               	goto	u3640
  3260     0885                     u3641:
  3261     0885  2873               	goto	l2894
  3262     0886                     u3640:
  3263     0886  28A2               	goto	l2906
  3264     0887                     l2900:
  3265     0887  3001               	movlw	1
  3266     0888  00FF               	movwf	btemp+1
  3267     0889  087F               	movf	btemp+1,w
  3268     088A  07A9               	addwf	___xxtofl@exp,f
  3269     088B                     l2902:
  3270     088B  3001               	movlw	1
  3271     088C  07AA               	addwf	___xxtofl@arg,f
  3272     088D  3000               	movlw	0
  3273     088E  1803               	skipnc
  3274     088F  3001               	movlw	1
  3275     0890  07AB               	addwf	___xxtofl@arg+1,f
  3276     0891  3000               	movlw	0
  3277     0892  1803               	skipnc
  3278     0893  3001               	movlw	1
  3279     0894  07AC               	addwf	___xxtofl@arg+2,f
  3280     0895  3000               	movlw	0
  3281     0896  1803               	skipnc
  3282     0897  3001               	movlw	1
  3283     0898  07AD               	addwf	___xxtofl@arg+3,f
  3284     0899                     l2904:
  3285     0899  3001               	movlw	1
  3286     089A                     u3655:
  3287     089A  1003               	clrc
  3288     089B  0CAD               	rrf	___xxtofl@arg+3,f
  3289     089C  0CAC               	rrf	___xxtofl@arg+2,f
  3290     089D  0CAB               	rrf	___xxtofl@arg+1,f
  3291     089E  0CAA               	rrf	___xxtofl@arg,f
  3292     089F  3EFF               	addlw	-1
  3293     08A0  1D03               	skipz
  3294     08A1  289A               	goto	u3655
  3295     08A2                     l2906:
  3296     08A2  30FF               	movlw	255
  3297     08A3  052D               	andwf	___xxtofl@arg+3,w
  3298     08A4  1D03               	btfss	3,2
  3299     08A5  28A7               	goto	u3661
  3300     08A6  28A8               	goto	u3660
  3301     08A7                     u3661:
  3302     08A7  2887               	goto	l2900
  3303     08A8                     u3660:
  3304     08A8  28B4               	goto	l2910
  3305     08A9                     l2908:
  3306     08A9  3001               	movlw	1
  3307     08AA  02A9               	subwf	___xxtofl@exp,f
  3308     08AB  3001               	movlw	1
  3309     08AC  00A4               	movwf	??___xxtofl
  3310     08AD                     u3675:
  3311     08AD  1003               	clrc
  3312     08AE  0DAA               	rlf	___xxtofl@arg,f
  3313     08AF  0DAB               	rlf	___xxtofl@arg+1,f
  3314     08B0  0DAC               	rlf	___xxtofl@arg+2,f
  3315     08B1  0DAD               	rlf	___xxtofl@arg+3,f
  3316     08B2  0BA4               	decfsz	??___xxtofl,f
  3317     08B3  28AD               	goto	u3675
  3318     08B4                     l2910:
  3319     08B4  1BAC               	btfsc	___xxtofl@arg+2,7
  3320     08B5  28B7               	goto	u3681
  3321     08B6  28B8               	goto	u3680
  3322     08B7                     u3681:
  3323     08B7  28BE               	goto	l873
  3324     08B8                     u3680:
  3325     08B8                     l2912:
  3326     08B8  3002               	movlw	2
  3327     08B9  0229               	subwf	___xxtofl@exp,w
  3328     08BA  1803               	skipnc
  3329     08BB  28BD               	goto	u3691
  3330     08BC  28BE               	goto	u3690
  3331     08BD                     u3691:
  3332     08BD  28A9               	goto	l2908
  3333     08BE                     u3690:
  3334     08BE                     l873:
  3335     08BE  1829               	btfsc	___xxtofl@exp,0
  3336     08BF  28C1               	goto	u3701
  3337     08C0  28C2               	goto	u3700
  3338     08C1                     u3701:
  3339     08C1  28CA               	goto	l874
  3340     08C2                     u3700:
  3341     08C2                     l2914:
  3342     08C2  30FF               	movlw	255
  3343     08C3  05AA               	andwf	___xxtofl@arg,f
  3344     08C4  30FF               	movlw	255
  3345     08C5  05AB               	andwf	___xxtofl@arg+1,f
  3346     08C6  307F               	movlw	127
  3347     08C7  05AC               	andwf	___xxtofl@arg+2,f
  3348     08C8  30FF               	movlw	255
  3349     08C9  05AD               	andwf	___xxtofl@arg+3,f
  3350     08CA                     l874:
  3351     08CA  1003               	clrc
  3352     08CB  0CA9               	rrf	___xxtofl@exp,f
  3353     08CC                     l2916:
  3354     08CC  0829               	movf	___xxtofl@exp,w
  3355     08CD  00A4               	movwf	??___xxtofl
  3356     08CE  01A5               	clrf	??___xxtofl+1
  3357     08CF  01A6               	clrf	??___xxtofl+2
  3358     08D0  01A7               	clrf	??___xxtofl+3
  3359     08D1  3018               	movlw	24
  3360     08D2                     u3715:
  3361     08D2  1003               	clrc
  3362     08D3  0DA4               	rlf	??___xxtofl,f
  3363     08D4  0DA5               	rlf	??___xxtofl+1,f
  3364     08D5  0DA6               	rlf	??___xxtofl+2,f
  3365     08D6  0DA7               	rlf	??___xxtofl+3,f
  3366     08D7                     u3710:
  3367     08D7  3EFF               	addlw	-1
  3368     08D8  1D03               	skipz
  3369     08D9  28D2               	goto	u3715
  3370     08DA  0824               	movf	??___xxtofl,w
  3371     08DB  04AA               	iorwf	___xxtofl@arg,f
  3372     08DC  0825               	movf	??___xxtofl+1,w
  3373     08DD  04AB               	iorwf	___xxtofl@arg+1,f
  3374     08DE  0826               	movf	??___xxtofl+2,w
  3375     08DF  04AC               	iorwf	___xxtofl@arg+2,f
  3376     08E0  0827               	movf	??___xxtofl+3,w
  3377     08E1  04AD               	iorwf	___xxtofl@arg+3,f
  3378     08E2                     l2918:
  3379     08E2  0828               	movf	___xxtofl@sign,w
  3380     08E3  1903               	btfsc	3,2
  3381     08E4  28E6               	goto	u3721
  3382     08E5  28E7               	goto	u3720
  3383     08E6                     u3721:
  3384     08E6  28EC               	goto	l2924
  3385     08E7                     u3720:
  3386     08E7                     l2920:
  3387     08E7  1FA3               	btfss	___xxtofl@val+3,7
  3388     08E8  28EA               	goto	u3731
  3389     08E9  28EB               	goto	u3730
  3390     08EA                     u3731:
  3391     08EA  28EC               	goto	l2924
  3392     08EB                     u3730:
  3393     08EB                     l2922:
  3394     08EB  17AD               	bsf	___xxtofl@arg+3,7
  3395     08EC                     l2924:
  3396     08EC  082D               	movf	___xxtofl@arg+3,w
  3397     08ED  00A3               	movwf	?___xxtofl+3
  3398     08EE  082C               	movf	___xxtofl@arg+2,w
  3399     08EF  00A2               	movwf	?___xxtofl+2
  3400     08F0  082B               	movf	___xxtofl@arg+1,w
  3401     08F1  00A1               	movwf	?___xxtofl+1
  3402     08F2  082A               	movf	___xxtofl@arg,w
  3403     08F3  00A0               	movwf	?___xxtofl
  3404     08F4                     l862:
  3405     08F4  0008               	return
  3406     08F5                     __end_of___xxtofl:
  3407                           
  3408                           	psect	text9
  3409     14FF                     __ptext9:	
  3410 ;; *************** function ___fltol *****************
  3411 ;; Defined at:
  3412 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\fltol.c"
  3413 ;; Parameters:    Size  Location     Type
  3414 ;;  f1              4    0[BANK0 ] unsigned char 
  3415 ;; Auto vars:     Size  Location     Type
  3416 ;;  exp1            1    9[BANK0 ] unsigned char 
  3417 ;;  sign1           1    8[BANK0 ] unsigned char 
  3418 ;; Return value:  Size  Location     Type
  3419 ;;                  4    0[BANK0 ] long 
  3420 ;; Registers used:
  3421 ;;		wreg, status,2, status,0, btemp+1
  3422 ;; Tracked objects:
  3423 ;;		On entry : 0/0
  3424 ;;		On exit  : 0/0
  3425 ;;		Unchanged: 0/0
  3426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3427 ;;      Params:         0       4       0       0       0
  3428 ;;      Locals:         0       2       0       0       0
  3429 ;;      Temps:          0       4       0       0       0
  3430 ;;      Totals:         0      10       0       0       0
  3431 ;;Total ram usage:       10 bytes
  3432 ;; Hardware stack levels used: 1
  3433 ;; Hardware stack levels required when called: 2
  3434 ;; This function calls:
  3435 ;;		Nothing
  3436 ;; This function is called by:
  3437 ;;		_main
  3438 ;; This function uses a non-reentrant model
  3439 ;;
  3440                           
  3441     14FF                     ___fltol:	
  3442                           ;psect for function ___fltol
  3443                           
  3444     14FF                     l3768:	
  3445                           ;incstack = 0
  3446                           ; Regs used in ___fltol: [wreg+status,2+status,0+btemp+1]
  3447                           
  3448     14FF  1003               	clrc
  3449     1500  1283               	bcf	3,5	;RP0=0, select bank0
  3450     1501  1303               	bcf	3,6	;RP1=0, select bank0
  3451     1502  0D22               	rlf	___fltol@f1+2,w
  3452     1503  0D23               	rlf	___fltol@f1+3,w
  3453     1504  00A9               	movwf	___fltol@exp1
  3454     1505  0829               	movf	___fltol@exp1,w
  3455     1506  1D03               	btfss	3,2
  3456     1507  2D09               	goto	u4901
  3457     1508  2D0A               	goto	u4900
  3458     1509                     u4901:
  3459     1509  2D13               	goto	l3774
  3460     150A                     u4900:
  3461     150A                     l3770:
  3462     150A  3000               	movlw	0
  3463     150B  00A3               	movwf	?___fltol+3
  3464     150C  3000               	movlw	0
  3465     150D  00A2               	movwf	?___fltol+2
  3466     150E  3000               	movlw	0
  3467     150F  00A1               	movwf	?___fltol+1
  3468     1510  3000               	movlw	0
  3469     1511  00A0               	movwf	?___fltol
  3470     1512  2D76               	goto	l613
  3471     1513                     l3774:
  3472     1513  0820               	movf	___fltol@f1,w
  3473     1514  00A4               	movwf	??___fltol
  3474     1515  0821               	movf	___fltol@f1+1,w
  3475     1516  00A5               	movwf	??___fltol+1
  3476     1517  0822               	movf	___fltol@f1+2,w
  3477     1518  00A6               	movwf	??___fltol+2
  3478     1519  0823               	movf	___fltol@f1+3,w
  3479     151A  00A7               	movwf	??___fltol+3
  3480     151B  301F               	movlw	31
  3481     151C                     u4915:
  3482     151C  1003               	clrc
  3483     151D  0CA7               	rrf	??___fltol+3,f
  3484     151E  0CA6               	rrf	??___fltol+2,f
  3485     151F  0CA5               	rrf	??___fltol+1,f
  3486     1520  0CA4               	rrf	??___fltol,f
  3487     1521                     u4910:
  3488     1521  3EFF               	addlw	-1
  3489     1522  1D03               	skipz
  3490     1523  2D1C               	goto	u4915
  3491     1524  0824               	movf	??___fltol,w
  3492     1525  00A8               	movwf	___fltol@sign1
  3493     1526                     l3776:
  3494     1526  17A2               	bsf	___fltol@f1+2,7
  3495     1527                     l3778:
  3496     1527  30FF               	movlw	255
  3497     1528  05A0               	andwf	___fltol@f1,f
  3498     1529  30FF               	movlw	255
  3499     152A  05A1               	andwf	___fltol@f1+1,f
  3500     152B  30FF               	movlw	255
  3501     152C  05A2               	andwf	___fltol@f1+2,f
  3502     152D  3000               	movlw	0
  3503     152E  05A3               	andwf	___fltol@f1+3,f
  3504     152F                     l3780:
  3505     152F  3096               	movlw	150
  3506     1530  02A9               	subwf	___fltol@exp1,f
  3507     1531                     l3782:
  3508     1531  1FA9               	btfss	___fltol@exp1,7
  3509     1532  2D34               	goto	u4921
  3510     1533  2D35               	goto	u4920
  3511     1534                     u4921:
  3512     1534  2D4F               	goto	l3794
  3513     1535                     u4920:
  3514     1535                     l3784:
  3515     1535  0829               	movf	___fltol@exp1,w
  3516     1536  3A80               	xorlw	128
  3517     1537  3E97               	addlw	151
  3518     1538  1803               	skipnc
  3519     1539  2D3B               	goto	u4931
  3520     153A  2D3C               	goto	u4930
  3521     153B                     u4931:
  3522     153B  2D3D               	goto	l3790
  3523     153C                     u4930:
  3524     153C  2D0A               	goto	l3770
  3525     153D                     l3790:
  3526     153D  3001               	movlw	1
  3527     153E                     u4945:
  3528     153E  1003               	clrc
  3529     153F  0CA3               	rrf	___fltol@f1+3,f
  3530     1540  0CA2               	rrf	___fltol@f1+2,f
  3531     1541  0CA1               	rrf	___fltol@f1+1,f
  3532     1542  0CA0               	rrf	___fltol@f1,f
  3533     1543  3EFF               	addlw	-1
  3534     1544  1D03               	skipz
  3535     1545  2D3E               	goto	u4945
  3536     1546                     l3792:
  3537     1546  3001               	movlw	1
  3538     1547  00FF               	movwf	btemp+1
  3539     1548  087F               	movf	btemp+1,w
  3540     1549  07A9               	addwf	___fltol@exp1,f
  3541     154A  1D03               	btfss	3,2
  3542     154B  2D4D               	goto	u4951
  3543     154C  2D4E               	goto	u4950
  3544     154D                     u4951:
  3545     154D  2D3D               	goto	l3790
  3546     154E                     u4950:
  3547     154E  2D66               	goto	l3802
  3548     154F                     l3794:
  3549     154F  3020               	movlw	32
  3550     1550  0229               	subwf	___fltol@exp1,w
  3551     1551  1C03               	skipc
  3552     1552  2D54               	goto	u4961
  3553     1553  2D55               	goto	u4960
  3554     1554                     u4961:
  3555     1554  2D61               	goto	l620
  3556     1555                     u4960:
  3557     1555  2D0A               	goto	l3770
  3558     1556                     l3800:
  3559     1556  3001               	movlw	1
  3560     1557  00A4               	movwf	??___fltol
  3561     1558                     u4975:
  3562     1558  1003               	clrc
  3563     1559  0DA0               	rlf	___fltol@f1,f
  3564     155A  0DA1               	rlf	___fltol@f1+1,f
  3565     155B  0DA2               	rlf	___fltol@f1+2,f
  3566     155C  0DA3               	rlf	___fltol@f1+3,f
  3567     155D  0BA4               	decfsz	??___fltol,f
  3568     155E  2D58               	goto	u4975
  3569     155F  3001               	movlw	1
  3570     1560  02A9               	subwf	___fltol@exp1,f
  3571     1561                     l620:
  3572     1561  0829               	movf	___fltol@exp1,w
  3573     1562  1D03               	btfss	3,2
  3574     1563  2D65               	goto	u4981
  3575     1564  2D66               	goto	u4980
  3576     1565                     u4981:
  3577     1565  2D56               	goto	l3800
  3578     1566                     u4980:
  3579     1566                     l3802:
  3580     1566  0828               	movf	___fltol@sign1,w
  3581     1567  1903               	btfsc	3,2
  3582     1568  2D6A               	goto	u4991
  3583     1569  2D6B               	goto	u4990
  3584     156A                     u4991:
  3585     156A  2D76               	goto	l623
  3586     156B                     u4990:
  3587     156B                     l3804:
  3588     156B  09A0               	comf	___fltol@f1,f
  3589     156C  09A1               	comf	___fltol@f1+1,f
  3590     156D  09A2               	comf	___fltol@f1+2,f
  3591     156E  09A3               	comf	___fltol@f1+3,f
  3592     156F  0AA0               	incf	___fltol@f1,f
  3593     1570  1903               	skipnz
  3594     1571  0AA1               	incf	___fltol@f1+1,f
  3595     1572  1903               	skipnz
  3596     1573  0AA2               	incf	___fltol@f1+2,f
  3597     1574  1903               	skipnz
  3598     1575  0AA3               	incf	___fltol@f1+3,f
  3599     1576                     l623:
  3600     1576                     l613:
  3601     1576  0008               	return
  3602     1577                     __end_of___fltol:
  3603                           
  3604                           	psect	text10
  3605     0CBB                     __ptext10:	
  3606 ;; *************** function ___flmul *****************
  3607 ;; Defined at:
  3608 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\sprcmul.c"
  3609 ;; Parameters:    Size  Location     Type
  3610 ;;  b               4   26[BANK0 ] long 
  3611 ;;  a               4   30[BANK0 ] long 
  3612 ;; Auto vars:     Size  Location     Type
  3613 ;;  prod            4   46[BANK0 ] struct .
  3614 ;;  grs             4   41[BANK0 ] unsigned long 
  3615 ;;  temp            2   50[BANK0 ] struct .
  3616 ;;  bexp            1   45[BANK0 ] unsigned char 
  3617 ;;  aexp            1   40[BANK0 ] unsigned char 
  3618 ;;  sign            1   39[BANK0 ] unsigned char 
  3619 ;; Return value:  Size  Location     Type
  3620 ;;                  4   26[BANK0 ] unsigned char 
  3621 ;; Registers used:
  3622 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3623 ;; Tracked objects:
  3624 ;;		On entry : 0/0
  3625 ;;		On exit  : 0/0
  3626 ;;		Unchanged: 0/0
  3627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3628 ;;      Params:         0       8       0       0       0
  3629 ;;      Locals:         0      13       0       0       0
  3630 ;;      Temps:          0       5       0       0       0
  3631 ;;      Totals:         0      26       0       0       0
  3632 ;;Total ram usage:       26 bytes
  3633 ;; Hardware stack levels used: 1
  3634 ;; Hardware stack levels required when called: 3
  3635 ;; This function calls:
  3636 ;;		__Umul8_16
  3637 ;; This function is called by:
  3638 ;;		_main
  3639 ;; This function uses a non-reentrant model
  3640 ;;
  3641                           
  3642     0CBB                     ___flmul:	
  3643                           ;psect for function ___flmul
  3644                           
  3645     0CBB                     l3806:	
  3646                           ;incstack = 0
  3647                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3648                           
  3649     0CBB  1283               	bcf	3,5	;RP0=0, select bank0
  3650     0CBC  1303               	bcf	3,6	;RP1=0, select bank0
  3651     0CBD  083D               	movf	___flmul@b+3,w
  3652     0CBE  3980               	andlw	128
  3653     0CBF  00C7               	movwf	___flmul@sign
  3654     0CC0                     l3808:
  3655     0CC0  083D               	movf	___flmul@b+3,w
  3656     0CC1  00C2               	movwf	??___flmul
  3657     0CC2  0742               	addwf	??___flmul,w
  3658     0CC3  00CD               	movwf	___flmul@bexp
  3659     0CC4                     l3810:
  3660     0CC4  1FBC               	btfss	___flmul@b+2,7
  3661     0CC5  2CC7               	goto	u5001
  3662     0CC6  2CC8               	goto	u5000
  3663     0CC7                     u5001:
  3664     0CC7  2CC9               	goto	l3814
  3665     0CC8                     u5000:
  3666     0CC8                     l3812:
  3667     0CC8  144D               	bsf	___flmul@bexp,0
  3668     0CC9                     l3814:
  3669     0CC9  084D               	movf	___flmul@bexp,w
  3670     0CCA  1903               	btfsc	3,2
  3671     0CCB  2CCD               	goto	u5011
  3672     0CCC  2CCE               	goto	u5010
  3673     0CCD                     u5011:
  3674     0CCD  2CDD               	goto	l3822
  3675     0CCE                     u5010:
  3676     0CCE                     l3816:
  3677     0CCE  0A4D               	incf	___flmul@bexp,w
  3678     0CCF  1D03               	btfss	3,2
  3679     0CD0  2CD2               	goto	u5021
  3680     0CD1  2CD3               	goto	u5020
  3681     0CD2                     u5021:
  3682     0CD2  2CDB               	goto	l3820
  3683     0CD3                     u5020:
  3684     0CD3                     l3818:
  3685     0CD3  3000               	movlw	0
  3686     0CD4  00BD               	movwf	___flmul@b+3
  3687     0CD5  3000               	movlw	0
  3688     0CD6  00BC               	movwf	___flmul@b+2
  3689     0CD7  3000               	movlw	0
  3690     0CD8  00BB               	movwf	___flmul@b+1
  3691     0CD9  3000               	movlw	0
  3692     0CDA  00BA               	movwf	___flmul@b
  3693     0CDB                     l3820:
  3694     0CDB  17BC               	bsf	___flmul@b+2,7
  3695     0CDC  2CE5               	goto	l3824
  3696     0CDD                     l3822:
  3697     0CDD  3000               	movlw	0
  3698     0CDE  00BD               	movwf	___flmul@b+3
  3699     0CDF  3000               	movlw	0
  3700     0CE0  00BC               	movwf	___flmul@b+2
  3701     0CE1  3000               	movlw	0
  3702     0CE2  00BB               	movwf	___flmul@b+1
  3703     0CE3  3000               	movlw	0
  3704     0CE4  00BA               	movwf	___flmul@b
  3705     0CE5                     l3824:
  3706     0CE5  0841               	movf	___flmul@a+3,w
  3707     0CE6  3980               	andlw	128
  3708     0CE7  00FF               	movwf	btemp+1
  3709     0CE8  087F               	movf	btemp+1,w
  3710     0CE9  06C7               	xorwf	___flmul@sign,f
  3711     0CEA                     l3826:
  3712     0CEA  0841               	movf	___flmul@a+3,w
  3713     0CEB  00C2               	movwf	??___flmul
  3714     0CEC  0742               	addwf	??___flmul,w
  3715     0CED  00C8               	movwf	___flmul@aexp
  3716     0CEE                     l3828:
  3717     0CEE  1FC0               	btfss	___flmul@a+2,7
  3718     0CEF  2CF1               	goto	u5031
  3719     0CF0  2CF2               	goto	u5030
  3720     0CF1                     u5031:
  3721     0CF1  2CF3               	goto	l3832
  3722     0CF2                     u5030:
  3723     0CF2                     l3830:
  3724     0CF2  1448               	bsf	___flmul@aexp,0
  3725     0CF3                     l3832:
  3726     0CF3  0848               	movf	___flmul@aexp,w
  3727     0CF4  1903               	btfsc	3,2
  3728     0CF5  2CF7               	goto	u5041
  3729     0CF6  2CF8               	goto	u5040
  3730     0CF7                     u5041:
  3731     0CF7  2D07               	goto	l3840
  3732     0CF8                     u5040:
  3733     0CF8                     l3834:
  3734     0CF8  0A48               	incf	___flmul@aexp,w
  3735     0CF9  1D03               	btfss	3,2
  3736     0CFA  2CFC               	goto	u5051
  3737     0CFB  2CFD               	goto	u5050
  3738     0CFC                     u5051:
  3739     0CFC  2D05               	goto	l3838
  3740     0CFD                     u5050:
  3741     0CFD                     l3836:
  3742     0CFD  3000               	movlw	0
  3743     0CFE  00C1               	movwf	___flmul@a+3
  3744     0CFF  3000               	movlw	0
  3745     0D00  00C0               	movwf	___flmul@a+2
  3746     0D01  3000               	movlw	0
  3747     0D02  00BF               	movwf	___flmul@a+1
  3748     0D03  3000               	movlw	0
  3749     0D04  00BE               	movwf	___flmul@a
  3750     0D05                     l3838:
  3751     0D05  17C0               	bsf	___flmul@a+2,7
  3752     0D06  2D0F               	goto	l3842
  3753     0D07                     l3840:
  3754     0D07  3000               	movlw	0
  3755     0D08  00C1               	movwf	___flmul@a+3
  3756     0D09  3000               	movlw	0
  3757     0D0A  00C0               	movwf	___flmul@a+2
  3758     0D0B  3000               	movlw	0
  3759     0D0C  00BF               	movwf	___flmul@a+1
  3760     0D0D  3000               	movlw	0
  3761     0D0E  00BE               	movwf	___flmul@a
  3762     0D0F                     l3842:
  3763     0D0F  0848               	movf	___flmul@aexp,w
  3764     0D10  1903               	btfsc	3,2
  3765     0D11  2D13               	goto	u5061
  3766     0D12  2D14               	goto	u5060
  3767     0D13                     u5061:
  3768     0D13  2D19               	goto	l3846
  3769     0D14                     u5060:
  3770     0D14                     l3844:
  3771     0D14  084D               	movf	___flmul@bexp,w
  3772     0D15  1D03               	btfss	3,2
  3773     0D16  2D18               	goto	u5071
  3774     0D17  2D19               	goto	u5070
  3775     0D18                     u5071:
  3776     0D18  2D22               	goto	l3850
  3777     0D19                     u5070:
  3778     0D19                     l3846:
  3779     0D19  3000               	movlw	0
  3780     0D1A  00BD               	movwf	?___flmul+3
  3781     0D1B  3000               	movlw	0
  3782     0D1C  00BC               	movwf	?___flmul+2
  3783     0D1D  3000               	movlw	0
  3784     0D1E  00BB               	movwf	?___flmul+1
  3785     0D1F  3000               	movlw	0
  3786     0D20  00BA               	movwf	?___flmul
  3787     0D21  2FFF               	goto	l816
  3788     0D22                     l3850:
  3789     0D22  083A               	movf	___flmul@b,w
  3790     0D23  00A0               	movwf	__Umul8_16@multiplicand
  3791     0D24  0840               	movf	___flmul@a+2,w
  3792     0D25  160A  118A  22D1  120A  158A  	fcall	__Umul8_16
  3793     0D2A  1283               	bcf	3,5	;RP0=0, select bank0
  3794     0D2B  1303               	bcf	3,6	;RP1=0, select bank0
  3795     0D2C  0821               	movf	?__Umul8_16+1,w
  3796     0D2D  00D3               	movwf	___flmul@temp+1
  3797     0D2E  0820               	movf	?__Umul8_16,w
  3798     0D2F  00D2               	movwf	___flmul@temp
  3799     0D30                     l3852:
  3800     0D30  0852               	movf	___flmul@temp,w
  3801     0D31  00C2               	movwf	??___flmul
  3802     0D32  01C3               	clrf	??___flmul+1
  3803     0D33  01C4               	clrf	??___flmul+2
  3804     0D34  01C5               	clrf	??___flmul+3
  3805     0D35  0845               	movf	??___flmul+3,w
  3806     0D36  00CC               	movwf	___flmul@grs+3
  3807     0D37  0844               	movf	??___flmul+2,w
  3808     0D38  00CB               	movwf	___flmul@grs+2
  3809     0D39  0843               	movf	??___flmul+1,w
  3810     0D3A  00CA               	movwf	___flmul@grs+1
  3811     0D3B  0842               	movf	??___flmul,w
  3812     0D3C  00C9               	movwf	___flmul@grs
  3813     0D3D                     l3854:
  3814     0D3D  0853               	movf	___flmul@temp+1,w
  3815     0D3E  00C2               	movwf	??___flmul
  3816     0D3F  01C3               	clrf	??___flmul+1
  3817     0D40  01C4               	clrf	??___flmul+2
  3818     0D41  01C5               	clrf	??___flmul+3
  3819     0D42  0845               	movf	??___flmul+3,w
  3820     0D43  00D1               	movwf	___flmul@prod+3
  3821     0D44  0844               	movf	??___flmul+2,w
  3822     0D45  00D0               	movwf	___flmul@prod+2
  3823     0D46  0843               	movf	??___flmul+1,w
  3824     0D47  00CF               	movwf	___flmul@prod+1
  3825     0D48  0842               	movf	??___flmul,w
  3826     0D49  00CE               	movwf	___flmul@prod
  3827     0D4A  083B               	movf	___flmul@b+1,w
  3828     0D4B  00A0               	movwf	__Umul8_16@multiplicand
  3829     0D4C  083F               	movf	___flmul@a+1,w
  3830     0D4D  160A  118A  22D1  120A  158A  	fcall	__Umul8_16
  3831     0D52  1283               	bcf	3,5	;RP0=0, select bank0
  3832     0D53  1303               	bcf	3,6	;RP1=0, select bank0
  3833     0D54  0821               	movf	?__Umul8_16+1,w
  3834     0D55  00D3               	movwf	___flmul@temp+1
  3835     0D56  0820               	movf	?__Umul8_16,w
  3836     0D57  00D2               	movwf	___flmul@temp
  3837     0D58                     l3856:
  3838     0D58  0852               	movf	___flmul@temp,w
  3839     0D59  00C2               	movwf	??___flmul
  3840     0D5A  01C3               	clrf	??___flmul+1
  3841     0D5B  01C4               	clrf	??___flmul+2
  3842     0D5C  01C5               	clrf	??___flmul+3
  3843     0D5D  0842               	movf	??___flmul,w
  3844     0D5E  07C9               	addwf	___flmul@grs,f
  3845     0D5F  0843               	movf	??___flmul+1,w
  3846     0D60  1103               	clrz
  3847     0D61  1803               	skipnc
  3848     0D62  3E01               	addlw	1
  3849     0D63  1903               	skipnz
  3850     0D64  2D66               	goto	u5081
  3851     0D65  07CA               	addwf	___flmul@grs+1,f
  3852     0D66                     u5081:
  3853     0D66  0844               	movf	??___flmul+2,w
  3854     0D67  1103               	clrz
  3855     0D68  1803               	skipnc
  3856     0D69  3E01               	addlw	1
  3857     0D6A  1903               	skipnz
  3858     0D6B  2D6D               	goto	u5082
  3859     0D6C  07CB               	addwf	___flmul@grs+2,f
  3860     0D6D                     u5082:
  3861     0D6D  0845               	movf	??___flmul+3,w
  3862     0D6E  1103               	clrz
  3863     0D6F  1803               	skipnc
  3864     0D70  3E01               	addlw	1
  3865     0D71  1903               	skipnz
  3866     0D72  2D74               	goto	u5083
  3867     0D73  07CC               	addwf	___flmul@grs+3,f
  3868     0D74                     u5083:
  3869     0D74                     l3858:
  3870     0D74  0853               	movf	___flmul@temp+1,w
  3871     0D75  00C2               	movwf	??___flmul
  3872     0D76  01C3               	clrf	??___flmul+1
  3873     0D77  01C4               	clrf	??___flmul+2
  3874     0D78  01C5               	clrf	??___flmul+3
  3875     0D79  0842               	movf	??___flmul,w
  3876     0D7A  07CE               	addwf	___flmul@prod,f
  3877     0D7B  0843               	movf	??___flmul+1,w
  3878     0D7C  1103               	clrz
  3879     0D7D  1803               	skipnc
  3880     0D7E  3E01               	addlw	1
  3881     0D7F  1903               	skipnz
  3882     0D80  2D82               	goto	u5091
  3883     0D81  07CF               	addwf	___flmul@prod+1,f
  3884     0D82                     u5091:
  3885     0D82  0844               	movf	??___flmul+2,w
  3886     0D83  1103               	clrz
  3887     0D84  1803               	skipnc
  3888     0D85  3E01               	addlw	1
  3889     0D86  1903               	skipnz
  3890     0D87  2D89               	goto	u5092
  3891     0D88  07D0               	addwf	___flmul@prod+2,f
  3892     0D89                     u5092:
  3893     0D89  0845               	movf	??___flmul+3,w
  3894     0D8A  1103               	clrz
  3895     0D8B  1803               	skipnc
  3896     0D8C  3E01               	addlw	1
  3897     0D8D  1903               	skipnz
  3898     0D8E  2D90               	goto	u5093
  3899     0D8F  07D1               	addwf	___flmul@prod+3,f
  3900     0D90                     u5093:
  3901     0D90  083C               	movf	___flmul@b+2,w
  3902     0D91  00A0               	movwf	__Umul8_16@multiplicand
  3903     0D92  083E               	movf	___flmul@a,w
  3904     0D93  160A  118A  22D1  120A  158A  	fcall	__Umul8_16
  3905     0D98  1283               	bcf	3,5	;RP0=0, select bank0
  3906     0D99  1303               	bcf	3,6	;RP1=0, select bank0
  3907     0D9A  0821               	movf	?__Umul8_16+1,w
  3908     0D9B  00D3               	movwf	___flmul@temp+1
  3909     0D9C  0820               	movf	?__Umul8_16,w
  3910     0D9D  00D2               	movwf	___flmul@temp
  3911     0D9E                     l3860:
  3912     0D9E  0852               	movf	___flmul@temp,w
  3913     0D9F  00C2               	movwf	??___flmul
  3914     0DA0  01C3               	clrf	??___flmul+1
  3915     0DA1  01C4               	clrf	??___flmul+2
  3916     0DA2  01C5               	clrf	??___flmul+3
  3917     0DA3  0842               	movf	??___flmul,w
  3918     0DA4  07C9               	addwf	___flmul@grs,f
  3919     0DA5  0843               	movf	??___flmul+1,w
  3920     0DA6  1103               	clrz
  3921     0DA7  1803               	skipnc
  3922     0DA8  3E01               	addlw	1
  3923     0DA9  1903               	skipnz
  3924     0DAA  2DAC               	goto	u5101
  3925     0DAB  07CA               	addwf	___flmul@grs+1,f
  3926     0DAC                     u5101:
  3927     0DAC  0844               	movf	??___flmul+2,w
  3928     0DAD  1103               	clrz
  3929     0DAE  1803               	skipnc
  3930     0DAF  3E01               	addlw	1
  3931     0DB0  1903               	skipnz
  3932     0DB1  2DB3               	goto	u5102
  3933     0DB2  07CB               	addwf	___flmul@grs+2,f
  3934     0DB3                     u5102:
  3935     0DB3  0845               	movf	??___flmul+3,w
  3936     0DB4  1103               	clrz
  3937     0DB5  1803               	skipnc
  3938     0DB6  3E01               	addlw	1
  3939     0DB7  1903               	skipnz
  3940     0DB8  2DBA               	goto	u5103
  3941     0DB9  07CC               	addwf	___flmul@grs+3,f
  3942     0DBA                     u5103:
  3943     0DBA                     l3862:
  3944     0DBA  0853               	movf	___flmul@temp+1,w
  3945     0DBB  00C2               	movwf	??___flmul
  3946     0DBC  01C3               	clrf	??___flmul+1
  3947     0DBD  01C4               	clrf	??___flmul+2
  3948     0DBE  01C5               	clrf	??___flmul+3
  3949     0DBF  0842               	movf	??___flmul,w
  3950     0DC0  07CE               	addwf	___flmul@prod,f
  3951     0DC1  0843               	movf	??___flmul+1,w
  3952     0DC2  1103               	clrz
  3953     0DC3  1803               	skipnc
  3954     0DC4  3E01               	addlw	1
  3955     0DC5  1903               	skipnz
  3956     0DC6  2DC8               	goto	u5111
  3957     0DC7  07CF               	addwf	___flmul@prod+1,f
  3958     0DC8                     u5111:
  3959     0DC8  0844               	movf	??___flmul+2,w
  3960     0DC9  1103               	clrz
  3961     0DCA  1803               	skipnc
  3962     0DCB  3E01               	addlw	1
  3963     0DCC  1903               	skipnz
  3964     0DCD  2DCF               	goto	u5112
  3965     0DCE  07D0               	addwf	___flmul@prod+2,f
  3966     0DCF                     u5112:
  3967     0DCF  0845               	movf	??___flmul+3,w
  3968     0DD0  1103               	clrz
  3969     0DD1  1803               	skipnc
  3970     0DD2  3E01               	addlw	1
  3971     0DD3  1903               	skipnz
  3972     0DD4  2DD6               	goto	u5113
  3973     0DD5  07D1               	addwf	___flmul@prod+3,f
  3974     0DD6                     u5113:
  3975     0DD6                     l3864:
  3976     0DD6  3008               	movlw	8
  3977     0DD7  00C2               	movwf	??___flmul
  3978     0DD8                     u5125:
  3979     0DD8  1003               	clrc
  3980     0DD9  0DC9               	rlf	___flmul@grs,f
  3981     0DDA  0DCA               	rlf	___flmul@grs+1,f
  3982     0DDB  0DCB               	rlf	___flmul@grs+2,f
  3983     0DDC  0DCC               	rlf	___flmul@grs+3,f
  3984     0DDD  0BC2               	decfsz	??___flmul,f
  3985     0DDE  2DD8               	goto	u5125
  3986     0DDF                     l3866:
  3987     0DDF  083B               	movf	___flmul@b+1,w
  3988     0DE0  00A0               	movwf	__Umul8_16@multiplicand
  3989     0DE1  083E               	movf	___flmul@a,w
  3990     0DE2  160A  118A  22D1  120A  158A  	fcall	__Umul8_16
  3991     0DE7  1283               	bcf	3,5	;RP0=0, select bank0
  3992     0DE8  1303               	bcf	3,6	;RP1=0, select bank0
  3993     0DE9  0821               	movf	?__Umul8_16+1,w
  3994     0DEA  00D3               	movwf	___flmul@temp+1
  3995     0DEB  0820               	movf	?__Umul8_16,w
  3996     0DEC  00D2               	movwf	___flmul@temp
  3997     0DED                     l3868:
  3998     0DED  0852               	movf	___flmul@temp,w
  3999     0DEE  00C2               	movwf	??___flmul
  4000     0DEF  0853               	movf	___flmul@temp+1,w
  4001     0DF0  00C3               	movwf	??___flmul+1
  4002     0DF1  01C4               	clrf	??___flmul+2
  4003     0DF2  01C5               	clrf	??___flmul+3
  4004     0DF3  0842               	movf	??___flmul,w
  4005     0DF4  07C9               	addwf	___flmul@grs,f
  4006     0DF5  0843               	movf	??___flmul+1,w
  4007     0DF6  1103               	clrz
  4008     0DF7  1803               	skipnc
  4009     0DF8  3E01               	addlw	1
  4010     0DF9  1903               	skipnz
  4011     0DFA  2DFC               	goto	u5131
  4012     0DFB  07CA               	addwf	___flmul@grs+1,f
  4013     0DFC                     u5131:
  4014     0DFC  0844               	movf	??___flmul+2,w
  4015     0DFD  1103               	clrz
  4016     0DFE  1803               	skipnc
  4017     0DFF  3E01               	addlw	1
  4018     0E00  1903               	skipnz
  4019     0E01  2E03               	goto	u5132
  4020     0E02  07CB               	addwf	___flmul@grs+2,f
  4021     0E03                     u5132:
  4022     0E03  0845               	movf	??___flmul+3,w
  4023     0E04  1103               	clrz
  4024     0E05  1803               	skipnc
  4025     0E06  3E01               	addlw	1
  4026     0E07  1903               	skipnz
  4027     0E08  2E0A               	goto	u5133
  4028     0E09  07CC               	addwf	___flmul@grs+3,f
  4029     0E0A                     u5133:
  4030     0E0A                     l3870:
  4031     0E0A  083A               	movf	___flmul@b,w
  4032     0E0B  00A0               	movwf	__Umul8_16@multiplicand
  4033     0E0C  083F               	movf	___flmul@a+1,w
  4034     0E0D  160A  118A  22D1  120A  158A  	fcall	__Umul8_16
  4035     0E12  1283               	bcf	3,5	;RP0=0, select bank0
  4036     0E13  1303               	bcf	3,6	;RP1=0, select bank0
  4037     0E14  0821               	movf	?__Umul8_16+1,w
  4038     0E15  00D3               	movwf	___flmul@temp+1
  4039     0E16  0820               	movf	?__Umul8_16,w
  4040     0E17  00D2               	movwf	___flmul@temp
  4041     0E18                     l3872:
  4042     0E18  0852               	movf	___flmul@temp,w
  4043     0E19  00C2               	movwf	??___flmul
  4044     0E1A  0853               	movf	___flmul@temp+1,w
  4045     0E1B  00C3               	movwf	??___flmul+1
  4046     0E1C  01C4               	clrf	??___flmul+2
  4047     0E1D  01C5               	clrf	??___flmul+3
  4048     0E1E  0842               	movf	??___flmul,w
  4049     0E1F  07C9               	addwf	___flmul@grs,f
  4050     0E20  0843               	movf	??___flmul+1,w
  4051     0E21  1103               	clrz
  4052     0E22  1803               	skipnc
  4053     0E23  3E01               	addlw	1
  4054     0E24  1903               	skipnz
  4055     0E25  2E27               	goto	u5141
  4056     0E26  07CA               	addwf	___flmul@grs+1,f
  4057     0E27                     u5141:
  4058     0E27  0844               	movf	??___flmul+2,w
  4059     0E28  1103               	clrz
  4060     0E29  1803               	skipnc
  4061     0E2A  3E01               	addlw	1
  4062     0E2B  1903               	skipnz
  4063     0E2C  2E2E               	goto	u5142
  4064     0E2D  07CB               	addwf	___flmul@grs+2,f
  4065     0E2E                     u5142:
  4066     0E2E  0845               	movf	??___flmul+3,w
  4067     0E2F  1103               	clrz
  4068     0E30  1803               	skipnc
  4069     0E31  3E01               	addlw	1
  4070     0E32  1903               	skipnz
  4071     0E33  2E35               	goto	u5143
  4072     0E34  07CC               	addwf	___flmul@grs+3,f
  4073     0E35                     u5143:
  4074     0E35                     l3874:
  4075     0E35  3008               	movlw	8
  4076     0E36  00C2               	movwf	??___flmul
  4077     0E37                     u5155:
  4078     0E37  1003               	clrc
  4079     0E38  0DC9               	rlf	___flmul@grs,f
  4080     0E39  0DCA               	rlf	___flmul@grs+1,f
  4081     0E3A  0DCB               	rlf	___flmul@grs+2,f
  4082     0E3B  0DCC               	rlf	___flmul@grs+3,f
  4083     0E3C  0BC2               	decfsz	??___flmul,f
  4084     0E3D  2E37               	goto	u5155
  4085     0E3E  083A               	movf	___flmul@b,w
  4086     0E3F  00A0               	movwf	__Umul8_16@multiplicand
  4087     0E40  083E               	movf	___flmul@a,w
  4088     0E41  160A  118A  22D1  120A  158A  	fcall	__Umul8_16
  4089     0E46  1283               	bcf	3,5	;RP0=0, select bank0
  4090     0E47  1303               	bcf	3,6	;RP1=0, select bank0
  4091     0E48  0821               	movf	?__Umul8_16+1,w
  4092     0E49  00D3               	movwf	___flmul@temp+1
  4093     0E4A  0820               	movf	?__Umul8_16,w
  4094     0E4B  00D2               	movwf	___flmul@temp
  4095     0E4C                     l3876:
  4096     0E4C  0852               	movf	___flmul@temp,w
  4097     0E4D  00C2               	movwf	??___flmul
  4098     0E4E  0853               	movf	___flmul@temp+1,w
  4099     0E4F  00C3               	movwf	??___flmul+1
  4100     0E50  01C4               	clrf	??___flmul+2
  4101     0E51  01C5               	clrf	??___flmul+3
  4102     0E52  0842               	movf	??___flmul,w
  4103     0E53  07C9               	addwf	___flmul@grs,f
  4104     0E54  0843               	movf	??___flmul+1,w
  4105     0E55  1103               	clrz
  4106     0E56  1803               	skipnc
  4107     0E57  3E01               	addlw	1
  4108     0E58  1903               	skipnz
  4109     0E59  2E5B               	goto	u5161
  4110     0E5A  07CA               	addwf	___flmul@grs+1,f
  4111     0E5B                     u5161:
  4112     0E5B  0844               	movf	??___flmul+2,w
  4113     0E5C  1103               	clrz
  4114     0E5D  1803               	skipnc
  4115     0E5E  3E01               	addlw	1
  4116     0E5F  1903               	skipnz
  4117     0E60  2E62               	goto	u5162
  4118     0E61  07CB               	addwf	___flmul@grs+2,f
  4119     0E62                     u5162:
  4120     0E62  0845               	movf	??___flmul+3,w
  4121     0E63  1103               	clrz
  4122     0E64  1803               	skipnc
  4123     0E65  3E01               	addlw	1
  4124     0E66  1903               	skipnz
  4125     0E67  2E69               	goto	u5163
  4126     0E68  07CC               	addwf	___flmul@grs+3,f
  4127     0E69                     u5163:
  4128     0E69                     l3878:
  4129     0E69  083B               	movf	___flmul@b+1,w
  4130     0E6A  00A0               	movwf	__Umul8_16@multiplicand
  4131     0E6B  0840               	movf	___flmul@a+2,w
  4132     0E6C  160A  118A  22D1  120A  158A  	fcall	__Umul8_16
  4133     0E71  1283               	bcf	3,5	;RP0=0, select bank0
  4134     0E72  1303               	bcf	3,6	;RP1=0, select bank0
  4135     0E73  0821               	movf	?__Umul8_16+1,w
  4136     0E74  00D3               	movwf	___flmul@temp+1
  4137     0E75  0820               	movf	?__Umul8_16,w
  4138     0E76  00D2               	movwf	___flmul@temp
  4139     0E77  0852               	movf	___flmul@temp,w
  4140     0E78  00C2               	movwf	??___flmul
  4141     0E79  0853               	movf	___flmul@temp+1,w
  4142     0E7A  00C3               	movwf	??___flmul+1
  4143     0E7B  01C4               	clrf	??___flmul+2
  4144     0E7C  01C5               	clrf	??___flmul+3
  4145     0E7D  0842               	movf	??___flmul,w
  4146     0E7E  07CE               	addwf	___flmul@prod,f
  4147     0E7F  0843               	movf	??___flmul+1,w
  4148     0E80  1103               	clrz
  4149     0E81  1803               	skipnc
  4150     0E82  3E01               	addlw	1
  4151     0E83  1903               	skipnz
  4152     0E84  2E86               	goto	u5171
  4153     0E85  07CF               	addwf	___flmul@prod+1,f
  4154     0E86                     u5171:
  4155     0E86  0844               	movf	??___flmul+2,w
  4156     0E87  1103               	clrz
  4157     0E88  1803               	skipnc
  4158     0E89  3E01               	addlw	1
  4159     0E8A  1903               	skipnz
  4160     0E8B  2E8D               	goto	u5172
  4161     0E8C  07D0               	addwf	___flmul@prod+2,f
  4162     0E8D                     u5172:
  4163     0E8D  0845               	movf	??___flmul+3,w
  4164     0E8E  1103               	clrz
  4165     0E8F  1803               	skipnc
  4166     0E90  3E01               	addlw	1
  4167     0E91  1903               	skipnz
  4168     0E92  2E94               	goto	u5173
  4169     0E93  07D1               	addwf	___flmul@prod+3,f
  4170     0E94                     u5173:
  4171     0E94                     l3880:
  4172     0E94  083C               	movf	___flmul@b+2,w
  4173     0E95  00A0               	movwf	__Umul8_16@multiplicand
  4174     0E96  083F               	movf	___flmul@a+1,w
  4175     0E97  160A  118A  22D1  120A  158A  	fcall	__Umul8_16
  4176     0E9C  1283               	bcf	3,5	;RP0=0, select bank0
  4177     0E9D  1303               	bcf	3,6	;RP1=0, select bank0
  4178     0E9E  0821               	movf	?__Umul8_16+1,w
  4179     0E9F  00D3               	movwf	___flmul@temp+1
  4180     0EA0  0820               	movf	?__Umul8_16,w
  4181     0EA1  00D2               	movwf	___flmul@temp
  4182     0EA2                     l3882:
  4183     0EA2  0852               	movf	___flmul@temp,w
  4184     0EA3  00C2               	movwf	??___flmul
  4185     0EA4  0853               	movf	___flmul@temp+1,w
  4186     0EA5  00C3               	movwf	??___flmul+1
  4187     0EA6  01C4               	clrf	??___flmul+2
  4188     0EA7  01C5               	clrf	??___flmul+3
  4189     0EA8  0842               	movf	??___flmul,w
  4190     0EA9  07CE               	addwf	___flmul@prod,f
  4191     0EAA  0843               	movf	??___flmul+1,w
  4192     0EAB  1103               	clrz
  4193     0EAC  1803               	skipnc
  4194     0EAD  3E01               	addlw	1
  4195     0EAE  1903               	skipnz
  4196     0EAF  2EB1               	goto	u5181
  4197     0EB0  07CF               	addwf	___flmul@prod+1,f
  4198     0EB1                     u5181:
  4199     0EB1  0844               	movf	??___flmul+2,w
  4200     0EB2  1103               	clrz
  4201     0EB3  1803               	skipnc
  4202     0EB4  3E01               	addlw	1
  4203     0EB5  1903               	skipnz
  4204     0EB6  2EB8               	goto	u5182
  4205     0EB7  07D0               	addwf	___flmul@prod+2,f
  4206     0EB8                     u5182:
  4207     0EB8  0845               	movf	??___flmul+3,w
  4208     0EB9  1103               	clrz
  4209     0EBA  1803               	skipnc
  4210     0EBB  3E01               	addlw	1
  4211     0EBC  1903               	skipnz
  4212     0EBD  2EBF               	goto	u5183
  4213     0EBE  07D1               	addwf	___flmul@prod+3,f
  4214     0EBF                     u5183:
  4215     0EBF  083C               	movf	___flmul@b+2,w
  4216     0EC0  00A0               	movwf	__Umul8_16@multiplicand
  4217     0EC1  0840               	movf	___flmul@a+2,w
  4218     0EC2  160A  118A  22D1  120A  158A  	fcall	__Umul8_16
  4219     0EC7  1283               	bcf	3,5	;RP0=0, select bank0
  4220     0EC8  1303               	bcf	3,6	;RP1=0, select bank0
  4221     0EC9  0821               	movf	?__Umul8_16+1,w
  4222     0ECA  00D3               	movwf	___flmul@temp+1
  4223     0ECB  0820               	movf	?__Umul8_16,w
  4224     0ECC  00D2               	movwf	___flmul@temp
  4225     0ECD                     l3884:
  4226     0ECD  0852               	movf	___flmul@temp,w
  4227     0ECE  00C2               	movwf	??___flmul
  4228     0ECF  0853               	movf	___flmul@temp+1,w
  4229     0ED0  00C3               	movwf	??___flmul+1
  4230     0ED1  01C4               	clrf	??___flmul+2
  4231     0ED2  01C5               	clrf	??___flmul+3
  4232     0ED3  3008               	movlw	8
  4233     0ED4                     u5195:
  4234     0ED4  1003               	clrc
  4235     0ED5  0DC2               	rlf	??___flmul,f
  4236     0ED6  0DC3               	rlf	??___flmul+1,f
  4237     0ED7  0DC4               	rlf	??___flmul+2,f
  4238     0ED8  0DC5               	rlf	??___flmul+3,f
  4239     0ED9                     u5190:
  4240     0ED9  3EFF               	addlw	-1
  4241     0EDA  1D03               	skipz
  4242     0EDB  2ED4               	goto	u5195
  4243     0EDC  0842               	movf	??___flmul,w
  4244     0EDD  07CE               	addwf	___flmul@prod,f
  4245     0EDE  0843               	movf	??___flmul+1,w
  4246     0EDF  1103               	clrz
  4247     0EE0  1803               	skipnc
  4248     0EE1  3E01               	addlw	1
  4249     0EE2  1903               	skipnz
  4250     0EE3  2EE5               	goto	u5201
  4251     0EE4  07CF               	addwf	___flmul@prod+1,f
  4252     0EE5                     u5201:
  4253     0EE5  0844               	movf	??___flmul+2,w
  4254     0EE6  1103               	clrz
  4255     0EE7  1803               	skipnc
  4256     0EE8  3E01               	addlw	1
  4257     0EE9  1903               	skipnz
  4258     0EEA  2EEC               	goto	u5202
  4259     0EEB  07D0               	addwf	___flmul@prod+2,f
  4260     0EEC                     u5202:
  4261     0EEC  0845               	movf	??___flmul+3,w
  4262     0EED  1103               	clrz
  4263     0EEE  1803               	skipnc
  4264     0EEF  3E01               	addlw	1
  4265     0EF0  1903               	skipnz
  4266     0EF1  2EF3               	goto	u5203
  4267     0EF2  07D1               	addwf	___flmul@prod+3,f
  4268     0EF3                     u5203:
  4269     0EF3                     l3886:
  4270     0EF3  0849               	movf	___flmul@grs,w
  4271     0EF4  00C2               	movwf	??___flmul
  4272     0EF5  084A               	movf	___flmul@grs+1,w
  4273     0EF6  00C3               	movwf	??___flmul+1
  4274     0EF7  084B               	movf	___flmul@grs+2,w
  4275     0EF8  00C4               	movwf	??___flmul+2
  4276     0EF9  084C               	movf	___flmul@grs+3,w
  4277     0EFA  00C5               	movwf	??___flmul+3
  4278     0EFB  3018               	movlw	24
  4279     0EFC                     u5215:
  4280     0EFC  1003               	clrc
  4281     0EFD  0CC5               	rrf	??___flmul+3,f
  4282     0EFE  0CC4               	rrf	??___flmul+2,f
  4283     0EFF  0CC3               	rrf	??___flmul+1,f
  4284     0F00  0CC2               	rrf	??___flmul,f
  4285     0F01                     u5210:
  4286     0F01  3EFF               	addlw	-1
  4287     0F02  1D03               	skipz
  4288     0F03  2EFC               	goto	u5215
  4289     0F04  0842               	movf	??___flmul,w
  4290     0F05  07CE               	addwf	___flmul@prod,f
  4291     0F06  0843               	movf	??___flmul+1,w
  4292     0F07  1103               	clrz
  4293     0F08  1803               	skipnc
  4294     0F09  3E01               	addlw	1
  4295     0F0A  1903               	skipnz
  4296     0F0B  2F0D               	goto	u5221
  4297     0F0C  07CF               	addwf	___flmul@prod+1,f
  4298     0F0D                     u5221:
  4299     0F0D  0844               	movf	??___flmul+2,w
  4300     0F0E  1103               	clrz
  4301     0F0F  1803               	skipnc
  4302     0F10  3E01               	addlw	1
  4303     0F11  1903               	skipnz
  4304     0F12  2F14               	goto	u5222
  4305     0F13  07D0               	addwf	___flmul@prod+2,f
  4306     0F14                     u5222:
  4307     0F14  0845               	movf	??___flmul+3,w
  4308     0F15  1103               	clrz
  4309     0F16  1803               	skipnc
  4310     0F17  3E01               	addlw	1
  4311     0F18  1903               	skipnz
  4312     0F19  2F1B               	goto	u5223
  4313     0F1A  07D1               	addwf	___flmul@prod+3,f
  4314     0F1B                     u5223:
  4315     0F1B                     l3888:
  4316     0F1B  3008               	movlw	8
  4317     0F1C  00C2               	movwf	??___flmul
  4318     0F1D                     u5235:
  4319     0F1D  1003               	clrc
  4320     0F1E  0DC9               	rlf	___flmul@grs,f
  4321     0F1F  0DCA               	rlf	___flmul@grs+1,f
  4322     0F20  0DCB               	rlf	___flmul@grs+2,f
  4323     0F21  0DCC               	rlf	___flmul@grs+3,f
  4324     0F22  0BC2               	decfsz	??___flmul,f
  4325     0F23  2F1D               	goto	u5235
  4326     0F24                     l3890:
  4327     0F24  084D               	movf	___flmul@bexp,w
  4328     0F25  0748               	addwf	___flmul@aexp,w
  4329     0F26  00C2               	movwf	??___flmul
  4330     0F27  01C3               	clrf	??___flmul+1
  4331     0F28  0DC3               	rlf	??___flmul+1,f
  4332     0F29  0842               	movf	??___flmul,w
  4333     0F2A  3E82               	addlw	130
  4334     0F2B  00D2               	movwf	___flmul@temp
  4335     0F2C  0843               	movf	??___flmul+1,w
  4336     0F2D  1803               	skipnc
  4337     0F2E  3E01               	addlw	1
  4338     0F2F  3EFF               	addlw	255
  4339     0F30  00D3               	movwf	___flmul@temp+1
  4340     0F31  2F4F               	goto	l3902
  4341     0F32                     l3892:
  4342     0F32  3001               	movlw	1
  4343     0F33  00C2               	movwf	??___flmul
  4344     0F34                     u5245:
  4345     0F34  1003               	clrc
  4346     0F35  0DCE               	rlf	___flmul@prod,f
  4347     0F36  0DCF               	rlf	___flmul@prod+1,f
  4348     0F37  0DD0               	rlf	___flmul@prod+2,f
  4349     0F38  0DD1               	rlf	___flmul@prod+3,f
  4350     0F39  0BC2               	decfsz	??___flmul,f
  4351     0F3A  2F34               	goto	u5245
  4352     0F3B                     l3894:
  4353     0F3B  1FCC               	btfss	___flmul@grs+3,7
  4354     0F3C  2F3E               	goto	u5251
  4355     0F3D  2F3F               	goto	u5250
  4356     0F3E                     u5251:
  4357     0F3E  2F40               	goto	l3898
  4358     0F3F                     u5250:
  4359     0F3F                     l3896:
  4360     0F3F  144E               	bsf	___flmul@prod,0
  4361     0F40                     l3898:
  4362     0F40  3001               	movlw	1
  4363     0F41  00C2               	movwf	??___flmul
  4364     0F42                     u5265:
  4365     0F42  1003               	clrc
  4366     0F43  0DC9               	rlf	___flmul@grs,f
  4367     0F44  0DCA               	rlf	___flmul@grs+1,f
  4368     0F45  0DCB               	rlf	___flmul@grs+2,f
  4369     0F46  0DCC               	rlf	___flmul@grs+3,f
  4370     0F47  0BC2               	decfsz	??___flmul,f
  4371     0F48  2F42               	goto	u5265
  4372     0F49                     l3900:
  4373     0F49  30FF               	movlw	255
  4374     0F4A  07D2               	addwf	___flmul@temp,f
  4375     0F4B  1803               	skipnc
  4376     0F4C  0AD3               	incf	___flmul@temp+1,f
  4377     0F4D  30FF               	movlw	255
  4378     0F4E  07D3               	addwf	___flmul@temp+1,f
  4379     0F4F                     l3902:
  4380     0F4F  1FD0               	btfss	___flmul@prod+2,7
  4381     0F50  2F52               	goto	u5271
  4382     0F51  2F53               	goto	u5270
  4383     0F52                     u5271:
  4384     0F52  2F32               	goto	l3892
  4385     0F53                     u5270:
  4386     0F53                     l3904:
  4387     0F53  01C8               	clrf	___flmul@aexp
  4388     0F54                     l3906:
  4389     0F54  1FCC               	btfss	___flmul@grs+3,7
  4390     0F55  2F57               	goto	u5281
  4391     0F56  2F58               	goto	u5280
  4392     0F57                     u5281:
  4393     0F57  2F74               	goto	l3914
  4394     0F58                     u5280:
  4395     0F58                     l3908:
  4396     0F58  30FF               	movlw	255
  4397     0F59  0549               	andwf	___flmul@grs,w
  4398     0F5A  00C2               	movwf	??___flmul
  4399     0F5B  30FF               	movlw	255
  4400     0F5C  054A               	andwf	___flmul@grs+1,w
  4401     0F5D  00C3               	movwf	??___flmul+1
  4402     0F5E  30FF               	movlw	255
  4403     0F5F  054B               	andwf	___flmul@grs+2,w
  4404     0F60  00C4               	movwf	??___flmul+2
  4405     0F61  307F               	movlw	127
  4406     0F62  054C               	andwf	___flmul@grs+3,w
  4407     0F63  00C5               	movwf	??___flmul+3
  4408     0F64  0845               	movf	??___flmul+3,w
  4409     0F65  0444               	iorwf	??___flmul+2,w
  4410     0F66  0443               	iorwf	??___flmul+1,w
  4411     0F67  0442               	iorwf	??___flmul,w
  4412     0F68  1903               	skipnz
  4413     0F69  2F6B               	goto	u5291
  4414     0F6A  2F6C               	goto	u5290
  4415     0F6B                     u5291:
  4416     0F6B  2F6F               	goto	l822
  4417     0F6C                     u5290:
  4418     0F6C                     l3910:
  4419     0F6C  01C8               	clrf	___flmul@aexp
  4420     0F6D  0AC8               	incf	___flmul@aexp,f
  4421     0F6E  2F74               	goto	l3914
  4422     0F6F                     l822:
  4423     0F6F  1C4E               	btfss	___flmul@prod,0
  4424     0F70  2F72               	goto	u5301
  4425     0F71  2F73               	goto	u5300
  4426     0F72                     u5301:
  4427     0F72  2F74               	goto	l3914
  4428     0F73                     u5300:
  4429     0F73  2F6C               	goto	l3910
  4430     0F74                     l3914:
  4431     0F74  0848               	movf	___flmul@aexp,w
  4432     0F75  1903               	btfsc	3,2
  4433     0F76  2F78               	goto	u5311
  4434     0F77  2F79               	goto	u5310
  4435     0F78                     u5311:
  4436     0F78  2FAA               	goto	l3924
  4437     0F79                     u5310:
  4438     0F79                     l3916:
  4439     0F79  3001               	movlw	1
  4440     0F7A  07CE               	addwf	___flmul@prod,f
  4441     0F7B  3000               	movlw	0
  4442     0F7C  1803               	skipnc
  4443     0F7D  3001               	movlw	1
  4444     0F7E  07CF               	addwf	___flmul@prod+1,f
  4445     0F7F  3000               	movlw	0
  4446     0F80  1803               	skipnc
  4447     0F81  3001               	movlw	1
  4448     0F82  07D0               	addwf	___flmul@prod+2,f
  4449     0F83  3000               	movlw	0
  4450     0F84  1803               	skipnc
  4451     0F85  3001               	movlw	1
  4452     0F86  07D1               	addwf	___flmul@prod+3,f
  4453     0F87                     l3918:
  4454     0F87  1C51               	btfss	___flmul@prod+3,0
  4455     0F88  2F8A               	goto	u5321
  4456     0F89  2F8B               	goto	u5320
  4457     0F8A                     u5321:
  4458     0F8A  2FAA               	goto	l3924
  4459     0F8B                     u5320:
  4460     0F8B                     l3920:
  4461     0F8B  084E               	movf	___flmul@prod,w
  4462     0F8C  00C2               	movwf	??___flmul
  4463     0F8D  084F               	movf	___flmul@prod+1,w
  4464     0F8E  00C3               	movwf	??___flmul+1
  4465     0F8F  0850               	movf	___flmul@prod+2,w
  4466     0F90  00C4               	movwf	??___flmul+2
  4467     0F91  0851               	movf	___flmul@prod+3,w
  4468     0F92  00C5               	movwf	??___flmul+3
  4469     0F93  3001               	movlw	1
  4470     0F94  00C6               	movwf	??___flmul+4
  4471     0F95                     u5335:
  4472     0F95  0D45               	rlf	??___flmul+3,w
  4473     0F96  0CC5               	rrf	??___flmul+3,f
  4474     0F97  0CC4               	rrf	??___flmul+2,f
  4475     0F98  0CC3               	rrf	??___flmul+1,f
  4476     0F99  0CC2               	rrf	??___flmul,f
  4477     0F9A                     u5330:
  4478     0F9A  0BC6               	decfsz	??___flmul+4,f
  4479     0F9B  2F95               	goto	u5335
  4480     0F9C  0845               	movf	??___flmul+3,w
  4481     0F9D  00D1               	movwf	___flmul@prod+3
  4482     0F9E  0844               	movf	??___flmul+2,w
  4483     0F9F  00D0               	movwf	___flmul@prod+2
  4484     0FA0  0843               	movf	??___flmul+1,w
  4485     0FA1  00CF               	movwf	___flmul@prod+1
  4486     0FA2  0842               	movf	??___flmul,w
  4487     0FA3  00CE               	movwf	___flmul@prod
  4488     0FA4                     l3922:
  4489     0FA4  3001               	movlw	1
  4490     0FA5  07D2               	addwf	___flmul@temp,f
  4491     0FA6  1803               	skipnc
  4492     0FA7  0AD3               	incf	___flmul@temp+1,f
  4493     0FA8  3000               	movlw	0
  4494     0FA9  07D3               	addwf	___flmul@temp+1,f
  4495     0FAA                     l3924:
  4496     0FAA  0853               	movf	___flmul@temp+1,w
  4497     0FAB  3A80               	xorlw	128
  4498     0FAC  00FF               	movwf	btemp+1
  4499     0FAD  3080               	movlw	128
  4500     0FAE  027F               	subwf	btemp+1,w
  4501     0FAF  1D03               	skipz
  4502     0FB0  2FB3               	goto	u5345
  4503     0FB1  30FF               	movlw	255
  4504     0FB2  0252               	subwf	___flmul@temp,w
  4505     0FB3                     u5345:
  4506     0FB3  1C03               	skipc
  4507     0FB4  2FB6               	goto	u5341
  4508     0FB5  2FB7               	goto	u5340
  4509     0FB6                     u5341:
  4510     0FB6  2FC2               	goto	l3928
  4511     0FB7                     u5340:
  4512     0FB7                     l3926:
  4513     0FB7  307F               	movlw	127
  4514     0FB8  1283               	bcf	3,5	;RP0=0, select bank0
  4515     0FB9  1303               	bcf	3,6	;RP1=0, select bank0
  4516     0FBA  00D1               	movwf	___flmul@prod+3
  4517     0FBB  3080               	movlw	128
  4518     0FBC  00D0               	movwf	___flmul@prod+2
  4519     0FBD  3000               	movlw	0
  4520     0FBE  00CF               	movwf	___flmul@prod+1
  4521     0FBF  3000               	movlw	0
  4522     0FC0  00CE               	movwf	___flmul@prod
  4523     0FC1  2FF3               	goto	l3942
  4524     0FC2                     l3928:
  4525     0FC2  1283               	bcf	3,5	;RP0=0, select bank0
  4526     0FC3  1303               	bcf	3,6	;RP1=0, select bank0
  4527     0FC4  0853               	movf	___flmul@temp+1,w
  4528     0FC5  3A80               	xorlw	128
  4529     0FC6  00FF               	movwf	btemp+1
  4530     0FC7  3080               	movlw	128
  4531     0FC8  027F               	subwf	btemp+1,w
  4532     0FC9  1D03               	skipz
  4533     0FCA  2FCD               	goto	u5355
  4534     0FCB  3001               	movlw	1
  4535     0FCC  0252               	subwf	___flmul@temp,w
  4536     0FCD                     u5355:
  4537     0FCD  1803               	skipnc
  4538     0FCE  2FD0               	goto	u5351
  4539     0FCF  2FD1               	goto	u5350
  4540     0FD0                     u5351:
  4541     0FD0  2FDD               	goto	l3934
  4542     0FD1                     u5350:
  4543     0FD1                     l3930:
  4544     0FD1  3000               	movlw	0
  4545     0FD2  1283               	bcf	3,5	;RP0=0, select bank0
  4546     0FD3  1303               	bcf	3,6	;RP1=0, select bank0
  4547     0FD4  00D1               	movwf	___flmul@prod+3
  4548     0FD5  3000               	movlw	0
  4549     0FD6  00D0               	movwf	___flmul@prod+2
  4550     0FD7  3000               	movlw	0
  4551     0FD8  00CF               	movwf	___flmul@prod+1
  4552     0FD9  3000               	movlw	0
  4553     0FDA  00CE               	movwf	___flmul@prod
  4554     0FDB                     l3932:
  4555     0FDB  01C7               	clrf	___flmul@sign
  4556     0FDC  2FF3               	goto	l3942
  4557     0FDD                     l3934:
  4558     0FDD  1283               	bcf	3,5	;RP0=0, select bank0
  4559     0FDE  1303               	bcf	3,6	;RP1=0, select bank0
  4560     0FDF  0852               	movf	___flmul@temp,w
  4561     0FE0  00CD               	movwf	___flmul@bexp
  4562     0FE1  30FF               	movlw	255
  4563     0FE2  05CE               	andwf	___flmul@prod,f
  4564     0FE3  30FF               	movlw	255
  4565     0FE4  05CF               	andwf	___flmul@prod+1,f
  4566     0FE5  307F               	movlw	127
  4567     0FE6  05D0               	andwf	___flmul@prod+2,f
  4568     0FE7  3000               	movlw	0
  4569     0FE8  05D1               	andwf	___flmul@prod+3,f
  4570     0FE9                     l3936:
  4571     0FE9  1C4D               	btfss	___flmul@bexp,0
  4572     0FEA  2FEC               	goto	u5361
  4573     0FEB  2FED               	goto	u5360
  4574     0FEC                     u5361:
  4575     0FEC  2FEE               	goto	l3940
  4576     0FED                     u5360:
  4577     0FED                     l3938:
  4578     0FED  17D0               	bsf	___flmul@prod+2,7
  4579     0FEE                     l3940:
  4580     0FEE  084D               	movf	___flmul@bexp,w
  4581     0FEF  00C2               	movwf	??___flmul
  4582     0FF0  1003               	clrc
  4583     0FF1  0C42               	rrf	??___flmul,w
  4584     0FF2  00D1               	movwf	___flmul@prod+3
  4585     0FF3                     l3942:
  4586     0FF3  0847               	movf	___flmul@sign,w
  4587     0FF4  00FF               	movwf	btemp+1
  4588     0FF5  087F               	movf	btemp+1,w
  4589     0FF6  04D1               	iorwf	___flmul@prod+3,f
  4590     0FF7                     l3944:
  4591     0FF7  0851               	movf	___flmul@prod+3,w
  4592     0FF8  00BD               	movwf	?___flmul+3
  4593     0FF9  0850               	movf	___flmul@prod+2,w
  4594     0FFA  00BC               	movwf	?___flmul+2
  4595     0FFB  084F               	movf	___flmul@prod+1,w
  4596     0FFC  00BB               	movwf	?___flmul+1
  4597     0FFD  084E               	movf	___flmul@prod,w
  4598     0FFE  00BA               	movwf	?___flmul
  4599     0FFF                     l816:
  4600     0FFF  0008               	return
  4601     1000                     __end_of___flmul:
  4602                           
  4603                           	psect	text11
  4604     12D1                     __ptext11:	
  4605 ;; *************** function __Umul8_16 *****************
  4606 ;; Defined at:
  4607 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul8_16.c"
  4608 ;; Parameters:    Size  Location     Type
  4609 ;;  multiplier      1    wreg     unsigned char 
  4610 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  4611 ;; Auto vars:     Size  Location     Type
  4612 ;;  multiplier      1    8[BANK0 ] unsigned char 
  4613 ;;  word_mpld       2    6[BANK0 ] unsigned int 
  4614 ;;  product         2    4[BANK0 ] unsigned int 
  4615 ;; Return value:  Size  Location     Type
  4616 ;;                  2    0[BANK0 ] unsigned int 
  4617 ;; Registers used:
  4618 ;;		wreg, status,2, status,0
  4619 ;; Tracked objects:
  4620 ;;		On entry : 0/0
  4621 ;;		On exit  : 0/0
  4622 ;;		Unchanged: 0/0
  4623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4624 ;;      Params:         0       2       0       0       0
  4625 ;;      Locals:         0       5       0       0       0
  4626 ;;      Temps:          0       2       0       0       0
  4627 ;;      Totals:         0       9       0       0       0
  4628 ;;Total ram usage:        9 bytes
  4629 ;; Hardware stack levels used: 1
  4630 ;; Hardware stack levels required when called: 2
  4631 ;; This function calls:
  4632 ;;		Nothing
  4633 ;; This function is called by:
  4634 ;;		___flmul
  4635 ;; This function uses a non-reentrant model
  4636 ;;
  4637                           
  4638     12D1                     __Umul8_16:	
  4639                           ;psect for function __Umul8_16
  4640                           
  4641                           
  4642                           ;incstack = 0
  4643                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  4644                           ;__Umul8_16@multiplier stored from wreg
  4645     12D1  1283               	bcf	3,5	;RP0=0, select bank0
  4646     12D2  1303               	bcf	3,6	;RP1=0, select bank0
  4647     12D3  00A8               	movwf	__Umul8_16@multiplier
  4648     12D4                     l3576:
  4649     12D4  01A4               	clrf	__Umul8_16@product
  4650     12D5  01A5               	clrf	__Umul8_16@product+1
  4651     12D6                     l3578:
  4652     12D6  0820               	movf	__Umul8_16@multiplicand,w
  4653     12D7  00A2               	movwf	??__Umul8_16
  4654     12D8  01A3               	clrf	??__Umul8_16+1
  4655     12D9  0822               	movf	??__Umul8_16,w
  4656     12DA  00A6               	movwf	__Umul8_16@word_mpld
  4657     12DB  0823               	movf	??__Umul8_16+1,w
  4658     12DC  00A7               	movwf	__Umul8_16@word_mpld+1
  4659     12DD                     l3580:
  4660     12DD  1C28               	btfss	__Umul8_16@multiplier,0
  4661     12DE  2AE0               	goto	u4581
  4662     12DF  2AE1               	goto	u4580
  4663     12E0                     u4581:
  4664     12E0  2AE7               	goto	l835
  4665     12E1                     u4580:
  4666     12E1                     l3582:
  4667     12E1  0826               	movf	__Umul8_16@word_mpld,w
  4668     12E2  07A4               	addwf	__Umul8_16@product,f
  4669     12E3  1803               	skipnc
  4670     12E4  0AA5               	incf	__Umul8_16@product+1,f
  4671     12E5  0827               	movf	__Umul8_16@word_mpld+1,w
  4672     12E6  07A5               	addwf	__Umul8_16@product+1,f
  4673     12E7                     l835:
  4674     12E7  3001               	movlw	1
  4675     12E8                     u4595:
  4676     12E8  1003               	clrc
  4677     12E9  0DA6               	rlf	__Umul8_16@word_mpld,f
  4678     12EA  0DA7               	rlf	__Umul8_16@word_mpld+1,f
  4679     12EB  3EFF               	addlw	-1
  4680     12EC  1D03               	skipz
  4681     12ED  2AE8               	goto	u4595
  4682     12EE  1003               	clrc
  4683     12EF  0CA8               	rrf	__Umul8_16@multiplier,f
  4684     12F0                     l3584:
  4685     12F0  0828               	movf	__Umul8_16@multiplier,w
  4686     12F1  1D03               	btfss	3,2
  4687     12F2  2AF4               	goto	u4601
  4688     12F3  2AF5               	goto	u4600
  4689     12F4                     u4601:
  4690     12F4  2ADD               	goto	l3580
  4691     12F5                     u4600:
  4692     12F5                     l3586:
  4693     12F5  0825               	movf	__Umul8_16@product+1,w
  4694     12F6  00A1               	movwf	?__Umul8_16+1
  4695     12F7  0824               	movf	__Umul8_16@product,w
  4696     12F8  00A0               	movwf	?__Umul8_16
  4697     12F9                     l837:
  4698     12F9  0008               	return
  4699     12FA                     __end_of__Umul8_16:
  4700                           
  4701                           	psect	text12
  4702     08F5                     __ptext12:	
  4703 ;; *************** function ___fldiv *****************
  4704 ;; Defined at:
  4705 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\sprcdiv.c"
  4706 ;; Parameters:    Size  Location     Type
  4707 ;;  a               4    0[BANK0 ] unsigned int 
  4708 ;;  b               4    4[BANK0 ] unsigned int 
  4709 ;; Auto vars:     Size  Location     Type
  4710 ;;  grs             4   20[BANK0 ] unsigned long 
  4711 ;;  rem             4   13[BANK0 ] unsigned long 
  4712 ;;  new_exp         2   18[BANK0 ] int 
  4713 ;;  aexp            1   25[BANK0 ] unsigned char 
  4714 ;;  bexp            1   24[BANK0 ] unsigned char 
  4715 ;;  sign            1   17[BANK0 ] unsigned char 
  4716 ;; Return value:  Size  Location     Type
  4717 ;;                  4    0[BANK0 ] unsigned char 
  4718 ;; Registers used:
  4719 ;;		wreg, status,2, status,0, btemp+1
  4720 ;; Tracked objects:
  4721 ;;		On entry : 0/0
  4722 ;;		On exit  : 0/0
  4723 ;;		Unchanged: 0/0
  4724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4725 ;;      Params:         0       8       0       0       0
  4726 ;;      Locals:         0      13       0       0       0
  4727 ;;      Temps:          0       5       0       0       0
  4728 ;;      Totals:         0      26       0       0       0
  4729 ;;Total ram usage:       26 bytes
  4730 ;; Hardware stack levels used: 1
  4731 ;; Hardware stack levels required when called: 2
  4732 ;; This function calls:
  4733 ;;		Nothing
  4734 ;; This function is called by:
  4735 ;;		_main
  4736 ;; This function uses a non-reentrant model
  4737 ;;
  4738                           
  4739     08F5                     ___fldiv:	
  4740                           ;psect for function ___fldiv
  4741                           
  4742     08F5                     l2592:	
  4743                           ;incstack = 0
  4744                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  4745                           
  4746     08F5  1283               	bcf	3,5	;RP0=0, select bank0
  4747     08F6  1303               	bcf	3,6	;RP1=0, select bank0
  4748     08F7  0827               	movf	___fldiv@b+3,w
  4749     08F8  3980               	andlw	128
  4750     08F9  00B1               	movwf	___fldiv@sign
  4751     08FA                     l2594:
  4752     08FA  0827               	movf	___fldiv@b+3,w
  4753     08FB  00A8               	movwf	??___fldiv
  4754     08FC  0728               	addwf	??___fldiv,w
  4755     08FD  00B8               	movwf	___fldiv@bexp
  4756     08FE                     l2596:
  4757     08FE  1FA6               	btfss	___fldiv@b+2,7
  4758     08FF  2901               	goto	u2941
  4759     0900  2902               	goto	u2940
  4760     0901                     u2941:
  4761     0901  2903               	goto	l2600
  4762     0902                     u2940:
  4763     0902                     l2598:
  4764     0902  1438               	bsf	___fldiv@bexp,0
  4765     0903                     l2600:
  4766     0903  0838               	movf	___fldiv@bexp,w
  4767     0904  1903               	btfsc	3,2
  4768     0905  2907               	goto	u2951
  4769     0906  2908               	goto	u2950
  4770     0907                     u2951:
  4771     0907  2918               	goto	l2610
  4772     0908                     u2950:
  4773     0908                     l2602:
  4774     0908  0A38               	incf	___fldiv@bexp,w
  4775     0909  1D03               	btfss	3,2
  4776     090A  290C               	goto	u2961
  4777     090B  290D               	goto	u2960
  4778     090C                     u2961:
  4779     090C  2915               	goto	l2606
  4780     090D                     u2960:
  4781     090D                     l2604:
  4782     090D  3000               	movlw	0
  4783     090E  00A7               	movwf	___fldiv@b+3
  4784     090F  3000               	movlw	0
  4785     0910  00A6               	movwf	___fldiv@b+2
  4786     0911  3000               	movlw	0
  4787     0912  00A5               	movwf	___fldiv@b+1
  4788     0913  3000               	movlw	0
  4789     0914  00A4               	movwf	___fldiv@b
  4790     0915                     l2606:
  4791     0915  17A6               	bsf	___fldiv@b+2,7
  4792     0916                     l2608:
  4793     0916  01A7               	clrf	___fldiv@b+3
  4794     0917  2920               	goto	l2612
  4795     0918                     l2610:
  4796     0918  3000               	movlw	0
  4797     0919  00A7               	movwf	___fldiv@b+3
  4798     091A  3000               	movlw	0
  4799     091B  00A6               	movwf	___fldiv@b+2
  4800     091C  3000               	movlw	0
  4801     091D  00A5               	movwf	___fldiv@b+1
  4802     091E  3000               	movlw	0
  4803     091F  00A4               	movwf	___fldiv@b
  4804     0920                     l2612:
  4805     0920  0823               	movf	___fldiv@a+3,w
  4806     0921  3980               	andlw	128
  4807     0922  00FF               	movwf	btemp+1
  4808     0923  087F               	movf	btemp+1,w
  4809     0924  06B1               	xorwf	___fldiv@sign,f
  4810     0925                     l2614:
  4811     0925  0823               	movf	___fldiv@a+3,w
  4812     0926  00A8               	movwf	??___fldiv
  4813     0927  0728               	addwf	??___fldiv,w
  4814     0928  00B9               	movwf	___fldiv@aexp
  4815     0929                     l2616:
  4816     0929  1FA2               	btfss	___fldiv@a+2,7
  4817     092A  292C               	goto	u2971
  4818     092B  292D               	goto	u2970
  4819     092C                     u2971:
  4820     092C  292E               	goto	l2620
  4821     092D                     u2970:
  4822     092D                     l2618:
  4823     092D  1439               	bsf	___fldiv@aexp,0
  4824     092E                     l2620:
  4825     092E  0839               	movf	___fldiv@aexp,w
  4826     092F  1903               	btfsc	3,2
  4827     0930  2932               	goto	u2981
  4828     0931  2933               	goto	u2980
  4829     0932                     u2981:
  4830     0932  2943               	goto	l2630
  4831     0933                     u2980:
  4832     0933                     l2622:
  4833     0933  0A39               	incf	___fldiv@aexp,w
  4834     0934  1D03               	btfss	3,2
  4835     0935  2937               	goto	u2991
  4836     0936  2938               	goto	u2990
  4837     0937                     u2991:
  4838     0937  2940               	goto	l2626
  4839     0938                     u2990:
  4840     0938                     l2624:
  4841     0938  3000               	movlw	0
  4842     0939  00A3               	movwf	___fldiv@a+3
  4843     093A  3000               	movlw	0
  4844     093B  00A2               	movwf	___fldiv@a+2
  4845     093C  3000               	movlw	0
  4846     093D  00A1               	movwf	___fldiv@a+1
  4847     093E  3000               	movlw	0
  4848     093F  00A0               	movwf	___fldiv@a
  4849     0940                     l2626:
  4850     0940  17A2               	bsf	___fldiv@a+2,7
  4851     0941                     l2628:
  4852     0941  01A3               	clrf	___fldiv@a+3
  4853     0942  294B               	goto	l776
  4854     0943                     l2630:
  4855     0943  3000               	movlw	0
  4856     0944  00A3               	movwf	___fldiv@a+3
  4857     0945  3000               	movlw	0
  4858     0946  00A2               	movwf	___fldiv@a+2
  4859     0947  3000               	movlw	0
  4860     0948  00A1               	movwf	___fldiv@a+1
  4861     0949  3000               	movlw	0
  4862     094A  00A0               	movwf	___fldiv@a
  4863     094B                     l776:
  4864     094B  0823               	movf	___fldiv@a+3,w
  4865     094C  0422               	iorwf	___fldiv@a+2,w
  4866     094D  0421               	iorwf	___fldiv@a+1,w
  4867     094E  0420               	iorwf	___fldiv@a,w
  4868     094F  1D03               	skipz
  4869     0950  2952               	goto	u3001
  4870     0951  2953               	goto	u3000
  4871     0952                     u3001:
  4872     0952  296C               	goto	l2640
  4873     0953                     u3000:
  4874     0953                     l2632:
  4875     0953  3000               	movlw	0
  4876     0954  00A7               	movwf	___fldiv@b+3
  4877     0955  3000               	movlw	0
  4878     0956  00A6               	movwf	___fldiv@b+2
  4879     0957  3000               	movlw	0
  4880     0958  00A5               	movwf	___fldiv@b+1
  4881     0959  3000               	movlw	0
  4882     095A  00A4               	movwf	___fldiv@b
  4883     095B  3080               	movlw	128
  4884     095C  04A6               	iorwf	___fldiv@b+2,f
  4885     095D  307F               	movlw	127
  4886     095E  04A7               	iorwf	___fldiv@b+3,f
  4887     095F                     l2634:
  4888     095F  0831               	movf	___fldiv@sign,w
  4889     0960  00FF               	movwf	btemp+1
  4890     0961  087F               	movf	btemp+1,w
  4891     0962  04A7               	iorwf	___fldiv@b+3,f
  4892     0963                     l2636:
  4893     0963  0827               	movf	___fldiv@b+3,w
  4894     0964  00A3               	movwf	?___fldiv+3
  4895     0965  0826               	movf	___fldiv@b+2,w
  4896     0966  00A2               	movwf	?___fldiv+2
  4897     0967  0825               	movf	___fldiv@b+1,w
  4898     0968  00A1               	movwf	?___fldiv+1
  4899     0969  0824               	movf	___fldiv@b,w
  4900     096A  00A0               	movwf	?___fldiv
  4901     096B  2AC3               	goto	l778
  4902     096C                     l2640:
  4903     096C  0838               	movf	___fldiv@bexp,w
  4904     096D  1D03               	btfss	3,2
  4905     096E  2970               	goto	u3011
  4906     096F  2971               	goto	u3010
  4907     0970                     u3011:
  4908     0970  297A               	goto	l2646
  4909     0971                     u3010:
  4910     0971                     l2642:
  4911     0971  3000               	movlw	0
  4912     0972  00A3               	movwf	?___fldiv+3
  4913     0973  3000               	movlw	0
  4914     0974  00A2               	movwf	?___fldiv+2
  4915     0975  3000               	movlw	0
  4916     0976  00A1               	movwf	?___fldiv+1
  4917     0977  3000               	movlw	0
  4918     0978  00A0               	movwf	?___fldiv
  4919     0979  2AC3               	goto	l778
  4920     097A                     l2646:
  4921     097A  0838               	movf	___fldiv@bexp,w
  4922     097B  00A8               	movwf	??___fldiv
  4923     097C  01A9               	clrf	??___fldiv+1
  4924     097D  0829               	movf	??___fldiv+1,w
  4925     097E  00AB               	movwf	??___fldiv+3
  4926     097F  0839               	movf	___fldiv@aexp,w
  4927     0980  0228               	subwf	??___fldiv,w
  4928     0981  00AA               	movwf	??___fldiv+2
  4929     0982  1C03               	skipc
  4930     0983  03AB               	decf	??___fldiv+3,f
  4931     0984  082A               	movf	??___fldiv+2,w
  4932     0985  3E7F               	addlw	127
  4933     0986  00B2               	movwf	___fldiv@new_exp
  4934     0987  082B               	movf	??___fldiv+3,w
  4935     0988  1803               	skipnc
  4936     0989  3E01               	addlw	1
  4937     098A  3E00               	addlw	0
  4938     098B  00B3               	movwf	___fldiv@new_exp+1
  4939     098C                     l2648:
  4940     098C  0827               	movf	___fldiv@b+3,w
  4941     098D  00B0               	movwf	___fldiv@rem+3
  4942     098E  0826               	movf	___fldiv@b+2,w
  4943     098F  00AF               	movwf	___fldiv@rem+2
  4944     0990  0825               	movf	___fldiv@b+1,w
  4945     0991  00AE               	movwf	___fldiv@rem+1
  4946     0992  0824               	movf	___fldiv@b,w
  4947     0993  00AD               	movwf	___fldiv@rem
  4948     0994                     l2650:
  4949     0994  3000               	movlw	0
  4950     0995  00A7               	movwf	___fldiv@b+3
  4951     0996  3000               	movlw	0
  4952     0997  00A6               	movwf	___fldiv@b+2
  4953     0998  3000               	movlw	0
  4954     0999  00A5               	movwf	___fldiv@b+1
  4955     099A  3000               	movlw	0
  4956     099B  00A4               	movwf	___fldiv@b
  4957     099C                     l2652:
  4958     099C  3000               	movlw	0
  4959     099D  00B7               	movwf	___fldiv@grs+3
  4960     099E  3000               	movlw	0
  4961     099F  00B6               	movwf	___fldiv@grs+2
  4962     09A0  3000               	movlw	0
  4963     09A1  00B5               	movwf	___fldiv@grs+1
  4964     09A2  3000               	movlw	0
  4965     09A3  00B4               	movwf	___fldiv@grs
  4966     09A4                     l2654:
  4967     09A4  01B9               	clrf	___fldiv@aexp
  4968     09A5  29F0               	goto	l2674
  4969     09A6                     l2656:
  4970     09A6  0839               	movf	___fldiv@aexp,w
  4971     09A7  1903               	btfsc	3,2
  4972     09A8  29AA               	goto	u3021
  4973     09A9  29AB               	goto	u3020
  4974     09AA                     u3021:
  4975     09AA  29CB               	goto	l2666
  4976     09AB                     u3020:
  4977     09AB                     l2658:
  4978     09AB  3001               	movlw	1
  4979     09AC  00A8               	movwf	??___fldiv
  4980     09AD                     u3035:
  4981     09AD  1003               	clrc
  4982     09AE  0DAD               	rlf	___fldiv@rem,f
  4983     09AF  0DAE               	rlf	___fldiv@rem+1,f
  4984     09B0  0DAF               	rlf	___fldiv@rem+2,f
  4985     09B1  0DB0               	rlf	___fldiv@rem+3,f
  4986     09B2  0BA8               	decfsz	??___fldiv,f
  4987     09B3  29AD               	goto	u3035
  4988     09B4  3001               	movlw	1
  4989     09B5  00A8               	movwf	??___fldiv
  4990     09B6                     u3045:
  4991     09B6  1003               	clrc
  4992     09B7  0DA4               	rlf	___fldiv@b,f
  4993     09B8  0DA5               	rlf	___fldiv@b+1,f
  4994     09B9  0DA6               	rlf	___fldiv@b+2,f
  4995     09BA  0DA7               	rlf	___fldiv@b+3,f
  4996     09BB  0BA8               	decfsz	??___fldiv,f
  4997     09BC  29B6               	goto	u3045
  4998     09BD                     l2660:
  4999     09BD  1FB7               	btfss	___fldiv@grs+3,7
  5000     09BE  29C0               	goto	u3051
  5001     09BF  29C1               	goto	u3050
  5002     09C0                     u3051:
  5003     09C0  29C2               	goto	l2664
  5004     09C1                     u3050:
  5005     09C1                     l2662:
  5006     09C1  1424               	bsf	___fldiv@b,0
  5007     09C2                     l2664:
  5008     09C2  3001               	movlw	1
  5009     09C3  00A8               	movwf	??___fldiv
  5010     09C4                     u3065:
  5011     09C4  1003               	clrc
  5012     09C5  0DB4               	rlf	___fldiv@grs,f
  5013     09C6  0DB5               	rlf	___fldiv@grs+1,f
  5014     09C7  0DB6               	rlf	___fldiv@grs+2,f
  5015     09C8  0DB7               	rlf	___fldiv@grs+3,f
  5016     09C9  0BA8               	decfsz	??___fldiv,f
  5017     09CA  29C4               	goto	u3065
  5018     09CB                     l2666:
  5019     09CB  0823               	movf	___fldiv@a+3,w
  5020     09CC  0230               	subwf	___fldiv@rem+3,w
  5021     09CD  1D03               	skipz
  5022     09CE  29D9               	goto	u3075
  5023     09CF  0822               	movf	___fldiv@a+2,w
  5024     09D0  022F               	subwf	___fldiv@rem+2,w
  5025     09D1  1D03               	skipz
  5026     09D2  29D9               	goto	u3075
  5027     09D3  0821               	movf	___fldiv@a+1,w
  5028     09D4  022E               	subwf	___fldiv@rem+1,w
  5029     09D5  1D03               	skipz
  5030     09D6  29D9               	goto	u3075
  5031     09D7  0820               	movf	___fldiv@a,w
  5032     09D8  022D               	subwf	___fldiv@rem,w
  5033     09D9                     u3075:
  5034     09D9  1C03               	skipc
  5035     09DA  29DC               	goto	u3071
  5036     09DB  29DD               	goto	u3070
  5037     09DC                     u3071:
  5038     09DC  29EC               	goto	l2672
  5039     09DD                     u3070:
  5040     09DD                     l2668:
  5041     09DD  1737               	bsf	___fldiv@grs+3,6
  5042     09DE                     l2670:
  5043     09DE  0820               	movf	___fldiv@a,w
  5044     09DF  02AD               	subwf	___fldiv@rem,f
  5045     09E0  0821               	movf	___fldiv@a+1,w
  5046     09E1  1C03               	skipc
  5047     09E2  0F21               	incfsz	___fldiv@a+1,w
  5048     09E3  02AE               	subwf	___fldiv@rem+1,f
  5049     09E4  0822               	movf	___fldiv@a+2,w
  5050     09E5  1C03               	skipc
  5051     09E6  0F22               	incfsz	___fldiv@a+2,w
  5052     09E7  02AF               	subwf	___fldiv@rem+2,f
  5053     09E8  0823               	movf	___fldiv@a+3,w
  5054     09E9  1C03               	skipc
  5055     09EA  0F23               	incfsz	___fldiv@a+3,w
  5056     09EB  02B0               	subwf	___fldiv@rem+3,f
  5057     09EC                     l2672:
  5058     09EC  3001               	movlw	1
  5059     09ED  00FF               	movwf	btemp+1
  5060     09EE  087F               	movf	btemp+1,w
  5061     09EF  07B9               	addwf	___fldiv@aexp,f
  5062     09F0                     l2674:
  5063     09F0  301A               	movlw	26
  5064     09F1  0239               	subwf	___fldiv@aexp,w
  5065     09F2  1C03               	skipc
  5066     09F3  29F5               	goto	u3081
  5067     09F4  29F6               	goto	u3080
  5068     09F5                     u3081:
  5069     09F5  29A6               	goto	l2656
  5070     09F6                     u3080:
  5071     09F6                     l2676:
  5072     09F6  0830               	movf	___fldiv@rem+3,w
  5073     09F7  042F               	iorwf	___fldiv@rem+2,w
  5074     09F8  042E               	iorwf	___fldiv@rem+1,w
  5075     09F9  042D               	iorwf	___fldiv@rem,w
  5076     09FA  1903               	skipnz
  5077     09FB  29FD               	goto	u3091
  5078     09FC  29FE               	goto	u3090
  5079     09FD                     u3091:
  5080     09FD  2A1D               	goto	l2690
  5081     09FE                     u3090:
  5082     09FE                     l2678:
  5083     09FE  1434               	bsf	___fldiv@grs,0
  5084     09FF  2A1D               	goto	l2690
  5085     0A00                     l2680:
  5086     0A00  3001               	movlw	1
  5087     0A01  00A8               	movwf	??___fldiv
  5088     0A02                     u3105:
  5089     0A02  1003               	clrc
  5090     0A03  0DA4               	rlf	___fldiv@b,f
  5091     0A04  0DA5               	rlf	___fldiv@b+1,f
  5092     0A05  0DA6               	rlf	___fldiv@b+2,f
  5093     0A06  0DA7               	rlf	___fldiv@b+3,f
  5094     0A07  0BA8               	decfsz	??___fldiv,f
  5095     0A08  2A02               	goto	u3105
  5096     0A09                     l2682:
  5097     0A09  1FB7               	btfss	___fldiv@grs+3,7
  5098     0A0A  2A0C               	goto	u3111
  5099     0A0B  2A0D               	goto	u3110
  5100     0A0C                     u3111:
  5101     0A0C  2A0E               	goto	l2686
  5102     0A0D                     u3110:
  5103     0A0D                     l2684:
  5104     0A0D  1424               	bsf	___fldiv@b,0
  5105     0A0E                     l2686:
  5106     0A0E  3001               	movlw	1
  5107     0A0F  00A8               	movwf	??___fldiv
  5108     0A10                     u3125:
  5109     0A10  1003               	clrc
  5110     0A11  0DB4               	rlf	___fldiv@grs,f
  5111     0A12  0DB5               	rlf	___fldiv@grs+1,f
  5112     0A13  0DB6               	rlf	___fldiv@grs+2,f
  5113     0A14  0DB7               	rlf	___fldiv@grs+3,f
  5114     0A15  0BA8               	decfsz	??___fldiv,f
  5115     0A16  2A10               	goto	u3125
  5116     0A17                     l2688:
  5117     0A17  30FF               	movlw	255
  5118     0A18  07B2               	addwf	___fldiv@new_exp,f
  5119     0A19  1803               	skipnc
  5120     0A1A  0AB3               	incf	___fldiv@new_exp+1,f
  5121     0A1B  30FF               	movlw	255
  5122     0A1C  07B3               	addwf	___fldiv@new_exp+1,f
  5123     0A1D                     l2690:
  5124     0A1D  1FA6               	btfss	___fldiv@b+2,7
  5125     0A1E  2A20               	goto	u3131
  5126     0A1F  2A21               	goto	u3130
  5127     0A20                     u3131:
  5128     0A20  2A00               	goto	l2680
  5129     0A21                     u3130:
  5130     0A21                     l2692:
  5131     0A21  01B9               	clrf	___fldiv@aexp
  5132     0A22                     l2694:
  5133     0A22  1FB7               	btfss	___fldiv@grs+3,7
  5134     0A23  2A25               	goto	u3141
  5135     0A24  2A26               	goto	u3140
  5136     0A25                     u3141:
  5137     0A25  2A42               	goto	l2702
  5138     0A26                     u3140:
  5139     0A26                     l2696:
  5140     0A26  30FF               	movlw	255
  5141     0A27  0534               	andwf	___fldiv@grs,w
  5142     0A28  00A8               	movwf	??___fldiv
  5143     0A29  30FF               	movlw	255
  5144     0A2A  0535               	andwf	___fldiv@grs+1,w
  5145     0A2B  00A9               	movwf	??___fldiv+1
  5146     0A2C  30FF               	movlw	255
  5147     0A2D  0536               	andwf	___fldiv@grs+2,w
  5148     0A2E  00AA               	movwf	??___fldiv+2
  5149     0A2F  307F               	movlw	127
  5150     0A30  0537               	andwf	___fldiv@grs+3,w
  5151     0A31  00AB               	movwf	??___fldiv+3
  5152     0A32  082B               	movf	??___fldiv+3,w
  5153     0A33  042A               	iorwf	??___fldiv+2,w
  5154     0A34  0429               	iorwf	??___fldiv+1,w
  5155     0A35  0428               	iorwf	??___fldiv,w
  5156     0A36  1903               	skipnz
  5157     0A37  2A39               	goto	u3151
  5158     0A38  2A3A               	goto	u3150
  5159     0A39                     u3151:
  5160     0A39  2A3D               	goto	l792
  5161     0A3A                     u3150:
  5162     0A3A                     l2698:
  5163     0A3A  01B9               	clrf	___fldiv@aexp
  5164     0A3B  0AB9               	incf	___fldiv@aexp,f
  5165     0A3C  2A42               	goto	l2702
  5166     0A3D                     l792:
  5167     0A3D  1C24               	btfss	___fldiv@b,0
  5168     0A3E  2A40               	goto	u3161
  5169     0A3F  2A41               	goto	u3160
  5170     0A40                     u3161:
  5171     0A40  2A42               	goto	l2702
  5172     0A41                     u3160:
  5173     0A41  2A3A               	goto	l2698
  5174     0A42                     l2702:
  5175     0A42  0839               	movf	___fldiv@aexp,w
  5176     0A43  1903               	btfsc	3,2
  5177     0A44  2A46               	goto	u3171
  5178     0A45  2A47               	goto	u3170
  5179     0A46                     u3171:
  5180     0A46  2A78               	goto	l2712
  5181     0A47                     u3170:
  5182     0A47                     l2704:
  5183     0A47  3001               	movlw	1
  5184     0A48  07A4               	addwf	___fldiv@b,f
  5185     0A49  3000               	movlw	0
  5186     0A4A  1803               	skipnc
  5187     0A4B  3001               	movlw	1
  5188     0A4C  07A5               	addwf	___fldiv@b+1,f
  5189     0A4D  3000               	movlw	0
  5190     0A4E  1803               	skipnc
  5191     0A4F  3001               	movlw	1
  5192     0A50  07A6               	addwf	___fldiv@b+2,f
  5193     0A51  3000               	movlw	0
  5194     0A52  1803               	skipnc
  5195     0A53  3001               	movlw	1
  5196     0A54  07A7               	addwf	___fldiv@b+3,f
  5197     0A55                     l2706:
  5198     0A55  1C27               	btfss	___fldiv@b+3,0
  5199     0A56  2A58               	goto	u3181
  5200     0A57  2A59               	goto	u3180
  5201     0A58                     u3181:
  5202     0A58  2A78               	goto	l2712
  5203     0A59                     u3180:
  5204     0A59                     l2708:
  5205     0A59  0824               	movf	___fldiv@b,w
  5206     0A5A  00A8               	movwf	??___fldiv
  5207     0A5B  0825               	movf	___fldiv@b+1,w
  5208     0A5C  00A9               	movwf	??___fldiv+1
  5209     0A5D  0826               	movf	___fldiv@b+2,w
  5210     0A5E  00AA               	movwf	??___fldiv+2
  5211     0A5F  0827               	movf	___fldiv@b+3,w
  5212     0A60  00AB               	movwf	??___fldiv+3
  5213     0A61  3001               	movlw	1
  5214     0A62  00AC               	movwf	??___fldiv+4
  5215     0A63                     u3195:
  5216     0A63  0D2B               	rlf	??___fldiv+3,w
  5217     0A64  0CAB               	rrf	??___fldiv+3,f
  5218     0A65  0CAA               	rrf	??___fldiv+2,f
  5219     0A66  0CA9               	rrf	??___fldiv+1,f
  5220     0A67  0CA8               	rrf	??___fldiv,f
  5221     0A68                     u3190:
  5222     0A68  0BAC               	decfsz	??___fldiv+4,f
  5223     0A69  2A63               	goto	u3195
  5224     0A6A  082B               	movf	??___fldiv+3,w
  5225     0A6B  00A7               	movwf	___fldiv@b+3
  5226     0A6C  082A               	movf	??___fldiv+2,w
  5227     0A6D  00A6               	movwf	___fldiv@b+2
  5228     0A6E  0829               	movf	??___fldiv+1,w
  5229     0A6F  00A5               	movwf	___fldiv@b+1
  5230     0A70  0828               	movf	??___fldiv,w
  5231     0A71  00A4               	movwf	___fldiv@b
  5232     0A72                     l2710:
  5233     0A72  3001               	movlw	1
  5234     0A73  07B2               	addwf	___fldiv@new_exp,f
  5235     0A74  1803               	skipnc
  5236     0A75  0AB3               	incf	___fldiv@new_exp+1,f
  5237     0A76  3000               	movlw	0
  5238     0A77  07B3               	addwf	___fldiv@new_exp+1,f
  5239     0A78                     l2712:
  5240     0A78  0833               	movf	___fldiv@new_exp+1,w
  5241     0A79  3A80               	xorlw	128
  5242     0A7A  00FF               	movwf	btemp+1
  5243     0A7B  3080               	movlw	128
  5244     0A7C  027F               	subwf	btemp+1,w
  5245     0A7D  1D03               	skipz
  5246     0A7E  2A81               	goto	u3205
  5247     0A7F  30FF               	movlw	255
  5248     0A80  0232               	subwf	___fldiv@new_exp,w
  5249     0A81                     u3205:
  5250     0A81  1C03               	skipc
  5251     0A82  2A84               	goto	u3201
  5252     0A83  2A85               	goto	u3200
  5253     0A84                     u3201:
  5254     0A84  2A93               	goto	l2716
  5255     0A85                     u3200:
  5256     0A85                     l2714:
  5257     0A85  30FF               	movlw	255
  5258     0A86  1283               	bcf	3,5	;RP0=0, select bank0
  5259     0A87  1303               	bcf	3,6	;RP1=0, select bank0
  5260     0A88  00B2               	movwf	___fldiv@new_exp
  5261     0A89  3000               	movlw	0
  5262     0A8A  00B3               	movwf	___fldiv@new_exp+1
  5263     0A8B  3000               	movlw	0
  5264     0A8C  00A7               	movwf	___fldiv@b+3
  5265     0A8D  3000               	movlw	0
  5266     0A8E  00A6               	movwf	___fldiv@b+2
  5267     0A8F  3000               	movlw	0
  5268     0A90  00A5               	movwf	___fldiv@b+1
  5269     0A91  3000               	movlw	0
  5270     0A92  00A4               	movwf	___fldiv@b
  5271     0A93                     l2716:
  5272     0A93  1283               	bcf	3,5	;RP0=0, select bank0
  5273     0A94  1303               	bcf	3,6	;RP1=0, select bank0
  5274     0A95  0833               	movf	___fldiv@new_exp+1,w
  5275     0A96  3A80               	xorlw	128
  5276     0A97  00FF               	movwf	btemp+1
  5277     0A98  3080               	movlw	128
  5278     0A99  027F               	subwf	btemp+1,w
  5279     0A9A  1D03               	skipz
  5280     0A9B  2A9E               	goto	u3215
  5281     0A9C  3001               	movlw	1
  5282     0A9D  0232               	subwf	___fldiv@new_exp,w
  5283     0A9E                     u3215:
  5284     0A9E  1803               	skipnc
  5285     0A9F  2AA1               	goto	u3211
  5286     0AA0  2AA2               	goto	u3210
  5287     0AA1                     u3211:
  5288     0AA1  2AAF               	goto	l798
  5289     0AA2                     u3210:
  5290     0AA2                     l2718:
  5291     0AA2  1283               	bcf	3,5	;RP0=0, select bank0
  5292     0AA3  1303               	bcf	3,6	;RP1=0, select bank0
  5293     0AA4  01B2               	clrf	___fldiv@new_exp
  5294     0AA5  01B3               	clrf	___fldiv@new_exp+1
  5295     0AA6                     l2720:
  5296     0AA6  3000               	movlw	0
  5297     0AA7  00A7               	movwf	___fldiv@b+3
  5298     0AA8  3000               	movlw	0
  5299     0AA9  00A6               	movwf	___fldiv@b+2
  5300     0AAA  3000               	movlw	0
  5301     0AAB  00A5               	movwf	___fldiv@b+1
  5302     0AAC  3000               	movlw	0
  5303     0AAD  00A4               	movwf	___fldiv@b
  5304     0AAE                     l2722:
  5305     0AAE  01B1               	clrf	___fldiv@sign
  5306     0AAF                     l798:
  5307     0AAF  1283               	bcf	3,5	;RP0=0, select bank0
  5308     0AB0  1303               	bcf	3,6	;RP1=0, select bank0
  5309     0AB1  0832               	movf	___fldiv@new_exp,w
  5310     0AB2  00B8               	movwf	___fldiv@bexp
  5311     0AB3                     l2724:
  5312     0AB3  1C38               	btfss	___fldiv@bexp,0
  5313     0AB4  2AB6               	goto	u3221
  5314     0AB5  2AB7               	goto	u3220
  5315     0AB6                     u3221:
  5316     0AB6  2AB9               	goto	l2728
  5317     0AB7                     u3220:
  5318     0AB7                     l2726:
  5319     0AB7  17A6               	bsf	___fldiv@b+2,7
  5320     0AB8  2ABD               	goto	l2730
  5321     0AB9                     l2728:
  5322     0AB9  307F               	movlw	127
  5323     0ABA  00FF               	movwf	btemp+1
  5324     0ABB  087F               	movf	btemp+1,w
  5325     0ABC  05A6               	andwf	___fldiv@b+2,f
  5326     0ABD                     l2730:
  5327     0ABD  0838               	movf	___fldiv@bexp,w
  5328     0ABE  00A8               	movwf	??___fldiv
  5329     0ABF  1003               	clrc
  5330     0AC0  0C28               	rrf	??___fldiv,w
  5331     0AC1  00A7               	movwf	___fldiv@b+3
  5332     0AC2  295F               	goto	l2634
  5333     0AC3                     l778:
  5334     0AC3  0008               	return
  5335     0AC4                     __end_of___fldiv:
  5336                           
  5337                           	psect	text13
  5338     137C                     __ptext13:	
  5339 ;; *************** function _UART_Write_Text *****************
  5340 ;; Defined at:
  5341 ;;		line 18 in file "uart_lib.c"
  5342 ;; Parameters:    Size  Location     Type
  5343 ;;  text            2    1[BANK0 ] PTR unsigned char 
  5344 ;;		 -> STR_41(5), STR_40(5), STR_37(5), main@combinedText_375(20), 
  5345 ;;		 -> main@uartMessage_371(8), STR_31(5), main@combinedText(20), main@uartMessage(8), 
  5346 ;;		 -> STR_25(5), 
  5347 ;; Auto vars:     Size  Location     Type
  5348 ;;  i               2    6[BANK0 ] int 
  5349 ;; Return value:  Size  Location     Type
  5350 ;;                  1    wreg      void 
  5351 ;; Registers used:
  5352 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5353 ;; Tracked objects:
  5354 ;;		On entry : 0/0
  5355 ;;		On exit  : 0/0
  5356 ;;		Unchanged: 0/0
  5357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5358 ;;      Params:         0       2       0       0       0
  5359 ;;      Locals:         0       2       0       0       0
  5360 ;;      Temps:          0       3       0       0       0
  5361 ;;      Totals:         0       7       0       0       0
  5362 ;;Total ram usage:        7 bytes
  5363 ;; Hardware stack levels used: 1
  5364 ;; Hardware stack levels required when called: 3
  5365 ;; This function calls:
  5366 ;;		_UART_Write
  5367 ;; This function is called by:
  5368 ;;		_main
  5369 ;; This function uses a non-reentrant model
  5370 ;;
  5371                           
  5372     137C                     _UART_Write_Text:	
  5373                           ;psect for function _UART_Write_Text
  5374                           
  5375     137C                     l3760:	
  5376                           ;incstack = 0
  5377                           ; Regs used in _UART_Write_Text: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5378                           
  5379                           
  5380                           ;uart_lib.c: 18: void UART_Write_Text(char *text);uart_lib.c: 19: {;uart_lib.c: 20:   in
      +                          t i;;uart_lib.c: 21:   for(i=0;text[i]!='\0';i++)
  5381     137C  1283               	bcf	3,5	;RP0=0, select bank0
  5382     137D  1303               	bcf	3,6	;RP1=0, select bank0
  5383     137E  01A6               	clrf	UART_Write_Text@i
  5384     137F  01A7               	clrf	UART_Write_Text@i+1
  5385     1380  2BA5               	goto	l3766
  5386     1381                     l3762:
  5387                           
  5388                           ;uart_lib.c: 22:     UART_Write(text[i]);
  5389     1381  0826               	movf	UART_Write_Text@i,w
  5390     1382  0721               	addwf	UART_Write_Text@text,w
  5391     1383  00A4               	movwf	??_UART_Write_Text+1
  5392     1384  0822               	movf	UART_Write_Text@text+1,w
  5393     1385  00A3               	movwf	??_UART_Write_Text
  5394     1386  1803               	skipnc
  5395     1387  0AA3               	incf	??_UART_Write_Text,f
  5396     1388  1FA6               	btfss	UART_Write_Text@i,7
  5397     1389  2B8B               	goto	u4870
  5398     138A  03A3               	decf	??_UART_Write_Text,f
  5399     138B                     u4870:
  5400     138B  1283               	bcf	3,5	;RP0=0, select bank0
  5401     138C  1303               	bcf	3,6	;RP1=0, select bank0
  5402     138D  0823               	movf	??_UART_Write_Text,w
  5403     138E  00A5               	movwf	??_UART_Write_Text+2
  5404     138F  0825               	movf	??_UART_Write_Text+2,w
  5405     1390  00FF               	movwf	btemp+1
  5406     1391  0824               	movf	??_UART_Write_Text+1,w
  5407     1392  0084               	movwf	4
  5408     1393  160A  158A  2000  160A  118A  	fcall	stringtab
  5409     1398  160A  118A  21E4  160A  118A  	fcall	_UART_Write
  5410     139D                     l3764:
  5411     139D  3001               	movlw	1
  5412     139E  1283               	bcf	3,5	;RP0=0, select bank0
  5413     139F  1303               	bcf	3,6	;RP1=0, select bank0
  5414     13A0  07A6               	addwf	UART_Write_Text@i,f
  5415     13A1  1803               	skipnc
  5416     13A2  0AA7               	incf	UART_Write_Text@i+1,f
  5417     13A3  3000               	movlw	0
  5418     13A4  07A7               	addwf	UART_Write_Text@i+1,f
  5419     13A5                     l3766:
  5420     13A5  0826               	movf	UART_Write_Text@i,w
  5421     13A6  0721               	addwf	UART_Write_Text@text,w
  5422     13A7  00A4               	movwf	??_UART_Write_Text+1
  5423     13A8  0822               	movf	UART_Write_Text@text+1,w
  5424     13A9  00A3               	movwf	??_UART_Write_Text
  5425     13AA  1803               	skipnc
  5426     13AB  0AA3               	incf	??_UART_Write_Text,f
  5427     13AC  1FA6               	btfss	UART_Write_Text@i,7
  5428     13AD  2BAF               	goto	u4880
  5429     13AE  03A3               	decf	??_UART_Write_Text,f
  5430     13AF                     u4880:
  5431     13AF  1283               	bcf	3,5	;RP0=0, select bank0
  5432     13B0  1303               	bcf	3,6	;RP1=0, select bank0
  5433     13B1  0823               	movf	??_UART_Write_Text,w
  5434     13B2  00A5               	movwf	??_UART_Write_Text+2
  5435     13B3  0825               	movf	??_UART_Write_Text+2,w
  5436     13B4  00FF               	movwf	btemp+1
  5437     13B5  0824               	movf	??_UART_Write_Text+1,w
  5438     13B6  0084               	movwf	4
  5439     13B7  160A  158A  2000  160A  118A  	fcall	stringtab
  5440     13BC  3A00               	xorlw	0
  5441     13BD  1D03               	skipz
  5442     13BE  2BC0               	goto	u4891
  5443     13BF  2BC1               	goto	u4890
  5444     13C0                     u4891:
  5445     13C0  2B81               	goto	l3762
  5446     13C1                     u4890:
  5447     13C1                     l287:
  5448     13C1  0008               	return
  5449     13C2                     __end_of_UART_Write_Text:
  5450                           
  5451                           	psect	text14
  5452     11E4                     __ptext14:	
  5453 ;; *************** function _UART_Write *****************
  5454 ;; Defined at:
  5455 ;;		line 12 in file "uart_lib.c"
  5456 ;; Parameters:    Size  Location     Type
  5457 ;;  data            1    wreg     unsigned char 
  5458 ;; Auto vars:     Size  Location     Type
  5459 ;;  data            1    0[BANK0 ] unsigned char 
  5460 ;; Return value:  Size  Location     Type
  5461 ;;                  1    wreg      void 
  5462 ;; Registers used:
  5463 ;;		wreg
  5464 ;; Tracked objects:
  5465 ;;		On entry : 0/0
  5466 ;;		On exit  : 0/0
  5467 ;;		Unchanged: 0/0
  5468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5469 ;;      Params:         0       0       0       0       0
  5470 ;;      Locals:         0       1       0       0       0
  5471 ;;      Temps:          0       0       0       0       0
  5472 ;;      Totals:         0       1       0       0       0
  5473 ;;Total ram usage:        1 bytes
  5474 ;; Hardware stack levels used: 1
  5475 ;; Hardware stack levels required when called: 2
  5476 ;; This function calls:
  5477 ;;		Nothing
  5478 ;; This function is called by:
  5479 ;;		_UART_Write_Text
  5480 ;; This function uses a non-reentrant model
  5481 ;;
  5482                           
  5483     11E4                     _UART_Write:	
  5484                           ;psect for function _UART_Write
  5485                           
  5486                           
  5487                           ;incstack = 0
  5488                           ; Regs used in _UART_Write: [wreg]
  5489                           ;UART_Write@data stored from wreg
  5490     11E4  1283               	bcf	3,5	;RP0=0, select bank0
  5491     11E5  1303               	bcf	3,6	;RP1=0, select bank0
  5492     11E6  00A0               	movwf	UART_Write@data
  5493     11E7                     l3546:
  5494     11E7                     l278:	
  5495                           ;uart_lib.c: 12: void UART_Write(char data);uart_lib.c: 13: {;uart_lib.c: 14:   while(!T
      +                          RMT);
  5496                           
  5497     11E7  1683               	bsf	3,5	;RP0=1, select bank1
  5498     11E8  1303               	bcf	3,6	;RP1=0, select bank1
  5499     11E9  1C98               	btfss	24,1	;volatile
  5500     11EA  29EC               	goto	u4511
  5501     11EB  29ED               	goto	u4510
  5502     11EC                     u4511:
  5503     11EC  29E7               	goto	l278
  5504     11ED                     u4510:
  5505     11ED                     l3548:
  5506                           
  5507                           ;uart_lib.c: 15:   TXREG = data;
  5508     11ED  1283               	bcf	3,5	;RP0=0, select bank0
  5509     11EE  1303               	bcf	3,6	;RP1=0, select bank0
  5510     11EF  0820               	movf	UART_Write@data,w
  5511     11F0  0099               	movwf	25	;volatile
  5512     11F1                     l281:
  5513     11F1  0008               	return
  5514     11F2                     __end_of_UART_Write:
  5515                           
  5516                           	psect	text15
  5517     11F2                     __ptext15:	
  5518 ;; *************** function _UART_Initialize *****************
  5519 ;; Defined at:
  5520 ;;		line 4 in file "uart_lib.c"
  5521 ;; Parameters:    Size  Location     Type
  5522 ;;		None
  5523 ;; Auto vars:     Size  Location     Type
  5524 ;;		None
  5525 ;; Return value:  Size  Location     Type
  5526 ;;                  1    wreg      void 
  5527 ;; Registers used:
  5528 ;;		wreg, status,2
  5529 ;; Tracked objects:
  5530 ;;		On entry : 0/0
  5531 ;;		On exit  : 0/0
  5532 ;;		Unchanged: 0/0
  5533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5534 ;;      Params:         0       0       0       0       0
  5535 ;;      Locals:         0       0       0       0       0
  5536 ;;      Temps:          0       0       0       0       0
  5537 ;;      Totals:         0       0       0       0       0
  5538 ;;Total ram usage:        0 bytes
  5539 ;; Hardware stack levels used: 1
  5540 ;; Hardware stack levels required when called: 2
  5541 ;; This function calls:
  5542 ;;		Nothing
  5543 ;; This function is called by:
  5544 ;;		_main
  5545 ;; This function uses a non-reentrant model
  5546 ;;
  5547                           
  5548     11F2                     _UART_Initialize:	
  5549                           ;psect for function _UART_Initialize
  5550                           
  5551     11F2                     l2418:	
  5552                           ;incstack = 0
  5553                           ; Regs used in _UART_Initialize: [wreg+status,2]
  5554                           
  5555                           
  5556                           ;uart_lib.c: 6:     TXSTA=0b00100100;
  5557     11F2  3024               	movlw	36
  5558     11F3  1683               	bsf	3,5	;RP0=1, select bank1
  5559     11F4  1303               	bcf	3,6	;RP1=0, select bank1
  5560     11F5  0098               	movwf	24	;volatile
  5561                           
  5562                           ;uart_lib.c: 7:     RCSTA=0b10010000;
  5563     11F6  3090               	movlw	144
  5564     11F7  1283               	bcf	3,5	;RP0=0, select bank0
  5565     11F8  1303               	bcf	3,6	;RP1=0, select bank0
  5566     11F9  0098               	movwf	24	;volatile
  5567                           
  5568                           ;uart_lib.c: 8:     SPBRG=12;
  5569     11FA  300C               	movlw	12
  5570     11FB  1683               	bsf	3,5	;RP0=1, select bank1
  5571     11FC  1303               	bcf	3,6	;RP1=0, select bank1
  5572     11FD  0099               	movwf	25	;volatile
  5573     11FE                     l2420:
  5574                           
  5575                           ;uart_lib.c: 9:     TXREG=0x00;
  5576     11FE  1283               	bcf	3,5	;RP0=0, select bank0
  5577     11FF  1303               	bcf	3,6	;RP1=0, select bank0
  5578     1200  0199               	clrf	25	;volatile
  5579     1201                     l275:
  5580     1201  0008               	return
  5581     1202                     __end_of_UART_Initialize:
  5582                           
  5583                           	psect	text16
  5584     1336                     __ptext16:	
  5585 ;; *************** function _Lcd_Write_String *****************
  5586 ;; Defined at:
  5587 ;;		line 96 in file "./lcd.h"
  5588 ;; Parameters:    Size  Location     Type
  5589 ;;  a               2    5[BANK0 ] PTR unsigned char 
  5590 ;;		 -> STR_43(24), STR_42(24), STR_39(27), STR_38(26), 
  5591 ;;		 -> STR_36(13), STR_34(14), STR_32(10), STR_30(9), 
  5592 ;;		 -> STR_28(15), STR_26(10), STR_24(9), main@rpmString(5), 
  5593 ;;		 -> STR_22(5), main@adcString1(4), STR_20(10), STR_19(3), 
  5594 ;;		 -> main@lcdText(9), STR_17(14), STR_16(19), STR_15(14), 
  5595 ;;		 -> STR_14(19), STR_13(14), STR_12(19), STR_11(14), 
  5596 ;;		 -> STR_10(19), STR_9(14), STR_8(19), STR_7(14), 
  5597 ;;		 -> STR_6(19), STR_5(21), STR_4(20), STR_3(3), 
  5598 ;;		 -> STR_2(15), STR_1(16), 
  5599 ;; Auto vars:     Size  Location     Type
  5600 ;;  i               2   10[BANK0 ] int 
  5601 ;; Return value:  Size  Location     Type
  5602 ;;                  1    wreg      void 
  5603 ;; Registers used:
  5604 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5605 ;; Tracked objects:
  5606 ;;		On entry : 0/0
  5607 ;;		On exit  : 0/0
  5608 ;;		Unchanged: 0/0
  5609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5610 ;;      Params:         0       2       0       0       0
  5611 ;;      Locals:         0       2       0       0       0
  5612 ;;      Temps:          0       3       0       0       0
  5613 ;;      Totals:         0       7       0       0       0
  5614 ;;Total ram usage:        7 bytes
  5615 ;; Hardware stack levels used: 1
  5616 ;; Hardware stack levels required when called: 4
  5617 ;; This function calls:
  5618 ;;		_Lcd_Write_Char
  5619 ;; This function is called by:
  5620 ;;		_main
  5621 ;; This function uses a non-reentrant model
  5622 ;;
  5623                           
  5624     1336                     _Lcd_Write_String:	
  5625                           ;psect for function _Lcd_Write_String
  5626                           
  5627     1336                     l3622:	
  5628                           ;incstack = 0
  5629                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5630                           
  5631                           
  5632                           ;./lcd.h: 96: void Lcd_Write_String(char *a);./lcd.h: 97: {;./lcd.h: 98:  int i;;./lcd.h
      +                          : 99:  for(i=0;a[i]!='\0';i++)
  5633     1336  1283               	bcf	3,5	;RP0=0, select bank0
  5634     1337  1303               	bcf	3,6	;RP1=0, select bank0
  5635     1338  01AA               	clrf	Lcd_Write_String@i
  5636     1339  01AB               	clrf	Lcd_Write_String@i+1
  5637     133A  2B5F               	goto	l3628
  5638     133B                     l3624:
  5639                           
  5640                           ;./lcd.h: 100:     Lcd_Write_Char(a[i]);
  5641     133B  082A               	movf	Lcd_Write_String@i,w
  5642     133C  0725               	addwf	Lcd_Write_String@a,w
  5643     133D  00A8               	movwf	??_Lcd_Write_String+1
  5644     133E  0826               	movf	Lcd_Write_String@a+1,w
  5645     133F  00A7               	movwf	??_Lcd_Write_String
  5646     1340  1803               	skipnc
  5647     1341  0AA7               	incf	??_Lcd_Write_String,f
  5648     1342  1FAA               	btfss	Lcd_Write_String@i,7
  5649     1343  2B45               	goto	u4650
  5650     1344  03A7               	decf	??_Lcd_Write_String,f
  5651     1345                     u4650:
  5652     1345  1283               	bcf	3,5	;RP0=0, select bank0
  5653     1346  1303               	bcf	3,6	;RP1=0, select bank0
  5654     1347  0827               	movf	??_Lcd_Write_String,w
  5655     1348  00A9               	movwf	??_Lcd_Write_String+2
  5656     1349  0829               	movf	??_Lcd_Write_String+2,w
  5657     134A  00FF               	movwf	btemp+1
  5658     134B  0828               	movf	??_Lcd_Write_String+1,w
  5659     134C  0084               	movwf	4
  5660     134D  160A  158A  2000  160A  118A  	fcall	stringtab
  5661     1352  120A  158A  2002  160A  118A  	fcall	_Lcd_Write_Char
  5662     1357                     l3626:
  5663     1357  3001               	movlw	1
  5664     1358  1283               	bcf	3,5	;RP0=0, select bank0
  5665     1359  1303               	bcf	3,6	;RP1=0, select bank0
  5666     135A  07AA               	addwf	Lcd_Write_String@i,f
  5667     135B  1803               	skipnc
  5668     135C  0AAB               	incf	Lcd_Write_String@i+1,f
  5669     135D  3000               	movlw	0
  5670     135E  07AB               	addwf	Lcd_Write_String@i+1,f
  5671     135F                     l3628:
  5672     135F  082A               	movf	Lcd_Write_String@i,w
  5673     1360  0725               	addwf	Lcd_Write_String@a,w
  5674     1361  00A8               	movwf	??_Lcd_Write_String+1
  5675     1362  0826               	movf	Lcd_Write_String@a+1,w
  5676     1363  00A7               	movwf	??_Lcd_Write_String
  5677     1364  1803               	skipnc
  5678     1365  0AA7               	incf	??_Lcd_Write_String,f
  5679     1366  1FAA               	btfss	Lcd_Write_String@i,7
  5680     1367  2B69               	goto	u4660
  5681     1368  03A7               	decf	??_Lcd_Write_String,f
  5682     1369                     u4660:
  5683     1369  1283               	bcf	3,5	;RP0=0, select bank0
  5684     136A  1303               	bcf	3,6	;RP1=0, select bank0
  5685     136B  0827               	movf	??_Lcd_Write_String,w
  5686     136C  00A9               	movwf	??_Lcd_Write_String+2
  5687     136D  0829               	movf	??_Lcd_Write_String+2,w
  5688     136E  00FF               	movwf	btemp+1
  5689     136F  0828               	movf	??_Lcd_Write_String+1,w
  5690     1370  0084               	movwf	4
  5691     1371  160A  158A  2000  160A  118A  	fcall	stringtab
  5692     1376  3A00               	xorlw	0
  5693     1377  1D03               	skipz
  5694     1378  2B7A               	goto	u4671
  5695     1379  2B7B               	goto	u4670
  5696     137A                     u4671:
  5697     137A  2B3B               	goto	l3624
  5698     137B                     u4670:
  5699     137B                     l145:
  5700     137B  0008               	return
  5701     137C                     __end_of_Lcd_Write_String:
  5702                           
  5703                           	psect	text17
  5704     0802                     __ptext17:	
  5705 ;; *************** function _Lcd_Write_Char *****************
  5706 ;; Defined at:
  5707 ;;		line 80 in file "./lcd.h"
  5708 ;; Parameters:    Size  Location     Type
  5709 ;;  a               1    wreg     unsigned char 
  5710 ;; Auto vars:     Size  Location     Type
  5711 ;;  a               1    4[BANK0 ] unsigned char 
  5712 ;;  y               1    3[BANK0 ] unsigned char 
  5713 ;;  temp            1    2[BANK0 ] unsigned char 
  5714 ;; Return value:  Size  Location     Type
  5715 ;;                  1    wreg      void 
  5716 ;; Registers used:
  5717 ;;		wreg, status,2, status,0, pclath, cstack
  5718 ;; Tracked objects:
  5719 ;;		On entry : 0/0
  5720 ;;		On exit  : 0/0
  5721 ;;		Unchanged: 0/0
  5722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5723 ;;      Params:         0       0       0       0       0
  5724 ;;      Locals:         0       3       0       0       0
  5725 ;;      Temps:          0       1       0       0       0
  5726 ;;      Totals:         0       4       0       0       0
  5727 ;;Total ram usage:        4 bytes
  5728 ;; Hardware stack levels used: 1
  5729 ;; Hardware stack levels required when called: 3
  5730 ;; This function calls:
  5731 ;;		_Lcd_Port
  5732 ;; This function is called by:
  5733 ;;		_Lcd_Write_String
  5734 ;; This function uses a non-reentrant model
  5735 ;;
  5736                           
  5737     0802                     _Lcd_Write_Char:	
  5738                           ;psect for function _Lcd_Write_Char
  5739                           
  5740                           
  5741                           ;incstack = 0
  5742                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  5743                           ;Lcd_Write_Char@a stored from wreg
  5744     0802  1283               	bcf	3,5	;RP0=0, select bank0
  5745     0803  1303               	bcf	3,6	;RP1=0, select bank0
  5746     0804  00A4               	movwf	Lcd_Write_Char@a
  5747     0805                     l3526:
  5748                           
  5749                           ;./lcd.h: 80: void Lcd_Write_Char(char a);./lcd.h: 81: {;./lcd.h: 82:    char temp,y;;./
      +                          lcd.h: 83:    temp = a&0x0F;
  5750     0805  0824               	movf	Lcd_Write_Char@a,w
  5751     0806  390F               	andlw	15
  5752     0807  00A2               	movwf	Lcd_Write_Char@temp
  5753                           
  5754                           ;./lcd.h: 84:    y = a&0xF0;
  5755     0808  0824               	movf	Lcd_Write_Char@a,w
  5756     0809  39F0               	andlw	240
  5757     080A  00A3               	movwf	Lcd_Write_Char@y
  5758     080B                     l3528:
  5759                           
  5760                           ;./lcd.h: 85:    RB5 = 1;
  5761     080B  1686               	bsf	6,5	;volatile
  5762     080C                     l3530:
  5763                           
  5764                           ;./lcd.h: 86:    Lcd_Port(y>>4);
  5765     080C  0823               	movf	Lcd_Write_Char@y,w
  5766     080D  00A1               	movwf	??_Lcd_Write_Char
  5767     080E  3004               	movlw	4
  5768     080F                     u4505:
  5769     080F  1003               	clrc
  5770     0810  0CA1               	rrf	??_Lcd_Write_Char,f
  5771     0811  3EFF               	addlw	-1
  5772     0812  1D03               	skipz
  5773     0813  280F               	goto	u4505
  5774     0814  0821               	movf	??_Lcd_Write_Char,w
  5775     0815  160A  118A  2263  120A  158A  	fcall	_Lcd_Port
  5776     081A                     l3532:
  5777                           
  5778                           ;./lcd.h: 87:    RB4 = 1;
  5779     081A  1283               	bcf	3,5	;RP0=0, select bank0
  5780     081B  1303               	bcf	3,6	;RP1=0, select bank0
  5781     081C  1606               	bsf	6,4	;volatile
  5782     081D                     l3534:
  5783                           
  5784                           ;./lcd.h: 88:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  5785     081D  300C               	movlw	12
  5786     081E  1283               	bcf	3,5	;RP0=0, select bank0
  5787     081F  1303               	bcf	3,6	;RP1=0, select bank0
  5788     0820  00A1               	movwf	??_Lcd_Write_Char
  5789     0821                     u6127:
  5790     0821  0BA1               	decfsz	??_Lcd_Write_Char,f
  5791     0822  2821               	goto	u6127
  5792     0823  0000               	nop
  5793     0824                     l3536:
  5794                           
  5795                           ;./lcd.h: 89:    RB4 = 0;
  5796     0824  1283               	bcf	3,5	;RP0=0, select bank0
  5797     0825  1303               	bcf	3,6	;RP1=0, select bank0
  5798     0826  1206               	bcf	6,4	;volatile
  5799     0827                     l3538:
  5800                           
  5801                           ;./lcd.h: 90:    Lcd_Port(temp);
  5802     0827  0822               	movf	Lcd_Write_Char@temp,w
  5803     0828  160A  118A  2263  120A  158A  	fcall	_Lcd_Port
  5804     082D                     l3540:
  5805                           
  5806                           ;./lcd.h: 91:    RB4 = 1;
  5807     082D  1283               	bcf	3,5	;RP0=0, select bank0
  5808     082E  1303               	bcf	3,6	;RP1=0, select bank0
  5809     082F  1606               	bsf	6,4	;volatile
  5810     0830                     l3542:
  5811                           
  5812                           ;./lcd.h: 92:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  5813     0830  300C               	movlw	12
  5814     0831  1283               	bcf	3,5	;RP0=0, select bank0
  5815     0832  1303               	bcf	3,6	;RP1=0, select bank0
  5816     0833  00A1               	movwf	??_Lcd_Write_Char
  5817     0834                     u6137:
  5818     0834  0BA1               	decfsz	??_Lcd_Write_Char,f
  5819     0835  2834               	goto	u6137
  5820     0836  0000               	nop
  5821     0837                     l3544:
  5822                           
  5823                           ;./lcd.h: 93:    RB4 = 0;
  5824     0837  1283               	bcf	3,5	;RP0=0, select bank0
  5825     0838  1303               	bcf	3,6	;RP1=0, select bank0
  5826     0839  1206               	bcf	6,4	;volatile
  5827     083A                     l139:
  5828     083A  0008               	return
  5829     083B                     __end_of_Lcd_Write_Char:
  5830                           
  5831                           	psect	text18
  5832     1450                     __ptext18:	
  5833 ;; *************** function _Lcd_Set_Cursor *****************
  5834 ;; Defined at:
  5835 ;;		line 40 in file "./lcd.h"
  5836 ;; Parameters:    Size  Location     Type
  5837 ;;  a               1    wreg     unsigned char 
  5838 ;;  b               1    4[BANK0 ] unsigned char 
  5839 ;; Auto vars:     Size  Location     Type
  5840 ;;  a               1    6[BANK0 ] unsigned char 
  5841 ;;  temp            1    9[BANK0 ] unsigned char 
  5842 ;;  y               1    8[BANK0 ] unsigned char 
  5843 ;;  z               1    7[BANK0 ] unsigned char 
  5844 ;; Return value:  Size  Location     Type
  5845 ;;                  1    wreg      void 
  5846 ;; Registers used:
  5847 ;;		wreg, status,2, status,0, pclath, cstack
  5848 ;; Tracked objects:
  5849 ;;		On entry : 0/0
  5850 ;;		On exit  : 0/0
  5851 ;;		Unchanged: 0/0
  5852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5853 ;;      Params:         0       1       0       0       0
  5854 ;;      Locals:         0       4       0       0       0
  5855 ;;      Temps:          0       1       0       0       0
  5856 ;;      Totals:         0       6       0       0       0
  5857 ;;Total ram usage:        6 bytes
  5858 ;; Hardware stack levels used: 1
  5859 ;; Hardware stack levels required when called: 4
  5860 ;; This function calls:
  5861 ;;		_Lcd_Cmd
  5862 ;; This function is called by:
  5863 ;;		_main
  5864 ;; This function uses a non-reentrant model
  5865 ;;
  5866                           
  5867     1450                     _Lcd_Set_Cursor:	
  5868                           ;psect for function _Lcd_Set_Cursor
  5869                           
  5870                           
  5871                           ;incstack = 0
  5872                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  5873                           ;Lcd_Set_Cursor@a stored from wreg
  5874     1450  1283               	bcf	3,5	;RP0=0, select bank0
  5875     1451  1303               	bcf	3,6	;RP1=0, select bank0
  5876     1452  00A6               	movwf	Lcd_Set_Cursor@a
  5877     1453                     l3592:
  5878                           
  5879                           ;./lcd.h: 40: void Lcd_Set_Cursor(char a, char b);./lcd.h: 41: {;./lcd.h: 42:  char temp
      +                          ,z,y;;./lcd.h: 43:  if(a == 1)
  5880     1453  0326               	decf	Lcd_Set_Cursor@a,w
  5881     1454  1D03               	btfss	3,2
  5882     1455  2C57               	goto	u4611
  5883     1456  2C58               	goto	u4610
  5884     1457                     u4611:
  5885     1457  2C77               	goto	l3602
  5886     1458                     u4610:
  5887     1458                     l3594:
  5888                           
  5889                           ;./lcd.h: 44:  {;./lcd.h: 45:    temp = 0x80 + b - 1;
  5890     1458  0824               	movf	Lcd_Set_Cursor@b,w
  5891     1459  3E7F               	addlw	127
  5892     145A  00A9               	movwf	Lcd_Set_Cursor@temp
  5893                           
  5894                           ;./lcd.h: 46:   z = temp>>4;
  5895     145B  0829               	movf	Lcd_Set_Cursor@temp,w
  5896     145C  00A5               	movwf	??_Lcd_Set_Cursor
  5897     145D  3004               	movlw	4
  5898     145E                     u4625:
  5899     145E  1003               	clrc
  5900     145F  0CA5               	rrf	??_Lcd_Set_Cursor,f
  5901     1460  3EFF               	addlw	-1
  5902     1461  1D03               	skipz
  5903     1462  2C5E               	goto	u4625
  5904     1463  0825               	movf	??_Lcd_Set_Cursor,w
  5905     1464  00A7               	movwf	Lcd_Set_Cursor@z
  5906     1465                     l3596:
  5907                           
  5908                           ;./lcd.h: 47:   y = temp & 0x0F;
  5909     1465  0829               	movf	Lcd_Set_Cursor@temp,w
  5910     1466  390F               	andlw	15
  5911     1467  00A8               	movwf	Lcd_Set_Cursor@y
  5912     1468                     l3598:
  5913                           
  5914                           ;./lcd.h: 48:   Lcd_Cmd(z);
  5915     1468  0827               	movf	Lcd_Set_Cursor@z,w
  5916     1469  160A  118A  222B  160A  118A  	fcall	_Lcd_Cmd
  5917     146E                     l3600:
  5918                           
  5919                           ;./lcd.h: 49:   Lcd_Cmd(y);
  5920     146E  1283               	bcf	3,5	;RP0=0, select bank0
  5921     146F  1303               	bcf	3,6	;RP1=0, select bank0
  5922     1470  0828               	movf	Lcd_Set_Cursor@y,w
  5923     1471  160A  118A  222B  160A  118A  	fcall	_Lcd_Cmd
  5924                           
  5925                           ;./lcd.h: 50:  }
  5926     1476  2C9B               	goto	l133
  5927     1477                     l3602:
  5928     1477  3002               	movlw	2
  5929     1478  0626               	xorwf	Lcd_Set_Cursor@a,w
  5930     1479  1D03               	btfss	3,2
  5931     147A  2C7C               	goto	u4631
  5932     147B  2C7D               	goto	u4630
  5933     147C                     u4631:
  5934     147C  2C9B               	goto	l133
  5935     147D                     u4630:
  5936     147D                     l3604:
  5937                           
  5938                           ;./lcd.h: 52:  {;./lcd.h: 53:   temp = 0xC0 + b - 1;
  5939     147D  0824               	movf	Lcd_Set_Cursor@b,w
  5940     147E  3EBF               	addlw	191
  5941     147F  00A9               	movwf	Lcd_Set_Cursor@temp
  5942                           
  5943                           ;./lcd.h: 54:   z = temp>>4;
  5944     1480  0829               	movf	Lcd_Set_Cursor@temp,w
  5945     1481  00A5               	movwf	??_Lcd_Set_Cursor
  5946     1482  3004               	movlw	4
  5947     1483                     u4645:
  5948     1483  1003               	clrc
  5949     1484  0CA5               	rrf	??_Lcd_Set_Cursor,f
  5950     1485  3EFF               	addlw	-1
  5951     1486  1D03               	skipz
  5952     1487  2C83               	goto	u4645
  5953     1488  0825               	movf	??_Lcd_Set_Cursor,w
  5954     1489  00A7               	movwf	Lcd_Set_Cursor@z
  5955     148A                     l3606:
  5956                           
  5957                           ;./lcd.h: 55:   y = temp & 0x0F;
  5958     148A  0829               	movf	Lcd_Set_Cursor@temp,w
  5959     148B  390F               	andlw	15
  5960     148C  00A8               	movwf	Lcd_Set_Cursor@y
  5961     148D                     l3608:
  5962                           
  5963                           ;./lcd.h: 56:   Lcd_Cmd(z);
  5964     148D  0827               	movf	Lcd_Set_Cursor@z,w
  5965     148E  160A  118A  222B  160A  118A  	fcall	_Lcd_Cmd
  5966     1493                     l3610:
  5967                           
  5968                           ;./lcd.h: 57:   Lcd_Cmd(y);
  5969     1493  1283               	bcf	3,5	;RP0=0, select bank0
  5970     1494  1303               	bcf	3,6	;RP1=0, select bank0
  5971     1495  0828               	movf	Lcd_Set_Cursor@y,w
  5972     1496  160A  118A  222B  160A  118A  	fcall	_Lcd_Cmd
  5973     149B                     l133:
  5974     149B  0008               	return
  5975     149C                     __end_of_Lcd_Set_Cursor:
  5976                           
  5977                           	psect	text19
  5978     149C                     __ptext19:	
  5979 ;; *************** function _Lcd_Init *****************
  5980 ;; Defined at:
  5981 ;;		line 61 in file "./lcd.h"
  5982 ;; Parameters:    Size  Location     Type
  5983 ;;		None
  5984 ;; Auto vars:     Size  Location     Type
  5985 ;;		None
  5986 ;; Return value:  Size  Location     Type
  5987 ;;                  1    wreg      void 
  5988 ;; Registers used:
  5989 ;;		wreg, status,2, status,0, pclath, cstack
  5990 ;; Tracked objects:
  5991 ;;		On entry : 0/0
  5992 ;;		On exit  : 0/0
  5993 ;;		Unchanged: 0/0
  5994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5995 ;;      Params:         0       0       0       0       0
  5996 ;;      Locals:         0       0       0       0       0
  5997 ;;      Temps:          0       2       0       0       0
  5998 ;;      Totals:         0       2       0       0       0
  5999 ;;Total ram usage:        2 bytes
  6000 ;; Hardware stack levels used: 1
  6001 ;; Hardware stack levels required when called: 4
  6002 ;; This function calls:
  6003 ;;		_Lcd_Cmd
  6004 ;;		_Lcd_Port
  6005 ;; This function is called by:
  6006 ;;		_main
  6007 ;; This function uses a non-reentrant model
  6008 ;;
  6009                           
  6010     149C                     _Lcd_Init:	
  6011                           ;psect for function _Lcd_Init
  6012                           
  6013     149C                     l3612:	
  6014                           ;incstack = 0
  6015                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  6016                           
  6017                           
  6018                           ;./lcd.h: 63:   Lcd_Port(0x00);
  6019     149C  3000               	movlw	0
  6020     149D  160A  118A  2263  160A  118A  	fcall	_Lcd_Port
  6021     14A2                     l3614:
  6022                           
  6023                           ;./lcd.h: 64:    _delay((unsigned long)((20)*(4000000/4000.0)));
  6024     14A2  301A               	movlw	26
  6025     14A3  1283               	bcf	3,5	;RP0=0, select bank0
  6026     14A4  1303               	bcf	3,6	;RP1=0, select bank0
  6027     14A5  00A5               	movwf	??_Lcd_Init+1
  6028     14A6  30F7               	movlw	247
  6029     14A7  00A4               	movwf	??_Lcd_Init
  6030     14A8                     u6147:
  6031     14A8  0BA4               	decfsz	??_Lcd_Init,f
  6032     14A9  2CA8               	goto	u6147
  6033     14AA  0BA5               	decfsz	??_Lcd_Init+1,f
  6034     14AB  2CA8               	goto	u6147
  6035     14AC  2CAD               	nop2
  6036     14AD                     l3616:
  6037                           
  6038                           ;./lcd.h: 65:   Lcd_Cmd(0x03);
  6039     14AD  3003               	movlw	3
  6040     14AE  160A  118A  222B  160A  118A  	fcall	_Lcd_Cmd
  6041                           
  6042                           ;./lcd.h: 66:  _delay((unsigned long)((5)*(4000000/4000.0)));
  6043     14B3  3007               	movlw	7
  6044     14B4  1283               	bcf	3,5	;RP0=0, select bank0
  6045     14B5  1303               	bcf	3,6	;RP1=0, select bank0
  6046     14B6  00A5               	movwf	??_Lcd_Init+1
  6047     14B7  307C               	movlw	124
  6048     14B8  00A4               	movwf	??_Lcd_Init
  6049     14B9                     u6157:
  6050     14B9  0BA4               	decfsz	??_Lcd_Init,f
  6051     14BA  2CB9               	goto	u6157
  6052     14BB  0BA5               	decfsz	??_Lcd_Init+1,f
  6053     14BC  2CB9               	goto	u6157
  6054     14BD  0000               	nop
  6055     14BE                     l3618:
  6056                           
  6057                           ;./lcd.h: 67:   Lcd_Cmd(0x03);
  6058     14BE  3003               	movlw	3
  6059     14BF  160A  118A  222B  160A  118A  	fcall	_Lcd_Cmd
  6060     14C4                     l3620:
  6061                           
  6062                           ;./lcd.h: 68:  _delay((unsigned long)((11)*(4000000/4000.0)));
  6063     14C4  300F               	movlw	15
  6064     14C5  1283               	bcf	3,5	;RP0=0, select bank0
  6065     14C6  1303               	bcf	3,6	;RP1=0, select bank0
  6066     14C7  00A5               	movwf	??_Lcd_Init+1
  6067     14C8  3047               	movlw	71
  6068     14C9  00A4               	movwf	??_Lcd_Init
  6069     14CA                     u6167:
  6070     14CA  0BA4               	decfsz	??_Lcd_Init,f
  6071     14CB  2CCA               	goto	u6167
  6072     14CC  0BA5               	decfsz	??_Lcd_Init+1,f
  6073     14CD  2CCA               	goto	u6167
  6074                           
  6075                           ;./lcd.h: 69:   Lcd_Cmd(0x03);
  6076     14CE  3003               	movlw	3
  6077     14CF  160A  118A  222B  160A  118A  	fcall	_Lcd_Cmd
  6078                           
  6079                           ;./lcd.h: 71:   Lcd_Cmd(0x02);
  6080     14D4  3002               	movlw	2
  6081     14D5  160A  118A  222B  160A  118A  	fcall	_Lcd_Cmd
  6082                           
  6083                           ;./lcd.h: 72:   Lcd_Cmd(0x02);
  6084     14DA  3002               	movlw	2
  6085     14DB  160A  118A  222B  160A  118A  	fcall	_Lcd_Cmd
  6086                           
  6087                           ;./lcd.h: 73:   Lcd_Cmd(0x08);
  6088     14E0  3008               	movlw	8
  6089     14E1  160A  118A  222B  160A  118A  	fcall	_Lcd_Cmd
  6090                           
  6091                           ;./lcd.h: 74:   Lcd_Cmd(0x00);
  6092     14E6  3000               	movlw	0
  6093     14E7  160A  118A  222B  160A  118A  	fcall	_Lcd_Cmd
  6094                           
  6095                           ;./lcd.h: 75:   Lcd_Cmd(0x0C);
  6096     14EC  300C               	movlw	12
  6097     14ED  160A  118A  222B  160A  118A  	fcall	_Lcd_Cmd
  6098                           
  6099                           ;./lcd.h: 76:   Lcd_Cmd(0x00);
  6100     14F2  3000               	movlw	0
  6101     14F3  160A  118A  222B  160A  118A  	fcall	_Lcd_Cmd
  6102                           
  6103                           ;./lcd.h: 77:   Lcd_Cmd(0x06);
  6104     14F8  3006               	movlw	6
  6105     14F9  160A  118A  222B  160A  118A  	fcall	_Lcd_Cmd
  6106     14FE                     l136:
  6107     14FE  0008               	return
  6108     14FF                     __end_of_Lcd_Init:
  6109                           
  6110                           	psect	text20
  6111     11D7                     __ptext20:	
  6112 ;; *************** function _Lcd_Clear *****************
  6113 ;; Defined at:
  6114 ;;		line 34 in file "./lcd.h"
  6115 ;; Parameters:    Size  Location     Type
  6116 ;;		None
  6117 ;; Auto vars:     Size  Location     Type
  6118 ;;		None
  6119 ;; Return value:  Size  Location     Type
  6120 ;;                  1    wreg      void 
  6121 ;; Registers used:
  6122 ;;		wreg, status,2, status,0, pclath, cstack
  6123 ;; Tracked objects:
  6124 ;;		On entry : 0/0
  6125 ;;		On exit  : 0/0
  6126 ;;		Unchanged: 0/0
  6127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6128 ;;      Params:         0       0       0       0       0
  6129 ;;      Locals:         0       0       0       0       0
  6130 ;;      Temps:          0       0       0       0       0
  6131 ;;      Totals:         0       0       0       0       0
  6132 ;;Total ram usage:        0 bytes
  6133 ;; Hardware stack levels used: 1
  6134 ;; Hardware stack levels required when called: 4
  6135 ;; This function calls:
  6136 ;;		_Lcd_Cmd
  6137 ;; This function is called by:
  6138 ;;		_main
  6139 ;; This function uses a non-reentrant model
  6140 ;;
  6141                           
  6142     11D7                     _Lcd_Clear:	
  6143                           ;psect for function _Lcd_Clear
  6144                           
  6145     11D7                     l3590:	
  6146                           ;incstack = 0
  6147                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  6148                           
  6149                           
  6150                           ;./lcd.h: 36:  Lcd_Cmd(0);
  6151     11D7  3000               	movlw	0
  6152     11D8  160A  118A  222B  160A  118A  	fcall	_Lcd_Cmd
  6153                           
  6154                           ;./lcd.h: 37:  Lcd_Cmd(1);
  6155     11DD  3001               	movlw	1
  6156     11DE  160A  118A  222B  160A  118A  	fcall	_Lcd_Cmd
  6157     11E3                     l127:
  6158     11E3  0008               	return
  6159     11E4                     __end_of_Lcd_Clear:
  6160                           
  6161                           	psect	text21
  6162     122B                     __ptext21:	
  6163 ;; *************** function _Lcd_Cmd *****************
  6164 ;; Defined at:
  6165 ;;		line 25 in file "./lcd.h"
  6166 ;; Parameters:    Size  Location     Type
  6167 ;;  a               1    wreg     unsigned char 
  6168 ;; Auto vars:     Size  Location     Type
  6169 ;;  a               1    3[BANK0 ] unsigned char 
  6170 ;; Return value:  Size  Location     Type
  6171 ;;                  1    wreg      void 
  6172 ;; Registers used:
  6173 ;;		wreg, status,2, status,0, pclath, cstack
  6174 ;; Tracked objects:
  6175 ;;		On entry : 0/0
  6176 ;;		On exit  : 0/0
  6177 ;;		Unchanged: 0/0
  6178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6179 ;;      Params:         0       0       0       0       0
  6180 ;;      Locals:         0       1       0       0       0
  6181 ;;      Temps:          0       2       0       0       0
  6182 ;;      Totals:         0       3       0       0       0
  6183 ;;Total ram usage:        3 bytes
  6184 ;; Hardware stack levels used: 1
  6185 ;; Hardware stack levels required when called: 3
  6186 ;; This function calls:
  6187 ;;		_Lcd_Port
  6188 ;; This function is called by:
  6189 ;;		_Lcd_Clear
  6190 ;;		_Lcd_Set_Cursor
  6191 ;;		_Lcd_Init
  6192 ;; This function uses a non-reentrant model
  6193 ;;
  6194                           
  6195     122B                     _Lcd_Cmd:	
  6196                           ;psect for function _Lcd_Cmd
  6197                           
  6198                           
  6199                           ;incstack = 0
  6200                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  6201                           ;Lcd_Cmd@a stored from wreg
  6202     122B  1283               	bcf	3,5	;RP0=0, select bank0
  6203     122C  1303               	bcf	3,6	;RP1=0, select bank0
  6204     122D  00A3               	movwf	Lcd_Cmd@a
  6205     122E                     l3516:
  6206                           
  6207                           ;./lcd.h: 25: void Lcd_Cmd(char a);./lcd.h: 26: {;./lcd.h: 27:  RB5 = 0;
  6208     122E  1286               	bcf	6,5	;volatile
  6209     122F                     l3518:
  6210                           
  6211                           ;./lcd.h: 28:  Lcd_Port(a);
  6212     122F  0823               	movf	Lcd_Cmd@a,w
  6213     1230  160A  118A  2263  160A  118A  	fcall	_Lcd_Port
  6214     1235                     l3520:
  6215                           
  6216                           ;./lcd.h: 29:  RB4 = 1;
  6217     1235  1283               	bcf	3,5	;RP0=0, select bank0
  6218     1236  1303               	bcf	3,6	;RP1=0, select bank0
  6219     1237  1606               	bsf	6,4	;volatile
  6220     1238                     l3522:
  6221                           
  6222                           ;./lcd.h: 30:         _delay((unsigned long)((4)*(4000000/4000.0)));
  6223     1238  3006               	movlw	6
  6224     1239  1283               	bcf	3,5	;RP0=0, select bank0
  6225     123A  1303               	bcf	3,6	;RP1=0, select bank0
  6226     123B  00A2               	movwf	??_Lcd_Cmd+1
  6227     123C  302F               	movlw	47
  6228     123D  00A1               	movwf	??_Lcd_Cmd
  6229     123E                     u6177:
  6230     123E  0BA1               	decfsz	??_Lcd_Cmd,f
  6231     123F  2A3E               	goto	u6177
  6232     1240  0BA2               	decfsz	??_Lcd_Cmd+1,f
  6233     1241  2A3E               	goto	u6177
  6234     1242  2A43               	nop2
  6235     1243                     l3524:
  6236                           
  6237                           ;./lcd.h: 31:         RB4 = 0;
  6238     1243  1283               	bcf	3,5	;RP0=0, select bank0
  6239     1244  1303               	bcf	3,6	;RP1=0, select bank0
  6240     1245  1206               	bcf	6,4	;volatile
  6241     1246                     l124:
  6242     1246  0008               	return
  6243     1247                     __end_of_Lcd_Cmd:
  6244                           
  6245                           	psect	text22
  6246     1263                     __ptext22:	
  6247 ;; *************** function _Lcd_Port *****************
  6248 ;; Defined at:
  6249 ;;		line 3 in file "./lcd.h"
  6250 ;; Parameters:    Size  Location     Type
  6251 ;;  a               1    wreg     unsigned char 
  6252 ;; Auto vars:     Size  Location     Type
  6253 ;;  a               1    0[BANK0 ] unsigned char 
  6254 ;; Return value:  Size  Location     Type
  6255 ;;                  1    wreg      void 
  6256 ;; Registers used:
  6257 ;;		wreg
  6258 ;; Tracked objects:
  6259 ;;		On entry : 0/0
  6260 ;;		On exit  : 0/0
  6261 ;;		Unchanged: 0/0
  6262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6263 ;;      Params:         0       0       0       0       0
  6264 ;;      Locals:         0       1       0       0       0
  6265 ;;      Temps:          0       0       0       0       0
  6266 ;;      Totals:         0       1       0       0       0
  6267 ;;Total ram usage:        1 bytes
  6268 ;; Hardware stack levels used: 1
  6269 ;; Hardware stack levels required when called: 2
  6270 ;; This function calls:
  6271 ;;		Nothing
  6272 ;; This function is called by:
  6273 ;;		_Lcd_Cmd
  6274 ;;		_Lcd_Init
  6275 ;;		_Lcd_Write_Char
  6276 ;; This function uses a non-reentrant model
  6277 ;;
  6278                           
  6279     1263                     _Lcd_Port:	
  6280                           ;psect for function _Lcd_Port
  6281                           
  6282                           
  6283                           ;incstack = 0
  6284                           ; Regs used in _Lcd_Port: [wreg]
  6285                           ;Lcd_Port@a stored from wreg
  6286     1263  1283               	bcf	3,5	;RP0=0, select bank0
  6287     1264  1303               	bcf	3,6	;RP1=0, select bank0
  6288     1265  00A0               	movwf	Lcd_Port@a
  6289     1266                     l3506:
  6290                           
  6291                           ;./lcd.h: 3: void Lcd_Port(char a);./lcd.h: 4: {;./lcd.h: 5:  if(a & 1)
  6292     1266  1C20               	btfss	Lcd_Port@a,0
  6293     1267  2A69               	goto	u4461
  6294     1268  2A6A               	goto	u4460
  6295     1269                     u4461:
  6296     1269  2A6C               	goto	l113
  6297     126A                     u4460:
  6298     126A                     l3508:
  6299                           
  6300                           ;./lcd.h: 6:   RB3 = 1;
  6301     126A  1586               	bsf	6,3	;volatile
  6302     126B  2A6D               	goto	l114
  6303     126C                     l113:	
  6304                           ;./lcd.h: 7:  else
  6305                           
  6306                           
  6307                           ;./lcd.h: 8:   RB3 = 0;
  6308     126C  1186               	bcf	6,3	;volatile
  6309     126D                     l114:
  6310                           
  6311                           ;./lcd.h: 10:  if(a & 2)
  6312     126D  1CA0               	btfss	Lcd_Port@a,1
  6313     126E  2A70               	goto	u4471
  6314     126F  2A71               	goto	u4470
  6315     1270                     u4471:
  6316     1270  2A73               	goto	l115
  6317     1271                     u4470:
  6318     1271                     l3510:
  6319                           
  6320                           ;./lcd.h: 11:   RB2 = 1;
  6321     1271  1506               	bsf	6,2	;volatile
  6322     1272  2A74               	goto	l116
  6323     1273                     l115:	
  6324                           ;./lcd.h: 12:  else
  6325                           
  6326                           
  6327                           ;./lcd.h: 13:   RB2 = 0;
  6328     1273  1106               	bcf	6,2	;volatile
  6329     1274                     l116:
  6330                           
  6331                           ;./lcd.h: 15:  if(a & 4)
  6332     1274  1D20               	btfss	Lcd_Port@a,2
  6333     1275  2A77               	goto	u4481
  6334     1276  2A78               	goto	u4480
  6335     1277                     u4481:
  6336     1277  2A7A               	goto	l117
  6337     1278                     u4480:
  6338     1278                     l3512:
  6339                           
  6340                           ;./lcd.h: 16:   RB1 = 1;
  6341     1278  1486               	bsf	6,1	;volatile
  6342     1279  2A7B               	goto	l118
  6343     127A                     l117:	
  6344                           ;./lcd.h: 17:  else
  6345                           
  6346                           
  6347                           ;./lcd.h: 18:   RB1 = 0;
  6348     127A  1086               	bcf	6,1	;volatile
  6349     127B                     l118:
  6350                           
  6351                           ;./lcd.h: 20:  if(a & 8)
  6352     127B  1DA0               	btfss	Lcd_Port@a,3
  6353     127C  2A7E               	goto	u4491
  6354     127D  2A7F               	goto	u4490
  6355     127E                     u4491:
  6356     127E  2A81               	goto	l119
  6357     127F                     u4490:
  6358     127F                     l3514:
  6359                           
  6360                           ;./lcd.h: 21:   RB0 = 1;
  6361     127F  1406               	bsf	6,0	;volatile
  6362     1280  2A82               	goto	l121
  6363     1281                     l119:	
  6364                           ;./lcd.h: 22:  else
  6365                           
  6366                           
  6367                           ;./lcd.h: 23:   RB0 = 0;
  6368     1281  1006               	bcf	6,0	;volatile
  6369     1282                     l121:
  6370     1282  0008               	return
  6371     1283                     __end_of_Lcd_Port:
  6372                           
  6373                           	psect	text23
  6374     1283                     __ptext23:	
  6375 ;; *************** function _timer_isr *****************
  6376 ;; Defined at:
  6377 ;;		line 74 in file "main.c"
  6378 ;; Parameters:    Size  Location     Type
  6379 ;;		None
  6380 ;; Auto vars:     Size  Location     Type
  6381 ;;		None
  6382 ;; Return value:  Size  Location     Type
  6383 ;;                  1    wreg      void 
  6384 ;; Registers used:
  6385 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6386 ;; Tracked objects:
  6387 ;;		On entry : 0/0
  6388 ;;		On exit  : 0/0
  6389 ;;		Unchanged: 0/0
  6390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6391 ;;      Params:         0       0       0       0       0
  6392 ;;      Locals:         0       0       0       0       0
  6393 ;;      Temps:          3       0       0       0       0
  6394 ;;      Totals:         3       0       0       0       0
  6395 ;;Total ram usage:        3 bytes
  6396 ;; Hardware stack levels used: 1
  6397 ;; Hardware stack levels required when called: 1
  6398 ;; This function calls:
  6399 ;;		_incrementTime
  6400 ;; This function is called by:
  6401 ;;		Interrupt level 1
  6402 ;; This function uses a non-reentrant model
  6403 ;;
  6404                           
  6405     1283                     _timer_isr:	
  6406                           ;psect for function _timer_isr
  6407                           
  6408     1283                     i1l2928:
  6409                           
  6410                           ;main.c: 75:     if (T0IF) {
  6411     1283  1D0B               	btfss	11,2	;volatile
  6412     1284  2A86               	goto	u374_21
  6413     1285  2A87               	goto	u374_20
  6414     1286                     u374_21:
  6415     1286  2AA1               	goto	i1l170
  6416     1287                     u374_20:
  6417     1287                     i1l2930:
  6418                           
  6419                           ;main.c: 76:         T0IF = 0;
  6420     1287  110B               	bcf	11,2	;volatile
  6421     1288                     i1l2932:
  6422                           
  6423                           ;main.c: 77:         TMR0 = 61;
  6424     1288  303D               	movlw	61
  6425     1289  1283               	bcf	3,5	;RP0=0, select bank0
  6426     128A  1303               	bcf	3,6	;RP1=0, select bank0
  6427     128B  0081               	movwf	1	;volatile
  6428                           
  6429                           ;main.c: 79:         kesmeSayaci++;
  6430     128C  3001               	movlw	1
  6431     128D  07F6               	addwf	_kesmeSayaci,f
  6432     128E  1803               	skipnc
  6433     128F  0AF7               	incf	_kesmeSayaci+1,f
  6434     1290  3000               	movlw	0
  6435     1291  07F7               	addwf	_kesmeSayaci+1,f
  6436     1292                     i1l2934:
  6437                           
  6438                           ;main.c: 80:         if (kesmeSayaci==20){
  6439     1292  3014               	movlw	20
  6440     1293  0676               	xorwf	_kesmeSayaci,w
  6441     1294  0477               	iorwf	_kesmeSayaci+1,w
  6442     1295  1D03               	btfss	3,2
  6443     1296  2A98               	goto	u375_21
  6444     1297  2A99               	goto	u375_20
  6445     1298                     u375_21:
  6446     1298  2AA1               	goto	i1l170
  6447     1299                     u375_20:
  6448     1299                     i1l2936:
  6449                           
  6450                           ;main.c: 81:             kesmeSayaci = 0 ;
  6451     1299  01F6               	clrf	_kesmeSayaci
  6452     129A  01F7               	clrf	_kesmeSayaci+1
  6453     129B                     i1l2938:
  6454                           
  6455                           ;main.c: 82:             incrementTime(&currentTime);
  6456     129B  30A0               	movlw	(low (_currentTime| (0+256)))& (0+255)
  6457     129C  160A  118A  2408  160A  118A  	fcall	_incrementTime
  6458     12A1                     i1l170:
  6459     12A1  0875               	movf	??_timer_isr+2,w
  6460     12A2  008A               	movwf	10
  6461     12A3  0874               	movf	??_timer_isr+1,w
  6462     12A4  0084               	movwf	4
  6463     12A5  0E73               	swapf	??_timer_isr,w
  6464     12A6  0083               	movwf	3
  6465     12A7  0EFE               	swapf	btemp,f
  6466     12A8  0E7E               	swapf	btemp,w
  6467     12A9  0009               	retfie
  6468     12AA                     __end_of_timer_isr:
  6469                           
  6470                           	psect	intentry
  6471     0004                     __pintentry:	
  6472                           ;incstack = 0
  6473                           ; Regs used in _timer_isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6474                           
  6475     0004                     interrupt_function:
  6476     007E                     saved_w	set	btemp
  6477     0004  00FE               	movwf	btemp
  6478     0005  0E03               	swapf	3,w
  6479     0006  00F3               	movwf	??_timer_isr
  6480     0007  0804               	movf	4,w
  6481     0008  00F4               	movwf	??_timer_isr+1
  6482     0009  080A               	movf	10,w
  6483     000A  00F5               	movwf	??_timer_isr+2
  6484     000B  160A  118A  2A83   	ljmp	_timer_isr
  6485                           
  6486                           	psect	text24
  6487     1408                     __ptext24:	
  6488 ;; *************** function _incrementTime *****************
  6489 ;; Defined at:
  6490 ;;		line 60 in file "main.c"
  6491 ;; Parameters:    Size  Location     Type
  6492 ;;  time            1    wreg     PTR struct Time
  6493 ;;		 -> currentTime(6), 
  6494 ;; Auto vars:     Size  Location     Type
  6495 ;;  time            1    2[COMMON] PTR struct Time
  6496 ;;		 -> currentTime(6), 
  6497 ;; Return value:  Size  Location     Type
  6498 ;;                  1    wreg      void 
  6499 ;; Registers used:
  6500 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6501 ;; Tracked objects:
  6502 ;;		On entry : 0/0
  6503 ;;		On exit  : 0/0
  6504 ;;		Unchanged: 0/0
  6505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6506 ;;      Params:         0       0       0       0       0
  6507 ;;      Locals:         1       0       0       0       0
  6508 ;;      Temps:          2       0       0       0       0
  6509 ;;      Totals:         3       0       0       0       0
  6510 ;;Total ram usage:        3 bytes
  6511 ;; Hardware stack levels used: 1
  6512 ;; This function calls:
  6513 ;;		Nothing
  6514 ;; This function is called by:
  6515 ;;		_timer_isr
  6516 ;; This function uses a non-reentrant model
  6517 ;;
  6518                           
  6519     1408                     _incrementTime:	
  6520                           ;psect for function _incrementTime
  6521                           
  6522                           
  6523                           ;incstack = 0
  6524                           ; Regs used in _incrementTime: [wreg-fsr0h+status,2+status,0]
  6525                           ;incrementTime@time stored from wreg
  6526     1408  00F2               	movwf	incrementTime@time
  6527     1409                     i1l2412:
  6528                           
  6529                           ;main.c: 61:     time->seconds++;
  6530     1409  0872               	movf	incrementTime@time,w
  6531     140A  3E04               	addlw	4
  6532     140B  0084               	movwf	4
  6533     140C  3001               	movlw	1
  6534     140D  1783               	bsf	3,7	;select IRP bank2
  6535     140E  0780               	addwf	0,f
  6536     140F  0A84               	incf	4,f
  6537     1410  1803               	skipnc
  6538     1411  0A80               	incf	0,f
  6539                           
  6540                           ;main.c: 62:     if (time->seconds >= 60) {
  6541     1412  0872               	movf	incrementTime@time,w
  6542     1413  3E04               	addlw	4
  6543     1414  0084               	movwf	4
  6544     1415  0800               	movf	0,w
  6545     1416  00F0               	movwf	??_incrementTime
  6546     1417  0A84               	incf	4,f
  6547     1418  0800               	movf	0,w
  6548     1419  00F1               	movwf	??_incrementTime+1
  6549     141A  3000               	movlw	0
  6550     141B  0271               	subwf	??_incrementTime+1,w
  6551     141C  303C               	movlw	60
  6552     141D  1903               	skipnz
  6553     141E  0270               	subwf	??_incrementTime,w
  6554     141F  1C03               	skipc
  6555     1420  2C22               	goto	u260_21
  6556     1421  2C23               	goto	u260_20
  6557     1422                     u260_21:
  6558     1422  2C4F               	goto	i1l163
  6559     1423                     u260_20:
  6560     1423                     i1l2414:
  6561                           
  6562                           ;main.c: 63:         time->seconds = 0;
  6563     1423  0872               	movf	incrementTime@time,w
  6564     1424  3E04               	addlw	4
  6565     1425  0084               	movwf	4
  6566     1426  0180               	clrf	0
  6567     1427  0A84               	incf	4,f
  6568     1428  0180               	clrf	0
  6569                           
  6570                           ;main.c: 64:         time->minutes++;
  6571     1429  0872               	movf	incrementTime@time,w
  6572     142A  3E02               	addlw	2
  6573     142B  0084               	movwf	4
  6574     142C  3001               	movlw	1
  6575     142D  0780               	addwf	0,f
  6576     142E  0A84               	incf	4,f
  6577     142F  1803               	skipnc
  6578     1430  0A80               	incf	0,f
  6579                           
  6580                           ;main.c: 65:         if (time->minutes >= 60) {
  6581     1431  0872               	movf	incrementTime@time,w
  6582     1432  3E02               	addlw	2
  6583     1433  0084               	movwf	4
  6584     1434  0800               	movf	0,w
  6585     1435  00F0               	movwf	??_incrementTime
  6586     1436  0A84               	incf	4,f
  6587     1437  0800               	movf	0,w
  6588     1438  00F1               	movwf	??_incrementTime+1
  6589     1439  3000               	movlw	0
  6590     143A  0271               	subwf	??_incrementTime+1,w
  6591     143B  303C               	movlw	60
  6592     143C  1903               	skipnz
  6593     143D  0270               	subwf	??_incrementTime,w
  6594     143E  1C03               	skipc
  6595     143F  2C41               	goto	u261_21
  6596     1440  2C42               	goto	u261_20
  6597     1441                     u261_21:
  6598     1441  2C4F               	goto	i1l163
  6599     1442                     u261_20:
  6600     1442                     i1l2416:
  6601                           
  6602                           ;main.c: 66:             time->minutes = 0;
  6603     1442  0872               	movf	incrementTime@time,w
  6604     1443  3E02               	addlw	2
  6605     1444  0084               	movwf	4
  6606     1445  0180               	clrf	0
  6607     1446  0A84               	incf	4,f
  6608     1447  0180               	clrf	0
  6609                           
  6610                           ;main.c: 67:             time->hours++;
  6611     1448  0872               	movf	incrementTime@time,w
  6612     1449  0084               	movwf	4
  6613     144A  3001               	movlw	1
  6614     144B  0780               	addwf	0,f
  6615     144C  0A84               	incf	4,f
  6616     144D  1803               	skipnc
  6617     144E  0A80               	incf	0,f
  6618     144F                     i1l163:
  6619     144F  0008               	return
  6620     1450                     __end_of_incrementTime:
  6621     007E                     btemp	set	126	;btemp
  6622     007E                     wtemp0	set	126
  6623                           
  6624                           	psect	config
  6625                           
  6626                           ;Config register CONFIG @ 0x2007
  6627                           ;	Oscillator Selection bits
  6628                           ;	FOSC = XT, XT oscillator
  6629                           ;	Watchdog Timer Enable bit
  6630                           ;	WDTE = OFF, WDT disabled
  6631                           ;	Power-up Timer Enable bit
  6632                           ;	PWRTE = OFF, PWRT disabled
  6633                           ;	Brown-out Reset Enable bit
  6634                           ;	BOREN = ON, BOR enabled
  6635                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  6636                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  6637                           ;	Data EEPROM Memory Code Protection bit
  6638                           ;	CPD = OFF, Data EEPROM code protection off
  6639                           ;	Flash Program Memory Write Enable bits
  6640                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  6641                           ;	In-Circuit Debugger Mode bit
  6642                           ;	DEBUG = 0x1, unprogrammed default
  6643                           ;	Flash Program Memory Code Protection bit
  6644                           ;	CP = OFF, Code protection off
  6645     2007                     	org	8199
  6646     2007  3F79               	dw	16249
  6647                           
  6648                           	psect	maintext_split_1
  6649     1577                     u5380:
  6650     1577                     l4074:
  6651     1577  1809               	btfsc	9,0	;volatile
  6652     1578  2D7A               	goto	u5391
  6653     1579  2D7D               	goto	u5390
  6654     157A                     u5391:
  6655     157A  120A  118A  2EC4   	goto	l179
  6656     157D                     u5390:
  6657     157D                     l4076:
  6658     157D  1807               	btfsc	7,0	;volatile
  6659     157E  2D80               	goto	u5401
  6660     157F  2D81               	goto	u5400
  6661     1580                     u5401:
  6662     1580  2D7A               	goto	u5391
  6663     1581                     u5400:
  6664     1581                     l4078:
  6665     1581  1889               	btfsc	9,1	;volatile
  6666     1582  2D84               	goto	u5411
  6667     1583  2D85               	goto	u5410
  6668     1584                     u5411:
  6669     1584  2D7A               	goto	u5391
  6670     1585                     u5410:
  6671     1585                     l4080:
  6672                           
  6673                           ;main.c: 197:             ilkAcilis = 0;
  6674     1585  1683               	bsf	3,5	;RP0=1, select bank1
  6675     1586  1303               	bcf	3,6	;RP1=0, select bank1
  6676     1587  01E4               	clrf	main@ilkAcilis^(0+128)
  6677     1588  01E5               	clrf	(main@ilkAcilis+1)^(0+128)
  6678     1589                     l176:	
  6679                           ;main.c: 202:     }
  6680                           
  6681                           
  6682                           ;main.c: 204: if( !RC3 && !RD0){
  6683     1589  1283               	bcf	3,5	;RP0=0, select bank0
  6684     158A  1303               	bcf	3,6	;RP1=0, select bank0
  6685     158B  1987               	btfsc	7,3	;volatile
  6686     158C  2D8E               	goto	u5421
  6687     158D  2D91               	goto	u5420
  6688     158E                     u5421:
  6689     158E  120A  118A  2E2F   	goto	l180
  6690     1591                     u5420:
  6691     1591                     l4082:
  6692     1591  1808               	btfsc	8,0	;volatile
  6693     1592  2D94               	goto	u5431
  6694     1593  2D95               	goto	u5430
  6695     1594                     u5431:
  6696     1594  2D8E               	goto	u5421
  6697     1595                     u5430:
  6698     1595                     l4084:
  6699                           
  6700                           ;main.c: 205:      if ((currentTime.hours == 500 || currentTime.hours == 501 || currentT
      +                          ime.hours == 502) && currentTime.minutes == 1) {
  6701     1595  30F4               	movlw	244
  6702     1596  1683               	bsf	3,5	;RP0=1, select bank3
  6703     1597  1703               	bsf	3,6	;RP1=1, select bank3
  6704     1598  0620               	xorwf	_currentTime^(0+384),w
  6705     1599  1D03               	skipz
  6706     159A  2DA0               	goto	u5440
  6707     159B  0321               	decf	(_currentTime+1)^(0+384),w
  6708     159C  1903               	btfsc	3,2
  6709     159D  2D9F               	goto	u5441
  6710     159E  2DA0               	goto	u5440
  6711     159F                     u5441:
  6712     159F  2DB2               	goto	l4090
  6713     15A0                     u5440:
  6714     15A0                     l4086:
  6715     15A0  30F5               	movlw	245
  6716     15A1  0620               	xorwf	_currentTime^(0+384),w
  6717     15A2  1D03               	skipz
  6718     15A3  2DA9               	goto	u5450
  6719     15A4  0321               	decf	(_currentTime+1)^(0+384),w
  6720     15A5  1903               	btfsc	3,2
  6721     15A6  2DA8               	goto	u5451
  6722     15A7  2DA9               	goto	u5450
  6723     15A8                     u5451:
  6724     15A8  2DB2               	goto	l4090
  6725     15A9                     u5450:
  6726     15A9                     l4088:
  6727     15A9  30F6               	movlw	246
  6728     15AA  0620               	xorwf	_currentTime^(0+384),w
  6729     15AB  1D03               	skipz
  6730     15AC  2DB1               	goto	u5461
  6731     15AD  0321               	decf	(_currentTime+1)^(0+384),w
  6732     15AE  1D03               	btfss	3,2
  6733     15AF  2DB1               	goto	u5461
  6734     15B0  2DB2               	goto	u5460
  6735     15B1                     u5461:
  6736     15B1  2E0D               	goto	l4116
  6737     15B2                     u5460:
  6738     15B2                     l4090:
  6739     15B2  0322               	decf	(_currentTime^(0+384)+2),w
  6740     15B3  0423               	iorwf	((_currentTime+1)^(0+384)+2),w
  6741     15B4  1D03               	btfss	3,2
  6742     15B5  2DB7               	goto	u5471
  6743     15B6  2DB8               	goto	u5470
  6744     15B7                     u5471:
  6745     15B7  2E0D               	goto	l4116
  6746     15B8                     u5470:
  6747     15B8                     l4092:
  6748                           
  6749                           ;main.c: 207:     Lcd_Clear();
  6750     15B8  160A  118A  21D7  160A  118A  	fcall	_Lcd_Clear
  6751     15BD                     l4094:
  6752                           
  6753                           ;main.c: 208:     int i=0 ;
  6754     15BD  1683               	bsf	3,5	;RP0=1, select bank1
  6755     15BE  1303               	bcf	3,6	;RP1=0, select bank1
  6756     15BF  01EC               	clrf	main@i^(0+128)
  6757     15C0  01ED               	clrf	(main@i+1)^(0+128)
  6758     15C1                     l4096:
  6759                           
  6760                           ;main.c: 209:     for(; i < 10; i++)
  6761     15C1  086D               	movf	(main@i+1)^(0+128),w
  6762     15C2  3A80               	xorlw	128
  6763     15C3  00FF               	movwf	btemp+1
  6764     15C4  3080               	movlw	128
  6765     15C5  027F               	subwf	btemp+1,w
  6766     15C6  1D03               	skipz
  6767     15C7  2DCA               	goto	u5485
  6768     15C8  300A               	movlw	10
  6769     15C9  026C               	subwf	main@i^(0+128),w
  6770     15CA                     u5485:
  6771     15CA  1C03               	skipc
  6772     15CB  2DCD               	goto	u5481
  6773     15CC  2DCE               	goto	u5480
  6774     15CD                     u5481:
  6775     15CD  2DCF               	goto	l4100
  6776     15CE                     u5480:
  6777     15CE  2E05               	goto	l4112
  6778     15CF                     l4100:
  6779                           
  6780                           ;main.c: 210: {;main.c: 211:    Lcd_Set_Cursor(1, 1);
  6781     15CF  1283               	bcf	3,5	;RP0=0, select bank0
  6782     15D0  1303               	bcf	3,6	;RP1=0, select bank0
  6783     15D1  01A4               	clrf	Lcd_Set_Cursor@b
  6784     15D2  0AA4               	incf	Lcd_Set_Cursor@b,f
  6785     15D3  3001               	movlw	1
  6786     15D4  160A  118A  2450  160A  118A  	fcall	_Lcd_Set_Cursor
  6787     15D9                     l4102:
  6788                           
  6789                           ;main.c: 212: Lcd_Write_String("YAG BAKIMI YAPINIZ");
  6790     15D9  30AA               	movlw	low (STR_6| (0+32768))
  6791     15DA  1283               	bcf	3,5	;RP0=0, select bank0
  6792     15DB  1303               	bcf	3,6	;RP1=0, select bank0
  6793     15DC  00A5               	movwf	Lcd_Write_String@a
  6794     15DD  3098               	movlw	high (STR_6| (0+32768))
  6795     15DE  00A6               	movwf	Lcd_Write_String@a+1
  6796     15DF  160A  118A  2336  160A  118A  	fcall	_Lcd_Write_String
  6797     15E4                     l4104:
  6798                           
  6799                           ;main.c: 213: Lcd_Set_Cursor(2, 1);
  6800     15E4  1283               	bcf	3,5	;RP0=0, select bank0
  6801     15E5  1303               	bcf	3,6	;RP1=0, select bank0
  6802     15E6  01A4               	clrf	Lcd_Set_Cursor@b
  6803     15E7  0AA4               	incf	Lcd_Set_Cursor@b,f
  6804     15E8  3002               	movlw	2
  6805     15E9  160A  118A  2450  160A  118A  	fcall	_Lcd_Set_Cursor
  6806                           
  6807                           ;main.c: 214: Lcd_Write_String("OIL THE GEARS");
  6808     15EE  30F9               	movlw	low (STR_7| (0+32768))
  6809     15EF  1283               	bcf	3,5	;RP0=0, select bank0
  6810     15F0  1303               	bcf	3,6	;RP1=0, select bank0
  6811     15F1  00A5               	movwf	Lcd_Write_String@a
  6812     15F2  3098               	movlw	high (STR_7| (0+32768))
  6813     15F3  00A6               	movwf	Lcd_Write_String@a+1
  6814     15F4  160A  118A  2336  160A  118A  	fcall	_Lcd_Write_String
  6815     15F9                     l4106:
  6816                           
  6817                           ;main.c: 215: RA4 = 1;
  6818     15F9  1283               	bcf	3,5	;RP0=0, select bank0
  6819     15FA  1303               	bcf	3,6	;RP1=0, select bank0
  6820     15FB  1605               	bsf	5,4	;volatile
  6821     15FC                     l4108:
  6822                           
  6823                           ;main.c: 216: }
  6824     15FC  3001               	movlw	1
  6825     15FD  1683               	bsf	3,5	;RP0=1, select bank1
  6826     15FE  1303               	bcf	3,6	;RP1=0, select bank1
  6827     15FF  07EC               	addwf	main@i^(0+128),f
  6828     1600  1803               	skipnc
  6829     1601  0AED               	incf	(main@i+1)^(0+128),f
  6830     1602  3000               	movlw	0
  6831     1603  07ED               	addwf	(main@i+1)^(0+128),f
  6832     1604  2DC1               	goto	l4096
  6833     1605                     l4112:
  6834                           
  6835                           ;main.c: 217:     Lcd_Clear();
  6836     1605  160A  118A  21D7  160A  118A  	fcall	_Lcd_Clear
  6837     160A                     l4114:
  6838                           
  6839                           ;main.c: 219:     RA4 = 0;
  6840     160A  1283               	bcf	3,5	;RP0=0, select bank0
  6841     160B  1303               	bcf	3,6	;RP1=0, select bank0
  6842     160C  1205               	bcf	5,4	;volatile
  6843     160D                     l4116:
  6844                           
  6845                           ;main.c: 222: if ((currentTime.hours == 500 || currentTime.hours == 501 || currentTime.h
      +                          ours == 502) && currentTime.minutes == 0) {
  6846     160D  30F4               	movlw	244
  6847     160E  1683               	bsf	3,5	;RP0=1, select bank3
  6848     160F  1703               	bsf	3,6	;RP1=1, select bank3
  6849     1610  0620               	xorwf	_currentTime^(0+384),w
  6850     1611  1D03               	skipz
  6851     1612  2E18               	goto	u5490
  6852     1613  0321               	decf	(_currentTime+1)^(0+384),w
  6853     1614  1903               	btfsc	3,2
  6854     1615  2E17               	goto	u5491
  6855     1616  2E18               	goto	u5490
  6856     1617                     u5491:
  6857     1617  2E2C               	goto	l4122
  6858     1618                     u5490:
  6859     1618                     l4118:
  6860     1618  30F5               	movlw	245
  6861     1619  0620               	xorwf	_currentTime^(0+384),w
  6862     161A  1D03               	skipz
  6863     161B  2E21               	goto	u5500
  6864     161C  0321               	decf	(_currentTime+1)^(0+384),w
  6865     161D  1903               	btfsc	3,2
  6866     161E  2E20               	goto	u5501
  6867     161F  2E21               	goto	u5500
  6868     1620                     u5501:
  6869     1620  2E2C               	goto	l4122
  6870     1621                     u5500:
  6871     1621                     l4120:
  6872     1621  30F6               	movlw	246
  6873     1622  0620               	xorwf	_currentTime^(0+384),w
  6874     1623  1D03               	skipz
  6875     1624  2E29               	goto	u5511
  6876     1625  0321               	decf	(_currentTime+1)^(0+384),w
  6877     1626  1D03               	btfss	3,2
  6878     1627  2E29               	goto	u5511
  6879     1628  2E2C               	goto	u5510
  6880     1629                     u5511:
  6881     1629  160A  118A  2E89   	goto	l4148
  6882     162C                     u5510:
  6883     162C                     l4122:
  6884     162C  0822               	movf	(_currentTime^(0+384)+2),w
  6885     162D  0423               	iorwf	((_currentTime+1)^(0+384)+2),w
  6886     162E  1D03               	btfss	3,2
  6887     162F  2E31               	goto	u5521
  6888     1630  2E32               	goto	u5520
  6889     1631                     u5521:
  6890     1631  2E29               	goto	u5511
  6891     1632                     u5520:
  6892     1632                     l4124:
  6893                           
  6894                           ;main.c: 224:     Lcd_Clear();
  6895     1632  160A  118A  21D7  160A  118A  	fcall	_Lcd_Clear
  6896     1637                     l4126:
  6897                           
  6898                           ;main.c: 225:     int i=0 ;
  6899     1637  1683               	bsf	3,5	;RP0=1, select bank1
  6900     1638  1303               	bcf	3,6	;RP1=0, select bank1
  6901     1639  01EE               	clrf	main@i_321^(0+128)
  6902     163A  01EF               	clrf	(main@i_321+1)^(0+128)
  6903     163B                     l4128:
  6904                           
  6905                           ;main.c: 226:     for(; i < 10; i++)
  6906     163B  086F               	movf	(main@i_321+1)^(0+128),w
  6907     163C  3A80               	xorlw	128
  6908     163D  00FF               	movwf	btemp+1
  6909     163E  3080               	movlw	128
  6910     163F  027F               	subwf	btemp+1,w
  6911     1640  1D03               	skipz
  6912     1641  2E44               	goto	u5535
  6913     1642  300A               	movlw	10
  6914     1643  026E               	subwf	main@i_321^(0+128),w
  6915     1644                     u5535:
  6916     1644  1C03               	skipc
  6917     1645  2E47               	goto	u5531
  6918     1646  2E48               	goto	u5530
  6919     1647                     u5531:
  6920     1647  2E4B               	goto	l4132
  6921     1648                     u5530:
  6922     1648  160A  118A  2E81   	goto	l4144
  6923     164B                     l4132:
  6924                           
  6925                           ;main.c: 227: {;main.c: 228:    Lcd_Set_Cursor(1, 1);
  6926     164B  1283               	bcf	3,5	;RP0=0, select bank0
  6927     164C  1303               	bcf	3,6	;RP1=0, select bank0
  6928     164D  01A4               	clrf	Lcd_Set_Cursor@b
  6929     164E  0AA4               	incf	Lcd_Set_Cursor@b,f
  6930     164F  3001               	movlw	1
  6931     1650  160A  118A  2450  160A  118A  	fcall	_Lcd_Set_Cursor
  6932     1655                     l4134:
  6933                           
  6934                           ;main.c: 229: Lcd_Write_String("YAG BAKIMI YAPINIZ");
  6935     1655  30AA               	movlw	low (STR_6| (0+32768))
  6936     1656  1283               	bcf	3,5	;RP0=0, select bank0
  6937     1657  1303               	bcf	3,6	;RP1=0, select bank0
  6938     1658  00A5               	movwf	Lcd_Write_String@a
  6939     1659  3098               	movlw	high (STR_6| (0+32768))
  6940     165A  00A6               	movwf	Lcd_Write_String@a+1
  6941     165B  160A  118A  2336  160A  118A  	fcall	_Lcd_Write_String
  6942     1660                     l4136:
  6943                           
  6944                           ;main.c: 230: Lcd_Set_Cursor(2, 1);
  6945     1660  1283               	bcf	3,5	;RP0=0, select bank0
  6946     1661  1303               	bcf	3,6	;RP1=0, select bank0
  6947     1662  01A4               	clrf	Lcd_Set_Cursor@b
  6948     1663  0AA4               	incf	Lcd_Set_Cursor@b,f
  6949     1664  3002               	movlw	2
  6950     1665  160A  118A  2450  160A  118A  	fcall	_Lcd_Set_Cursor
  6951                           
  6952                           ;main.c: 231: Lcd_Write_String("OIL THE GEARS");
  6953     166A  30F9               	movlw	low (STR_7| (0+32768))
  6954     166B  1283               	bcf	3,5	;RP0=0, select bank0
  6955     166C  1303               	bcf	3,6	;RP1=0, select bank0
  6956     166D  00A5               	movwf	Lcd_Write_String@a
  6957     166E  3098               	movlw	high (STR_7| (0+32768))
  6958     166F  00A6               	movwf	Lcd_Write_String@a+1
  6959     1670  160A  118A  2336  160A  118A  	fcall	_Lcd_Write_String
  6960     1675                     l4138:
  6961                           
  6962                           ;main.c: 232: RA4 = 1;
  6963     1675  1283               	bcf	3,5	;RP0=0, select bank0
  6964     1676  1303               	bcf	3,6	;RP1=0, select bank0
  6965     1677  1605               	bsf	5,4	;volatile
  6966     1678                     l4140:
  6967                           
  6968                           ;main.c: 233: }
  6969     1678  3001               	movlw	1
  6970     1679  1683               	bsf	3,5	;RP0=1, select bank1
  6971     167A  1303               	bcf	3,6	;RP1=0, select bank1
  6972     167B  07EE               	addwf	main@i_321^(0+128),f
  6973     167C  1803               	skipnc
  6974     167D  0AEF               	incf	(main@i_321+1)^(0+128),f
  6975     167E  3000               	movlw	0
  6976     167F  07EF               	addwf	(main@i_321+1)^(0+128),f
  6977     1680  2E3B               	goto	l4128
  6978                           
  6979                           	psect	maintext_split_2
  6980     1681                     l4144:
  6981                           
  6982                           ;main.c: 234:     Lcd_Clear();
  6983     1681  160A  118A  21D7  160A  118A  	fcall	_Lcd_Clear
  6984     1686                     l4146:
  6985                           
  6986                           ;main.c: 235:     RA4 = 0;
  6987     1686  1283               	bcf	3,5	;RP0=0, select bank0
  6988     1687  1303               	bcf	3,6	;RP1=0, select bank0
  6989     1688  1205               	bcf	5,4	;volatile
  6990     1689                     l4148:
  6991                           
  6992                           ;main.c: 238: if ((currentTime.hours == 1000 || currentTime.hours == 1001 || currentTime
      +                          .hours == 1002) && currentTime.minutes == 0) {
  6993     1689  30E8               	movlw	232
  6994     168A  1683               	bsf	3,5	;RP0=1, select bank3
  6995     168B  1703               	bsf	3,6	;RP1=1, select bank3
  6996     168C  0620               	xorwf	_currentTime^(0+384),w
  6997     168D  3003               	movlw	3
  6998     168E  1903               	skipnz
  6999     168F  0621               	xorwf	(_currentTime+1)^(0+384),w
  7000     1690  1903               	btfsc	3,2
  7001     1691  2E93               	goto	u5541
  7002     1692  2E94               	goto	u5540
  7003     1693                     u5541:
  7004     1693  2EA6               	goto	l4154
  7005     1694                     u5540:
  7006     1694                     l4150:
  7007     1694  30E9               	movlw	233
  7008     1695  0620               	xorwf	_currentTime^(0+384),w
  7009     1696  3003               	movlw	3
  7010     1697  1903               	skipnz
  7011     1698  0621               	xorwf	(_currentTime+1)^(0+384),w
  7012     1699  1903               	btfsc	3,2
  7013     169A  2E9C               	goto	u5551
  7014     169B  2E9D               	goto	u5550
  7015     169C                     u5551:
  7016     169C  2EA6               	goto	l4154
  7017     169D                     u5550:
  7018     169D                     l4152:
  7019     169D  30EA               	movlw	234
  7020     169E  0620               	xorwf	_currentTime^(0+384),w
  7021     169F  3003               	movlw	3
  7022     16A0  1903               	skipnz
  7023     16A1  0621               	xorwf	(_currentTime+1)^(0+384),w
  7024     16A2  1D03               	btfss	3,2
  7025     16A3  2EA5               	goto	u5561
  7026     16A4  2EA6               	goto	u5560
  7027     16A5                     u5561:
  7028     16A5  2F01               	goto	l4180
  7029     16A6                     u5560:
  7030     16A6                     l4154:
  7031     16A6  0822               	movf	(_currentTime^(0+384)+2),w
  7032     16A7  0423               	iorwf	((_currentTime+1)^(0+384)+2),w
  7033     16A8  1D03               	btfss	3,2
  7034     16A9  2EAB               	goto	u5571
  7035     16AA  2EAC               	goto	u5570
  7036     16AB                     u5571:
  7037     16AB  2F01               	goto	l4180
  7038     16AC                     u5570:
  7039     16AC                     l4156:
  7040                           
  7041                           ;main.c: 240:     Lcd_Clear();
  7042     16AC  160A  118A  21D7  160A  118A  	fcall	_Lcd_Clear
  7043     16B1                     l4158:
  7044                           
  7045                           ;main.c: 241:     int i=0 ;
  7046     16B1  1683               	bsf	3,5	;RP0=1, select bank3
  7047     16B2  1703               	bsf	3,6	;RP1=1, select bank3
  7048     16B3  0190               	clrf	main@i_324^(0+384)
  7049     16B4  0191               	clrf	(main@i_324+1)^(0+384)
  7050     16B5                     l4160:
  7051                           
  7052                           ;main.c: 242:     for(; i < 10; i++)
  7053     16B5  0811               	movf	(main@i_324+1)^(0+384),w
  7054     16B6  3A80               	xorlw	128
  7055     16B7  00FF               	movwf	btemp+1
  7056     16B8  3080               	movlw	128
  7057     16B9  027F               	subwf	btemp+1,w
  7058     16BA  1D03               	skipz
  7059     16BB  2EBE               	goto	u5585
  7060     16BC  300A               	movlw	10
  7061     16BD  0210               	subwf	main@i_324^(0+384),w
  7062     16BE                     u5585:
  7063     16BE  1C03               	skipc
  7064     16BF  2EC1               	goto	u5581
  7065     16C0  2EC2               	goto	u5580
  7066     16C1                     u5581:
  7067     16C1  2EC3               	goto	l4164
  7068     16C2                     u5580:
  7069     16C2  2EF9               	goto	l4176
  7070     16C3                     l4164:
  7071                           
  7072                           ;main.c: 243: {;main.c: 244:    Lcd_Set_Cursor(1, 1);
  7073     16C3  1283               	bcf	3,5	;RP0=0, select bank0
  7074     16C4  1303               	bcf	3,6	;RP1=0, select bank0
  7075     16C5  01A4               	clrf	Lcd_Set_Cursor@b
  7076     16C6  0AA4               	incf	Lcd_Set_Cursor@b,f
  7077     16C7  3001               	movlw	1
  7078     16C8  160A  118A  2450  160A  118A  	fcall	_Lcd_Set_Cursor
  7079     16CD                     l4166:
  7080                           
  7081                           ;main.c: 245: Lcd_Write_String("YAG BAKIMI YAPINIZ");
  7082     16CD  30AA               	movlw	low (STR_6| (0+32768))
  7083     16CE  1283               	bcf	3,5	;RP0=0, select bank0
  7084     16CF  1303               	bcf	3,6	;RP1=0, select bank0
  7085     16D0  00A5               	movwf	Lcd_Write_String@a
  7086     16D1  3098               	movlw	high (STR_6| (0+32768))
  7087     16D2  00A6               	movwf	Lcd_Write_String@a+1
  7088     16D3  160A  118A  2336  160A  118A  	fcall	_Lcd_Write_String
  7089     16D8                     l4168:
  7090                           
  7091                           ;main.c: 246: Lcd_Set_Cursor(2, 1);
  7092     16D8  1283               	bcf	3,5	;RP0=0, select bank0
  7093     16D9  1303               	bcf	3,6	;RP1=0, select bank0
  7094     16DA  01A4               	clrf	Lcd_Set_Cursor@b
  7095     16DB  0AA4               	incf	Lcd_Set_Cursor@b,f
  7096     16DC  3002               	movlw	2
  7097     16DD  160A  118A  2450  160A  118A  	fcall	_Lcd_Set_Cursor
  7098                           
  7099                           ;main.c: 247: Lcd_Write_String("OIL THE GEARS");
  7100     16E2  30F9               	movlw	low (STR_7| (0+32768))
  7101     16E3  1283               	bcf	3,5	;RP0=0, select bank0
  7102     16E4  1303               	bcf	3,6	;RP1=0, select bank0
  7103     16E5  00A5               	movwf	Lcd_Write_String@a
  7104     16E6  3098               	movlw	high (STR_7| (0+32768))
  7105     16E7  00A6               	movwf	Lcd_Write_String@a+1
  7106     16E8  160A  118A  2336  160A  118A  	fcall	_Lcd_Write_String
  7107     16ED                     l4170:
  7108                           
  7109                           ;main.c: 248: RA4 = 1;
  7110     16ED  1283               	bcf	3,5	;RP0=0, select bank0
  7111     16EE  1303               	bcf	3,6	;RP1=0, select bank0
  7112     16EF  1605               	bsf	5,4	;volatile
  7113     16F0                     l4172:
  7114                           
  7115                           ;main.c: 249: }
  7116     16F0  3001               	movlw	1
  7117     16F1  1683               	bsf	3,5	;RP0=1, select bank3
  7118     16F2  1703               	bsf	3,6	;RP1=1, select bank3
  7119     16F3  0790               	addwf	main@i_324^(0+384),f
  7120     16F4  1803               	skipnc
  7121     16F5  0A91               	incf	(main@i_324+1)^(0+384),f
  7122     16F6  3000               	movlw	0
  7123     16F7  0791               	addwf	(main@i_324+1)^(0+384),f
  7124     16F8  2EB5               	goto	l4160
  7125     16F9                     l4176:
  7126                           
  7127                           ;main.c: 250:     Lcd_Clear();
  7128     16F9  160A  118A  21D7  160A  118A  	fcall	_Lcd_Clear
  7129     16FE                     l4178:
  7130                           
  7131                           ;main.c: 251:     RA4 = 0;
  7132     16FE  1283               	bcf	3,5	;RP0=0, select bank0
  7133     16FF  1303               	bcf	3,6	;RP1=0, select bank0
  7134     1700  1205               	bcf	5,4	;volatile
  7135     1701                     l4180:
  7136                           
  7137                           ;main.c: 254: if ((currentTime.hours == 1500 || currentTime.hours == 1501 || currentTime
      +                          .hours == 1502) && currentTime.minutes == 0) {
  7138     1701  30DC               	movlw	220
  7139     1702  1683               	bsf	3,5	;RP0=1, select bank3
  7140     1703  1703               	bsf	3,6	;RP1=1, select bank3
  7141     1704  0620               	xorwf	_currentTime^(0+384),w
  7142     1705  3005               	movlw	5
  7143     1706  1903               	skipnz
  7144     1707  0621               	xorwf	(_currentTime+1)^(0+384),w
  7145     1708  1903               	btfsc	3,2
  7146     1709  2F0B               	goto	u5591
  7147     170A  2F0C               	goto	u5590
  7148     170B                     u5591:
  7149     170B  2F1E               	goto	l4186
  7150     170C                     u5590:
  7151     170C                     l4182:
  7152     170C  30DD               	movlw	221
  7153     170D  0620               	xorwf	_currentTime^(0+384),w
  7154     170E  3005               	movlw	5
  7155     170F  1903               	skipnz
  7156     1710  0621               	xorwf	(_currentTime+1)^(0+384),w
  7157     1711  1903               	btfsc	3,2
  7158     1712  2F14               	goto	u5601
  7159     1713  2F15               	goto	u5600
  7160     1714                     u5601:
  7161     1714  2F1E               	goto	l4186
  7162     1715                     u5600:
  7163     1715                     l4184:
  7164     1715  30DE               	movlw	222
  7165     1716  0620               	xorwf	_currentTime^(0+384),w
  7166     1717  3005               	movlw	5
  7167     1718  1903               	skipnz
  7168     1719  0621               	xorwf	(_currentTime+1)^(0+384),w
  7169     171A  1D03               	btfss	3,2
  7170     171B  2F1D               	goto	u5611
  7171     171C  2F1E               	goto	u5610
  7172     171D                     u5611:
  7173     171D  2F79               	goto	l4212
  7174     171E                     u5610:
  7175     171E                     l4186:
  7176     171E  0822               	movf	(_currentTime^(0+384)+2),w
  7177     171F  0423               	iorwf	((_currentTime+1)^(0+384)+2),w
  7178     1720  1D03               	btfss	3,2
  7179     1721  2F23               	goto	u5621
  7180     1722  2F24               	goto	u5620
  7181     1723                     u5621:
  7182     1723  2F79               	goto	l4212
  7183     1724                     u5620:
  7184     1724                     l4188:
  7185                           
  7186                           ;main.c: 256:     Lcd_Clear();
  7187     1724  160A  118A  21D7  160A  118A  	fcall	_Lcd_Clear
  7188     1729                     l4190:
  7189                           
  7190                           ;main.c: 257:     int i=0 ;
  7191     1729  1683               	bsf	3,5	;RP0=1, select bank3
  7192     172A  1703               	bsf	3,6	;RP1=1, select bank3
  7193     172B  0192               	clrf	main@i_327^(0+384)
  7194     172C  0193               	clrf	(main@i_327+1)^(0+384)
  7195     172D                     l4192:
  7196                           
  7197                           ;main.c: 258:     for(; i < 10; i++)
  7198     172D  0813               	movf	(main@i_327+1)^(0+384),w
  7199     172E  3A80               	xorlw	128
  7200     172F  00FF               	movwf	btemp+1
  7201     1730  3080               	movlw	128
  7202     1731  027F               	subwf	btemp+1,w
  7203     1732  1D03               	skipz
  7204     1733  2F36               	goto	u5635
  7205     1734  300A               	movlw	10
  7206     1735  0212               	subwf	main@i_327^(0+384),w
  7207     1736                     u5635:
  7208     1736  1C03               	skipc
  7209     1737  2F39               	goto	u5631
  7210     1738  2F3A               	goto	u5630
  7211     1739                     u5631:
  7212     1739  2F3B               	goto	l4196
  7213     173A                     u5630:
  7214     173A  2F71               	goto	l4208
  7215     173B                     l4196:
  7216                           
  7217                           ;main.c: 259: {;main.c: 260:    Lcd_Set_Cursor(1, 1);
  7218     173B  1283               	bcf	3,5	;RP0=0, select bank0
  7219     173C  1303               	bcf	3,6	;RP1=0, select bank0
  7220     173D  01A4               	clrf	Lcd_Set_Cursor@b
  7221     173E  0AA4               	incf	Lcd_Set_Cursor@b,f
  7222     173F  3001               	movlw	1
  7223     1740  160A  118A  2450  160A  118A  	fcall	_Lcd_Set_Cursor
  7224     1745                     l4198:
  7225                           
  7226                           ;main.c: 261: Lcd_Write_String("YAG BAKIMI YAPINIZ");
  7227     1745  30AA               	movlw	low (STR_6| (0+32768))
  7228     1746  1283               	bcf	3,5	;RP0=0, select bank0
  7229     1747  1303               	bcf	3,6	;RP1=0, select bank0
  7230     1748  00A5               	movwf	Lcd_Write_String@a
  7231     1749  3098               	movlw	high (STR_6| (0+32768))
  7232     174A  00A6               	movwf	Lcd_Write_String@a+1
  7233     174B  160A  118A  2336  160A  118A  	fcall	_Lcd_Write_String
  7234     1750                     l4200:
  7235                           
  7236                           ;main.c: 262: Lcd_Set_Cursor(2, 1);
  7237     1750  1283               	bcf	3,5	;RP0=0, select bank0
  7238     1751  1303               	bcf	3,6	;RP1=0, select bank0
  7239     1752  01A4               	clrf	Lcd_Set_Cursor@b
  7240     1753  0AA4               	incf	Lcd_Set_Cursor@b,f
  7241     1754  3002               	movlw	2
  7242     1755  160A  118A  2450  160A  118A  	fcall	_Lcd_Set_Cursor
  7243                           
  7244                           ;main.c: 263: Lcd_Write_String("OIL THE GEARS");
  7245     175A  30F9               	movlw	low (STR_7| (0+32768))
  7246     175B  1283               	bcf	3,5	;RP0=0, select bank0
  7247     175C  1303               	bcf	3,6	;RP1=0, select bank0
  7248     175D  00A5               	movwf	Lcd_Write_String@a
  7249     175E  3098               	movlw	high (STR_7| (0+32768))
  7250     175F  00A6               	movwf	Lcd_Write_String@a+1
  7251     1760  160A  118A  2336  160A  118A  	fcall	_Lcd_Write_String
  7252     1765                     l4202:
  7253                           
  7254                           ;main.c: 264: RA4 = 1;
  7255     1765  1283               	bcf	3,5	;RP0=0, select bank0
  7256     1766  1303               	bcf	3,6	;RP1=0, select bank0
  7257     1767  1605               	bsf	5,4	;volatile
  7258     1768                     l4204:
  7259                           
  7260                           ;main.c: 265: }
  7261     1768  3001               	movlw	1
  7262     1769  1683               	bsf	3,5	;RP0=1, select bank3
  7263     176A  1703               	bsf	3,6	;RP1=1, select bank3
  7264     176B  0792               	addwf	main@i_327^(0+384),f
  7265     176C  1803               	skipnc
  7266     176D  0A93               	incf	(main@i_327+1)^(0+384),f
  7267     176E  3000               	movlw	0
  7268     176F  0793               	addwf	(main@i_327+1)^(0+384),f
  7269     1770  2F2D               	goto	l4192
  7270     1771                     l4208:
  7271                           
  7272                           ;main.c: 266:     Lcd_Clear();
  7273     1771  160A  118A  21D7  160A  118A  	fcall	_Lcd_Clear
  7274     1776                     l4210:
  7275                           
  7276                           ;main.c: 267:     RA4 = 0;
  7277     1776  1283               	bcf	3,5	;RP0=0, select bank0
  7278     1777  1303               	bcf	3,6	;RP1=0, select bank0
  7279     1778  1205               	bcf	5,4	;volatile
  7280     1779                     l4212:
  7281                           
  7282                           ;main.c: 270: if ((currentTime.hours == 2000 || currentTime.hours == 2001 || currentTime
      +                          .hours == 2002) && currentTime.minutes == 0) {
  7283     1779  30D0               	movlw	208
  7284     177A  1683               	bsf	3,5	;RP0=1, select bank3
  7285     177B  1703               	bsf	3,6	;RP1=1, select bank3
  7286     177C  0620               	xorwf	_currentTime^(0+384),w
  7287     177D  3007               	movlw	7
  7288     177E  1903               	skipnz
  7289     177F  0621               	xorwf	(_currentTime+1)^(0+384),w
  7290     1780  1903               	btfsc	3,2
  7291     1781  2F83               	goto	u5641
  7292     1782  2F84               	goto	u5640
  7293     1783                     u5641:
  7294     1783  2F96               	goto	l4218
  7295     1784                     u5640:
  7296     1784                     l4214:
  7297     1784  30D1               	movlw	209
  7298     1785  0620               	xorwf	_currentTime^(0+384),w
  7299     1786  3007               	movlw	7
  7300     1787  1903               	skipnz
  7301     1788  0621               	xorwf	(_currentTime+1)^(0+384),w
  7302     1789  1903               	btfsc	3,2
  7303     178A  2F8C               	goto	u5651
  7304     178B  2F8D               	goto	u5650
  7305     178C                     u5651:
  7306     178C  2F96               	goto	l4218
  7307     178D                     u5650:
  7308     178D                     l4216:
  7309     178D  30D2               	movlw	210
  7310     178E  0620               	xorwf	_currentTime^(0+384),w
  7311     178F  3007               	movlw	7
  7312     1790  1903               	skipnz
  7313     1791  0621               	xorwf	(_currentTime+1)^(0+384),w
  7314     1792  1D03               	btfss	3,2
  7315     1793  2F95               	goto	u5661
  7316     1794  2F96               	goto	u5660
  7317     1795                     u5661:
  7318     1795  2FF1               	goto	l4244
  7319     1796                     u5660:
  7320     1796                     l4218:
  7321     1796  0822               	movf	(_currentTime^(0+384)+2),w
  7322     1797  0423               	iorwf	((_currentTime+1)^(0+384)+2),w
  7323     1798  1D03               	btfss	3,2
  7324     1799  2F9B               	goto	u5671
  7325     179A  2F9C               	goto	u5670
  7326     179B                     u5671:
  7327     179B  2FF1               	goto	l4244
  7328     179C                     u5670:
  7329     179C                     l4220:
  7330                           
  7331                           ;main.c: 272:     Lcd_Clear();
  7332     179C  160A  118A  21D7  160A  118A  	fcall	_Lcd_Clear
  7333     17A1                     l4222:
  7334                           
  7335                           ;main.c: 273:     int i=0 ;
  7336     17A1  1683               	bsf	3,5	;RP0=1, select bank3
  7337     17A2  1703               	bsf	3,6	;RP1=1, select bank3
  7338     17A3  0194               	clrf	main@i_330^(0+384)
  7339     17A4  0195               	clrf	(main@i_330+1)^(0+384)
  7340     17A5                     l4224:
  7341                           
  7342                           ;main.c: 274:     for(; i < 10; i++)
  7343     17A5  0815               	movf	(main@i_330+1)^(0+384),w
  7344     17A6  3A80               	xorlw	128
  7345     17A7  00FF               	movwf	btemp+1
  7346     17A8  3080               	movlw	128
  7347     17A9  027F               	subwf	btemp+1,w
  7348     17AA  1D03               	skipz
  7349     17AB  2FAE               	goto	u5685
  7350     17AC  300A               	movlw	10
  7351     17AD  0214               	subwf	main@i_330^(0+384),w
  7352     17AE                     u5685:
  7353     17AE  1C03               	skipc
  7354     17AF  2FB1               	goto	u5681
  7355     17B0  2FB2               	goto	u5680
  7356     17B1                     u5681:
  7357     17B1  2FB3               	goto	l4228
  7358     17B2                     u5680:
  7359     17B2  2FE9               	goto	l4240
  7360     17B3                     l4228:
  7361                           
  7362                           ;main.c: 275: {;main.c: 276:    Lcd_Set_Cursor(1, 1);
  7363     17B3  1283               	bcf	3,5	;RP0=0, select bank0
  7364     17B4  1303               	bcf	3,6	;RP1=0, select bank0
  7365     17B5  01A4               	clrf	Lcd_Set_Cursor@b
  7366     17B6  0AA4               	incf	Lcd_Set_Cursor@b,f
  7367     17B7  3001               	movlw	1
  7368     17B8  160A  118A  2450  160A  118A  	fcall	_Lcd_Set_Cursor
  7369     17BD                     l4230:
  7370                           
  7371                           ;main.c: 277: Lcd_Write_String("YAG BAKIMI YAPINIZ");
  7372     17BD  30AA               	movlw	low (STR_6| (0+32768))
  7373     17BE  1283               	bcf	3,5	;RP0=0, select bank0
  7374     17BF  1303               	bcf	3,6	;RP1=0, select bank0
  7375     17C0  00A5               	movwf	Lcd_Write_String@a
  7376     17C1  3098               	movlw	high (STR_6| (0+32768))
  7377     17C2  00A6               	movwf	Lcd_Write_String@a+1
  7378     17C3  160A  118A  2336  160A  118A  	fcall	_Lcd_Write_String
  7379     17C8                     l4232:
  7380                           
  7381                           ;main.c: 278: Lcd_Set_Cursor(2, 1);
  7382     17C8  1283               	bcf	3,5	;RP0=0, select bank0
  7383     17C9  1303               	bcf	3,6	;RP1=0, select bank0
  7384     17CA  01A4               	clrf	Lcd_Set_Cursor@b
  7385     17CB  0AA4               	incf	Lcd_Set_Cursor@b,f
  7386     17CC  3002               	movlw	2
  7387     17CD  160A  118A  2450  160A  118A  	fcall	_Lcd_Set_Cursor
  7388                           
  7389                           ;main.c: 279: Lcd_Write_String("OIL THE GEARS");
  7390     17D2  30F9               	movlw	low (STR_7| (0+32768))
  7391     17D3  1283               	bcf	3,5	;RP0=0, select bank0
  7392     17D4  1303               	bcf	3,6	;RP1=0, select bank0
  7393     17D5  00A5               	movwf	Lcd_Write_String@a
  7394     17D6  3098               	movlw	high (STR_7| (0+32768))
  7395     17D7  00A6               	movwf	Lcd_Write_String@a+1
  7396     17D8  160A  118A  2336  160A  118A  	fcall	_Lcd_Write_String
  7397     17DD                     l4234:
  7398                           
  7399                           ;main.c: 280: RA4 = 1;
  7400     17DD  1283               	bcf	3,5	;RP0=0, select bank0
  7401     17DE  1303               	bcf	3,6	;RP1=0, select bank0
  7402     17DF  1605               	bsf	5,4	;volatile
  7403     17E0                     l4236:
  7404                           
  7405                           ;main.c: 281: }
  7406     17E0  3001               	movlw	1
  7407     17E1  1683               	bsf	3,5	;RP0=1, select bank3
  7408     17E2  1703               	bsf	3,6	;RP1=1, select bank3
  7409     17E3  0794               	addwf	main@i_330^(0+384),f
  7410     17E4  1803               	skipnc
  7411     17E5  0A95               	incf	(main@i_330+1)^(0+384),f
  7412     17E6  3000               	movlw	0
  7413     17E7  0795               	addwf	(main@i_330+1)^(0+384),f
  7414     17E8  2FA5               	goto	l4224
  7415     17E9                     l4240:
  7416                           
  7417                           ;main.c: 282:     Lcd_Clear();
  7418     17E9  160A  118A  21D7  160A  118A  	fcall	_Lcd_Clear
  7419     17EE                     l4242:
  7420                           
  7421                           ;main.c: 283:     RA4 = 0;
  7422     17EE  1283               	bcf	3,5	;RP0=0, select bank0
  7423     17EF  1303               	bcf	3,6	;RP1=0, select bank0
  7424     17F0  1205               	bcf	5,4	;volatile
  7425     17F1                     l4244:
  7426                           
  7427                           ;main.c: 286: if ((currentTime.hours == 2500 || currentTime.hours == 2501 || currentTime
      +                          .hours == 2502) && currentTime.minutes == 0) {
  7428     17F1  30C4               	movlw	196
  7429     17F2  1683               	bsf	3,5	;RP0=1, select bank3
  7430     17F3  1703               	bsf	3,6	;RP1=1, select bank3
  7431     17F4  0620               	xorwf	_currentTime^(0+384),w
  7432     17F5  3009               	movlw	9
  7433     17F6  1903               	skipnz
  7434     17F7  0621               	xorwf	(_currentTime+1)^(0+384),w
  7435     17F8  1903               	btfsc	3,2
  7436     17F9  2FFD               	goto	u5691
  7437     17FA  120A  118A  283D   	goto	u5690
  7438     17FD                     u5691:
  7439     17FD  120A  118A  284F   	goto	l4250
  7440                           
  7441                           	psect	maintext_split_3
  7442     003D                     u5690:
  7443     003D                     l4246:
  7444     003D  30C5               	movlw	197
  7445     003E  0620               	xorwf	_currentTime^(0+384),w
  7446     003F  3009               	movlw	9
  7447     0040  1903               	skipnz
  7448     0041  0621               	xorwf	(_currentTime+1)^(0+384),w
  7449     0042  1903               	btfsc	3,2
  7450     0043  2845               	goto	u5701
  7451     0044  2846               	goto	u5700
  7452     0045                     u5701:
  7453     0045  284F               	goto	l4250
  7454     0046                     u5700:
  7455     0046                     l4248:
  7456     0046  30C6               	movlw	198
  7457     0047  0620               	xorwf	_currentTime^(0+384),w
  7458     0048  3009               	movlw	9
  7459     0049  1903               	skipnz
  7460     004A  0621               	xorwf	(_currentTime+1)^(0+384),w
  7461     004B  1D03               	btfss	3,2
  7462     004C  284E               	goto	u5711
  7463     004D  284F               	goto	u5710
  7464     004E                     u5711:
  7465     004E  28AA               	goto	l4276
  7466     004F                     u5710:
  7467     004F                     l4250:
  7468     004F  0822               	movf	(_currentTime^(0+384)+2),w
  7469     0050  0423               	iorwf	((_currentTime+1)^(0+384)+2),w
  7470     0051  1D03               	btfss	3,2
  7471     0052  2854               	goto	u5721
  7472     0053  2855               	goto	u5720
  7473     0054                     u5721:
  7474     0054  28AA               	goto	l4276
  7475     0055                     u5720:
  7476     0055                     l4252:
  7477                           
  7478                           ;main.c: 288:     Lcd_Clear();
  7479     0055  160A  118A  21D7  120A  118A  	fcall	_Lcd_Clear
  7480     005A                     l4254:
  7481                           
  7482                           ;main.c: 289:     int i=0 ;
  7483     005A  1683               	bsf	3,5	;RP0=1, select bank3
  7484     005B  1703               	bsf	3,6	;RP1=1, select bank3
  7485     005C  0196               	clrf	main@i_333^(0+384)
  7486     005D  0197               	clrf	(main@i_333+1)^(0+384)
  7487     005E                     l4256:
  7488                           
  7489                           ;main.c: 290:     for(; i < 10; i++)
  7490     005E  0817               	movf	(main@i_333+1)^(0+384),w
  7491     005F  3A80               	xorlw	128
  7492     0060  00FF               	movwf	btemp+1
  7493     0061  3080               	movlw	128
  7494     0062  027F               	subwf	btemp+1,w
  7495     0063  1D03               	skipz
  7496     0064  2867               	goto	u5735
  7497     0065  300A               	movlw	10
  7498     0066  0216               	subwf	main@i_333^(0+384),w
  7499     0067                     u5735:
  7500     0067  1C03               	skipc
  7501     0068  286A               	goto	u5731
  7502     0069  286B               	goto	u5730
  7503     006A                     u5731:
  7504     006A  286C               	goto	l4260
  7505     006B                     u5730:
  7506     006B  28A2               	goto	l4272
  7507     006C                     l4260:
  7508                           
  7509                           ;main.c: 291: {;main.c: 292:    Lcd_Set_Cursor(1, 1);
  7510     006C  1283               	bcf	3,5	;RP0=0, select bank0
  7511     006D  1303               	bcf	3,6	;RP1=0, select bank0
  7512     006E  01A4               	clrf	Lcd_Set_Cursor@b
  7513     006F  0AA4               	incf	Lcd_Set_Cursor@b,f
  7514     0070  3001               	movlw	1
  7515     0071  160A  118A  2450  120A  118A  	fcall	_Lcd_Set_Cursor
  7516     0076                     l4262:
  7517                           
  7518                           ;main.c: 293: Lcd_Write_String("YAG BAKIMI YAPINIZ");
  7519     0076  30AA               	movlw	low (STR_6| (0+32768))
  7520     0077  1283               	bcf	3,5	;RP0=0, select bank0
  7521     0078  1303               	bcf	3,6	;RP1=0, select bank0
  7522     0079  00A5               	movwf	Lcd_Write_String@a
  7523     007A  3098               	movlw	high (STR_6| (0+32768))
  7524     007B  00A6               	movwf	Lcd_Write_String@a+1
  7525     007C  160A  118A  2336  120A  118A  	fcall	_Lcd_Write_String
  7526     0081                     l4264:
  7527                           
  7528                           ;main.c: 294: Lcd_Set_Cursor(2, 1);
  7529     0081  1283               	bcf	3,5	;RP0=0, select bank0
  7530     0082  1303               	bcf	3,6	;RP1=0, select bank0
  7531     0083  01A4               	clrf	Lcd_Set_Cursor@b
  7532     0084  0AA4               	incf	Lcd_Set_Cursor@b,f
  7533     0085  3002               	movlw	2
  7534     0086  160A  118A  2450  120A  118A  	fcall	_Lcd_Set_Cursor
  7535                           
  7536                           ;main.c: 295: Lcd_Write_String("OIL THE GEARS");
  7537     008B  30F9               	movlw	low (STR_7| (0+32768))
  7538     008C  1283               	bcf	3,5	;RP0=0, select bank0
  7539     008D  1303               	bcf	3,6	;RP1=0, select bank0
  7540     008E  00A5               	movwf	Lcd_Write_String@a
  7541     008F  3098               	movlw	high (STR_7| (0+32768))
  7542     0090  00A6               	movwf	Lcd_Write_String@a+1
  7543     0091  160A  118A  2336  120A  118A  	fcall	_Lcd_Write_String
  7544     0096                     l4266:
  7545                           
  7546                           ;main.c: 296: RA4 = 1;
  7547     0096  1283               	bcf	3,5	;RP0=0, select bank0
  7548     0097  1303               	bcf	3,6	;RP1=0, select bank0
  7549     0098  1605               	bsf	5,4	;volatile
  7550     0099                     l4268:
  7551                           
  7552                           ;main.c: 297: }
  7553     0099  3001               	movlw	1
  7554     009A  1683               	bsf	3,5	;RP0=1, select bank3
  7555     009B  1703               	bsf	3,6	;RP1=1, select bank3
  7556     009C  0796               	addwf	main@i_333^(0+384),f
  7557     009D  1803               	skipnc
  7558     009E  0A97               	incf	(main@i_333+1)^(0+384),f
  7559     009F  3000               	movlw	0
  7560     00A0  0797               	addwf	(main@i_333+1)^(0+384),f
  7561     00A1  285E               	goto	l4256
  7562     00A2                     l4272:
  7563                           
  7564                           ;main.c: 298:     Lcd_Clear();
  7565     00A2  160A  118A  21D7  120A  118A  	fcall	_Lcd_Clear
  7566     00A7                     l4274:
  7567                           
  7568                           ;main.c: 299:     RA4 = 0;
  7569     00A7  1283               	bcf	3,5	;RP0=0, select bank0
  7570     00A8  1303               	bcf	3,6	;RP1=0, select bank0
  7571     00A9  1205               	bcf	5,4	;volatile
  7572     00AA                     l4276:
  7573                           
  7574                           ;main.c: 303:         sprintf(lcdText, "%5uh %02um", currentTime.hours, currentTime.minu
      +                          tes);
  7575     00AA  3014               	movlw	low (STR_18| (0+32768))
  7576     00AB  1283               	bcf	3,5	;RP0=0, select bank0
  7577     00AC  1303               	bcf	3,6	;RP1=0, select bank0
  7578     00AD  00B2               	movwf	sprintf@f
  7579     00AE  3099               	movlw	high (STR_18| (0+32768))
  7580     00AF  00B3               	movwf	sprintf@f+1
  7581     00B0  1683               	bsf	3,5	;RP0=1, select bank3
  7582     00B1  1703               	bsf	3,6	;RP1=1, select bank3
  7583     00B2  0821               	movf	(_currentTime+1)^(0+384),w
  7584     00B3  1283               	bcf	3,5	;RP0=0, select bank0
  7585     00B4  1303               	bcf	3,6	;RP1=0, select bank0
  7586     00B5  00B5               	movwf	?_sprintf+3
  7587     00B6  1683               	bsf	3,5	;RP0=1, select bank3
  7588     00B7  1703               	bsf	3,6	;RP1=1, select bank3
  7589     00B8  0820               	movf	_currentTime^(0+384),w
  7590     00B9  1283               	bcf	3,5	;RP0=0, select bank0
  7591     00BA  1303               	bcf	3,6	;RP1=0, select bank0
  7592     00BB  00B4               	movwf	?_sprintf+2
  7593     00BC  1683               	bsf	3,5	;RP0=1, select bank3
  7594     00BD  1703               	bsf	3,6	;RP1=1, select bank3
  7595     00BE  0823               	movf	((_currentTime+1)^(0+384)+2),w
  7596     00BF  1283               	bcf	3,5	;RP0=0, select bank0
  7597     00C0  1303               	bcf	3,6	;RP1=0, select bank0
  7598     00C1  00B7               	movwf	?_sprintf+5
  7599     00C2  1683               	bsf	3,5	;RP0=1, select bank3
  7600     00C3  1703               	bsf	3,6	;RP1=1, select bank3
  7601     00C4  0822               	movf	(_currentTime^(0+384)+2),w
  7602     00C5  1283               	bcf	3,5	;RP0=0, select bank0
  7603     00C6  1303               	bcf	3,6	;RP1=0, select bank0
  7604     00C7  00B6               	movwf	?_sprintf+4
  7605     00C8  30B4               	movlw	(low (main@lcdText| 0))& (0+255)
  7606     00C9  120A  158A  22C4  120A  118A  	fcall	_sprintf
  7607     00CE                     l4278:
  7608                           
  7609                           ;main.c: 306:      Lcd_Set_Cursor(1, 10);
  7610     00CE  300A               	movlw	10
  7611     00CF  1283               	bcf	3,5	;RP0=0, select bank0
  7612     00D0  1303               	bcf	3,6	;RP1=0, select bank0
  7613     00D1  00A4               	movwf	Lcd_Set_Cursor@b
  7614     00D2  3001               	movlw	1
  7615     00D3  160A  118A  2450  120A  118A  	fcall	_Lcd_Set_Cursor
  7616                           
  7617                           ;main.c: 307:      Lcd_Write_String("  ");
  7618     00D8  30D9               	movlw	low ((STR_28+12)| (0+32768))
  7619     00D9  1283               	bcf	3,5	;RP0=0, select bank0
  7620     00DA  1303               	bcf	3,6	;RP1=0, select bank0
  7621     00DB  00A5               	movwf	Lcd_Write_String@a
  7622     00DC  3098               	movlw	high ((STR_28+12)| (0+32768))
  7623     00DD  00A6               	movwf	Lcd_Write_String@a+1
  7624     00DE  160A  118A  2336  120A  118A  	fcall	_Lcd_Write_String
  7625     00E3                     l4280:
  7626                           
  7627                           ;main.c: 308:      Lcd_Set_Cursor(1, 11);
  7628     00E3  300B               	movlw	11
  7629     00E4  1283               	bcf	3,5	;RP0=0, select bank0
  7630     00E5  1303               	bcf	3,6	;RP1=0, select bank0
  7631     00E6  00A4               	movwf	Lcd_Set_Cursor@b
  7632     00E7  3001               	movlw	1
  7633     00E8  160A  118A  2450  120A  118A  	fcall	_Lcd_Set_Cursor
  7634     00ED                     l4282:
  7635                           
  7636                           ;main.c: 309:      Lcd_Write_String(lcdText);
  7637     00ED  30B4               	movlw	(low (main@lcdText| 0))& (0+255)
  7638     00EE  1283               	bcf	3,5	;RP0=0, select bank0
  7639     00EF  1303               	bcf	3,6	;RP1=0, select bank0
  7640     00F0  00A5               	movwf	Lcd_Write_String@a
  7641     00F1  3000               	movlw	0
  7642     00F2  00A6               	movwf	Lcd_Write_String@a+1
  7643     00F3  160A  118A  2336  120A  118A  	fcall	_Lcd_Write_String
  7644                           
  7645                           ;main.c: 312:         writeEEPROM(0x00, currentTime.hours);
  7646     00F8  3000               	movlw	0
  7647     00F9  1283               	bcf	3,5	;RP0=0, select bank0
  7648     00FA  1303               	bcf	3,6	;RP1=0, select bank0
  7649     00FB  00A0               	movwf	writeEEPROM@address
  7650     00FC  00A1               	movwf	writeEEPROM@address+1
  7651     00FD  1683               	bsf	3,5	;RP0=1, select bank3
  7652     00FE  1703               	bsf	3,6	;RP1=1, select bank3
  7653     00FF  0821               	movf	(_currentTime+1)^(0+384),w
  7654     0100  1283               	bcf	3,5	;RP0=0, select bank0
  7655     0101  1303               	bcf	3,6	;RP1=0, select bank0
  7656     0102  00A3               	movwf	writeEEPROM@data+1
  7657     0103  1683               	bsf	3,5	;RP0=1, select bank3
  7658     0104  1703               	bsf	3,6	;RP1=1, select bank3
  7659     0105  0820               	movf	_currentTime^(0+384),w
  7660     0106  1283               	bcf	3,5	;RP0=0, select bank0
  7661     0107  1303               	bcf	3,6	;RP1=0, select bank0
  7662     0108  00A2               	movwf	writeEEPROM@data
  7663     0109  160A  118A  2247  120A  118A  	fcall	_writeEEPROM
  7664                           
  7665                           ;main.c: 313:         writeEEPROM(0x01, currentTime.minutes);
  7666     010E  3001               	movlw	1
  7667     010F  1283               	bcf	3,5	;RP0=0, select bank0
  7668     0110  1303               	bcf	3,6	;RP1=0, select bank0
  7669     0111  00A0               	movwf	writeEEPROM@address
  7670     0112  3000               	movlw	0
  7671     0113  00A1               	movwf	writeEEPROM@address+1
  7672     0114  1683               	bsf	3,5	;RP0=1, select bank3
  7673     0115  1703               	bsf	3,6	;RP1=1, select bank3
  7674     0116  0823               	movf	((_currentTime+1)^(0+384)+2),w
  7675     0117  1283               	bcf	3,5	;RP0=0, select bank0
  7676     0118  1303               	bcf	3,6	;RP1=0, select bank0
  7677     0119  00A3               	movwf	writeEEPROM@data+1
  7678     011A  1683               	bsf	3,5	;RP0=1, select bank3
  7679     011B  1703               	bsf	3,6	;RP1=1, select bank3
  7680     011C  0822               	movf	(_currentTime^(0+384)+2),w
  7681     011D  1283               	bcf	3,5	;RP0=0, select bank0
  7682     011E  1303               	bcf	3,6	;RP1=0, select bank0
  7683     011F  00A2               	movwf	writeEEPROM@data
  7684     0120  160A  118A  2247  120A  118A  	fcall	_writeEEPROM
  7685                           
  7686                           ;main.c: 314:         writeEEPROM(0x02, currentTime.seconds);
  7687     0125  3002               	movlw	2
  7688     0126  1283               	bcf	3,5	;RP0=0, select bank0
  7689     0127  1303               	bcf	3,6	;RP1=0, select bank0
  7690     0128  00A0               	movwf	writeEEPROM@address
  7691     0129  3000               	movlw	0
  7692     012A  00A1               	movwf	writeEEPROM@address+1
  7693     012B  1683               	bsf	3,5	;RP0=1, select bank3
  7694     012C  1703               	bsf	3,6	;RP1=1, select bank3
  7695     012D  0825               	movf	((_currentTime+1)^(0+384)+4),w
  7696     012E  1283               	bcf	3,5	;RP0=0, select bank0
  7697     012F  1303               	bcf	3,6	;RP1=0, select bank0
  7698     0130  00A3               	movwf	writeEEPROM@data+1
  7699     0131  1683               	bsf	3,5	;RP0=1, select bank3
  7700     0132  1703               	bsf	3,6	;RP1=1, select bank3
  7701     0133  0824               	movf	(_currentTime^(0+384)+4),w
  7702     0134  1283               	bcf	3,5	;RP0=0, select bank0
  7703     0135  1303               	bcf	3,6	;RP1=0, select bank0
  7704     0136  00A2               	movwf	writeEEPROM@data
  7705     0137  160A  118A  2247  120A  118A  	fcall	_writeEEPROM
  7706     013C                     l4284:
  7707                           
  7708                           ;main.c: 317:     ADCON0bits.CHS = 0b0011;
  7709     013C  1283               	bcf	3,5	;RP0=0, select bank0
  7710     013D  1303               	bcf	3,6	;RP1=0, select bank0
  7711     013E  081F               	movf	31,w	;volatile
  7712     013F  39C7               	andlw	-57
  7713     0140  3818               	iorlw	24
  7714     0141  009F               	movwf	31	;volatile
  7715     0142                     l4286:
  7716                           
  7717                           ;main.c: 318:     ADCON0bits.GO = 1;
  7718     0142  151F               	bsf	31,2	;volatile
  7719     0143                     l211:	
  7720                           ;main.c: 319:     while (ADCON0bits.GO);
  7721                           
  7722     0143  191F               	btfsc	31,2	;volatile
  7723     0144  2946               	goto	u5741
  7724     0145  2947               	goto	u5740
  7725     0146                     u5741:
  7726     0146  2943               	goto	l211
  7727     0147                     u5740:
  7728     0147                     l4288:
  7729                           
  7730                           ;main.c: 320:     adcValue2 = (ADRESH << 8) | ADRESL;
  7731     0147  081E               	movf	30,w	;volatile
  7732     0148  1683               	bsf	3,5	;RP0=1, select bank1
  7733     0149  1303               	bcf	3,6	;RP1=0, select bank1
  7734     014A  00D7               	movwf	(main@adcValue2+1)^(0+128)
  7735     014B  081E               	movf	30,w	;volatile
  7736     014C  00D6               	movwf	main@adcValue2^(0+128)
  7737     014D                     l4290:
  7738                           
  7739                           ;main.c: 322:     unsigned int integerPart = adcValue2*3 ;
  7740     014D  0857               	movf	(main@adcValue2+1)^(0+128),w
  7741     014E  1283               	bcf	3,5	;RP0=0, select bank0
  7742     014F  1303               	bcf	3,6	;RP1=0, select bank0
  7743     0150  00A1               	movwf	___wmul@multiplier+1
  7744     0151  1683               	bsf	3,5	;RP0=1, select bank1
  7745     0152  1303               	bcf	3,6	;RP1=0, select bank1
  7746     0153  0856               	movf	main@adcValue2^(0+128),w
  7747     0154  1283               	bcf	3,5	;RP0=0, select bank0
  7748     0155  1303               	bcf	3,6	;RP1=0, select bank0
  7749     0156  00A0               	movwf	___wmul@multiplier
  7750     0157  3003               	movlw	3
  7751     0158  00A2               	movwf	___wmul@multiplicand
  7752     0159  3000               	movlw	0
  7753     015A  00A3               	movwf	___wmul@multiplicand+1
  7754     015B  160A  118A  22AA  120A  118A  	fcall	___wmul
  7755     0160  1283               	bcf	3,5	;RP0=0, select bank0
  7756     0161  1303               	bcf	3,6	;RP1=0, select bank0
  7757     0162  0821               	movf	?___wmul+1,w
  7758     0163  1683               	bsf	3,5	;RP0=1, select bank3
  7759     0164  1703               	bsf	3,6	;RP1=1, select bank3
  7760     0165  009B               	movwf	(main@integerPart+1)^(0+384)
  7761     0166  1283               	bcf	3,5	;RP0=0, select bank0
  7762     0167  1303               	bcf	3,6	;RP1=0, select bank0
  7763     0168  0820               	movf	?___wmul,w
  7764     0169  1683               	bsf	3,5	;RP0=1, select bank3
  7765     016A  1703               	bsf	3,6	;RP1=1, select bank3
  7766     016B  009A               	movwf	main@integerPart^(0+384)
  7767     016C                     l4292:
  7768                           
  7769                           ;main.c: 324:     int binler = integerPart/1000;
  7770     016C  30E8               	movlw	232
  7771     016D  1283               	bcf	3,5	;RP0=0, select bank0
  7772     016E  1303               	bcf	3,6	;RP1=0, select bank0
  7773     016F  00A6               	movwf	___lwdiv@divisor
  7774     0170  3003               	movlw	3
  7775     0171  00A7               	movwf	___lwdiv@divisor+1
  7776     0172  1683               	bsf	3,5	;RP0=1, select bank3
  7777     0173  1703               	bsf	3,6	;RP1=1, select bank3
  7778     0174  081B               	movf	(main@integerPart+1)^(0+384),w
  7779     0175  1283               	bcf	3,5	;RP0=0, select bank0
  7780     0176  1303               	bcf	3,6	;RP1=0, select bank0
  7781     0177  00A9               	movwf	___lwdiv@dividend+1
  7782     0178  1683               	bsf	3,5	;RP0=1, select bank3
  7783     0179  1703               	bsf	3,6	;RP1=1, select bank3
  7784     017A  081A               	movf	main@integerPart^(0+384),w
  7785     017B  1283               	bcf	3,5	;RP0=0, select bank0
  7786     017C  1303               	bcf	3,6	;RP1=0, select bank0
  7787     017D  00A8               	movwf	___lwdiv@dividend
  7788     017E  160A  118A  23C2  120A  118A  	fcall	___lwdiv
  7789     0183  1283               	bcf	3,5	;RP0=0, select bank0
  7790     0184  1303               	bcf	3,6	;RP1=0, select bank0
  7791     0185  0827               	movf	?___lwdiv+1,w
  7792     0186  1683               	bsf	3,5	;RP0=1, select bank3
  7793     0187  1703               	bsf	3,6	;RP1=1, select bank3
  7794     0188  0099               	movwf	(main@binler+1)^(0+384)
  7795     0189  1283               	bcf	3,5	;RP0=0, select bank0
  7796     018A  1303               	bcf	3,6	;RP1=0, select bank0
  7797     018B  0826               	movf	?___lwdiv,w
  7798     018C  1683               	bsf	3,5	;RP0=1, select bank3
  7799     018D  1703               	bsf	3,6	;RP1=1, select bank3
  7800     018E  0098               	movwf	main@binler^(0+384)
  7801     018F                     l4294:
  7802                           
  7803                           ;main.c: 325:     int yuzler = (integerPart-binler*1000)/100;
  7804     018F  3064               	movlw	100
  7805     0190  1283               	bcf	3,5	;RP0=0, select bank0
  7806     0191  1303               	bcf	3,6	;RP1=0, select bank0
  7807     0192  00A6               	movwf	___lwdiv@divisor
  7808     0193  3000               	movlw	0
  7809     0194  00A7               	movwf	___lwdiv@divisor+1
  7810     0195  1683               	bsf	3,5	;RP0=1, select bank3
  7811     0196  1703               	bsf	3,6	;RP1=1, select bank3
  7812     0197  0819               	movf	(main@binler+1)^(0+384),w
  7813     0198  1283               	bcf	3,5	;RP0=0, select bank0
  7814     0199  1303               	bcf	3,6	;RP1=0, select bank0
  7815     019A  00A1               	movwf	___wmul@multiplier+1
  7816     019B  1683               	bsf	3,5	;RP0=1, select bank3
  7817     019C  1703               	bsf	3,6	;RP1=1, select bank3
  7818     019D  0818               	movf	main@binler^(0+384),w
  7819     019E  1283               	bcf	3,5	;RP0=0, select bank0
  7820     019F  1303               	bcf	3,6	;RP1=0, select bank0
  7821     01A0  00A0               	movwf	___wmul@multiplier
  7822     01A1  3018               	movlw	24
  7823     01A2  00A2               	movwf	___wmul@multiplicand
  7824     01A3  30FC               	movlw	252
  7825     01A4  00A3               	movwf	___wmul@multiplicand+1
  7826     01A5  160A  118A  22AA  120A  118A  	fcall	___wmul
  7827     01AA  1683               	bsf	3,5	;RP0=1, select bank3
  7828     01AB  1703               	bsf	3,6	;RP1=1, select bank3
  7829     01AC  081A               	movf	main@integerPart^(0+384),w
  7830     01AD  1283               	bcf	3,5	;RP0=0, select bank0
  7831     01AE  1303               	bcf	3,6	;RP1=0, select bank0
  7832     01AF  0720               	addwf	?___wmul,w
  7833     01B0  00A8               	movwf	___lwdiv@dividend
  7834     01B1  1683               	bsf	3,5	;RP0=1, select bank3
  7835     01B2  1703               	bsf	3,6	;RP1=1, select bank3
  7836     01B3  081B               	movf	(main@integerPart+1)^(0+384),w
  7837     01B4  1803               	skipnc
  7838     01B5  0A1B               	incf	(main@integerPart+1)^(0+384),w
  7839     01B6  1283               	bcf	3,5	;RP0=0, select bank0
  7840     01B7  1303               	bcf	3,6	;RP1=0, select bank0
  7841     01B8  0721               	addwf	?___wmul+1,w
  7842     01B9  00A9               	movwf	___lwdiv@dividend+1
  7843     01BA  160A  118A  23C2  120A  118A  	fcall	___lwdiv
  7844     01BF  1283               	bcf	3,5	;RP0=0, select bank0
  7845     01C0  1303               	bcf	3,6	;RP1=0, select bank0
  7846     01C1  0827               	movf	?___lwdiv+1,w
  7847     01C2  1683               	bsf	3,5	;RP0=1, select bank1
  7848     01C3  1303               	bcf	3,6	;RP1=0, select bank1
  7849     01C4  00EB               	movwf	(main@yuzler+1)^(0+128)
  7850     01C5  1283               	bcf	3,5	;RP0=0, select bank0
  7851     01C6  1303               	bcf	3,6	;RP1=0, select bank0
  7852     01C7  0826               	movf	?___lwdiv,w
  7853     01C8  1683               	bsf	3,5	;RP0=1, select bank1
  7854     01C9  1303               	bcf	3,6	;RP1=0, select bank1
  7855     01CA  00EA               	movwf	main@yuzler^(0+128)
  7856     01CB                     l4296:
  7857                           
  7858                           ;main.c: 326:     int onlar = (integerPart-binler*1000-yuzler*100)/10;
  7859     01CB  300A               	movlw	10
  7860     01CC  1283               	bcf	3,5	;RP0=0, select bank0
  7861     01CD  1303               	bcf	3,6	;RP1=0, select bank0
  7862     01CE  00A6               	movwf	___lwdiv@divisor
  7863     01CF  3000               	movlw	0
  7864     01D0  00A7               	movwf	___lwdiv@divisor+1
  7865     01D1  1683               	bsf	3,5	;RP0=1, select bank3
  7866     01D2  1703               	bsf	3,6	;RP1=1, select bank3
  7867     01D3  0819               	movf	(main@binler+1)^(0+384),w
  7868     01D4  1283               	bcf	3,5	;RP0=0, select bank0
  7869     01D5  1303               	bcf	3,6	;RP1=0, select bank0
  7870     01D6  00A1               	movwf	___wmul@multiplier+1
  7871     01D7  1683               	bsf	3,5	;RP0=1, select bank3
  7872     01D8  1703               	bsf	3,6	;RP1=1, select bank3
  7873     01D9  0818               	movf	main@binler^(0+384),w
  7874     01DA  1283               	bcf	3,5	;RP0=0, select bank0
  7875     01DB  1303               	bcf	3,6	;RP1=0, select bank0
  7876     01DC  00A0               	movwf	___wmul@multiplier
  7877     01DD  3018               	movlw	24
  7878     01DE  00A2               	movwf	___wmul@multiplicand
  7879     01DF  30FC               	movlw	252
  7880     01E0  00A3               	movwf	___wmul@multiplicand+1
  7881     01E1  160A  118A  22AA  120A  118A  	fcall	___wmul
  7882     01E6  1283               	bcf	3,5	;RP0=0, select bank0
  7883     01E7  1303               	bcf	3,6	;RP1=0, select bank0
  7884     01E8  0820               	movf	?___wmul,w
  7885     01E9  00D4               	movwf	??_main
  7886     01EA  0821               	movf	?___wmul+1,w
  7887     01EB  00D5               	movwf	??_main+1
  7888     01EC  1683               	bsf	3,5	;RP0=1, select bank1
  7889     01ED  1303               	bcf	3,6	;RP1=0, select bank1
  7890     01EE  086B               	movf	(main@yuzler+1)^(0+128),w
  7891     01EF  1283               	bcf	3,5	;RP0=0, select bank0
  7892     01F0  1303               	bcf	3,6	;RP1=0, select bank0
  7893     01F1  00A1               	movwf	___wmul@multiplier+1
  7894     01F2  1683               	bsf	3,5	;RP0=1, select bank1
  7895     01F3  1303               	bcf	3,6	;RP1=0, select bank1
  7896     01F4  086A               	movf	main@yuzler^(0+128),w
  7897     01F5  1283               	bcf	3,5	;RP0=0, select bank0
  7898     01F6  1303               	bcf	3,6	;RP1=0, select bank0
  7899     01F7  00A0               	movwf	___wmul@multiplier
  7900     01F8  309C               	movlw	156
  7901     01F9  00A2               	movwf	___wmul@multiplicand
  7902     01FA  30FF               	movlw	255
  7903     01FB  00A3               	movwf	___wmul@multiplicand+1
  7904     01FC  160A  118A  22AA  120A  118A  	fcall	___wmul
  7905     0201  1283               	bcf	3,5	;RP0=0, select bank0
  7906     0202  1303               	bcf	3,6	;RP1=0, select bank0
  7907     0203  0820               	movf	?___wmul,w
  7908     0204  0754               	addwf	??_main,w
  7909     0205  00D6               	movwf	??_main+2
  7910     0206  0821               	movf	?___wmul+1,w
  7911     0207  1803               	skipnc
  7912     0208  0A21               	incf	?___wmul+1,w
  7913     0209  0755               	addwf	??_main+1,w
  7914     020A  00D7               	movwf	??_main+3
  7915     020B  1683               	bsf	3,5	;RP0=1, select bank3
  7916     020C  1703               	bsf	3,6	;RP1=1, select bank3
  7917     020D  081A               	movf	main@integerPart^(0+384),w
  7918     020E  1283               	bcf	3,5	;RP0=0, select bank0
  7919     020F  1303               	bcf	3,6	;RP1=0, select bank0
  7920     0210  0756               	addwf	??_main+2,w
  7921     0211  00A8               	movwf	___lwdiv@dividend
  7922     0212  1683               	bsf	3,5	;RP0=1, select bank3
  7923     0213  1703               	bsf	3,6	;RP1=1, select bank3
  7924     0214  081B               	movf	(main@integerPart+1)^(0+384),w
  7925     0215  1803               	skipnc
  7926     0216  0A1B               	incf	(main@integerPart+1)^(0+384),w
  7927     0217  1283               	bcf	3,5	;RP0=0, select bank0
  7928     0218  1303               	bcf	3,6	;RP1=0, select bank0
  7929     0219  0757               	addwf	??_main+3,w
  7930     021A  00A9               	movwf	___lwdiv@dividend+1
  7931     021B  160A  118A  23C2  120A  118A  	fcall	___lwdiv
  7932     0220  1283               	bcf	3,5	;RP0=0, select bank0
  7933     0221  1303               	bcf	3,6	;RP1=0, select bank0
  7934     0222  0827               	movf	?___lwdiv+1,w
  7935     0223  1683               	bsf	3,5	;RP0=1, select bank1
  7936     0224  1303               	bcf	3,6	;RP1=0, select bank1
  7937     0225  00DB               	movwf	(main@onlar+1)^(0+128)
  7938     0226  1283               	bcf	3,5	;RP0=0, select bank0
  7939     0227  1303               	bcf	3,6	;RP1=0, select bank0
  7940     0228  0826               	movf	?___lwdiv,w
  7941     0229  1683               	bsf	3,5	;RP0=1, select bank1
  7942     022A  1303               	bcf	3,6	;RP1=0, select bank1
  7943     022B  00DA               	movwf	main@onlar^(0+128)
  7944     022C                     l4298:
  7945                           
  7946                           ;main.c: 327:     int birler = integerPart%10;
  7947     022C  300A               	movlw	10
  7948     022D  1283               	bcf	3,5	;RP0=0, select bank0
  7949     022E  1303               	bcf	3,6	;RP1=0, select bank0
  7950     022F  00AD               	movwf	___lwmod@divisor
  7951     0230  3000               	movlw	0
  7952     0231  00AE               	movwf	___lwmod@divisor+1
  7953     0232  1683               	bsf	3,5	;RP0=1, select bank3
  7954     0233  1703               	bsf	3,6	;RP1=1, select bank3
  7955     0234  081B               	movf	(main@integerPart+1)^(0+384),w
  7956     0235  1283               	bcf	3,5	;RP0=0, select bank0
  7957     0236  1303               	bcf	3,6	;RP1=0, select bank0
  7958     0237  00B0               	movwf	___lwmod@dividend+1
  7959     0238  1683               	bsf	3,5	;RP0=1, select bank3
  7960     0239  1703               	bsf	3,6	;RP1=1, select bank3
  7961     023A  081A               	movf	main@integerPart^(0+384),w
  7962     023B  1283               	bcf	3,5	;RP0=0, select bank0
  7963     023C  1303               	bcf	3,6	;RP1=0, select bank0
  7964     023D  00AF               	movwf	___lwmod@dividend
  7965     023E  160A  118A  22FA  120A  118A  	fcall	___lwmod
  7966     0243  1283               	bcf	3,5	;RP0=0, select bank0
  7967     0244  1303               	bcf	3,6	;RP1=0, select bank0
  7968     0245  082E               	movf	?___lwmod+1,w
  7969     0246  1683               	bsf	3,5	;RP0=1, select bank1
  7970     0247  1303               	bcf	3,6	;RP1=0, select bank1
  7971     0248  00DD               	movwf	(main@birler+1)^(0+128)
  7972     0249  1283               	bcf	3,5	;RP0=0, select bank0
  7973     024A  1303               	bcf	3,6	;RP1=0, select bank0
  7974     024B  082D               	movf	?___lwmod,w
  7975     024C  1683               	bsf	3,5	;RP0=1, select bank1
  7976     024D  1303               	bcf	3,6	;RP1=0, select bank1
  7977     024E  00DC               	movwf	main@birler^(0+128)
  7978     024F                     l4300:
  7979                           
  7980                           ;main.c: 333:         ADCON0bits.CHS = 0b0001;
  7981     024F  1283               	bcf	3,5	;RP0=0, select bank0
  7982     0250  1303               	bcf	3,6	;RP1=0, select bank0
  7983     0251  081F               	movf	31,w	;volatile
  7984     0252  39C7               	andlw	-57
  7985     0253  3808               	iorlw	8
  7986     0254  009F               	movwf	31	;volatile
  7987     0255                     l4302:
  7988                           
  7989                           ;main.c: 334:         _delay((unsigned long)((50)*(4000000/4000000.0)));
  7990     0255  300F               	movlw	15
  7991     0256  1283               	bcf	3,5	;RP0=0, select bank0
  7992     0257  1303               	bcf	3,6	;RP1=0, select bank0
  7993     0258  00D4               	movwf	??_main
  7994     0259                     u6097:
  7995     0259  0BD4               	decfsz	??_main,f
  7996     025A  2A59               	goto	u6097
  7997     025B  2A5C               	nop2
  7998     025C                     l4304:
  7999                           
  8000                           ;main.c: 335:         ADCON0bits.GO = 1;
  8001     025C  1283               	bcf	3,5	;RP0=0, select bank0
  8002     025D  1303               	bcf	3,6	;RP1=0, select bank0
  8003     025E  151F               	bsf	31,2	;volatile
  8004     025F                     l214:	
  8005                           ;main.c: 336:         while (ADCON0bits.GO);
  8006                           
  8007     025F  191F               	btfsc	31,2	;volatile
  8008     0260  2A62               	goto	u5751
  8009     0261  2A63               	goto	u5750
  8010     0262                     u5751:
  8011     0262  2A5F               	goto	l214
  8012     0263                     u5750:
  8013     0263                     l4306:
  8014                           
  8015                           ;main.c: 337:         adcValue1 = (ADRESH << 8) | ADRESL;
  8016     0263  1683               	bsf	3,5	;RP0=1, select bank1
  8017     0264  1303               	bcf	3,6	;RP1=0, select bank1
  8018     0265  081E               	movf	30,w	;volatile
  8019     0266  1283               	bcf	3,5	;RP0=0, select bank0
  8020     0267  1303               	bcf	3,6	;RP1=0, select bank0
  8021     0268  00D4               	movwf	??_main
  8022     0269  01D5               	clrf	??_main+1
  8023     026A  081E               	movf	30,w	;volatile
  8024     026B  00D6               	movwf	??_main+2
  8025     026C  01D7               	clrf	??_main+3
  8026     026D  0856               	movf	??_main+2,w
  8027     026E  00D7               	movwf	??_main+3
  8028     026F  01D6               	clrf	??_main+2
  8029     0270  0854               	movf	??_main,w
  8030     0271  0456               	iorwf	??_main+2,w
  8031     0272  00A0               	movwf	___xxtofl@val
  8032     0273  0855               	movf	??_main+1,w
  8033     0274  0457               	iorwf	??_main+3,w
  8034     0275  00A1               	movwf	___xxtofl@val+1
  8035     0276  01A2               	clrf	___xxtofl@val+2
  8036     0277  1BA1               	btfsc	___xxtofl@val+1,7
  8037     0278  03A2               	decf	___xxtofl@val+2,f
  8038     0279  0822               	movf	___xxtofl@val+2,w
  8039     027A  00A3               	movwf	___xxtofl@val+3
  8040     027B  3001               	movlw	1
  8041     027C  120A  158A  203B  120A  118A  	fcall	___xxtofl
  8042     0281  1283               	bcf	3,5	;RP0=0, select bank0
  8043     0282  1303               	bcf	3,6	;RP1=0, select bank0
  8044     0283  0823               	movf	?___xxtofl+3,w
  8045     0284  1683               	bsf	3,5	;RP0=1, select bank1
  8046     0285  1303               	bcf	3,6	;RP1=0, select bank1
  8047     0286  00E9               	movwf	(main@adcValue1+3)^(0+128)
  8048     0287  1283               	bcf	3,5	;RP0=0, select bank0
  8049     0288  1303               	bcf	3,6	;RP1=0, select bank0
  8050     0289  0822               	movf	?___xxtofl+2,w
  8051     028A  1683               	bsf	3,5	;RP0=1, select bank1
  8052     028B  1303               	bcf	3,6	;RP1=0, select bank1
  8053     028C  00E8               	movwf	(main@adcValue1+2)^(0+128)
  8054     028D  1283               	bcf	3,5	;RP0=0, select bank0
  8055     028E  1303               	bcf	3,6	;RP1=0, select bank0
  8056     028F  0821               	movf	?___xxtofl+1,w
  8057     0290  1683               	bsf	3,5	;RP0=1, select bank1
  8058     0291  1303               	bcf	3,6	;RP1=0, select bank1
  8059     0292  00E7               	movwf	(main@adcValue1+1)^(0+128)
  8060     0293  1283               	bcf	3,5	;RP0=0, select bank0
  8061     0294  1303               	bcf	3,6	;RP1=0, select bank0
  8062     0295  0820               	movf	?___xxtofl,w
  8063     0296  1683               	bsf	3,5	;RP0=1, select bank1
  8064     0297  1303               	bcf	3,6	;RP1=0, select bank1
  8065     0298  00E6               	movwf	main@adcValue1^(0+128)
  8066     0299                     l4308:
  8067                           
  8068                           ;main.c: 338:         if (RE2==0 && RC0== 0 ){
  8069     0299  1283               	bcf	3,5	;RP0=0, select bank0
  8070     029A  1303               	bcf	3,6	;RP1=0, select bank0
  8071     029B  1909               	btfsc	9,2	;volatile
  8072     029C  2A9E               	goto	u5761
  8073     029D  2A9F               	goto	u5760
  8074     029E                     u5761:
  8075     029E  2ACD               	goto	l217
  8076     029F                     u5760:
  8077     029F                     l4310:
  8078     029F  1807               	btfsc	7,0	;volatile
  8079     02A0  2AA2               	goto	u5771
  8080     02A1  2AA3               	goto	u5770
  8081     02A2                     u5771:
  8082     02A2  2ACD               	goto	l217
  8083     02A3                     u5770:
  8084     02A3                     l4312:
  8085                           
  8086                           ;main.c: 339:         displayValue = (int)adcValue1 >> 1;
  8087     02A3  1683               	bsf	3,5	;RP0=1, select bank1
  8088     02A4  1303               	bcf	3,6	;RP1=0, select bank1
  8089     02A5  0869               	movf	(main@adcValue1+3)^(0+128),w
  8090     02A6  1283               	bcf	3,5	;RP0=0, select bank0
  8091     02A7  1303               	bcf	3,6	;RP1=0, select bank0
  8092     02A8  00A3               	movwf	___fltol@f1+3
  8093     02A9  1683               	bsf	3,5	;RP0=1, select bank1
  8094     02AA  1303               	bcf	3,6	;RP1=0, select bank1
  8095     02AB  0868               	movf	(main@adcValue1+2)^(0+128),w
  8096     02AC  1283               	bcf	3,5	;RP0=0, select bank0
  8097     02AD  1303               	bcf	3,6	;RP1=0, select bank0
  8098     02AE  00A2               	movwf	___fltol@f1+2
  8099     02AF  1683               	bsf	3,5	;RP0=1, select bank1
  8100     02B0  1303               	bcf	3,6	;RP1=0, select bank1
  8101     02B1  0867               	movf	(main@adcValue1+1)^(0+128),w
  8102     02B2  1283               	bcf	3,5	;RP0=0, select bank0
  8103     02B3  1303               	bcf	3,6	;RP1=0, select bank0
  8104     02B4  00A1               	movwf	___fltol@f1+1
  8105     02B5  1683               	bsf	3,5	;RP0=1, select bank1
  8106     02B6  1303               	bcf	3,6	;RP1=0, select bank1
  8107     02B7  0866               	movf	main@adcValue1^(0+128),w
  8108     02B8  1283               	bcf	3,5	;RP0=0, select bank0
  8109     02B9  1303               	bcf	3,6	;RP1=0, select bank0
  8110     02BA  00A0               	movwf	___fltol@f1
  8111     02BB  160A  118A  24FF  120A  118A  	fcall	___fltol
  8112     02C0  1283               	bcf	3,5	;RP0=0, select bank0
  8113     02C1  1303               	bcf	3,6	;RP1=0, select bank0
  8114     02C2  0D21               	rlf	?___fltol+1,w
  8115     02C3  0C21               	rrf	?___fltol+1,w
  8116     02C4  1683               	bsf	3,5	;RP0=1, select bank3
  8117     02C5  1703               	bsf	3,6	;RP1=1, select bank3
  8118     02C6  009F               	movwf	(main@displayValue+1)^(0+384)
  8119     02C7  1283               	bcf	3,5	;RP0=0, select bank0
  8120     02C8  1303               	bcf	3,6	;RP1=0, select bank0
  8121     02C9  0C20               	rrf	?___fltol,w
  8122     02CA  1683               	bsf	3,5	;RP0=1, select bank3
  8123     02CB  1703               	bsf	3,6	;RP1=1, select bank3
  8124     02CC  009E               	movwf	main@displayValue^(0+384)
  8125     02CD                     l217:	
  8126                           ;main.c: 340:         }
  8127                           
  8128                           
  8129                           ;main.c: 341:         float gostermeliklcd = adcValue1 / 1024 * 1000;
  8130     02CD  3044               	movlw	68
  8131     02CE  1283               	bcf	3,5	;RP0=0, select bank0
  8132     02CF  1303               	bcf	3,6	;RP1=0, select bank0
  8133     02D0  00BD               	movwf	___flmul@b+3
  8134     02D1  307A               	movlw	122
  8135     02D2  00BC               	movwf	___flmul@b+2
  8136     02D3  3000               	movlw	0
  8137     02D4  00BB               	movwf	___flmul@b+1
  8138     02D5  3000               	movlw	0
  8139     02D6  00BA               	movwf	___flmul@b
  8140     02D7  3044               	movlw	68
  8141     02D8  00A3               	movwf	___fldiv@a+3
  8142     02D9  3080               	movlw	128
  8143     02DA  00A2               	movwf	___fldiv@a+2
  8144     02DB  3000               	movlw	0
  8145     02DC  00A1               	movwf	___fldiv@a+1
  8146     02DD  3000               	movlw	0
  8147     02DE  00A0               	movwf	___fldiv@a
  8148     02DF  1683               	bsf	3,5	;RP0=1, select bank1
  8149     02E0  1303               	bcf	3,6	;RP1=0, select bank1
  8150     02E1  0869               	movf	(main@adcValue1+3)^(0+128),w
  8151     02E2  1283               	bcf	3,5	;RP0=0, select bank0
  8152     02E3  1303               	bcf	3,6	;RP1=0, select bank0
  8153     02E4  00A7               	movwf	___fldiv@b+3
  8154     02E5  1683               	bsf	3,5	;RP0=1, select bank1
  8155     02E6  1303               	bcf	3,6	;RP1=0, select bank1
  8156     02E7  0868               	movf	(main@adcValue1+2)^(0+128),w
  8157     02E8  1283               	bcf	3,5	;RP0=0, select bank0
  8158     02E9  1303               	bcf	3,6	;RP1=0, select bank0
  8159     02EA  00A6               	movwf	___fldiv@b+2
  8160     02EB  1683               	bsf	3,5	;RP0=1, select bank1
  8161     02EC  1303               	bcf	3,6	;RP1=0, select bank1
  8162     02ED  0867               	movf	(main@adcValue1+1)^(0+128),w
  8163     02EE  1283               	bcf	3,5	;RP0=0, select bank0
  8164     02EF  1303               	bcf	3,6	;RP1=0, select bank0
  8165     02F0  00A5               	movwf	___fldiv@b+1
  8166     02F1  1683               	bsf	3,5	;RP0=1, select bank1
  8167     02F2  1303               	bcf	3,6	;RP1=0, select bank1
  8168     02F3  0866               	movf	main@adcValue1^(0+128),w
  8169     02F4  1283               	bcf	3,5	;RP0=0, select bank0
  8170     02F5  1303               	bcf	3,6	;RP1=0, select bank0
  8171     02F6  00A4               	movwf	___fldiv@b
  8172     02F7  120A  158A  20F5  120A  118A  	fcall	___fldiv
  8173     02FC  1283               	bcf	3,5	;RP0=0, select bank0
  8174     02FD  1303               	bcf	3,6	;RP1=0, select bank0
  8175     02FE  0823               	movf	?___fldiv+3,w
  8176     02FF  00C1               	movwf	___flmul@a+3
  8177     0300  0822               	movf	?___fldiv+2,w
  8178     0301  00C0               	movwf	___flmul@a+2
  8179     0302  0821               	movf	?___fldiv+1,w
  8180     0303  00BF               	movwf	___flmul@a+1
  8181     0304  0820               	movf	?___fldiv,w
  8182     0305  00BE               	movwf	___flmul@a
  8183     0306  120A  158A  24BB  120A  118A  	fcall	___flmul
  8184     030B  1283               	bcf	3,5	;RP0=0, select bank0
  8185     030C  1303               	bcf	3,6	;RP1=0, select bank0
  8186     030D  083D               	movf	?___flmul+3,w
  8187     030E  1683               	bsf	3,5	;RP0=1, select bank1
  8188     030F  1303               	bcf	3,6	;RP1=0, select bank1
  8189     0310  00D0               	movwf	(main@gostermeliklcd+3)^(0+128)
  8190     0311  1283               	bcf	3,5	;RP0=0, select bank0
  8191     0312  1303               	bcf	3,6	;RP1=0, select bank0
  8192     0313  083C               	movf	?___flmul+2,w
  8193     0314  1683               	bsf	3,5	;RP0=1, select bank1
  8194     0315  1303               	bcf	3,6	;RP1=0, select bank1
  8195     0316  00CF               	movwf	(main@gostermeliklcd+2)^(0+128)
  8196     0317  1283               	bcf	3,5	;RP0=0, select bank0
  8197     0318  1303               	bcf	3,6	;RP1=0, select bank0
  8198     0319  083B               	movf	?___flmul+1,w
  8199     031A  1683               	bsf	3,5	;RP0=1, select bank1
  8200     031B  1303               	bcf	3,6	;RP1=0, select bank1
  8201     031C  00CE               	movwf	(main@gostermeliklcd+1)^(0+128)
  8202     031D  1283               	bcf	3,5	;RP0=0, select bank0
  8203     031E  1303               	bcf	3,6	;RP1=0, select bank0
  8204     031F  083A               	movf	?___flmul,w
  8205     0320  1683               	bsf	3,5	;RP0=1, select bank1
  8206     0321  1303               	bcf	3,6	;RP1=0, select bank1
  8207     0322  00CD               	movwf	main@gostermeliklcd^(0+128)
  8208     0323                     l4314:
  8209                           
  8210                           ;main.c: 344:     ADCON0bits.CHS = 0b0010;
  8211     0323  1283               	bcf	3,5	;RP0=0, select bank0
  8212     0324  1303               	bcf	3,6	;RP1=0, select bank0
  8213     0325  081F               	movf	31,w	;volatile
  8214     0326  39C7               	andlw	-57
  8215     0327  3810               	iorlw	16
  8216     0328  009F               	movwf	31	;volatile
  8217     0329                     l4316:
  8218                           
  8219                           ;main.c: 345:     ADCON0bits.GO = 1;
  8220     0329  151F               	bsf	31,2	;volatile
  8221     032A                     l218:	
  8222                           ;main.c: 346:     while (ADCON0bits.GO);
  8223                           
  8224     032A  191F               	btfsc	31,2	;volatile
  8225     032B  2B2D               	goto	u5781
  8226     032C  2B2E               	goto	u5780
  8227     032D                     u5781:
  8228     032D  2B2A               	goto	l218
  8229     032E                     u5780:
  8230     032E                     l4318:
  8231                           
  8232                           ;main.c: 347:     adcValue3 = (ADRESH << 8) | ADRESL;
  8233     032E  081E               	movf	30,w	;volatile
  8234     032F  1683               	bsf	3,5	;RP0=1, select bank1
  8235     0330  1303               	bcf	3,6	;RP1=0, select bank1
  8236     0331  00D9               	movwf	(main@adcValue3+1)^(0+128)
  8237     0332  081E               	movf	30,w	;volatile
  8238     0333  00D8               	movwf	main@adcValue3^(0+128)
  8239     0334                     l4320:
  8240                           
  8241                           ;main.c: 348:     unsigned int rpmValue = adcValue3 >> 1;
  8242     0334  0859               	movf	(main@adcValue3+1)^(0+128),w
  8243     0335  1283               	bcf	3,5	;RP0=0, select bank0
  8244     0336  1303               	bcf	3,6	;RP1=0, select bank0
  8245     0337  00D5               	movwf	??_main+1
  8246     0338  1683               	bsf	3,5	;RP0=1, select bank1
  8247     0339  1303               	bcf	3,6	;RP1=0, select bank1
  8248     033A  0858               	movf	main@adcValue3^(0+128),w
  8249     033B  1283               	bcf	3,5	;RP0=0, select bank0
  8250     033C  1303               	bcf	3,6	;RP1=0, select bank0
  8251     033D  00D4               	movwf	??_main
  8252     033E  1003               	clrc
  8253     033F  0CD5               	rrf	??_main+1,f
  8254     0340  0CD4               	rrf	??_main,f
  8255     0341  0854               	movf	??_main,w
  8256     0342  00EC               	movwf	main@rpmValue
  8257     0343  0855               	movf	??_main+1,w
  8258     0344  00ED               	movwf	main@rpmValue+1
  8259     0345                     l4322:
  8260                           
  8261                           ;main.c: 351:         Lcd_Set_Cursor(2, 1);
  8262     0345  01A4               	clrf	Lcd_Set_Cursor@b
  8263     0346  0AA4               	incf	Lcd_Set_Cursor@b,f
  8264     0347  3002               	movlw	2
  8265     0348  160A  118A  2450  120A  118A  	fcall	_Lcd_Set_Cursor
  8266     034D                     l4324:
  8267                           
  8268                           ;main.c: 352:         Lcd_Write_String("FeedRate:");
  8269     034D  301F               	movlw	low (STR_20| (0+32768))
  8270     034E  1283               	bcf	3,5	;RP0=0, select bank0
  8271     034F  1303               	bcf	3,6	;RP1=0, select bank0
  8272     0350  00A5               	movwf	Lcd_Write_String@a
  8273     0351  3099               	movlw	high (STR_20| (0+32768))
  8274     0352  00A6               	movwf	Lcd_Write_String@a+1
  8275     0353  160A  118A  2336  120A  118A  	fcall	_Lcd_Write_String
  8276     0358                     l4326:
  8277                           
  8278                           ;main.c: 353:         char adcString1[4];;main.c: 354:         sprintf(adcString1, "%003
      +                          u", (int)gostermeliklcd);
  8279     0358  305F               	movlw	low (STR_21| (0+32768))
  8280     0359  1283               	bcf	3,5	;RP0=0, select bank0
  8281     035A  1303               	bcf	3,6	;RP1=0, select bank0
  8282     035B  00B2               	movwf	sprintf@f
  8283     035C  3099               	movlw	high (STR_21| (0+32768))
  8284     035D  00B3               	movwf	sprintf@f+1
  8285     035E  1683               	bsf	3,5	;RP0=1, select bank1
  8286     035F  1303               	bcf	3,6	;RP1=0, select bank1
  8287     0360  0850               	movf	(main@gostermeliklcd+3)^(0+128),w
  8288     0361  1283               	bcf	3,5	;RP0=0, select bank0
  8289     0362  1303               	bcf	3,6	;RP1=0, select bank0
  8290     0363  00A3               	movwf	___fltol@f1+3
  8291     0364  1683               	bsf	3,5	;RP0=1, select bank1
  8292     0365  1303               	bcf	3,6	;RP1=0, select bank1
  8293     0366  084F               	movf	(main@gostermeliklcd+2)^(0+128),w
  8294     0367  1283               	bcf	3,5	;RP0=0, select bank0
  8295     0368  1303               	bcf	3,6	;RP1=0, select bank0
  8296     0369  00A2               	movwf	___fltol@f1+2
  8297     036A  1683               	bsf	3,5	;RP0=1, select bank1
  8298     036B  1303               	bcf	3,6	;RP1=0, select bank1
  8299     036C  084E               	movf	(main@gostermeliklcd+1)^(0+128),w
  8300     036D  1283               	bcf	3,5	;RP0=0, select bank0
  8301     036E  1303               	bcf	3,6	;RP1=0, select bank0
  8302     036F  00A1               	movwf	___fltol@f1+1
  8303     0370  1683               	bsf	3,5	;RP0=1, select bank1
  8304     0371  1303               	bcf	3,6	;RP1=0, select bank1
  8305     0372  084D               	movf	main@gostermeliklcd^(0+128),w
  8306     0373  1283               	bcf	3,5	;RP0=0, select bank0
  8307     0374  1303               	bcf	3,6	;RP1=0, select bank0
  8308     0375  00A0               	movwf	___fltol@f1
  8309     0376  160A  118A  24FF  120A  118A  	fcall	___fltol
  8310     037B  1283               	bcf	3,5	;RP0=0, select bank0
  8311     037C  1303               	bcf	3,6	;RP1=0, select bank0
  8312     037D  0821               	movf	?___fltol+1,w
  8313     037E  00B5               	movwf	?_sprintf+3
  8314     037F  0820               	movf	?___fltol,w
  8315     0380  00B4               	movwf	?_sprintf+2
  8316     0381  30E0               	movlw	(low (main@adcString1| 0))& (0+255)
  8317     0382  120A  158A  22C4  120A  118A  	fcall	_sprintf
  8318     0387                     l4328:
  8319                           
  8320                           ;main.c: 355:         Lcd_Set_Cursor(2, 10);
  8321     0387  300A               	movlw	10
  8322     0388  1283               	bcf	3,5	;RP0=0, select bank0
  8323     0389  1303               	bcf	3,6	;RP1=0, select bank0
  8324     038A  00A4               	movwf	Lcd_Set_Cursor@b
  8325     038B  3002               	movlw	2
  8326     038C  160A  118A  2450  120A  118A  	fcall	_Lcd_Set_Cursor
  8327     0391                     l4330:
  8328                           
  8329                           ;main.c: 356:         Lcd_Write_String(adcString1);
  8330     0391  30E0               	movlw	(low (main@adcString1| 0))& (0+255)
  8331     0392  1283               	bcf	3,5	;RP0=0, select bank0
  8332     0393  1303               	bcf	3,6	;RP1=0, select bank0
  8333     0394  00A5               	movwf	Lcd_Write_String@a
  8334     0395  3000               	movlw	0
  8335     0396  00A6               	movwf	Lcd_Write_String@a+1
  8336     0397  160A  118A  2336  120A  118A  	fcall	_Lcd_Write_String
  8337     039C                     l4332:
  8338                           
  8339                           ;main.c: 359:         Lcd_Set_Cursor(1, 1);
  8340     039C  1283               	bcf	3,5	;RP0=0, select bank0
  8341     039D  1303               	bcf	3,6	;RP1=0, select bank0
  8342     039E  01A4               	clrf	Lcd_Set_Cursor@b
  8343     039F  0AA4               	incf	Lcd_Set_Cursor@b,f
  8344     03A0  3001               	movlw	1
  8345     03A1  160A  118A  2450  120A  118A  	fcall	_Lcd_Set_Cursor
  8346     03A6                     l4334:
  8347                           
  8348                           ;main.c: 360:         Lcd_Write_String("RPM:");
  8349     03A6  306A               	movlw	low (STR_22| (0+32768))
  8350     03A7  1283               	bcf	3,5	;RP0=0, select bank0
  8351     03A8  1303               	bcf	3,6	;RP1=0, select bank0
  8352     03A9  00A5               	movwf	Lcd_Write_String@a
  8353     03AA  3099               	movlw	high (STR_22| (0+32768))
  8354     03AB  00A6               	movwf	Lcd_Write_String@a+1
  8355     03AC  160A  118A  2336  120A  118A  	fcall	_Lcd_Write_String
  8356     03B1                     l4336:
  8357                           
  8358                           ;main.c: 361:         char rpmString[5];;main.c: 362: sprintf(rpmString, "%u%u%u.%u", bi
      +                          nler,yuzler,onlar,birler);
  8359     03B1  303D               	movlw	low (STR_23| (0+32768))
  8360     03B2  1283               	bcf	3,5	;RP0=0, select bank0
  8361     03B3  1303               	bcf	3,6	;RP1=0, select bank0
  8362     03B4  00B2               	movwf	sprintf@f
  8363     03B5  3099               	movlw	high (STR_23| (0+32768))
  8364     03B6  00B3               	movwf	sprintf@f+1
  8365     03B7  1683               	bsf	3,5	;RP0=1, select bank3
  8366     03B8  1703               	bsf	3,6	;RP1=1, select bank3
  8367     03B9  0819               	movf	(main@binler+1)^(0+384),w
  8368     03BA  1283               	bcf	3,5	;RP0=0, select bank0
  8369     03BB  1303               	bcf	3,6	;RP1=0, select bank0
  8370     03BC  00B5               	movwf	?_sprintf+3
  8371     03BD  1683               	bsf	3,5	;RP0=1, select bank3
  8372     03BE  1703               	bsf	3,6	;RP1=1, select bank3
  8373     03BF  0818               	movf	main@binler^(0+384),w
  8374     03C0  1283               	bcf	3,5	;RP0=0, select bank0
  8375     03C1  1303               	bcf	3,6	;RP1=0, select bank0
  8376     03C2  00B4               	movwf	?_sprintf+2
  8377     03C3  1683               	bsf	3,5	;RP0=1, select bank1
  8378     03C4  1303               	bcf	3,6	;RP1=0, select bank1
  8379     03C5  086B               	movf	(main@yuzler+1)^(0+128),w
  8380     03C6  1283               	bcf	3,5	;RP0=0, select bank0
  8381     03C7  1303               	bcf	3,6	;RP1=0, select bank0
  8382     03C8  00B7               	movwf	?_sprintf+5
  8383     03C9  1683               	bsf	3,5	;RP0=1, select bank1
  8384     03CA  1303               	bcf	3,6	;RP1=0, select bank1
  8385     03CB  086A               	movf	main@yuzler^(0+128),w
  8386     03CC  1283               	bcf	3,5	;RP0=0, select bank0
  8387     03CD  1303               	bcf	3,6	;RP1=0, select bank0
  8388     03CE  00B6               	movwf	?_sprintf+4
  8389     03CF  1683               	bsf	3,5	;RP0=1, select bank1
  8390     03D0  1303               	bcf	3,6	;RP1=0, select bank1
  8391     03D1  085B               	movf	(main@onlar+1)^(0+128),w
  8392     03D2  1283               	bcf	3,5	;RP0=0, select bank0
  8393     03D3  1303               	bcf	3,6	;RP1=0, select bank0
  8394     03D4  00B9               	movwf	?_sprintf+7
  8395     03D5  1683               	bsf	3,5	;RP0=1, select bank1
  8396     03D6  1303               	bcf	3,6	;RP1=0, select bank1
  8397     03D7  085A               	movf	main@onlar^(0+128),w
  8398     03D8  1283               	bcf	3,5	;RP0=0, select bank0
  8399     03D9  1303               	bcf	3,6	;RP1=0, select bank0
  8400     03DA  00B8               	movwf	?_sprintf+6
  8401     03DB  1683               	bsf	3,5	;RP0=1, select bank1
  8402     03DC  1303               	bcf	3,6	;RP1=0, select bank1
  8403     03DD  085D               	movf	(main@birler+1)^(0+128),w
  8404     03DE  1283               	bcf	3,5	;RP0=0, select bank0
  8405     03DF  1303               	bcf	3,6	;RP1=0, select bank0
  8406     03E0  00BB               	movwf	?_sprintf+9
  8407     03E1  1683               	bsf	3,5	;RP0=1, select bank1
  8408     03E2  1303               	bcf	3,6	;RP1=0, select bank1
  8409     03E3  085C               	movf	main@birler^(0+128),w
  8410     03E4  1283               	bcf	3,5	;RP0=0, select bank0
  8411     03E5  1303               	bcf	3,6	;RP1=0, select bank0
  8412     03E6  00BA               	movwf	?_sprintf+8
  8413     03E7  30D1               	movlw	(low (main@rpmString| 0))& (0+255)
  8414     03E8  120A  158A  22C4  120A  118A  	fcall	_sprintf
  8415     03ED                     l4338:
  8416                           
  8417                           ;main.c: 363: Lcd_Set_Cursor(1, 5);
  8418     03ED  3005               	movlw	5
  8419     03EE  1283               	bcf	3,5	;RP0=0, select bank0
  8420     03EF  1303               	bcf	3,6	;RP1=0, select bank0
  8421     03F0  00A4               	movwf	Lcd_Set_Cursor@b
  8422     03F1  3001               	movlw	1
  8423     03F2  160A  118A  2450  120A  118A  	fcall	_Lcd_Set_Cursor
  8424     03F7                     l4340:
  8425                           
  8426                           ;main.c: 364: Lcd_Write_String(rpmString);
  8427     03F7  30D1               	movlw	(low (main@rpmString| 0))& (0+255)
  8428     03F8  1283               	bcf	3,5	;RP0=0, select bank0
  8429     03F9  1303               	bcf	3,6	;RP1=0, select bank0
  8430     03FA  00A5               	movwf	Lcd_Write_String@a
  8431     03FB  3000               	movlw	0
  8432     03FC  00A6               	movwf	Lcd_Write_String@a+1
  8433     03FD  160A  118A  2336  120A  118A  	fcall	_Lcd_Write_String
  8434     0402                     l4342:
  8435                           
  8436                           ;main.c: 371:  if (RC1 == 1 && (RE0 == 1 || RE2 == 1)) {
  8437     0402  1283               	bcf	3,5	;RP0=0, select bank0
  8438     0403  1303               	bcf	3,6	;RP1=0, select bank0
  8439     0404  1C87               	btfss	7,1	;volatile
  8440     0405  2C07               	goto	u5791
  8441     0406  2C08               	goto	u5790
  8442     0407                     u5791:
  8443     0407  2C2F               	goto	l221
  8444     0408                     u5790:
  8445     0408                     l4344:
  8446     0408  1809               	btfsc	9,0	;volatile
  8447     0409  2C0B               	goto	u5801
  8448     040A  2C0C               	goto	u5800
  8449     040B                     u5801:
  8450     040B  2C10               	goto	l4348
  8451     040C                     u5800:
  8452     040C                     l4346:
  8453     040C  1D09               	btfss	9,2	;volatile
  8454     040D  2C0F               	goto	u5811
  8455     040E  2C10               	goto	u5810
  8456     040F                     u5811:
  8457     040F  2C2F               	goto	l221
  8458     0410                     u5810:
  8459     0410                     l4348:
  8460                           
  8461                           ;main.c: 372:             Lcd_Set_Cursor(2, 13);
  8462     0410  300D               	movlw	13
  8463     0411  00A4               	movwf	Lcd_Set_Cursor@b
  8464     0412  3002               	movlw	2
  8465     0413  160A  118A  2450  120A  118A  	fcall	_Lcd_Set_Cursor
  8466     0418                     l4350:
  8467                           
  8468                           ;main.c: 373:             Lcd_Write_String(" FWD LMT");
  8469     0418  3047               	movlw	low (STR_24| (0+32768))
  8470     0419  1283               	bcf	3,5	;RP0=0, select bank0
  8471     041A  1303               	bcf	3,6	;RP1=0, select bank0
  8472     041B  00A5               	movwf	Lcd_Write_String@a
  8473     041C  3099               	movlw	high (STR_24| (0+32768))
  8474     041D  00A6               	movwf	Lcd_Write_String@a+1
  8475     041E  160A  118A  2336  120A  118A  	fcall	_Lcd_Write_String
  8476     0423                     l4352:
  8477                           
  8478                           ;main.c: 374:             UART_Write_Text("s0\r\n");
  8479     0423  3065               	movlw	low (STR_25| (0+32768))
  8480     0424  1283               	bcf	3,5	;RP0=0, select bank0
  8481     0425  1303               	bcf	3,6	;RP1=0, select bank0
  8482     0426  00A1               	movwf	UART_Write_Text@text
  8483     0427  3099               	movlw	high (STR_25| (0+32768))
  8484     0428  00A2               	movwf	UART_Write_Text@text+1
  8485     0429  160A  118A  237C  120A  118A  	fcall	_UART_Write_Text
  8486                           
  8487                           ;main.c: 376:         } else if ((RE2 == 1 && RE0 == 1) || (RE2 == 1 && RE1 == 0)) {
  8488     042E  2E0E               	goto	l4430
  8489     042F                     l221:
  8490     042F  1D09               	btfss	9,2	;volatile
  8491     0430  2C32               	goto	u5821
  8492     0431  2C33               	goto	u5820
  8493     0432                     u5821:
  8494     0432  2C37               	goto	l229
  8495     0433                     u5820:
  8496     0433                     l4354:
  8497     0433  1809               	btfsc	9,0	;volatile
  8498     0434  2C36               	goto	u5831
  8499     0435  2C37               	goto	u5830
  8500     0436                     u5831:
  8501     0436  2C3F               	goto	l4358
  8502     0437                     u5830:
  8503     0437                     l229:
  8504     0437  1D09               	btfss	9,2	;volatile
  8505     0438  2C3A               	goto	u5841
  8506     0439  2C3B               	goto	u5840
  8507     043A                     u5841:
  8508     043A  2C95               	goto	l225
  8509     043B                     u5840:
  8510     043B                     l4356:
  8511     043B  1889               	btfsc	9,1	;volatile
  8512     043C  2C3E               	goto	u5851
  8513     043D  2C3F               	goto	u5850
  8514     043E                     u5851:
  8515     043E  2C95               	goto	l225
  8516     043F                     u5850:
  8517     043F                     l4358:
  8518                           
  8519                           ;main.c: 377:             Lcd_Set_Cursor(2, 13);
  8520     043F  300D               	movlw	13
  8521     0440  00A4               	movwf	Lcd_Set_Cursor@b
  8522     0441  3002               	movlw	2
  8523     0442  160A  118A  2450  120A  118A  	fcall	_Lcd_Set_Cursor
  8524     0447                     l4360:
  8525                           
  8526                           ;main.c: 378:             Lcd_Write_String(" FWD 1.6K");
  8527     0447  3029               	movlw	low (STR_26| (0+32768))
  8528     0448  1283               	bcf	3,5	;RP0=0, select bank0
  8529     0449  1303               	bcf	3,6	;RP1=0, select bank0
  8530     044A  00A5               	movwf	Lcd_Write_String@a
  8531     044B  3099               	movlw	high (STR_26| (0+32768))
  8532     044C  00A6               	movwf	Lcd_Write_String@a+1
  8533     044D  160A  118A  2336  120A  118A  	fcall	_Lcd_Write_String
  8534     0452                     l4362:
  8535                           
  8536                           ;main.c: 379:             if (displayValue < 800) {
  8537     0452  3003               	movlw	3
  8538     0453  1683               	bsf	3,5	;RP0=1, select bank3
  8539     0454  1703               	bsf	3,6	;RP1=1, select bank3
  8540     0455  021F               	subwf	(main@displayValue+1)^(0+384),w
  8541     0456  3020               	movlw	32
  8542     0457  1903               	skipnz
  8543     0458  021E               	subwf	main@displayValue^(0+384),w
  8544     0459  1803               	skipnc
  8545     045A  2C5C               	goto	u5861
  8546     045B  2C5D               	goto	u5860
  8547     045C                     u5861:
  8548     045C  2E0E               	goto	l4430
  8549     045D                     u5860:
  8550     045D                     l4364:
  8551                           
  8552                           ;main.c: 380:                 char uartMessage[8];;main.c: 381:                 displayV
      +                          alue += 80;
  8553     045D  3050               	movlw	80
  8554     045E  079E               	addwf	main@displayValue^(0+384),f
  8555     045F  1803               	skipnc
  8556     0460  0A9F               	incf	(main@displayValue+1)^(0+384),f
  8557     0461  3000               	movlw	0
  8558     0462  079F               	addwf	(main@displayValue+1)^(0+384),f
  8559                           
  8560                           ;main.c: 383:                 if (displayValue > 800) {
  8561     0463  3003               	movlw	3
  8562     0464  021F               	subwf	(main@displayValue+1)^(0+384),w
  8563     0465  3021               	movlw	33
  8564     0466  1903               	skipnz
  8565     0467  021E               	subwf	main@displayValue^(0+384),w
  8566     0468  1C03               	skipc
  8567     0469  2C6B               	goto	u5871
  8568     046A  2C6C               	goto	u5870
  8569     046B                     u5871:
  8570     046B  2C70               	goto	l4368
  8571     046C                     u5870:
  8572     046C                     l4366:
  8573                           
  8574                           ;main.c: 384:                     displayValue = 800;
  8575     046C  3020               	movlw	32
  8576     046D  009E               	movwf	main@displayValue^(0+384)
  8577     046E  3003               	movlw	3
  8578     046F  009F               	movwf	(main@displayValue^(0+384)+1)
  8579     0470                     l4368:
  8580                           
  8581                           ;main.c: 386:                 sprintf(uartMessage, "s%d\r\n", displayValue);
  8582     0470  3059               	movlw	low (STR_27| (0+32768))
  8583     0471  1283               	bcf	3,5	;RP0=0, select bank0
  8584     0472  1303               	bcf	3,6	;RP1=0, select bank0
  8585     0473  00B2               	movwf	sprintf@f
  8586     0474  3099               	movlw	high (STR_27| (0+32768))
  8587     0475  00B3               	movwf	sprintf@f+1
  8588     0476  1683               	bsf	3,5	;RP0=1, select bank3
  8589     0477  1703               	bsf	3,6	;RP1=1, select bank3
  8590     0478  081F               	movf	(main@displayValue+1)^(0+384),w
  8591     0479  1283               	bcf	3,5	;RP0=0, select bank0
  8592     047A  1303               	bcf	3,6	;RP1=0, select bank0
  8593     047B  00B5               	movwf	?_sprintf+3
  8594     047C  1683               	bsf	3,5	;RP0=1, select bank3
  8595     047D  1703               	bsf	3,6	;RP1=1, select bank3
  8596     047E  081E               	movf	main@displayValue^(0+384),w
  8597     047F  1283               	bcf	3,5	;RP0=0, select bank0
  8598     0480  1303               	bcf	3,6	;RP1=0, select bank0
  8599     0481  00B4               	movwf	?_sprintf+2
  8600     0482  30BD               	movlw	(low (main@uartMessage| 0))& (0+255)
  8601     0483  120A  158A  22C4  120A  118A  	fcall	_sprintf
  8602     0488                     l4370:
  8603                           
  8604                           ;main.c: 387:                 UART_Write_Text(uartMessage);
  8605     0488  30BD               	movlw	(low (main@uartMessage| 0))& (0+255)
  8606     0489  1283               	bcf	3,5	;RP0=0, select bank0
  8607     048A  1303               	bcf	3,6	;RP1=0, select bank0
  8608     048B  00A1               	movwf	UART_Write_Text@text
  8609     048C  3000               	movlw	0
  8610     048D  00A2               	movwf	UART_Write_Text@text+1
  8611     048E  160A  118A  237C  120A  118A  	fcall	_UART_Write_Text
  8612     0493  2E0E               	goto	l4430
  8613     0494                     l230:	
  8614                           ;main.c: 388:             }
  8615                           
  8616                           
  8617                           ;main.c: 390:         } else if (RE0 == 1) {
  8618     0494  2E0E               	goto	l4430
  8619     0495                     l225:
  8620     0495  1C09               	btfss	9,0	;volatile
  8621     0496  2C98               	goto	u5881
  8622     0497  2C99               	goto	u5880
  8623     0498                     u5881:
  8624     0498  2CD0               	goto	l233
  8625     0499                     u5880:
  8626     0499                     l4372:
  8627                           
  8628                           ;main.c: 391:             Lcd_Set_Cursor(2, 13);
  8629     0499  300D               	movlw	13
  8630     049A  00A4               	movwf	Lcd_Set_Cursor@b
  8631     049B  3002               	movlw	2
  8632     049C  160A  118A  2450  120A  118A  	fcall	_Lcd_Set_Cursor
  8633     04A1                     l4374:
  8634                           
  8635                           ;main.c: 392:             Lcd_Write_String(" FWD          ");
  8636     04A1  30CD               	movlw	low (STR_28| (0+32768))
  8637     04A2  1283               	bcf	3,5	;RP0=0, select bank0
  8638     04A3  1303               	bcf	3,6	;RP1=0, select bank0
  8639     04A4  00A5               	movwf	Lcd_Write_String@a
  8640     04A5  3098               	movlw	high (STR_28| (0+32768))
  8641     04A6  00A6               	movwf	Lcd_Write_String@a+1
  8642     04A7  160A  118A  2336  120A  118A  	fcall	_Lcd_Write_String
  8643     04AC                     l4376:
  8644                           
  8645                           ;main.c: 393:             char combinedText[20];;main.c: 394:             sprintf(combin
      +                          edText, "s%d\r\n", displayValue);
  8646     04AC  3059               	movlw	low (STR_27| (0+32768))
  8647     04AD  1283               	bcf	3,5	;RP0=0, select bank0
  8648     04AE  1303               	bcf	3,6	;RP1=0, select bank0
  8649     04AF  00B2               	movwf	sprintf@f
  8650     04B0  3099               	movlw	high (STR_27| (0+32768))
  8651     04B1  00B3               	movwf	sprintf@f+1
  8652     04B2  1683               	bsf	3,5	;RP0=1, select bank3
  8653     04B3  1703               	bsf	3,6	;RP1=1, select bank3
  8654     04B4  081F               	movf	(main@displayValue+1)^(0+384),w
  8655     04B5  1283               	bcf	3,5	;RP0=0, select bank0
  8656     04B6  1303               	bcf	3,6	;RP1=0, select bank0
  8657     04B7  00B5               	movwf	?_sprintf+3
  8658     04B8  1683               	bsf	3,5	;RP0=1, select bank3
  8659     04B9  1703               	bsf	3,6	;RP1=1, select bank3
  8660     04BA  081E               	movf	main@displayValue^(0+384),w
  8661     04BB  1283               	bcf	3,5	;RP0=0, select bank0
  8662     04BC  1303               	bcf	3,6	;RP1=0, select bank0
  8663     04BD  00B4               	movwf	?_sprintf+2
  8664     04BE  3058               	movlw	(low (main@combinedText| 0))& (0+255)
  8665     04BF  120A  158A  22C4  120A  118A  	fcall	_sprintf
  8666     04C4                     l4378:
  8667                           
  8668                           ;main.c: 395:             UART_Write_Text(combinedText);
  8669     04C4  3058               	movlw	(low (main@combinedText| 0))& (0+255)
  8670     04C5  1283               	bcf	3,5	;RP0=0, select bank0
  8671     04C6  1303               	bcf	3,6	;RP1=0, select bank0
  8672     04C7  00A1               	movwf	UART_Write_Text@text
  8673     04C8  3000               	movlw	0
  8674     04C9  00A2               	movwf	UART_Write_Text@text+1
  8675     04CA  160A  118A  237C  120A  118A  	fcall	_UART_Write_Text
  8676                           
  8677                           ;main.c: 398:         } else if (RC2 == 1 && (RE1 == 1 || RC0 == 1)) {
  8678     04CF  2E0E               	goto	l4430
  8679     04D0                     l233:
  8680     04D0  1D07               	btfss	7,2	;volatile
  8681     04D1  2CD3               	goto	u5891
  8682     04D2  2CD4               	goto	u5890
  8683     04D3                     u5891:
  8684     04D3  2CFB               	goto	l235
  8685     04D4                     u5890:
  8686     04D4                     l4380:
  8687     04D4  1889               	btfsc	9,1	;volatile
  8688     04D5  2CD7               	goto	u5901
  8689     04D6  2CD8               	goto	u5900
  8690     04D7                     u5901:
  8691     04D7  2CDC               	goto	l4384
  8692     04D8                     u5900:
  8693     04D8                     l4382:
  8694     04D8  1C07               	btfss	7,0	;volatile
  8695     04D9  2CDB               	goto	u5911
  8696     04DA  2CDC               	goto	u5910
  8697     04DB                     u5911:
  8698     04DB  2CFB               	goto	l235
  8699     04DC                     u5910:
  8700     04DC                     l4384:
  8701                           
  8702                           ;main.c: 399:             Lcd_Set_Cursor(2, 13);
  8703     04DC  300D               	movlw	13
  8704     04DD  00A4               	movwf	Lcd_Set_Cursor@b
  8705     04DE  3002               	movlw	2
  8706     04DF  160A  118A  2450  120A  118A  	fcall	_Lcd_Set_Cursor
  8707     04E4                     l4386:
  8708                           
  8709                           ;main.c: 400:             Lcd_Write_String(" REW LMT");
  8710     04E4  3050               	movlw	low (STR_30| (0+32768))
  8711     04E5  1283               	bcf	3,5	;RP0=0, select bank0
  8712     04E6  1303               	bcf	3,6	;RP1=0, select bank0
  8713     04E7  00A5               	movwf	Lcd_Write_String@a
  8714     04E8  3099               	movlw	high (STR_30| (0+32768))
  8715     04E9  00A6               	movwf	Lcd_Write_String@a+1
  8716     04EA  160A  118A  2336  120A  118A  	fcall	_Lcd_Write_String
  8717     04EF                     l4388:
  8718                           
  8719                           ;main.c: 401:             UART_Write_Text("s0\r\n");
  8720     04EF  3065               	movlw	low (STR_25| (0+32768))
  8721     04F0  1283               	bcf	3,5	;RP0=0, select bank0
  8722     04F1  1303               	bcf	3,6	;RP1=0, select bank0
  8723     04F2  00A1               	movwf	UART_Write_Text@text
  8724     04F3  3099               	movlw	high (STR_25| (0+32768))
  8725     04F4  00A2               	movwf	UART_Write_Text@text+1
  8726     04F5  160A  118A  237C  120A  118A  	fcall	_UART_Write_Text
  8727                           
  8728                           ;main.c: 403:         } else if ((RC0 == 1 && RE1 == 1) || (RC0 == 1 && RE0 == 0)) {
  8729     04FA  2E0E               	goto	l4430
  8730     04FB                     l235:
  8731     04FB  1C07               	btfss	7,0	;volatile
  8732     04FC  2CFE               	goto	u5921
  8733     04FD  2CFF               	goto	u5920
  8734     04FE                     u5921:
  8735     04FE  2D03               	goto	l243
  8736     04FF                     u5920:
  8737     04FF                     l4390:
  8738     04FF  1889               	btfsc	9,1	;volatile
  8739     0500  2D02               	goto	u5931
  8740     0501  2D03               	goto	u5930
  8741     0502                     u5931:
  8742     0502  2D0B               	goto	l4394
  8743     0503                     u5930:
  8744     0503                     l243:
  8745     0503  1C07               	btfss	7,0	;volatile
  8746     0504  2D06               	goto	u5941
  8747     0505  2D07               	goto	u5940
  8748     0506                     u5941:
  8749     0506  2D9C               	goto	l239
  8750     0507                     u5940:
  8751     0507                     l4392:
  8752     0507  1809               	btfsc	9,0	;volatile
  8753     0508  2D0A               	goto	u5951
  8754     0509  2D0B               	goto	u5950
  8755     050A                     u5951:
  8756     050A  2D9C               	goto	l239
  8757     050B                     u5950:
  8758     050B                     l4394:
  8759                           
  8760                           ;main.c: 404:             Lcd_Set_Cursor(2, 13);
  8761     050B  300D               	movlw	13
  8762     050C  00A4               	movwf	Lcd_Set_Cursor@b
  8763     050D  3002               	movlw	2
  8764     050E  160A  118A  2450  120A  118A  	fcall	_Lcd_Set_Cursor
  8765     0513                     l4396:
  8766                           
  8767                           ;main.c: 405:             Lcd_Write_String(" REW 1.6K");
  8768     0513  3033               	movlw	low (STR_32| (0+32768))
  8769     0514  1283               	bcf	3,5	;RP0=0, select bank0
  8770     0515  1303               	bcf	3,6	;RP1=0, select bank0
  8771     0516  00A5               	movwf	Lcd_Write_String@a
  8772     0517  3099               	movlw	high (STR_32| (0+32768))
  8773     0518  00A6               	movwf	Lcd_Write_String@a+1
  8774     0519  160A  118A  2336  120A  118A  	fcall	_Lcd_Write_String
  8775     051E                     l4398:
  8776                           
  8777                           ;main.c: 406:             int negativeFeedValue = -displayValue;
  8778     051E  1683               	bsf	3,5	;RP0=1, select bank3
  8779     051F  1703               	bsf	3,6	;RP1=1, select bank3
  8780     0520  091E               	comf	main@displayValue^(0+384),w
  8781     0521  1283               	bcf	3,5	;RP0=0, select bank0
  8782     0522  1303               	bcf	3,6	;RP1=0, select bank0
  8783     0523  00D4               	movwf	??_main
  8784     0524  1683               	bsf	3,5	;RP0=1, select bank3
  8785     0525  1703               	bsf	3,6	;RP1=1, select bank3
  8786     0526  091F               	comf	(main@displayValue+1)^(0+384),w
  8787     0527  1283               	bcf	3,5	;RP0=0, select bank0
  8788     0528  1303               	bcf	3,6	;RP1=0, select bank0
  8789     0529  00D5               	movwf	??_main+1
  8790     052A  0AD4               	incf	??_main,f
  8791     052B  1903               	skipnz
  8792     052C  0AD5               	incf	??_main+1,f
  8793     052D  0854               	movf	??_main,w
  8794     052E  1683               	bsf	3,5	;RP0=1, select bank3
  8795     052F  1703               	bsf	3,6	;RP1=1, select bank3
  8796     0530  009C               	movwf	main@negativeFeedValue^(0+384)
  8797     0531  1283               	bcf	3,5	;RP0=0, select bank0
  8798     0532  1303               	bcf	3,6	;RP1=0, select bank0
  8799     0533  0855               	movf	??_main+1,w
  8800     0534  1683               	bsf	3,5	;RP0=1, select bank3
  8801     0535  1703               	bsf	3,6	;RP1=1, select bank3
  8802     0536  009D               	movwf	(main@negativeFeedValue+1)^(0+384)
  8803     0537                     l4400:
  8804                           
  8805                           ;main.c: 407:             if (negativeFeedValue > -800) {
  8806     0537  081D               	movf	(main@negativeFeedValue+1)^(0+384),w
  8807     0538  3A80               	xorlw	128
  8808     0539  00FF               	movwf	btemp+1
  8809     053A  307C               	movlw	124
  8810     053B  027F               	subwf	btemp+1,w
  8811     053C  1D03               	skipz
  8812     053D  2D40               	goto	u5965
  8813     053E  30E1               	movlw	225
  8814     053F  021C               	subwf	main@negativeFeedValue^(0+384),w
  8815     0540                     u5965:
  8816     0540  1C03               	skipc
  8817     0541  2D43               	goto	u5961
  8818     0542  2D44               	goto	u5960
  8819     0543                     u5961:
  8820     0543  2C94               	goto	l230
  8821     0544                     u5960:
  8822     0544                     l4402:
  8823                           
  8824                           ;main.c: 408:                 char uartMessage[8];;main.c: 409:                 negative
      +                          FeedValue -= 80;
  8825     0544  30B0               	movlw	176
  8826     0545  1683               	bsf	3,5	;RP0=1, select bank3
  8827     0546  1703               	bsf	3,6	;RP1=1, select bank3
  8828     0547  079C               	addwf	main@negativeFeedValue^(0+384),f
  8829     0548  1803               	skipnc
  8830     0549  0A9D               	incf	(main@negativeFeedValue+1)^(0+384),f
  8831     054A  30FF               	movlw	255
  8832     054B  079D               	addwf	(main@negativeFeedValue+1)^(0+384),f
  8833     054C                     l4404:
  8834                           
  8835                           ;main.c: 410:                 if (negativeFeedValue < -800) {
  8836     054C  081D               	movf	(main@negativeFeedValue+1)^(0+384),w
  8837     054D  3A80               	xorlw	128
  8838     054E  00FF               	movwf	btemp+1
  8839     054F  307C               	movlw	124
  8840     0550  027F               	subwf	btemp+1,w
  8841     0551  1D03               	skipz
  8842     0552  2D55               	goto	u5975
  8843     0553  30E0               	movlw	224
  8844     0554  021C               	subwf	main@negativeFeedValue^(0+384),w
  8845     0555                     u5975:
  8846     0555  1803               	skipnc
  8847     0556  2D58               	goto	u5971
  8848     0557  2D59               	goto	u5970
  8849     0558                     u5971:
  8850     0558  2D5F               	goto	l4408
  8851     0559                     u5970:
  8852     0559                     l4406:
  8853                           
  8854                           ;main.c: 411:                     negativeFeedValue = -800;
  8855     0559  30E0               	movlw	224
  8856     055A  1683               	bsf	3,5	;RP0=1, select bank3
  8857     055B  1703               	bsf	3,6	;RP1=1, select bank3
  8858     055C  009C               	movwf	main@negativeFeedValue^(0+384)
  8859     055D  30FC               	movlw	252
  8860     055E  009D               	movwf	(main@negativeFeedValue^(0+384)+1)
  8861     055F                     l4408:
  8862                           
  8863                           ;main.c: 413:                 displayValue=-negativeFeedValue;
  8864     055F  1683               	bsf	3,5	;RP0=1, select bank3
  8865     0560  1703               	bsf	3,6	;RP1=1, select bank3
  8866     0561  091C               	comf	main@negativeFeedValue^(0+384),w
  8867     0562  1283               	bcf	3,5	;RP0=0, select bank0
  8868     0563  1303               	bcf	3,6	;RP1=0, select bank0
  8869     0564  00D4               	movwf	??_main
  8870     0565  1683               	bsf	3,5	;RP0=1, select bank3
  8871     0566  1703               	bsf	3,6	;RP1=1, select bank3
  8872     0567  091D               	comf	(main@negativeFeedValue+1)^(0+384),w
  8873     0568  1283               	bcf	3,5	;RP0=0, select bank0
  8874     0569  1303               	bcf	3,6	;RP1=0, select bank0
  8875     056A  00D5               	movwf	??_main+1
  8876     056B  0AD4               	incf	??_main,f
  8877     056C  1903               	skipnz
  8878     056D  0AD5               	incf	??_main+1,f
  8879     056E  0854               	movf	??_main,w
  8880     056F  1683               	bsf	3,5	;RP0=1, select bank3
  8881     0570  1703               	bsf	3,6	;RP1=1, select bank3
  8882     0571  009E               	movwf	main@displayValue^(0+384)
  8883     0572  1283               	bcf	3,5	;RP0=0, select bank0
  8884     0573  1303               	bcf	3,6	;RP1=0, select bank0
  8885     0574  0855               	movf	??_main+1,w
  8886     0575  1683               	bsf	3,5	;RP0=1, select bank3
  8887     0576  1703               	bsf	3,6	;RP1=1, select bank3
  8888     0577  009F               	movwf	(main@displayValue+1)^(0+384)
  8889     0578                     l4410:
  8890                           
  8891                           ;main.c: 414:                 sprintf(uartMessage, "s%d\r\n", negativeFeedValue);
  8892     0578  3059               	movlw	low (STR_27| (0+32768))
  8893     0579  1283               	bcf	3,5	;RP0=0, select bank0
  8894     057A  1303               	bcf	3,6	;RP1=0, select bank0
  8895     057B  00B2               	movwf	sprintf@f
  8896     057C  3099               	movlw	high (STR_27| (0+32768))
  8897     057D  00B3               	movwf	sprintf@f+1
  8898     057E  1683               	bsf	3,5	;RP0=1, select bank3
  8899     057F  1703               	bsf	3,6	;RP1=1, select bank3
  8900     0580  081D               	movf	(main@negativeFeedValue+1)^(0+384),w
  8901     0581  1283               	bcf	3,5	;RP0=0, select bank0
  8902     0582  1303               	bcf	3,6	;RP1=0, select bank0
  8903     0583  00B5               	movwf	?_sprintf+3
  8904     0584  1683               	bsf	3,5	;RP0=1, select bank3
  8905     0585  1703               	bsf	3,6	;RP1=1, select bank3
  8906     0586  081C               	movf	main@negativeFeedValue^(0+384),w
  8907     0587  1283               	bcf	3,5	;RP0=0, select bank0
  8908     0588  1303               	bcf	3,6	;RP1=0, select bank0
  8909     0589  00B4               	movwf	?_sprintf+2
  8910     058A  30C5               	movlw	(low (main@uartMessage_371| 0))& (0+255)
  8911     058B  120A  158A  22C4  120A  118A  	fcall	_sprintf
  8912     0590                     l4412:
  8913                           
  8914                           ;main.c: 415:                 UART_Write_Text(uartMessage);
  8915     0590  30C5               	movlw	(low (main@uartMessage_371| 0))& (0+255)
  8916     0591  1283               	bcf	3,5	;RP0=0, select bank0
  8917     0592  1303               	bcf	3,6	;RP1=0, select bank0
  8918     0593  00A1               	movwf	UART_Write_Text@text
  8919     0594  3000               	movlw	0
  8920     0595  00A2               	movwf	UART_Write_Text@text+1
  8921     0596  160A  118A  237C  120A  118A  	fcall	_UART_Write_Text
  8922     059B  2E0E               	goto	l4430
  8923     059C                     l239:
  8924     059C  1C89               	btfss	9,1	;volatile
  8925     059D  2D9F               	goto	u5981
  8926     059E  2DA0               	goto	u5980
  8927     059F                     u5981:
  8928     059F  2DF0               	goto	l4424
  8929     05A0                     u5980:
  8930     05A0                     l4414:
  8931                           
  8932                           ;main.c: 419:             Lcd_Set_Cursor(2, 13);
  8933     05A0  300D               	movlw	13
  8934     05A1  00A4               	movwf	Lcd_Set_Cursor@b
  8935     05A2  3002               	movlw	2
  8936     05A3  160A  118A  2450  120A  118A  	fcall	_Lcd_Set_Cursor
  8937     05A8                     l4416:
  8938                           
  8939                           ;main.c: 420:             Lcd_Write_String(" REW         ");
  8940     05A8  30EB               	movlw	low (STR_34| (0+32768))
  8941     05A9  1283               	bcf	3,5	;RP0=0, select bank0
  8942     05AA  1303               	bcf	3,6	;RP1=0, select bank0
  8943     05AB  00A5               	movwf	Lcd_Write_String@a
  8944     05AC  3098               	movlw	high (STR_34| (0+32768))
  8945     05AD  00A6               	movwf	Lcd_Write_String@a+1
  8946     05AE  160A  118A  2336  120A  118A  	fcall	_Lcd_Write_String
  8947     05B3                     l4418:
  8948                           
  8949                           ;main.c: 421:             int negativeDisplayValue = -displayValue;
  8950     05B3  1683               	bsf	3,5	;RP0=1, select bank3
  8951     05B4  1703               	bsf	3,6	;RP1=1, select bank3
  8952     05B5  091E               	comf	main@displayValue^(0+384),w
  8953     05B6  1283               	bcf	3,5	;RP0=0, select bank0
  8954     05B7  1303               	bcf	3,6	;RP1=0, select bank0
  8955     05B8  00D4               	movwf	??_main
  8956     05B9  1683               	bsf	3,5	;RP0=1, select bank3
  8957     05BA  1703               	bsf	3,6	;RP1=1, select bank3
  8958     05BB  091F               	comf	(main@displayValue+1)^(0+384),w
  8959     05BC  1283               	bcf	3,5	;RP0=0, select bank0
  8960     05BD  1303               	bcf	3,6	;RP1=0, select bank0
  8961     05BE  00D5               	movwf	??_main+1
  8962     05BF  0AD4               	incf	??_main,f
  8963     05C0  1903               	skipnz
  8964     05C1  0AD5               	incf	??_main+1,f
  8965     05C2  0854               	movf	??_main,w
  8966     05C3  1683               	bsf	3,5	;RP0=1, select bank1
  8967     05C4  1303               	bcf	3,6	;RP1=0, select bank1
  8968     05C5  00DE               	movwf	main@negativeDisplayValue^(0+128)
  8969     05C6  1283               	bcf	3,5	;RP0=0, select bank0
  8970     05C7  1303               	bcf	3,6	;RP1=0, select bank0
  8971     05C8  0855               	movf	??_main+1,w
  8972     05C9  1683               	bsf	3,5	;RP0=1, select bank1
  8973     05CA  1303               	bcf	3,6	;RP1=0, select bank1
  8974     05CB  00DF               	movwf	(main@negativeDisplayValue+1)^(0+128)
  8975     05CC                     l4420:
  8976                           
  8977                           ;main.c: 422:             char combinedText[20];;main.c: 423:             sprintf(combin
      +                          edText, "s%d\r\n", negativeDisplayValue);
  8978     05CC  3059               	movlw	low (STR_27| (0+32768))
  8979     05CD  1283               	bcf	3,5	;RP0=0, select bank0
  8980     05CE  1303               	bcf	3,6	;RP1=0, select bank0
  8981     05CF  00B2               	movwf	sprintf@f
  8982     05D0  3099               	movlw	high (STR_27| (0+32768))
  8983     05D1  00B3               	movwf	sprintf@f+1
  8984     05D2  1683               	bsf	3,5	;RP0=1, select bank1
  8985     05D3  1303               	bcf	3,6	;RP1=0, select bank1
  8986     05D4  085F               	movf	(main@negativeDisplayValue+1)^(0+128),w
  8987     05D5  1283               	bcf	3,5	;RP0=0, select bank0
  8988     05D6  1303               	bcf	3,6	;RP1=0, select bank0
  8989     05D7  00B5               	movwf	?_sprintf+3
  8990     05D8  1683               	bsf	3,5	;RP0=1, select bank1
  8991     05D9  1303               	bcf	3,6	;RP1=0, select bank1
  8992     05DA  085E               	movf	main@negativeDisplayValue^(0+128),w
  8993     05DB  1283               	bcf	3,5	;RP0=0, select bank0
  8994     05DC  1303               	bcf	3,6	;RP1=0, select bank0
  8995     05DD  00B4               	movwf	?_sprintf+2
  8996     05DE  30A0               	movlw	(low (main@combinedText_375| 0))& (0+255)
  8997     05DF  120A  158A  22C4  120A  118A  	fcall	_sprintf
  8998     05E4                     l4422:
  8999                           
  9000                           ;main.c: 424:             UART_Write_Text(combinedText);
  9001     05E4  30A0               	movlw	(low (main@combinedText_375| 0))& (0+255)
  9002     05E5  1283               	bcf	3,5	;RP0=0, select bank0
  9003     05E6  1303               	bcf	3,6	;RP1=0, select bank0
  9004     05E7  00A1               	movwf	UART_Write_Text@text
  9005     05E8  3000               	movlw	0
  9006     05E9  00A2               	movwf	UART_Write_Text@text+1
  9007     05EA  160A  118A  237C  120A  118A  	fcall	_UART_Write_Text
  9008                           
  9009                           ;main.c: 425:         } else {
  9010     05EF  2E0E               	goto	l4430
  9011     05F0                     l4424:
  9012                           
  9013                           ;main.c: 427:             Lcd_Set_Cursor(2, 13);
  9014     05F0  300D               	movlw	13
  9015     05F1  00A4               	movwf	Lcd_Set_Cursor@b
  9016     05F2  3002               	movlw	2
  9017     05F3  160A  118A  2450  120A  118A  	fcall	_Lcd_Set_Cursor
  9018     05F8                     l4426:
  9019                           
  9020                           ;main.c: 428:             Lcd_Write_String(" STOP       ");
  9021     05F8  3007               	movlw	low (STR_36| (0+32768))
  9022     05F9  1283               	bcf	3,5	;RP0=0, select bank0
  9023     05FA  1303               	bcf	3,6	;RP1=0, select bank0
  9024     05FB  00A5               	movwf	Lcd_Write_String@a
  9025     05FC  3099               	movlw	high (STR_36| (0+32768))
  9026     05FD  00A6               	movwf	Lcd_Write_String@a+1
  9027     05FE  160A  118A  2336  120A  118A  	fcall	_Lcd_Write_String
  9028     0603                     l4428:
  9029                           
  9030                           ;main.c: 429:             UART_Write_Text("s0\r\n");
  9031     0603  3065               	movlw	low (STR_25| (0+32768))
  9032     0604  1283               	bcf	3,5	;RP0=0, select bank0
  9033     0605  1303               	bcf	3,6	;RP1=0, select bank0
  9034     0606  00A1               	movwf	UART_Write_Text@text
  9035     0607  3099               	movlw	high (STR_25| (0+32768))
  9036     0608  00A2               	movwf	UART_Write_Text@text+1
  9037     0609  160A  118A  237C  120A  118A  	fcall	_UART_Write_Text
  9038     060E                     l4430:
  9039                           
  9040                           ;main.c: 436:         if((RC1==1) &&( RE0==1 || RE2 )){
  9041     060E  1283               	bcf	3,5	;RP0=0, select bank0
  9042     060F  1303               	bcf	3,6	;RP1=0, select bank0
  9043     0610  1C87               	btfss	7,1	;volatile
  9044     0611  2E13               	goto	u5991
  9045     0612  2E14               	goto	u5990
  9046     0613                     u5991:
  9047     0613  2E20               	goto	l249
  9048     0614                     u5990:
  9049     0614                     l4432:
  9050     0614  1809               	btfsc	9,0	;volatile
  9051     0615  2E17               	goto	u6001
  9052     0616  2E18               	goto	u6000
  9053     0617                     u6001:
  9054     0617  2E1C               	goto	l251
  9055     0618                     u6000:
  9056     0618                     l4434:
  9057     0618  1D09               	btfss	9,2	;volatile
  9058     0619  2E1B               	goto	u6011
  9059     061A  2E1C               	goto	u6010
  9060     061B                     u6011:
  9061     061B  2E20               	goto	l249
  9062     061C                     u6010:
  9063     061C                     l251:
  9064                           
  9065                           ;main.c: 438:             RA4=1;
  9066     061C  1283               	bcf	3,5	;RP0=0, select bank0
  9067     061D  1303               	bcf	3,6	;RP1=0, select bank0
  9068     061E  1605               	bsf	5,4	;volatile
  9069                           
  9070                           ;main.c: 439:         }
  9071     061F  2EC1               	goto	l257
  9072     0620                     l249:	
  9073                           ;main.c: 440:         else if(( RC2==1) && (RE1==1 || RC0)){
  9074                           
  9075     0620  1D07               	btfss	7,2	;volatile
  9076     0621  2E23               	goto	u6021
  9077     0622  2E24               	goto	u6020
  9078     0623                     u6021:
  9079     0623  2E2D               	goto	l253
  9080     0624                     u6020:
  9081     0624                     l4436:
  9082     0624  1889               	btfsc	9,1	;volatile
  9083     0625  2E27               	goto	u6031
  9084     0626  2E28               	goto	u6030
  9085     0627                     u6031:
  9086     0627  2E1C               	goto	l251
  9087     0628                     u6030:
  9088     0628                     l4438:
  9089     0628  1C07               	btfss	7,0	;volatile
  9090     0629  2E2B               	goto	u6041
  9091     062A  2E2C               	goto	u6040
  9092     062B                     u6041:
  9093     062B  2E2D               	goto	l253
  9094     062C                     u6040:
  9095     062C  2E1C               	goto	l251
  9096     062D                     l253:	
  9097                           ;main.c: 444:         else {
  9098                           
  9099                           
  9100                           ;main.c: 445:             RA4=0;
  9101     062D  1205               	bcf	5,4	;volatile
  9102     062E  2EC1               	goto	l257
  9103     062F                     l180:	
  9104                           ;main.c: 450: else if( RC3==1) {
  9105                           
  9106     062F  1D87               	btfss	7,3	;volatile
  9107     0630  2E32               	goto	u6051
  9108     0631  2E33               	goto	u6050
  9109     0632                     u6051:
  9110     0632  2E89               	goto	l258
  9111     0633                     u6050:
  9112     0633                     l4440:
  9113                           
  9114                           ;main.c: 455:     Lcd_Set_Cursor(1,1);
  9115     0633  01A4               	clrf	Lcd_Set_Cursor@b
  9116     0634  0AA4               	incf	Lcd_Set_Cursor@b,f
  9117     0635  3001               	movlw	1
  9118     0636  160A  118A  2450  120A  118A  	fcall	_Lcd_Set_Cursor
  9119     063B                     l4442:
  9120                           
  9121                           ;main.c: 456:             Lcd_Write_String("   FEED RATE ERROR       ");
  9122     063B  3037               	movlw	low (STR_38| (0+32768))
  9123     063C  1283               	bcf	3,5	;RP0=0, select bank0
  9124     063D  1303               	bcf	3,6	;RP1=0, select bank0
  9125     063E  00A5               	movwf	Lcd_Write_String@a
  9126     063F  3098               	movlw	high (STR_38| (0+32768))
  9127     0640  00A6               	movwf	Lcd_Write_String@a+1
  9128     0641  160A  118A  2336  120A  118A  	fcall	_Lcd_Write_String
  9129     0646                     l4444:
  9130                           
  9131                           ;main.c: 457:     Lcd_Set_Cursor(2,1);
  9132     0646  1283               	bcf	3,5	;RP0=0, select bank0
  9133     0647  1303               	bcf	3,6	;RP1=0, select bank0
  9134     0648  01A4               	clrf	Lcd_Set_Cursor@b
  9135     0649  0AA4               	incf	Lcd_Set_Cursor@b,f
  9136     064A  3002               	movlw	2
  9137     064B  160A  118A  2450  120A  118A  	fcall	_Lcd_Set_Cursor
  9138                           
  9139                           ;main.c: 458:             Lcd_Write_String("   ILERLEME HATASI        ");
  9140     0650  301C               	movlw	low (STR_39| (0+32768))
  9141     0651  1283               	bcf	3,5	;RP0=0, select bank0
  9142     0652  1303               	bcf	3,6	;RP1=0, select bank0
  9143     0653  00A5               	movwf	Lcd_Write_String@a
  9144     0654  3098               	movlw	high (STR_39| (0+32768))
  9145     0655  00A6               	movwf	Lcd_Write_String@a+1
  9146     0656  160A  118A  2336  120A  118A  	fcall	_Lcd_Write_String
  9147                           
  9148                           ;main.c: 459:      UART_Write_Text("s0\r\n");
  9149     065B  3065               	movlw	low (STR_25| (0+32768))
  9150     065C  1283               	bcf	3,5	;RP0=0, select bank0
  9151     065D  1303               	bcf	3,6	;RP1=0, select bank0
  9152     065E  00A1               	movwf	UART_Write_Text@text
  9153     065F  3099               	movlw	high (STR_25| (0+32768))
  9154     0660  00A2               	movwf	UART_Write_Text@text+1
  9155     0661  160A  118A  237C  120A  118A  	fcall	_UART_Write_Text
  9156     0666                     l4446:
  9157                           
  9158                           ;main.c: 460:       RA4=1;
  9159     0666  1283               	bcf	3,5	;RP0=0, select bank0
  9160     0667  1303               	bcf	3,6	;RP1=0, select bank0
  9161     0668  1605               	bsf	5,4	;volatile
  9162     0669                     l4448:
  9163                           
  9164                           ;main.c: 461:       _delay((unsigned long)((1000)*(4000000/4000.0)));
  9165     0669  3006               	movlw	6
  9166     066A  1283               	bcf	3,5	;RP0=0, select bank0
  9167     066B  1303               	bcf	3,6	;RP1=0, select bank0
  9168     066C  00D6               	movwf	??_main+2
  9169     066D  3013               	movlw	19
  9170     066E  00D5               	movwf	??_main+1
  9171     066F  30AD               	movlw	173
  9172     0670  00D4               	movwf	??_main
  9173     0671                     u6107:
  9174     0671  0BD4               	decfsz	??_main,f
  9175     0672  2E71               	goto	u6107
  9176     0673  0BD5               	decfsz	??_main+1,f
  9177     0674  2E71               	goto	u6107
  9178     0675  0BD6               	decfsz	??_main+2,f
  9179     0676  2E71               	goto	u6107
  9180     0677                     l4450:
  9181                           
  9182                           ;main.c: 462:       RA4=0;
  9183     0677  1283               	bcf	3,5	;RP0=0, select bank0
  9184     0678  1303               	bcf	3,6	;RP1=0, select bank0
  9185     0679  1205               	bcf	5,4	;volatile
  9186     067A                     l4452:
  9187                           
  9188                           ;main.c: 463:       _delay((unsigned long)((3000)*(4000000/4000.0)));
  9189     067A  3010               	movlw	16
  9190     067B  1283               	bcf	3,5	;RP0=0, select bank0
  9191     067C  1303               	bcf	3,6	;RP1=0, select bank0
  9192     067D  00D6               	movwf	??_main+2
  9193     067E  3039               	movlw	57
  9194     067F  00D5               	movwf	??_main+1
  9195     0680  300D               	movlw	13
  9196     0681  00D4               	movwf	??_main
  9197     0682                     u6117:
  9198     0682  0BD4               	decfsz	??_main,f
  9199     0683  2E82               	goto	u6117
  9200     0684  0BD5               	decfsz	??_main+1,f
  9201     0685  2E82               	goto	u6117
  9202     0686  0BD6               	decfsz	??_main+2,f
  9203     0687  2E82               	goto	u6117
  9204     0688  2E1C               	goto	l251
  9205     0689                     l258:	
  9206                           ;main.c: 469:      else if (RD0 == 1 ){
  9207                           
  9208     0689  1C08               	btfss	8,0	;volatile
  9209     068A  2E8C               	goto	u6061
  9210     068B  2E8D               	goto	u6060
  9211     068C                     u6061:
  9212     068C  2EC1               	goto	l257
  9213     068D                     u6060:
  9214     068D                     l4456:
  9215                           
  9216                           ;main.c: 470:     UART_Write_Text("s0\r\n");
  9217     068D  3065               	movlw	low (STR_25| (0+32768))
  9218     068E  00A1               	movwf	UART_Write_Text@text
  9219     068F  3099               	movlw	high (STR_25| (0+32768))
  9220     0690  00A2               	movwf	UART_Write_Text@text+1
  9221     0691  160A  118A  237C  120A  118A  	fcall	_UART_Write_Text
  9222     0696                     l4458:
  9223                           
  9224                           ;main.c: 471:     Lcd_Set_Cursor(1,1);
  9225     0696  1283               	bcf	3,5	;RP0=0, select bank0
  9226     0697  1303               	bcf	3,6	;RP1=0, select bank0
  9227     0698  01A4               	clrf	Lcd_Set_Cursor@b
  9228     0699  0AA4               	incf	Lcd_Set_Cursor@b,f
  9229     069A  3001               	movlw	1
  9230     069B  160A  118A  2450  120A  118A  	fcall	_Lcd_Set_Cursor
  9231     06A0                     l4460:
  9232                           
  9233                           ;main.c: 472:             Lcd_Write_String("   ROTATION ERROR      ");
  9234     06A0  3069               	movlw	low (STR_42| (0+32768))
  9235     06A1  1283               	bcf	3,5	;RP0=0, select bank0
  9236     06A2  1303               	bcf	3,6	;RP1=0, select bank0
  9237     06A3  00A5               	movwf	Lcd_Write_String@a
  9238     06A4  3098               	movlw	high (STR_42| (0+32768))
  9239     06A5  00A6               	movwf	Lcd_Write_String@a+1
  9240     06A6  160A  118A  2336  120A  118A  	fcall	_Lcd_Write_String
  9241                           
  9242                           ;main.c: 473:     Lcd_Set_Cursor(2,1);
  9243     06AB  1283               	bcf	3,5	;RP0=0, select bank0
  9244     06AC  1303               	bcf	3,6	;RP1=0, select bank0
  9245     06AD  01A4               	clrf	Lcd_Set_Cursor@b
  9246     06AE  0AA4               	incf	Lcd_Set_Cursor@b,f
  9247     06AF  3002               	movlw	2
  9248     06B0  160A  118A  2450  120A  118A  	fcall	_Lcd_Set_Cursor
  9249     06B5                     l4462:
  9250                           
  9251                           ;main.c: 474:             Lcd_Write_String("   DONME HATASI        ");
  9252     06B5  3051               	movlw	low (STR_43| (0+32768))
  9253     06B6  1283               	bcf	3,5	;RP0=0, select bank0
  9254     06B7  1303               	bcf	3,6	;RP1=0, select bank0
  9255     06B8  00A5               	movwf	Lcd_Write_String@a
  9256     06B9  3098               	movlw	high (STR_43| (0+32768))
  9257     06BA  00A6               	movwf	Lcd_Write_String@a+1
  9258     06BB  160A  118A  2336  120A  118A  	fcall	_Lcd_Write_String
  9259     06C0  2E66               	goto	l4446
  9260     06C1                     l257:
  9261     06C1  120A  118A  2FBD   	goto	l4064
  9262     06C4                     l179:
  9263     06C4  120A  118A  280E   	ljmp	start
  9264     06C7                     __end_of_main:

Data Sizes:
    Strings     342
    Constant    10
    Data        6
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       8
    BANK0            80     78      78
    BANK1            80     80      80
    BANK3            96     16      22
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_35(CODE[6]), STR_33(CODE[6]), STR_29(CODE[6]), STR_27(CODE[6]), 
		 -> STR_23(CODE[10]), STR_21(CODE[6]), STR_18(CODE[11]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> main@combinedText_375(BANK1[20]), main@uartMessage_371(BANK1[8]), main@combinedText(BANK0[20]), main@uartMessage(BANK1[8]), 
		 -> main@rpmString(BANK1[5]), main@adcString1(BANK1[4]), main@lcdText(BANK1[9]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    UART_Write_Text@text	PTR unsigned char  size(2) Largest target is 20
		 -> STR_41(CODE[5]), STR_40(CODE[5]), STR_37(CODE[5]), main@combinedText_375(BANK1[20]), 
		 -> main@uartMessage_371(BANK1[8]), STR_31(CODE[5]), main@combinedText(BANK0[20]), main@uartMessage(BANK1[8]), 
		 -> STR_25(CODE[5]), 

    incrementTime@time	PTR struct Time size(1) Largest target is 6
		 -> currentTime(BANK3[6]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 27
		 -> STR_43(CODE[24]), STR_42(CODE[24]), STR_39(CODE[27]), STR_38(CODE[26]), 
		 -> STR_36(CODE[13]), STR_34(CODE[14]), STR_32(CODE[10]), STR_30(CODE[9]), 
		 -> STR_28(CODE[15]), STR_26(CODE[10]), STR_24(CODE[9]), main@rpmString(BANK1[5]), 
		 -> STR_22(CODE[5]), main@adcString1(BANK1[4]), STR_20(CODE[10]), STR_19(CODE[3]), 
		 -> main@lcdText(BANK1[9]), STR_17(CODE[14]), STR_16(CODE[19]), STR_15(CODE[14]), 
		 -> STR_14(CODE[19]), STR_13(CODE[14]), STR_12(CODE[19]), STR_11(CODE[14]), 
		 -> STR_10(CODE[19]), STR_9(CODE[14]), STR_8(CODE[19]), STR_7(CODE[14]), 
		 -> STR_6(CODE[19]), STR_5(CODE[21]), STR_4(CODE[20]), STR_3(CODE[3]), 
		 -> STR_2(CODE[15]), STR_1(CODE[16]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _timer_isr in COMMON

    _timer_isr->_incrementTime

Critical Paths under _main in BANK0

    _main->___flmul
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    ___lwdiv->___wmul
    ___flmul->___fldiv
    _UART_Write_Text->_UART_Write
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _timer_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _timer_isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _timer_isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _timer_isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               128   128      0   23819
                                             52 BANK0     26    26      0
                                              0 BANK1     80    80      0
                                              0 BANK3     16    16      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                    _UART_Initialize
                    _UART_Write_Text
                            ___fldiv
                            ___flmul
                            ___fltol
                            ___lwdiv
                            ___lwmod
                             ___wmul
                           ___xxtofl
                         _readEEPROM
                            _sprintf
                        _writeEEPROM
 ---------------------------------------------------------------------------------
 (1) _writeEEPROM                                          4     0      4     500
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             31    21     10    4645
                                             18 BANK0     23    13     10
                            ___fltol (ARG)
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      99
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1036
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     463
                                             13 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     770
                                              6 BANK0      7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _readEEPROM                                           4     2      2     301
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     517
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             26    18      8    3353
                                             26 BANK0     26    18      8
                          __Umul8_16
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) __Umul8_16                                            9     7      2     980
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             26    18      8    1273
                                              0 BANK0     26    18      8
 ---------------------------------------------------------------------------------
 (1) _UART_Write_Text                                      7     5      2     971
                                              1 BANK0      7     5      2
                         _UART_Write
 ---------------------------------------------------------------------------------
 (2) _UART_Write                                           1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2    3444
                                              5 BANK0      7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     254
                                              1 BANK0      4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1    3605
                                              4 BANK0      6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     279
                                              4 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     155
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     155
                                              1 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0     124
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _timer_isr                                            3     3      0     187
                                              3 COMMON     3     3      0
                      _incrementTime
 ---------------------------------------------------------------------------------
 (5) _incrementTime                                        3     3      0     187
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _UART_Initialize
   _UART_Write_Text
     _UART_Write
   ___fldiv
   ___flmul
     __Umul8_16
     ___fldiv (ARG)
   ___fltol
   ___lwdiv
     ___wmul (ARG)
   ___lwmod
     ___lwdiv (ARG)
   ___wmul
   ___xxtofl
   _readEEPROM
   _sprintf
     ___fltol (ARG)
     ___lwdiv (ARG)
     ___lwmod (ARG)
     ___wmul (ARG)
     _isdigit (ARG)
   _writeEEPROM

 _timer_isr (ROOT)
   _incrementTime

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60     10      16       9       22.9%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     50      50       7      100.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4E      4E       5       97.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       8       1       57.1%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      BC      12        0.0%
ABS                  0      0      BC       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sun Sep 17 21:23:37 2023

            ___fldiv@aexp 0039              ___fldiv@bexp 0038                         pc 0002  
            ___fldiv@sign 0031                        _RD 0C60                        _WR 0C61  
                      fsr 0004       ___wmul@multiplicand 0022       __Umul8_16@word_mpld 0026  
                     l121 1282                       l113 126C                       l114 126D  
                     l115 1273                       l211 0143                       l116 1274  
                     l124 1246                       l117 127A                       l133 149B  
                     l221 042F                       l118 127B                       l230 0494  
                     l214 025F                       l119 1281                       l127 11E3  
                     l136 14FE                       l152 125E                       l145 137B  
                     l233 04D0                       l225 0495                       l217 02CD  
                     l218 032A                       l139 083A                       l155 1262  
                     l251 061C                       l243 0503                       l235 04FB  
                     l180 062F                       l253 062D                       l229 0437  
                     l158 122A                       l406 0BE5                       l423 0CBA  
                     l239 059C                       l176 1589                       l281 11F1  
                     l257 06C1                       l249 0620                       l258 0689  
                     l275 1201                       l427 12B8                       l179 06C4  
                     l620 1561                       l613 1576                       l429 12D0  
                     l278 11E7                       l287 13C1                       l623 1576  
                     l385 0ADE                       l709 1335                       l397 0B7D  
                     l822 0F6F                       l399 0B53                       l816 0FFF  
                     l835 12E7                       l860 085F                       l837 12F9  
                     l862 08F4                       l792 0A3D                       l776 094B  
                     l880 1215                       l873 08BE                       l778 0AC3  
                     l874 08CA                       l699 1407                       l798 0AAF  
                     _GIE 005F                       _RB0 0030                       _RB1 0031  
                     _RB2 0032                       _RA4 002C                       _RC0 0038  
                     _RB3 0033                       _RC1 0039                       _RB4 0034  
                     _RC2 003A                       _RD0 0040                       _RB5 0035  
                     _RC3 003B                       _RE0 0048                       _RE1 0049  
                     _RE2 004A                       fsr0 0004                       indf 0000  
            ___flmul@aexp 0048              ___flmul@bexp 004D              ___flmul@sign 0047  
            ___flmul@temp 0052              ___flmul@prod 004E               main@lcdText 00B4  
            ___fltol@exp1 0029                      l2300 13D6                      l2310 13F6  
                    l2302 13DA                      l2312 13FD                      l2304 13DE  
                    l2320 1302                      l2400 125B                      l4000 071E  
                    l2306 13EF                      l2314 1403                      l2330 131E  
                    l2322 1305                      l2402 125C                      l4010 073B  
                    l4002 0735                      l2420 11FE                      l2308 13F5  
                    l2332 1324                      l2324 130C                      l2404 125D  
                    l4100 15CF                      l4020 0744                      l4012 073C  
                    l4004 0738                      l2334 132B                      l2326 1310  
                    l2318 12FA                      l4102 15D9                      l4030 0778  
                    l4022 074E                      l4014 073D                      l4006 0739  
                    l2600 0903                      l2328 1314                      l2336 1331  
                    l4200 1750                      l4120 1621                      l4104 15E4  
                    l4112 1605                      l4040 079F                      l4032 0783  
                    l4024 0759                      l4016 073E                      l4008 073A  
                    l2418 11F2                      l2602 0908                      l2610 0918  
                    l4210 1776                      l4202 1765                      l4122 162C  
                    l4114 160A                      l4106 15F9                      l4050 07B1  
                    l4042 07A3                      l4034 0791                      l4026 0763  
                    l4018 073F                      l2620 092E                      l2612 0920  
                    l2604 090D                      l2292 13C2                      l4300 024F  
                    l4220 179C                      l4204 1768                      l4212 1779  
                    l4140 1678                      l4132 164B                      l4124 1632  
                    l4108 15FC                      l4116 160D                      l4060 07B6  
                    l4052 07B2                      l4044 07A6                      l4036 0796  
                    l4028 076E                      l3510 1271                      l2710 0A72  
                    l2702 0A42                      l2622 0933                      l2630 0943  
                    l2614 0925                      l2606 0915                      l2294 13C6  
                    l4310 029F                      l4302 0255                      l4230 17BD  
                    l4222 17A1                      l4214 1784                      l4150 1694  
                    l4134 1655                      l4126 1637                      l4118 1618  
                    l4070 07DC                      l4062 07B7                      l4054 07B3  
                    l4046 07AA                      l4038 079A                      l3512 1278  
                    l3520 1235                      l3600 146E                      l2720 0AA6  
                    l2704 0A47                      l2712 0A78                      l2632 0953  
                    l2640 096C                      l2624 0938                      l2616 0929  
                    l2608 0916                      l2296 13CC                      l4400 0537  
                    l4320 0334                      l4312 02A3                      l4304 025C  
                    l4232 17C8                      l4240 17E9                      l4224 17A5  
                    l4216 178D                      l4208 1771                      l4160 16B5  
                    l4152 169D                      l4136 1660                      l4144 1681  
                    l4128 163B                      l4080 1585                      l4072 07F1  
                    l4064 07BD                      l4056 07B4                      l4048 07B0  
                    l3514 127F                      l3506 1266                      l3522 1238  
                    l3610 1493                      l3602 1477                      l3530 080C  
                    l2730 0ABD                      l2722 0AAE                      l2714 0A85  
                    l2706 0A55                      l2650 0994                      l2642 0971  
                    l2634 095F                      l2626 0940                      l2618 092D  
                    l2298 13CF                      l2394 1247                      l4410 0578  
                    l4402 0544                      l4330 0391                      l4322 0345  
                    l4314 0323                      l4306 0263                      l4250 004F  
                    l4242 17EE                      l4234 17DD                      l4218 1796  
                    l4170 16ED                      l4154 16A6                      l4146 1686  
                    l4138 1675                      l4090 15B2                      l4082 1591  
                    l4074 1577                      l4066 07C7                      l4058 07B5  
                    l3508 126A                      l3524 1243                      l3516 122E  
                    l3620 14C4                      l3612 149C                      l3604 147D  
                    l3540 082D                      l3532 081A                      l2724 0AB3  
                    l2716 0A93                      l2708 0A59                      l2660 09BD  
                    l2652 099C                      l2636 0963                      l2628 0941  
                    l2900 0887                      l3700 0BDF                      l2396 1253  
                    l4420 05CC                      l4412 0590                      l4404 054C  
                    l4340 03F7                      l4332 039C                      l4324 034D  
                    l4316 0329                      l4308 0299                      l4260 006C  
                    l4252 0055                      l4236 17E0                      l4228 17B3  
                    l4244 17F1                      l4172 16F0                      l4164 16C3  
                    l4156 16AC                      l4180 1701                      l4148 1689  
                    l4092 15B8                      l4084 1595                      l4076 157D  
                    l4068 07D1                      l3518 122F                      l3614 14A2  
                    l3606 148A                      l3542 0830                      l3534 081D  
                    l3526 0805                      l3622 1336                      l2726 0AB7  
                    l2718 0AA2                      l2670 09DE                      l2662 09C1  
                    l2654 09A4                      l2646 097A                      l2910 08B4  
                    l2902 088B                      l3630 1216                      l3550 1205  
                    l3710 0C0A                      l3702 0BF0                      l2398 1256  
                    l4422 05E4                      l4414 05A0                      l4406 0559  
                    l4430 060E                      l4350 0418                      l4342 0402  
                    l4334 03A6                      l4326 0358                      l4318 032E  
                    l4262 0076                      l4254 005A                      l4246 003D  
                    l4190 1729                      l4182 170C                      l4166 16CD  
                    l4158 16B1                      l4094 15BD                      l4086 15A0  
                    l4078 1581                      l3616 14AD                      l3608 148D  
                    l3544 0837                      l3536 0824                      l3528 080B  
                    l3624 133B                      l2728 0AB9                      l2680 0A00  
                    l2672 09EC                      l2664 09C2                      l2656 09A6  
                    l2648 098C                      l2592 08F5                      l3800 1556  
                    l2920 08E7                      l2912 08B8                      l2904 0899  
                    l3632 121C                      l3552 1206                      l3720 0C22  
                    l3712 0C0F                      l3704 0BFC                      l3640 0AD0  
                    l4440 0633                      l4432 0614                      l4416 05A8  
                    l4424 05F0                      l4408 055F                      l4360 0447  
                    l4352 0423                      l4344 0408                      l4336 03B1  
                    l4328 0387                      l4280 00E3                      l4264 0081  
                    l4272 00A2                      l4256 005E                      l4248 0046  
                    l4192 172D                      l4184 1715                      l4168 16D8  
                    l4176 16F9                      l4096 15C1                      l4088 15A9  
                    l3618 14BE                      l3538 0827                      l3626 1357  
                    l3546 11E7                      l2682 0A09                      l2690 0A1D  
                    l2658 09AB                      l2666 09CB                      l2674 09F0  
                    l2594 08FA                      l3810 0CC4                      l3802 1566  
                    l2922 08EB                      l2914 08C2                      l2906 08A2  
                    l3570 12C6                      l3562 12AA                      l3554 120C  
                    l3730 0C4A                      l3714 0C13                      l3722 0C2F  
                    l3706 0C00                      l4514 0AF5                      l3650 0AE5  
                    l3642 0AD5                      l4450 0677                      l4442 063B  
                    l4434 0618                      l4426 05F8                      l4418 05B3  
                    l4370 0488                      l4362 0452                      l4354 0433  
                    l4346 040C                      l4338 03ED                      l4290 014D  
                    l4282 00ED                      l4274 00A7                      l4266 0096  
                    l4186 171E                      l4178 16FE                      l3628 135F  
                    l3548 11ED                      l2692 0A21                      l2684 0A0D  
                    l2676 09F6                      l2668 09DD                      l2596 08FE  
                    l3580 12DD                      l3900 0F49                      l3820 0CDB  
                    l3812 0CC8                      l3804 156B                      l2924 08EC  
                    l2916 08CC                      l2908 08A9                      l3572 12CC  
                    l3564 12AE                      l3556 1212                      l3740 0C8E  
                    l3732 0C50                      l3724 0C35                      l3716 0C19  
                    l3708 0C04                      l4516 0B6F                      l3660 0B3A  
                    l3652 0AFA                      l3644 0ADA                      l3636 0AC7  
                    l4460 06A0                      l4452 067A                      l4444 0646  
                    l4436 0624                      l4428 0603                      l4380 04D4  
                    l4372 0499                      l4364 045D                      l4356 043B  
                    l4348 0410                      l4292 016C                      l4284 013C  
                    l4268 0099                      l4276 00AA                      l4196 173B  
                    l4188 1724                      l3590 11D7                      l2694 0A22  
                    l2686 0A0E                      l2678 09FE                      l2598 0902  
                    l3582 12E1                      l3910 0F6C                      l3902 0F4F  
                    l3830 0CF2                      l3822 0CDD                      l3814 0CC9  
                    l3806 0CBB                      l2918 08E2                      l3566 12B2  
                    l3558 1214                      l3742 0C93                      l3734 0C55  
                    l3726 0C3A                      l3718 0C1E                      l3670 0B89  
                    l3662 0B40                      l3654 0B0C                      l3646 0ADF  
                    l3638 0ACA                      l4462 06B5                      l4446 0666  
                    l4438 0628                      l4390 04FF                      l4382 04D8  
                    l4374 04A1                      l4366 046C                      l4358 043F  
                    l4294 018F                      l4286 0142                      l4278 00CE  
                    l4198 1745                      l3592 1453                      l3760 137C  
                    l2696 0A26                      l2688 0A17                      l3584 12F0  
                    l3576 12D4                      l3920 0F8B                      l3904 0F53  
                    l3840 0D07                      l3832 0CF3                      l3824 0CE5  
                    l3816 0CCE                      l3808 0CC0                      l2880 083E  
                    l3568 12BF                      l3744 0C97                      l3728 0C3E  
                    l3736 0C59                      l3680 0BA3                      l3672 0B8D  
                    l3656 0B10                      l4456 068D                      l4448 0669  
                    l4392 0507                      l4384 04DC                      l4376 04AC  
                    l4368 0470                      l4296 01CB                      l4288 0147  
                    l3594 1458                      l3762 1381                      l2698 0A3A  
                    l3586 12F5                      l3578 12D6                      l3930 0FD1  
                    l3922 0FA4                      l3914 0F74                      l3906 0F54  
                    l3850 0D22                      l3842 0D0F                      l3834 0CF8  
                    l3826 0CEA                      l3818 0CD3                      l3770 150A  
                    l2882 0843                      l3738 0C5C                      l3674 0B91  
                    l3682 0BA7                      l3658 0B25                      l3666 0B55  
                    l3746 0CA0                      l4458 0696                      l4394 050B  
                    l4386 04E4                      l4378 04C4                      l4298 022C  
                    l3596 1465                      l3764 139D                      l3940 0FEE  
                    l3932 0FDB                      l3916 0F79                      l3924 0FAA  
                    l3908 0F58                      l3860 0D9E                      l3852 0D30  
                    l3844 0D14                      l3836 0CFD                      l3828 0CEE  
                    l3780 152F                      l2892 0870                      l2884 0847  
                    l3692 0BC9                      l3676 0B95                      l3668 0B81  
                    l3748 0CB6                      l4396 0513                      l4388 04EF  
                    l3598 1468                      l3766 13A5                      l3934 0FDD  
                    l3942 0FF3                      l3926 0FB7                      l3918 0F87  
                    l3870 0E0A                      l3862 0DBA                      l3854 0D3D  
                    l3846 0D19                      l3838 0D05                      l3790 153D  
                    l3782 1531                      l3774 1513                      l2894 0873  
                    l2886 0857                      l3694 0BCD                      l3678 0B9B  
                    l4398 051E                      l3950 06CA                      l3944 0FF7  
                    l3936 0FE9                      l3928 0FC2                      l3880 0E94  
                    l3872 0E18                      l3864 0DD6                      l3856 0D58  
                    l3792 1546                      l3784 1535                      l3776 1526  
                    l3768 14FF                      l2896 0877                      l2888 0867  
                    l3696 0BD3                      l3688 0BA9                      l3960 06CF  
                    l3952 06CB                      l3938 0FED                      l3890 0F24  
                    l3882 0EA2                      l3874 0E35                      l3866 0DDF  
                    l3858 0D74                      l3794 154F                      l3778 1527  
                    l2898 0880                      l3698 0BD9                      l3970 06D4  
                    l3962 06D0                      l3954 06CC                      l3892 0F32  
                    l3884 0ECD                      l3876 0E4C                      l3868 0DED  
                    l3980 06DF                      l3972 06D5                      l3964 06D1  
                    l3956 06CD                      l3948 06C7                      l3894 0F3B  
                    l3886 0EF3                      l3878 0E69                      l3990 06E4  
                    l3982 06E0                      l3974 06D6                      l3966 06D2  
                    l3958 06CE                      l3896 0F3F                      l3888 0F1B  
                    l3992 06E6                      l3984 06E1                      l3976 06DB  
                    l3968 06D3                      l3898 0F40                      l3994 06F0  
                    l3986 06E2                      l3978 06DE                      l3996 06F3  
                    l3988 06E3                      l3998 0707                      STR_1 18BD  
                    STR_2 18DC                      STR_3 196F                      STR_4 1896  
                    STR_5 1881                      STR_6 18AA                      STR_7 18F9  
                    STR_8 18AA                      STR_9 18F9                      _T0IF 005A  
                    u3000 0953                      u3001 0952                      u3010 0971  
                    u3011 0970                      u3020 09AB                      u3021 09AA  
                    u3110 0A0D                      u3111 0A0C                      u3200 0A85  
                    u2400 13EF                      u3201 0A84                      u3105 0A02  
                    u2401 13EE                      u3210 0AA2                      u3130 0A21  
                    u3050 09C1                      u3211 0AA1                      u3131 0A20  
                    u3051 09C0                      u3035 09AD                      u3220 0AB7  
                    u3140 0A26                      u2420 1403                      u3221 0AB6  
                    u3205 0A81                      u3141 0A25                      u3125 0A10  
                    u3045 09B6                      u2421 1402                      u2405 13EB  
                    u3150 0A3A                      u3070 09DD                      u2430 1302  
                    u3215 0A9E                      u3151 0A39                      u3071 09DC  
                    u2415 13F7                      u2431 1301                      u3160 0A41  
                    u3080 09F6                      u5000 0CC8                      u2360 13CC  
                    u3161 0A40                      u3081 09F5                      u3065 09C4  
                    u5001 0CC7                      u2361 13CB                      u3170 0A47  
                    u3090 09FE                      u5010 0CCE                      u2450 1314  
                    u3171 0A46                      u3091 09FD                      u3075 09D9  
                    u5011 0CCD                      u2451 1313                      u3180 0A59  
                    u5020 0CD3                      u2380 13DE                      u2460 131E  
                    u3181 0A58                      u5101 0DAC                      u5021 0CD2  
                    u2381 13DD                      u2461 131D                      u2445 1306  
                    u3190 0A68                      u5102 0DB3                      u5030 0CF2  
                    u5111 0DC8                      u5103 0DBA                      u5031 0CF1  
                    u2375 13D0                      u5112 0DCF                      u5040 0CF8  
                    u3600 0843                      u2480 1331                      u6000 0618  
                    u5201 0EE5                      u5113 0DD6                      u5041 0CF7  
                    u3601 0842                      u2481 1330                      u2465 131A  
                    u6001 0617                      u5210 0F01                      u5202 0EEC  
                    u5050 0CFD                      u3610 0847                      u6010 061C  
                    u3195 0A63                      u5203 0EF3                      u5131 0DFC  
                    u5051 0CFC                      u3611 0846                      u2395 13DF  
                    u2475 1325                      u6011 061B                      u5300 0F73  
                    u5132 0E03                      u5060 0D14                      u3700 08C2  
                    u3620 0867                      u6020 0624                      u5301 0F72  
                    u5221 0F0D                      u5141 0E27                      u5133 0E0A  
                    u5125 0DD8                      u5061 0D13                      u3701 08C1  
                    u3621 0866                      u6021 0623                      u4510 11ED  
                    u5310 0F79                      u5222 0F14                      u5142 0E2E  
                    u5070 0D19                      u3710 08D7                      u2590 1262  
                    u6030 0628                      u4511 11EC                      u5311 0F78  
                    u5223 0F1B                      u5215 0EFC                      u5143 0E35  
                    u5071 0D18                      u2591 1261                      u6031 0627  
                    u4600 12F5                      u5320 0F8B                      u3720 08E7  
                    u3640 0886                      u4520 120C                      u6040 062C  
                    u5400 1581                      u4505 080F                      u4601 12F4  
                    u5321 0F8A                      u5161 0E5B                      u5081 0D66  
                    u3721 08E6                      u3641 0885                      u4521 120B  
                    u6041 062B                      u5401 1580                      u4610 1458  
                    u5330 0F9A                      u5250 0F3F                      u5162 0E62  
                    u5082 0D6D                      u3730 08EB                      u4530 1212  
                    u6050 0633                      u5410 1585                      u4611 1457  
                    u5251 0F3E                      u5235 0F1D                      u5171 0E86  
                    u5163 0E69                      u5155 0E37                      u5091 0D82  
                    u5083 0D74                      u3731 08EA                      u3715 08D2  
                    u3635 0878                      u4531 1211                      u6107 0671  
                    u6051 0632                      u5411 1584                      u4460 126A  
                    u2940 0902                      u5340 0FB7                      u5172 0E8D  
                    u5092 0D89                      u3660 08A8                      u4540 12B2  
                    u4700 0B52                      u6060 068D                      u5500 1621  
                    u5420 1591                      u4461 1269                      u2941 0901  
                    u5341 0FB6                      u5245 0F34                      u5181 0EB1  
                    u5173 0E94                      u5093 0D90                      u3661 08A7  
                    u4541 12B1                      u4701 0B51                      u6061 068C  
                    u6117 0682                      u5501 1620                      u5421 158E  
                    u4470 1271                      u4630 147D                      u2950 0908  
                    u5350 0FD1                      u5270 0F53                      u5190 0ED9  
                    u5182 0EB8                      u4710 0B81                      u5510 162C  
                    u5430 1595                      u4471 1270                      u4631 147C  
                    u6127 0821                      u2951 0907                      u5351 0FD0  
                    u5335 0F95                      u5271 0F52                      u5183 0EBF  
                    u3655 089A                      u4711 0B80                      u5511 1629  
                    u5431 1594                      u4480 1278                      u2960 090D  
                    u5360 0FED                      u5280 0F58                      u3680 08B8  
                    u4800 0C19                      u4720 0B91                      u5600 1715  
                    u5520 1632                      u5440 15A0                      u4481 1277  
                    u4625 145E                      u6137 0834                      u2961 090C  
                    u5361 0FEC                      u5345 0FB3                      u5281 0F57  
                    u5265 0F42                      u3681 08B7                      u4801 0C18  
                    u4721 0B90                      u5601 1714                      u5521 1631  
                    u5441 159F                      u4490 127F                      u4650 1345  
                    u2970 092D                      u5290 0F6C                      u3690 08BE  
                    u4570 12CC                      u4810 0C2E                      u4730 0BC8  
                    u5610 171E                      u5530 1648                      u5450 15A9  
                    u5370 07C7                      u4491 127E                      u6147 14A8  
                    u2971 092C                      u5355 0FCD                      u5291 0F6B  
                    u5195 0ED4                      u3691 08BD                      u3675 08AD  
                    u4571 12CB                      u4555 12B9                      u4811 0C2D  
                    u4731 0BC7                      u5611 171D                      u5531 1647  
                    u5451 15A8                      u5371 07C4                      u4660 1369  
                    u2980 0933                      u4580 12E1                      u4900 150A  
                    u4820 0C35                      u4740 0BD3                      u5700 0046  
                    u5620 1724                      u5540 1694                      u5460 15B2  
                    u5380 1577                      u6157 14B9                      u4645 1483  
                    u2981 0932                      u4581 12E0                      u4901 1509  
                    u4565 12C0                      u4821 0C34                      u4741 0BD2  
                    u5701 0045                      u5621 1723                      u5541 1693  
                    u5461 15B1                      u5381 07F8                      u6077 06EC  
                    u4670 137B                      u2990 0938                      u4910 1521  
                    u4830 0C4A                      u4750 0BD9                      u5710 004F  
                    u5630 173A                      u5550 169D                      u5470 15B8  
                    u5390 157D                      u6167 14CA                      u4671 137A  
                    u2991 0937                      u4831 0C49                      u4751 0BD8  
                    u4735 0BC4                      u5711 004E                      u5631 1739  
                    u5551 169C                      u5535 1644                      u5471 15B7  
                    u5391 157A                      u6087 078B                      u4920 1535  
                    u4840 0C50                      u4760 0BDF                      u4680 0AD0  
                    u5800 040C                      u5720 0055                      u5640 1784  
                    u5560 16A6                      u5480 15CE                      u6177 123E  
                    u4921 1534                      u4841 0C4F                      u4761 0BDE  
                    u4681 0ACF                      u5801 040B                      u6097 0259  
                    u5721 0054                      u5641 1783                      u5561 16A5  
                    u5481 15CD                      u4930 153C                      u4850 0CA0  
                    u4770 0BF0                      u4690 0B0C                      u5810 0410  
                    u5730 006B                      u5650 178D                      u5570 16AC  
                    u5490 1618                      u4595 12E8                      u4931 153B  
                    u4915 151C                      u4851 0C9F                      u4771 0BEF  
                    u4691 0B0B                      u5811 040F                      u5731 006A  
                    u5651 178C                      u5635 1736                      u5571 16AB  
                    u5491 1617                      u4860 0CB6                      u4780 0C04  
                    u5900 04D8                      u5820 0433                      u5740 0147  
                    u5660 1796                      u5580 16C2                      u4861 0CB5  
                    u4781 0C03                      u5901 04D7                      u5821 0432  
                    u5741 0146                      u5661 1795                      u5581 16C1  
                    u5485 15CA                      u4870 138B                      u4950 154E  
                    u4790 0C0A                      u5910 04DC                      u5830 0437  
                    u5750 0263                      u5670 179C                      u5590 170C  
                    u4951 154D                      u4791 0C09                      u4775 0BEC  
                    u5911 04DB                      u5831 0436                      u5751 0262  
                    u5735 0067                      u5671 179B                      u5591 170B  
                    u4880 13AF                      u4960 1555                      u5920 04FF  
                    u5840 043B                      u5760 029F                      u5680 17B2  
                    u4961 1554                      u4945 153E                      u5921 04FE  
                    u5841 043A                      u5761 029E                      u5681 17B1  
                    u5585 16BE                      u4890 13C1                      u5930 0503  
                    u5850 043F                      u5770 02A3                      u5690 003D  
                    u4891 13C0                      u5931 0502                      u5851 043E  
                    u5771 02A2                      u5691 17FD                      u4980 1566  
                    u5940 0507                      u5860 045D                      u5780 032E  
                    u4981 1565                      u5941 0506                      u5861 045C  
                    u5781 032D                      u5685 17AE                      u4990 156B  
                    u5950 050B                      u5870 046C                      u5790 0408  
                    u4991 156A                      u4975 1558                      u5951 050A  
                    u5871 046B                      u5791 0407                      u5960 0544  
                    u5880 0499                      u5961 0543                      u5881 0498  
                    u5970 0559                      u5890 04D4                      u5971 0558  
                    u5891 04D3                      u5980 05A0                      u5981 059F  
                    u5965 0540                      u5990 0614                      u5991 0613  
                    u5975 0555                      _TMR0 0001                      _TRMT 04C1  
                    _WREN 0C62         ?_Lcd_Write_String 0025                      _main 06C7  
                    btemp 007E                      start 000E        ??_Lcd_Write_String 0027  
         ___fldiv@new_exp 0032           __end_of_Lcd_Cmd 1247               _writeEEPROM 1247  
 __end_of_UART_Write_Text 13C2          ?_UART_Initialize 0070             ___fltol@sign1 0028  
      writeEEPROM@address 0020                     ?_main 0070           __end_of___fldiv 0AC4  
                   _EEADR 010D                     STR_10 18AA                     STR_11 18F9  
                   STR_12 18AA                     STR_20 191F                     STR_13 18F9  
                   STR_21 195F                     STR_14 18AA                     STR_22 196A  
                   STR_30 1950                     STR_31 1965                     STR_15 18F9  
                   STR_23 193D                     STR_40 1965                     STR_16 18AA  
                   STR_24 1947                     STR_32 1933                     STR_41 1965  
                   STR_33 1959                     STR_17 18F9                     STR_25 1965  
                   STR_26 1929                     STR_18 1914                     STR_34 18EB  
                   STR_42 1869                     STR_35 1959                     STR_19 18D9  
                   STR_27 1959                     STR_43 1851                     STR_36 1907  
                   STR_28 18CD                     STR_37 1965                     STR_29 1959  
                   STR_38 1837                     STR_39 181C           __end_of___flmul 1000  
         __end_of___fltol 1577           __end_of___lwdiv 1408                     i1l170 12A1  
                   i1l163 144F           __end_of___lwmod 1336                     _RCSTA 0018  
                   _SPBRG 0099                     _TRISB 0086                     _TRISD 0088  
                   _TXREG 0019                     _TXSTA 0098               ?_UART_Write 0070  
         __end_of_dpowers 181C           __end_of_isdigit 1216                     main@i 00EC  
            main@rpmValue 006C             main@adcValue1 00E6             main@adcValue2 00D6  
           main@adcValue3 00D8                     pclath 000A                     status 0003  
                   wtemp0 007E           __end_of_sprintf 0CBB          __end_of_Lcd_Init 14FF  
        __end_of_Lcd_Port 1283           __initialization 0011              __end_of_main 06C7  
                  ??_main 0054             main@ilkAcilis 00E4                    _ADRESH 001E  
                  _ADRESL 009E                    _EEDATA 010C                    _EECON2 018D  
                  i1l2412 1409                    i1l2414 1423                    i1l2416 1442  
                  i1l2930 1287                    i1l2932 1288                    i1l2934 1292  
                  i1l2936 1299                    i1l2928 1283                    i1l2938 129B  
                  u260_20 1423                    u260_21 1422                    u261_20 1442  
                  u261_21 1441                    u374_20 1287                    u374_21 1286  
                  u375_20 1299                    u375_21 1298                 ??_Lcd_Cmd 0021  
                  _TRISA0 0428                    _TRISA1 0429                    _TRISA2 042A  
                  _TRISA3 042B                    _TRISA4 042C                    _TRISC0 0438  
                  _TRISC1 0439                    _TRISA5 042D                    _TRISC2 043A  
                  _TRISD0 0440                    _TRISC3 043B                    _TRISE0 0448  
                  _TRISC4 043C                    _TRISE1 0449                    _TRISC5 043D  
                  _TRISE2 044A                    _TRISC6 043E                    _TRISC7 043F  
        __end_of___xxtofl 08F5                    ___wmul 12AA                 ??___fldiv 0028  
               ??___flmul 0042          ?_UART_Write_Text 0021                 ??___fltol 0024  
               ??___lwdiv 0076                 ??___lwmod 0076             _incrementTime 1408  
           main@rpmString 00D1                 ??_isdigit 0076                    saved_w 007E  
          main@adcString1 00E0                 ??_sprintf 003C           Lcd_Set_Cursor@a 0026  
         Lcd_Set_Cursor@b 0024           Lcd_Set_Cursor@y 0028           Lcd_Set_Cursor@z 0027  
            ___xxtofl@arg 002A              ___xxtofl@exp 0029              ___xxtofl@val 0020  
 __end_of__initialization 0039         __end_of_Lcd_Clear 11E4                ___fltol@f1 0020  
         writeEEPROM@data 0022            __pcstackCOMMON 0070              __pidataBANK3 11D1  
          ?_incrementTime 0070            _Lcd_Set_Cursor 1450         incrementTime@time 0072  
          _OPTION_REGbits 0081        main@gostermeliklcd 00CD                 ?_Lcd_Init 0070  
               ?_Lcd_Port 0070              sprintf@width 0045          main@combinedText 0058  
       __end_of__Umul8_16 12FA                __pmaintext 06C7              ?_writeEEPROM 0020  
                 ?___wmul 0020                __pintentry 0004    __end_of_Lcd_Set_Cursor 149C  
        main@displayValue 019E                 ?___xxtofl 0020              ??_UART_Write 0076  
              ??_Lcd_Init 0024                ??_Lcd_Port 0076                __stringtab 1800  
          _Lcd_Write_Char 0802                   _Lcd_Cmd 122B                _readEEPROM 1216  
                 ___fldiv 08F5           ??_incrementTime 0070                   ___flmul 0CBB  
                 ___fltol 14FF        __end_of_UART_Write 11F2                   ___lwdiv 13C2  
                 ___lwmod 12FA           ?_Lcd_Set_Cursor 0024                   __ptext1 1247  
                 __ptext2 0AC4                   __ptext3 1202                   __ptext4 12AA  
                 __ptext5 12FA                   __ptext6 13C2                   __ptext7 1216  
                 __ptext8 083B                   __ptext9 14FF                   _dpowers 1812  
                 _isdigit 1202                ??___xxtofl 0024     main@negativeFeedValue 019C  
                 _sprintf 0AC4    __end_of_Lcd_Write_Char 083B      end_of_initialization 0039  
       __end_of_timer_isr 12AA                   psplit$0 B0026                   psplit$1 260027  
                 psplit$2 270028                 Lcd_Port@a 0020              __pstringtext 1800  
          UART_Write@data 0020             ___xxtofl@sign 0028               ___fldiv@grs 0034  
             ___fldiv@rem 002D      pnum$maintext_split_1 0026      pnum$maintext_split_2 0027  
    pnum$maintext_split_3 0028         readEEPROM@address 0020           ?_Lcd_Write_Char 0070  
       Lcd_Write_String@a 0025         Lcd_Write_String@i 002A               ___flmul@grs 0049  
              main@binler 0198                main@birler 00DC               ?_readEEPROM 0020  
              main@yuzler 00EA                 _Lcd_Clear 11D7            __end_of___wmul 12D1  
        _Lcd_Write_String 1336       start_initialization 0011         ??_UART_Initialize 0076  
              ?_Lcd_Clear 0070                  ??___wmul 0076                 __Umul8_16 12D1  
             __pdataBANK3 01A0           Lcd_Write_Char@a 0024           Lcd_Write_Char@y 0023  
               ___fldiv@a 0020                 ___fldiv@b 0024                 ___flmul@a 003E  
               ___flmul@b 003A               __pbssCOMMON 0076                 ___latbits 0002  
           __pcstackBANK0 0020             __pcstackBANK1 00A0             __pcstackBANK3 0190  
                ?_Lcd_Cmd 0070               sprintf@flag 0044               sprintf@prec 0040  
        ___lwdiv@dividend 0028  main@negativeDisplayValue 00DE          ??_Lcd_Set_Cursor 0025  
                ?___fldiv 0020                  ?___flmul 003A                  ?___fltol 0020  
              ?__Umul8_16 0020                  ?___lwdiv 0026                  ?___lwmod 002D  
                ?_isdigit 0070          ___lwdiv@quotient 002A                  ?_sprintf 0032  
       ??_UART_Write_Text 0023         interrupt_function 0004            ___wmul@product 0024  
                Lcd_Cmd@a 0023               ??_Lcd_Clear 0076                 _timer_isr 1283  
   __end_of_incrementTime 1450                _ADCON0bits 001F               __stringbase 1812  
              _ADCON1bits 009F                 main@i_321 00EE                 main@i_330 0194  
               main@i_324 0190                 main@i_333 0196                 main@i_327 0192  
       ___wmul@multiplier 0020          ??_Lcd_Write_Char 0021                 main@onlar 00DA  
                _Lcd_Init 149C                  _Lcd_Port 1263           main@integerPart 019A  
__end_of_Lcd_Write_String 137C              ??_readEEPROM 0022               _kesmeSayaci 0076  
             ??__Umul8_16 0022                ?_timer_isr 0070              pnum$maintext 000B  
      __end_of__stringtab 1812               _isdigit$850 0020           _UART_Initialize 11F2  
             _currentTime 01A0                sprintf@val 0042                  ___xxtofl 083B  
      __end_of_readEEPROM 122B           ___lwdiv@divisor 0026           ___lwdiv@counter 002C  
                __ptext10 0CBB                  __ptext11 12D1                  __ptext20 11D7  
                __ptext12 08F5                  __ptext21 122B                  __ptext13 137C  
                __ptext22 1263                  __ptext14 11E4                  __ptext23 1283  
                __ptext15 11F2                  __ptext24 1408                  __ptext16 1336  
                __ptext17 0802                  __ptext18 1450                  __ptext19 149C  
     UART_Write_Text@text 0021             ??_writeEEPROM 0076           main@uartMessage 00BD  
              _INTCONbits 000B                  isdigit@c 0021        Lcd_Write_Char@temp 0022  
                intlevel1 0000                 sprintf@ap 0041                 sprintf@sp 0048  
        ___lwmod@dividend 002F                 stringcode 180A               ??_timer_isr 0073  
 __end_of_UART_Initialize 1202       main@uartMessage_371 00C5        Lcd_Set_Cursor@temp 0029  
    main@combinedText_375 00A0       __end_of_writeEEPROM 1263    __Umul8_16@multiplicand 0020  
         _UART_Write_Text 137C                  sprintf@c 0047                  sprintf@f 0032  
         ___lwmod@divisor 002D           ___lwmod@counter 0031                  stringtab 1800  
              _UART_Write 11E4          UART_Write_Text@i 0026      __Umul8_16@multiplier 0028  
       __Umul8_16@product 0024  
