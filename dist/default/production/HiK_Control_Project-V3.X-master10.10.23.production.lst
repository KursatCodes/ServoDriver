

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Oct 10 16:06:58 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	maintext,global,class=CODE,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2,group=3
    25                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text17,local,class=CODE,merge=1,delta=2,group=3
    35                           	psect	text18,local,class=CODE,merge=1,delta=2,group=3
    36                           	psect	text19,local,class=CODE,merge=1,delta=2,group=3
    37                           	psect	text20,local,class=CODE,merge=1,delta=2,group=3
    38                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    45                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2
    50                           	psect	text33,local,class=CODE,merge=1,delta=2
    51                           	psect	text34,local,class=CODE,merge=1,delta=2
    52                           	psect	text35,local,class=CODE,merge=1,delta=2
    53                           	psect	intentry,global,class=CODE,delta=2
    54                           	psect	text36,local,class=CODE,merge=1,delta=2
    55                           	psect	text37,local,class=CODE,merge=1,delta=2
    56                           	psect	text38,local,class=CODE,merge=1,delta=2
    57                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    58                           	psect	maintext_split_1,global,class=CODE,split=1,delta=2
    59                           	psect	maintext_split_2,global,class=CODE,split=1,delta=2
    60                           	dabs	1,0x7E,2
    61     0000                     
    62                           ; Generated 22/03/2023 GMT
    63                           ; 
    64                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    65                           ; All rights reserved.
    66                           ; 
    67                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    68                           ; 
    69                           ; Redistribution and use in source and binary forms, with or without modification, are
    70                           ; permitted provided that the following conditions are met:
    71                           ; 
    72                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    73                           ;        conditions and the following disclaimer.
    74                           ; 
    75                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    76                           ;        of conditions and the following disclaimer in the documentation and/or other
    77                           ;        materials provided with the distribution. Publication is not required when
    78                           ;        this file is used in an embedded application.
    79                           ; 
    80                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    81                           ;        software without specific prior written permission.
    82                           ; 
    83                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    84                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    85                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    86                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    87                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    88                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    89                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    90                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    91                           ; 
    92                           ; 
    93                           ; Code-generator required, PIC16F877A Definitions
    94                           ; 
    95                           ; SFR Addresses
    96     0000                     	;# 
    97     0001                     	;# 
    98     0002                     	;# 
    99     0003                     	;# 
   100     0004                     	;# 
   101     0005                     	;# 
   102     0006                     	;# 
   103     0007                     	;# 
   104     0008                     	;# 
   105     0009                     	;# 
   106     000A                     	;# 
   107     000B                     	;# 
   108     000C                     	;# 
   109     000D                     	;# 
   110     000E                     	;# 
   111     000E                     	;# 
   112     000F                     	;# 
   113     0010                     	;# 
   114     0011                     	;# 
   115     0012                     	;# 
   116     0013                     	;# 
   117     0014                     	;# 
   118     0015                     	;# 
   119     0015                     	;# 
   120     0016                     	;# 
   121     0017                     	;# 
   122     0018                     	;# 
   123     0019                     	;# 
   124     001A                     	;# 
   125     001B                     	;# 
   126     001B                     	;# 
   127     001C                     	;# 
   128     001D                     	;# 
   129     001E                     	;# 
   130     001F                     	;# 
   131     0081                     	;# 
   132     0085                     	;# 
   133     0086                     	;# 
   134     0087                     	;# 
   135     0088                     	;# 
   136     0089                     	;# 
   137     008C                     	;# 
   138     008D                     	;# 
   139     008E                     	;# 
   140     0091                     	;# 
   141     0092                     	;# 
   142     0093                     	;# 
   143     0094                     	;# 
   144     0098                     	;# 
   145     0099                     	;# 
   146     009C                     	;# 
   147     009D                     	;# 
   148     009E                     	;# 
   149     009F                     	;# 
   150     010C                     	;# 
   151     010D                     	;# 
   152     010E                     	;# 
   153     010F                     	;# 
   154     018C                     	;# 
   155     018D                     	;# 
   156     0000                     	;# 
   157     0001                     	;# 
   158     0002                     	;# 
   159     0003                     	;# 
   160     0004                     	;# 
   161     0005                     	;# 
   162     0006                     	;# 
   163     0007                     	;# 
   164     0008                     	;# 
   165     0009                     	;# 
   166     000A                     	;# 
   167     000B                     	;# 
   168     000C                     	;# 
   169     000D                     	;# 
   170     000E                     	;# 
   171     000E                     	;# 
   172     000F                     	;# 
   173     0010                     	;# 
   174     0011                     	;# 
   175     0012                     	;# 
   176     0013                     	;# 
   177     0014                     	;# 
   178     0015                     	;# 
   179     0015                     	;# 
   180     0016                     	;# 
   181     0017                     	;# 
   182     0018                     	;# 
   183     0019                     	;# 
   184     001A                     	;# 
   185     001B                     	;# 
   186     001B                     	;# 
   187     001C                     	;# 
   188     001D                     	;# 
   189     001E                     	;# 
   190     001F                     	;# 
   191     0081                     	;# 
   192     0085                     	;# 
   193     0086                     	;# 
   194     0087                     	;# 
   195     0088                     	;# 
   196     0089                     	;# 
   197     008C                     	;# 
   198     008D                     	;# 
   199     008E                     	;# 
   200     0091                     	;# 
   201     0092                     	;# 
   202     0093                     	;# 
   203     0094                     	;# 
   204     0098                     	;# 
   205     0099                     	;# 
   206     009C                     	;# 
   207     009D                     	;# 
   208     009E                     	;# 
   209     009F                     	;# 
   210     010C                     	;# 
   211     010D                     	;# 
   212     010E                     	;# 
   213     010F                     	;# 
   214     018C                     	;# 
   215     018D                     	;# 
   216     0000                     	;# 
   217     0001                     	;# 
   218     0002                     	;# 
   219     0003                     	;# 
   220     0004                     	;# 
   221     0005                     	;# 
   222     0006                     	;# 
   223     0007                     	;# 
   224     0008                     	;# 
   225     0009                     	;# 
   226     000A                     	;# 
   227     000B                     	;# 
   228     000C                     	;# 
   229     000D                     	;# 
   230     000E                     	;# 
   231     000E                     	;# 
   232     000F                     	;# 
   233     0010                     	;# 
   234     0011                     	;# 
   235     0012                     	;# 
   236     0013                     	;# 
   237     0014                     	;# 
   238     0015                     	;# 
   239     0015                     	;# 
   240     0016                     	;# 
   241     0017                     	;# 
   242     0018                     	;# 
   243     0019                     	;# 
   244     001A                     	;# 
   245     001B                     	;# 
   246     001B                     	;# 
   247     001C                     	;# 
   248     001D                     	;# 
   249     001E                     	;# 
   250     001F                     	;# 
   251     0081                     	;# 
   252     0085                     	;# 
   253     0086                     	;# 
   254     0087                     	;# 
   255     0088                     	;# 
   256     0089                     	;# 
   257     008C                     	;# 
   258     008D                     	;# 
   259     008E                     	;# 
   260     0091                     	;# 
   261     0092                     	;# 
   262     0093                     	;# 
   263     0094                     	;# 
   264     0098                     	;# 
   265     0099                     	;# 
   266     009C                     	;# 
   267     009D                     	;# 
   268     009E                     	;# 
   269     009F                     	;# 
   270     010C                     	;# 
   271     010D                     	;# 
   272     010E                     	;# 
   273     010F                     	;# 
   274     018C                     	;# 
   275     018D                     	;# 
   276                           
   277                           	psect	idataCOMMON
   278     07FB                     __pidataCOMMON:
   279                           
   280                           ;initializer for _epromBaslaAdress
   281     07FB  3401               	retlw	1
   282     07FC  3400               	retlw	0
   283     001E                     _ADRESH	set	30
   284     001F                     _ADCON0bits	set	31
   285     000B                     _INTCONbits	set	11
   286     0001                     _TMR0	set	1
   287     0019                     _TXREG	set	25
   288     0018                     _RCSTA	set	24
   289     0040                     _RD0	set	64
   290     003B                     _RC3	set	59
   291     0049                     _RE1	set	73
   292     0038                     _RC0	set	56
   293     003A                     _RC2	set	58
   294     0048                     _RE0	set	72
   295     004A                     _RE2	set	74
   296     0039                     _RC1	set	57
   297     005A                     _T0IF	set	90
   298     005F                     _GIE	set	95
   299     002C                     _RA4	set	44
   300     0034                     _RB4	set	52
   301     0035                     _RB5	set	53
   302     0030                     _RB0	set	48
   303     0031                     _RB1	set	49
   304     0032                     _RB2	set	50
   305     0033                     _RB3	set	51
   306     009E                     _ADRESL	set	158
   307     009F                     _ADCON1bits	set	159
   308     0081                     _OPTION_REGbits	set	129
   309     0088                     _TRISD	set	136
   310     0086                     _TRISB	set	134
   311     0099                     _SPBRG	set	153
   312     0098                     _TXSTA	set	152
   313     043D                     _TRISC5	set	1085
   314     043C                     _TRISC4	set	1084
   315     042D                     _TRISA5	set	1069
   316     0428                     _TRISA0	set	1064
   317     043F                     _TRISC7	set	1087
   318     043E                     _TRISC6	set	1086
   319     042B                     _TRISA3	set	1067
   320     042A                     _TRISA2	set	1066
   321     0429                     _TRISA1	set	1065
   322     0440                     _TRISD0	set	1088
   323     043B                     _TRISC3	set	1083
   324     0438                     _TRISC0	set	1080
   325     044A                     _TRISE2	set	1098
   326     043A                     _TRISC2	set	1082
   327     0439                     _TRISC1	set	1081
   328     0449                     _TRISE1	set	1097
   329     0448                     _TRISE0	set	1096
   330     042C                     _TRISA4	set	1068
   331     04C1                     _TRMT	set	1217
   332     010C                     _EEDATA	set	268
   333     010D                     _EEADR	set	269
   334     018D                     _EECON2	set	397
   335     0C60                     _RD	set	3168
   336     0C61                     _WR	set	3169
   337     0C62                     _WREN	set	3170
   338                           
   339                           	psect	strings
   340     196B                     __pstrings:
   341     196B                     stringtab:
   342     196B                     __stringtab:
   343                           
   344                           ;	String table - string pointers are 2 bytes each
   345     196B  1BFF               	btfsc	btemp+1,7
   346     196C  2975               	ljmp	stringcode
   347     196D  1383               	bcf	3,7
   348     196E  187F               	btfsc	btemp+1,0
   349     196F  1783               	bsf	3,7
   350     1970  0800               	movf	0,w
   351     1971  0A84               	incf	4,f
   352     1972  1903               	skipnz
   353     1973  0AFF               	incf	btemp+1,f
   354     1974  0008               	return
   355     1975                     stringcode:
   356     1975  087F               	movf	btemp+1,w
   357     1976  397F               	andlw	127
   358     1977  008A               	movwf	10
   359     1978  0804               	movf	4,w
   360     1979  0A84               	incf	4,f
   361     197A  1903               	skipnz
   362     197B  0AFF               	incf	btemp+1,f
   363     197C  0082               	movwf	2
   364     197D                     __stringbase:
   365     197D                     __end_of__stringtab:
   366                           
   367                           	psect	stringtext
   368     1800                     __pstringtext:
   369     1800                     STR_29:
   370     1800  3420               	retlw	32	;' '
   371     1801  3420               	retlw	32	;' '
   372     1802  3420               	retlw	32	;' '
   373     1803  3449               	retlw	73	;'I'
   374     1804  344C               	retlw	76	;'L'
   375     1805  3445               	retlw	69	;'E'
   376     1806  3452               	retlw	82	;'R'
   377     1807  344C               	retlw	76	;'L'
   378     1808  3445               	retlw	69	;'E'
   379     1809  344D               	retlw	77	;'M'
   380     180A  3445               	retlw	69	;'E'
   381     180B  3420               	retlw	32	;' '
   382     180C  3448               	retlw	72	;'H'
   383     180D  3441               	retlw	65	;'A'
   384     180E  3454               	retlw	84	;'T'
   385     180F  3441               	retlw	65	;'A'
   386     1810  3453               	retlw	83	;'S'
   387     1811  3449               	retlw	73	;'I'
   388     1812  3420               	retlw	32	;' '
   389     1813  3420               	retlw	32	;' '
   390     1814  3420               	retlw	32	;' '
   391     1815  3420               	retlw	32	;' '
   392     1816  3420               	retlw	32	;' '
   393     1817  3420               	retlw	32	;' '
   394     1818  3420               	retlw	32	;' '
   395     1819  3420               	retlw	32	;' '
   396     181A  3400               	retlw	0
   397     181B                     STR_28:
   398     181B  3420               	retlw	32	;' '
   399     181C  3420               	retlw	32	;' '
   400     181D  3420               	retlw	32	;' '
   401     181E  3446               	retlw	70	;'F'
   402     181F  3445               	retlw	69	;'E'
   403     1820  3445               	retlw	69	;'E'
   404     1821  3444               	retlw	68	;'D'
   405     1822  3420               	retlw	32	;' '
   406     1823  3452               	retlw	82	;'R'
   407     1824  3441               	retlw	65	;'A'
   408     1825  3454               	retlw	84	;'T'
   409     1826  3445               	retlw	69	;'E'
   410     1827  3420               	retlw	32	;' '
   411     1828  3445               	retlw	69	;'E'
   412     1829  3452               	retlw	82	;'R'
   413     182A  3452               	retlw	82	;'R'
   414     182B  344F               	retlw	79	;'O'
   415     182C  3452               	retlw	82	;'R'
   416     182D  3420               	retlw	32	;' '
   417     182E  3420               	retlw	32	;' '
   418     182F  3420               	retlw	32	;' '
   419     1830  3420               	retlw	32	;' '
   420     1831  3420               	retlw	32	;' '
   421     1832  3420               	retlw	32	;' '
   422     1833  3420               	retlw	32	;' '
   423     1834  3400               	retlw	0
   424     1835                     STR_33:
   425     1835  3420               	retlw	32	;' '
   426     1836  3420               	retlw	32	;' '
   427     1837  3420               	retlw	32	;' '
   428     1838  3444               	retlw	68	;'D'
   429     1839  344F               	retlw	79	;'O'
   430     183A  344E               	retlw	78	;'N'
   431     183B  344D               	retlw	77	;'M'
   432     183C  3445               	retlw	69	;'E'
   433     183D  3420               	retlw	32	;' '
   434     183E  3448               	retlw	72	;'H'
   435     183F  3441               	retlw	65	;'A'
   436     1840  3454               	retlw	84	;'T'
   437     1841  3441               	retlw	65	;'A'
   438     1842  3453               	retlw	83	;'S'
   439     1843  3449               	retlw	73	;'I'
   440     1844  3420               	retlw	32	;' '
   441     1845  3420               	retlw	32	;' '
   442     1846  3420               	retlw	32	;' '
   443     1847  3420               	retlw	32	;' '
   444     1848  3420               	retlw	32	;' '
   445     1849  3420               	retlw	32	;' '
   446     184A  3420               	retlw	32	;' '
   447     184B  3420               	retlw	32	;' '
   448     184C  3400               	retlw	0
   449     184D                     STR_32:
   450     184D  3420               	retlw	32	;' '
   451     184E  3420               	retlw	32	;' '
   452     184F  3420               	retlw	32	;' '
   453     1850  3452               	retlw	82	;'R'
   454     1851  344F               	retlw	79	;'O'
   455     1852  3454               	retlw	84	;'T'
   456     1853  3441               	retlw	65	;'A'
   457     1854  3454               	retlw	84	;'T'
   458     1855  3449               	retlw	73	;'I'
   459     1856  344F               	retlw	79	;'O'
   460     1857  344E               	retlw	78	;'N'
   461     1858  3420               	retlw	32	;' '
   462     1859  3445               	retlw	69	;'E'
   463     185A  3452               	retlw	82	;'R'
   464     185B  3452               	retlw	82	;'R'
   465     185C  344F               	retlw	79	;'O'
   466     185D  3452               	retlw	82	;'R'
   467     185E  3420               	retlw	32	;' '
   468     185F  3420               	retlw	32	;' '
   469     1860  3420               	retlw	32	;' '
   470     1861  3420               	retlw	32	;' '
   471     1862  3420               	retlw	32	;' '
   472     1863  3420               	retlw	32	;' '
   473     1864  3400               	retlw	0
   474     1865                     STR_35:
   475     1865  3453               	retlw	83	;'S'
   476     1866  3454               	retlw	84	;'T'
   477     1867  344F               	retlw	79	;'O'
   478     1868  3450               	retlw	80	;'P'
   479     1869  3420               	retlw	32	;' '
   480     186A  3444               	retlw	68	;'D'
   481     186B  3455               	retlw	85	;'U'
   482     186C  3452               	retlw	82	;'R'
   483     186D  3455               	retlw	85	;'U'
   484     186E  344D               	retlw	77	;'M'
   485     186F  3455               	retlw	85	;'U'
   486     1870  344E               	retlw	78	;'N'
   487     1871  3441               	retlw	65	;'A'
   488     1872  3420               	retlw	32	;' '
   489     1873  3447               	retlw	71	;'G'
   490     1874  3445               	retlw	69	;'E'
   491     1875  3454               	retlw	84	;'T'
   492     1876  3449               	retlw	73	;'I'
   493     1877  3452               	retlw	82	;'R'
   494     1878  3420               	retlw	32	;' '
   495     1879  3400               	retlw	0
   496     187A                     STR_7:
   497     187A  3450               	retlw	80	;'P'
   498     187B  3455               	retlw	85	;'U'
   499     187C  3454               	retlw	84	;'T'
   500     187D  3420               	retlw	32	;' '
   501     187E  3449               	retlw	73	;'I'
   502     187F  3454               	retlw	84	;'T'
   503     1880  3420               	retlw	32	;' '
   504     1881  3449               	retlw	73	;'I'
   505     1882  344E               	retlw	78	;'N'
   506     1883  3420               	retlw	32	;' '
   507     1884  3453               	retlw	83	;'S'
   508     1885  3454               	retlw	84	;'T'
   509     1886  344F               	retlw	79	;'O'
   510     1887  3450               	retlw	80	;'P'
   511     1888  3420               	retlw	32	;' '
   512     1889  3453               	retlw	83	;'S'
   513     188A  3454               	retlw	84	;'T'
   514     188B  3441               	retlw	65	;'A'
   515     188C  3454               	retlw	84	;'T'
   516     188D  3445               	retlw	69	;'E'
   517     188E  3400               	retlw	0
   518     188F                     STR_6:
   519     188F  3453               	retlw	83	;'S'
   520     1890  3454               	retlw	84	;'T'
   521     1891  344F               	retlw	79	;'O'
   522     1892  3450               	retlw	80	;'P'
   523     1893  3420               	retlw	32	;' '
   524     1894  3444               	retlw	68	;'D'
   525     1895  3455               	retlw	85	;'U'
   526     1896  3452               	retlw	82	;'R'
   527     1897  3455               	retlw	85	;'U'
   528     1898  344D               	retlw	77	;'M'
   529     1899  3455               	retlw	85	;'U'
   530     189A  344E               	retlw	78	;'N'
   531     189B  3441               	retlw	65	;'A'
   532     189C  3420               	retlw	32	;' '
   533     189D  3447               	retlw	71	;'G'
   534     189E  3445               	retlw	69	;'E'
   535     189F  3454               	retlw	84	;'T'
   536     18A0  3449               	retlw	73	;'I'
   537     18A1  3452               	retlw	82	;'R'
   538     18A2  3400               	retlw	0
   539     18A3                     STR_1:
   540     18A3  3459               	retlw	89	;'Y'
   541     18A4  3441               	retlw	65	;'A'
   542     18A5  3447               	retlw	71	;'G'
   543     18A6  3420               	retlw	32	;' '
   544     18A7  3442               	retlw	66	;'B'
   545     18A8  3441               	retlw	65	;'A'
   546     18A9  344B               	retlw	75	;'K'
   547     18AA  3449               	retlw	73	;'I'
   548     18AB  344D               	retlw	77	;'M'
   549     18AC  3449               	retlw	73	;'I'
   550     18AD  3420               	retlw	32	;' '
   551     18AE  3459               	retlw	89	;'Y'
   552     18AF  3441               	retlw	65	;'A'
   553     18B0  3450               	retlw	80	;'P'
   554     18B1  3449               	retlw	73	;'I'
   555     18B2  344E               	retlw	78	;'N'
   556     18B3  3449               	retlw	73	;'I'
   557     18B4  345A               	retlw	90	;'Z'
   558     18B5  3400               	retlw	0
   559     18B6                     STR_3:
   560     18B6  3455               	retlw	85	;'U'
   561     18B7  345A               	retlw	90	;'Z'
   562     18B8  344D               	retlw	77	;'M'
   563     18B9  3441               	retlw	65	;'A'
   564     18BA  344E               	retlw	78	;'N'
   565     18BB  344C               	retlw	76	;'L'
   566     18BC  3441               	retlw	65	;'A'
   567     18BD  3452               	retlw	82	;'R'
   568     18BE  3420               	retlw	32	;' '
   569     18BF  344D               	retlw	77	;'M'
   570     18C0  3441               	retlw	65	;'A'
   571     18C1  344B               	retlw	75	;'K'
   572     18C2  3449               	retlw	73	;'I'
   573     18C3  344E               	retlw	78	;'N'
   574     18C4  3441               	retlw	65	;'A'
   575     18C5  3400               	retlw	0
   576     18C6                     STR_18:
   577     18C6  3420               	retlw	32	;' '
   578     18C7  3446               	retlw	70	;'F'
   579     18C8  3457               	retlw	87	;'W'
   580     18C9  3444               	retlw	68	;'D'
   581     18CA  3420               	retlw	32	;' '
   582     18CB  3420               	retlw	32	;' '
   583     18CC  3420               	retlw	32	;' '
   584     18CD  3420               	retlw	32	;' '
   585     18CE  3420               	retlw	32	;' '
   586     18CF  3420               	retlw	32	;' '
   587     18D0  3420               	retlw	32	;' '
   588     18D1  3420               	retlw	32	;' '
   589     18D2  3420               	retlw	32	;' '
   590     18D3  3420               	retlw	32	;' '
   591     18D4  3400               	retlw	0
   592     18D5                     STR_4:
   593     18D5  3477               	retlw	119	;'w'
   594     18D6  3477               	retlw	119	;'w'
   595     18D7  3477               	retlw	119	;'w'
   596     18D8  342E               	retlw	46	;'.'
   597     18D9  3462               	retlw	98	;'b'
   598     18DA  346F               	retlw	111	;'o'
   599     18DB  3472               	retlw	114	;'r'
   600     18DC  3476               	retlw	118	;'v'
   601     18DD  3465               	retlw	101	;'e'
   602     18DE  346B               	retlw	107	;'k'
   603     18DF  342E               	retlw	46	;'.'
   604     18E0  3463               	retlw	99	;'c'
   605     18E1  346F               	retlw	111	;'o'
   606     18E2  346D               	retlw	109	;'m'
   607     18E3  3400               	retlw	0
   608     18E4                     STR_24:
   609     18E4  3420               	retlw	32	;' '
   610     18E5  3452               	retlw	82	;'R'
   611     18E6  3445               	retlw	69	;'E'
   612     18E7  3457               	retlw	87	;'W'
   613     18E8  3420               	retlw	32	;' '
   614     18E9  3420               	retlw	32	;' '
   615     18EA  3420               	retlw	32	;' '
   616     18EB  3420               	retlw	32	;' '
   617     18EC  3420               	retlw	32	;' '
   618     18ED  3420               	retlw	32	;' '
   619     18EE  3420               	retlw	32	;' '
   620     18EF  3420               	retlw	32	;' '
   621     18F0  3420               	retlw	32	;' '
   622     18F1  3400               	retlw	0
   623     18F2                     STR_2:
   624     18F2  344F               	retlw	79	;'O'
   625     18F3  3449               	retlw	73	;'I'
   626     18F4  344C               	retlw	76	;'L'
   627     18F5  3420               	retlw	32	;' '
   628     18F6  3454               	retlw	84	;'T'
   629     18F7  3448               	retlw	72	;'H'
   630     18F8  3445               	retlw	69	;'E'
   631     18F9  3420               	retlw	32	;' '
   632     18FA  3447               	retlw	71	;'G'
   633     18FB  3445               	retlw	69	;'E'
   634     18FC  3441               	retlw	65	;'A'
   635     18FD  3452               	retlw	82	;'R'
   636     18FE  3453               	retlw	83	;'S'
   637     18FF  3400               	retlw	0
   638     1900                     STR_26:
   639     1900  3420               	retlw	32	;' '
   640     1901  3453               	retlw	83	;'S'
   641     1902  3454               	retlw	84	;'T'
   642     1903  344F               	retlw	79	;'O'
   643     1904  3450               	retlw	80	;'P'
   644     1905  3420               	retlw	32	;' '
   645     1906  3420               	retlw	32	;' '
   646     1907  3420               	retlw	32	;' '
   647     1908  3420               	retlw	32	;' '
   648     1909  3420               	retlw	32	;' '
   649     190A  3420               	retlw	32	;' '
   650     190B  3420               	retlw	32	;' '
   651     190C  3400               	retlw	0
   652     190D                     STR_8:
   653     190D  3425               	retlw	37	;'%'
   654     190E  3435               	retlw	53	;'5'
   655     190F  3475               	retlw	117	;'u'
   656     1910  3468               	retlw	104	;'h'
   657     1911  3420               	retlw	32	;' '
   658     1912  3425               	retlw	37	;'%'
   659     1913  3430               	retlw	48	;'0'
   660     1914  3432               	retlw	50	;'2'
   661     1915  3475               	retlw	117	;'u'
   662     1916  346D               	retlw	109	;'m'
   663     1917  3400               	retlw	0
   664     1918                     STR_10:
   665     1918  3446               	retlw	70	;'F'
   666     1919  3465               	retlw	101	;'e'
   667     191A  3465               	retlw	101	;'e'
   668     191B  3464               	retlw	100	;'d'
   669     191C  3452               	retlw	82	;'R'
   670     191D  3461               	retlw	97	;'a'
   671     191E  3474               	retlw	116	;'t'
   672     191F  3465               	retlw	101	;'e'
   673     1920  343A               	retlw	58	;':'
   674     1921  3400               	retlw	0
   675     1922                     STR_16:
   676     1922  3420               	retlw	32	;' '
   677     1923  3446               	retlw	70	;'F'
   678     1924  3457               	retlw	87	;'W'
   679     1925  3444               	retlw	68	;'D'
   680     1926  3420               	retlw	32	;' '
   681     1927  3431               	retlw	49	;'1'
   682     1928  342E               	retlw	46	;'.'
   683     1929  3436               	retlw	54	;'6'
   684     192A  344B               	retlw	75	;'K'
   685     192B  3400               	retlw	0
   686     192C                     STR_22:
   687     192C  3420               	retlw	32	;' '
   688     192D  3452               	retlw	82	;'R'
   689     192E  3445               	retlw	69	;'E'
   690     192F  3457               	retlw	87	;'W'
   691     1930  3420               	retlw	32	;' '
   692     1931  3431               	retlw	49	;'1'
   693     1932  342E               	retlw	46	;'.'
   694     1933  3436               	retlw	54	;'6'
   695     1934  344B               	retlw	75	;'K'
   696     1935  3400               	retlw	0
   697     1936                     STR_13:
   698     1936  3425               	retlw	37	;'%'
   699     1937  3475               	retlw	117	;'u'
   700     1938  3425               	retlw	37	;'%'
   701     1939  3475               	retlw	117	;'u'
   702     193A  3425               	retlw	37	;'%'
   703     193B  3475               	retlw	117	;'u'
   704     193C  342E               	retlw	46	;'.'
   705     193D  3425               	retlw	37	;'%'
   706     193E  3475               	retlw	117	;'u'
   707     193F  3400               	retlw	0
   708     1940                     STR_14:
   709     1940  3420               	retlw	32	;' '
   710     1941  3446               	retlw	70	;'F'
   711     1942  3457               	retlw	87	;'W'
   712     1943  3444               	retlw	68	;'D'
   713     1944  3420               	retlw	32	;' '
   714     1945  344C               	retlw	76	;'L'
   715     1946  344D               	retlw	77	;'M'
   716     1947  3454               	retlw	84	;'T'
   717     1948  3400               	retlw	0
   718     1949                     STR_20:
   719     1949  3420               	retlw	32	;' '
   720     194A  3452               	retlw	82	;'R'
   721     194B  3445               	retlw	69	;'E'
   722     194C  3457               	retlw	87	;'W'
   723     194D  3420               	retlw	32	;' '
   724     194E  344C               	retlw	76	;'L'
   725     194F  344D               	retlw	77	;'M'
   726     1950  3454               	retlw	84	;'T'
   727     1951  3400               	retlw	0
   728     1952                     STR_17:
   729     1952  3473               	retlw	115	;'s'
   730     1953  3425               	retlw	37	;'%'
   731     1954  3464               	retlw	100	;'d'
   732     1955  340D               	retlw	13
   733     1956  340A               	retlw	10
   734     1957  3400               	retlw	0
   735     1958                     STR_11:
   736     1958  3425               	retlw	37	;'%'
   737     1959  3430               	retlw	48	;'0'
   738     195A  3430               	retlw	48	;'0'
   739     195B  3433               	retlw	51	;'3'
   740     195C  3475               	retlw	117	;'u'
   741     195D  3400               	retlw	0
   742     195E                     STR_15:
   743     195E  3473               	retlw	115	;'s'
   744     195F  3430               	retlw	48	;'0'
   745     1960  340D               	retlw	13
   746     1961  340A               	retlw	10
   747     1962  3400               	retlw	0
   748     1963                     STR_12:
   749     1963  3452               	retlw	82	;'R'
   750     1964  3450               	retlw	80	;'P'
   751     1965  344D               	retlw	77	;'M'
   752     1966  343A               	retlw	58	;':'
   753     1967  3400               	retlw	0
   754     1968                     STR_5:
   755     1968  3456               	retlw	86	;'V'
   756     1969  3433               	retlw	51	;'3'
   757     196A  3400               	retlw	0
   758     195E                     
   759                           	psect	cinit
   760     0011                     start_initialization:	
   761                           ; #config settings
   762                           
   763     0011                     __initialization:
   764                           
   765                           ; Initialize objects allocated to COMMON
   766     0011  120A  118A  27FB  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   767     0016  00FB               	movwf	__pdataCOMMON& (0+127)
   768     0017  120A  118A  27FC  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   769     001C  00FC               	movwf	(__pdataCOMMON+1)& (0+127)
   770                           
   771                           ; Clear objects allocated to BANK3
   772     001D  1783               	bsf	3,7	;select IRP bank2
   773     001E  30C4               	movlw	low __pbssBANK3
   774     001F  0084               	movwf	4
   775     0020  30D3               	movlw	low (__pbssBANK3+15)
   776     0021  160A  158A  2539  120A  118A  	fcall	clear_ram0
   777                           
   778                           ; Clear objects allocated to BANK2
   779     0026  3010               	movlw	low __pbssBANK2
   780     0027  0084               	movwf	4
   781     0028  3030               	movlw	low (__pbssBANK2+32)
   782     0029  160A  158A  2539  120A  118A  	fcall	clear_ram0
   783                           
   784                           ; Clear objects allocated to BANK0
   785     002E  01ED               	clrf	__pbssBANK0& (0+127)
   786     002F  01EE               	clrf	(__pbssBANK0+1)& (0+127)
   787     0030  01EF               	clrf	(__pbssBANK0+2)& (0+127)
   788     0031                     end_of_initialization:	
   789                           ;End of C runtime variable initialization code
   790                           
   791     0031                     __end_of__initialization:
   792     0031  0183               	clrf	3
   793     0032  160A  118A  2E94   	ljmp	_main	;jump to C main() function
   794                           
   795                           	psect	dataCOMMON
   796     007B                     __pdataCOMMON:
   797     007B                     _epromBaslaAdress:
   798     007B                     	ds	2
   799                           
   800                           	psect	bssBANK0
   801     006D                     __pbssBANK0:
   802     006D                     _width:
   803     006D                     	ds	2
   804     006F                     _flags:
   805     006F                     	ds	1
   806                           
   807                           	psect	bssBANK3
   808     01C4                     __pbssBANK3:
   809     01C4                     _prec:
   810     01C4                     	ds	2
   811     01C6                     _kesmeSayaci:
   812     01C6                     	ds	2
   813     01C8                     _eepromWRclc:
   814     01C8                     	ds	2
   815     01CA                     _limitler:
   816     01CA                     	ds	1
   817     01CB                     _currentTime:
   818     01CB                     	ds	8
   819                           
   820                           	psect	bssBANK2
   821     0110                     __pbssBANK2:
   822     0110                     _dbuf:
   823     0110                     	ds	32
   824                           
   825                           	psect	clrtext
   826     1D39                     clear_ram0:	
   827                           ;	Called with FSR containing the base address, and
   828                           ;	W with the last address+1
   829                           
   830     1D39  0064               	clrwdt	;clear the watchdog before getting into this loop
   831     1D3A                     clrloop0:
   832     1D3A  0180               	clrf	0	;clear RAM location pointed to by FSR
   833     1D3B  0A84               	incf	4,f	;increment pointer
   834     1D3C  0604               	xorwf	4,w	;XOR with final address
   835     1D3D  1903               	btfsc	3,2	;have we reached the end yet?
   836     1D3E  3400               	retlw	0	;all done for this memory range, return
   837     1D3F  0604               	xorwf	4,w	;XOR again to restore value
   838     1D40  2D3A               	goto	clrloop0	;do the next byte
   839                           
   840                           	psect	cstackBANK3
   841     0190                     __pcstackBANK3:
   842     0190                     main@adcValue3:
   843                           
   844                           ; 4 bytes @ 0x0
   845     0190                     	ds	4
   846     0194                     main@oranValue:
   847                           
   848                           ; 4 bytes @ 0x4
   849     0194                     	ds	4
   850     0198                     main@gostermeliklcd:
   851                           
   852                           ; 4 bytes @ 0x8
   853     0198                     	ds	4
   854     019C                     _main$1170:
   855                           
   856                           ; 4 bytes @ 0xC
   857     019C                     	ds	4
   858     01A0                     main@adcValue2:
   859                           
   860                           ; 2 bytes @ 0x10
   861     01A0                     	ds	2
   862     01A2                     main@olmazlar:
   863                           
   864                           ; 2 bytes @ 0x12
   865     01A2                     	ds	2
   866     01A4                     main@dakika:
   867                           
   868                           ; 2 bytes @ 0x14
   869     01A4                     	ds	2
   870     01A6                     main@onlar:
   871                           
   872                           ; 2 bytes @ 0x16
   873     01A6                     	ds	2
   874     01A8                     main@birler:
   875                           
   876                           ; 2 bytes @ 0x18
   877     01A8                     	ds	2
   878     01AA                     main@negativeDisplayValue:
   879                           
   880                           ; 2 bytes @ 0x1A
   881     01AA                     	ds	2
   882     01AC                     _main$1169:
   883                           
   884                           ; 2 bytes @ 0x1C
   885     01AC                     	ds	2
   886     01AE                     main@ilkAcilis:
   887                           
   888                           ; 2 bytes @ 0x1E
   889     01AE                     	ds	2
   890     01B0                     main@adcValue1:
   891                           
   892                           ; 4 bytes @ 0x20
   893     01B0                     	ds	4
   894     01B4                     main@yuzler:
   895                           
   896                           ; 2 bytes @ 0x24
   897     01B4                     	ds	2
   898     01B6                     main@binler:
   899                           
   900                           ; 2 bytes @ 0x26
   901     01B6                     	ds	2
   902     01B8                     main@integerPart:
   903                           
   904                           ; 4 bytes @ 0x28
   905     01B8                     	ds	4
   906     01BC                     main@epromAdresi:
   907                           
   908                           ; 2 bytes @ 0x2C
   909     01BC                     	ds	2
   910     01BE                     main@negativeFeedValue:
   911                           
   912                           ; 2 bytes @ 0x2E
   913     01BE                     	ds	2
   914     01C0                     main@displayValue:
   915                           
   916                           ; 2 bytes @ 0x30
   917     01C0                     	ds	2
   918     01C2                     main@realSaat:
   919                           
   920                           ; 2 bytes @ 0x32
   921     01C2                     	ds	2
   922                           
   923                           	psect	cstackBANK1
   924     00A0                     __pcstackBANK1:
   925     00A0                     ??_main:
   926                           
   927                           ; 1 bytes @ 0x0
   928     00A0                     	ds	6
   929     00A6                     main@combinedText:
   930                           
   931                           ; 20 bytes @ 0x6
   932     00A6                     	ds	20
   933     00BA                     main@combinedText_378:
   934                           
   935                           ; 20 bytes @ 0x1A
   936     00BA                     	ds	20
   937     00CE                     main@lcdText:
   938                           
   939                           ; 9 bytes @ 0x2E
   940     00CE                     	ds	9
   941     00D7                     main@uartMessage:
   942                           
   943                           ; 8 bytes @ 0x37
   944     00D7                     	ds	8
   945     00DF                     main@uartMessage_374:
   946                           
   947                           ; 8 bytes @ 0x3F
   948     00DF                     	ds	8
   949     00E7                     main@rpmString:
   950                           
   951                           ; 5 bytes @ 0x47
   952     00E7                     	ds	5
   953     00EC                     main@adcString1:
   954                           
   955                           ; 4 bytes @ 0x4C
   956     00EC                     	ds	4
   957                           
   958                           	psect	cstackCOMMON
   959     0070                     __pcstackCOMMON:
   960     0070                     ?_putch:
   961     0070                     ?_UART_Initialize:	
   962                           ; 1 bytes @ 0x0
   963                           
   964     0070                     ?_UART_Write:	
   965                           ; 1 bytes @ 0x0
   966                           
   967     0070                     ?_Lcd_Port:	
   968                           ; 1 bytes @ 0x0
   969                           
   970     0070                     ?_Lcd_Cmd:	
   971                           ; 1 bytes @ 0x0
   972                           
   973     0070                     ?_Lcd_Clear:	
   974                           ; 1 bytes @ 0x0
   975                           
   976     0070                     ?_Lcd_Init:	
   977                           ; 1 bytes @ 0x0
   978                           
   979     0070                     ?_Lcd_Write_Char:	
   980                           ; 1 bytes @ 0x0
   981                           
   982     0070                     ?_yagBakim:	
   983                           ; 1 bytes @ 0x0
   984                           
   985     0070                     ?_incrementTime:	
   986                           ; 1 bytes @ 0x0
   987                           
   988     0070                     ??_incrementTime:	
   989                           ; 1 bytes @ 0x0
   990                           
   991     0070                     ?_timer_isr:	
   992                           ; 1 bytes @ 0x0
   993                           
   994     0070                     ?i1_writeEEPROM:	
   995                           ; 1 bytes @ 0x0
   996                           
   997     0070                     ?_main:	
   998                           ; 1 bytes @ 0x0
   999                           
  1000     0070                     ?i1_readEEPROM:	
  1001                           ; 2 bytes @ 0x0
  1002                           
  1003     0070                     putch@c:	
  1004                           ; 2 bytes @ 0x0
  1005                           
  1006     0070                     i1writeEEPROM@address:	
  1007                           ; 1 bytes @ 0x0
  1008                           
  1009     0070                     i1readEEPROM@address:	
  1010                           ; 2 bytes @ 0x0
  1011                           
  1012                           
  1013                           ; 2 bytes @ 0x0
  1014     0070                     	ds	2
  1015     0072                     ??i1_readEEPROM:
  1016     0072                     incrementTime@time:	
  1017                           ; 1 bytes @ 0x2
  1018                           
  1019     0072                     i1writeEEPROM@data:	
  1020                           ; 1 bytes @ 0x2
  1021                           
  1022                           
  1023                           ; 2 bytes @ 0x2
  1024     0072                     	ds	2
  1025     0074                     ??_timer_isr:
  1026     0074                     ??i1_writeEEPROM:	
  1027                           ; 1 bytes @ 0x4
  1028                           
  1029                           
  1030                           ; 1 bytes @ 0x4
  1031     0074                     	ds	5
  1032     0079                     _timer_isr$1182:
  1033                           
  1034                           ; 2 bytes @ 0x9
  1035     0079                     	ds	2
  1036                           
  1037                           	psect	cstackBANK0
  1038     0020                     __pcstackBANK0:
  1039     0020                     ??_putch:
  1040     0020                     ??_UART_Initialize:	
  1041                           ; 1 bytes @ 0x0
  1042                           
  1043     0020                     ??_UART_Write:	
  1044                           ; 1 bytes @ 0x0
  1045                           
  1046     0020                     ??_Lcd_Port:	
  1047                           ; 1 bytes @ 0x0
  1048                           
  1049     0020                     ?_writeEEPROM:	
  1050                           ; 1 bytes @ 0x0
  1051                           
  1052     0020                     ?__Umul8_16:	
  1053                           ; 1 bytes @ 0x0
  1054                           
  1055     0020                     ?_fputc:	
  1056                           ; 2 bytes @ 0x0
  1057                           
  1058     0020                     ?___wmul:	
  1059                           ; 2 bytes @ 0x0
  1060                           
  1061     0020                     ?___lwdiv:	
  1062                           ; 2 bytes @ 0x0
  1063                           
  1064     0020                     ?___lwmod:	
  1065                           ; 2 bytes @ 0x0
  1066                           
  1067     0020                     ?___fltol:	
  1068                           ; 2 bytes @ 0x0
  1069                           
  1070     0020                     ?___fldiv:	
  1071                           ; 4 bytes @ 0x0
  1072                           
  1073     0020                     ?___xxtofl:	
  1074                           ; 4 bytes @ 0x0
  1075                           
  1076     0020                     UART_Write@data:	
  1077                           ; 4 bytes @ 0x0
  1078                           
  1079     0020                     Lcd_Port@a:	
  1080                           ; 1 bytes @ 0x0
  1081                           
  1082     0020                     __Umul8_16@multiplicand:	
  1083                           ; 1 bytes @ 0x0
  1084                           
  1085     0020                     writeEEPROM@address:	
  1086                           ; 1 bytes @ 0x0
  1087                           
  1088     0020                     ___wmul@multiplier:	
  1089                           ; 2 bytes @ 0x0
  1090                           
  1091     0020                     ___lwdiv@divisor:	
  1092                           ; 2 bytes @ 0x0
  1093                           
  1094     0020                     ___lwmod@divisor:	
  1095                           ; 2 bytes @ 0x0
  1096                           
  1097     0020                     fputc@c:	
  1098                           ; 2 bytes @ 0x0
  1099                           
  1100     0020                     ___fltol@f1:	
  1101                           ; 2 bytes @ 0x0
  1102                           
  1103     0020                     ___fldiv@a:	
  1104                           ; 4 bytes @ 0x0
  1105                           
  1106     0020                     ___xxtofl@val:	
  1107                           ; 4 bytes @ 0x0
  1108                           
  1109                           
  1110                           ; 4 bytes @ 0x0
  1111     0020                     	ds	1
  1112     0021                     ?_UART_Write_Text:
  1113     0021                     ??_Lcd_Cmd:	
  1114                           ; 1 bytes @ 0x1
  1115                           
  1116     0021                     ??_Lcd_Write_Char:	
  1117                           ; 1 bytes @ 0x1
  1118                           
  1119     0021                     UART_Write_Text@text:	
  1120                           ; 1 bytes @ 0x1
  1121                           
  1122                           
  1123                           ; 2 bytes @ 0x1
  1124     0021                     	ds	1
  1125     0022                     ??__Umul8_16:
  1126     0022                     Lcd_Write_Char@temp:	
  1127                           ; 1 bytes @ 0x2
  1128                           
  1129     0022                     fputc@fp:	
  1130                           ; 1 bytes @ 0x2
  1131                           
  1132     0022                     writeEEPROM@data:	
  1133                           ; 1 bytes @ 0x2
  1134                           
  1135     0022                     ___wmul@multiplicand:	
  1136                           ; 2 bytes @ 0x2
  1137                           
  1138     0022                     ___lwdiv@dividend:	
  1139                           ; 2 bytes @ 0x2
  1140                           
  1141     0022                     ___lwmod@dividend:	
  1142                           ; 2 bytes @ 0x2
  1143                           
  1144                           
  1145                           ; 2 bytes @ 0x2
  1146     0022                     	ds	1
  1147     0023                     ??_fputc:
  1148     0023                     ??_UART_Write_Text:	
  1149                           ; 1 bytes @ 0x3
  1150                           
  1151     0023                     Lcd_Cmd@a:	
  1152                           ; 1 bytes @ 0x3
  1153                           
  1154     0023                     Lcd_Write_Char@y:	
  1155                           ; 1 bytes @ 0x3
  1156                           
  1157                           
  1158                           ; 1 bytes @ 0x3
  1159     0023                     	ds	1
  1160     0024                     ??_Lcd_Clear:
  1161     0024                     ?_Lcd_Set_Cursor:	
  1162                           ; 1 bytes @ 0x4
  1163                           
  1164     0024                     ??_Lcd_Init:	
  1165                           ; 1 bytes @ 0x4
  1166                           
  1167     0024                     ??_writeEEPROM:	
  1168                           ; 1 bytes @ 0x4
  1169                           
  1170     0024                     ??___wmul:	
  1171                           ; 1 bytes @ 0x4
  1172                           
  1173     0024                     ??___fltol:	
  1174                           ; 1 bytes @ 0x4
  1175                           
  1176     0024                     ??___lwdiv:	
  1177                           ; 1 bytes @ 0x4
  1178                           
  1179     0024                     ??___lwmod:	
  1180                           ; 1 bytes @ 0x4
  1181                           
  1182     0024                     ??___xxtofl:	
  1183                           ; 1 bytes @ 0x4
  1184                           
  1185     0024                     Lcd_Set_Cursor@b:	
  1186                           ; 1 bytes @ 0x4
  1187                           
  1188     0024                     Lcd_Write_Char@a:	
  1189                           ; 1 bytes @ 0x4
  1190                           
  1191     0024                     ___lwmod@counter:	
  1192                           ; 1 bytes @ 0x4
  1193                           
  1194     0024                     ___wmul@product:	
  1195                           ; 1 bytes @ 0x4
  1196                           
  1197     0024                     ___lwdiv@quotient:	
  1198                           ; 2 bytes @ 0x4
  1199                           
  1200     0024                     __Umul8_16@product:	
  1201                           ; 2 bytes @ 0x4
  1202                           
  1203     0024                     ___fldiv@b:	
  1204                           ; 2 bytes @ 0x4
  1205                           
  1206                           
  1207                           ; 4 bytes @ 0x4
  1208     0024                     	ds	1
  1209     0025                     ??_Lcd_Set_Cursor:
  1210     0025                     ?_Lcd_Write_String:	
  1211                           ; 1 bytes @ 0x5
  1212                           
  1213     0025                     Lcd_Write_String@a:	
  1214                           ; 1 bytes @ 0x5
  1215                           
  1216                           
  1217                           ; 2 bytes @ 0x5
  1218     0025                     	ds	1
  1219     0026                     ?_readEEPROM:
  1220     0026                     ?_read_prec_or_width:	
  1221                           ; 2 bytes @ 0x6
  1222                           
  1223     0026                     Lcd_Set_Cursor@a:	
  1224                           ; 2 bytes @ 0x6
  1225                           
  1226     0026                     ___lwdiv@counter:	
  1227                           ; 1 bytes @ 0x6
  1228                           
  1229     0026                     read_prec_or_width@ap:	
  1230                           ; 1 bytes @ 0x6
  1231                           
  1232     0026                     UART_Write_Text@i:	
  1233                           ; 1 bytes @ 0x6
  1234                           
  1235     0026                     readEEPROM@address:	
  1236                           ; 2 bytes @ 0x6
  1237                           
  1238     0026                     __Umul8_16@word_mpld:	
  1239                           ; 2 bytes @ 0x6
  1240                           
  1241                           
  1242                           ; 2 bytes @ 0x6
  1243     0026                     	ds	1
  1244     0027                     ??_Lcd_Write_String:
  1245     0027                     Lcd_Set_Cursor@z:	
  1246                           ; 1 bytes @ 0x7
  1247                           
  1248                           
  1249                           ; 1 bytes @ 0x7
  1250     0027                     	ds	1
  1251     0028                     ??_readEEPROM:
  1252     0028                     ??___fldiv:	
  1253                           ; 1 bytes @ 0x8
  1254                           
  1255     0028                     ??_read_prec_or_width:	
  1256                           ; 1 bytes @ 0x8
  1257                           
  1258     0028                     ?_fputs:	
  1259                           ; 1 bytes @ 0x8
  1260                           
  1261     0028                     Lcd_Set_Cursor@y:	
  1262                           ; 2 bytes @ 0x8
  1263                           
  1264     0028                     ___fltol@sign1:	
  1265                           ; 1 bytes @ 0x8
  1266                           
  1267     0028                     __Umul8_16@multiplier:	
  1268                           ; 1 bytes @ 0x8
  1269                           
  1270     0028                     ___xxtofl@sign:	
  1271                           ; 1 bytes @ 0x8
  1272                           
  1273     0028                     fputs@fp:	
  1274                           ; 1 bytes @ 0x8
  1275                           
  1276                           
  1277                           ; 1 bytes @ 0x8
  1278     0028                     	ds	1
  1279     0029                     ??_fputs:
  1280     0029                     Lcd_Set_Cursor@temp:	
  1281                           ; 1 bytes @ 0x9
  1282                           
  1283     0029                     ___fltol@exp1:	
  1284                           ; 1 bytes @ 0x9
  1285                           
  1286     0029                     ___xxtofl@exp:	
  1287                           ; 1 bytes @ 0x9
  1288                           
  1289                           
  1290                           ; 1 bytes @ 0x9
  1291     0029                     	ds	1
  1292     002A                     ?___awdiv:
  1293     002A                     ?___awmod:	
  1294                           ; 2 bytes @ 0xA
  1295                           
  1296     002A                     read_prec_or_width@c:	
  1297                           ; 2 bytes @ 0xA
  1298                           
  1299     002A                     Lcd_Write_String@i:	
  1300                           ; 1 bytes @ 0xA
  1301                           
  1302     002A                     ___awdiv@divisor:	
  1303                           ; 2 bytes @ 0xA
  1304                           
  1305     002A                     ___awmod@divisor:	
  1306                           ; 2 bytes @ 0xA
  1307                           
  1308     002A                     ___xxtofl@arg:	
  1309                           ; 2 bytes @ 0xA
  1310                           
  1311                           
  1312                           ; 4 bytes @ 0xA
  1313     002A                     	ds	1
  1314     002B                     fputs@c:
  1315     002B                     read_prec_or_width@n:	
  1316                           ; 1 bytes @ 0xB
  1317                           
  1318                           
  1319                           ; 2 bytes @ 0xB
  1320     002B                     	ds	1
  1321     002C                     ??_yagBakim:
  1322     002C                     yagBakim@i:	
  1323                           ; 1 bytes @ 0xC
  1324                           
  1325     002C                     ___awdiv@dividend:	
  1326                           ; 2 bytes @ 0xC
  1327                           
  1328     002C                     ___awmod@dividend:	
  1329                           ; 2 bytes @ 0xC
  1330                           
  1331     002C                     fputs@i:	
  1332                           ; 2 bytes @ 0xC
  1333                           
  1334                           
  1335                           ; 2 bytes @ 0xC
  1336     002C                     	ds	1
  1337     002D                     read_prec_or_width@fmt:
  1338     002D                     ___fldiv@rem:	
  1339                           ; 1 bytes @ 0xD
  1340                           
  1341                           
  1342                           ; 4 bytes @ 0xD
  1343     002D                     	ds	1
  1344     002E                     ??___awdiv:
  1345     002E                     ??___awmod:	
  1346                           ; 1 bytes @ 0xE
  1347                           
  1348     002E                     ___awdiv@counter:	
  1349                           ; 1 bytes @ 0xE
  1350                           
  1351     002E                     ___awmod@counter:	
  1352                           ; 1 bytes @ 0xE
  1353                           
  1354     002E                     fputs@s:	
  1355                           ; 1 bytes @ 0xE
  1356                           
  1357                           
  1358                           ; 1 bytes @ 0xE
  1359     002E                     	ds	1
  1360     002F                     ?_pad:
  1361     002F                     ___awdiv@sign:	
  1362                           ; 1 bytes @ 0xF
  1363                           
  1364     002F                     ___awmod@sign:	
  1365                           ; 1 bytes @ 0xF
  1366                           
  1367     002F                     pad@buf:	
  1368                           ; 1 bytes @ 0xF
  1369                           
  1370                           
  1371                           ; 1 bytes @ 0xF
  1372     002F                     	ds	1
  1373     0030                     ?_abs:
  1374     0030                     ___awdiv@quotient:	
  1375                           ; 2 bytes @ 0x10
  1376                           
  1377     0030                     pad@p:	
  1378                           ; 2 bytes @ 0x10
  1379                           
  1380     0030                     abs@a:	
  1381                           ; 2 bytes @ 0x10
  1382                           
  1383                           
  1384                           ; 2 bytes @ 0x10
  1385     0030                     	ds	1
  1386     0031                     ___fldiv@sign:
  1387                           
  1388                           ; 1 bytes @ 0x11
  1389     0031                     	ds	1
  1390     0032                     ??_abs:
  1391     0032                     ??_pad:	
  1392                           ; 1 bytes @ 0x12
  1393                           
  1394     0032                     ___fldiv@new_exp:	
  1395                           ; 1 bytes @ 0x12
  1396                           
  1397                           
  1398                           ; 2 bytes @ 0x12
  1399     0032                     	ds	1
  1400     0033                     pad@i:
  1401                           
  1402                           ; 2 bytes @ 0x13
  1403     0033                     	ds	1
  1404     0034                     ___fldiv@grs:
  1405                           
  1406                           ; 4 bytes @ 0x14
  1407     0034                     	ds	1
  1408     0035                     pad@fp:
  1409                           
  1410                           ; 1 bytes @ 0x15
  1411     0035                     	ds	1
  1412     0036                     ?_dtoa:
  1413     0036                     ?_utoa:	
  1414                           ; 1 bytes @ 0x16
  1415                           
  1416     0036                     dtoa@d:	
  1417                           ; 1 bytes @ 0x16
  1418                           
  1419     0036                     utoa@d:	
  1420                           ; 2 bytes @ 0x16
  1421                           
  1422                           
  1423                           ; 2 bytes @ 0x16
  1424     0036                     	ds	2
  1425     0038                     ??_dtoa:
  1426     0038                     ??_utoa:	
  1427                           ; 1 bytes @ 0x18
  1428                           
  1429     0038                     ___fldiv@bexp:	
  1430                           ; 1 bytes @ 0x18
  1431                           
  1432     0038                     utoa@fp:	
  1433                           ; 1 bytes @ 0x18
  1434                           
  1435     0038                     _dtoa$889:	
  1436                           ; 1 bytes @ 0x18
  1437                           
  1438                           
  1439                           ; 2 bytes @ 0x18
  1440     0038                     	ds	1
  1441     0039                     ___fldiv@aexp:
  1442     0039                     utoa@p:	
  1443                           ; 1 bytes @ 0x19
  1444                           
  1445                           
  1446                           ; 1 bytes @ 0x19
  1447     0039                     	ds	1
  1448     003A                     ?___flmul:
  1449     003A                     dtoa@fp:	
  1450                           ; 4 bytes @ 0x1A
  1451                           
  1452     003A                     utoa@w:	
  1453                           ; 1 bytes @ 0x1A
  1454                           
  1455     003A                     ___flmul@b:	
  1456                           ; 2 bytes @ 0x1A
  1457                           
  1458                           
  1459                           ; 4 bytes @ 0x1A
  1460     003A                     	ds	1
  1461     003B                     dtoa@p:
  1462                           
  1463                           ; 1 bytes @ 0x1B
  1464     003B                     	ds	1
  1465     003C                     dtoa@w:
  1466     003C                     utoa@i:	
  1467                           ; 2 bytes @ 0x1C
  1468                           
  1469                           
  1470                           ; 2 bytes @ 0x1C
  1471     003C                     	ds	2
  1472     003E                     dtoa@s:
  1473     003E                     ___flmul@a:	
  1474                           ; 1 bytes @ 0x1E
  1475                           
  1476                           
  1477                           ; 4 bytes @ 0x1E
  1478     003E                     	ds	1
  1479     003F                     dtoa@i:
  1480                           
  1481                           ; 2 bytes @ 0x1F
  1482     003F                     	ds	2
  1483     0041                     ?_vfpfcnvrt:
  1484     0041                     vfpfcnvrt@fmt:	
  1485                           ; 1 bytes @ 0x21
  1486                           
  1487                           
  1488                           ; 1 bytes @ 0x21
  1489     0041                     	ds	1
  1490     0042                     ??___flmul:
  1491     0042                     vfpfcnvrt@ap:	
  1492                           ; 1 bytes @ 0x22
  1493                           
  1494                           
  1495                           ; 1 bytes @ 0x22
  1496     0042                     	ds	1
  1497     0043                     ??_vfpfcnvrt:
  1498                           
  1499                           ; 1 bytes @ 0x23
  1500     0043                     	ds	4
  1501     0047                     ___flmul@sign:
  1502     0047                     vfpfcnvrt@done:	
  1503                           ; 1 bytes @ 0x27
  1504                           
  1505                           
  1506                           ; 1 bytes @ 0x27
  1507     0047                     	ds	1
  1508     0048                     ___flmul@grs:
  1509     0048                     vfpfcnvrt@convarg:	
  1510                           ; 4 bytes @ 0x28
  1511                           
  1512                           
  1513                           ; 4 bytes @ 0x28
  1514     0048                     	ds	4
  1515     004C                     ___flmul@aexp:
  1516     004C                     vfpfcnvrt@fp:	
  1517                           ; 1 bytes @ 0x2C
  1518                           
  1519                           
  1520                           ; 1 bytes @ 0x2C
  1521     004C                     	ds	1
  1522     004D                     ___flmul@bexp:
  1523     004D                     vfpfcnvrt@cp:	
  1524                           ; 1 bytes @ 0x2D
  1525                           
  1526                           
  1527                           ; 2 bytes @ 0x2D
  1528     004D                     	ds	1
  1529     004E                     ___flmul@prod:
  1530                           
  1531                           ; 4 bytes @ 0x2E
  1532     004E                     	ds	1
  1533     004F                     ?_vfprintf:
  1534     004F                     vfprintf@fmt:	
  1535                           ; 2 bytes @ 0x2F
  1536                           
  1537                           
  1538                           ; 2 bytes @ 0x2F
  1539     004F                     	ds	2
  1540     0051                     vfprintf@ap:
  1541                           
  1542                           ; 1 bytes @ 0x31
  1543     0051                     	ds	1
  1544     0052                     ??_vfprintf:
  1545     0052                     vfprintf@fp:	
  1546                           ; 1 bytes @ 0x32
  1547                           
  1548     0052                     ___flmul@temp:	
  1549                           ; 1 bytes @ 0x32
  1550                           
  1551                           
  1552                           ; 2 bytes @ 0x32
  1553     0052                     	ds	1
  1554     0053                     vfprintf@cfmt:
  1555                           
  1556                           ; 2 bytes @ 0x33
  1557     0053                     	ds	2
  1558     0055                     ?_sprintf:
  1559     0055                     sprintf@fmt:	
  1560                           ; 2 bytes @ 0x35
  1561                           
  1562                           
  1563                           ; 2 bytes @ 0x35
  1564     0055                     	ds	10
  1565     005F                     ??_sprintf:
  1566                           
  1567                           ; 1 bytes @ 0x3F
  1568     005F                     	ds	1
  1569     0060                     sprintf@ap:
  1570                           
  1571                           ; 1 bytes @ 0x40
  1572     0060                     	ds	1
  1573     0061                     sprintf@s:
  1574                           
  1575                           ; 1 bytes @ 0x41
  1576     0061                     	ds	1
  1577     0062                     sprintf@f:
  1578                           
  1579                           ; 11 bytes @ 0x42
  1580     0062                     	ds	11
  1581                           
  1582                           	psect	maintext
  1583     1694                     __pmaintext:	
  1584 ;;
  1585 ;;Main: autosize = 0, tempsize = 6, incstack = 0, save=0
  1586 ;;
  1587 ;; *************** function _main *****************
  1588 ;; Defined at:
  1589 ;;		line 130 in file "main1.c"
  1590 ;; Parameters:    Size  Location     Type
  1591 ;;		None
  1592 ;; Auto vars:     Size  Location     Type
  1593 ;;  uartMessage     8   63[BANK1 ] unsigned char [8]
  1594 ;;  uartMessage     8   55[BANK1 ] unsigned char [8]
  1595 ;;  combinedText   20   26[BANK1 ] unsigned char [20]
  1596 ;;  negativeDisp    2   26[BANK3 ] int 
  1597 ;;  negativeFeed    2   46[BANK3 ] int 
  1598 ;;  combinedText   20    6[BANK1 ] unsigned char [20]
  1599 ;;  olmazlar        2   18[BANK3 ] int 
  1600 ;;  rpmString       5   71[BANK1 ] unsigned char [5]
  1601 ;;  integerPart     4   40[BANK3 ] float 
  1602 ;;  adcString1      4   76[BANK1 ] unsigned char [4]
  1603 ;;  gostermelikl    4    8[BANK3 ] float 
  1604 ;;  oranValue       4    4[BANK3 ] float 
  1605 ;;  realSaat        2   50[BANK3 ] int 
  1606 ;;  binler          2   38[BANK3 ] int 
  1607 ;;  yuzler          2   36[BANK3 ] int 
  1608 ;;  birler          2   24[BANK3 ] int 
  1609 ;;  onlar           2   22[BANK3 ] int 
  1610 ;;  dakika          2   20[BANK3 ] int 
  1611 ;;  epromAdresi     2   44[BANK3 ] int 
  1612 ;;  lcdText         9   46[BANK1 ] unsigned char [9]
  1613 ;;  adcValue1       4   32[BANK3 ] float 
  1614 ;;  adcValue3       4    0[BANK3 ] float 
  1615 ;;  displayValue    2   48[BANK3 ] unsigned int 
  1616 ;;  ilkAcilis       2   30[BANK3 ] int 
  1617 ;;  adcValue2       2   16[BANK3 ] int 
  1618 ;;  a               2    0        unsigned int 
  1619 ;; Return value:  Size  Location     Type
  1620 ;;                  2  213[None  ] int 
  1621 ;; Registers used:
  1622 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1623 ;; Tracked objects:
  1624 ;;		On entry : B00/0
  1625 ;;		On exit  : 0/0
  1626 ;;		Unchanged: 0/0
  1627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1628 ;;      Params:         0       0       0       0       0
  1629 ;;      Locals:         0       0      74      52       0
  1630 ;;      Temps:          0       0       6       0       0
  1631 ;;      Totals:         0       0      80      52       0
  1632 ;;Total ram usage:      132 bytes
  1633 ;; Hardware stack levels required when called: 10
  1634 ;; This function calls:
  1635 ;;		_Lcd_Clear
  1636 ;;		_Lcd_Init
  1637 ;;		_Lcd_Set_Cursor
  1638 ;;		_Lcd_Write_String
  1639 ;;		_UART_Initialize
  1640 ;;		_UART_Write_Text
  1641 ;;		___awdiv
  1642 ;;		___awmod
  1643 ;;		___fldiv
  1644 ;;		___flmul
  1645 ;;		___fltol
  1646 ;;		___wmul
  1647 ;;		___xxtofl
  1648 ;;		_readEEPROM
  1649 ;;		_sprintf
  1650 ;;		_writeEEPROM
  1651 ;;		_yagBakim
  1652 ;; This function is called by:
  1653 ;;		Startup code after reset
  1654 ;; This function uses a non-reentrant model
  1655 ;;
  1656                           
  1657     1694                     _main:	
  1658                           ;psect for function _main
  1659                           
  1660     1694                     l3338:	
  1661                           ;incstack = 0
  1662 ;; hardware stack exceeded
  1663                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1664                           
  1665                           
  1666                           ;main1.c: 132:   unsigned int a;;main1.c: 135: TRISB = 0b00000000;
  1667     1694  1683               	bsf	3,5	;RP0=1, select bank1
  1668     1695  1303               	bcf	3,6	;RP1=0, select bank1
  1669     1696  0186               	clrf	6	;volatile
  1670     1697                     l3340:
  1671                           
  1672                           ;main1.c: 136: TRISA4 = 0;
  1673     1697  1205               	bcf	5,4	;volatile
  1674     1698                     l3342:
  1675                           
  1676                           ;main1.c: 137: TRISE0 = 1;
  1677     1698  1409               	bsf	9,0	;volatile
  1678     1699                     l3344:
  1679                           
  1680                           ;main1.c: 138: TRISE1 = 1;
  1681     1699  1489               	bsf	9,1	;volatile
  1682     169A                     l3346:
  1683                           
  1684                           ;main1.c: 139: TRISC1 = 1;
  1685     169A  1487               	bsf	7,1	;volatile
  1686     169B                     l3348:
  1687                           
  1688                           ;main1.c: 140: TRISC2 = 1;
  1689     169B  1507               	bsf	7,2	;volatile
  1690     169C                     l3350:
  1691                           
  1692                           ;main1.c: 141: TRISE2 = 1;
  1693     169C  1509               	bsf	9,2	;volatile
  1694     169D                     l3352:
  1695                           
  1696                           ;main1.c: 142: TRISC0 = 1;
  1697     169D  1407               	bsf	7,0	;volatile
  1698     169E                     l3354:
  1699                           
  1700                           ;main1.c: 143: TRISC3 = 1;
  1701     169E  1587               	bsf	7,3	;volatile
  1702     169F                     l3356:
  1703                           
  1704                           ;main1.c: 144: TRISD0 = 1;
  1705     169F  1408               	bsf	8,0	;volatile
  1706     16A0                     l3358:
  1707                           
  1708                           ;main1.c: 146: TRISA1 = 1;
  1709     16A0  1485               	bsf	5,1	;volatile
  1710     16A1                     l3360:
  1711                           
  1712                           ;main1.c: 147: TRISA2 = 1;
  1713     16A1  1505               	bsf	5,2	;volatile
  1714     16A2                     l3362:
  1715                           
  1716                           ;main1.c: 148: TRISA3 = 1;
  1717     16A2  1585               	bsf	5,3	;volatile
  1718     16A3                     l3364:
  1719                           
  1720                           ;main1.c: 149: Lcd_Init();
  1721     16A3  160A  118A  2143  160A  118A  	fcall	_Lcd_Init
  1722     16A8                     l3366:
  1723                           
  1724                           ;main1.c: 151: TRISC6 = 0;
  1725     16A8  1683               	bsf	3,5	;RP0=1, select bank1
  1726     16A9  1303               	bcf	3,6	;RP1=0, select bank1
  1727     16AA  1307               	bcf	7,6	;volatile
  1728     16AB                     l3368:
  1729                           
  1730                           ;main1.c: 152: TRISC7 = 1;
  1731     16AB  1787               	bsf	7,7	;volatile
  1732     16AC                     l3370:
  1733                           
  1734                           ;main1.c: 155: TRISA0 = 0;
  1735     16AC  1005               	bcf	5,0	;volatile
  1736     16AD                     l3372:
  1737                           
  1738                           ;main1.c: 156: TRISA5 = 0;
  1739     16AD  1285               	bcf	5,5	;volatile
  1740     16AE                     l3374:
  1741                           
  1742                           ;main1.c: 157: TRISC4 = 0;
  1743     16AE  1207               	bcf	7,4	;volatile
  1744     16AF                     l3376:
  1745                           
  1746                           ;main1.c: 158: TRISC5 = 0;
  1747     16AF  1287               	bcf	7,5	;volatile
  1748     16B0                     l3378:
  1749                           
  1750                           ;main1.c: 159: TRISD = 0b00000001;
  1751     16B0  3001               	movlw	1
  1752     16B1  0088               	movwf	8	;volatile
  1753     16B2                     l3380:
  1754                           
  1755                           ;main1.c: 162:   _delay((unsigned long)((200)*(4000000/4000.0)));
  1756     16B2  3002               	movlw	2
  1757     16B3  1683               	bsf	3,5	;RP0=1, select bank1
  1758     16B4  1303               	bcf	3,6	;RP1=0, select bank1
  1759     16B5  00A2               	movwf	(??_main^(0+128)+2)
  1760     16B6  3004               	movlw	4
  1761     16B7  00A1               	movwf	(??_main^(0+128)+1)
  1762     16B8  30B9               	movlw	185
  1763     16B9  00A0               	movwf	??_main^(0+128)
  1764     16BA                     u5017:
  1765     16BA  0BA0               	decfsz	??_main^(0+128),f
  1766     16BB  2EBA               	goto	u5017
  1767     16BC  0BA1               	decfsz	(??_main^(0+128)+1),f
  1768     16BD  2EBA               	goto	u5017
  1769     16BE  0BA2               	decfsz	(??_main^(0+128)+2),f
  1770     16BF  2EBA               	goto	u5017
  1771     16C0  2EC1               	nop2
  1772     16C1                     l3382:
  1773                           
  1774                           ;main1.c: 163:   RA4 = 0;
  1775     16C1  1283               	bcf	3,5	;RP0=0, select bank0
  1776     16C2  1303               	bcf	3,6	;RP1=0, select bank0
  1777     16C3  1205               	bcf	5,4	;volatile
  1778     16C4                     l3384:
  1779                           
  1780                           ;main1.c: 169:     currentTime.hours = readEEPROM(0x01);
  1781     16C4  3001               	movlw	1
  1782     16C5  00A6               	movwf	readEEPROM@address
  1783     16C6  3000               	movlw	0
  1784     16C7  00A7               	movwf	readEEPROM@address+1
  1785     16C8  160A  158A  2590  160A  118A  	fcall	_readEEPROM
  1786     16CD  1283               	bcf	3,5	;RP0=0, select bank0
  1787     16CE  1303               	bcf	3,6	;RP1=0, select bank0
  1788     16CF  0827               	movf	?_readEEPROM+1,w
  1789     16D0  1683               	bsf	3,5	;RP0=1, select bank3
  1790     16D1  1703               	bsf	3,6	;RP1=1, select bank3
  1791     16D2  00CE               	movwf	((_currentTime+1)^(0+384)+2)
  1792     16D3  1283               	bcf	3,5	;RP0=0, select bank0
  1793     16D4  1303               	bcf	3,6	;RP1=0, select bank0
  1794     16D5  0826               	movf	?_readEEPROM,w
  1795     16D6  1683               	bsf	3,5	;RP0=1, select bank3
  1796     16D7  1703               	bsf	3,6	;RP1=1, select bank3
  1797     16D8  00CD               	movwf	(_currentTime^(0+384)+2)
  1798     16D9                     l3386:
  1799                           
  1800                           ;main1.c: 170:     currentTime.minutes = readEEPROM(0x02);
  1801     16D9  3002               	movlw	2
  1802     16DA  1283               	bcf	3,5	;RP0=0, select bank0
  1803     16DB  1303               	bcf	3,6	;RP1=0, select bank0
  1804     16DC  00A6               	movwf	readEEPROM@address
  1805     16DD  3000               	movlw	0
  1806     16DE  00A7               	movwf	readEEPROM@address+1
  1807     16DF  160A  158A  2590  160A  118A  	fcall	_readEEPROM
  1808     16E4  1283               	bcf	3,5	;RP0=0, select bank0
  1809     16E5  1303               	bcf	3,6	;RP1=0, select bank0
  1810     16E6  0827               	movf	?_readEEPROM+1,w
  1811     16E7  1683               	bsf	3,5	;RP0=1, select bank3
  1812     16E8  1703               	bsf	3,6	;RP1=1, select bank3
  1813     16E9  00D0               	movwf	((_currentTime+1)^(0+384)+4)
  1814     16EA  1283               	bcf	3,5	;RP0=0, select bank0
  1815     16EB  1303               	bcf	3,6	;RP1=0, select bank0
  1816     16EC  0826               	movf	?_readEEPROM,w
  1817     16ED  1683               	bsf	3,5	;RP0=1, select bank3
  1818     16EE  1703               	bsf	3,6	;RP1=1, select bank3
  1819     16EF  00CF               	movwf	(_currentTime^(0+384)+4)
  1820     16F0                     l3388:
  1821                           
  1822                           ;main1.c: 171:     currentTime.seconds = readEEPROM(0x03);
  1823     16F0  3003               	movlw	3
  1824     16F1  1283               	bcf	3,5	;RP0=0, select bank0
  1825     16F2  1303               	bcf	3,6	;RP1=0, select bank0
  1826     16F3  00A6               	movwf	readEEPROM@address
  1827     16F4  3000               	movlw	0
  1828     16F5  00A7               	movwf	readEEPROM@address+1
  1829     16F6  160A  158A  2590  160A  118A  	fcall	_readEEPROM
  1830     16FB  1283               	bcf	3,5	;RP0=0, select bank0
  1831     16FC  1303               	bcf	3,6	;RP1=0, select bank0
  1832     16FD  0827               	movf	?_readEEPROM+1,w
  1833     16FE  1683               	bsf	3,5	;RP0=1, select bank3
  1834     16FF  1703               	bsf	3,6	;RP1=1, select bank3
  1835     1700  00D2               	movwf	((_currentTime+1)^(0+384)+6)
  1836     1701  1283               	bcf	3,5	;RP0=0, select bank0
  1837     1702  1303               	bcf	3,6	;RP1=0, select bank0
  1838     1703  0826               	movf	?_readEEPROM,w
  1839     1704  1683               	bsf	3,5	;RP0=1, select bank3
  1840     1705  1703               	bsf	3,6	;RP1=1, select bank3
  1841     1706  00D1               	movwf	(_currentTime^(0+384)+6)
  1842     1707                     l3390:
  1843                           
  1844                           ;main1.c: 172:     currentTime.carpan = readEEPROM(0x04);
  1845     1707  3004               	movlw	4
  1846     1708  1283               	bcf	3,5	;RP0=0, select bank0
  1847     1709  1303               	bcf	3,6	;RP1=0, select bank0
  1848     170A  00A6               	movwf	readEEPROM@address
  1849     170B  3000               	movlw	0
  1850     170C  00A7               	movwf	readEEPROM@address+1
  1851     170D  160A  158A  2590  160A  118A  	fcall	_readEEPROM
  1852     1712  1283               	bcf	3,5	;RP0=0, select bank0
  1853     1713  1303               	bcf	3,6	;RP1=0, select bank0
  1854     1714  0827               	movf	?_readEEPROM+1,w
  1855     1715  1683               	bsf	3,5	;RP0=1, select bank3
  1856     1716  1703               	bsf	3,6	;RP1=1, select bank3
  1857     1717  00CC               	movwf	(_currentTime+1)^(0+384)
  1858     1718  1283               	bcf	3,5	;RP0=0, select bank0
  1859     1719  1303               	bcf	3,6	;RP1=0, select bank0
  1860     171A  0826               	movf	?_readEEPROM,w
  1861     171B  1683               	bsf	3,5	;RP0=1, select bank3
  1862     171C  1703               	bsf	3,6	;RP1=1, select bank3
  1863     171D  00CB               	movwf	_currentTime^(0+384)
  1864     171E                     l3392:
  1865                           
  1866                           ;main1.c: 175:     char lcdText[9];;main1.c: 177:     OPTION_REGbits.T0CS = 0;
  1867     171E  1683               	bsf	3,5	;RP0=1, select bank1
  1868     171F  1303               	bcf	3,6	;RP1=0, select bank1
  1869     1720  1281               	bcf	1,5	;volatile
  1870     1721                     l3394:
  1871                           
  1872                           ;main1.c: 178:     OPTION_REGbits.PSA = 0;
  1873     1721  1181               	bcf	1,3	;volatile
  1874     1722                     l3396:
  1875                           
  1876                           ;main1.c: 179:     OPTION_REGbits.PS2 = 1;
  1877     1722  1501               	bsf	1,2	;volatile
  1878     1723                     l3398:
  1879                           
  1880                           ;main1.c: 180:     OPTION_REGbits.PS1 = 1;
  1881     1723  1481               	bsf	1,1	;volatile
  1882     1724                     l3400:
  1883                           
  1884                           ;main1.c: 181:     OPTION_REGbits.PS0 = 1;
  1885     1724  1401               	bsf	1,0	;volatile
  1886     1725                     l3402:
  1887                           
  1888                           ;main1.c: 184:     INTCONbits.GIE = 1;
  1889     1725  178B               	bsf	11,7	;volatile
  1890     1726                     l3404:
  1891                           
  1892                           ;main1.c: 185:     INTCONbits.PEIE = 1;
  1893     1726  170B               	bsf	11,6	;volatile
  1894     1727                     l3406:
  1895                           
  1896                           ;main1.c: 186:     INTCONbits.T0IE = 1;
  1897     1727  168B               	bsf	11,5	;volatile
  1898     1728                     l3408:
  1899                           
  1900                           ;main1.c: 189:     Lcd_Clear();
  1901     1728  160A  158A  2541  160A  118A  	fcall	_Lcd_Clear
  1902     172D                     l3410:
  1903                           
  1904                           ;main1.c: 190:     Lcd_Set_Cursor(1,1);
  1905     172D  1283               	bcf	3,5	;RP0=0, select bank0
  1906     172E  1303               	bcf	3,6	;RP1=0, select bank0
  1907     172F  01A4               	clrf	Lcd_Set_Cursor@b
  1908     1730  0AA4               	incf	Lcd_Set_Cursor@b,f
  1909     1731  3001               	movlw	1
  1910     1732  160A  118A  2042  160A  118A  	fcall	_Lcd_Set_Cursor
  1911     1737                     l3412:
  1912                           
  1913                           ;main1.c: 191:     Lcd_Write_String("UZMANLAR MAKINA");
  1914     1737  30B6               	movlw	low (STR_3| (0+32768))
  1915     1738  1283               	bcf	3,5	;RP0=0, select bank0
  1916     1739  1303               	bcf	3,6	;RP1=0, select bank0
  1917     173A  00A5               	movwf	Lcd_Write_String@a
  1918     173B  3098               	movlw	high (STR_3| (0+32768))
  1919     173C  00A6               	movwf	Lcd_Write_String@a+1
  1920     173D  160A  158A  276E  160A  118A  	fcall	_Lcd_Write_String
  1921     1742                     l3414:
  1922                           
  1923                           ;main1.c: 192:     Lcd_Set_Cursor(2,1);
  1924     1742  1283               	bcf	3,5	;RP0=0, select bank0
  1925     1743  1303               	bcf	3,6	;RP1=0, select bank0
  1926     1744  01A4               	clrf	Lcd_Set_Cursor@b
  1927     1745  0AA4               	incf	Lcd_Set_Cursor@b,f
  1928     1746  3002               	movlw	2
  1929     1747  160A  118A  2042  160A  118A  	fcall	_Lcd_Set_Cursor
  1930     174C                     l3416:
  1931                           
  1932                           ;main1.c: 193:     Lcd_Write_String("www.borvek.com");
  1933     174C  30D5               	movlw	low (STR_4| (0+32768))
  1934     174D  1283               	bcf	3,5	;RP0=0, select bank0
  1935     174E  1303               	bcf	3,6	;RP1=0, select bank0
  1936     174F  00A5               	movwf	Lcd_Write_String@a
  1937     1750  3098               	movlw	high (STR_4| (0+32768))
  1938     1751  00A6               	movwf	Lcd_Write_String@a+1
  1939     1752  160A  158A  276E  160A  118A  	fcall	_Lcd_Write_String
  1940     1757                     l3418:
  1941                           
  1942                           ;main1.c: 194:     Lcd_Set_Cursor(2,17);
  1943     1757  3011               	movlw	17
  1944     1758  1283               	bcf	3,5	;RP0=0, select bank0
  1945     1759  1303               	bcf	3,6	;RP1=0, select bank0
  1946     175A  00A4               	movwf	Lcd_Set_Cursor@b
  1947     175B  3002               	movlw	2
  1948     175C  160A  118A  2042  160A  118A  	fcall	_Lcd_Set_Cursor
  1949     1761                     l3420:
  1950                           
  1951                           ;main1.c: 195:     Lcd_Write_String("V3");
  1952     1761  3068               	movlw	low (STR_5| (0+32768))
  1953     1762  1283               	bcf	3,5	;RP0=0, select bank0
  1954     1763  1303               	bcf	3,6	;RP1=0, select bank0
  1955     1764  00A5               	movwf	Lcd_Write_String@a
  1956     1765  3099               	movlw	high (STR_5| (0+32768))
  1957     1766  00A6               	movwf	Lcd_Write_String@a+1
  1958     1767  160A  158A  276E  160A  118A  	fcall	_Lcd_Write_String
  1959     176C                     l3422:
  1960                           
  1961                           ;main1.c: 197:     _delay((unsigned long)((1000)*(4000000/4000.0)));
  1962     176C  3006               	movlw	6
  1963     176D  1683               	bsf	3,5	;RP0=1, select bank1
  1964     176E  1303               	bcf	3,6	;RP1=0, select bank1
  1965     176F  00A2               	movwf	(??_main^(0+128)+2)
  1966     1770  3013               	movlw	19
  1967     1771  00A1               	movwf	(??_main^(0+128)+1)
  1968     1772  30AD               	movlw	173
  1969     1773  00A0               	movwf	??_main^(0+128)
  1970     1774                     u5027:
  1971     1774  0BA0               	decfsz	??_main^(0+128),f
  1972     1775  2F74               	goto	u5027
  1973     1776  0BA1               	decfsz	(??_main^(0+128)+1),f
  1974     1777  2F74               	goto	u5027
  1975     1778  0BA2               	decfsz	(??_main^(0+128)+2),f
  1976     1779  2F74               	goto	u5027
  1977     177A                     l3424:
  1978                           
  1979                           ;main1.c: 198:     Lcd_Clear();
  1980     177A  160A  158A  2541  160A  118A  	fcall	_Lcd_Clear
  1981     177F                     l3426:
  1982                           
  1983                           ;main1.c: 203:     SPBRG = ((4000000/16)/19200) - 1;
  1984     177F  300C               	movlw	12
  1985     1780  1683               	bsf	3,5	;RP0=1, select bank1
  1986     1781  1303               	bcf	3,6	;RP1=0, select bank1
  1987     1782  0099               	movwf	25	;volatile
  1988     1783                     l3428:
  1989                           
  1990                           ;main1.c: 204:     UART_Initialize();
  1991     1783  160A  158A  255C  160A  118A  	fcall	_UART_Initialize
  1992     1788                     l3430:
  1993                           
  1994                           ;main1.c: 205: unsigned int displayValue = 0;
  1995     1788  1683               	bsf	3,5	;RP0=1, select bank3
  1996     1789  1703               	bsf	3,6	;RP1=1, select bank3
  1997     178A  01C0               	clrf	main@displayValue^(0+384)
  1998     178B  01C1               	clrf	(main@displayValue+1)^(0+384)
  1999     178C                     l3432:
  2000                           
  2001                           ;main1.c: 210:     ADCON1bits.ADFM = 1;
  2002     178C  1683               	bsf	3,5	;RP0=1, select bank1
  2003     178D  1303               	bcf	3,6	;RP1=0, select bank1
  2004     178E  179F               	bsf	31,7	;volatile
  2005     178F                     l3434:
  2006                           
  2007                           ;main1.c: 211:     ADCON1bits.PCFG = 0b100;
  2008     178F  081F               	movf	31,w	;volatile
  2009     1790  39F0               	andlw	-16
  2010     1791  3804               	iorlw	4
  2011     1792  009F               	movwf	31	;volatile
  2012     1793                     l3436:
  2013                           
  2014                           ;main1.c: 212:     ADCON0bits.ADCS = 0b10;
  2015     1793  1283               	bcf	3,5	;RP0=0, select bank0
  2016     1794  1303               	bcf	3,6	;RP1=0, select bank0
  2017     1795  081F               	movf	31,w	;volatile
  2018     1796  393F               	andlw	-193
  2019     1797  3880               	iorlw	128
  2020     1798  009F               	movwf	31	;volatile
  2021     1799                     l3438:
  2022                           
  2023                           ;main1.c: 213:     ADCON0bits.ADON = 1;
  2024     1799  141F               	bsf	31,0	;volatile
  2025     179A                     l3440:
  2026                           
  2027                           ;main1.c: 215:     float adcValue1;;main1.c: 216:     int adcValue2;;main1.c: 217:     f
      +                          loat adcValue3;;main1.c: 223:     RC1 = 0;
  2028     179A  1087               	bcf	7,1	;volatile
  2029     179B                     l3442:
  2030                           
  2031                           ;main1.c: 224:     RE2 = 0;
  2032     179B  1109               	bcf	9,2	;volatile
  2033     179C                     l3444:
  2034                           
  2035                           ;main1.c: 225:     RE0 = 0;
  2036     179C  1009               	bcf	9,0	;volatile
  2037     179D                     l3446:
  2038                           
  2039                           ;main1.c: 226:     RC2 = 0;
  2040     179D  1107               	bcf	7,2	;volatile
  2041     179E                     l3448:
  2042                           
  2043                           ;main1.c: 227:     RC0 = 0;
  2044     179E  1007               	bcf	7,0	;volatile
  2045     179F                     l3450:
  2046                           
  2047                           ;main1.c: 228:     RE1 = 0;
  2048     179F  1089               	bcf	9,1	;volatile
  2049     17A0                     l3452:
  2050                           
  2051                           ;main1.c: 230: int ilkAcilis = 1;
  2052     17A0  3001               	movlw	1
  2053     17A1  1683               	bsf	3,5	;RP0=1, select bank3
  2054     17A2  1703               	bsf	3,6	;RP1=1, select bank3
  2055     17A3  00AE               	movwf	main@ilkAcilis^(0+384)
  2056     17A4  3000               	movlw	0
  2057     17A5  00AF               	movwf	(main@ilkAcilis^(0+384)+1)
  2058     17A6                     l3454:
  2059                           
  2060                           ;main1.c: 236:       for ( int epromAdresi = 0 ; epromAdresi<255; epromAdresi++){
  2061     17A6  1683               	bsf	3,5	;RP0=1, select bank3
  2062     17A7  1703               	bsf	3,6	;RP1=1, select bank3
  2063     17A8  01BC               	clrf	main@epromAdresi^(0+384)
  2064     17A9  01BD               	clrf	(main@epromAdresi+1)^(0+384)
  2065     17AA                     l3460:
  2066                           
  2067                           ;main1.c: 237:         int olmazlar = readEEPROM(epromAdresi);
  2068     17AA  1683               	bsf	3,5	;RP0=1, select bank3
  2069     17AB  1703               	bsf	3,6	;RP1=1, select bank3
  2070     17AC  083D               	movf	(main@epromAdresi+1)^(0+384),w
  2071     17AD  1283               	bcf	3,5	;RP0=0, select bank0
  2072     17AE  1303               	bcf	3,6	;RP1=0, select bank0
  2073     17AF  00A7               	movwf	readEEPROM@address+1
  2074     17B0  1683               	bsf	3,5	;RP0=1, select bank3
  2075     17B1  1703               	bsf	3,6	;RP1=1, select bank3
  2076     17B2  083C               	movf	main@epromAdresi^(0+384),w
  2077     17B3  1283               	bcf	3,5	;RP0=0, select bank0
  2078     17B4  1303               	bcf	3,6	;RP1=0, select bank0
  2079     17B5  00A6               	movwf	readEEPROM@address
  2080     17B6  160A  158A  2590  160A  118A  	fcall	_readEEPROM
  2081     17BB  1283               	bcf	3,5	;RP0=0, select bank0
  2082     17BC  1303               	bcf	3,6	;RP1=0, select bank0
  2083     17BD  0827               	movf	?_readEEPROM+1,w
  2084     17BE  1683               	bsf	3,5	;RP0=1, select bank3
  2085     17BF  1703               	bsf	3,6	;RP1=1, select bank3
  2086     17C0  00A3               	movwf	(main@olmazlar+1)^(0+384)
  2087     17C1  1283               	bcf	3,5	;RP0=0, select bank0
  2088     17C2  1303               	bcf	3,6	;RP1=0, select bank0
  2089     17C3  0826               	movf	?_readEEPROM,w
  2090     17C4  1683               	bsf	3,5	;RP0=1, select bank3
  2091     17C5  1703               	bsf	3,6	;RP1=1, select bank3
  2092     17C6  00A2               	movwf	main@olmazlar^(0+384)
  2093     17C7                     l3462:
  2094                           
  2095                           ;main1.c: 238:         if (olmazlar==255){
  2096     17C7  0A22               	incf	main@olmazlar^(0+384),w
  2097     17C8  0423               	iorwf	(main@olmazlar+1)^(0+384),w
  2098     17C9  1D03               	btfss	3,2
  2099     17CA  2FCC               	goto	u4421
  2100     17CB  2FCD               	goto	u4420
  2101     17CC                     u4421:
  2102     17CC  2FDF               	goto	l3466
  2103     17CD                     u4420:
  2104     17CD                     l3464:
  2105                           
  2106                           ;main1.c: 239:        writeEEPROM(epromAdresi,0);
  2107     17CD  083D               	movf	(main@epromAdresi+1)^(0+384),w
  2108     17CE  1283               	bcf	3,5	;RP0=0, select bank0
  2109     17CF  1303               	bcf	3,6	;RP1=0, select bank0
  2110     17D0  00A1               	movwf	writeEEPROM@address+1
  2111     17D1  1683               	bsf	3,5	;RP0=1, select bank3
  2112     17D2  1703               	bsf	3,6	;RP1=1, select bank3
  2113     17D3  083C               	movf	main@epromAdresi^(0+384),w
  2114     17D4  1283               	bcf	3,5	;RP0=0, select bank0
  2115     17D5  1303               	bcf	3,6	;RP1=0, select bank0
  2116     17D6  00A0               	movwf	writeEEPROM@address
  2117     17D7  3000               	movlw	0
  2118     17D8  00A2               	movwf	writeEEPROM@data
  2119     17D9  00A3               	movwf	writeEEPROM@data+1
  2120     17DA  160A  158A  25D7  160A  118A  	fcall	_writeEEPROM
  2121     17DF                     l3466:
  2122                           
  2123                           ;main1.c: 241:     }
  2124     17DF  3001               	movlw	1
  2125     17E0  1683               	bsf	3,5	;RP0=1, select bank3
  2126     17E1  1703               	bsf	3,6	;RP1=1, select bank3
  2127     17E2  07BC               	addwf	main@epromAdresi^(0+384),f
  2128     17E3  1803               	skipnc
  2129     17E4  0ABD               	incf	(main@epromAdresi+1)^(0+384),f
  2130     17E5  3000               	movlw	0
  2131     17E6  07BD               	addwf	(main@epromAdresi+1)^(0+384),f
  2132     17E7                     l3468:
  2133     17E7  083D               	movf	(main@epromAdresi+1)^(0+384),w
  2134     17E8  3A80               	xorlw	128
  2135     17E9  00FF               	movwf	btemp+1
  2136     17EA  3080               	movlw	128
  2137     17EB  027F               	subwf	btemp+1,w
  2138     17EC  1D03               	skipz
  2139     17ED  2FF0               	goto	u4435
  2140     17EE  30FF               	movlw	255
  2141     17EF  023C               	subwf	main@epromAdresi^(0+384),w
  2142     17F0                     u4435:
  2143     17F0  1C03               	skipc
  2144     17F1  2FF3               	goto	u4431
  2145     17F2  2FF4               	goto	u4430
  2146     17F3                     u4431:
  2147     17F3  2FAA               	goto	l3460
  2148     17F4                     u4430:
  2149     17F4                     l3470:
  2150                           
  2151                           ;main1.c: 255: if (ilkAcilis) {
  2152     17F4  1683               	bsf	3,5	;RP0=1, select bank3
  2153     17F5  1703               	bsf	3,6	;RP1=1, select bank3
  2154     17F6  082E               	movf	main@ilkAcilis^(0+384),w
  2155     17F7  042F               	iorwf	(main@ilkAcilis+1)^(0+384),w
  2156     17F8  1903               	btfsc	3,2
  2157     17F9  2FFD               	goto	u4441
  2158     17FA  120A  118A  2835   	goto	u4440
  2159     17FD                     u4441:
  2160     17FD  120A  118A  2885   	goto	l218
  2161                           
  2162                           	psect	text1
  2163     07A9                     __ptext1:	
  2164 ;; *************** function _yagBakim *****************
  2165 ;; Defined at:
  2166 ;;		line 28 in file "main1.c"
  2167 ;; Parameters:    Size  Location     Type
  2168 ;;		None
  2169 ;; Auto vars:     Size  Location     Type
  2170 ;;  i               2   12[BANK0 ] int 
  2171 ;; Return value:  Size  Location     Type
  2172 ;;                  1    wreg      void 
  2173 ;; Registers used:
  2174 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2175 ;; Tracked objects:
  2176 ;;		On entry : 0/0
  2177 ;;		On exit  : 0/0
  2178 ;;		Unchanged: 0/0
  2179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2180 ;;      Params:         0       0       0       0       0
  2181 ;;      Locals:         0       2       0       0       0
  2182 ;;      Temps:          0       0       0       0       0
  2183 ;;      Totals:         0       2       0       0       0
  2184 ;;Total ram usage:        2 bytes
  2185 ;; Hardware stack levels used: 1
  2186 ;; Hardware stack levels required when called: 5
  2187 ;; This function calls:
  2188 ;;		_Lcd_Clear
  2189 ;;		_Lcd_Set_Cursor
  2190 ;;		_Lcd_Write_String
  2191 ;; This function is called by:
  2192 ;;		_main
  2193 ;; This function uses a non-reentrant model
  2194 ;;
  2195                           
  2196     07A9                     _yagBakim:	
  2197                           ;psect for function _yagBakim
  2198                           
  2199     07A9                     l2852:	
  2200                           ;incstack = 0
  2201                           ; Regs used in _yagBakim: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2202                           
  2203                           
  2204                           ;main1.c: 29:     Lcd_Clear();
  2205     07A9  160A  158A  2541  120A  118A  	fcall	_Lcd_Clear
  2206     07AE                     l2854:
  2207                           
  2208                           ;main1.c: 30:     for (int i = 0; i < 10; i++) {
  2209     07AE  1283               	bcf	3,5	;RP0=0, select bank0
  2210     07AF  1303               	bcf	3,6	;RP1=0, select bank0
  2211     07B0  01AC               	clrf	yagBakim@i
  2212     07B1  01AD               	clrf	yagBakim@i+1
  2213     07B2                     l2860:
  2214                           
  2215                           ;main1.c: 31:         Lcd_Set_Cursor(1, 1);
  2216     07B2  1283               	bcf	3,5	;RP0=0, select bank0
  2217     07B3  1303               	bcf	3,6	;RP1=0, select bank0
  2218     07B4  01A4               	clrf	Lcd_Set_Cursor@b
  2219     07B5  0AA4               	incf	Lcd_Set_Cursor@b,f
  2220     07B6  3001               	movlw	1
  2221     07B7  160A  118A  2042  120A  118A  	fcall	_Lcd_Set_Cursor
  2222     07BC                     l2862:
  2223                           
  2224                           ;main1.c: 32:         Lcd_Write_String("YAG BAKIMI YAPINIZ");
  2225     07BC  30A3               	movlw	low (STR_1| (0+32768))
  2226     07BD  1283               	bcf	3,5	;RP0=0, select bank0
  2227     07BE  1303               	bcf	3,6	;RP1=0, select bank0
  2228     07BF  00A5               	movwf	Lcd_Write_String@a
  2229     07C0  3098               	movlw	high (STR_1| (0+32768))
  2230     07C1  00A6               	movwf	Lcd_Write_String@a+1
  2231     07C2  160A  158A  276E  120A  118A  	fcall	_Lcd_Write_String
  2232     07C7                     l2864:
  2233                           
  2234                           ;main1.c: 33:         Lcd_Set_Cursor(2, 1);
  2235     07C7  1283               	bcf	3,5	;RP0=0, select bank0
  2236     07C8  1303               	bcf	3,6	;RP1=0, select bank0
  2237     07C9  01A4               	clrf	Lcd_Set_Cursor@b
  2238     07CA  0AA4               	incf	Lcd_Set_Cursor@b,f
  2239     07CB  3002               	movlw	2
  2240     07CC  160A  118A  2042  120A  118A  	fcall	_Lcd_Set_Cursor
  2241                           
  2242                           ;main1.c: 34:         Lcd_Write_String("OIL THE GEARS");
  2243     07D1  30F2               	movlw	low (STR_2| (0+32768))
  2244     07D2  1283               	bcf	3,5	;RP0=0, select bank0
  2245     07D3  1303               	bcf	3,6	;RP1=0, select bank0
  2246     07D4  00A5               	movwf	Lcd_Write_String@a
  2247     07D5  3098               	movlw	high (STR_2| (0+32768))
  2248     07D6  00A6               	movwf	Lcd_Write_String@a+1
  2249     07D7  160A  158A  276E  120A  118A  	fcall	_Lcd_Write_String
  2250     07DC                     l2866:
  2251                           
  2252                           ;main1.c: 35:         RA4 = 1;
  2253     07DC  1283               	bcf	3,5	;RP0=0, select bank0
  2254     07DD  1303               	bcf	3,6	;RP1=0, select bank0
  2255     07DE  1605               	bsf	5,4	;volatile
  2256     07DF                     l2868:
  2257                           
  2258                           ;main1.c: 36:     }
  2259     07DF  3001               	movlw	1
  2260     07E0  07AC               	addwf	yagBakim@i,f
  2261     07E1  1803               	skipnc
  2262     07E2  0AAD               	incf	yagBakim@i+1,f
  2263     07E3  3000               	movlw	0
  2264     07E4  07AD               	addwf	yagBakim@i+1,f
  2265     07E5                     l2870:
  2266     07E5  082D               	movf	yagBakim@i+1,w
  2267     07E6  3A80               	xorlw	128
  2268     07E7  00FF               	movwf	btemp+1
  2269     07E8  3080               	movlw	128
  2270     07E9  027F               	subwf	btemp+1,w
  2271     07EA  1D03               	skipz
  2272     07EB  2FEE               	goto	u3405
  2273     07EC  300A               	movlw	10
  2274     07ED  022C               	subwf	yagBakim@i,w
  2275     07EE                     u3405:
  2276     07EE  1C03               	skipc
  2277     07EF  2FF1               	goto	u3401
  2278     07F0  2FF2               	goto	u3400
  2279     07F1                     u3401:
  2280     07F1  2FB2               	goto	l2860
  2281     07F2                     u3400:
  2282     07F2                     l2872:
  2283                           
  2284                           ;main1.c: 37:     Lcd_Clear();
  2285     07F2  160A  158A  2541  120A  118A  	fcall	_Lcd_Clear
  2286     07F7                     l2874:
  2287                           
  2288                           ;main1.c: 38:     RA4 = 0;
  2289     07F7  1283               	bcf	3,5	;RP0=0, select bank0
  2290     07F8  1303               	bcf	3,6	;RP1=0, select bank0
  2291     07F9  1205               	bcf	5,4	;volatile
  2292     07FA                     l175:
  2293     07FA  0008               	return
  2294     07FB                     __end_of_yagBakim:
  2295                           
  2296                           	psect	text2
  2297     1F6E                     __ptext2:	
  2298 ;; *************** function _Lcd_Write_String *****************
  2299 ;; Defined at:
  2300 ;;		line 96 in file "./lcd.h"
  2301 ;; Parameters:    Size  Location     Type
  2302 ;;  a               2    5[BANK0 ] PTR unsigned char 
  2303 ;;		 -> STR_36(21), STR_35(21), STR_33(24), STR_32(24), 
  2304 ;;		 -> STR_29(27), STR_28(26), STR_26(13), STR_24(14), 
  2305 ;;		 -> STR_22(10), STR_20(9), STR_18(15), STR_16(10), 
  2306 ;;		 -> STR_14(9), main@rpmString(5), STR_12(5), main@adcString1(4), 
  2307 ;;		 -> STR_10(10), STR_9(3), main@lcdText(9), STR_7(21), 
  2308 ;;		 -> STR_6(20), STR_5(3), STR_4(15), STR_3(16), 
  2309 ;;		 -> STR_2(14), STR_1(19), 
  2310 ;; Auto vars:     Size  Location     Type
  2311 ;;  i               2   10[BANK0 ] int 
  2312 ;; Return value:  Size  Location     Type
  2313 ;;                  1    wreg      void 
  2314 ;; Registers used:
  2315 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2316 ;; Tracked objects:
  2317 ;;		On entry : 0/0
  2318 ;;		On exit  : 0/0
  2319 ;;		Unchanged: 0/0
  2320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2321 ;;      Params:         0       2       0       0       0
  2322 ;;      Locals:         0       2       0       0       0
  2323 ;;      Temps:          0       3       0       0       0
  2324 ;;      Totals:         0       7       0       0       0
  2325 ;;Total ram usage:        7 bytes
  2326 ;; Hardware stack levels used: 1
  2327 ;; Hardware stack levels required when called: 4
  2328 ;; This function calls:
  2329 ;;		_Lcd_Write_Char
  2330 ;; This function is called by:
  2331 ;;		_yagBakim
  2332 ;;		_main
  2333 ;; This function uses a non-reentrant model
  2334 ;;
  2335                           
  2336     1F6E                     _Lcd_Write_String:	
  2337                           ;psect for function _Lcd_Write_String
  2338                           
  2339     1F6E                     l2798:	
  2340                           ;incstack = 0
  2341                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2342                           
  2343                           
  2344                           ;./lcd.h: 96: void Lcd_Write_String(char *a);./lcd.h: 97: {;./lcd.h: 98:  int i;;./lcd.h
      +                          : 99:  for(i=0;a[i]!='\0';i++)
  2345     1F6E  1283               	bcf	3,5	;RP0=0, select bank0
  2346     1F6F  1303               	bcf	3,6	;RP1=0, select bank0
  2347     1F70  01AA               	clrf	Lcd_Write_String@i
  2348     1F71  01AB               	clrf	Lcd_Write_String@i+1
  2349     1F72  2F97               	goto	l2804
  2350     1F73                     l2800:
  2351                           
  2352                           ;./lcd.h: 100:     Lcd_Write_Char(a[i]);
  2353     1F73  082A               	movf	Lcd_Write_String@i,w
  2354     1F74  0725               	addwf	Lcd_Write_String@a,w
  2355     1F75  00A8               	movwf	??_Lcd_Write_String+1
  2356     1F76  0826               	movf	Lcd_Write_String@a+1,w
  2357     1F77  00A7               	movwf	??_Lcd_Write_String
  2358     1F78  1803               	skipnc
  2359     1F79  0AA7               	incf	??_Lcd_Write_String,f
  2360     1F7A  1FAA               	btfss	Lcd_Write_String@i,7
  2361     1F7B  2F7D               	goto	u3300
  2362     1F7C  03A7               	decf	??_Lcd_Write_String,f
  2363     1F7D                     u3300:
  2364     1F7D  1283               	bcf	3,5	;RP0=0, select bank0
  2365     1F7E  1303               	bcf	3,6	;RP1=0, select bank0
  2366     1F7F  0827               	movf	??_Lcd_Write_String,w
  2367     1F80  00A9               	movwf	??_Lcd_Write_String+2
  2368     1F81  0829               	movf	??_Lcd_Write_String+2,w
  2369     1F82  00FF               	movwf	btemp+1
  2370     1F83  0828               	movf	??_Lcd_Write_String+1,w
  2371     1F84  0084               	movwf	4
  2372     1F85  160A  158A  216B  160A  158A  	fcall	stringtab
  2373     1F8A  160A  158A  26A9  160A  158A  	fcall	_Lcd_Write_Char
  2374     1F8F                     l2802:
  2375     1F8F  3001               	movlw	1
  2376     1F90  1283               	bcf	3,5	;RP0=0, select bank0
  2377     1F91  1303               	bcf	3,6	;RP1=0, select bank0
  2378     1F92  07AA               	addwf	Lcd_Write_String@i,f
  2379     1F93  1803               	skipnc
  2380     1F94  0AAB               	incf	Lcd_Write_String@i+1,f
  2381     1F95  3000               	movlw	0
  2382     1F96  07AB               	addwf	Lcd_Write_String@i+1,f
  2383     1F97                     l2804:
  2384     1F97  082A               	movf	Lcd_Write_String@i,w
  2385     1F98  0725               	addwf	Lcd_Write_String@a,w
  2386     1F99  00A8               	movwf	??_Lcd_Write_String+1
  2387     1F9A  0826               	movf	Lcd_Write_String@a+1,w
  2388     1F9B  00A7               	movwf	??_Lcd_Write_String
  2389     1F9C  1803               	skipnc
  2390     1F9D  0AA7               	incf	??_Lcd_Write_String,f
  2391     1F9E  1FAA               	btfss	Lcd_Write_String@i,7
  2392     1F9F  2FA1               	goto	u3310
  2393     1FA0  03A7               	decf	??_Lcd_Write_String,f
  2394     1FA1                     u3310:
  2395     1FA1  1283               	bcf	3,5	;RP0=0, select bank0
  2396     1FA2  1303               	bcf	3,6	;RP1=0, select bank0
  2397     1FA3  0827               	movf	??_Lcd_Write_String,w
  2398     1FA4  00A9               	movwf	??_Lcd_Write_String+2
  2399     1FA5  0829               	movf	??_Lcd_Write_String+2,w
  2400     1FA6  00FF               	movwf	btemp+1
  2401     1FA7  0828               	movf	??_Lcd_Write_String+1,w
  2402     1FA8  0084               	movwf	4
  2403     1FA9  160A  158A  216B  160A  158A  	fcall	stringtab
  2404     1FAE  3A00               	xorlw	0
  2405     1FAF  1D03               	skipz
  2406     1FB0  2FB2               	goto	u3321
  2407     1FB1  2FB3               	goto	u3320
  2408     1FB2                     u3321:
  2409     1FB2  2F73               	goto	l2800
  2410     1FB3                     u3320:
  2411     1FB3                     l170:
  2412     1FB3  0008               	return
  2413     1FB4                     __end_of_Lcd_Write_String:
  2414                           
  2415                           	psect	text3
  2416     1EA9                     __ptext3:	
  2417 ;; *************** function _Lcd_Write_Char *****************
  2418 ;; Defined at:
  2419 ;;		line 80 in file "./lcd.h"
  2420 ;; Parameters:    Size  Location     Type
  2421 ;;  a               1    wreg     unsigned char 
  2422 ;; Auto vars:     Size  Location     Type
  2423 ;;  a               1    4[BANK0 ] unsigned char 
  2424 ;;  y               1    3[BANK0 ] unsigned char 
  2425 ;;  temp            1    2[BANK0 ] unsigned char 
  2426 ;; Return value:  Size  Location     Type
  2427 ;;                  1    wreg      void 
  2428 ;; Registers used:
  2429 ;;		wreg, status,2, status,0, pclath, cstack
  2430 ;; Tracked objects:
  2431 ;;		On entry : 0/0
  2432 ;;		On exit  : 0/0
  2433 ;;		Unchanged: 0/0
  2434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2435 ;;      Params:         0       0       0       0       0
  2436 ;;      Locals:         0       3       0       0       0
  2437 ;;      Temps:          0       1       0       0       0
  2438 ;;      Totals:         0       4       0       0       0
  2439 ;;Total ram usage:        4 bytes
  2440 ;; Hardware stack levels used: 1
  2441 ;; Hardware stack levels required when called: 3
  2442 ;; This function calls:
  2443 ;;		_Lcd_Port
  2444 ;; This function is called by:
  2445 ;;		_Lcd_Write_String
  2446 ;; This function uses a non-reentrant model
  2447 ;;
  2448                           
  2449     1EA9                     _Lcd_Write_Char:	
  2450                           ;psect for function _Lcd_Write_Char
  2451                           
  2452                           
  2453                           ;incstack = 0
  2454                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2455                           ;Lcd_Write_Char@a stored from wreg
  2456     1EA9  1283               	bcf	3,5	;RP0=0, select bank0
  2457     1EAA  1303               	bcf	3,6	;RP1=0, select bank0
  2458     1EAB  00A4               	movwf	Lcd_Write_Char@a
  2459     1EAC                     l2680:
  2460                           
  2461                           ;./lcd.h: 80: void Lcd_Write_Char(char a);./lcd.h: 81: {;./lcd.h: 82:    char temp,y;;./
      +                          lcd.h: 83:    temp = a&0x0F;
  2462     1EAC  0824               	movf	Lcd_Write_Char@a,w
  2463     1EAD  390F               	andlw	15
  2464     1EAE  00A2               	movwf	Lcd_Write_Char@temp
  2465                           
  2466                           ;./lcd.h: 84:    y = a&0xF0;
  2467     1EAF  0824               	movf	Lcd_Write_Char@a,w
  2468     1EB0  39F0               	andlw	240
  2469     1EB1  00A3               	movwf	Lcd_Write_Char@y
  2470     1EB2                     l2682:
  2471                           
  2472                           ;./lcd.h: 85:    RB5 = 1;
  2473     1EB2  1686               	bsf	6,5	;volatile
  2474     1EB3                     l2684:
  2475                           
  2476                           ;./lcd.h: 86:    Lcd_Port(y>>4);
  2477     1EB3  0823               	movf	Lcd_Write_Char@y,w
  2478     1EB4  00A1               	movwf	??_Lcd_Write_Char
  2479     1EB5  3004               	movlw	4
  2480     1EB6                     u3185:
  2481     1EB6  1003               	clrc
  2482     1EB7  0CA1               	rrf	??_Lcd_Write_Char,f
  2483     1EB8  3EFF               	addlw	-1
  2484     1EB9  1D03               	skipz
  2485     1EBA  2EB6               	goto	u3185
  2486     1EBB  0821               	movf	??_Lcd_Write_Char,w
  2487     1EBC  160A  158A  25F3  160A  158A  	fcall	_Lcd_Port
  2488     1EC1                     l2686:
  2489                           
  2490                           ;./lcd.h: 87:    RB4 = 1;
  2491     1EC1  1283               	bcf	3,5	;RP0=0, select bank0
  2492     1EC2  1303               	bcf	3,6	;RP1=0, select bank0
  2493     1EC3  1606               	bsf	6,4	;volatile
  2494     1EC4                     l2688:
  2495                           
  2496                           ;./lcd.h: 88:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  2497     1EC4  300C               	movlw	12
  2498     1EC5  1283               	bcf	3,5	;RP0=0, select bank0
  2499     1EC6  1303               	bcf	3,6	;RP1=0, select bank0
  2500     1EC7  00A1               	movwf	??_Lcd_Write_Char
  2501     1EC8                     u5117:
  2502     1EC8  0BA1               	decfsz	??_Lcd_Write_Char,f
  2503     1EC9  2EC8               	goto	u5117
  2504     1ECA  0000               	nop
  2505     1ECB                     l2690:
  2506                           
  2507                           ;./lcd.h: 89:    RB4 = 0;
  2508     1ECB  1283               	bcf	3,5	;RP0=0, select bank0
  2509     1ECC  1303               	bcf	3,6	;RP1=0, select bank0
  2510     1ECD  1206               	bcf	6,4	;volatile
  2511     1ECE                     l2692:
  2512                           
  2513                           ;./lcd.h: 90:    Lcd_Port(temp);
  2514     1ECE  0822               	movf	Lcd_Write_Char@temp,w
  2515     1ECF  160A  158A  25F3  160A  158A  	fcall	_Lcd_Port
  2516     1ED4                     l2694:
  2517                           
  2518                           ;./lcd.h: 91:    RB4 = 1;
  2519     1ED4  1283               	bcf	3,5	;RP0=0, select bank0
  2520     1ED5  1303               	bcf	3,6	;RP1=0, select bank0
  2521     1ED6  1606               	bsf	6,4	;volatile
  2522     1ED7                     l2696:
  2523                           
  2524                           ;./lcd.h: 92:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  2525     1ED7  300C               	movlw	12
  2526     1ED8  1283               	bcf	3,5	;RP0=0, select bank0
  2527     1ED9  1303               	bcf	3,6	;RP1=0, select bank0
  2528     1EDA  00A1               	movwf	??_Lcd_Write_Char
  2529     1EDB                     u5127:
  2530     1EDB  0BA1               	decfsz	??_Lcd_Write_Char,f
  2531     1EDC  2EDB               	goto	u5127
  2532     1EDD  0000               	nop
  2533     1EDE                     l2698:
  2534                           
  2535                           ;./lcd.h: 93:    RB4 = 0;
  2536     1EDE  1283               	bcf	3,5	;RP0=0, select bank0
  2537     1EDF  1303               	bcf	3,6	;RP1=0, select bank0
  2538     1EE0  1206               	bcf	6,4	;volatile
  2539     1EE1                     l164:
  2540     1EE1  0008               	return
  2541     1EE2                     __end_of_Lcd_Write_Char:
  2542                           
  2543                           	psect	text4
  2544     1042                     __ptext4:	
  2545 ;; *************** function _Lcd_Set_Cursor *****************
  2546 ;; Defined at:
  2547 ;;		line 40 in file "./lcd.h"
  2548 ;; Parameters:    Size  Location     Type
  2549 ;;  a               1    wreg     unsigned char 
  2550 ;;  b               1    4[BANK0 ] unsigned char 
  2551 ;; Auto vars:     Size  Location     Type
  2552 ;;  a               1    6[BANK0 ] unsigned char 
  2553 ;;  temp            1    9[BANK0 ] unsigned char 
  2554 ;;  y               1    8[BANK0 ] unsigned char 
  2555 ;;  z               1    7[BANK0 ] unsigned char 
  2556 ;; Return value:  Size  Location     Type
  2557 ;;                  1    wreg      void 
  2558 ;; Registers used:
  2559 ;;		wreg, status,2, status,0, pclath, cstack
  2560 ;; Tracked objects:
  2561 ;;		On entry : 0/0
  2562 ;;		On exit  : 0/0
  2563 ;;		Unchanged: 0/0
  2564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2565 ;;      Params:         0       1       0       0       0
  2566 ;;      Locals:         0       4       0       0       0
  2567 ;;      Temps:          0       1       0       0       0
  2568 ;;      Totals:         0       6       0       0       0
  2569 ;;Total ram usage:        6 bytes
  2570 ;; Hardware stack levels used: 1
  2571 ;; Hardware stack levels required when called: 4
  2572 ;; This function calls:
  2573 ;;		_Lcd_Cmd
  2574 ;; This function is called by:
  2575 ;;		_yagBakim
  2576 ;;		_main
  2577 ;; This function uses a non-reentrant model
  2578 ;;
  2579                           
  2580     1042                     _Lcd_Set_Cursor:	
  2581                           ;psect for function _Lcd_Set_Cursor
  2582                           
  2583                           
  2584                           ;incstack = 0
  2585                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2586                           ;Lcd_Set_Cursor@a stored from wreg
  2587     1042  1283               	bcf	3,5	;RP0=0, select bank0
  2588     1043  1303               	bcf	3,6	;RP1=0, select bank0
  2589     1044  00A6               	movwf	Lcd_Set_Cursor@a
  2590     1045                     l2778:
  2591                           
  2592                           ;./lcd.h: 40: void Lcd_Set_Cursor(char a, char b);./lcd.h: 41: {;./lcd.h: 42:  char temp
      +                          ,z,y;;./lcd.h: 43:  if(a == 1)
  2593     1045  0326               	decf	Lcd_Set_Cursor@a,w
  2594     1046  1D03               	btfss	3,2
  2595     1047  2849               	goto	u3261
  2596     1048  284A               	goto	u3260
  2597     1049                     u3261:
  2598     1049  2869               	goto	l2788
  2599     104A                     u3260:
  2600     104A                     l2780:
  2601                           
  2602                           ;./lcd.h: 44:  {;./lcd.h: 45:    temp = 0x80 + b - 1;
  2603     104A  0824               	movf	Lcd_Set_Cursor@b,w
  2604     104B  3E7F               	addlw	127
  2605     104C  00A9               	movwf	Lcd_Set_Cursor@temp
  2606                           
  2607                           ;./lcd.h: 46:   z = temp>>4;
  2608     104D  0829               	movf	Lcd_Set_Cursor@temp,w
  2609     104E  00A5               	movwf	??_Lcd_Set_Cursor
  2610     104F  3004               	movlw	4
  2611     1050                     u3275:
  2612     1050  1003               	clrc
  2613     1051  0CA5               	rrf	??_Lcd_Set_Cursor,f
  2614     1052  3EFF               	addlw	-1
  2615     1053  1D03               	skipz
  2616     1054  2850               	goto	u3275
  2617     1055  0825               	movf	??_Lcd_Set_Cursor,w
  2618     1056  00A7               	movwf	Lcd_Set_Cursor@z
  2619     1057                     l2782:
  2620                           
  2621                           ;./lcd.h: 47:   y = temp & 0x0F;
  2622     1057  0829               	movf	Lcd_Set_Cursor@temp,w
  2623     1058  390F               	andlw	15
  2624     1059  00A8               	movwf	Lcd_Set_Cursor@y
  2625     105A                     l2784:
  2626                           
  2627                           ;./lcd.h: 48:   Lcd_Cmd(z);
  2628     105A  0827               	movf	Lcd_Set_Cursor@z,w
  2629     105B  160A  158A  25BB  160A  118A  	fcall	_Lcd_Cmd
  2630     1060                     l2786:
  2631                           
  2632                           ;./lcd.h: 49:   Lcd_Cmd(y);
  2633     1060  1283               	bcf	3,5	;RP0=0, select bank0
  2634     1061  1303               	bcf	3,6	;RP1=0, select bank0
  2635     1062  0828               	movf	Lcd_Set_Cursor@y,w
  2636     1063  160A  158A  25BB  160A  118A  	fcall	_Lcd_Cmd
  2637                           
  2638                           ;./lcd.h: 50:  }
  2639     1068  288D               	goto	l158
  2640     1069                     l2788:
  2641     1069  3002               	movlw	2
  2642     106A  0626               	xorwf	Lcd_Set_Cursor@a,w
  2643     106B  1D03               	btfss	3,2
  2644     106C  286E               	goto	u3281
  2645     106D  286F               	goto	u3280
  2646     106E                     u3281:
  2647     106E  288D               	goto	l158
  2648     106F                     u3280:
  2649     106F                     l2790:
  2650                           
  2651                           ;./lcd.h: 52:  {;./lcd.h: 53:   temp = 0xC0 + b - 1;
  2652     106F  0824               	movf	Lcd_Set_Cursor@b,w
  2653     1070  3EBF               	addlw	191
  2654     1071  00A9               	movwf	Lcd_Set_Cursor@temp
  2655                           
  2656                           ;./lcd.h: 54:   z = temp>>4;
  2657     1072  0829               	movf	Lcd_Set_Cursor@temp,w
  2658     1073  00A5               	movwf	??_Lcd_Set_Cursor
  2659     1074  3004               	movlw	4
  2660     1075                     u3295:
  2661     1075  1003               	clrc
  2662     1076  0CA5               	rrf	??_Lcd_Set_Cursor,f
  2663     1077  3EFF               	addlw	-1
  2664     1078  1D03               	skipz
  2665     1079  2875               	goto	u3295
  2666     107A  0825               	movf	??_Lcd_Set_Cursor,w
  2667     107B  00A7               	movwf	Lcd_Set_Cursor@z
  2668     107C                     l2792:
  2669                           
  2670                           ;./lcd.h: 55:   y = temp & 0x0F;
  2671     107C  0829               	movf	Lcd_Set_Cursor@temp,w
  2672     107D  390F               	andlw	15
  2673     107E  00A8               	movwf	Lcd_Set_Cursor@y
  2674     107F                     l2794:
  2675                           
  2676                           ;./lcd.h: 56:   Lcd_Cmd(z);
  2677     107F  0827               	movf	Lcd_Set_Cursor@z,w
  2678     1080  160A  158A  25BB  160A  118A  	fcall	_Lcd_Cmd
  2679     1085                     l2796:
  2680                           
  2681                           ;./lcd.h: 57:   Lcd_Cmd(y);
  2682     1085  1283               	bcf	3,5	;RP0=0, select bank0
  2683     1086  1303               	bcf	3,6	;RP1=0, select bank0
  2684     1087  0828               	movf	Lcd_Set_Cursor@y,w
  2685     1088  160A  158A  25BB  160A  118A  	fcall	_Lcd_Cmd
  2686     108D                     l158:
  2687     108D  0008               	return
  2688     108E                     __end_of_Lcd_Set_Cursor:
  2689                           
  2690                           	psect	text5
  2691     1D41                     __ptext5:	
  2692 ;; *************** function _Lcd_Clear *****************
  2693 ;; Defined at:
  2694 ;;		line 34 in file "./lcd.h"
  2695 ;; Parameters:    Size  Location     Type
  2696 ;;		None
  2697 ;; Auto vars:     Size  Location     Type
  2698 ;;		None
  2699 ;; Return value:  Size  Location     Type
  2700 ;;                  1    wreg      void 
  2701 ;; Registers used:
  2702 ;;		wreg, status,2, status,0, pclath, cstack
  2703 ;; Tracked objects:
  2704 ;;		On entry : 0/0
  2705 ;;		On exit  : 0/0
  2706 ;;		Unchanged: 0/0
  2707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2708 ;;      Params:         0       0       0       0       0
  2709 ;;      Locals:         0       0       0       0       0
  2710 ;;      Temps:          0       0       0       0       0
  2711 ;;      Totals:         0       0       0       0       0
  2712 ;;Total ram usage:        0 bytes
  2713 ;; Hardware stack levels used: 1
  2714 ;; Hardware stack levels required when called: 4
  2715 ;; This function calls:
  2716 ;;		_Lcd_Cmd
  2717 ;; This function is called by:
  2718 ;;		_yagBakim
  2719 ;;		_main
  2720 ;; This function uses a non-reentrant model
  2721 ;;
  2722                           
  2723     1D41                     _Lcd_Clear:	
  2724                           ;psect for function _Lcd_Clear
  2725                           
  2726     1D41                     l2776:	
  2727                           ;incstack = 0
  2728                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2729                           
  2730                           
  2731                           ;./lcd.h: 36:  Lcd_Cmd(0);
  2732     1D41  3000               	movlw	0
  2733     1D42  160A  158A  25BB  160A  158A  	fcall	_Lcd_Cmd
  2734                           
  2735                           ;./lcd.h: 37:  Lcd_Cmd(1);
  2736     1D47  3001               	movlw	1
  2737     1D48  160A  158A  25BB  160A  158A  	fcall	_Lcd_Cmd
  2738     1D4D                     l152:
  2739     1D4D  0008               	return
  2740     1D4E                     __end_of_Lcd_Clear:
  2741                           
  2742                           	psect	text6
  2743     1DD7                     __ptext6:	
  2744 ;; *************** function _writeEEPROM *****************
  2745 ;; Defined at:
  2746 ;;		line 55 in file "main1.c"
  2747 ;; Parameters:    Size  Location     Type
  2748 ;;  address         2    0[BANK0 ] unsigned int 
  2749 ;;  data            2    2[BANK0 ] unsigned int 
  2750 ;; Auto vars:     Size  Location     Type
  2751 ;;		None
  2752 ;; Return value:  Size  Location     Type
  2753 ;;                  1    wreg      void 
  2754 ;; Registers used:
  2755 ;;		wreg
  2756 ;; Tracked objects:
  2757 ;;		On entry : 0/0
  2758 ;;		On exit  : 0/0
  2759 ;;		Unchanged: 0/0
  2760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2761 ;;      Params:         0       4       0       0       0
  2762 ;;      Locals:         0       0       0       0       0
  2763 ;;      Temps:          0       0       0       0       0
  2764 ;;      Totals:         0       4       0       0       0
  2765 ;;Total ram usage:        4 bytes
  2766 ;; Hardware stack levels used: 1
  2767 ;; Hardware stack levels required when called: 2
  2768 ;; This function calls:
  2769 ;;		Nothing
  2770 ;; This function is called by:
  2771 ;;		_main
  2772 ;; This function uses a non-reentrant model
  2773 ;;
  2774                           
  2775     1DD7                     _writeEEPROM:	
  2776                           ;psect for function _writeEEPROM
  2777                           
  2778     1DD7                     l2876:	
  2779                           ;incstack = 0
  2780                           ; Regs used in _writeEEPROM: [wreg]
  2781                           
  2782                           
  2783                           ;main1.c: 57:     EEADR = address;
  2784     1DD7  1283               	bcf	3,5	;RP0=0, select bank0
  2785     1DD8  1303               	bcf	3,6	;RP1=0, select bank0
  2786     1DD9  0820               	movf	writeEEPROM@address,w
  2787     1DDA  1283               	bcf	3,5	;RP0=0, select bank2
  2788     1DDB  1703               	bsf	3,6	;RP1=1, select bank2
  2789     1DDC  008D               	movwf	13	;volatile
  2790                           
  2791                           ;main1.c: 58:     EEDATA = data;
  2792     1DDD  1283               	bcf	3,5	;RP0=0, select bank0
  2793     1DDE  1303               	bcf	3,6	;RP1=0, select bank0
  2794     1DDF  0822               	movf	writeEEPROM@data,w
  2795     1DE0  1283               	bcf	3,5	;RP0=0, select bank2
  2796     1DE1  1703               	bsf	3,6	;RP1=1, select bank2
  2797     1DE2  008C               	movwf	12	;volatile
  2798     1DE3                     l2878:
  2799                           
  2800                           ;main1.c: 59:     WREN = 1;
  2801     1DE3  1683               	bsf	3,5	;RP0=1, select bank3
  2802     1DE4  1703               	bsf	3,6	;RP1=1, select bank3
  2803     1DE5  150C               	bsf	12,2	;volsfr
  2804     1DE6                     l2880:
  2805                           
  2806                           ;main1.c: 60:     GIE = 0;
  2807     1DE6  138B               	bcf	11,7	;volatile
  2808                           
  2809                           ;main1.c: 61:     EECON2 = 0x55;
  2810     1DE7  3055               	movlw	85
  2811     1DE8  008D               	movwf	13	;volsfr
  2812                           
  2813                           ;main1.c: 62:     EECON2 = 0xAA;
  2814     1DE9  30AA               	movlw	170
  2815     1DEA  008D               	movwf	13	;volsfr
  2816     1DEB                     l2882:
  2817                           
  2818                           ;main1.c: 63:     WR = 1;
  2819     1DEB  148C               	bsf	12,1	;volsfr
  2820     1DEC                     l2884:
  2821                           
  2822                           ;main1.c: 64:     GIE = 1;
  2823     1DEC  178B               	bsf	11,7	;volatile
  2824     1DED                     l2886:
  2825                           
  2826                           ;main1.c: 65:     WREN = 0;
  2827     1DED  110C               	bcf	12,2	;volsfr
  2828     1DEE                     l186:	
  2829                           ;main1.c: 66:     while (WR == 1);
  2830                           
  2831     1DEE  188C               	btfsc	12,1	;volsfr
  2832     1DEF  2DF1               	goto	u3411
  2833     1DF0  2DF2               	goto	u3410
  2834     1DF1                     u3411:
  2835     1DF1  2DEE               	goto	l186
  2836     1DF2                     u3410:
  2837     1DF2                     l189:
  2838     1DF2  0008               	return
  2839     1DF3                     __end_of_writeEEPROM:
  2840                           
  2841                           	psect	text7
  2842     1E13                     __ptext7:	
  2843 ;; *************** function _sprintf *****************
  2844 ;; Defined at:
  2845 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  2846 ;; Parameters:    Size  Location     Type
  2847 ;;  s               1    wreg     PTR unsigned char 
  2848 ;;		 -> main@combinedText_378(20), main@uartMessage_374(8), main@combinedText(20), main@uartMessage(8), 
  2849 ;;		 -> main@rpmString(5), main@adcString1(4), main@lcdText(9), 
  2850 ;;  fmt             2   53[BANK0 ] PTR const unsigned char 
  2851 ;;		 -> STR_25(6), STR_23(6), STR_19(6), STR_17(6), 
  2852 ;;		 -> STR_13(10), STR_11(6), STR_8(11), 
  2853 ;; Auto vars:     Size  Location     Type
  2854 ;;  s               1   65[BANK0 ] PTR unsigned char 
  2855 ;;		 -> main@combinedText_378(20), main@uartMessage_374(8), main@combinedText(20), main@uartMessage(8), 
  2856 ;;		 -> main@rpmString(5), main@adcString1(4), main@lcdText(9), 
  2857 ;;  f              11   66[BANK0 ] struct _IO_FILE
  2858 ;;  ret             2    0        int 
  2859 ;;  ap              1   64[BANK0 ] PTR void [1]
  2860 ;;		 -> ?_sprintf(2), 
  2861 ;; Return value:  Size  Location     Type
  2862 ;;                  2   53[BANK0 ] int 
  2863 ;; Registers used:
  2864 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2865 ;; Tracked objects:
  2866 ;;		On entry : 0/0
  2867 ;;		On exit  : 0/0
  2868 ;;		Unchanged: 0/0
  2869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2870 ;;      Params:         0      10       0       0       0
  2871 ;;      Locals:         0      13       0       0       0
  2872 ;;      Temps:          0       1       0       0       0
  2873 ;;      Totals:         0      24       0       0       0
  2874 ;;Total ram usage:       24 bytes
  2875 ;; Hardware stack levels used: 1
  2876 ;; Hardware stack levels required when called: 9
  2877 ;; This function calls:
  2878 ;;		_vfprintf
  2879 ;; This function is called by:
  2880 ;;		_main
  2881 ;; This function uses a non-reentrant model
  2882 ;;
  2883                           
  2884     1E13                     _sprintf:	
  2885                           ;psect for function _sprintf
  2886                           
  2887                           
  2888                           ;incstack = 0
  2889 ;; hardware stack exceeded
  2890                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2891                           ;sprintf@s stored from wreg
  2892     1E13  1283               	bcf	3,5	;RP0=0, select bank0
  2893     1E14  1303               	bcf	3,6	;RP1=0, select bank0
  2894     1E15  00E1               	movwf	sprintf@s
  2895     1E16                     l2902:
  2896     1E16  3057               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  2897     1E17  00E0               	movwf	sprintf@ap
  2898     1E18  0861               	movf	sprintf@s,w
  2899     1E19  00E2               	movwf	sprintf@f
  2900     1E1A                     l2904:
  2901     1E1A  01E4               	clrf	sprintf@f+2
  2902     1E1B  01E5               	clrf	sprintf@f+3
  2903     1E1C                     l2906:
  2904     1E1C  01EB               	clrf	sprintf@f+9
  2905     1E1D  01EC               	clrf	sprintf@f+10
  2906     1E1E                     l2908:
  2907     1E1E  0855               	movf	sprintf@fmt,w
  2908     1E1F  00CF               	movwf	vfprintf@fmt
  2909     1E20  0856               	movf	sprintf@fmt+1,w
  2910     1E21  00D0               	movwf	vfprintf@fmt+1
  2911     1E22  3060               	movlw	(low (sprintf@ap| 0))& (0+255)
  2912     1E23  00D1               	movwf	vfprintf@ap
  2913     1E24  3062               	movlw	(low (sprintf@f| 0))& (0+255)
  2914     1E25  160A  158A  2634  160A  158A  	fcall	_vfprintf
  2915     1E2A                     l2910:
  2916     1E2A  1283               	bcf	3,5	;RP0=0, select bank0
  2917     1E2B  1303               	bcf	3,6	;RP1=0, select bank0
  2918     1E2C  0864               	movf	sprintf@f+2,w
  2919     1E2D  0761               	addwf	sprintf@s,w
  2920     1E2E  00DF               	movwf	??_sprintf
  2921     1E2F  085F               	movf	??_sprintf,w
  2922     1E30  0084               	movwf	4
  2923     1E31  1383               	bcf	3,7	;select IRP bank0
  2924     1E32  0180               	clrf	0
  2925     1E33                     l834:
  2926     1E33  0008               	return
  2927     1E34                     __end_of_sprintf:
  2928                           
  2929                           	psect	text8
  2930     1E34                     __ptext8:	
  2931 ;; *************** function _vfprintf *****************
  2932 ;; Defined at:
  2933 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2934 ;; Parameters:    Size  Location     Type
  2935 ;;  fp              1    wreg     PTR struct _IO_FILE
  2936 ;;		 -> sprintf@f(11), 
  2937 ;;  fmt             2   47[BANK0 ] PTR const unsigned char 
  2938 ;;		 -> STR_25(6), STR_23(6), STR_19(6), STR_17(6), 
  2939 ;;		 -> STR_13(10), STR_11(6), STR_8(11), 
  2940 ;;  ap              1   49[BANK0 ] PTR PTR void 
  2941 ;;		 -> sprintf@ap(1), 
  2942 ;; Auto vars:     Size  Location     Type
  2943 ;;  fp              1   50[BANK0 ] PTR struct _IO_FILE
  2944 ;;		 -> sprintf@f(11), 
  2945 ;;  cfmt            2   51[BANK0 ] PTR unsigned char 
  2946 ;;		 -> STR_25(6), STR_23(6), STR_19(6), STR_17(6), 
  2947 ;;		 -> STR_13(10), STR_11(6), STR_8(11), 
  2948 ;; Return value:  Size  Location     Type
  2949 ;;                  2   47[BANK0 ] int 
  2950 ;; Registers used:
  2951 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2952 ;; Tracked objects:
  2953 ;;		On entry : 0/0
  2954 ;;		On exit  : 0/0
  2955 ;;		Unchanged: 0/0
  2956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2957 ;;      Params:         0       3       0       0       0
  2958 ;;      Locals:         0       3       0       0       0
  2959 ;;      Temps:          0       0       0       0       0
  2960 ;;      Totals:         0       6       0       0       0
  2961 ;;Total ram usage:        6 bytes
  2962 ;; Hardware stack levels used: 1
  2963 ;; Hardware stack levels required when called: 8
  2964 ;; This function calls:
  2965 ;;		_vfpfcnvrt
  2966 ;; This function is called by:
  2967 ;;		_sprintf
  2968 ;; This function uses a non-reentrant model
  2969 ;;
  2970                           
  2971     1E34                     _vfprintf:	
  2972                           ;psect for function _vfprintf
  2973                           
  2974                           
  2975                           ;incstack = 0
  2976 ;; hardware stack exceeded
  2977                           ; Regs used in _vfprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2978                           ;vfprintf@fp stored from wreg
  2979     1E34  1283               	bcf	3,5	;RP0=0, select bank0
  2980     1E35  1303               	bcf	3,6	;RP1=0, select bank0
  2981     1E36  00D2               	movwf	vfprintf@fp
  2982     1E37                     l2820:
  2983                           
  2984                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  2985     1E37  084F               	movf	vfprintf@fmt,w
  2986     1E38  00D3               	movwf	vfprintf@cfmt
  2987     1E39  0850               	movf	vfprintf@fmt+1,w
  2988     1E3A  00D4               	movwf	vfprintf@cfmt+1
  2989                           
  2990                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2991     1E3B  2E46               	goto	l2824
  2992     1E3C                     l2822:
  2993                           
  2994                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2995     1E3C  3053               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  2996     1E3D  00C1               	movwf	vfpfcnvrt@fmt
  2997     1E3E  0851               	movf	vfprintf@ap,w
  2998     1E3F  00C2               	movwf	vfpfcnvrt@ap
  2999     1E40  0852               	movf	vfprintf@fp,w
  3000     1E41  160A  118A  2555  160A  158A  	fcall	_vfpfcnvrt
  3001     1E46                     l2824:
  3002                           
  3003                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  3004     1E46  1283               	bcf	3,5	;RP0=0, select bank0
  3005     1E47  1303               	bcf	3,6	;RP1=0, select bank0
  3006     1E48  0854               	movf	vfprintf@cfmt+1,w
  3007     1E49  00FF               	movwf	btemp+1
  3008     1E4A  0853               	movf	vfprintf@cfmt,w
  3009     1E4B  0084               	movwf	4
  3010     1E4C  160A  158A  216B  160A  158A  	fcall	stringtab
  3011     1E51  3A00               	xorlw	0
  3012     1E52  1D03               	skipz
  3013     1E53  2E55               	goto	u3361
  3014     1E54  2E56               	goto	u3360
  3015     1E55                     u3361:
  3016     1E55  2E3C               	goto	l2822
  3017     1E56                     u3360:
  3018     1E56                     l2826:
  3019                           
  3020                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  3021     1E56  01CF               	clrf	?_vfprintf
  3022     1E57  01D0               	clrf	?_vfprintf+1
  3023     1E58                     l920:
  3024     1E58  0008               	return
  3025     1E59                     __end_of_vfprintf:
  3026                           
  3027                           	psect	text9
  3028     1555                     __ptext9:	
  3029 ;; *************** function _vfpfcnvrt *****************
  3030 ;; Defined at:
  3031 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  3032 ;; Parameters:    Size  Location     Type
  3033 ;;  fp              1    wreg     PTR struct _IO_FILE
  3034 ;;		 -> sprintf@f(11), 
  3035 ;;  fmt             1   33[BANK0 ] PTR PTR unsigned char 
  3036 ;;		 -> vfprintf@cfmt(2), 
  3037 ;;  ap              1   34[BANK0 ] PTR PTR void 
  3038 ;;		 -> sprintf@ap(1), 
  3039 ;; Auto vars:     Size  Location     Type
  3040 ;;  fp              1   44[BANK0 ] PTR struct _IO_FILE
  3041 ;;		 -> sprintf@f(11), 
  3042 ;;  convarg         4   40[BANK0 ] struct .
  3043 ;;  cp              2   45[BANK0 ] PTR unsigned char 
  3044 ;;		 -> STR_25(6), STR_23(6), STR_19(6), STR_17(6), 
  3045 ;;		 -> STR_13(10), STR_11(6), STR_8(11), 
  3046 ;;  done            1   39[BANK0 ] _Bool 
  3047 ;;  c               1    0        unsigned char 
  3048 ;; Return value:  Size  Location     Type
  3049 ;;                  1    wreg      void 
  3050 ;; Registers used:
  3051 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3052 ;; Tracked objects:
  3053 ;;		On entry : 0/0
  3054 ;;		On exit  : 0/0
  3055 ;;		Unchanged: 0/0
  3056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3057 ;;      Params:         0       2       0       0       0
  3058 ;;      Locals:         0       8       0       0       0
  3059 ;;      Temps:          0       4       0       0       0
  3060 ;;      Totals:         0      14       0       0       0
  3061 ;;Total ram usage:       14 bytes
  3062 ;; Hardware stack levels used: 1
  3063 ;; Hardware stack levels required when called: 7
  3064 ;; This function calls:
  3065 ;;		_dtoa
  3066 ;;		_fputc
  3067 ;;		_read_prec_or_width
  3068 ;;		_utoa
  3069 ;; This function is called by:
  3070 ;;		_vfprintf
  3071 ;; This function uses a non-reentrant model
  3072 ;;
  3073                           
  3074     1555                     _vfpfcnvrt:	
  3075                           ;psect for function _vfpfcnvrt
  3076                           
  3077                           
  3078                           ;incstack = 0
  3079 ;; hardware stack exceeded
  3080                           ; Regs used in _vfpfcnvrt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3081                           ;vfpfcnvrt@fp stored from wreg
  3082     1555  1283               	bcf	3,5	;RP0=0, select bank0
  3083     1556  1303               	bcf	3,6	;RP1=0, select bank0
  3084     1557  00CC               	movwf	vfpfcnvrt@fp
  3085     1558                     l2700:
  3086                           
  3087                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  3088     1558  0841               	movf	vfpfcnvrt@fmt,w
  3089     1559  0084               	movwf	4
  3090     155A  1383               	bcf	3,7	;select IRP bank0
  3091     155B  0800               	movf	0,w
  3092     155C  00C3               	movwf	??_vfpfcnvrt
  3093     155D  0A84               	incf	4,f
  3094     155E  0800               	movf	0,w
  3095     155F  00C4               	movwf	??_vfpfcnvrt+1
  3096     1560  0844               	movf	??_vfpfcnvrt+1,w
  3097     1561  00FF               	movwf	btemp+1
  3098     1562  0843               	movf	??_vfpfcnvrt,w
  3099     1563  0084               	movwf	4
  3100     1564  160A  158A  216B  160A  118A  	fcall	stringtab
  3101     1569  3A25               	xorlw	37
  3102     156A  1D03               	skipz
  3103     156B  2D6D               	goto	u3191
  3104     156C  2D6E               	goto	u3190
  3105     156D                     u3191:
  3106     156D  2E74               	goto	l2758
  3107     156E                     u3190:
  3108     156E                     l2702:
  3109                           
  3110                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  3111     156E  0841               	movf	vfpfcnvrt@fmt,w
  3112     156F  0084               	movwf	4
  3113     1570  3001               	movlw	1
  3114     1571  1383               	bcf	3,7	;select IRP bank0
  3115     1572  0780               	addwf	0,f
  3116     1573  0A84               	incf	4,f
  3117     1574  1803               	skipnc
  3118     1575  0A80               	incf	0,f
  3119     1576                     l2704:
  3120                           
  3121                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  3122     1576  01ED               	clrf	_width
  3123     1577  01EE               	clrf	_width+1
  3124     1578  1003               	clrc
  3125     1579  3000               	movlw	0
  3126     157A  1803               	btfsc	3,0
  3127     157B  3001               	movlw	1
  3128     157C  00EF               	movwf	_flags
  3129     157D                     l2706:
  3130                           
  3131                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  3132     157D  30FF               	movlw	255
  3133     157E  1683               	bsf	3,5	;RP0=1, select bank3
  3134     157F  1703               	bsf	3,6	;RP1=1, select bank3
  3135     1580  00C4               	movwf	_prec^(0+384)
  3136     1581  30FF               	movlw	255
  3137     1582  00C5               	movwf	(_prec^(0+384)+1)
  3138     1583                     l2708:
  3139                           
  3140                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
  3141     1583  1283               	bcf	3,5	;RP0=0, select bank0
  3142     1584  1303               	bcf	3,6	;RP1=0, select bank0
  3143     1585  01C7               	clrf	vfpfcnvrt@done
  3144                           
  3145                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  3146     1586  2DB1               	goto	l2716
  3147     1587                     l900:	
  3148                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1219:            
      +                               case '0' :
  3149                           
  3150                           
  3151                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1220:            
      +                                   flags |= (1 << 1);
  3152     1587  14EF               	bsf	_flags,1
  3153     1588                     l2710:
  3154                           
  3155                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1221:            
      +                                   ++*fmt;
  3156     1588  0841               	movf	vfpfcnvrt@fmt,w
  3157     1589  0084               	movwf	4
  3158     158A  3001               	movlw	1
  3159     158B  1383               	bcf	3,7	;select IRP bank0
  3160     158C  0780               	addwf	0,f
  3161     158D  0A84               	incf	4,f
  3162     158E  1803               	skipnc
  3163     158F  0A80               	incf	0,f
  3164                           
  3165                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1222:            
      +                                   break;
  3166     1590  2DB1               	goto	l2716
  3167     1591                     l902:	
  3168                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1242:            
      +                               default:
  3169                           
  3170                           
  3171                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
  3172     1591  01C7               	clrf	vfpfcnvrt@done
  3173     1592  0AC7               	incf	vfpfcnvrt@done,f
  3174                           
  3175                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
  3176     1593  2DB1               	goto	l2716
  3177     1594                     l2714:
  3178     1594  0841               	movf	vfpfcnvrt@fmt,w
  3179     1595  0084               	movwf	4
  3180     1596  1383               	bcf	3,7	;select IRP bank0
  3181     1597  0800               	movf	0,w
  3182     1598  00C3               	movwf	??_vfpfcnvrt
  3183     1599  0A84               	incf	4,f
  3184     159A  0800               	movf	0,w
  3185     159B  00C4               	movwf	??_vfpfcnvrt+1
  3186     159C  0844               	movf	??_vfpfcnvrt+1,w
  3187     159D  00FF               	movwf	btemp+1
  3188     159E  0843               	movf	??_vfpfcnvrt,w
  3189     159F  0084               	movwf	4
  3190     15A0  160A  158A  216B  160A  118A  	fcall	stringtab
  3191     15A5  00C5               	movwf	??_vfpfcnvrt+2
  3192     15A6  01C6               	clrf	??_vfpfcnvrt+3
  3193                           
  3194                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3195                           ; Switch size 1, requested type "simple"
  3196                           ; Number of cases is 1, Range of values is 0 to 0
  3197                           ; switch strategies available:
  3198                           ; Name         Instructions Cycles
  3199                           ; simple_byte            4     3 (average)
  3200                           ; direct_byte           11     8 (fixed)
  3201                           ; jumptable            260     6 (fixed)
  3202                           ;	Chosen strategy is simple_byte
  3203     15A7  0846               	movf	??_vfpfcnvrt+3,w
  3204     15A8  3A00               	xorlw	0	; case 0
  3205     15A9  1903               	skipnz
  3206     15AA  2DAC               	goto	l3800
  3207     15AB  2D91               	goto	l902
  3208     15AC                     l3800:
  3209                           
  3210                           ; Switch size 1, requested type "simple"
  3211                           ; Number of cases is 1, Range of values is 48 to 48
  3212                           ; switch strategies available:
  3213                           ; Name         Instructions Cycles
  3214                           ; simple_byte            4     3 (average)
  3215                           ; direct_byte           14    11 (fixed)
  3216                           ; jumptable            263     9 (fixed)
  3217                           ;	Chosen strategy is simple_byte
  3218     15AC  0845               	movf	??_vfpfcnvrt+2,w
  3219     15AD  3A30               	xorlw	48	; case 48
  3220     15AE  1903               	skipnz
  3221     15AF  2D87               	goto	l900
  3222     15B0  2D91               	goto	l902
  3223     15B1                     l2716:
  3224                           
  3225                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  3226     15B1  0847               	movf	vfpfcnvrt@done,w
  3227     15B2  1903               	btfsc	3,2
  3228     15B3  2DB5               	goto	u3201
  3229     15B4  2DB6               	goto	u3200
  3230     15B5                     u3201:
  3231     15B5  2D94               	goto	l2714
  3232     15B6                     u3200:
  3233     15B6                     l2718:
  3234                           
  3235                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1256:   width = r
      +                          ead_prec_or_width(fmt, ap);
  3236     15B6  0842               	movf	vfpfcnvrt@ap,w
  3237     15B7  00A6               	movwf	read_prec_or_width@ap
  3238     15B8  0841               	movf	vfpfcnvrt@fmt,w
  3239     15B9  160A  118A  2276  160A  118A  	fcall	_read_prec_or_width
  3240     15BE  1283               	bcf	3,5	;RP0=0, select bank0
  3241     15BF  1303               	bcf	3,6	;RP1=0, select bank0
  3242     15C0  0827               	movf	?_read_prec_or_width+1,w
  3243     15C1  00EE               	movwf	_width+1
  3244     15C2  0826               	movf	?_read_prec_or_width,w
  3245     15C3  00ED               	movwf	_width
  3246     15C4                     l2720:
  3247                           
  3248                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1257:   if (width
      +                           < 0) {
  3249     15C4  1FEE               	btfss	_width+1,7
  3250     15C5  2DC7               	goto	u3211
  3251     15C6  2DC8               	goto	u3210
  3252     15C7                     u3211:
  3253     15C7  2DCE               	goto	l2726
  3254     15C8                     u3210:
  3255     15C8                     l2722:
  3256                           
  3257                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1258:    flags |=
      +                           (1 << 0);
  3258     15C8  146F               	bsf	_flags,0
  3259     15C9                     l2724:
  3260                           
  3261                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1259:    width = 
      +                          -width;
  3262     15C9  09ED               	comf	_width,f
  3263     15CA  09EE               	comf	_width+1,f
  3264     15CB  0AED               	incf	_width,f
  3265     15CC  1903               	skipnz
  3266     15CD  0AEE               	incf	_width+1,f
  3267     15CE                     l2726:
  3268                           
  3269                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  3270     15CE  0841               	movf	vfpfcnvrt@fmt,w
  3271     15CF  0084               	movwf	4
  3272     15D0  1383               	bcf	3,7	;select IRP bank0
  3273     15D1  0800               	movf	0,w
  3274     15D2  00CD               	movwf	vfpfcnvrt@cp
  3275     15D3  0A84               	incf	4,f
  3276     15D4  0800               	movf	0,w
  3277     15D5  0384               	decf	4,f
  3278     15D6  00CE               	movwf	vfpfcnvrt@cp+1
  3279     15D7                     l2728:
  3280                           
  3281                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  3282     15D7  084E               	movf	vfpfcnvrt@cp+1,w
  3283     15D8  00FF               	movwf	btemp+1
  3284     15D9  084D               	movf	vfpfcnvrt@cp,w
  3285     15DA  0084               	movwf	4
  3286     15DB  160A  158A  216B  160A  118A  	fcall	stringtab
  3287     15E0  3A64               	xorlw	100
  3288     15E1  1903               	skipnz
  3289     15E2  2DE4               	goto	u3221
  3290     15E3  2DE5               	goto	u3220
  3291     15E4                     u3221:
  3292     15E4  2DF3               	goto	l2732
  3293     15E5                     u3220:
  3294     15E5                     l2730:
  3295     15E5  084E               	movf	vfpfcnvrt@cp+1,w
  3296     15E6  00FF               	movwf	btemp+1
  3297     15E7  084D               	movf	vfpfcnvrt@cp,w
  3298     15E8  0084               	movwf	4
  3299     15E9  160A  158A  216B  160A  118A  	fcall	stringtab
  3300     15EE  3A69               	xorlw	105
  3301     15EF  1D03               	skipz
  3302     15F0  2DF2               	goto	u3231
  3303     15F1  2DF3               	goto	u3230
  3304     15F2                     u3231:
  3305     15F2  2E1C               	goto	l2740
  3306     15F3                     u3230:
  3307     15F3                     l2732:
  3308                           
  3309                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  3310     15F3  0842               	movf	vfpfcnvrt@ap,w
  3311     15F4  0084               	movwf	4
  3312     15F5  1383               	bcf	3,7	;select IRP bank0
  3313     15F6  0800               	movf	0,w
  3314     15F7  00FF               	movwf	btemp+1
  3315     15F8  3002               	movlw	2
  3316     15F9  0780               	addwf	0,f
  3317     15FA  087F               	movf	btemp+1,w
  3318     15FB  0084               	movwf	4
  3319     15FC  0800               	movf	0,w
  3320     15FD  00C8               	movwf	vfpfcnvrt@convarg
  3321     15FE  0A84               	incf	4,f
  3322     15FF  0800               	movf	0,w
  3323     1600  00C9               	movwf	vfpfcnvrt@convarg+1
  3324     1601                     l2734:
  3325                           
  3326                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  3327     1601  084D               	movf	vfpfcnvrt@cp,w
  3328     1602  3E01               	addlw	1
  3329     1603  00C3               	movwf	??_vfpfcnvrt
  3330     1604  084E               	movf	vfpfcnvrt@cp+1,w
  3331     1605  1803               	skipnc
  3332     1606  3E01               	addlw	1
  3333     1607  3E00               	addlw	0
  3334     1608  00C4               	movwf	??_vfpfcnvrt+1
  3335     1609  0841               	movf	vfpfcnvrt@fmt,w
  3336     160A  0084               	movwf	4
  3337     160B  0843               	movf	??_vfpfcnvrt,w
  3338     160C  0080               	movwf	0
  3339     160D  0844               	movf	??_vfpfcnvrt+1,w
  3340     160E  0A84               	incf	4,f
  3341     160F  0080               	movwf	0
  3342     1610  0384               	decf	4,f
  3343     1611                     l2736:
  3344                           
  3345                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  3346     1611  0849               	movf	vfpfcnvrt@convarg+1,w
  3347     1612  00B7               	movwf	dtoa@d+1
  3348     1613  0848               	movf	vfpfcnvrt@convarg,w
  3349     1614  00B6               	movwf	dtoa@d
  3350     1615  084C               	movf	vfpfcnvrt@fp,w
  3351     1616  160A  118A  2492  160A  118A  	fcall	_dtoa
  3352     161B  2E93               	goto	l908
  3353     161C                     l2740:
  3354     161C  084E               	movf	vfpfcnvrt@cp+1,w
  3355     161D  00FF               	movwf	btemp+1
  3356     161E  084D               	movf	vfpfcnvrt@cp,w
  3357     161F  0084               	movwf	4
  3358     1620  160A  158A  216B  160A  118A  	fcall	stringtab
  3359     1625  3A75               	xorlw	117
  3360     1626  1D03               	skipz
  3361     1627  2E29               	goto	u3241
  3362     1628  2E2A               	goto	u3240
  3363     1629                     u3241:
  3364     1629  2E69               	goto	l2754
  3365     162A                     u3240:
  3366     162A                     l2742:
  3367                           
  3368                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1452:     ) {;C:\
      +                          Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1495:    convarg.uint
      +                           = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned
      +                           int)0));
  3369     162A  0842               	movf	vfpfcnvrt@ap,w
  3370     162B  0084               	movwf	4
  3371     162C  1383               	bcf	3,7	;select IRP bank0
  3372     162D  0800               	movf	0,w
  3373     162E  00FF               	movwf	btemp+1
  3374     162F  3002               	movlw	2
  3375     1630  0780               	addwf	0,f
  3376     1631  087F               	movf	btemp+1,w
  3377     1632  0084               	movwf	4
  3378     1633  0800               	movf	0,w
  3379     1634  00C8               	movwf	vfpfcnvrt@convarg
  3380     1635  0A84               	incf	4,f
  3381     1636  0800               	movf	0,w
  3382     1637  00C9               	movwf	vfpfcnvrt@convarg+1
  3383     1638                     l2744:
  3384                           
  3385                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
  3386     1638  084D               	movf	vfpfcnvrt@cp,w
  3387     1639  3E01               	addlw	1
  3388     163A  00C3               	movwf	??_vfpfcnvrt
  3389     163B  084E               	movf	vfpfcnvrt@cp+1,w
  3390     163C  1803               	skipnc
  3391     163D  3E01               	addlw	1
  3392     163E  3E00               	addlw	0
  3393     163F  00C4               	movwf	??_vfpfcnvrt+1
  3394     1640  0841               	movf	vfpfcnvrt@fmt,w
  3395     1641  0084               	movwf	4
  3396     1642  0843               	movf	??_vfpfcnvrt,w
  3397     1643  0080               	movwf	0
  3398     1644  0844               	movf	??_vfpfcnvrt+1,w
  3399     1645  0A84               	incf	4,f
  3400     1646  0080               	movwf	0
  3401     1647  0384               	decf	4,f
  3402                           
  3403                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
  3404     1648  2E54               	goto	l2752
  3405     1649                     l2746:
  3406                           
  3407                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1542:      return
      +                           (void) utoa(fp, convarg.uint);;	Return value of _vfpfcnvrt is never used
  3408     1649  0849               	movf	vfpfcnvrt@convarg+1,w
  3409     164A  00B7               	movwf	utoa@d+1
  3410     164B  0848               	movf	vfpfcnvrt@convarg,w
  3411     164C  00B6               	movwf	utoa@d
  3412     164D  084C               	movf	vfpfcnvrt@fp,w
  3413     164E  160A  118A  235C  160A  118A  	fcall	_utoa
  3414     1653  2E93               	goto	l908
  3415     1654                     l2752:
  3416     1654  084E               	movf	vfpfcnvrt@cp+1,w
  3417     1655  00FF               	movwf	btemp+1
  3418     1656  084D               	movf	vfpfcnvrt@cp,w
  3419     1657  0084               	movwf	4
  3420     1658  160A  158A  216B  160A  118A  	fcall	stringtab
  3421     165D  00C3               	movwf	??_vfpfcnvrt
  3422     165E  01C4               	clrf	??_vfpfcnvrt+1
  3423                           
  3424                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3425                           ; Switch size 1, requested type "simple"
  3426                           ; Number of cases is 1, Range of values is 0 to 0
  3427                           ; switch strategies available:
  3428                           ; Name         Instructions Cycles
  3429                           ; simple_byte            4     3 (average)
  3430                           ; direct_byte           11     8 (fixed)
  3431                           ; jumptable            260     6 (fixed)
  3432                           ;	Chosen strategy is simple_byte
  3433     165F  0844               	movf	??_vfpfcnvrt+1,w
  3434     1660  3A00               	xorlw	0	; case 0
  3435     1661  1903               	skipnz
  3436     1662  2E64               	goto	l3802
  3437     1663  2E69               	goto	l2754
  3438     1664                     l3802:
  3439                           
  3440                           ; Switch size 1, requested type "simple"
  3441                           ; Number of cases is 1, Range of values is 117 to 117
  3442                           ; switch strategies available:
  3443                           ; Name         Instructions Cycles
  3444                           ; simple_byte            4     3 (average)
  3445                           ; direct_byte           14    11 (fixed)
  3446                           ; jumptable            263     9 (fixed)
  3447                           ;	Chosen strategy is simple_byte
  3448     1664  0843               	movf	??_vfpfcnvrt,w
  3449     1665  3A75               	xorlw	117	; case 117
  3450     1666  1903               	skipnz
  3451     1667  2E49               	goto	l2746
  3452     1668  2E69               	goto	l2754
  3453     1669                     l2754:
  3454                           
  3455                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  3456     1669  1283               	bcf	3,5	;RP0=0, select bank0
  3457     166A  1303               	bcf	3,6	;RP1=0, select bank0
  3458     166B  0841               	movf	vfpfcnvrt@fmt,w
  3459     166C  0084               	movwf	4
  3460     166D  3001               	movlw	1
  3461     166E  1383               	bcf	3,7	;select IRP bank0
  3462     166F  0780               	addwf	0,f
  3463     1670  0A84               	incf	4,f
  3464     1671  1803               	skipnc
  3465     1672  0A80               	incf	0,f
  3466     1673  2E93               	goto	l908
  3467     1674                     l2758:
  3468                           
  3469                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  3470     1674  0841               	movf	vfpfcnvrt@fmt,w
  3471     1675  0084               	movwf	4
  3472     1676  1383               	bcf	3,7	;select IRP bank0
  3473     1677  0800               	movf	0,w
  3474     1678  00C3               	movwf	??_vfpfcnvrt
  3475     1679  0A84               	incf	4,f
  3476     167A  0800               	movf	0,w
  3477     167B  00C4               	movwf	??_vfpfcnvrt+1
  3478     167C  0844               	movf	??_vfpfcnvrt+1,w
  3479     167D  00FF               	movwf	btemp+1
  3480     167E  0843               	movf	??_vfpfcnvrt,w
  3481     167F  0084               	movwf	4
  3482     1680  160A  158A  216B  160A  118A  	fcall	stringtab
  3483     1685  00C5               	movwf	??_vfpfcnvrt+2
  3484     1686  01C6               	clrf	??_vfpfcnvrt+3
  3485     1687  0845               	movf	??_vfpfcnvrt+2,w
  3486     1688  00A0               	movwf	fputc@c
  3487     1689  0846               	movf	??_vfpfcnvrt+3,w
  3488     168A  00A1               	movwf	fputc@c+1
  3489     168B  084C               	movf	vfpfcnvrt@fp,w
  3490     168C  00A2               	movwf	fputc@fp
  3491     168D  160A  118A  208E  160A  118A  	fcall	_fputc
  3492     1692  2E69               	goto	l2754
  3493     1693                     l908:
  3494     1693  0008               	return
  3495     1694                     __end_of_vfpfcnvrt:
  3496                           
  3497                           	psect	text10
  3498     135C                     __ptext10:	
  3499 ;; *************** function _utoa *****************
  3500 ;; Defined at:
  3501 ;;		line 1001 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  3502 ;; Parameters:    Size  Location     Type
  3503 ;;  fp              1    wreg     PTR struct _IO_FILE
  3504 ;;		 -> sprintf@f(11), 
  3505 ;;  d               2   22[BANK0 ] unsigned int 
  3506 ;; Auto vars:     Size  Location     Type
  3507 ;;  fp              1   24[BANK0 ] PTR struct _IO_FILE
  3508 ;;		 -> sprintf@f(11), 
  3509 ;;  i               2   28[BANK0 ] int 
  3510 ;;  w               2   26[BANK0 ] int 
  3511 ;;  p               1   25[BANK0 ] _Bool 
  3512 ;; Return value:  Size  Location     Type
  3513 ;;                  1    wreg      void 
  3514 ;; Registers used:
  3515 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3516 ;; Tracked objects:
  3517 ;;		On entry : 0/0
  3518 ;;		On exit  : 0/0
  3519 ;;		Unchanged: 0/0
  3520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3521 ;;      Params:         0       2       0       0       0
  3522 ;;      Locals:         0       6       0       0       0
  3523 ;;      Temps:          0       0       0       0       0
  3524 ;;      Totals:         0       8       0       0       0
  3525 ;;Total ram usage:        8 bytes
  3526 ;; Hardware stack levels used: 1
  3527 ;; Hardware stack levels required when called: 6
  3528 ;; This function calls:
  3529 ;;		___lwdiv
  3530 ;;		___lwmod
  3531 ;;		_pad
  3532 ;; This function is called by:
  3533 ;;		_vfpfcnvrt
  3534 ;; This function uses a non-reentrant model
  3535 ;;
  3536                           
  3537     135C                     _utoa:	
  3538                           ;psect for function _utoa
  3539                           
  3540                           
  3541                           ;incstack = 0
  3542 ;; hardware stack exceeded
  3543                           ; Regs used in _utoa: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3544                           ;utoa@fp stored from wreg
  3545     135C  1283               	bcf	3,5	;RP0=0, select bank0
  3546     135D  1303               	bcf	3,6	;RP1=0, select bank0
  3547     135E  00B8               	movwf	utoa@fp
  3548     135F                     l2622:
  3549                           
  3550                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1001: static void
      +                           utoa(FILE *fp, vfpf_uint_t d);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1002: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.
      +                          c: 1003:     int i, w;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprn
      +                          t.c: 1007:  _Bool p = 1;
  3551     135F  01B9               	clrf	utoa@p
  3552     1360  0AB9               	incf	utoa@p,f
  3553     1361                     l2624:
  3554                           
  3555                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1019:     w = wid
      +                          th;
  3556     1361  086E               	movf	_width+1,w
  3557     1362  00BB               	movwf	utoa@w+1
  3558     1363  086D               	movf	_width,w
  3559     1364  00BA               	movwf	utoa@w
  3560                           
  3561                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1022:     i = siz
      +                          eof(dbuf) - 1;
  3562     1365  301F               	movlw	31
  3563     1366  00BC               	movwf	utoa@i
  3564     1367  3000               	movlw	0
  3565     1368  00BD               	movwf	utoa@i+1
  3566     1369                     l2626:
  3567                           
  3568                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1023:     dbuf[i]
      +                           = '\0';
  3569     1369  1283               	bcf	3,5	;RP0=0, select bank2
  3570     136A  1703               	bsf	3,6	;RP1=1, select bank2
  3571     136B  01AF               	clrf	(_dbuf^(0+256)+31)
  3572                           
  3573                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1024:     while (
      +                          i && (d != 0
  3574     136C  2BA3               	goto	l2638
  3575     136D                     l2628:
  3576                           
  3577                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1033:     )) {;C:
      +                          \Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1034:         --i;
  3578     136D  30FF               	movlw	255
  3579     136E  07BC               	addwf	utoa@i,f
  3580     136F  1803               	skipnc
  3581     1370  0ABD               	incf	utoa@i+1,f
  3582     1371  30FF               	movlw	255
  3583     1372  07BD               	addwf	utoa@i+1,f
  3584     1373                     l2630:
  3585                           
  3586                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1035:         dbu
      +                          f[i] = '0' + (d % 10);
  3587     1373  083C               	movf	utoa@i,w
  3588     1374  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
  3589     1375  0084               	movwf	4
  3590     1376  300A               	movlw	10
  3591     1377  00A0               	movwf	___lwmod@divisor
  3592     1378  3000               	movlw	0
  3593     1379  00A1               	movwf	___lwmod@divisor+1
  3594     137A  0837               	movf	utoa@d+1,w
  3595     137B  00A3               	movwf	___lwmod@dividend+1
  3596     137C  0836               	movf	utoa@d,w
  3597     137D  00A2               	movwf	___lwmod@dividend
  3598     137E  160A  118A  2006  160A  118A  	fcall	___lwmod
  3599     1383  1283               	bcf	3,5	;RP0=0, select bank0
  3600     1384  1303               	bcf	3,6	;RP1=0, select bank0
  3601     1385  0820               	movf	?___lwmod,w
  3602     1386  3E30               	addlw	48
  3603     1387  1783               	bsf	3,7	;select IRP bank2
  3604     1388  0080               	movwf	0
  3605     1389                     l2632:
  3606                           
  3607                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1039:   p = 0;
  3608     1389  01B9               	clrf	utoa@p
  3609     138A                     l2634:
  3610                           
  3611                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1041:         --w
      +                          ;
  3612     138A  30FF               	movlw	255
  3613     138B  07BA               	addwf	utoa@w,f
  3614     138C  1803               	skipnc
  3615     138D  0ABB               	incf	utoa@w+1,f
  3616     138E  30FF               	movlw	255
  3617     138F  07BB               	addwf	utoa@w+1,f
  3618     1390                     l2636:
  3619                           
  3620                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1042:         d =
      +                           d / 10;
  3621     1390  300A               	movlw	10
  3622     1391  00A0               	movwf	___lwdiv@divisor
  3623     1392  3000               	movlw	0
  3624     1393  00A1               	movwf	___lwdiv@divisor+1
  3625     1394  0837               	movf	utoa@d+1,w
  3626     1395  00A3               	movwf	___lwdiv@dividend+1
  3627     1396  0836               	movf	utoa@d,w
  3628     1397  00A2               	movwf	___lwdiv@dividend
  3629     1398  160A  158A  2728  160A  118A  	fcall	___lwdiv
  3630     139D  1283               	bcf	3,5	;RP0=0, select bank0
  3631     139E  1303               	bcf	3,6	;RP1=0, select bank0
  3632     139F  0821               	movf	?___lwdiv+1,w
  3633     13A0  00B7               	movwf	utoa@d+1
  3634     13A1  0820               	movf	?___lwdiv,w
  3635     13A2  00B6               	movwf	utoa@d
  3636     13A3                     l2638:
  3637                           
  3638                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1024:     while (
      +                          i && (d != 0
  3639     13A3  1303               	bcf	3,6	;RP1=0, select bank0
  3640     13A4  083C               	movf	utoa@i,w
  3641     13A5  043D               	iorwf	utoa@i+1,w
  3642     13A6  1903               	btfsc	3,2
  3643     13A7  2BA9               	goto	u3111
  3644     13A8  2BAA               	goto	u3110
  3645     13A9                     u3111:
  3646     13A9  2BC8               	goto	l2648
  3647     13AA                     u3110:
  3648     13AA                     l2640:
  3649     13AA  0836               	movf	utoa@d,w
  3650     13AB  0437               	iorwf	utoa@d+1,w
  3651     13AC  1D03               	btfss	3,2
  3652     13AD  2BAF               	goto	u3121
  3653     13AE  2BB0               	goto	u3120
  3654     13AF                     u3121:
  3655     13AF  2B6D               	goto	l2628
  3656     13B0                     u3120:
  3657     13B0                     l2642:
  3658     13B0  0839               	movf	utoa@p,w
  3659     13B1  1D03               	btfss	3,2
  3660     13B2  2BB4               	goto	u3131
  3661     13B3  2BB5               	goto	u3130
  3662     13B4                     u3131:
  3663     13B4  2B6D               	goto	l2628
  3664     13B5                     u3130:
  3665     13B5                     l2644:
  3666     13B5  083B               	movf	utoa@w+1,w
  3667     13B6  3A80               	xorlw	128
  3668     13B7  00FF               	movwf	btemp+1
  3669     13B8  3080               	movlw	128
  3670     13B9  027F               	subwf	btemp+1,w
  3671     13BA  1D03               	skipz
  3672     13BB  2BBE               	goto	u3145
  3673     13BC  3001               	movlw	1
  3674     13BD  023A               	subwf	utoa@w,w
  3675     13BE                     u3145:
  3676     13BE  1C03               	skipc
  3677     13BF  2BC1               	goto	u3141
  3678     13C0  2BC2               	goto	u3140
  3679     13C1                     u3141:
  3680     13C1  2BC8               	goto	l2648
  3681     13C2                     u3140:
  3682     13C2                     l2646:
  3683     13C2  1283               	bcf	3,5	;RP0=0, select bank0
  3684     13C3  1303               	bcf	3,6	;RP1=0, select bank0
  3685     13C4  18EF               	btfsc	_flags,1
  3686     13C5  2BC7               	goto	u3151
  3687     13C6  2BC8               	goto	u3150
  3688     13C7                     u3151:
  3689     13C7  2B6D               	goto	l2628
  3690     13C8                     u3150:
  3691     13C8                     l2648:
  3692                           
  3693                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1046:     return 
      +                          (void) pad(fp, &dbuf[i], w);
  3694     13C8  1283               	bcf	3,5	;RP0=0, select bank0
  3695     13C9  1303               	bcf	3,6	;RP1=0, select bank0
  3696     13CA  083C               	movf	utoa@i,w
  3697     13CB  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
  3698     13CC  00AF               	movwf	pad@buf
  3699     13CD  083B               	movf	utoa@w+1,w
  3700     13CE  00B1               	movwf	pad@p+1
  3701     13CF  083A               	movf	utoa@w,w
  3702     13D0  00B0               	movwf	pad@p
  3703     13D1  0838               	movf	utoa@fp,w
  3704     13D2  160A  158A  27B4  160A  118A  	fcall	_pad
  3705     13D7                     l885:
  3706     13D7  0008               	return
  3707     13D8                     __end_of_utoa:
  3708                           
  3709                           	psect	text11
  3710     1006                     __ptext11:	
  3711 ;; *************** function ___lwmod *****************
  3712 ;; Defined at:
  3713 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwmod.c"
  3714 ;; Parameters:    Size  Location     Type
  3715 ;;  divisor         2    0[BANK0 ] unsigned int 
  3716 ;;  dividend        2    2[BANK0 ] unsigned int 
  3717 ;; Auto vars:     Size  Location     Type
  3718 ;;  counter         1    4[BANK0 ] unsigned char 
  3719 ;; Return value:  Size  Location     Type
  3720 ;;                  2    0[BANK0 ] unsigned int 
  3721 ;; Registers used:
  3722 ;;		wreg, status,2, status,0, btemp+1
  3723 ;; Tracked objects:
  3724 ;;		On entry : 0/0
  3725 ;;		On exit  : 0/0
  3726 ;;		Unchanged: 0/0
  3727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3728 ;;      Params:         0       4       0       0       0
  3729 ;;      Locals:         0       1       0       0       0
  3730 ;;      Temps:          0       0       0       0       0
  3731 ;;      Totals:         0       5       0       0       0
  3732 ;;Total ram usage:        5 bytes
  3733 ;; Hardware stack levels used: 1
  3734 ;; Hardware stack levels required when called: 2
  3735 ;; This function calls:
  3736 ;;		Nothing
  3737 ;; This function is called by:
  3738 ;;		_utoa
  3739 ;; This function uses a non-reentrant model
  3740 ;;
  3741                           
  3742     1006                     ___lwmod:	
  3743                           ;psect for function ___lwmod
  3744                           
  3745     1006                     l2520:	
  3746                           ;incstack = 0
  3747                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
  3748                           
  3749     1006  1283               	bcf	3,5	;RP0=0, select bank0
  3750     1007  1303               	bcf	3,6	;RP1=0, select bank0
  3751     1008  0820               	movf	___lwmod@divisor,w
  3752     1009  0421               	iorwf	___lwmod@divisor+1,w
  3753     100A  1903               	btfsc	3,2
  3754     100B  280D               	goto	u2861
  3755     100C  280E               	goto	u2860
  3756     100D                     u2861:
  3757     100D  283D               	goto	l2538
  3758     100E                     u2860:
  3759     100E                     l2522:
  3760     100E  01A4               	clrf	___lwmod@counter
  3761     100F  0AA4               	incf	___lwmod@counter,f
  3762     1010  281C               	goto	l2528
  3763     1011                     l2524:
  3764     1011  3001               	movlw	1
  3765     1012                     u2875:
  3766     1012  1003               	clrc
  3767     1013  0DA0               	rlf	___lwmod@divisor,f
  3768     1014  0DA1               	rlf	___lwmod@divisor+1,f
  3769     1015  3EFF               	addlw	-1
  3770     1016  1D03               	skipz
  3771     1017  2812               	goto	u2875
  3772     1018                     l2526:
  3773     1018  3001               	movlw	1
  3774     1019  00FF               	movwf	btemp+1
  3775     101A  087F               	movf	btemp+1,w
  3776     101B  07A4               	addwf	___lwmod@counter,f
  3777     101C                     l2528:
  3778     101C  1FA1               	btfss	___lwmod@divisor+1,7
  3779     101D  281F               	goto	u2881
  3780     101E  2820               	goto	u2880
  3781     101F                     u2881:
  3782     101F  2811               	goto	l2524
  3783     1020                     u2880:
  3784     1020                     l2530:
  3785     1020  0821               	movf	___lwmod@divisor+1,w
  3786     1021  0223               	subwf	___lwmod@dividend+1,w
  3787     1022  1D03               	skipz
  3788     1023  2826               	goto	u2895
  3789     1024  0820               	movf	___lwmod@divisor,w
  3790     1025  0222               	subwf	___lwmod@dividend,w
  3791     1026                     u2895:
  3792     1026  1C03               	skipc
  3793     1027  2829               	goto	u2891
  3794     1028  282A               	goto	u2890
  3795     1029                     u2891:
  3796     1029  2830               	goto	l2534
  3797     102A                     u2890:
  3798     102A                     l2532:
  3799     102A  0820               	movf	___lwmod@divisor,w
  3800     102B  02A2               	subwf	___lwmod@dividend,f
  3801     102C  0821               	movf	___lwmod@divisor+1,w
  3802     102D  1C03               	skipc
  3803     102E  03A3               	decf	___lwmod@dividend+1,f
  3804     102F  02A3               	subwf	___lwmod@dividend+1,f
  3805     1030                     l2534:
  3806     1030  3001               	movlw	1
  3807     1031                     u2905:
  3808     1031  1003               	clrc
  3809     1032  0CA1               	rrf	___lwmod@divisor+1,f
  3810     1033  0CA0               	rrf	___lwmod@divisor,f
  3811     1034  3EFF               	addlw	-1
  3812     1035  1D03               	skipz
  3813     1036  2831               	goto	u2905
  3814     1037                     l2536:
  3815     1037  3001               	movlw	1
  3816     1038  02A4               	subwf	___lwmod@counter,f
  3817     1039  1D03               	btfss	3,2
  3818     103A  283C               	goto	u2911
  3819     103B  283D               	goto	u2910
  3820     103C                     u2911:
  3821     103C  2820               	goto	l2530
  3822     103D                     u2910:
  3823     103D                     l2538:
  3824     103D  0823               	movf	___lwmod@dividend+1,w
  3825     103E  00A1               	movwf	?___lwmod+1
  3826     103F  0822               	movf	___lwmod@dividend,w
  3827     1040  00A0               	movwf	?___lwmod
  3828     1041                     l661:
  3829     1041  0008               	return
  3830     1042                     __end_of___lwmod:
  3831                           
  3832                           	psect	text12
  3833     1F28                     __ptext12:	
  3834 ;; *************** function ___lwdiv *****************
  3835 ;; Defined at:
  3836 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  3837 ;; Parameters:    Size  Location     Type
  3838 ;;  divisor         2    0[BANK0 ] unsigned int 
  3839 ;;  dividend        2    2[BANK0 ] unsigned int 
  3840 ;; Auto vars:     Size  Location     Type
  3841 ;;  quotient        2    4[BANK0 ] unsigned int 
  3842 ;;  counter         1    6[BANK0 ] unsigned char 
  3843 ;; Return value:  Size  Location     Type
  3844 ;;                  2    0[BANK0 ] unsigned int 
  3845 ;; Registers used:
  3846 ;;		wreg, status,2, status,0, btemp+1
  3847 ;; Tracked objects:
  3848 ;;		On entry : 0/0
  3849 ;;		On exit  : 0/0
  3850 ;;		Unchanged: 0/0
  3851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3852 ;;      Params:         0       4       0       0       0
  3853 ;;      Locals:         0       3       0       0       0
  3854 ;;      Temps:          0       0       0       0       0
  3855 ;;      Totals:         0       7       0       0       0
  3856 ;;Total ram usage:        7 bytes
  3857 ;; Hardware stack levels used: 1
  3858 ;; Hardware stack levels required when called: 2
  3859 ;; This function calls:
  3860 ;;		Nothing
  3861 ;; This function is called by:
  3862 ;;		_utoa
  3863 ;; This function uses a non-reentrant model
  3864 ;;
  3865                           
  3866     1F28                     ___lwdiv:	
  3867                           ;psect for function ___lwdiv
  3868                           
  3869     1F28                     l2494:	
  3870                           ;incstack = 0
  3871                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  3872                           
  3873     1F28  1283               	bcf	3,5	;RP0=0, select bank0
  3874     1F29  1303               	bcf	3,6	;RP1=0, select bank0
  3875     1F2A  01A4               	clrf	___lwdiv@quotient
  3876     1F2B  01A5               	clrf	___lwdiv@quotient+1
  3877     1F2C                     l2496:
  3878     1F2C  0820               	movf	___lwdiv@divisor,w
  3879     1F2D  0421               	iorwf	___lwdiv@divisor+1,w
  3880     1F2E  1903               	btfsc	3,2
  3881     1F2F  2F31               	goto	u2791
  3882     1F30  2F32               	goto	u2790
  3883     1F31                     u2791:
  3884     1F31  2F69               	goto	l2516
  3885     1F32                     u2790:
  3886     1F32                     l2498:
  3887     1F32  01A6               	clrf	___lwdiv@counter
  3888     1F33  0AA6               	incf	___lwdiv@counter,f
  3889     1F34  2F40               	goto	l2504
  3890     1F35                     l2500:
  3891     1F35  3001               	movlw	1
  3892     1F36                     u2805:
  3893     1F36  1003               	clrc
  3894     1F37  0DA0               	rlf	___lwdiv@divisor,f
  3895     1F38  0DA1               	rlf	___lwdiv@divisor+1,f
  3896     1F39  3EFF               	addlw	-1
  3897     1F3A  1D03               	skipz
  3898     1F3B  2F36               	goto	u2805
  3899     1F3C                     l2502:
  3900     1F3C  3001               	movlw	1
  3901     1F3D  00FF               	movwf	btemp+1
  3902     1F3E  087F               	movf	btemp+1,w
  3903     1F3F  07A6               	addwf	___lwdiv@counter,f
  3904     1F40                     l2504:
  3905     1F40  1FA1               	btfss	___lwdiv@divisor+1,7
  3906     1F41  2F43               	goto	u2811
  3907     1F42  2F44               	goto	u2810
  3908     1F43                     u2811:
  3909     1F43  2F35               	goto	l2500
  3910     1F44                     u2810:
  3911     1F44                     l2506:
  3912     1F44  3001               	movlw	1
  3913     1F45                     u2825:
  3914     1F45  1003               	clrc
  3915     1F46  0DA4               	rlf	___lwdiv@quotient,f
  3916     1F47  0DA5               	rlf	___lwdiv@quotient+1,f
  3917     1F48  3EFF               	addlw	-1
  3918     1F49  1D03               	skipz
  3919     1F4A  2F45               	goto	u2825
  3920     1F4B  0821               	movf	___lwdiv@divisor+1,w
  3921     1F4C  0223               	subwf	___lwdiv@dividend+1,w
  3922     1F4D  1D03               	skipz
  3923     1F4E  2F51               	goto	u2835
  3924     1F4F  0820               	movf	___lwdiv@divisor,w
  3925     1F50  0222               	subwf	___lwdiv@dividend,w
  3926     1F51                     u2835:
  3927     1F51  1C03               	skipc
  3928     1F52  2F54               	goto	u2831
  3929     1F53  2F55               	goto	u2830
  3930     1F54                     u2831:
  3931     1F54  2F5C               	goto	l2512
  3932     1F55                     u2830:
  3933     1F55                     l2508:
  3934     1F55  0820               	movf	___lwdiv@divisor,w
  3935     1F56  02A2               	subwf	___lwdiv@dividend,f
  3936     1F57  0821               	movf	___lwdiv@divisor+1,w
  3937     1F58  1C03               	skipc
  3938     1F59  03A3               	decf	___lwdiv@dividend+1,f
  3939     1F5A  02A3               	subwf	___lwdiv@dividend+1,f
  3940     1F5B                     l2510:
  3941     1F5B  1424               	bsf	___lwdiv@quotient,0
  3942     1F5C                     l2512:
  3943     1F5C  3001               	movlw	1
  3944     1F5D                     u2845:
  3945     1F5D  1003               	clrc
  3946     1F5E  0CA1               	rrf	___lwdiv@divisor+1,f
  3947     1F5F  0CA0               	rrf	___lwdiv@divisor,f
  3948     1F60  3EFF               	addlw	-1
  3949     1F61  1D03               	skipz
  3950     1F62  2F5D               	goto	u2845
  3951     1F63                     l2514:
  3952     1F63  3001               	movlw	1
  3953     1F64  02A6               	subwf	___lwdiv@counter,f
  3954     1F65  1D03               	btfss	3,2
  3955     1F66  2F68               	goto	u2851
  3956     1F67  2F69               	goto	u2850
  3957     1F68                     u2851:
  3958     1F68  2F44               	goto	l2506
  3959     1F69                     u2850:
  3960     1F69                     l2516:
  3961     1F69  0825               	movf	___lwdiv@quotient+1,w
  3962     1F6A  00A1               	movwf	?___lwdiv+1
  3963     1F6B  0824               	movf	___lwdiv@quotient,w
  3964     1F6C  00A0               	movwf	?___lwdiv
  3965     1F6D                     l651:
  3966     1F6D  0008               	return
  3967     1F6E                     __end_of___lwdiv:
  3968                           
  3969                           	psect	text13
  3970     1276                     __ptext13:	
  3971 ;; *************** function _read_prec_or_width *****************
  3972 ;; Defined at:
  3973 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  3974 ;; Parameters:    Size  Location     Type
  3975 ;;  fmt             1    wreg     PTR PTR const unsigned c
  3976 ;;		 -> vfprintf@cfmt(2), 
  3977 ;;  ap              1    6[BANK0 ] PTR PTR void [1]
  3978 ;;		 -> sprintf@ap(1), 
  3979 ;; Auto vars:     Size  Location     Type
  3980 ;;  fmt             1   13[BANK0 ] PTR PTR const unsigned c
  3981 ;;		 -> vfprintf@cfmt(2), 
  3982 ;;  c               1   10[BANK0 ] unsigned char 
  3983 ;;  n               2   11[BANK0 ] int 
  3984 ;; Return value:  Size  Location     Type
  3985 ;;                  2    6[BANK0 ] int 
  3986 ;; Registers used:
  3987 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3988 ;; Tracked objects:
  3989 ;;		On entry : 0/0
  3990 ;;		On exit  : 0/0
  3991 ;;		Unchanged: 0/0
  3992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3993 ;;      Params:         0       2       0       0       0
  3994 ;;      Locals:         0       4       0       0       0
  3995 ;;      Temps:          0       2       0       0       0
  3996 ;;      Totals:         0       8       0       0       0
  3997 ;;Total ram usage:        8 bytes
  3998 ;; Hardware stack levels used: 1
  3999 ;; Hardware stack levels required when called: 3
  4000 ;; This function calls:
  4001 ;;		___wmul
  4002 ;; This function is called by:
  4003 ;;		_vfpfcnvrt
  4004 ;; This function uses a non-reentrant model
  4005 ;;
  4006                           
  4007     1276                     _read_prec_or_width:	
  4008                           ;psect for function _read_prec_or_width
  4009                           
  4010                           
  4011                           ;incstack = 0
  4012                           ; Regs used in _read_prec_or_width: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4013                           ;read_prec_or_width@fmt stored from wreg
  4014     1276  1283               	bcf	3,5	;RP0=0, select bank0
  4015     1277  1303               	bcf	3,6	;RP1=0, select bank0
  4016     1278  00AD               	movwf	read_prec_or_width@fmt
  4017     1279                     l2652:
  4018                           
  4019                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  4020     1279  01AB               	clrf	read_prec_or_width@n
  4021     127A  01AC               	clrf	read_prec_or_width@n+1
  4022     127B                     l2654:
  4023                           
  4024                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  4025     127B  082D               	movf	read_prec_or_width@fmt,w
  4026     127C  0084               	movwf	4
  4027     127D  1383               	bcf	3,7	;select IRP bank0
  4028     127E  0800               	movf	0,w
  4029     127F  00A8               	movwf	??_read_prec_or_width
  4030     1280  0A84               	incf	4,f
  4031     1281  0800               	movf	0,w
  4032     1282  00A9               	movwf	??_read_prec_or_width+1
  4033     1283  0829               	movf	??_read_prec_or_width+1,w
  4034     1284  00FF               	movwf	btemp+1
  4035     1285  0828               	movf	??_read_prec_or_width,w
  4036     1286  0084               	movwf	4
  4037     1287  160A  158A  216B  160A  118A  	fcall	stringtab
  4038     128C  3A2A               	xorlw	42
  4039     128D  1D03               	skipz
  4040     128E  2A90               	goto	u3161
  4041     128F  2A91               	goto	u3160
  4042     1290                     u3161:
  4043     1290  2AC6               	goto	l2664
  4044     1291                     u3160:
  4045     1291                     l2656:
  4046                           
  4047                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  4048     1291  082D               	movf	read_prec_or_width@fmt,w
  4049     1292  0084               	movwf	4
  4050     1293  3001               	movlw	1
  4051     1294  1383               	bcf	3,7	;select IRP bank0
  4052     1295  0780               	addwf	0,f
  4053     1296  0A84               	incf	4,f
  4054     1297  1803               	skipnc
  4055     1298  0A80               	incf	0,f
  4056     1299                     l2658:
  4057                           
  4058                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  4059     1299  0826               	movf	read_prec_or_width@ap,w
  4060     129A  0084               	movwf	4
  4061     129B  0800               	movf	0,w
  4062     129C  00FF               	movwf	btemp+1
  4063     129D  3002               	movlw	2
  4064     129E  0780               	addwf	0,f
  4065     129F  087F               	movf	btemp+1,w
  4066     12A0  0084               	movwf	4
  4067     12A1  0800               	movf	0,w
  4068     12A2  00AB               	movwf	read_prec_or_width@n
  4069     12A3  0A84               	incf	4,f
  4070     12A4  0800               	movf	0,w
  4071     12A5  00AC               	movwf	read_prec_or_width@n+1
  4072                           
  4073                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  4074     12A6  2ADF               	goto	l2666
  4075     12A7                     l2660:
  4076                           
  4077                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  4078     12A7  082C               	movf	read_prec_or_width@n+1,w
  4079     12A8  00A1               	movwf	___wmul@multiplier+1
  4080     12A9  082B               	movf	read_prec_or_width@n,w
  4081     12AA  00A0               	movwf	___wmul@multiplier
  4082     12AB  300A               	movlw	10
  4083     12AC  00A2               	movwf	___wmul@multiplicand
  4084     12AD  3000               	movlw	0
  4085     12AE  00A3               	movwf	___wmul@multiplicand+1
  4086     12AF  160A  158A  2659  160A  118A  	fcall	___wmul
  4087     12B4  1283               	bcf	3,5	;RP0=0, select bank0
  4088     12B5  1303               	bcf	3,6	;RP1=0, select bank0
  4089     12B6  082A               	movf	read_prec_or_width@c,w
  4090     12B7  0720               	addwf	?___wmul,w
  4091     12B8  00AB               	movwf	read_prec_or_width@n
  4092     12B9  3000               	movlw	0
  4093     12BA  1803               	skipnc
  4094     12BB  3001               	movlw	1
  4095     12BC  0721               	addwf	?___wmul+1,w
  4096     12BD  00AC               	movwf	read_prec_or_width@n+1
  4097     12BE                     l2662:
  4098                           
  4099                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  4100     12BE  082D               	movf	read_prec_or_width@fmt,w
  4101     12BF  0084               	movwf	4
  4102     12C0  3001               	movlw	1
  4103     12C1  1383               	bcf	3,7	;select IRP bank0
  4104     12C2  0780               	addwf	0,f
  4105     12C3  0A84               	incf	4,f
  4106     12C4  1803               	skipnc
  4107     12C5  0A80               	incf	0,f
  4108     12C6                     l2664:
  4109                           
  4110                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  4111     12C6  082D               	movf	read_prec_or_width@fmt,w
  4112     12C7  0084               	movwf	4
  4113     12C8  1383               	bcf	3,7	;select IRP bank0
  4114     12C9  0800               	movf	0,w
  4115     12CA  00A8               	movwf	??_read_prec_or_width
  4116     12CB  0A84               	incf	4,f
  4117     12CC  0800               	movf	0,w
  4118     12CD  00A9               	movwf	??_read_prec_or_width+1
  4119     12CE  0829               	movf	??_read_prec_or_width+1,w
  4120     12CF  00FF               	movwf	btemp+1
  4121     12D0  0828               	movf	??_read_prec_or_width,w
  4122     12D1  0084               	movwf	4
  4123     12D2  160A  158A  216B  160A  118A  	fcall	stringtab
  4124     12D7  3ED0               	addlw	208
  4125     12D8  00AA               	movwf	read_prec_or_width@c
  4126     12D9  300A               	movlw	10
  4127     12DA  022A               	subwf	read_prec_or_width@c,w
  4128     12DB  1C03               	skipc
  4129     12DC  2ADE               	goto	u3171
  4130     12DD  2ADF               	goto	u3170
  4131     12DE                     u3171:
  4132     12DE  2AA7               	goto	l2660
  4133     12DF                     u3170:
  4134     12DF                     l2666:
  4135                           
  4136                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  4137     12DF  082C               	movf	read_prec_or_width@n+1,w
  4138     12E0  00A7               	movwf	?_read_prec_or_width+1
  4139     12E1  082B               	movf	read_prec_or_width@n,w
  4140     12E2  00A6               	movwf	?_read_prec_or_width
  4141     12E3                     l893:
  4142     12E3  0008               	return
  4143     12E4                     __end_of_read_prec_or_width:
  4144                           
  4145                           	psect	text14
  4146     1E59                     __ptext14:	
  4147 ;; *************** function ___wmul *****************
  4148 ;; Defined at:
  4149 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  4150 ;; Parameters:    Size  Location     Type
  4151 ;;  multiplier      2    0[BANK0 ] unsigned int 
  4152 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  4153 ;; Auto vars:     Size  Location     Type
  4154 ;;  product         2    4[BANK0 ] unsigned int 
  4155 ;; Return value:  Size  Location     Type
  4156 ;;                  2    0[BANK0 ] unsigned int 
  4157 ;; Registers used:
  4158 ;;		wreg, status,2, status,0
  4159 ;; Tracked objects:
  4160 ;;		On entry : 0/0
  4161 ;;		On exit  : 0/0
  4162 ;;		Unchanged: 0/0
  4163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4164 ;;      Params:         0       4       0       0       0
  4165 ;;      Locals:         0       2       0       0       0
  4166 ;;      Temps:          0       0       0       0       0
  4167 ;;      Totals:         0       6       0       0       0
  4168 ;;Total ram usage:        6 bytes
  4169 ;; Hardware stack levels used: 1
  4170 ;; Hardware stack levels required when called: 2
  4171 ;; This function calls:
  4172 ;;		Nothing
  4173 ;; This function is called by:
  4174 ;;		_main
  4175 ;;		_read_prec_or_width
  4176 ;; This function uses a non-reentrant model
  4177 ;;
  4178                           
  4179     1E59                     ___wmul:	
  4180                           ;psect for function ___wmul
  4181                           
  4182     1E59                     l2398:	
  4183                           ;incstack = 0
  4184                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4185                           
  4186     1E59  1283               	bcf	3,5	;RP0=0, select bank0
  4187     1E5A  1303               	bcf	3,6	;RP1=0, select bank0
  4188     1E5B  01A4               	clrf	___wmul@product
  4189     1E5C  01A5               	clrf	___wmul@product+1
  4190     1E5D                     l2400:
  4191     1E5D  1C20               	btfss	___wmul@multiplier,0
  4192     1E5E  2E60               	goto	u2561
  4193     1E5F  2E61               	goto	u2560
  4194     1E60                     u2561:
  4195     1E60  2E67               	goto	l371
  4196     1E61                     u2560:
  4197     1E61                     l2402:
  4198     1E61  0822               	movf	___wmul@multiplicand,w
  4199     1E62  07A4               	addwf	___wmul@product,f
  4200     1E63  1803               	skipnc
  4201     1E64  0AA5               	incf	___wmul@product+1,f
  4202     1E65  0823               	movf	___wmul@multiplicand+1,w
  4203     1E66  07A5               	addwf	___wmul@product+1,f
  4204     1E67                     l371:
  4205     1E67  3001               	movlw	1
  4206     1E68                     u2575:
  4207     1E68  1003               	clrc
  4208     1E69  0DA2               	rlf	___wmul@multiplicand,f
  4209     1E6A  0DA3               	rlf	___wmul@multiplicand+1,f
  4210     1E6B  3EFF               	addlw	-1
  4211     1E6C  1D03               	skipz
  4212     1E6D  2E68               	goto	u2575
  4213     1E6E                     l2404:
  4214     1E6E  3001               	movlw	1
  4215     1E6F                     u2585:
  4216     1E6F  1003               	clrc
  4217     1E70  0CA1               	rrf	___wmul@multiplier+1,f
  4218     1E71  0CA0               	rrf	___wmul@multiplier,f
  4219     1E72  3EFF               	addlw	-1
  4220     1E73  1D03               	skipz
  4221     1E74  2E6F               	goto	u2585
  4222     1E75                     l2406:
  4223     1E75  0820               	movf	___wmul@multiplier,w
  4224     1E76  0421               	iorwf	___wmul@multiplier+1,w
  4225     1E77  1D03               	btfss	3,2
  4226     1E78  2E7A               	goto	u2591
  4227     1E79  2E7B               	goto	u2590
  4228     1E7A                     u2591:
  4229     1E7A  2E5D               	goto	l2400
  4230     1E7B                     u2590:
  4231     1E7B                     l2408:
  4232     1E7B  0825               	movf	___wmul@product+1,w
  4233     1E7C  00A1               	movwf	?___wmul+1
  4234     1E7D  0824               	movf	___wmul@product,w
  4235     1E7E  00A0               	movwf	?___wmul
  4236     1E7F                     l373:
  4237     1E7F  0008               	return
  4238     1E80                     __end_of___wmul:
  4239                           
  4240                           	psect	text15
  4241     1492                     __ptext15:	
  4242 ;; *************** function _dtoa *****************
  4243 ;; Defined at:
  4244 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  4245 ;; Parameters:    Size  Location     Type
  4246 ;;  fp              1    wreg     PTR struct _IO_FILE
  4247 ;;		 -> sprintf@f(11), 
  4248 ;;  d               2   22[BANK0 ] int 
  4249 ;; Auto vars:     Size  Location     Type
  4250 ;;  fp              1   26[BANK0 ] PTR struct _IO_FILE
  4251 ;;		 -> sprintf@f(11), 
  4252 ;;  i               2   31[BANK0 ] int 
  4253 ;;  w               2   28[BANK0 ] int 
  4254 ;;  s               1   30[BANK0 ] unsigned char 
  4255 ;;  p               1   27[BANK0 ] _Bool 
  4256 ;; Return value:  Size  Location     Type
  4257 ;;                  1    wreg      void 
  4258 ;; Registers used:
  4259 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4260 ;; Tracked objects:
  4261 ;;		On entry : 0/0
  4262 ;;		On exit  : 0/0
  4263 ;;		Unchanged: 0/0
  4264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4265 ;;      Params:         0       2       0       0       0
  4266 ;;      Locals:         0       9       0       0       0
  4267 ;;      Temps:          0       0       0       0       0
  4268 ;;      Totals:         0      11       0       0       0
  4269 ;;Total ram usage:       11 bytes
  4270 ;; Hardware stack levels used: 1
  4271 ;; Hardware stack levels required when called: 6
  4272 ;; This function calls:
  4273 ;;		___awdiv
  4274 ;;		___awmod
  4275 ;;		_abs
  4276 ;;		_pad
  4277 ;; This function is called by:
  4278 ;;		_vfpfcnvrt
  4279 ;; This function uses a non-reentrant model
  4280 ;;
  4281                           
  4282     1492                     _dtoa:	
  4283                           ;psect for function _dtoa
  4284                           
  4285                           
  4286                           ;incstack = 0
  4287 ;; hardware stack exceeded
  4288                           ; Regs used in _dtoa: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4289                           ;dtoa@fp stored from wreg
  4290     1492  1283               	bcf	3,5	;RP0=0, select bank0
  4291     1493  1303               	bcf	3,6	;RP1=0, select bank0
  4292     1494  00BA               	movwf	dtoa@fp
  4293     1495                     l2576:
  4294                           
  4295                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 513: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\commo
      +                          n\doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c:
      +                           515:  char s;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 516
      +                          :     int i, w;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 52
      +                          0:  _Bool p = 1;
  4296     1495  01BB               	clrf	dtoa@p
  4297     1496  0ABB               	incf	dtoa@p,f
  4298     1497                     l2578:
  4299                           
  4300                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 524:     s = d < 
      +                          0 ? 1 : 0;
  4301     1497  1BB7               	btfsc	dtoa@d+1,7
  4302     1498  2C9A               	goto	u3011
  4303     1499  2C9C               	goto	u3010
  4304     149A                     u3011:
  4305     149A  3001               	movlw	1
  4306     149B  2C9D               	goto	u3020
  4307     149C                     u3010:
  4308     149C  3000               	movlw	0
  4309     149D                     u3020:
  4310     149D  00BE               	movwf	dtoa@s
  4311                           
  4312                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
  4313     149E  086E               	movf	_width+1,w
  4314     149F  00BD               	movwf	dtoa@w+1
  4315     14A0  086D               	movf	_width,w
  4316     14A1  00BC               	movwf	dtoa@w
  4317     14A2                     l2580:
  4318                           
  4319                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 536:     if (s
  4320     14A2  083E               	movf	dtoa@s,w
  4321     14A3  1903               	btfsc	3,2
  4322     14A4  2CA6               	goto	u3031
  4323     14A5  2CA7               	goto	u3030
  4324     14A6                     u3031:
  4325     14A6  2CBD               	goto	l862
  4326     14A7                     u3030:
  4327     14A7                     l2582:
  4328                           
  4329                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 541:         --w;
  4330     14A7  30FF               	movlw	255
  4331     14A8  07BC               	addwf	dtoa@w,f
  4332     14A9  1803               	skipnc
  4333     14AA  0ABD               	incf	dtoa@w+1,f
  4334     14AB  30FF               	movlw	255
  4335     14AC  07BD               	addwf	dtoa@w+1,f
  4336     14AD                     l2584:
  4337                           
  4338                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
  4339     14AD  083E               	movf	dtoa@s,w
  4340     14AE  1D03               	btfss	3,2
  4341     14AF  2CB1               	goto	u3041
  4342     14B0  2CB2               	goto	u3040
  4343     14B1                     u3041:
  4344     14B1  2CB7               	goto	l2588
  4345     14B2                     u3040:
  4346     14B2                     l2586:
  4347     14B2  302B               	movlw	43
  4348     14B3  00B8               	movwf	_dtoa$889
  4349     14B4  3000               	movlw	0
  4350     14B5  00B9               	movwf	_dtoa$889+1
  4351     14B6  2CBB               	goto	l866
  4352     14B7                     l2588:
  4353     14B7  302D               	movlw	45
  4354     14B8  00B8               	movwf	_dtoa$889
  4355     14B9  3000               	movlw	0
  4356     14BA  00B9               	movwf	_dtoa$889+1
  4357     14BB                     l866:
  4358     14BB  0838               	movf	_dtoa$889,w
  4359     14BC  00BE               	movwf	dtoa@s
  4360     14BD                     l862:	
  4361                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 543:     }
  4362                           
  4363                           
  4364                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
  4365     14BD  301F               	movlw	31
  4366     14BE  00BF               	movwf	dtoa@i
  4367     14BF  3000               	movlw	0
  4368     14C0  00C0               	movwf	dtoa@i+1
  4369     14C1                     l2590:
  4370                           
  4371                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
  4372     14C1  1283               	bcf	3,5	;RP0=0, select bank2
  4373     14C2  1703               	bsf	3,6	;RP1=1, select bank2
  4374     14C3  01AF               	clrf	(_dbuf^(0+256)+31)
  4375                           
  4376                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  4377     14C4  2D06               	goto	l2602
  4378     14C5                     l2592:
  4379                           
  4380                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 564:         --i;
  4381     14C5  30FF               	movlw	255
  4382     14C6  07BF               	addwf	dtoa@i,f
  4383     14C7  1803               	skipnc
  4384     14C8  0AC0               	incf	dtoa@i+1,f
  4385     14C9  30FF               	movlw	255
  4386     14CA  07C0               	addwf	dtoa@i+1,f
  4387     14CB                     l2594:
  4388                           
  4389                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  4390     14CB  083F               	movf	dtoa@i,w
  4391     14CC  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
  4392     14CD  0084               	movwf	4
  4393     14CE  300A               	movlw	10
  4394     14CF  00AA               	movwf	___awmod@divisor
  4395     14D0  3000               	movlw	0
  4396     14D1  00AB               	movwf	___awmod@divisor+1
  4397     14D2  0837               	movf	dtoa@d+1,w
  4398     14D3  00AD               	movwf	___awmod@dividend+1
  4399     14D4  0836               	movf	dtoa@d,w
  4400     14D5  00AC               	movwf	___awmod@dividend
  4401     14D6  160A  118A  20E8  160A  118A  	fcall	___awmod
  4402     14DB  1283               	bcf	3,5	;RP0=0, select bank0
  4403     14DC  1303               	bcf	3,6	;RP1=0, select bank0
  4404     14DD  082B               	movf	?___awmod+1,w
  4405     14DE  00B1               	movwf	abs@a+1
  4406     14DF  082A               	movf	?___awmod,w
  4407     14E0  00B0               	movwf	abs@a
  4408     14E1  160A  158A  257D  160A  118A  	fcall	_abs
  4409     14E6  1283               	bcf	3,5	;RP0=0, select bank0
  4410     14E7  1303               	bcf	3,6	;RP1=0, select bank0
  4411     14E8  0830               	movf	?_abs,w
  4412     14E9  3E30               	addlw	48
  4413     14EA  1783               	bsf	3,7	;select IRP bank2
  4414     14EB  0080               	movwf	0
  4415     14EC                     l2596:
  4416                           
  4417                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 569:   p = 0;
  4418     14EC  01BB               	clrf	dtoa@p
  4419     14ED                     l2598:
  4420                           
  4421                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 571:         --w;
  4422     14ED  30FF               	movlw	255
  4423     14EE  07BC               	addwf	dtoa@w,f
  4424     14EF  1803               	skipnc
  4425     14F0  0ABD               	incf	dtoa@w+1,f
  4426     14F1  30FF               	movlw	255
  4427     14F2  07BD               	addwf	dtoa@w+1,f
  4428     14F3                     l2600:
  4429                           
  4430                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
  4431     14F3  300A               	movlw	10
  4432     14F4  00AA               	movwf	___awdiv@divisor
  4433     14F5  3000               	movlw	0
  4434     14F6  00AB               	movwf	___awdiv@divisor+1
  4435     14F7  0837               	movf	dtoa@d+1,w
  4436     14F8  00AD               	movwf	___awdiv@dividend+1
  4437     14F9  0836               	movf	dtoa@d,w
  4438     14FA  00AC               	movwf	___awdiv@dividend
  4439     14FB  160A  118A  220D  160A  118A  	fcall	___awdiv
  4440     1500  1283               	bcf	3,5	;RP0=0, select bank0
  4441     1501  1303               	bcf	3,6	;RP1=0, select bank0
  4442     1502  082B               	movf	?___awdiv+1,w
  4443     1503  00B7               	movwf	dtoa@d+1
  4444     1504  082A               	movf	?___awdiv,w
  4445     1505  00B6               	movwf	dtoa@d
  4446     1506                     l2602:
  4447                           
  4448                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  4449     1506  1303               	bcf	3,6	;RP1=0, select bank0
  4450     1507  0840               	movf	dtoa@i+1,w
  4451     1508  3A80               	xorlw	128
  4452     1509  00FF               	movwf	btemp+1
  4453     150A  3080               	movlw	128
  4454     150B  027F               	subwf	btemp+1,w
  4455     150C  1D03               	skipz
  4456     150D  2D10               	goto	u3055
  4457     150E  3001               	movlw	1
  4458     150F  023F               	subwf	dtoa@i,w
  4459     1510                     u3055:
  4460     1510  1C03               	skipc
  4461     1511  2D13               	goto	u3051
  4462     1512  2D14               	goto	u3050
  4463     1513                     u3051:
  4464     1513  2D34               	goto	l2612
  4465     1514                     u3050:
  4466     1514                     l2604:
  4467     1514  1283               	bcf	3,5	;RP0=0, select bank0
  4468     1515  1303               	bcf	3,6	;RP1=0, select bank0
  4469     1516  0836               	movf	dtoa@d,w
  4470     1517  0437               	iorwf	dtoa@d+1,w
  4471     1518  1D03               	btfss	3,2
  4472     1519  2D1B               	goto	u3061
  4473     151A  2D1C               	goto	u3060
  4474     151B                     u3061:
  4475     151B  2CC5               	goto	l2592
  4476     151C                     u3060:
  4477     151C                     l2606:
  4478     151C  083B               	movf	dtoa@p,w
  4479     151D  1D03               	btfss	3,2
  4480     151E  2D20               	goto	u3071
  4481     151F  2D21               	goto	u3070
  4482     1520                     u3071:
  4483     1520  2CC5               	goto	l2592
  4484     1521                     u3070:
  4485     1521                     l2608:
  4486     1521  083D               	movf	dtoa@w+1,w
  4487     1522  3A80               	xorlw	128
  4488     1523  00FF               	movwf	btemp+1
  4489     1524  3080               	movlw	128
  4490     1525  027F               	subwf	btemp+1,w
  4491     1526  1D03               	skipz
  4492     1527  2D2A               	goto	u3085
  4493     1528  3001               	movlw	1
  4494     1529  023C               	subwf	dtoa@w,w
  4495     152A                     u3085:
  4496     152A  1C03               	skipc
  4497     152B  2D2D               	goto	u3081
  4498     152C  2D2E               	goto	u3080
  4499     152D                     u3081:
  4500     152D  2D34               	goto	l2612
  4501     152E                     u3080:
  4502     152E                     l2610:
  4503     152E  1283               	bcf	3,5	;RP0=0, select bank0
  4504     152F  1303               	bcf	3,6	;RP1=0, select bank0
  4505     1530  18EF               	btfsc	_flags,1
  4506     1531  2D33               	goto	u3091
  4507     1532  2D34               	goto	u3090
  4508     1533                     u3091:
  4509     1533  2CC5               	goto	l2592
  4510     1534                     u3090:
  4511     1534                     l2612:
  4512                           
  4513                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
  4514     1534  1283               	bcf	3,5	;RP0=0, select bank0
  4515     1535  1303               	bcf	3,6	;RP1=0, select bank0
  4516     1536  083E               	movf	dtoa@s,w
  4517     1537  1903               	btfsc	3,2
  4518     1538  2D3A               	goto	u3101
  4519     1539  2D3B               	goto	u3100
  4520     153A                     u3101:
  4521     153A  2D47               	goto	l2618
  4522     153B                     u3100:
  4523     153B                     l2614:
  4524                           
  4525                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 577:         --i;
  4526     153B  30FF               	movlw	255
  4527     153C  07BF               	addwf	dtoa@i,f
  4528     153D  1803               	skipnc
  4529     153E  0AC0               	incf	dtoa@i+1,f
  4530     153F  30FF               	movlw	255
  4531     1540  07C0               	addwf	dtoa@i+1,f
  4532     1541                     l2616:
  4533                           
  4534                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
  4535     1541  083F               	movf	dtoa@i,w
  4536     1542  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
  4537     1543  0084               	movwf	4
  4538     1544  083E               	movf	dtoa@s,w
  4539     1545  1783               	bsf	3,7	;select IRP bank2
  4540     1546  0080               	movwf	0
  4541     1547                     l2618:
  4542                           
  4543                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          void) pad(fp, &dbuf[i], w);
  4544     1547  083F               	movf	dtoa@i,w
  4545     1548  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
  4546     1549  00AF               	movwf	pad@buf
  4547     154A  083D               	movf	dtoa@w+1,w
  4548     154B  00B1               	movwf	pad@p+1
  4549     154C  083C               	movf	dtoa@w,w
  4550     154D  00B0               	movwf	pad@p
  4551     154E  083A               	movf	dtoa@fp,w
  4552     154F  160A  158A  27B4  160A  118A  	fcall	_pad
  4553     1554                     l875:
  4554     1554  0008               	return
  4555     1555                     __end_of_dtoa:
  4556                           
  4557                           	psect	text16
  4558     1FB4                     __ptext16:	
  4559 ;; *************** function _pad *****************
  4560 ;; Defined at:
  4561 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  4562 ;; Parameters:    Size  Location     Type
  4563 ;;  fp              1    wreg     PTR struct _IO_FILE
  4564 ;;		 -> sprintf@f(11), 
  4565 ;;  buf             1   15[BANK0 ] PTR unsigned char 
  4566 ;;		 -> dbuf(32), 
  4567 ;;  p               2   16[BANK0 ] int 
  4568 ;; Auto vars:     Size  Location     Type
  4569 ;;  fp              1   21[BANK0 ] PTR struct _IO_FILE
  4570 ;;		 -> sprintf@f(11), 
  4571 ;;  i               2   19[BANK0 ] int 
  4572 ;; Return value:  Size  Location     Type
  4573 ;;                  1    wreg      void 
  4574 ;; Registers used:
  4575 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4576 ;; Tracked objects:
  4577 ;;		On entry : 0/0
  4578 ;;		On exit  : 0/0
  4579 ;;		Unchanged: 0/0
  4580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4581 ;;      Params:         0       3       0       0       0
  4582 ;;      Locals:         0       3       0       0       0
  4583 ;;      Temps:          0       1       0       0       0
  4584 ;;      Totals:         0       7       0       0       0
  4585 ;;Total ram usage:        7 bytes
  4586 ;; Hardware stack levels used: 1
  4587 ;; Hardware stack levels required when called: 5
  4588 ;; This function calls:
  4589 ;;		_fputc
  4590 ;;		_fputs
  4591 ;; This function is called by:
  4592 ;;		_dtoa
  4593 ;;		_utoa
  4594 ;; This function uses a non-reentrant model
  4595 ;;
  4596                           
  4597     1FB4                     _pad:	
  4598                           ;psect for function _pad
  4599                           
  4600                           
  4601                           ;incstack = 0
  4602 ;; hardware stack exceeded
  4603                           ; Regs used in _pad: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4604                           ;pad@fp stored from wreg
  4605     1FB4  1283               	bcf	3,5	;RP0=0, select bank0
  4606     1FB5  1303               	bcf	3,6	;RP1=0, select bank0
  4607     1FB6  00B5               	movwf	pad@fp
  4608     1FB7                     l2542:
  4609                           
  4610                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c:
      +                           199:     if (flags & (1 << 0)) {
  4611     1FB7  1C6F               	btfss	_flags,0
  4612     1FB8  2FBA               	goto	u2921
  4613     1FB9  2FBB               	goto	u2920
  4614     1FBA                     u2921:
  4615     1FBA  2FC3               	goto	l2546
  4616     1FBB                     u2920:
  4617     1FBB                     l2544:
  4618                           
  4619                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 200:         fput
      +                          s((const char *)buf, fp);
  4620     1FBB  0835               	movf	pad@fp,w
  4621     1FBC  00A8               	movwf	fputs@fp
  4622     1FBD  082F               	movf	pad@buf,w
  4623     1FBE  120A  158A  2007  160A  158A  	fcall	_fputs
  4624     1FC3                     l2546:
  4625                           
  4626                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) 
      +                          {
  4627     1FC3  1283               	bcf	3,5	;RP0=0, select bank0
  4628     1FC4  1303               	bcf	3,6	;RP1=0, select bank0
  4629     1FC5  1FB1               	btfss	pad@p+1,7
  4630     1FC6  2FC8               	goto	u2931
  4631     1FC7  2FC9               	goto	u2930
  4632     1FC8                     u2931:
  4633     1FC8  2FCB               	goto	l854
  4634     1FC9                     u2930:
  4635     1FC9                     l2548:
  4636                           
  4637                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  4638     1FC9  01B0               	clrf	pad@p
  4639     1FCA  01B1               	clrf	pad@p+1
  4640     1FCB                     l854:	
  4641                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 207:  }
  4642                           
  4643                           
  4644                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  4645     1FCB  01B3               	clrf	pad@i
  4646     1FCC  01B4               	clrf	pad@i+1
  4647                           
  4648                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  4649     1FCD  2FE3               	goto	l2554
  4650     1FCE                     l2550:
  4651                           
  4652                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  4653     1FCE  3020               	movlw	32
  4654     1FCF  1283               	bcf	3,5	;RP0=0, select bank0
  4655     1FD0  1303               	bcf	3,6	;RP1=0, select bank0
  4656     1FD1  00A0               	movwf	fputc@c
  4657     1FD2  3000               	movlw	0
  4658     1FD3  00A1               	movwf	fputc@c+1
  4659     1FD4  0835               	movf	pad@fp,w
  4660     1FD5  00A2               	movwf	fputc@fp
  4661     1FD6  160A  118A  208E  160A  158A  	fcall	_fputc
  4662     1FDB                     l2552:
  4663                           
  4664                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 211:         ++i;
  4665     1FDB  3001               	movlw	1
  4666     1FDC  1283               	bcf	3,5	;RP0=0, select bank0
  4667     1FDD  1303               	bcf	3,6	;RP1=0, select bank0
  4668     1FDE  07B3               	addwf	pad@i,f
  4669     1FDF  1803               	skipnc
  4670     1FE0  0AB4               	incf	pad@i+1,f
  4671     1FE1  3000               	movlw	0
  4672     1FE2  07B4               	addwf	pad@i+1,f
  4673     1FE3                     l2554:
  4674                           
  4675                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  4676     1FE3  0834               	movf	pad@i+1,w
  4677     1FE4  3A80               	xorlw	128
  4678     1FE5  00B2               	movwf	??_pad
  4679     1FE6  0831               	movf	pad@p+1,w
  4680     1FE7  3A80               	xorlw	128
  4681     1FE8  0232               	subwf	??_pad,w
  4682     1FE9  1D03               	skipz
  4683     1FEA  2FED               	goto	u2945
  4684     1FEB  0830               	movf	pad@p,w
  4685     1FEC  0233               	subwf	pad@i,w
  4686     1FED                     u2945:
  4687     1FED  1C03               	skipc
  4688     1FEE  2FF0               	goto	u2941
  4689     1FEF  2FF1               	goto	u2940
  4690     1FF0                     u2941:
  4691     1FF0  2FCE               	goto	l2550
  4692     1FF1                     u2940:
  4693     1FF1                     l857:
  4694                           
  4695                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 216:     if (!(fl
      +                          ags & (1 << 0))) {
  4696     1FF1  1283               	bcf	3,5	;RP0=0, select bank0
  4697     1FF2  1303               	bcf	3,6	;RP1=0, select bank0
  4698     1FF3  186F               	btfsc	_flags,0
  4699     1FF4  2FF6               	goto	u2951
  4700     1FF5  2FF7               	goto	u2950
  4701     1FF6                     u2951:
  4702     1FF6  2FFF               	goto	l859
  4703     1FF7                     u2950:
  4704     1FF7                     l2556:
  4705                           
  4706                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  4707     1FF7  0835               	movf	pad@fp,w
  4708     1FF8  00A8               	movwf	fputs@fp
  4709     1FF9  082F               	movf	pad@buf,w
  4710     1FFA  120A  158A  2007  160A  158A  	fcall	_fputs
  4711     1FFF                     l859:
  4712     1FFF  0008               	return
  4713     2000                     __end_of_pad:
  4714                           
  4715                           	psect	text17
  4716     0807                     __ptext17:	
  4717 ;; *************** function _fputs *****************
  4718 ;; Defined at:
  4719 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputs.c"
  4720 ;; Parameters:    Size  Location     Type
  4721 ;;  s               1    wreg     PTR const unsigned char 
  4722 ;;		 -> dbuf(32), 
  4723 ;;  fp              1    8[BANK0 ] PTR struct _IO_FILE
  4724 ;;		 -> sprintf@f(11), 
  4725 ;; Auto vars:     Size  Location     Type
  4726 ;;  s               1   14[BANK0 ] PTR const unsigned char 
  4727 ;;		 -> dbuf(32), 
  4728 ;;  i               2   12[BANK0 ] int 
  4729 ;;  c               1   11[BANK0 ] unsigned char 
  4730 ;; Return value:  Size  Location     Type
  4731 ;;                  2    8[BANK0 ] int 
  4732 ;; Registers used:
  4733 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4734 ;; Tracked objects:
  4735 ;;		On entry : 0/0
  4736 ;;		On exit  : 0/0
  4737 ;;		Unchanged: 0/0
  4738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4739 ;;      Params:         0       1       0       0       0
  4740 ;;      Locals:         0       4       0       0       0
  4741 ;;      Temps:          0       2       0       0       0
  4742 ;;      Totals:         0       7       0       0       0
  4743 ;;Total ram usage:        7 bytes
  4744 ;; Hardware stack levels used: 1
  4745 ;; Hardware stack levels required when called: 4
  4746 ;; This function calls:
  4747 ;;		_fputc
  4748 ;; This function is called by:
  4749 ;;		_pad
  4750 ;; This function uses a non-reentrant model
  4751 ;;
  4752                           
  4753     0807                     _fputs:	
  4754                           ;psect for function _fputs
  4755                           
  4756                           
  4757                           ;incstack = 0
  4758 ;; hardware stack exceeded
  4759                           ; Regs used in _fputs: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4760                           ;fputs@s stored from wreg
  4761     0807  1283               	bcf	3,5	;RP0=0, select bank0
  4762     0808  1303               	bcf	3,6	;RP1=0, select bank0
  4763     0809  00AE               	movwf	fputs@s
  4764     080A                     l2390:
  4765     080A  01AC               	clrf	fputs@i
  4766     080B  01AD               	clrf	fputs@i+1
  4767     080C  2823               	goto	l2396
  4768     080D                     l2392:
  4769     080D  082B               	movf	fputs@c,w
  4770     080E  00A9               	movwf	??_fputs
  4771     080F  01AA               	clrf	??_fputs+1
  4772     0810  0829               	movf	??_fputs,w
  4773     0811  00A0               	movwf	fputc@c
  4774     0812  082A               	movf	??_fputs+1,w
  4775     0813  00A1               	movwf	fputc@c+1
  4776     0814  0828               	movf	fputs@fp,w
  4777     0815  00A2               	movwf	fputc@fp
  4778     0816  160A  118A  208E  120A  158A  	fcall	_fputc
  4779     081B                     l2394:
  4780     081B  3001               	movlw	1
  4781     081C  1283               	bcf	3,5	;RP0=0, select bank0
  4782     081D  1303               	bcf	3,6	;RP1=0, select bank0
  4783     081E  07AC               	addwf	fputs@i,f
  4784     081F  1803               	skipnc
  4785     0820  0AAD               	incf	fputs@i+1,f
  4786     0821  3000               	movlw	0
  4787     0822  07AD               	addwf	fputs@i+1,f
  4788     0823                     l2396:
  4789     0823  082C               	movf	fputs@i,w
  4790     0824  072E               	addwf	fputs@s,w
  4791     0825  00A9               	movwf	??_fputs
  4792     0826  0829               	movf	??_fputs,w
  4793     0827  0084               	movwf	4
  4794     0828  1783               	bsf	3,7	;select IRP bank2
  4795     0829  0800               	movf	0,w
  4796     082A  00AB               	movwf	fputs@c
  4797     082B  082B               	movf	fputs@c,w
  4798     082C  1D03               	btfss	3,2
  4799     082D  282F               	goto	u2551
  4800     082E  2830               	goto	u2550
  4801     082F                     u2551:
  4802     082F  280D               	goto	l2392
  4803     0830                     u2550:
  4804     0830                     l947:
  4805     0830  0008               	return
  4806     0831                     __end_of_fputs:
  4807                           
  4808                           	psect	text18
  4809     108E                     __ptext18:	
  4810 ;; *************** function _fputc *****************
  4811 ;; Defined at:
  4812 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  4813 ;; Parameters:    Size  Location     Type
  4814 ;;  c               2    0[BANK0 ] int 
  4815 ;;  fp              1    2[BANK0 ] PTR struct _IO_FILE
  4816 ;;		 -> sprintf@f(11), 
  4817 ;; Auto vars:     Size  Location     Type
  4818 ;;		None
  4819 ;; Return value:  Size  Location     Type
  4820 ;;                  2    0[BANK0 ] int 
  4821 ;; Registers used:
  4822 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4823 ;; Tracked objects:
  4824 ;;		On entry : 0/0
  4825 ;;		On exit  : 0/0
  4826 ;;		Unchanged: 0/0
  4827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4828 ;;      Params:         0       3       0       0       0
  4829 ;;      Locals:         0       0       0       0       0
  4830 ;;      Temps:          0       5       0       0       0
  4831 ;;      Totals:         0       8       0       0       0
  4832 ;;Total ram usage:        8 bytes
  4833 ;; Hardware stack levels used: 1
  4834 ;; Hardware stack levels required when called: 3
  4835 ;; This function calls:
  4836 ;;		_putch
  4837 ;; This function is called by:
  4838 ;;		_pad
  4839 ;;		_vfpfcnvrt
  4840 ;;		_fputs
  4841 ;; This function uses a non-reentrant model
  4842 ;;
  4843                           
  4844     108E                     _fputc:	
  4845                           ;psect for function _fputc
  4846                           
  4847     108E                     l2376:	
  4848                           ;incstack = 0
  4849 ;; hardware stack exceeded
  4850                           ; Regs used in _fputc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4851                           
  4852     108E  1283               	bcf	3,5	;RP0=0, select bank0
  4853     108F  1303               	bcf	3,6	;RP1=0, select bank0
  4854     1090  0822               	movf	fputc@fp,w
  4855     1091  1903               	btfsc	3,2
  4856     1092  2894               	goto	u2511
  4857     1093  2895               	goto	u2510
  4858     1094                     u2511:
  4859     1094  289A               	goto	l2380
  4860     1095                     u2510:
  4861     1095                     l2378:
  4862     1095  0822               	movf	fputc@fp,w
  4863     1096  1D03               	btfss	3,2
  4864     1097  2899               	goto	u2521
  4865     1098  289A               	goto	u2520
  4866     1099                     u2521:
  4867     1099  28A1               	goto	l2382
  4868     109A                     u2520:
  4869     109A                     l2380:
  4870     109A  0820               	movf	fputc@c,w
  4871     109B  120A  118A  27FD  160A  118A  	fcall	_putch
  4872     10A0  28E7               	goto	l939
  4873     10A1                     l2382:
  4874     10A1  0822               	movf	fputc@fp,w
  4875     10A2  3E09               	addlw	9
  4876     10A3  0084               	movwf	4
  4877     10A4  1383               	bcf	3,7	;select IRP bank0
  4878     10A5  0800               	movf	0,w
  4879     10A6  00A3               	movwf	??_fputc
  4880     10A7  0A84               	incf	4,f
  4881     10A8  0800               	movf	0,w
  4882     10A9  00A4               	movwf	??_fputc+1
  4883     10AA  0823               	movf	??_fputc,w
  4884     10AB  0424               	iorwf	??_fputc+1,w
  4885     10AC  1903               	btfsc	3,2
  4886     10AD  28AF               	goto	u2531
  4887     10AE  28B0               	goto	u2530
  4888     10AF                     u2531:
  4889     10AF  28CE               	goto	l2386
  4890     10B0                     u2530:
  4891     10B0                     l2384:
  4892     10B0  0822               	movf	fputc@fp,w
  4893     10B1  3E09               	addlw	9
  4894     10B2  0084               	movwf	4
  4895     10B3  0800               	movf	0,w
  4896     10B4  00A3               	movwf	??_fputc
  4897     10B5  0A84               	incf	4,f
  4898     10B6  0800               	movf	0,w
  4899     10B7  00A4               	movwf	??_fputc+1
  4900     10B8  0822               	movf	fputc@fp,w
  4901     10B9  3E02               	addlw	2
  4902     10BA  0084               	movwf	4
  4903     10BB  0800               	movf	0,w
  4904     10BC  00A5               	movwf	??_fputc+2
  4905     10BD  0A84               	incf	4,f
  4906     10BE  0800               	movf	0,w
  4907     10BF  00A6               	movwf	??_fputc+3
  4908     10C0  0826               	movf	??_fputc+3,w
  4909     10C1  3A80               	xorlw	128
  4910     10C2  00A7               	movwf	??_fputc+4
  4911     10C3  0824               	movf	??_fputc+1,w
  4912     10C4  3A80               	xorlw	128
  4913     10C5  0227               	subwf	??_fputc+4,w
  4914     10C6  1D03               	skipz
  4915     10C7  28CA               	goto	u2545
  4916     10C8  0823               	movf	??_fputc,w
  4917     10C9  0225               	subwf	??_fputc+2,w
  4918     10CA                     u2545:
  4919     10CA  1803               	skipnc
  4920     10CB  28CD               	goto	u2541
  4921     10CC  28CE               	goto	u2540
  4922     10CD                     u2541:
  4923     10CD  28E7               	goto	l939
  4924     10CE                     u2540:
  4925     10CE                     l2386:
  4926     10CE  1283               	bcf	3,5	;RP0=0, select bank0
  4927     10CF  1303               	bcf	3,6	;RP1=0, select bank0
  4928     10D0  0822               	movf	fputc@fp,w
  4929     10D1  3E02               	addlw	2
  4930     10D2  0084               	movwf	4
  4931     10D3  1383               	bcf	3,7	;select IRP bank0
  4932     10D4  0800               	movf	0,w
  4933     10D5  00A3               	movwf	??_fputc
  4934     10D6  0822               	movf	fputc@fp,w
  4935     10D7  0084               	movwf	4
  4936     10D8  0800               	movf	0,w
  4937     10D9  0723               	addwf	??_fputc,w
  4938     10DA  00A4               	movwf	??_fputc+1
  4939     10DB  0824               	movf	??_fputc+1,w
  4940     10DC  0084               	movwf	4
  4941     10DD  0820               	movf	fputc@c,w
  4942     10DE  0080               	movwf	0
  4943     10DF  0822               	movf	fputc@fp,w
  4944     10E0  3E02               	addlw	2
  4945     10E1  0084               	movwf	4
  4946     10E2  3001               	movlw	1
  4947     10E3  0780               	addwf	0,f
  4948     10E4  0A84               	incf	4,f
  4949     10E5  1803               	skipnc
  4950     10E6  0A80               	incf	0,f
  4951     10E7                     l939:
  4952     10E7  0008               	return
  4953     10E8                     __end_of_fputc:
  4954                           
  4955                           	psect	text19
  4956     07FD                     __ptext19:	
  4957 ;; *************** function _putch *****************
  4958 ;; Defined at:
  4959 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  4960 ;; Parameters:    Size  Location     Type
  4961 ;;  c               1    wreg     unsigned char 
  4962 ;; Auto vars:     Size  Location     Type
  4963 ;;  c               1    0[COMMON] unsigned char 
  4964 ;; Return value:  Size  Location     Type
  4965 ;;                  1    wreg      void 
  4966 ;; Registers used:
  4967 ;;		wreg
  4968 ;; Tracked objects:
  4969 ;;		On entry : 0/0
  4970 ;;		On exit  : 0/0
  4971 ;;		Unchanged: 0/0
  4972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4973 ;;      Params:         0       0       0       0       0
  4974 ;;      Locals:         0       0       0       0       0
  4975 ;;      Temps:          0       0       0       0       0
  4976 ;;      Totals:         0       0       0       0       0
  4977 ;;Total ram usage:        0 bytes
  4978 ;; Hardware stack levels used: 1
  4979 ;; Hardware stack levels required when called: 2
  4980 ;; This function calls:
  4981 ;;		Nothing
  4982 ;; This function is called by:
  4983 ;;		_fputc
  4984 ;; This function uses a non-reentrant model
  4985 ;;
  4986                           
  4987     07FD                     _putch:	
  4988                           ;psect for function _putch
  4989                           
  4990     07FD                     l950:	
  4991                           ;incstack = 0
  4992 ;; hardware stack exceeded
  4993                           ; Regs used in _putch: [wreg]
  4994                           
  4995     07FD  0008               	return
  4996     07FE                     __end_of_putch:
  4997                           
  4998                           	psect	text20
  4999     1D7D                     __ptext20:	
  5000 ;; *************** function _abs *****************
  5001 ;; Defined at:
  5002 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  5003 ;; Parameters:    Size  Location     Type
  5004 ;;  a               2   16[BANK0 ] int 
  5005 ;; Auto vars:     Size  Location     Type
  5006 ;;		None
  5007 ;; Return value:  Size  Location     Type
  5008 ;;                  2   16[BANK0 ] int 
  5009 ;; Registers used:
  5010 ;;		wreg, status,2, status,0
  5011 ;; Tracked objects:
  5012 ;;		On entry : 0/0
  5013 ;;		On exit  : 0/0
  5014 ;;		Unchanged: 0/0
  5015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5016 ;;      Params:         0       2       0       0       0
  5017 ;;      Locals:         0       0       0       0       0
  5018 ;;      Temps:          0       2       0       0       0
  5019 ;;      Totals:         0       4       0       0       0
  5020 ;;Total ram usage:        4 bytes
  5021 ;; Hardware stack levels used: 1
  5022 ;; Hardware stack levels required when called: 2
  5023 ;; This function calls:
  5024 ;;		Nothing
  5025 ;; This function is called by:
  5026 ;;		_dtoa
  5027 ;; This function uses a non-reentrant model
  5028 ;;
  5029                           
  5030     1D7D                     _abs:	
  5031                           ;psect for function _abs
  5032                           
  5033     1D7D                     l2558:	
  5034                           ;incstack = 0
  5035                           ; Regs used in _abs: [wreg+status,2+status,0]
  5036                           
  5037     1D7D  1283               	bcf	3,5	;RP0=0, select bank0
  5038     1D7E  1303               	bcf	3,6	;RP1=0, select bank0
  5039     1D7F  1BB1               	btfsc	abs@a+1,7
  5040     1D80  2D82               	goto	u2961
  5041     1D81  2D83               	goto	u2960
  5042     1D82                     u2961:
  5043     1D82  2D84               	goto	l2562
  5044     1D83                     u2960:
  5045     1D83                     l2560:
  5046     1D83  2D8F               	goto	l927
  5047     1D84                     l2562:
  5048     1D84  0930               	comf	abs@a,w
  5049     1D85  00B2               	movwf	??_abs
  5050     1D86  0931               	comf	abs@a+1,w
  5051     1D87  00B3               	movwf	??_abs+1
  5052     1D88  0AB2               	incf	??_abs,f
  5053     1D89  1903               	skipnz
  5054     1D8A  0AB3               	incf	??_abs+1,f
  5055     1D8B  0832               	movf	??_abs,w
  5056     1D8C  00B0               	movwf	?_abs
  5057     1D8D  0833               	movf	??_abs+1,w
  5058     1D8E  00B1               	movwf	?_abs+1
  5059     1D8F                     l927:
  5060     1D8F  0008               	return
  5061     1D90                     __end_of_abs:
  5062                           
  5063                           	psect	text21
  5064     10E8                     __ptext21:	
  5065 ;; *************** function ___awmod *****************
  5066 ;; Defined at:
  5067 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  5068 ;; Parameters:    Size  Location     Type
  5069 ;;  divisor         2   10[BANK0 ] int 
  5070 ;;  dividend        2   12[BANK0 ] int 
  5071 ;; Auto vars:     Size  Location     Type
  5072 ;;  sign            1   15[BANK0 ] unsigned char 
  5073 ;;  counter         1   14[BANK0 ] unsigned char 
  5074 ;; Return value:  Size  Location     Type
  5075 ;;                  2   10[BANK0 ] int 
  5076 ;; Registers used:
  5077 ;;		wreg, status,2, status,0, btemp+1
  5078 ;; Tracked objects:
  5079 ;;		On entry : 0/0
  5080 ;;		On exit  : 0/0
  5081 ;;		Unchanged: 0/0
  5082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5083 ;;      Params:         0       4       0       0       0
  5084 ;;      Locals:         0       2       0       0       0
  5085 ;;      Temps:          0       0       0       0       0
  5086 ;;      Totals:         0       6       0       0       0
  5087 ;;Total ram usage:        6 bytes
  5088 ;; Hardware stack levels used: 1
  5089 ;; Hardware stack levels required when called: 2
  5090 ;; This function calls:
  5091 ;;		Nothing
  5092 ;; This function is called by:
  5093 ;;		_main
  5094 ;;		_dtoa
  5095 ;; This function uses a non-reentrant model
  5096 ;;
  5097                           
  5098     10E8                     ___awmod:	
  5099                           ;psect for function ___awmod
  5100                           
  5101     10E8                     l2456:	
  5102                           ;incstack = 0
  5103                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
  5104                           
  5105     10E8  1283               	bcf	3,5	;RP0=0, select bank0
  5106     10E9  1303               	bcf	3,6	;RP1=0, select bank0
  5107     10EA  01AF               	clrf	___awmod@sign
  5108     10EB                     l2458:
  5109     10EB  1FAD               	btfss	___awmod@dividend+1,7
  5110     10EC  28EE               	goto	u2701
  5111     10ED  28EF               	goto	u2700
  5112     10EE                     u2701:
  5113     10EE  28F6               	goto	l2464
  5114     10EF                     u2700:
  5115     10EF                     l2460:
  5116     10EF  09AC               	comf	___awmod@dividend,f
  5117     10F0  09AD               	comf	___awmod@dividend+1,f
  5118     10F1  0AAC               	incf	___awmod@dividend,f
  5119     10F2  1903               	skipnz
  5120     10F3  0AAD               	incf	___awmod@dividend+1,f
  5121     10F4                     l2462:
  5122     10F4  01AF               	clrf	___awmod@sign
  5123     10F5  0AAF               	incf	___awmod@sign,f
  5124     10F6                     l2464:
  5125     10F6  1FAB               	btfss	___awmod@divisor+1,7
  5126     10F7  28F9               	goto	u2711
  5127     10F8  28FA               	goto	u2710
  5128     10F9                     u2711:
  5129     10F9  28FF               	goto	l2468
  5130     10FA                     u2710:
  5131     10FA                     l2466:
  5132     10FA  09AA               	comf	___awmod@divisor,f
  5133     10FB  09AB               	comf	___awmod@divisor+1,f
  5134     10FC  0AAA               	incf	___awmod@divisor,f
  5135     10FD  1903               	skipnz
  5136     10FE  0AAB               	incf	___awmod@divisor+1,f
  5137     10FF                     l2468:
  5138     10FF  082A               	movf	___awmod@divisor,w
  5139     1100  042B               	iorwf	___awmod@divisor+1,w
  5140     1101  1903               	btfsc	3,2
  5141     1102  2904               	goto	u2721
  5142     1103  2905               	goto	u2720
  5143     1104                     u2721:
  5144     1104  2934               	goto	l2486
  5145     1105                     u2720:
  5146     1105                     l2470:
  5147     1105  01AE               	clrf	___awmod@counter
  5148     1106  0AAE               	incf	___awmod@counter,f
  5149     1107  2913               	goto	l2476
  5150     1108                     l2472:
  5151     1108  3001               	movlw	1
  5152     1109                     u2735:
  5153     1109  1003               	clrc
  5154     110A  0DAA               	rlf	___awmod@divisor,f
  5155     110B  0DAB               	rlf	___awmod@divisor+1,f
  5156     110C  3EFF               	addlw	-1
  5157     110D  1D03               	skipz
  5158     110E  2909               	goto	u2735
  5159     110F                     l2474:
  5160     110F  3001               	movlw	1
  5161     1110  00FF               	movwf	btemp+1
  5162     1111  087F               	movf	btemp+1,w
  5163     1112  07AE               	addwf	___awmod@counter,f
  5164     1113                     l2476:
  5165     1113  1FAB               	btfss	___awmod@divisor+1,7
  5166     1114  2916               	goto	u2741
  5167     1115  2917               	goto	u2740
  5168     1116                     u2741:
  5169     1116  2908               	goto	l2472
  5170     1117                     u2740:
  5171     1117                     l2478:
  5172     1117  082B               	movf	___awmod@divisor+1,w
  5173     1118  022D               	subwf	___awmod@dividend+1,w
  5174     1119  1D03               	skipz
  5175     111A  291D               	goto	u2755
  5176     111B  082A               	movf	___awmod@divisor,w
  5177     111C  022C               	subwf	___awmod@dividend,w
  5178     111D                     u2755:
  5179     111D  1C03               	skipc
  5180     111E  2920               	goto	u2751
  5181     111F  2921               	goto	u2750
  5182     1120                     u2751:
  5183     1120  2927               	goto	l2482
  5184     1121                     u2750:
  5185     1121                     l2480:
  5186     1121  082A               	movf	___awmod@divisor,w
  5187     1122  02AC               	subwf	___awmod@dividend,f
  5188     1123  082B               	movf	___awmod@divisor+1,w
  5189     1124  1C03               	skipc
  5190     1125  03AD               	decf	___awmod@dividend+1,f
  5191     1126  02AD               	subwf	___awmod@dividend+1,f
  5192     1127                     l2482:
  5193     1127  3001               	movlw	1
  5194     1128                     u2765:
  5195     1128  1003               	clrc
  5196     1129  0CAB               	rrf	___awmod@divisor+1,f
  5197     112A  0CAA               	rrf	___awmod@divisor,f
  5198     112B  3EFF               	addlw	-1
  5199     112C  1D03               	skipz
  5200     112D  2928               	goto	u2765
  5201     112E                     l2484:
  5202     112E  3001               	movlw	1
  5203     112F  02AE               	subwf	___awmod@counter,f
  5204     1130  1D03               	btfss	3,2
  5205     1131  2933               	goto	u2771
  5206     1132  2934               	goto	u2770
  5207     1133                     u2771:
  5208     1133  2917               	goto	l2478
  5209     1134                     u2770:
  5210     1134                     l2486:
  5211     1134  082F               	movf	___awmod@sign,w
  5212     1135  1903               	btfsc	3,2
  5213     1136  2938               	goto	u2781
  5214     1137  2939               	goto	u2780
  5215     1138                     u2781:
  5216     1138  293E               	goto	l2490
  5217     1139                     u2780:
  5218     1139                     l2488:
  5219     1139  09AC               	comf	___awmod@dividend,f
  5220     113A  09AD               	comf	___awmod@dividend+1,f
  5221     113B  0AAC               	incf	___awmod@dividend,f
  5222     113C  1903               	skipnz
  5223     113D  0AAD               	incf	___awmod@dividend+1,f
  5224     113E                     l2490:
  5225     113E  082D               	movf	___awmod@dividend+1,w
  5226     113F  00AB               	movwf	?___awmod+1
  5227     1140  082C               	movf	___awmod@dividend,w
  5228     1141  00AA               	movwf	?___awmod
  5229     1142                     l537:
  5230     1142  0008               	return
  5231     1143                     __end_of___awmod:
  5232                           
  5233                           	psect	text22
  5234     120D                     __ptext22:	
  5235 ;; *************** function ___awdiv *****************
  5236 ;; Defined at:
  5237 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  5238 ;; Parameters:    Size  Location     Type
  5239 ;;  divisor         2   10[BANK0 ] int 
  5240 ;;  dividend        2   12[BANK0 ] int 
  5241 ;; Auto vars:     Size  Location     Type
  5242 ;;  quotient        2   16[BANK0 ] int 
  5243 ;;  sign            1   15[BANK0 ] unsigned char 
  5244 ;;  counter         1   14[BANK0 ] unsigned char 
  5245 ;; Return value:  Size  Location     Type
  5246 ;;                  2   10[BANK0 ] int 
  5247 ;; Registers used:
  5248 ;;		wreg, status,2, status,0, btemp+1
  5249 ;; Tracked objects:
  5250 ;;		On entry : 0/0
  5251 ;;		On exit  : 0/0
  5252 ;;		Unchanged: 0/0
  5253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5254 ;;      Params:         0       4       0       0       0
  5255 ;;      Locals:         0       4       0       0       0
  5256 ;;      Temps:          0       0       0       0       0
  5257 ;;      Totals:         0       8       0       0       0
  5258 ;;Total ram usage:        8 bytes
  5259 ;; Hardware stack levels used: 1
  5260 ;; Hardware stack levels required when called: 2
  5261 ;; This function calls:
  5262 ;;		Nothing
  5263 ;; This function is called by:
  5264 ;;		_main
  5265 ;;		_dtoa
  5266 ;; This function uses a non-reentrant model
  5267 ;;
  5268                           
  5269     120D                     ___awdiv:	
  5270                           ;psect for function ___awdiv
  5271                           
  5272     120D                     l2412:	
  5273                           ;incstack = 0
  5274                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  5275                           
  5276     120D  1283               	bcf	3,5	;RP0=0, select bank0
  5277     120E  1303               	bcf	3,6	;RP1=0, select bank0
  5278     120F  01AF               	clrf	___awdiv@sign
  5279     1210                     l2414:
  5280     1210  1FAB               	btfss	___awdiv@divisor+1,7
  5281     1211  2A13               	goto	u2601
  5282     1212  2A14               	goto	u2600
  5283     1213                     u2601:
  5284     1213  2A1B               	goto	l2420
  5285     1214                     u2600:
  5286     1214                     l2416:
  5287     1214  09AA               	comf	___awdiv@divisor,f
  5288     1215  09AB               	comf	___awdiv@divisor+1,f
  5289     1216  0AAA               	incf	___awdiv@divisor,f
  5290     1217  1903               	skipnz
  5291     1218  0AAB               	incf	___awdiv@divisor+1,f
  5292     1219                     l2418:
  5293     1219  01AF               	clrf	___awdiv@sign
  5294     121A  0AAF               	incf	___awdiv@sign,f
  5295     121B                     l2420:
  5296     121B  1FAD               	btfss	___awdiv@dividend+1,7
  5297     121C  2A1E               	goto	u2611
  5298     121D  2A1F               	goto	u2610
  5299     121E                     u2611:
  5300     121E  2A28               	goto	l2426
  5301     121F                     u2610:
  5302     121F                     l2422:
  5303     121F  09AC               	comf	___awdiv@dividend,f
  5304     1220  09AD               	comf	___awdiv@dividend+1,f
  5305     1221  0AAC               	incf	___awdiv@dividend,f
  5306     1222  1903               	skipnz
  5307     1223  0AAD               	incf	___awdiv@dividend+1,f
  5308     1224                     l2424:
  5309     1224  3001               	movlw	1
  5310     1225  00FF               	movwf	btemp+1
  5311     1226  087F               	movf	btemp+1,w
  5312     1227  06AF               	xorwf	___awdiv@sign,f
  5313     1228                     l2426:
  5314     1228  01B0               	clrf	___awdiv@quotient
  5315     1229  01B1               	clrf	___awdiv@quotient+1
  5316     122A                     l2428:
  5317     122A  082A               	movf	___awdiv@divisor,w
  5318     122B  042B               	iorwf	___awdiv@divisor+1,w
  5319     122C  1903               	btfsc	3,2
  5320     122D  2A2F               	goto	u2621
  5321     122E  2A30               	goto	u2620
  5322     122F                     u2621:
  5323     122F  2A67               	goto	l2448
  5324     1230                     u2620:
  5325     1230                     l2430:
  5326     1230  01AE               	clrf	___awdiv@counter
  5327     1231  0AAE               	incf	___awdiv@counter,f
  5328     1232  2A3E               	goto	l2436
  5329     1233                     l2432:
  5330     1233  3001               	movlw	1
  5331     1234                     u2635:
  5332     1234  1003               	clrc
  5333     1235  0DAA               	rlf	___awdiv@divisor,f
  5334     1236  0DAB               	rlf	___awdiv@divisor+1,f
  5335     1237  3EFF               	addlw	-1
  5336     1238  1D03               	skipz
  5337     1239  2A34               	goto	u2635
  5338     123A                     l2434:
  5339     123A  3001               	movlw	1
  5340     123B  00FF               	movwf	btemp+1
  5341     123C  087F               	movf	btemp+1,w
  5342     123D  07AE               	addwf	___awdiv@counter,f
  5343     123E                     l2436:
  5344     123E  1FAB               	btfss	___awdiv@divisor+1,7
  5345     123F  2A41               	goto	u2641
  5346     1240  2A42               	goto	u2640
  5347     1241                     u2641:
  5348     1241  2A33               	goto	l2432
  5349     1242                     u2640:
  5350     1242                     l2438:
  5351     1242  3001               	movlw	1
  5352     1243                     u2655:
  5353     1243  1003               	clrc
  5354     1244  0DB0               	rlf	___awdiv@quotient,f
  5355     1245  0DB1               	rlf	___awdiv@quotient+1,f
  5356     1246  3EFF               	addlw	-1
  5357     1247  1D03               	skipz
  5358     1248  2A43               	goto	u2655
  5359     1249  082B               	movf	___awdiv@divisor+1,w
  5360     124A  022D               	subwf	___awdiv@dividend+1,w
  5361     124B  1D03               	skipz
  5362     124C  2A4F               	goto	u2665
  5363     124D  082A               	movf	___awdiv@divisor,w
  5364     124E  022C               	subwf	___awdiv@dividend,w
  5365     124F                     u2665:
  5366     124F  1C03               	skipc
  5367     1250  2A52               	goto	u2661
  5368     1251  2A53               	goto	u2660
  5369     1252                     u2661:
  5370     1252  2A5A               	goto	l2444
  5371     1253                     u2660:
  5372     1253                     l2440:
  5373     1253  082A               	movf	___awdiv@divisor,w
  5374     1254  02AC               	subwf	___awdiv@dividend,f
  5375     1255  082B               	movf	___awdiv@divisor+1,w
  5376     1256  1C03               	skipc
  5377     1257  03AD               	decf	___awdiv@dividend+1,f
  5378     1258  02AD               	subwf	___awdiv@dividend+1,f
  5379     1259                     l2442:
  5380     1259  1430               	bsf	___awdiv@quotient,0
  5381     125A                     l2444:
  5382     125A  3001               	movlw	1
  5383     125B                     u2675:
  5384     125B  1003               	clrc
  5385     125C  0CAB               	rrf	___awdiv@divisor+1,f
  5386     125D  0CAA               	rrf	___awdiv@divisor,f
  5387     125E  3EFF               	addlw	-1
  5388     125F  1D03               	skipz
  5389     1260  2A5B               	goto	u2675
  5390     1261                     l2446:
  5391     1261  3001               	movlw	1
  5392     1262  02AE               	subwf	___awdiv@counter,f
  5393     1263  1D03               	btfss	3,2
  5394     1264  2A66               	goto	u2681
  5395     1265  2A67               	goto	u2680
  5396     1266                     u2681:
  5397     1266  2A42               	goto	l2438
  5398     1267                     u2680:
  5399     1267                     l2448:
  5400     1267  082F               	movf	___awdiv@sign,w
  5401     1268  1903               	btfsc	3,2
  5402     1269  2A6B               	goto	u2691
  5403     126A  2A6C               	goto	u2690
  5404     126B                     u2691:
  5405     126B  2A71               	goto	l2452
  5406     126C                     u2690:
  5407     126C                     l2450:
  5408     126C  09B0               	comf	___awdiv@quotient,f
  5409     126D  09B1               	comf	___awdiv@quotient+1,f
  5410     126E  0AB0               	incf	___awdiv@quotient,f
  5411     126F  1903               	skipnz
  5412     1270  0AB1               	incf	___awdiv@quotient+1,f
  5413     1271                     l2452:
  5414     1271  0831               	movf	___awdiv@quotient+1,w
  5415     1272  00AB               	movwf	?___awdiv+1
  5416     1273  0830               	movf	___awdiv@quotient,w
  5417     1274  00AA               	movwf	?___awdiv
  5418     1275                     l524:
  5419     1275  0008               	return
  5420     1276                     __end_of___awdiv:
  5421                           
  5422                           	psect	text23
  5423     1D90                     __ptext23:	
  5424 ;; *************** function _readEEPROM *****************
  5425 ;; Defined at:
  5426 ;;		line 69 in file "main1.c"
  5427 ;; Parameters:    Size  Location     Type
  5428 ;;  address         2    6[BANK0 ] unsigned int 
  5429 ;; Auto vars:     Size  Location     Type
  5430 ;;		None
  5431 ;; Return value:  Size  Location     Type
  5432 ;;                  2    6[BANK0 ] unsigned int 
  5433 ;; Registers used:
  5434 ;;		wreg
  5435 ;; Tracked objects:
  5436 ;;		On entry : 0/0
  5437 ;;		On exit  : 0/0
  5438 ;;		Unchanged: 0/0
  5439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5440 ;;      Params:         0       2       0       0       0
  5441 ;;      Locals:         0       0       0       0       0
  5442 ;;      Temps:          0       2       0       0       0
  5443 ;;      Totals:         0       4       0       0       0
  5444 ;;Total ram usage:        4 bytes
  5445 ;; Hardware stack levels used: 1
  5446 ;; Hardware stack levels required when called: 2
  5447 ;; This function calls:
  5448 ;;		Nothing
  5449 ;; This function is called by:
  5450 ;;		_main
  5451 ;; This function uses a non-reentrant model
  5452 ;;
  5453                           
  5454     1D90                     _readEEPROM:	
  5455                           ;psect for function _readEEPROM
  5456                           
  5457     1D90                     l2888:	
  5458                           ;incstack = 0
  5459                           ; Regs used in _readEEPROM: [wreg]
  5460                           
  5461                           
  5462                           ;main1.c: 71:     EEADR = address;
  5463     1D90  1283               	bcf	3,5	;RP0=0, select bank0
  5464     1D91  1303               	bcf	3,6	;RP1=0, select bank0
  5465     1D92  0826               	movf	readEEPROM@address,w
  5466     1D93  1283               	bcf	3,5	;RP0=0, select bank2
  5467     1D94  1703               	bsf	3,6	;RP1=1, select bank2
  5468     1D95  008D               	movwf	13	;volatile
  5469     1D96                     l2890:
  5470                           
  5471                           ;main1.c: 72:     RD = 1;
  5472     1D96  1683               	bsf	3,5	;RP0=1, select bank3
  5473     1D97  1703               	bsf	3,6	;RP1=1, select bank3
  5474     1D98  140C               	bsf	12,0	;volsfr
  5475                           
  5476                           ;main1.c: 73:     return EEDATA;
  5477     1D99  1283               	bcf	3,5	;RP0=0, select bank2
  5478     1D9A  1703               	bsf	3,6	;RP1=1, select bank2
  5479     1D9B  080C               	movf	12,w	;volatile
  5480     1D9C  1283               	bcf	3,5	;RP0=0, select bank0
  5481     1D9D  1303               	bcf	3,6	;RP1=0, select bank0
  5482     1D9E  00A8               	movwf	??_readEEPROM
  5483     1D9F  01A9               	clrf	??_readEEPROM+1
  5484     1DA0  0828               	movf	??_readEEPROM,w
  5485     1DA1  00A6               	movwf	?_readEEPROM
  5486     1DA2  0829               	movf	??_readEEPROM+1,w
  5487     1DA3  00A7               	movwf	?_readEEPROM+1
  5488     1DA4                     l192:
  5489     1DA4  0008               	return
  5490     1DA5                     __end_of_readEEPROM:
  5491                           
  5492                           	psect	text24
  5493     13D8                     __ptext24:	
  5494 ;; *************** function ___xxtofl *****************
  5495 ;; Defined at:
  5496 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\xxtofl.c"
  5497 ;; Parameters:    Size  Location     Type
  5498 ;;  sign            1    wreg     unsigned char 
  5499 ;;  val             4    0[BANK0 ] long 
  5500 ;; Auto vars:     Size  Location     Type
  5501 ;;  sign            1    8[BANK0 ] unsigned char 
  5502 ;;  arg             4   10[BANK0 ] unsigned long 
  5503 ;;  exp             1    9[BANK0 ] unsigned char 
  5504 ;; Return value:  Size  Location     Type
  5505 ;;                  4    0[BANK0 ] unsigned char 
  5506 ;; Registers used:
  5507 ;;		wreg, status,2, status,0, btemp+1
  5508 ;; Tracked objects:
  5509 ;;		On entry : 0/0
  5510 ;;		On exit  : 0/0
  5511 ;;		Unchanged: 0/0
  5512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5513 ;;      Params:         0       4       0       0       0
  5514 ;;      Locals:         0       6       0       0       0
  5515 ;;      Temps:          0       4       0       0       0
  5516 ;;      Totals:         0      14       0       0       0
  5517 ;;Total ram usage:       14 bytes
  5518 ;; Hardware stack levels used: 1
  5519 ;; Hardware stack levels required when called: 2
  5520 ;; This function calls:
  5521 ;;		Nothing
  5522 ;; This function is called by:
  5523 ;;		_main
  5524 ;; This function uses a non-reentrant model
  5525 ;;
  5526                           
  5527     13D8                     ___xxtofl:	
  5528                           ;psect for function ___xxtofl
  5529                           
  5530                           
  5531                           ;incstack = 0
  5532                           ; Regs used in ___xxtofl: [wreg+status,2+status,0+btemp+1]
  5533                           ;___xxtofl@sign stored from wreg
  5534     13D8  1283               	bcf	3,5	;RP0=0, select bank0
  5535     13D9  1303               	bcf	3,6	;RP1=0, select bank0
  5536     13DA  00A8               	movwf	___xxtofl@sign
  5537     13DB                     l3240:
  5538     13DB  0828               	movf	___xxtofl@sign,w
  5539     13DC  1903               	btfsc	3,2
  5540     13DD  2BDF               	goto	u4211
  5541     13DE  2BE0               	goto	u4210
  5542     13DF                     u4211:
  5543     13DF  2BF4               	goto	l3246
  5544     13E0                     u4210:
  5545     13E0                     l3242:
  5546     13E0  1FA3               	btfss	___xxtofl@val+3,7
  5547     13E1  2BE3               	goto	u4221
  5548     13E2  2BE4               	goto	u4220
  5549     13E3                     u4221:
  5550     13E3  2BF4               	goto	l3246
  5551     13E4                     u4220:
  5552     13E4                     l3244:
  5553     13E4  0920               	comf	___xxtofl@val,w
  5554     13E5  00AA               	movwf	___xxtofl@arg
  5555     13E6  0921               	comf	___xxtofl@val+1,w
  5556     13E7  00AB               	movwf	___xxtofl@arg+1
  5557     13E8  0922               	comf	___xxtofl@val+2,w
  5558     13E9  00AC               	movwf	___xxtofl@arg+2
  5559     13EA  0923               	comf	___xxtofl@val+3,w
  5560     13EB  00AD               	movwf	___xxtofl@arg+3
  5561     13EC  0AAA               	incf	___xxtofl@arg,f
  5562     13ED  1903               	skipnz
  5563     13EE  0AAB               	incf	___xxtofl@arg+1,f
  5564     13EF  1903               	skipnz
  5565     13F0  0AAC               	incf	___xxtofl@arg+2,f
  5566     13F1  1903               	skipnz
  5567     13F2  0AAD               	incf	___xxtofl@arg+3,f
  5568     13F3  2BFC               	goto	l812
  5569     13F4                     l3246:
  5570     13F4  0823               	movf	___xxtofl@val+3,w
  5571     13F5  00AD               	movwf	___xxtofl@arg+3
  5572     13F6  0822               	movf	___xxtofl@val+2,w
  5573     13F7  00AC               	movwf	___xxtofl@arg+2
  5574     13F8  0821               	movf	___xxtofl@val+1,w
  5575     13F9  00AB               	movwf	___xxtofl@arg+1
  5576     13FA  0820               	movf	___xxtofl@val,w
  5577     13FB  00AA               	movwf	___xxtofl@arg
  5578     13FC                     l812:
  5579     13FC  0823               	movf	___xxtofl@val+3,w
  5580     13FD  0422               	iorwf	___xxtofl@val+2,w
  5581     13FE  0421               	iorwf	___xxtofl@val+1,w
  5582     13FF  0420               	iorwf	___xxtofl@val,w
  5583     1400  1D03               	skipz
  5584     1401  2C03               	goto	u4231
  5585     1402  2C04               	goto	u4230
  5586     1403                     u4231:
  5587     1403  2C0D               	goto	l3252
  5588     1404                     u4230:
  5589     1404                     l3248:
  5590     1404  3000               	movlw	0
  5591     1405  00A3               	movwf	?___xxtofl+3
  5592     1406  3000               	movlw	0
  5593     1407  00A2               	movwf	?___xxtofl+2
  5594     1408  3000               	movlw	0
  5595     1409  00A1               	movwf	?___xxtofl+1
  5596     140A  3000               	movlw	0
  5597     140B  00A0               	movwf	?___xxtofl
  5598     140C  2C91               	goto	l814
  5599     140D                     l3252:
  5600     140D  3096               	movlw	150
  5601     140E  00A9               	movwf	___xxtofl@exp
  5602     140F  2C1D               	goto	l3258
  5603     1410                     l3254:
  5604     1410  3001               	movlw	1
  5605     1411  00FF               	movwf	btemp+1
  5606     1412  087F               	movf	btemp+1,w
  5607     1413  07A9               	addwf	___xxtofl@exp,f
  5608     1414                     l3256:
  5609     1414  3001               	movlw	1
  5610     1415                     u4245:
  5611     1415  1003               	clrc
  5612     1416  0CAD               	rrf	___xxtofl@arg+3,f
  5613     1417  0CAC               	rrf	___xxtofl@arg+2,f
  5614     1418  0CAB               	rrf	___xxtofl@arg+1,f
  5615     1419  0CAA               	rrf	___xxtofl@arg,f
  5616     141A  3EFF               	addlw	-1
  5617     141B  1D03               	skipz
  5618     141C  2C15               	goto	u4245
  5619     141D                     l3258:
  5620     141D  30FE               	movlw	254
  5621     141E  052D               	andwf	___xxtofl@arg+3,w
  5622     141F  1D03               	btfss	3,2
  5623     1420  2C22               	goto	u4251
  5624     1421  2C23               	goto	u4250
  5625     1422                     u4251:
  5626     1422  2C10               	goto	l3254
  5627     1423                     u4250:
  5628     1423  2C3F               	goto	l3266
  5629     1424                     l3260:
  5630     1424  3001               	movlw	1
  5631     1425  00FF               	movwf	btemp+1
  5632     1426  087F               	movf	btemp+1,w
  5633     1427  07A9               	addwf	___xxtofl@exp,f
  5634     1428                     l3262:
  5635     1428  3001               	movlw	1
  5636     1429  07AA               	addwf	___xxtofl@arg,f
  5637     142A  3000               	movlw	0
  5638     142B  1803               	skipnc
  5639     142C  3001               	movlw	1
  5640     142D  07AB               	addwf	___xxtofl@arg+1,f
  5641     142E  3000               	movlw	0
  5642     142F  1803               	skipnc
  5643     1430  3001               	movlw	1
  5644     1431  07AC               	addwf	___xxtofl@arg+2,f
  5645     1432  3000               	movlw	0
  5646     1433  1803               	skipnc
  5647     1434  3001               	movlw	1
  5648     1435  07AD               	addwf	___xxtofl@arg+3,f
  5649     1436                     l3264:
  5650     1436  3001               	movlw	1
  5651     1437                     u4265:
  5652     1437  1003               	clrc
  5653     1438  0CAD               	rrf	___xxtofl@arg+3,f
  5654     1439  0CAC               	rrf	___xxtofl@arg+2,f
  5655     143A  0CAB               	rrf	___xxtofl@arg+1,f
  5656     143B  0CAA               	rrf	___xxtofl@arg,f
  5657     143C  3EFF               	addlw	-1
  5658     143D  1D03               	skipz
  5659     143E  2C37               	goto	u4265
  5660     143F                     l3266:
  5661     143F  30FF               	movlw	255
  5662     1440  052D               	andwf	___xxtofl@arg+3,w
  5663     1441  1D03               	btfss	3,2
  5664     1442  2C44               	goto	u4271
  5665     1443  2C45               	goto	u4270
  5666     1444                     u4271:
  5667     1444  2C24               	goto	l3260
  5668     1445                     u4270:
  5669     1445  2C51               	goto	l3270
  5670     1446                     l3268:
  5671     1446  3001               	movlw	1
  5672     1447  02A9               	subwf	___xxtofl@exp,f
  5673     1448  3001               	movlw	1
  5674     1449  00A4               	movwf	??___xxtofl
  5675     144A                     u4285:
  5676     144A  1003               	clrc
  5677     144B  0DAA               	rlf	___xxtofl@arg,f
  5678     144C  0DAB               	rlf	___xxtofl@arg+1,f
  5679     144D  0DAC               	rlf	___xxtofl@arg+2,f
  5680     144E  0DAD               	rlf	___xxtofl@arg+3,f
  5681     144F  0BA4               	decfsz	??___xxtofl,f
  5682     1450  2C4A               	goto	u4285
  5683     1451                     l3270:
  5684     1451  1BAC               	btfsc	___xxtofl@arg+2,7
  5685     1452  2C54               	goto	u4291
  5686     1453  2C55               	goto	u4290
  5687     1454                     u4291:
  5688     1454  2C5B               	goto	l825
  5689     1455                     u4290:
  5690     1455                     l3272:
  5691     1455  3002               	movlw	2
  5692     1456  0229               	subwf	___xxtofl@exp,w
  5693     1457  1803               	skipnc
  5694     1458  2C5A               	goto	u4301
  5695     1459  2C5B               	goto	u4300
  5696     145A                     u4301:
  5697     145A  2C46               	goto	l3268
  5698     145B                     u4300:
  5699     145B                     l825:
  5700     145B  1829               	btfsc	___xxtofl@exp,0
  5701     145C  2C5E               	goto	u4311
  5702     145D  2C5F               	goto	u4310
  5703     145E                     u4311:
  5704     145E  2C67               	goto	l826
  5705     145F                     u4310:
  5706     145F                     l3274:
  5707     145F  30FF               	movlw	255
  5708     1460  05AA               	andwf	___xxtofl@arg,f
  5709     1461  30FF               	movlw	255
  5710     1462  05AB               	andwf	___xxtofl@arg+1,f
  5711     1463  307F               	movlw	127
  5712     1464  05AC               	andwf	___xxtofl@arg+2,f
  5713     1465  30FF               	movlw	255
  5714     1466  05AD               	andwf	___xxtofl@arg+3,f
  5715     1467                     l826:
  5716     1467  1003               	clrc
  5717     1468  0CA9               	rrf	___xxtofl@exp,f
  5718     1469                     l3276:
  5719     1469  0829               	movf	___xxtofl@exp,w
  5720     146A  00A4               	movwf	??___xxtofl
  5721     146B  01A5               	clrf	??___xxtofl+1
  5722     146C  01A6               	clrf	??___xxtofl+2
  5723     146D  01A7               	clrf	??___xxtofl+3
  5724     146E  3018               	movlw	24
  5725     146F                     u4325:
  5726     146F  1003               	clrc
  5727     1470  0DA4               	rlf	??___xxtofl,f
  5728     1471  0DA5               	rlf	??___xxtofl+1,f
  5729     1472  0DA6               	rlf	??___xxtofl+2,f
  5730     1473  0DA7               	rlf	??___xxtofl+3,f
  5731     1474                     u4320:
  5732     1474  3EFF               	addlw	-1
  5733     1475  1D03               	skipz
  5734     1476  2C6F               	goto	u4325
  5735     1477  0824               	movf	??___xxtofl,w
  5736     1478  04AA               	iorwf	___xxtofl@arg,f
  5737     1479  0825               	movf	??___xxtofl+1,w
  5738     147A  04AB               	iorwf	___xxtofl@arg+1,f
  5739     147B  0826               	movf	??___xxtofl+2,w
  5740     147C  04AC               	iorwf	___xxtofl@arg+2,f
  5741     147D  0827               	movf	??___xxtofl+3,w
  5742     147E  04AD               	iorwf	___xxtofl@arg+3,f
  5743     147F                     l3278:
  5744     147F  0828               	movf	___xxtofl@sign,w
  5745     1480  1903               	btfsc	3,2
  5746     1481  2C83               	goto	u4331
  5747     1482  2C84               	goto	u4330
  5748     1483                     u4331:
  5749     1483  2C89               	goto	l3284
  5750     1484                     u4330:
  5751     1484                     l3280:
  5752     1484  1FA3               	btfss	___xxtofl@val+3,7
  5753     1485  2C87               	goto	u4341
  5754     1486  2C88               	goto	u4340
  5755     1487                     u4341:
  5756     1487  2C89               	goto	l3284
  5757     1488                     u4340:
  5758     1488                     l3282:
  5759     1488  17AD               	bsf	___xxtofl@arg+3,7
  5760     1489                     l3284:
  5761     1489  082D               	movf	___xxtofl@arg+3,w
  5762     148A  00A3               	movwf	?___xxtofl+3
  5763     148B  082C               	movf	___xxtofl@arg+2,w
  5764     148C  00A2               	movwf	?___xxtofl+2
  5765     148D  082B               	movf	___xxtofl@arg+1,w
  5766     148E  00A1               	movwf	?___xxtofl+1
  5767     148F  082A               	movf	___xxtofl@arg,w
  5768     1490  00A0               	movwf	?___xxtofl
  5769     1491                     l814:
  5770     1491  0008               	return
  5771     1492                     __end_of___xxtofl:
  5772                           
  5773                           	psect	text25
  5774     12E4                     __ptext25:	
  5775 ;; *************** function ___fltol *****************
  5776 ;; Defined at:
  5777 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fltol.c"
  5778 ;; Parameters:    Size  Location     Type
  5779 ;;  f1              4    0[BANK0 ] unsigned char 
  5780 ;; Auto vars:     Size  Location     Type
  5781 ;;  exp1            1    9[BANK0 ] unsigned char 
  5782 ;;  sign1           1    8[BANK0 ] unsigned char 
  5783 ;; Return value:  Size  Location     Type
  5784 ;;                  4    0[BANK0 ] long 
  5785 ;; Registers used:
  5786 ;;		wreg, status,2, status,0, btemp+1
  5787 ;; Tracked objects:
  5788 ;;		On entry : 0/0
  5789 ;;		On exit  : 0/0
  5790 ;;		Unchanged: 0/0
  5791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5792 ;;      Params:         0       4       0       0       0
  5793 ;;      Locals:         0       2       0       0       0
  5794 ;;      Temps:          0       4       0       0       0
  5795 ;;      Totals:         0      10       0       0       0
  5796 ;;Total ram usage:       10 bytes
  5797 ;; Hardware stack levels used: 1
  5798 ;; Hardware stack levels required when called: 2
  5799 ;; This function calls:
  5800 ;;		Nothing
  5801 ;; This function is called by:
  5802 ;;		_main
  5803 ;; This function uses a non-reentrant model
  5804 ;;
  5805                           
  5806     12E4                     ___fltol:	
  5807                           ;psect for function ___fltol
  5808                           
  5809     12E4                     l2914:	
  5810                           ;incstack = 0
  5811                           ; Regs used in ___fltol: [wreg+status,2+status,0+btemp+1]
  5812                           
  5813     12E4  1003               	clrc
  5814     12E5  1283               	bcf	3,5	;RP0=0, select bank0
  5815     12E6  1303               	bcf	3,6	;RP1=0, select bank0
  5816     12E7  0D22               	rlf	___fltol@f1+2,w
  5817     12E8  0D23               	rlf	___fltol@f1+3,w
  5818     12E9  00A9               	movwf	___fltol@exp1
  5819     12EA  0829               	movf	___fltol@exp1,w
  5820     12EB  1D03               	btfss	3,2
  5821     12EC  2AEE               	goto	u3451
  5822     12ED  2AEF               	goto	u3450
  5823     12EE                     u3451:
  5824     12EE  2AF8               	goto	l2920
  5825     12EF                     u3450:
  5826     12EF                     l2916:
  5827     12EF  3000               	movlw	0
  5828     12F0  00A3               	movwf	?___fltol+3
  5829     12F1  3000               	movlw	0
  5830     12F2  00A2               	movwf	?___fltol+2
  5831     12F3  3000               	movlw	0
  5832     12F4  00A1               	movwf	?___fltol+1
  5833     12F5  3000               	movlw	0
  5834     12F6  00A0               	movwf	?___fltol
  5835     12F7  2B5B               	goto	l565
  5836     12F8                     l2920:
  5837     12F8  0820               	movf	___fltol@f1,w
  5838     12F9  00A4               	movwf	??___fltol
  5839     12FA  0821               	movf	___fltol@f1+1,w
  5840     12FB  00A5               	movwf	??___fltol+1
  5841     12FC  0822               	movf	___fltol@f1+2,w
  5842     12FD  00A6               	movwf	??___fltol+2
  5843     12FE  0823               	movf	___fltol@f1+3,w
  5844     12FF  00A7               	movwf	??___fltol+3
  5845     1300  301F               	movlw	31
  5846     1301                     u3465:
  5847     1301  1003               	clrc
  5848     1302  0CA7               	rrf	??___fltol+3,f
  5849     1303  0CA6               	rrf	??___fltol+2,f
  5850     1304  0CA5               	rrf	??___fltol+1,f
  5851     1305  0CA4               	rrf	??___fltol,f
  5852     1306                     u3460:
  5853     1306  3EFF               	addlw	-1
  5854     1307  1D03               	skipz
  5855     1308  2B01               	goto	u3465
  5856     1309  0824               	movf	??___fltol,w
  5857     130A  00A8               	movwf	___fltol@sign1
  5858     130B                     l2922:
  5859     130B  17A2               	bsf	___fltol@f1+2,7
  5860     130C                     l2924:
  5861     130C  30FF               	movlw	255
  5862     130D  05A0               	andwf	___fltol@f1,f
  5863     130E  30FF               	movlw	255
  5864     130F  05A1               	andwf	___fltol@f1+1,f
  5865     1310  30FF               	movlw	255
  5866     1311  05A2               	andwf	___fltol@f1+2,f
  5867     1312  3000               	movlw	0
  5868     1313  05A3               	andwf	___fltol@f1+3,f
  5869     1314                     l2926:
  5870     1314  3096               	movlw	150
  5871     1315  02A9               	subwf	___fltol@exp1,f
  5872     1316                     l2928:
  5873     1316  1FA9               	btfss	___fltol@exp1,7
  5874     1317  2B19               	goto	u3471
  5875     1318  2B1A               	goto	u3470
  5876     1319                     u3471:
  5877     1319  2B34               	goto	l2940
  5878     131A                     u3470:
  5879     131A                     l2930:
  5880     131A  0829               	movf	___fltol@exp1,w
  5881     131B  3A80               	xorlw	128
  5882     131C  3E97               	addlw	151
  5883     131D  1803               	skipnc
  5884     131E  2B20               	goto	u3481
  5885     131F  2B21               	goto	u3480
  5886     1320                     u3481:
  5887     1320  2B22               	goto	l2936
  5888     1321                     u3480:
  5889     1321  2AEF               	goto	l2916
  5890     1322                     l2936:
  5891     1322  3001               	movlw	1
  5892     1323                     u3495:
  5893     1323  1003               	clrc
  5894     1324  0CA3               	rrf	___fltol@f1+3,f
  5895     1325  0CA2               	rrf	___fltol@f1+2,f
  5896     1326  0CA1               	rrf	___fltol@f1+1,f
  5897     1327  0CA0               	rrf	___fltol@f1,f
  5898     1328  3EFF               	addlw	-1
  5899     1329  1D03               	skipz
  5900     132A  2B23               	goto	u3495
  5901     132B                     l2938:
  5902     132B  3001               	movlw	1
  5903     132C  00FF               	movwf	btemp+1
  5904     132D  087F               	movf	btemp+1,w
  5905     132E  07A9               	addwf	___fltol@exp1,f
  5906     132F  1D03               	btfss	3,2
  5907     1330  2B32               	goto	u3501
  5908     1331  2B33               	goto	u3500
  5909     1332                     u3501:
  5910     1332  2B22               	goto	l2936
  5911     1333                     u3500:
  5912     1333  2B4B               	goto	l2948
  5913     1334                     l2940:
  5914     1334  3020               	movlw	32
  5915     1335  0229               	subwf	___fltol@exp1,w
  5916     1336  1C03               	skipc
  5917     1337  2B39               	goto	u3511
  5918     1338  2B3A               	goto	u3510
  5919     1339                     u3511:
  5920     1339  2B46               	goto	l572
  5921     133A                     u3510:
  5922     133A  2AEF               	goto	l2916
  5923     133B                     l2946:
  5924     133B  3001               	movlw	1
  5925     133C  00A4               	movwf	??___fltol
  5926     133D                     u3525:
  5927     133D  1003               	clrc
  5928     133E  0DA0               	rlf	___fltol@f1,f
  5929     133F  0DA1               	rlf	___fltol@f1+1,f
  5930     1340  0DA2               	rlf	___fltol@f1+2,f
  5931     1341  0DA3               	rlf	___fltol@f1+3,f
  5932     1342  0BA4               	decfsz	??___fltol,f
  5933     1343  2B3D               	goto	u3525
  5934     1344  3001               	movlw	1
  5935     1345  02A9               	subwf	___fltol@exp1,f
  5936     1346                     l572:
  5937     1346  0829               	movf	___fltol@exp1,w
  5938     1347  1D03               	btfss	3,2
  5939     1348  2B4A               	goto	u3531
  5940     1349  2B4B               	goto	u3530
  5941     134A                     u3531:
  5942     134A  2B3B               	goto	l2946
  5943     134B                     u3530:
  5944     134B                     l2948:
  5945     134B  0828               	movf	___fltol@sign1,w
  5946     134C  1903               	btfsc	3,2
  5947     134D  2B4F               	goto	u3541
  5948     134E  2B50               	goto	u3540
  5949     134F                     u3541:
  5950     134F  2B5B               	goto	l575
  5951     1350                     u3540:
  5952     1350                     l2950:
  5953     1350  09A0               	comf	___fltol@f1,f
  5954     1351  09A1               	comf	___fltol@f1+1,f
  5955     1352  09A2               	comf	___fltol@f1+2,f
  5956     1353  09A3               	comf	___fltol@f1+3,f
  5957     1354  0AA0               	incf	___fltol@f1,f
  5958     1355  1903               	skipnz
  5959     1356  0AA1               	incf	___fltol@f1+1,f
  5960     1357  1903               	skipnz
  5961     1358  0AA2               	incf	___fltol@f1+2,f
  5962     1359  1903               	skipnz
  5963     135A  0AA3               	incf	___fltol@f1+3,f
  5964     135B                     l575:
  5965     135B                     l565:
  5966     135B  0008               	return
  5967     135C                     __end_of___fltol:
  5968                           
  5969                           	psect	text26
  5970     0831                     __ptext26:	
  5971 ;; *************** function ___flmul *****************
  5972 ;; Defined at:
  5973 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcmul.c"
  5974 ;; Parameters:    Size  Location     Type
  5975 ;;  b               4   26[BANK0 ] long 
  5976 ;;  a               4   30[BANK0 ] long 
  5977 ;; Auto vars:     Size  Location     Type
  5978 ;;  prod            4   46[BANK0 ] struct .
  5979 ;;  grs             4   40[BANK0 ] unsigned long 
  5980 ;;  temp            2   50[BANK0 ] struct .
  5981 ;;  bexp            1   45[BANK0 ] unsigned char 
  5982 ;;  aexp            1   44[BANK0 ] unsigned char 
  5983 ;;  sign            1   39[BANK0 ] unsigned char 
  5984 ;; Return value:  Size  Location     Type
  5985 ;;                  4   26[BANK0 ] unsigned char 
  5986 ;; Registers used:
  5987 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5988 ;; Tracked objects:
  5989 ;;		On entry : 0/0
  5990 ;;		On exit  : 0/0
  5991 ;;		Unchanged: 0/0
  5992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5993 ;;      Params:         0       8       0       0       0
  5994 ;;      Locals:         0      13       0       0       0
  5995 ;;      Temps:          0       5       0       0       0
  5996 ;;      Totals:         0      26       0       0       0
  5997 ;;Total ram usage:       26 bytes
  5998 ;; Hardware stack levels used: 1
  5999 ;; Hardware stack levels required when called: 3
  6000 ;; This function calls:
  6001 ;;		__Umul8_16
  6002 ;; This function is called by:
  6003 ;;		_main
  6004 ;; This function uses a non-reentrant model
  6005 ;;
  6006                           
  6007     0831                     ___flmul:	
  6008                           ;psect for function ___flmul
  6009                           
  6010     0831                     l3098:	
  6011                           ;incstack = 0
  6012                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6013                           
  6014     0831  1283               	bcf	3,5	;RP0=0, select bank0
  6015     0832  1303               	bcf	3,6	;RP1=0, select bank0
  6016     0833  083D               	movf	___flmul@b+3,w
  6017     0834  3980               	andlw	128
  6018     0835  00C7               	movwf	___flmul@sign
  6019     0836                     l3100:
  6020     0836  083D               	movf	___flmul@b+3,w
  6021     0837  00C2               	movwf	??___flmul
  6022     0838  0742               	addwf	??___flmul,w
  6023     0839  00CD               	movwf	___flmul@bexp
  6024     083A                     l3102:
  6025     083A  1FBC               	btfss	___flmul@b+2,7
  6026     083B  283D               	goto	u3841
  6027     083C  283E               	goto	u3840
  6028     083D                     u3841:
  6029     083D  283F               	goto	l3106
  6030     083E                     u3840:
  6031     083E                     l3104:
  6032     083E  144D               	bsf	___flmul@bexp,0
  6033     083F                     l3106:
  6034     083F  084D               	movf	___flmul@bexp,w
  6035     0840  1903               	btfsc	3,2
  6036     0841  2843               	goto	u3851
  6037     0842  2844               	goto	u3850
  6038     0843                     u3851:
  6039     0843  2853               	goto	l3114
  6040     0844                     u3850:
  6041     0844                     l3108:
  6042     0844  0A4D               	incf	___flmul@bexp,w
  6043     0845  1D03               	btfss	3,2
  6044     0846  2848               	goto	u3861
  6045     0847  2849               	goto	u3860
  6046     0848                     u3861:
  6047     0848  2851               	goto	l3112
  6048     0849                     u3860:
  6049     0849                     l3110:
  6050     0849  3000               	movlw	0
  6051     084A  00BD               	movwf	___flmul@b+3
  6052     084B  3000               	movlw	0
  6053     084C  00BC               	movwf	___flmul@b+2
  6054     084D  3000               	movlw	0
  6055     084E  00BB               	movwf	___flmul@b+1
  6056     084F  3000               	movlw	0
  6057     0850  00BA               	movwf	___flmul@b
  6058     0851                     l3112:
  6059     0851  17BC               	bsf	___flmul@b+2,7
  6060     0852  285B               	goto	l3116
  6061     0853                     l3114:
  6062     0853  3000               	movlw	0
  6063     0854  00BD               	movwf	___flmul@b+3
  6064     0855  3000               	movlw	0
  6065     0856  00BC               	movwf	___flmul@b+2
  6066     0857  3000               	movlw	0
  6067     0858  00BB               	movwf	___flmul@b+1
  6068     0859  3000               	movlw	0
  6069     085A  00BA               	movwf	___flmul@b
  6070     085B                     l3116:
  6071     085B  0841               	movf	___flmul@a+3,w
  6072     085C  3980               	andlw	128
  6073     085D  00FF               	movwf	btemp+1
  6074     085E  087F               	movf	btemp+1,w
  6075     085F  06C7               	xorwf	___flmul@sign,f
  6076     0860                     l3118:
  6077     0860  0841               	movf	___flmul@a+3,w
  6078     0861  00C2               	movwf	??___flmul
  6079     0862  0742               	addwf	??___flmul,w
  6080     0863  00CC               	movwf	___flmul@aexp
  6081     0864                     l3120:
  6082     0864  1FC0               	btfss	___flmul@a+2,7
  6083     0865  2867               	goto	u3871
  6084     0866  2868               	goto	u3870
  6085     0867                     u3871:
  6086     0867  2869               	goto	l3124
  6087     0868                     u3870:
  6088     0868                     l3122:
  6089     0868  144C               	bsf	___flmul@aexp,0
  6090     0869                     l3124:
  6091     0869  084C               	movf	___flmul@aexp,w
  6092     086A  1903               	btfsc	3,2
  6093     086B  286D               	goto	u3881
  6094     086C  286E               	goto	u3880
  6095     086D                     u3881:
  6096     086D  287D               	goto	l3132
  6097     086E                     u3880:
  6098     086E                     l3126:
  6099     086E  0A4C               	incf	___flmul@aexp,w
  6100     086F  1D03               	btfss	3,2
  6101     0870  2872               	goto	u3891
  6102     0871  2873               	goto	u3890
  6103     0872                     u3891:
  6104     0872  287B               	goto	l3130
  6105     0873                     u3890:
  6106     0873                     l3128:
  6107     0873  3000               	movlw	0
  6108     0874  00C1               	movwf	___flmul@a+3
  6109     0875  3000               	movlw	0
  6110     0876  00C0               	movwf	___flmul@a+2
  6111     0877  3000               	movlw	0
  6112     0878  00BF               	movwf	___flmul@a+1
  6113     0879  3000               	movlw	0
  6114     087A  00BE               	movwf	___flmul@a
  6115     087B                     l3130:
  6116     087B  17C0               	bsf	___flmul@a+2,7
  6117     087C  2885               	goto	l3134
  6118     087D                     l3132:
  6119     087D  3000               	movlw	0
  6120     087E  00C1               	movwf	___flmul@a+3
  6121     087F  3000               	movlw	0
  6122     0880  00C0               	movwf	___flmul@a+2
  6123     0881  3000               	movlw	0
  6124     0882  00BF               	movwf	___flmul@a+1
  6125     0883  3000               	movlw	0
  6126     0884  00BE               	movwf	___flmul@a
  6127     0885                     l3134:
  6128     0885  084C               	movf	___flmul@aexp,w
  6129     0886  1903               	btfsc	3,2
  6130     0887  2889               	goto	u3901
  6131     0888  288A               	goto	u3900
  6132     0889                     u3901:
  6133     0889  288F               	goto	l3138
  6134     088A                     u3900:
  6135     088A                     l3136:
  6136     088A  084D               	movf	___flmul@bexp,w
  6137     088B  1D03               	btfss	3,2
  6138     088C  288E               	goto	u3911
  6139     088D  288F               	goto	u3910
  6140     088E                     u3911:
  6141     088E  2898               	goto	l3142
  6142     088F                     u3910:
  6143     088F                     l3138:
  6144     088F  3000               	movlw	0
  6145     0890  00BD               	movwf	?___flmul+3
  6146     0891  3000               	movlw	0
  6147     0892  00BC               	movwf	?___flmul+2
  6148     0893  3000               	movlw	0
  6149     0894  00BB               	movwf	?___flmul+1
  6150     0895  3000               	movlw	0
  6151     0896  00BA               	movwf	?___flmul
  6152     0897  2B75               	goto	l768
  6153     0898                     l3142:
  6154     0898  083A               	movf	___flmul@b,w
  6155     0899  00A0               	movwf	__Umul8_16@multiplicand
  6156     089A  0840               	movf	___flmul@a+2,w
  6157     089B  160A  158A  2680  120A  158A  	fcall	__Umul8_16
  6158     08A0  1283               	bcf	3,5	;RP0=0, select bank0
  6159     08A1  1303               	bcf	3,6	;RP1=0, select bank0
  6160     08A2  0821               	movf	?__Umul8_16+1,w
  6161     08A3  00D3               	movwf	___flmul@temp+1
  6162     08A4  0820               	movf	?__Umul8_16,w
  6163     08A5  00D2               	movwf	___flmul@temp
  6164     08A6                     l3144:
  6165     08A6  0852               	movf	___flmul@temp,w
  6166     08A7  00C2               	movwf	??___flmul
  6167     08A8  01C3               	clrf	??___flmul+1
  6168     08A9  01C4               	clrf	??___flmul+2
  6169     08AA  01C5               	clrf	??___flmul+3
  6170     08AB  0845               	movf	??___flmul+3,w
  6171     08AC  00CB               	movwf	___flmul@grs+3
  6172     08AD  0844               	movf	??___flmul+2,w
  6173     08AE  00CA               	movwf	___flmul@grs+2
  6174     08AF  0843               	movf	??___flmul+1,w
  6175     08B0  00C9               	movwf	___flmul@grs+1
  6176     08B1  0842               	movf	??___flmul,w
  6177     08B2  00C8               	movwf	___flmul@grs
  6178     08B3                     l3146:
  6179     08B3  0853               	movf	___flmul@temp+1,w
  6180     08B4  00C2               	movwf	??___flmul
  6181     08B5  01C3               	clrf	??___flmul+1
  6182     08B6  01C4               	clrf	??___flmul+2
  6183     08B7  01C5               	clrf	??___flmul+3
  6184     08B8  0845               	movf	??___flmul+3,w
  6185     08B9  00D1               	movwf	___flmul@prod+3
  6186     08BA  0844               	movf	??___flmul+2,w
  6187     08BB  00D0               	movwf	___flmul@prod+2
  6188     08BC  0843               	movf	??___flmul+1,w
  6189     08BD  00CF               	movwf	___flmul@prod+1
  6190     08BE  0842               	movf	??___flmul,w
  6191     08BF  00CE               	movwf	___flmul@prod
  6192     08C0  083B               	movf	___flmul@b+1,w
  6193     08C1  00A0               	movwf	__Umul8_16@multiplicand
  6194     08C2  083F               	movf	___flmul@a+1,w
  6195     08C3  160A  158A  2680  120A  158A  	fcall	__Umul8_16
  6196     08C8  1283               	bcf	3,5	;RP0=0, select bank0
  6197     08C9  1303               	bcf	3,6	;RP1=0, select bank0
  6198     08CA  0821               	movf	?__Umul8_16+1,w
  6199     08CB  00D3               	movwf	___flmul@temp+1
  6200     08CC  0820               	movf	?__Umul8_16,w
  6201     08CD  00D2               	movwf	___flmul@temp
  6202     08CE                     l3148:
  6203     08CE  0852               	movf	___flmul@temp,w
  6204     08CF  00C2               	movwf	??___flmul
  6205     08D0  01C3               	clrf	??___flmul+1
  6206     08D1  01C4               	clrf	??___flmul+2
  6207     08D2  01C5               	clrf	??___flmul+3
  6208     08D3  0842               	movf	??___flmul,w
  6209     08D4  07C8               	addwf	___flmul@grs,f
  6210     08D5  0843               	movf	??___flmul+1,w
  6211     08D6  1103               	clrz
  6212     08D7  1803               	skipnc
  6213     08D8  3E01               	addlw	1
  6214     08D9  1903               	skipnz
  6215     08DA  28DC               	goto	u3921
  6216     08DB  07C9               	addwf	___flmul@grs+1,f
  6217     08DC                     u3921:
  6218     08DC  0844               	movf	??___flmul+2,w
  6219     08DD  1103               	clrz
  6220     08DE  1803               	skipnc
  6221     08DF  3E01               	addlw	1
  6222     08E0  1903               	skipnz
  6223     08E1  28E3               	goto	u3922
  6224     08E2  07CA               	addwf	___flmul@grs+2,f
  6225     08E3                     u3922:
  6226     08E3  0845               	movf	??___flmul+3,w
  6227     08E4  1103               	clrz
  6228     08E5  1803               	skipnc
  6229     08E6  3E01               	addlw	1
  6230     08E7  1903               	skipnz
  6231     08E8  28EA               	goto	u3923
  6232     08E9  07CB               	addwf	___flmul@grs+3,f
  6233     08EA                     u3923:
  6234     08EA                     l3150:
  6235     08EA  0853               	movf	___flmul@temp+1,w
  6236     08EB  00C2               	movwf	??___flmul
  6237     08EC  01C3               	clrf	??___flmul+1
  6238     08ED  01C4               	clrf	??___flmul+2
  6239     08EE  01C5               	clrf	??___flmul+3
  6240     08EF  0842               	movf	??___flmul,w
  6241     08F0  07CE               	addwf	___flmul@prod,f
  6242     08F1  0843               	movf	??___flmul+1,w
  6243     08F2  1103               	clrz
  6244     08F3  1803               	skipnc
  6245     08F4  3E01               	addlw	1
  6246     08F5  1903               	skipnz
  6247     08F6  28F8               	goto	u3931
  6248     08F7  07CF               	addwf	___flmul@prod+1,f
  6249     08F8                     u3931:
  6250     08F8  0844               	movf	??___flmul+2,w
  6251     08F9  1103               	clrz
  6252     08FA  1803               	skipnc
  6253     08FB  3E01               	addlw	1
  6254     08FC  1903               	skipnz
  6255     08FD  28FF               	goto	u3932
  6256     08FE  07D0               	addwf	___flmul@prod+2,f
  6257     08FF                     u3932:
  6258     08FF  0845               	movf	??___flmul+3,w
  6259     0900  1103               	clrz
  6260     0901  1803               	skipnc
  6261     0902  3E01               	addlw	1
  6262     0903  1903               	skipnz
  6263     0904  2906               	goto	u3933
  6264     0905  07D1               	addwf	___flmul@prod+3,f
  6265     0906                     u3933:
  6266     0906  083C               	movf	___flmul@b+2,w
  6267     0907  00A0               	movwf	__Umul8_16@multiplicand
  6268     0908  083E               	movf	___flmul@a,w
  6269     0909  160A  158A  2680  120A  158A  	fcall	__Umul8_16
  6270     090E  1283               	bcf	3,5	;RP0=0, select bank0
  6271     090F  1303               	bcf	3,6	;RP1=0, select bank0
  6272     0910  0821               	movf	?__Umul8_16+1,w
  6273     0911  00D3               	movwf	___flmul@temp+1
  6274     0912  0820               	movf	?__Umul8_16,w
  6275     0913  00D2               	movwf	___flmul@temp
  6276     0914                     l3152:
  6277     0914  0852               	movf	___flmul@temp,w
  6278     0915  00C2               	movwf	??___flmul
  6279     0916  01C3               	clrf	??___flmul+1
  6280     0917  01C4               	clrf	??___flmul+2
  6281     0918  01C5               	clrf	??___flmul+3
  6282     0919  0842               	movf	??___flmul,w
  6283     091A  07C8               	addwf	___flmul@grs,f
  6284     091B  0843               	movf	??___flmul+1,w
  6285     091C  1103               	clrz
  6286     091D  1803               	skipnc
  6287     091E  3E01               	addlw	1
  6288     091F  1903               	skipnz
  6289     0920  2922               	goto	u3941
  6290     0921  07C9               	addwf	___flmul@grs+1,f
  6291     0922                     u3941:
  6292     0922  0844               	movf	??___flmul+2,w
  6293     0923  1103               	clrz
  6294     0924  1803               	skipnc
  6295     0925  3E01               	addlw	1
  6296     0926  1903               	skipnz
  6297     0927  2929               	goto	u3942
  6298     0928  07CA               	addwf	___flmul@grs+2,f
  6299     0929                     u3942:
  6300     0929  0845               	movf	??___flmul+3,w
  6301     092A  1103               	clrz
  6302     092B  1803               	skipnc
  6303     092C  3E01               	addlw	1
  6304     092D  1903               	skipnz
  6305     092E  2930               	goto	u3943
  6306     092F  07CB               	addwf	___flmul@grs+3,f
  6307     0930                     u3943:
  6308     0930                     l3154:
  6309     0930  0853               	movf	___flmul@temp+1,w
  6310     0931  00C2               	movwf	??___flmul
  6311     0932  01C3               	clrf	??___flmul+1
  6312     0933  01C4               	clrf	??___flmul+2
  6313     0934  01C5               	clrf	??___flmul+3
  6314     0935  0842               	movf	??___flmul,w
  6315     0936  07CE               	addwf	___flmul@prod,f
  6316     0937  0843               	movf	??___flmul+1,w
  6317     0938  1103               	clrz
  6318     0939  1803               	skipnc
  6319     093A  3E01               	addlw	1
  6320     093B  1903               	skipnz
  6321     093C  293E               	goto	u3951
  6322     093D  07CF               	addwf	___flmul@prod+1,f
  6323     093E                     u3951:
  6324     093E  0844               	movf	??___flmul+2,w
  6325     093F  1103               	clrz
  6326     0940  1803               	skipnc
  6327     0941  3E01               	addlw	1
  6328     0942  1903               	skipnz
  6329     0943  2945               	goto	u3952
  6330     0944  07D0               	addwf	___flmul@prod+2,f
  6331     0945                     u3952:
  6332     0945  0845               	movf	??___flmul+3,w
  6333     0946  1103               	clrz
  6334     0947  1803               	skipnc
  6335     0948  3E01               	addlw	1
  6336     0949  1903               	skipnz
  6337     094A  294C               	goto	u3953
  6338     094B  07D1               	addwf	___flmul@prod+3,f
  6339     094C                     u3953:
  6340     094C                     l3156:
  6341     094C  3008               	movlw	8
  6342     094D  00C2               	movwf	??___flmul
  6343     094E                     u3965:
  6344     094E  1003               	clrc
  6345     094F  0DC8               	rlf	___flmul@grs,f
  6346     0950  0DC9               	rlf	___flmul@grs+1,f
  6347     0951  0DCA               	rlf	___flmul@grs+2,f
  6348     0952  0DCB               	rlf	___flmul@grs+3,f
  6349     0953  0BC2               	decfsz	??___flmul,f
  6350     0954  294E               	goto	u3965
  6351     0955                     l3158:
  6352     0955  083B               	movf	___flmul@b+1,w
  6353     0956  00A0               	movwf	__Umul8_16@multiplicand
  6354     0957  083E               	movf	___flmul@a,w
  6355     0958  160A  158A  2680  120A  158A  	fcall	__Umul8_16
  6356     095D  1283               	bcf	3,5	;RP0=0, select bank0
  6357     095E  1303               	bcf	3,6	;RP1=0, select bank0
  6358     095F  0821               	movf	?__Umul8_16+1,w
  6359     0960  00D3               	movwf	___flmul@temp+1
  6360     0961  0820               	movf	?__Umul8_16,w
  6361     0962  00D2               	movwf	___flmul@temp
  6362     0963                     l3160:
  6363     0963  0852               	movf	___flmul@temp,w
  6364     0964  00C2               	movwf	??___flmul
  6365     0965  0853               	movf	___flmul@temp+1,w
  6366     0966  00C3               	movwf	??___flmul+1
  6367     0967  01C4               	clrf	??___flmul+2
  6368     0968  01C5               	clrf	??___flmul+3
  6369     0969  0842               	movf	??___flmul,w
  6370     096A  07C8               	addwf	___flmul@grs,f
  6371     096B  0843               	movf	??___flmul+1,w
  6372     096C  1103               	clrz
  6373     096D  1803               	skipnc
  6374     096E  3E01               	addlw	1
  6375     096F  1903               	skipnz
  6376     0970  2972               	goto	u3971
  6377     0971  07C9               	addwf	___flmul@grs+1,f
  6378     0972                     u3971:
  6379     0972  0844               	movf	??___flmul+2,w
  6380     0973  1103               	clrz
  6381     0974  1803               	skipnc
  6382     0975  3E01               	addlw	1
  6383     0976  1903               	skipnz
  6384     0977  2979               	goto	u3972
  6385     0978  07CA               	addwf	___flmul@grs+2,f
  6386     0979                     u3972:
  6387     0979  0845               	movf	??___flmul+3,w
  6388     097A  1103               	clrz
  6389     097B  1803               	skipnc
  6390     097C  3E01               	addlw	1
  6391     097D  1903               	skipnz
  6392     097E  2980               	goto	u3973
  6393     097F  07CB               	addwf	___flmul@grs+3,f
  6394     0980                     u3973:
  6395     0980                     l3162:
  6396     0980  083A               	movf	___flmul@b,w
  6397     0981  00A0               	movwf	__Umul8_16@multiplicand
  6398     0982  083F               	movf	___flmul@a+1,w
  6399     0983  160A  158A  2680  120A  158A  	fcall	__Umul8_16
  6400     0988  1283               	bcf	3,5	;RP0=0, select bank0
  6401     0989  1303               	bcf	3,6	;RP1=0, select bank0
  6402     098A  0821               	movf	?__Umul8_16+1,w
  6403     098B  00D3               	movwf	___flmul@temp+1
  6404     098C  0820               	movf	?__Umul8_16,w
  6405     098D  00D2               	movwf	___flmul@temp
  6406     098E                     l3164:
  6407     098E  0852               	movf	___flmul@temp,w
  6408     098F  00C2               	movwf	??___flmul
  6409     0990  0853               	movf	___flmul@temp+1,w
  6410     0991  00C3               	movwf	??___flmul+1
  6411     0992  01C4               	clrf	??___flmul+2
  6412     0993  01C5               	clrf	??___flmul+3
  6413     0994  0842               	movf	??___flmul,w
  6414     0995  07C8               	addwf	___flmul@grs,f
  6415     0996  0843               	movf	??___flmul+1,w
  6416     0997  1103               	clrz
  6417     0998  1803               	skipnc
  6418     0999  3E01               	addlw	1
  6419     099A  1903               	skipnz
  6420     099B  299D               	goto	u3981
  6421     099C  07C9               	addwf	___flmul@grs+1,f
  6422     099D                     u3981:
  6423     099D  0844               	movf	??___flmul+2,w
  6424     099E  1103               	clrz
  6425     099F  1803               	skipnc
  6426     09A0  3E01               	addlw	1
  6427     09A1  1903               	skipnz
  6428     09A2  29A4               	goto	u3982
  6429     09A3  07CA               	addwf	___flmul@grs+2,f
  6430     09A4                     u3982:
  6431     09A4  0845               	movf	??___flmul+3,w
  6432     09A5  1103               	clrz
  6433     09A6  1803               	skipnc
  6434     09A7  3E01               	addlw	1
  6435     09A8  1903               	skipnz
  6436     09A9  29AB               	goto	u3983
  6437     09AA  07CB               	addwf	___flmul@grs+3,f
  6438     09AB                     u3983:
  6439     09AB                     l3166:
  6440     09AB  3008               	movlw	8
  6441     09AC  00C2               	movwf	??___flmul
  6442     09AD                     u3995:
  6443     09AD  1003               	clrc
  6444     09AE  0DC8               	rlf	___flmul@grs,f
  6445     09AF  0DC9               	rlf	___flmul@grs+1,f
  6446     09B0  0DCA               	rlf	___flmul@grs+2,f
  6447     09B1  0DCB               	rlf	___flmul@grs+3,f
  6448     09B2  0BC2               	decfsz	??___flmul,f
  6449     09B3  29AD               	goto	u3995
  6450     09B4  083A               	movf	___flmul@b,w
  6451     09B5  00A0               	movwf	__Umul8_16@multiplicand
  6452     09B6  083E               	movf	___flmul@a,w
  6453     09B7  160A  158A  2680  120A  158A  	fcall	__Umul8_16
  6454     09BC  1283               	bcf	3,5	;RP0=0, select bank0
  6455     09BD  1303               	bcf	3,6	;RP1=0, select bank0
  6456     09BE  0821               	movf	?__Umul8_16+1,w
  6457     09BF  00D3               	movwf	___flmul@temp+1
  6458     09C0  0820               	movf	?__Umul8_16,w
  6459     09C1  00D2               	movwf	___flmul@temp
  6460     09C2                     l3168:
  6461     09C2  0852               	movf	___flmul@temp,w
  6462     09C3  00C2               	movwf	??___flmul
  6463     09C4  0853               	movf	___flmul@temp+1,w
  6464     09C5  00C3               	movwf	??___flmul+1
  6465     09C6  01C4               	clrf	??___flmul+2
  6466     09C7  01C5               	clrf	??___flmul+3
  6467     09C8  0842               	movf	??___flmul,w
  6468     09C9  07C8               	addwf	___flmul@grs,f
  6469     09CA  0843               	movf	??___flmul+1,w
  6470     09CB  1103               	clrz
  6471     09CC  1803               	skipnc
  6472     09CD  3E01               	addlw	1
  6473     09CE  1903               	skipnz
  6474     09CF  29D1               	goto	u4001
  6475     09D0  07C9               	addwf	___flmul@grs+1,f
  6476     09D1                     u4001:
  6477     09D1  0844               	movf	??___flmul+2,w
  6478     09D2  1103               	clrz
  6479     09D3  1803               	skipnc
  6480     09D4  3E01               	addlw	1
  6481     09D5  1903               	skipnz
  6482     09D6  29D8               	goto	u4002
  6483     09D7  07CA               	addwf	___flmul@grs+2,f
  6484     09D8                     u4002:
  6485     09D8  0845               	movf	??___flmul+3,w
  6486     09D9  1103               	clrz
  6487     09DA  1803               	skipnc
  6488     09DB  3E01               	addlw	1
  6489     09DC  1903               	skipnz
  6490     09DD  29DF               	goto	u4003
  6491     09DE  07CB               	addwf	___flmul@grs+3,f
  6492     09DF                     u4003:
  6493     09DF                     l3170:
  6494     09DF  083B               	movf	___flmul@b+1,w
  6495     09E0  00A0               	movwf	__Umul8_16@multiplicand
  6496     09E1  0840               	movf	___flmul@a+2,w
  6497     09E2  160A  158A  2680  120A  158A  	fcall	__Umul8_16
  6498     09E7  1283               	bcf	3,5	;RP0=0, select bank0
  6499     09E8  1303               	bcf	3,6	;RP1=0, select bank0
  6500     09E9  0821               	movf	?__Umul8_16+1,w
  6501     09EA  00D3               	movwf	___flmul@temp+1
  6502     09EB  0820               	movf	?__Umul8_16,w
  6503     09EC  00D2               	movwf	___flmul@temp
  6504     09ED  0852               	movf	___flmul@temp,w
  6505     09EE  00C2               	movwf	??___flmul
  6506     09EF  0853               	movf	___flmul@temp+1,w
  6507     09F0  00C3               	movwf	??___flmul+1
  6508     09F1  01C4               	clrf	??___flmul+2
  6509     09F2  01C5               	clrf	??___flmul+3
  6510     09F3  0842               	movf	??___flmul,w
  6511     09F4  07CE               	addwf	___flmul@prod,f
  6512     09F5  0843               	movf	??___flmul+1,w
  6513     09F6  1103               	clrz
  6514     09F7  1803               	skipnc
  6515     09F8  3E01               	addlw	1
  6516     09F9  1903               	skipnz
  6517     09FA  29FC               	goto	u4011
  6518     09FB  07CF               	addwf	___flmul@prod+1,f
  6519     09FC                     u4011:
  6520     09FC  0844               	movf	??___flmul+2,w
  6521     09FD  1103               	clrz
  6522     09FE  1803               	skipnc
  6523     09FF  3E01               	addlw	1
  6524     0A00  1903               	skipnz
  6525     0A01  2A03               	goto	u4012
  6526     0A02  07D0               	addwf	___flmul@prod+2,f
  6527     0A03                     u4012:
  6528     0A03  0845               	movf	??___flmul+3,w
  6529     0A04  1103               	clrz
  6530     0A05  1803               	skipnc
  6531     0A06  3E01               	addlw	1
  6532     0A07  1903               	skipnz
  6533     0A08  2A0A               	goto	u4013
  6534     0A09  07D1               	addwf	___flmul@prod+3,f
  6535     0A0A                     u4013:
  6536     0A0A                     l3172:
  6537     0A0A  083C               	movf	___flmul@b+2,w
  6538     0A0B  00A0               	movwf	__Umul8_16@multiplicand
  6539     0A0C  083F               	movf	___flmul@a+1,w
  6540     0A0D  160A  158A  2680  120A  158A  	fcall	__Umul8_16
  6541     0A12  1283               	bcf	3,5	;RP0=0, select bank0
  6542     0A13  1303               	bcf	3,6	;RP1=0, select bank0
  6543     0A14  0821               	movf	?__Umul8_16+1,w
  6544     0A15  00D3               	movwf	___flmul@temp+1
  6545     0A16  0820               	movf	?__Umul8_16,w
  6546     0A17  00D2               	movwf	___flmul@temp
  6547     0A18                     l3174:
  6548     0A18  0852               	movf	___flmul@temp,w
  6549     0A19  00C2               	movwf	??___flmul
  6550     0A1A  0853               	movf	___flmul@temp+1,w
  6551     0A1B  00C3               	movwf	??___flmul+1
  6552     0A1C  01C4               	clrf	??___flmul+2
  6553     0A1D  01C5               	clrf	??___flmul+3
  6554     0A1E  0842               	movf	??___flmul,w
  6555     0A1F  07CE               	addwf	___flmul@prod,f
  6556     0A20  0843               	movf	??___flmul+1,w
  6557     0A21  1103               	clrz
  6558     0A22  1803               	skipnc
  6559     0A23  3E01               	addlw	1
  6560     0A24  1903               	skipnz
  6561     0A25  2A27               	goto	u4021
  6562     0A26  07CF               	addwf	___flmul@prod+1,f
  6563     0A27                     u4021:
  6564     0A27  0844               	movf	??___flmul+2,w
  6565     0A28  1103               	clrz
  6566     0A29  1803               	skipnc
  6567     0A2A  3E01               	addlw	1
  6568     0A2B  1903               	skipnz
  6569     0A2C  2A2E               	goto	u4022
  6570     0A2D  07D0               	addwf	___flmul@prod+2,f
  6571     0A2E                     u4022:
  6572     0A2E  0845               	movf	??___flmul+3,w
  6573     0A2F  1103               	clrz
  6574     0A30  1803               	skipnc
  6575     0A31  3E01               	addlw	1
  6576     0A32  1903               	skipnz
  6577     0A33  2A35               	goto	u4023
  6578     0A34  07D1               	addwf	___flmul@prod+3,f
  6579     0A35                     u4023:
  6580     0A35  083C               	movf	___flmul@b+2,w
  6581     0A36  00A0               	movwf	__Umul8_16@multiplicand
  6582     0A37  0840               	movf	___flmul@a+2,w
  6583     0A38  160A  158A  2680  120A  158A  	fcall	__Umul8_16
  6584     0A3D  1283               	bcf	3,5	;RP0=0, select bank0
  6585     0A3E  1303               	bcf	3,6	;RP1=0, select bank0
  6586     0A3F  0821               	movf	?__Umul8_16+1,w
  6587     0A40  00D3               	movwf	___flmul@temp+1
  6588     0A41  0820               	movf	?__Umul8_16,w
  6589     0A42  00D2               	movwf	___flmul@temp
  6590     0A43                     l3176:
  6591     0A43  0852               	movf	___flmul@temp,w
  6592     0A44  00C2               	movwf	??___flmul
  6593     0A45  0853               	movf	___flmul@temp+1,w
  6594     0A46  00C3               	movwf	??___flmul+1
  6595     0A47  01C4               	clrf	??___flmul+2
  6596     0A48  01C5               	clrf	??___flmul+3
  6597     0A49  3008               	movlw	8
  6598     0A4A                     u4035:
  6599     0A4A  1003               	clrc
  6600     0A4B  0DC2               	rlf	??___flmul,f
  6601     0A4C  0DC3               	rlf	??___flmul+1,f
  6602     0A4D  0DC4               	rlf	??___flmul+2,f
  6603     0A4E  0DC5               	rlf	??___flmul+3,f
  6604     0A4F                     u4030:
  6605     0A4F  3EFF               	addlw	-1
  6606     0A50  1D03               	skipz
  6607     0A51  2A4A               	goto	u4035
  6608     0A52  0842               	movf	??___flmul,w
  6609     0A53  07CE               	addwf	___flmul@prod,f
  6610     0A54  0843               	movf	??___flmul+1,w
  6611     0A55  1103               	clrz
  6612     0A56  1803               	skipnc
  6613     0A57  3E01               	addlw	1
  6614     0A58  1903               	skipnz
  6615     0A59  2A5B               	goto	u4041
  6616     0A5A  07CF               	addwf	___flmul@prod+1,f
  6617     0A5B                     u4041:
  6618     0A5B  0844               	movf	??___flmul+2,w
  6619     0A5C  1103               	clrz
  6620     0A5D  1803               	skipnc
  6621     0A5E  3E01               	addlw	1
  6622     0A5F  1903               	skipnz
  6623     0A60  2A62               	goto	u4042
  6624     0A61  07D0               	addwf	___flmul@prod+2,f
  6625     0A62                     u4042:
  6626     0A62  0845               	movf	??___flmul+3,w
  6627     0A63  1103               	clrz
  6628     0A64  1803               	skipnc
  6629     0A65  3E01               	addlw	1
  6630     0A66  1903               	skipnz
  6631     0A67  2A69               	goto	u4043
  6632     0A68  07D1               	addwf	___flmul@prod+3,f
  6633     0A69                     u4043:
  6634     0A69                     l3178:
  6635     0A69  0848               	movf	___flmul@grs,w
  6636     0A6A  00C2               	movwf	??___flmul
  6637     0A6B  0849               	movf	___flmul@grs+1,w
  6638     0A6C  00C3               	movwf	??___flmul+1
  6639     0A6D  084A               	movf	___flmul@grs+2,w
  6640     0A6E  00C4               	movwf	??___flmul+2
  6641     0A6F  084B               	movf	___flmul@grs+3,w
  6642     0A70  00C5               	movwf	??___flmul+3
  6643     0A71  3018               	movlw	24
  6644     0A72                     u4055:
  6645     0A72  1003               	clrc
  6646     0A73  0CC5               	rrf	??___flmul+3,f
  6647     0A74  0CC4               	rrf	??___flmul+2,f
  6648     0A75  0CC3               	rrf	??___flmul+1,f
  6649     0A76  0CC2               	rrf	??___flmul,f
  6650     0A77                     u4050:
  6651     0A77  3EFF               	addlw	-1
  6652     0A78  1D03               	skipz
  6653     0A79  2A72               	goto	u4055
  6654     0A7A  0842               	movf	??___flmul,w
  6655     0A7B  07CE               	addwf	___flmul@prod,f
  6656     0A7C  0843               	movf	??___flmul+1,w
  6657     0A7D  1103               	clrz
  6658     0A7E  1803               	skipnc
  6659     0A7F  3E01               	addlw	1
  6660     0A80  1903               	skipnz
  6661     0A81  2A83               	goto	u4061
  6662     0A82  07CF               	addwf	___flmul@prod+1,f
  6663     0A83                     u4061:
  6664     0A83  0844               	movf	??___flmul+2,w
  6665     0A84  1103               	clrz
  6666     0A85  1803               	skipnc
  6667     0A86  3E01               	addlw	1
  6668     0A87  1903               	skipnz
  6669     0A88  2A8A               	goto	u4062
  6670     0A89  07D0               	addwf	___flmul@prod+2,f
  6671     0A8A                     u4062:
  6672     0A8A  0845               	movf	??___flmul+3,w
  6673     0A8B  1103               	clrz
  6674     0A8C  1803               	skipnc
  6675     0A8D  3E01               	addlw	1
  6676     0A8E  1903               	skipnz
  6677     0A8F  2A91               	goto	u4063
  6678     0A90  07D1               	addwf	___flmul@prod+3,f
  6679     0A91                     u4063:
  6680     0A91                     l3180:
  6681     0A91  3008               	movlw	8
  6682     0A92  00C2               	movwf	??___flmul
  6683     0A93                     u4075:
  6684     0A93  1003               	clrc
  6685     0A94  0DC8               	rlf	___flmul@grs,f
  6686     0A95  0DC9               	rlf	___flmul@grs+1,f
  6687     0A96  0DCA               	rlf	___flmul@grs+2,f
  6688     0A97  0DCB               	rlf	___flmul@grs+3,f
  6689     0A98  0BC2               	decfsz	??___flmul,f
  6690     0A99  2A93               	goto	u4075
  6691     0A9A                     l3182:
  6692     0A9A  084D               	movf	___flmul@bexp,w
  6693     0A9B  074C               	addwf	___flmul@aexp,w
  6694     0A9C  00C2               	movwf	??___flmul
  6695     0A9D  01C3               	clrf	??___flmul+1
  6696     0A9E  0DC3               	rlf	??___flmul+1,f
  6697     0A9F  0842               	movf	??___flmul,w
  6698     0AA0  3E82               	addlw	130
  6699     0AA1  00D2               	movwf	___flmul@temp
  6700     0AA2  0843               	movf	??___flmul+1,w
  6701     0AA3  1803               	skipnc
  6702     0AA4  3E01               	addlw	1
  6703     0AA5  3EFF               	addlw	255
  6704     0AA6  00D3               	movwf	___flmul@temp+1
  6705     0AA7  2AC5               	goto	l3194
  6706     0AA8                     l3184:
  6707     0AA8  3001               	movlw	1
  6708     0AA9  00C2               	movwf	??___flmul
  6709     0AAA                     u4085:
  6710     0AAA  1003               	clrc
  6711     0AAB  0DCE               	rlf	___flmul@prod,f
  6712     0AAC  0DCF               	rlf	___flmul@prod+1,f
  6713     0AAD  0DD0               	rlf	___flmul@prod+2,f
  6714     0AAE  0DD1               	rlf	___flmul@prod+3,f
  6715     0AAF  0BC2               	decfsz	??___flmul,f
  6716     0AB0  2AAA               	goto	u4085
  6717     0AB1                     l3186:
  6718     0AB1  1FCB               	btfss	___flmul@grs+3,7
  6719     0AB2  2AB4               	goto	u4091
  6720     0AB3  2AB5               	goto	u4090
  6721     0AB4                     u4091:
  6722     0AB4  2AB6               	goto	l3190
  6723     0AB5                     u4090:
  6724     0AB5                     l3188:
  6725     0AB5  144E               	bsf	___flmul@prod,0
  6726     0AB6                     l3190:
  6727     0AB6  3001               	movlw	1
  6728     0AB7  00C2               	movwf	??___flmul
  6729     0AB8                     u4105:
  6730     0AB8  1003               	clrc
  6731     0AB9  0DC8               	rlf	___flmul@grs,f
  6732     0ABA  0DC9               	rlf	___flmul@grs+1,f
  6733     0ABB  0DCA               	rlf	___flmul@grs+2,f
  6734     0ABC  0DCB               	rlf	___flmul@grs+3,f
  6735     0ABD  0BC2               	decfsz	??___flmul,f
  6736     0ABE  2AB8               	goto	u4105
  6737     0ABF                     l3192:
  6738     0ABF  30FF               	movlw	255
  6739     0AC0  07D2               	addwf	___flmul@temp,f
  6740     0AC1  1803               	skipnc
  6741     0AC2  0AD3               	incf	___flmul@temp+1,f
  6742     0AC3  30FF               	movlw	255
  6743     0AC4  07D3               	addwf	___flmul@temp+1,f
  6744     0AC5                     l3194:
  6745     0AC5  1FD0               	btfss	___flmul@prod+2,7
  6746     0AC6  2AC8               	goto	u4111
  6747     0AC7  2AC9               	goto	u4110
  6748     0AC8                     u4111:
  6749     0AC8  2AA8               	goto	l3184
  6750     0AC9                     u4110:
  6751     0AC9                     l3196:
  6752     0AC9  01CC               	clrf	___flmul@aexp
  6753     0ACA                     l3198:
  6754     0ACA  1FCB               	btfss	___flmul@grs+3,7
  6755     0ACB  2ACD               	goto	u4121
  6756     0ACC  2ACE               	goto	u4120
  6757     0ACD                     u4121:
  6758     0ACD  2AEA               	goto	l3206
  6759     0ACE                     u4120:
  6760     0ACE                     l3200:
  6761     0ACE  30FF               	movlw	255
  6762     0ACF  0548               	andwf	___flmul@grs,w
  6763     0AD0  00C2               	movwf	??___flmul
  6764     0AD1  30FF               	movlw	255
  6765     0AD2  0549               	andwf	___flmul@grs+1,w
  6766     0AD3  00C3               	movwf	??___flmul+1
  6767     0AD4  30FF               	movlw	255
  6768     0AD5  054A               	andwf	___flmul@grs+2,w
  6769     0AD6  00C4               	movwf	??___flmul+2
  6770     0AD7  307F               	movlw	127
  6771     0AD8  054B               	andwf	___flmul@grs+3,w
  6772     0AD9  00C5               	movwf	??___flmul+3
  6773     0ADA  0845               	movf	??___flmul+3,w
  6774     0ADB  0444               	iorwf	??___flmul+2,w
  6775     0ADC  0443               	iorwf	??___flmul+1,w
  6776     0ADD  0442               	iorwf	??___flmul,w
  6777     0ADE  1903               	skipnz
  6778     0ADF  2AE1               	goto	u4131
  6779     0AE0  2AE2               	goto	u4130
  6780     0AE1                     u4131:
  6781     0AE1  2AE5               	goto	l774
  6782     0AE2                     u4130:
  6783     0AE2                     l3202:
  6784     0AE2  01CC               	clrf	___flmul@aexp
  6785     0AE3  0ACC               	incf	___flmul@aexp,f
  6786     0AE4  2AEA               	goto	l3206
  6787     0AE5                     l774:
  6788     0AE5  1C4E               	btfss	___flmul@prod,0
  6789     0AE6  2AE8               	goto	u4141
  6790     0AE7  2AE9               	goto	u4140
  6791     0AE8                     u4141:
  6792     0AE8  2AEA               	goto	l3206
  6793     0AE9                     u4140:
  6794     0AE9  2AE2               	goto	l3202
  6795     0AEA                     l3206:
  6796     0AEA  084C               	movf	___flmul@aexp,w
  6797     0AEB  1903               	btfsc	3,2
  6798     0AEC  2AEE               	goto	u4151
  6799     0AED  2AEF               	goto	u4150
  6800     0AEE                     u4151:
  6801     0AEE  2B20               	goto	l3216
  6802     0AEF                     u4150:
  6803     0AEF                     l3208:
  6804     0AEF  3001               	movlw	1
  6805     0AF0  07CE               	addwf	___flmul@prod,f
  6806     0AF1  3000               	movlw	0
  6807     0AF2  1803               	skipnc
  6808     0AF3  3001               	movlw	1
  6809     0AF4  07CF               	addwf	___flmul@prod+1,f
  6810     0AF5  3000               	movlw	0
  6811     0AF6  1803               	skipnc
  6812     0AF7  3001               	movlw	1
  6813     0AF8  07D0               	addwf	___flmul@prod+2,f
  6814     0AF9  3000               	movlw	0
  6815     0AFA  1803               	skipnc
  6816     0AFB  3001               	movlw	1
  6817     0AFC  07D1               	addwf	___flmul@prod+3,f
  6818     0AFD                     l3210:
  6819     0AFD  1C51               	btfss	___flmul@prod+3,0
  6820     0AFE  2B00               	goto	u4161
  6821     0AFF  2B01               	goto	u4160
  6822     0B00                     u4161:
  6823     0B00  2B20               	goto	l3216
  6824     0B01                     u4160:
  6825     0B01                     l3212:
  6826     0B01  084E               	movf	___flmul@prod,w
  6827     0B02  00C2               	movwf	??___flmul
  6828     0B03  084F               	movf	___flmul@prod+1,w
  6829     0B04  00C3               	movwf	??___flmul+1
  6830     0B05  0850               	movf	___flmul@prod+2,w
  6831     0B06  00C4               	movwf	??___flmul+2
  6832     0B07  0851               	movf	___flmul@prod+3,w
  6833     0B08  00C5               	movwf	??___flmul+3
  6834     0B09  3001               	movlw	1
  6835     0B0A  00C6               	movwf	??___flmul+4
  6836     0B0B                     u4175:
  6837     0B0B  0D45               	rlf	??___flmul+3,w
  6838     0B0C  0CC5               	rrf	??___flmul+3,f
  6839     0B0D  0CC4               	rrf	??___flmul+2,f
  6840     0B0E  0CC3               	rrf	??___flmul+1,f
  6841     0B0F  0CC2               	rrf	??___flmul,f
  6842     0B10                     u4170:
  6843     0B10  0BC6               	decfsz	??___flmul+4,f
  6844     0B11  2B0B               	goto	u4175
  6845     0B12  0845               	movf	??___flmul+3,w
  6846     0B13  00D1               	movwf	___flmul@prod+3
  6847     0B14  0844               	movf	??___flmul+2,w
  6848     0B15  00D0               	movwf	___flmul@prod+2
  6849     0B16  0843               	movf	??___flmul+1,w
  6850     0B17  00CF               	movwf	___flmul@prod+1
  6851     0B18  0842               	movf	??___flmul,w
  6852     0B19  00CE               	movwf	___flmul@prod
  6853     0B1A                     l3214:
  6854     0B1A  3001               	movlw	1
  6855     0B1B  07D2               	addwf	___flmul@temp,f
  6856     0B1C  1803               	skipnc
  6857     0B1D  0AD3               	incf	___flmul@temp+1,f
  6858     0B1E  3000               	movlw	0
  6859     0B1F  07D3               	addwf	___flmul@temp+1,f
  6860     0B20                     l3216:
  6861     0B20  0853               	movf	___flmul@temp+1,w
  6862     0B21  3A80               	xorlw	128
  6863     0B22  00FF               	movwf	btemp+1
  6864     0B23  3080               	movlw	128
  6865     0B24  027F               	subwf	btemp+1,w
  6866     0B25  1D03               	skipz
  6867     0B26  2B29               	goto	u4185
  6868     0B27  30FF               	movlw	255
  6869     0B28  0252               	subwf	___flmul@temp,w
  6870     0B29                     u4185:
  6871     0B29  1C03               	skipc
  6872     0B2A  2B2C               	goto	u4181
  6873     0B2B  2B2D               	goto	u4180
  6874     0B2C                     u4181:
  6875     0B2C  2B38               	goto	l3220
  6876     0B2D                     u4180:
  6877     0B2D                     l3218:
  6878     0B2D  307F               	movlw	127
  6879     0B2E  1283               	bcf	3,5	;RP0=0, select bank0
  6880     0B2F  1303               	bcf	3,6	;RP1=0, select bank0
  6881     0B30  00D1               	movwf	___flmul@prod+3
  6882     0B31  3080               	movlw	128
  6883     0B32  00D0               	movwf	___flmul@prod+2
  6884     0B33  3000               	movlw	0
  6885     0B34  00CF               	movwf	___flmul@prod+1
  6886     0B35  3000               	movlw	0
  6887     0B36  00CE               	movwf	___flmul@prod
  6888     0B37  2B69               	goto	l3234
  6889     0B38                     l3220:
  6890     0B38  1283               	bcf	3,5	;RP0=0, select bank0
  6891     0B39  1303               	bcf	3,6	;RP1=0, select bank0
  6892     0B3A  0853               	movf	___flmul@temp+1,w
  6893     0B3B  3A80               	xorlw	128
  6894     0B3C  00FF               	movwf	btemp+1
  6895     0B3D  3080               	movlw	128
  6896     0B3E  027F               	subwf	btemp+1,w
  6897     0B3F  1D03               	skipz
  6898     0B40  2B43               	goto	u4195
  6899     0B41  3001               	movlw	1
  6900     0B42  0252               	subwf	___flmul@temp,w
  6901     0B43                     u4195:
  6902     0B43  1803               	skipnc
  6903     0B44  2B46               	goto	u4191
  6904     0B45  2B47               	goto	u4190
  6905     0B46                     u4191:
  6906     0B46  2B53               	goto	l3226
  6907     0B47                     u4190:
  6908     0B47                     l3222:
  6909     0B47  3000               	movlw	0
  6910     0B48  1283               	bcf	3,5	;RP0=0, select bank0
  6911     0B49  1303               	bcf	3,6	;RP1=0, select bank0
  6912     0B4A  00D1               	movwf	___flmul@prod+3
  6913     0B4B  3000               	movlw	0
  6914     0B4C  00D0               	movwf	___flmul@prod+2
  6915     0B4D  3000               	movlw	0
  6916     0B4E  00CF               	movwf	___flmul@prod+1
  6917     0B4F  3000               	movlw	0
  6918     0B50  00CE               	movwf	___flmul@prod
  6919     0B51                     l3224:
  6920     0B51  01C7               	clrf	___flmul@sign
  6921     0B52  2B69               	goto	l3234
  6922     0B53                     l3226:
  6923     0B53  1283               	bcf	3,5	;RP0=0, select bank0
  6924     0B54  1303               	bcf	3,6	;RP1=0, select bank0
  6925     0B55  0852               	movf	___flmul@temp,w
  6926     0B56  00CD               	movwf	___flmul@bexp
  6927     0B57  30FF               	movlw	255
  6928     0B58  05CE               	andwf	___flmul@prod,f
  6929     0B59  30FF               	movlw	255
  6930     0B5A  05CF               	andwf	___flmul@prod+1,f
  6931     0B5B  307F               	movlw	127
  6932     0B5C  05D0               	andwf	___flmul@prod+2,f
  6933     0B5D  3000               	movlw	0
  6934     0B5E  05D1               	andwf	___flmul@prod+3,f
  6935     0B5F                     l3228:
  6936     0B5F  1C4D               	btfss	___flmul@bexp,0
  6937     0B60  2B62               	goto	u4201
  6938     0B61  2B63               	goto	u4200
  6939     0B62                     u4201:
  6940     0B62  2B64               	goto	l3232
  6941     0B63                     u4200:
  6942     0B63                     l3230:
  6943     0B63  17D0               	bsf	___flmul@prod+2,7
  6944     0B64                     l3232:
  6945     0B64  084D               	movf	___flmul@bexp,w
  6946     0B65  00C2               	movwf	??___flmul
  6947     0B66  1003               	clrc
  6948     0B67  0C42               	rrf	??___flmul,w
  6949     0B68  00D1               	movwf	___flmul@prod+3
  6950     0B69                     l3234:
  6951     0B69  0847               	movf	___flmul@sign,w
  6952     0B6A  00FF               	movwf	btemp+1
  6953     0B6B  087F               	movf	btemp+1,w
  6954     0B6C  04D1               	iorwf	___flmul@prod+3,f
  6955     0B6D                     l3236:
  6956     0B6D  0851               	movf	___flmul@prod+3,w
  6957     0B6E  00BD               	movwf	?___flmul+3
  6958     0B6F  0850               	movf	___flmul@prod+2,w
  6959     0B70  00BC               	movwf	?___flmul+2
  6960     0B71  084F               	movf	___flmul@prod+1,w
  6961     0B72  00BB               	movwf	?___flmul+1
  6962     0B73  084E               	movf	___flmul@prod,w
  6963     0B74  00BA               	movwf	?___flmul
  6964     0B75                     l768:
  6965     0B75  0008               	return
  6966     0B76                     __end_of___flmul:
  6967                           
  6968                           	psect	text27
  6969     1E80                     __ptext27:	
  6970 ;; *************** function __Umul8_16 *****************
  6971 ;; Defined at:
  6972 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul8_16.c"
  6973 ;; Parameters:    Size  Location     Type
  6974 ;;  multiplier      1    wreg     unsigned char 
  6975 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  6976 ;; Auto vars:     Size  Location     Type
  6977 ;;  multiplier      1    8[BANK0 ] unsigned char 
  6978 ;;  word_mpld       2    6[BANK0 ] unsigned short 
  6979 ;;  product         2    4[BANK0 ] unsigned short 
  6980 ;; Return value:  Size  Location     Type
  6981 ;;                  2    0[BANK0 ] unsigned int 
  6982 ;; Registers used:
  6983 ;;		wreg, status,2, status,0
  6984 ;; Tracked objects:
  6985 ;;		On entry : 0/0
  6986 ;;		On exit  : 0/0
  6987 ;;		Unchanged: 0/0
  6988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6989 ;;      Params:         0       2       0       0       0
  6990 ;;      Locals:         0       5       0       0       0
  6991 ;;      Temps:          0       2       0       0       0
  6992 ;;      Totals:         0       9       0       0       0
  6993 ;;Total ram usage:        9 bytes
  6994 ;; Hardware stack levels used: 1
  6995 ;; Hardware stack levels required when called: 2
  6996 ;; This function calls:
  6997 ;;		Nothing
  6998 ;; This function is called by:
  6999 ;;		___flmul
  7000 ;; This function uses a non-reentrant model
  7001 ;;
  7002                           
  7003     1E80                     __Umul8_16:	
  7004                           ;psect for function __Umul8_16
  7005                           
  7006                           
  7007                           ;incstack = 0
  7008                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  7009                           ;__Umul8_16@multiplier stored from wreg
  7010     1E80  1283               	bcf	3,5	;RP0=0, select bank0
  7011     1E81  1303               	bcf	3,6	;RP1=0, select bank0
  7012     1E82  00A8               	movwf	__Umul8_16@multiplier
  7013     1E83                     l2806:
  7014     1E83  01A4               	clrf	__Umul8_16@product
  7015     1E84  01A5               	clrf	__Umul8_16@product+1
  7016     1E85                     l2808:
  7017     1E85  0820               	movf	__Umul8_16@multiplicand,w
  7018     1E86  00A2               	movwf	??__Umul8_16
  7019     1E87  01A3               	clrf	??__Umul8_16+1
  7020     1E88  0822               	movf	??__Umul8_16,w
  7021     1E89  00A6               	movwf	__Umul8_16@word_mpld
  7022     1E8A  0823               	movf	??__Umul8_16+1,w
  7023     1E8B  00A7               	movwf	__Umul8_16@word_mpld+1
  7024     1E8C                     l2810:
  7025     1E8C  1C28               	btfss	__Umul8_16@multiplier,0
  7026     1E8D  2E8F               	goto	u3331
  7027     1E8E  2E90               	goto	u3330
  7028     1E8F                     u3331:
  7029     1E8F  2E96               	goto	l787
  7030     1E90                     u3330:
  7031     1E90                     l2812:
  7032     1E90  0826               	movf	__Umul8_16@word_mpld,w
  7033     1E91  07A4               	addwf	__Umul8_16@product,f
  7034     1E92  1803               	skipnc
  7035     1E93  0AA5               	incf	__Umul8_16@product+1,f
  7036     1E94  0827               	movf	__Umul8_16@word_mpld+1,w
  7037     1E95  07A5               	addwf	__Umul8_16@product+1,f
  7038     1E96                     l787:
  7039     1E96  3001               	movlw	1
  7040     1E97                     u3345:
  7041     1E97  1003               	clrc
  7042     1E98  0DA6               	rlf	__Umul8_16@word_mpld,f
  7043     1E99  0DA7               	rlf	__Umul8_16@word_mpld+1,f
  7044     1E9A  3EFF               	addlw	-1
  7045     1E9B  1D03               	skipz
  7046     1E9C  2E97               	goto	u3345
  7047     1E9D  1003               	clrc
  7048     1E9E  0CA8               	rrf	__Umul8_16@multiplier,f
  7049     1E9F                     l2814:
  7050     1E9F  0828               	movf	__Umul8_16@multiplier,w
  7051     1EA0  1D03               	btfss	3,2
  7052     1EA1  2EA3               	goto	u3351
  7053     1EA2  2EA4               	goto	u3350
  7054     1EA3                     u3351:
  7055     1EA3  2E8C               	goto	l2810
  7056     1EA4                     u3350:
  7057     1EA4                     l2816:
  7058     1EA4  0825               	movf	__Umul8_16@product+1,w
  7059     1EA5  00A1               	movwf	?__Umul8_16+1
  7060     1EA6  0824               	movf	__Umul8_16@product,w
  7061     1EA7  00A0               	movwf	?__Umul8_16
  7062     1EA8                     l789:
  7063     1EA8  0008               	return
  7064     1EA9                     __end_of__Umul8_16:
  7065                           
  7066                           	psect	text28
  7067     0514                     __ptext28:	
  7068 ;; *************** function ___fldiv *****************
  7069 ;; Defined at:
  7070 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcdiv.c"
  7071 ;; Parameters:    Size  Location     Type
  7072 ;;  a               4    0[BANK0 ] unsigned int 
  7073 ;;  b               4    4[BANK0 ] unsigned int 
  7074 ;; Auto vars:     Size  Location     Type
  7075 ;;  grs             4   20[BANK0 ] unsigned long 
  7076 ;;  rem             4   13[BANK0 ] unsigned long 
  7077 ;;  new_exp         2   18[BANK0 ] short 
  7078 ;;  aexp            1   25[BANK0 ] unsigned char 
  7079 ;;  bexp            1   24[BANK0 ] unsigned char 
  7080 ;;  sign            1   17[BANK0 ] unsigned char 
  7081 ;; Return value:  Size  Location     Type
  7082 ;;                  4    0[BANK0 ] unsigned char 
  7083 ;; Registers used:
  7084 ;;		wreg, status,2, status,0, btemp+1
  7085 ;; Tracked objects:
  7086 ;;		On entry : 0/0
  7087 ;;		On exit  : 0/0
  7088 ;;		Unchanged: 0/0
  7089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7090 ;;      Params:         0       8       0       0       0
  7091 ;;      Locals:         0      13       0       0       0
  7092 ;;      Temps:          0       5       0       0       0
  7093 ;;      Totals:         0      26       0       0       0
  7094 ;;Total ram usage:       26 bytes
  7095 ;; Hardware stack levels used: 1
  7096 ;; Hardware stack levels required when called: 2
  7097 ;; This function calls:
  7098 ;;		Nothing
  7099 ;; This function is called by:
  7100 ;;		_main
  7101 ;; This function uses a non-reentrant model
  7102 ;;
  7103                           
  7104     0514                     ___fldiv:	
  7105                           ;psect for function ___fldiv
  7106                           
  7107     0514                     l2952:	
  7108                           ;incstack = 0
  7109                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  7110                           
  7111     0514  1283               	bcf	3,5	;RP0=0, select bank0
  7112     0515  1303               	bcf	3,6	;RP1=0, select bank0
  7113     0516  0827               	movf	___fldiv@b+3,w
  7114     0517  3980               	andlw	128
  7115     0518  00B1               	movwf	___fldiv@sign
  7116     0519                     l2954:
  7117     0519  0827               	movf	___fldiv@b+3,w
  7118     051A  00A8               	movwf	??___fldiv
  7119     051B  0728               	addwf	??___fldiv,w
  7120     051C  00B8               	movwf	___fldiv@bexp
  7121     051D                     l2956:
  7122     051D  1FA6               	btfss	___fldiv@b+2,7
  7123     051E  2D20               	goto	u3551
  7124     051F  2D21               	goto	u3550
  7125     0520                     u3551:
  7126     0520  2D22               	goto	l2960
  7127     0521                     u3550:
  7128     0521                     l2958:
  7129     0521  1438               	bsf	___fldiv@bexp,0
  7130     0522                     l2960:
  7131     0522  0838               	movf	___fldiv@bexp,w
  7132     0523  1903               	btfsc	3,2
  7133     0524  2D26               	goto	u3561
  7134     0525  2D27               	goto	u3560
  7135     0526                     u3561:
  7136     0526  2D37               	goto	l2970
  7137     0527                     u3560:
  7138     0527                     l2962:
  7139     0527  0A38               	incf	___fldiv@bexp,w
  7140     0528  1D03               	btfss	3,2
  7141     0529  2D2B               	goto	u3571
  7142     052A  2D2C               	goto	u3570
  7143     052B                     u3571:
  7144     052B  2D34               	goto	l2966
  7145     052C                     u3570:
  7146     052C                     l2964:
  7147     052C  3000               	movlw	0
  7148     052D  00A7               	movwf	___fldiv@b+3
  7149     052E  3000               	movlw	0
  7150     052F  00A6               	movwf	___fldiv@b+2
  7151     0530  3000               	movlw	0
  7152     0531  00A5               	movwf	___fldiv@b+1
  7153     0532  3000               	movlw	0
  7154     0533  00A4               	movwf	___fldiv@b
  7155     0534                     l2966:
  7156     0534  17A6               	bsf	___fldiv@b+2,7
  7157     0535                     l2968:
  7158     0535  01A7               	clrf	___fldiv@b+3
  7159     0536  2D3F               	goto	l2972
  7160     0537                     l2970:
  7161     0537  3000               	movlw	0
  7162     0538  00A7               	movwf	___fldiv@b+3
  7163     0539  3000               	movlw	0
  7164     053A  00A6               	movwf	___fldiv@b+2
  7165     053B  3000               	movlw	0
  7166     053C  00A5               	movwf	___fldiv@b+1
  7167     053D  3000               	movlw	0
  7168     053E  00A4               	movwf	___fldiv@b
  7169     053F                     l2972:
  7170     053F  0823               	movf	___fldiv@a+3,w
  7171     0540  3980               	andlw	128
  7172     0541  00FF               	movwf	btemp+1
  7173     0542  087F               	movf	btemp+1,w
  7174     0543  06B1               	xorwf	___fldiv@sign,f
  7175     0544                     l2974:
  7176     0544  0823               	movf	___fldiv@a+3,w
  7177     0545  00A8               	movwf	??___fldiv
  7178     0546  0728               	addwf	??___fldiv,w
  7179     0547  00B9               	movwf	___fldiv@aexp
  7180     0548                     l2976:
  7181     0548  1FA2               	btfss	___fldiv@a+2,7
  7182     0549  2D4B               	goto	u3581
  7183     054A  2D4C               	goto	u3580
  7184     054B                     u3581:
  7185     054B  2D4D               	goto	l2980
  7186     054C                     u3580:
  7187     054C                     l2978:
  7188     054C  1439               	bsf	___fldiv@aexp,0
  7189     054D                     l2980:
  7190     054D  0839               	movf	___fldiv@aexp,w
  7191     054E  1903               	btfsc	3,2
  7192     054F  2D51               	goto	u3591
  7193     0550  2D52               	goto	u3590
  7194     0551                     u3591:
  7195     0551  2D62               	goto	l2990
  7196     0552                     u3590:
  7197     0552                     l2982:
  7198     0552  0A39               	incf	___fldiv@aexp,w
  7199     0553  1D03               	btfss	3,2
  7200     0554  2D56               	goto	u3601
  7201     0555  2D57               	goto	u3600
  7202     0556                     u3601:
  7203     0556  2D5F               	goto	l2986
  7204     0557                     u3600:
  7205     0557                     l2984:
  7206     0557  3000               	movlw	0
  7207     0558  00A3               	movwf	___fldiv@a+3
  7208     0559  3000               	movlw	0
  7209     055A  00A2               	movwf	___fldiv@a+2
  7210     055B  3000               	movlw	0
  7211     055C  00A1               	movwf	___fldiv@a+1
  7212     055D  3000               	movlw	0
  7213     055E  00A0               	movwf	___fldiv@a
  7214     055F                     l2986:
  7215     055F  17A2               	bsf	___fldiv@a+2,7
  7216     0560                     l2988:
  7217     0560  01A3               	clrf	___fldiv@a+3
  7218     0561  2D6A               	goto	l728
  7219     0562                     l2990:
  7220     0562  3000               	movlw	0
  7221     0563  00A3               	movwf	___fldiv@a+3
  7222     0564  3000               	movlw	0
  7223     0565  00A2               	movwf	___fldiv@a+2
  7224     0566  3000               	movlw	0
  7225     0567  00A1               	movwf	___fldiv@a+1
  7226     0568  3000               	movlw	0
  7227     0569  00A0               	movwf	___fldiv@a
  7228     056A                     l728:
  7229     056A  0823               	movf	___fldiv@a+3,w
  7230     056B  0422               	iorwf	___fldiv@a+2,w
  7231     056C  0421               	iorwf	___fldiv@a+1,w
  7232     056D  0420               	iorwf	___fldiv@a,w
  7233     056E  1D03               	skipz
  7234     056F  2D71               	goto	u3611
  7235     0570  2D72               	goto	u3610
  7236     0571                     u3611:
  7237     0571  2D8B               	goto	l3000
  7238     0572                     u3610:
  7239     0572                     l2992:
  7240     0572  3000               	movlw	0
  7241     0573  00A7               	movwf	___fldiv@b+3
  7242     0574  3000               	movlw	0
  7243     0575  00A6               	movwf	___fldiv@b+2
  7244     0576  3000               	movlw	0
  7245     0577  00A5               	movwf	___fldiv@b+1
  7246     0578  3000               	movlw	0
  7247     0579  00A4               	movwf	___fldiv@b
  7248     057A  3080               	movlw	128
  7249     057B  04A6               	iorwf	___fldiv@b+2,f
  7250     057C  307F               	movlw	127
  7251     057D  04A7               	iorwf	___fldiv@b+3,f
  7252     057E                     l2994:
  7253     057E  0831               	movf	___fldiv@sign,w
  7254     057F  00FF               	movwf	btemp+1
  7255     0580  087F               	movf	btemp+1,w
  7256     0581  04A7               	iorwf	___fldiv@b+3,f
  7257     0582                     l2996:
  7258     0582  0827               	movf	___fldiv@b+3,w
  7259     0583  00A3               	movwf	?___fldiv+3
  7260     0584  0826               	movf	___fldiv@b+2,w
  7261     0585  00A2               	movwf	?___fldiv+2
  7262     0586  0825               	movf	___fldiv@b+1,w
  7263     0587  00A1               	movwf	?___fldiv+1
  7264     0588  0824               	movf	___fldiv@b,w
  7265     0589  00A0               	movwf	?___fldiv
  7266     058A  2EE2               	goto	l730
  7267     058B                     l3000:
  7268     058B  0838               	movf	___fldiv@bexp,w
  7269     058C  1D03               	btfss	3,2
  7270     058D  2D8F               	goto	u3621
  7271     058E  2D90               	goto	u3620
  7272     058F                     u3621:
  7273     058F  2D99               	goto	l3006
  7274     0590                     u3620:
  7275     0590                     l3002:
  7276     0590  3000               	movlw	0
  7277     0591  00A3               	movwf	?___fldiv+3
  7278     0592  3000               	movlw	0
  7279     0593  00A2               	movwf	?___fldiv+2
  7280     0594  3000               	movlw	0
  7281     0595  00A1               	movwf	?___fldiv+1
  7282     0596  3000               	movlw	0
  7283     0597  00A0               	movwf	?___fldiv
  7284     0598  2EE2               	goto	l730
  7285     0599                     l3006:
  7286     0599  0838               	movf	___fldiv@bexp,w
  7287     059A  00A8               	movwf	??___fldiv
  7288     059B  01A9               	clrf	??___fldiv+1
  7289     059C  0829               	movf	??___fldiv+1,w
  7290     059D  00AB               	movwf	??___fldiv+3
  7291     059E  0839               	movf	___fldiv@aexp,w
  7292     059F  0228               	subwf	??___fldiv,w
  7293     05A0  00AA               	movwf	??___fldiv+2
  7294     05A1  1C03               	skipc
  7295     05A2  03AB               	decf	??___fldiv+3,f
  7296     05A3  082A               	movf	??___fldiv+2,w
  7297     05A4  3E7F               	addlw	127
  7298     05A5  00B2               	movwf	___fldiv@new_exp
  7299     05A6  082B               	movf	??___fldiv+3,w
  7300     05A7  1803               	skipnc
  7301     05A8  3E01               	addlw	1
  7302     05A9  3E00               	addlw	0
  7303     05AA  00B3               	movwf	___fldiv@new_exp+1
  7304     05AB                     l3008:
  7305     05AB  0827               	movf	___fldiv@b+3,w
  7306     05AC  00B0               	movwf	___fldiv@rem+3
  7307     05AD  0826               	movf	___fldiv@b+2,w
  7308     05AE  00AF               	movwf	___fldiv@rem+2
  7309     05AF  0825               	movf	___fldiv@b+1,w
  7310     05B0  00AE               	movwf	___fldiv@rem+1
  7311     05B1  0824               	movf	___fldiv@b,w
  7312     05B2  00AD               	movwf	___fldiv@rem
  7313     05B3                     l3010:
  7314     05B3  3000               	movlw	0
  7315     05B4  00A7               	movwf	___fldiv@b+3
  7316     05B5  3000               	movlw	0
  7317     05B6  00A6               	movwf	___fldiv@b+2
  7318     05B7  3000               	movlw	0
  7319     05B8  00A5               	movwf	___fldiv@b+1
  7320     05B9  3000               	movlw	0
  7321     05BA  00A4               	movwf	___fldiv@b
  7322     05BB                     l3012:
  7323     05BB  3000               	movlw	0
  7324     05BC  00B7               	movwf	___fldiv@grs+3
  7325     05BD  3000               	movlw	0
  7326     05BE  00B6               	movwf	___fldiv@grs+2
  7327     05BF  3000               	movlw	0
  7328     05C0  00B5               	movwf	___fldiv@grs+1
  7329     05C1  3000               	movlw	0
  7330     05C2  00B4               	movwf	___fldiv@grs
  7331     05C3                     l3014:
  7332     05C3  01B9               	clrf	___fldiv@aexp
  7333     05C4  2E0F               	goto	l3034
  7334     05C5                     l3016:
  7335     05C5  0839               	movf	___fldiv@aexp,w
  7336     05C6  1903               	btfsc	3,2
  7337     05C7  2DC9               	goto	u3631
  7338     05C8  2DCA               	goto	u3630
  7339     05C9                     u3631:
  7340     05C9  2DEA               	goto	l3026
  7341     05CA                     u3630:
  7342     05CA                     l3018:
  7343     05CA  3001               	movlw	1
  7344     05CB  00A8               	movwf	??___fldiv
  7345     05CC                     u3645:
  7346     05CC  1003               	clrc
  7347     05CD  0DAD               	rlf	___fldiv@rem,f
  7348     05CE  0DAE               	rlf	___fldiv@rem+1,f
  7349     05CF  0DAF               	rlf	___fldiv@rem+2,f
  7350     05D0  0DB0               	rlf	___fldiv@rem+3,f
  7351     05D1  0BA8               	decfsz	??___fldiv,f
  7352     05D2  2DCC               	goto	u3645
  7353     05D3  3001               	movlw	1
  7354     05D4  00A8               	movwf	??___fldiv
  7355     05D5                     u3655:
  7356     05D5  1003               	clrc
  7357     05D6  0DA4               	rlf	___fldiv@b,f
  7358     05D7  0DA5               	rlf	___fldiv@b+1,f
  7359     05D8  0DA6               	rlf	___fldiv@b+2,f
  7360     05D9  0DA7               	rlf	___fldiv@b+3,f
  7361     05DA  0BA8               	decfsz	??___fldiv,f
  7362     05DB  2DD5               	goto	u3655
  7363     05DC                     l3020:
  7364     05DC  1FB7               	btfss	___fldiv@grs+3,7
  7365     05DD  2DDF               	goto	u3661
  7366     05DE  2DE0               	goto	u3660
  7367     05DF                     u3661:
  7368     05DF  2DE1               	goto	l3024
  7369     05E0                     u3660:
  7370     05E0                     l3022:
  7371     05E0  1424               	bsf	___fldiv@b,0
  7372     05E1                     l3024:
  7373     05E1  3001               	movlw	1
  7374     05E2  00A8               	movwf	??___fldiv
  7375     05E3                     u3675:
  7376     05E3  1003               	clrc
  7377     05E4  0DB4               	rlf	___fldiv@grs,f
  7378     05E5  0DB5               	rlf	___fldiv@grs+1,f
  7379     05E6  0DB6               	rlf	___fldiv@grs+2,f
  7380     05E7  0DB7               	rlf	___fldiv@grs+3,f
  7381     05E8  0BA8               	decfsz	??___fldiv,f
  7382     05E9  2DE3               	goto	u3675
  7383     05EA                     l3026:
  7384     05EA  0823               	movf	___fldiv@a+3,w
  7385     05EB  0230               	subwf	___fldiv@rem+3,w
  7386     05EC  1D03               	skipz
  7387     05ED  2DF8               	goto	u3685
  7388     05EE  0822               	movf	___fldiv@a+2,w
  7389     05EF  022F               	subwf	___fldiv@rem+2,w
  7390     05F0  1D03               	skipz
  7391     05F1  2DF8               	goto	u3685
  7392     05F2  0821               	movf	___fldiv@a+1,w
  7393     05F3  022E               	subwf	___fldiv@rem+1,w
  7394     05F4  1D03               	skipz
  7395     05F5  2DF8               	goto	u3685
  7396     05F6  0820               	movf	___fldiv@a,w
  7397     05F7  022D               	subwf	___fldiv@rem,w
  7398     05F8                     u3685:
  7399     05F8  1C03               	skipc
  7400     05F9  2DFB               	goto	u3681
  7401     05FA  2DFC               	goto	u3680
  7402     05FB                     u3681:
  7403     05FB  2E0B               	goto	l3032
  7404     05FC                     u3680:
  7405     05FC                     l3028:
  7406     05FC  1737               	bsf	___fldiv@grs+3,6
  7407     05FD                     l3030:
  7408     05FD  0820               	movf	___fldiv@a,w
  7409     05FE  02AD               	subwf	___fldiv@rem,f
  7410     05FF  0821               	movf	___fldiv@a+1,w
  7411     0600  1C03               	skipc
  7412     0601  0F21               	incfsz	___fldiv@a+1,w
  7413     0602  02AE               	subwf	___fldiv@rem+1,f
  7414     0603  0822               	movf	___fldiv@a+2,w
  7415     0604  1C03               	skipc
  7416     0605  0F22               	incfsz	___fldiv@a+2,w
  7417     0606  02AF               	subwf	___fldiv@rem+2,f
  7418     0607  0823               	movf	___fldiv@a+3,w
  7419     0608  1C03               	skipc
  7420     0609  0F23               	incfsz	___fldiv@a+3,w
  7421     060A  02B0               	subwf	___fldiv@rem+3,f
  7422     060B                     l3032:
  7423     060B  3001               	movlw	1
  7424     060C  00FF               	movwf	btemp+1
  7425     060D  087F               	movf	btemp+1,w
  7426     060E  07B9               	addwf	___fldiv@aexp,f
  7427     060F                     l3034:
  7428     060F  301A               	movlw	26
  7429     0610  0239               	subwf	___fldiv@aexp,w
  7430     0611  1C03               	skipc
  7431     0612  2E14               	goto	u3691
  7432     0613  2E15               	goto	u3690
  7433     0614                     u3691:
  7434     0614  2DC5               	goto	l3016
  7435     0615                     u3690:
  7436     0615                     l3036:
  7437     0615  0830               	movf	___fldiv@rem+3,w
  7438     0616  042F               	iorwf	___fldiv@rem+2,w
  7439     0617  042E               	iorwf	___fldiv@rem+1,w
  7440     0618  042D               	iorwf	___fldiv@rem,w
  7441     0619  1903               	skipnz
  7442     061A  2E1C               	goto	u3701
  7443     061B  2E1D               	goto	u3700
  7444     061C                     u3701:
  7445     061C  2E3C               	goto	l3050
  7446     061D                     u3700:
  7447     061D                     l3038:
  7448     061D  1434               	bsf	___fldiv@grs,0
  7449     061E  2E3C               	goto	l3050
  7450     061F                     l3040:
  7451     061F  3001               	movlw	1
  7452     0620  00A8               	movwf	??___fldiv
  7453     0621                     u3715:
  7454     0621  1003               	clrc
  7455     0622  0DA4               	rlf	___fldiv@b,f
  7456     0623  0DA5               	rlf	___fldiv@b+1,f
  7457     0624  0DA6               	rlf	___fldiv@b+2,f
  7458     0625  0DA7               	rlf	___fldiv@b+3,f
  7459     0626  0BA8               	decfsz	??___fldiv,f
  7460     0627  2E21               	goto	u3715
  7461     0628                     l3042:
  7462     0628  1FB7               	btfss	___fldiv@grs+3,7
  7463     0629  2E2B               	goto	u3721
  7464     062A  2E2C               	goto	u3720
  7465     062B                     u3721:
  7466     062B  2E2D               	goto	l3046
  7467     062C                     u3720:
  7468     062C                     l3044:
  7469     062C  1424               	bsf	___fldiv@b,0
  7470     062D                     l3046:
  7471     062D  3001               	movlw	1
  7472     062E  00A8               	movwf	??___fldiv
  7473     062F                     u3735:
  7474     062F  1003               	clrc
  7475     0630  0DB4               	rlf	___fldiv@grs,f
  7476     0631  0DB5               	rlf	___fldiv@grs+1,f
  7477     0632  0DB6               	rlf	___fldiv@grs+2,f
  7478     0633  0DB7               	rlf	___fldiv@grs+3,f
  7479     0634  0BA8               	decfsz	??___fldiv,f
  7480     0635  2E2F               	goto	u3735
  7481     0636                     l3048:
  7482     0636  30FF               	movlw	255
  7483     0637  07B2               	addwf	___fldiv@new_exp,f
  7484     0638  1803               	skipnc
  7485     0639  0AB3               	incf	___fldiv@new_exp+1,f
  7486     063A  30FF               	movlw	255
  7487     063B  07B3               	addwf	___fldiv@new_exp+1,f
  7488     063C                     l3050:
  7489     063C  1FA6               	btfss	___fldiv@b+2,7
  7490     063D  2E3F               	goto	u3741
  7491     063E  2E40               	goto	u3740
  7492     063F                     u3741:
  7493     063F  2E1F               	goto	l3040
  7494     0640                     u3740:
  7495     0640                     l3052:
  7496     0640  01B9               	clrf	___fldiv@aexp
  7497     0641                     l3054:
  7498     0641  1FB7               	btfss	___fldiv@grs+3,7
  7499     0642  2E44               	goto	u3751
  7500     0643  2E45               	goto	u3750
  7501     0644                     u3751:
  7502     0644  2E61               	goto	l3062
  7503     0645                     u3750:
  7504     0645                     l3056:
  7505     0645  30FF               	movlw	255
  7506     0646  0534               	andwf	___fldiv@grs,w
  7507     0647  00A8               	movwf	??___fldiv
  7508     0648  30FF               	movlw	255
  7509     0649  0535               	andwf	___fldiv@grs+1,w
  7510     064A  00A9               	movwf	??___fldiv+1
  7511     064B  30FF               	movlw	255
  7512     064C  0536               	andwf	___fldiv@grs+2,w
  7513     064D  00AA               	movwf	??___fldiv+2
  7514     064E  307F               	movlw	127
  7515     064F  0537               	andwf	___fldiv@grs+3,w
  7516     0650  00AB               	movwf	??___fldiv+3
  7517     0651  082B               	movf	??___fldiv+3,w
  7518     0652  042A               	iorwf	??___fldiv+2,w
  7519     0653  0429               	iorwf	??___fldiv+1,w
  7520     0654  0428               	iorwf	??___fldiv,w
  7521     0655  1903               	skipnz
  7522     0656  2E58               	goto	u3761
  7523     0657  2E59               	goto	u3760
  7524     0658                     u3761:
  7525     0658  2E5C               	goto	l744
  7526     0659                     u3760:
  7527     0659                     l3058:
  7528     0659  01B9               	clrf	___fldiv@aexp
  7529     065A  0AB9               	incf	___fldiv@aexp,f
  7530     065B  2E61               	goto	l3062
  7531     065C                     l744:
  7532     065C  1C24               	btfss	___fldiv@b,0
  7533     065D  2E5F               	goto	u3771
  7534     065E  2E60               	goto	u3770
  7535     065F                     u3771:
  7536     065F  2E61               	goto	l3062
  7537     0660                     u3770:
  7538     0660  2E59               	goto	l3058
  7539     0661                     l3062:
  7540     0661  0839               	movf	___fldiv@aexp,w
  7541     0662  1903               	btfsc	3,2
  7542     0663  2E65               	goto	u3781
  7543     0664  2E66               	goto	u3780
  7544     0665                     u3781:
  7545     0665  2E97               	goto	l3072
  7546     0666                     u3780:
  7547     0666                     l3064:
  7548     0666  3001               	movlw	1
  7549     0667  07A4               	addwf	___fldiv@b,f
  7550     0668  3000               	movlw	0
  7551     0669  1803               	skipnc
  7552     066A  3001               	movlw	1
  7553     066B  07A5               	addwf	___fldiv@b+1,f
  7554     066C  3000               	movlw	0
  7555     066D  1803               	skipnc
  7556     066E  3001               	movlw	1
  7557     066F  07A6               	addwf	___fldiv@b+2,f
  7558     0670  3000               	movlw	0
  7559     0671  1803               	skipnc
  7560     0672  3001               	movlw	1
  7561     0673  07A7               	addwf	___fldiv@b+3,f
  7562     0674                     l3066:
  7563     0674  1C27               	btfss	___fldiv@b+3,0
  7564     0675  2E77               	goto	u3791
  7565     0676  2E78               	goto	u3790
  7566     0677                     u3791:
  7567     0677  2E97               	goto	l3072
  7568     0678                     u3790:
  7569     0678                     l3068:
  7570     0678  0824               	movf	___fldiv@b,w
  7571     0679  00A8               	movwf	??___fldiv
  7572     067A  0825               	movf	___fldiv@b+1,w
  7573     067B  00A9               	movwf	??___fldiv+1
  7574     067C  0826               	movf	___fldiv@b+2,w
  7575     067D  00AA               	movwf	??___fldiv+2
  7576     067E  0827               	movf	___fldiv@b+3,w
  7577     067F  00AB               	movwf	??___fldiv+3
  7578     0680  3001               	movlw	1
  7579     0681  00AC               	movwf	??___fldiv+4
  7580     0682                     u3805:
  7581     0682  0D2B               	rlf	??___fldiv+3,w
  7582     0683  0CAB               	rrf	??___fldiv+3,f
  7583     0684  0CAA               	rrf	??___fldiv+2,f
  7584     0685  0CA9               	rrf	??___fldiv+1,f
  7585     0686  0CA8               	rrf	??___fldiv,f
  7586     0687                     u3800:
  7587     0687  0BAC               	decfsz	??___fldiv+4,f
  7588     0688  2E82               	goto	u3805
  7589     0689  082B               	movf	??___fldiv+3,w
  7590     068A  00A7               	movwf	___fldiv@b+3
  7591     068B  082A               	movf	??___fldiv+2,w
  7592     068C  00A6               	movwf	___fldiv@b+2
  7593     068D  0829               	movf	??___fldiv+1,w
  7594     068E  00A5               	movwf	___fldiv@b+1
  7595     068F  0828               	movf	??___fldiv,w
  7596     0690  00A4               	movwf	___fldiv@b
  7597     0691                     l3070:
  7598     0691  3001               	movlw	1
  7599     0692  07B2               	addwf	___fldiv@new_exp,f
  7600     0693  1803               	skipnc
  7601     0694  0AB3               	incf	___fldiv@new_exp+1,f
  7602     0695  3000               	movlw	0
  7603     0696  07B3               	addwf	___fldiv@new_exp+1,f
  7604     0697                     l3072:
  7605     0697  0833               	movf	___fldiv@new_exp+1,w
  7606     0698  3A80               	xorlw	128
  7607     0699  00FF               	movwf	btemp+1
  7608     069A  3080               	movlw	128
  7609     069B  027F               	subwf	btemp+1,w
  7610     069C  1D03               	skipz
  7611     069D  2EA0               	goto	u3815
  7612     069E  30FF               	movlw	255
  7613     069F  0232               	subwf	___fldiv@new_exp,w
  7614     06A0                     u3815:
  7615     06A0  1C03               	skipc
  7616     06A1  2EA3               	goto	u3811
  7617     06A2  2EA4               	goto	u3810
  7618     06A3                     u3811:
  7619     06A3  2EB2               	goto	l3076
  7620     06A4                     u3810:
  7621     06A4                     l3074:
  7622     06A4  30FF               	movlw	255
  7623     06A5  1283               	bcf	3,5	;RP0=0, select bank0
  7624     06A6  1303               	bcf	3,6	;RP1=0, select bank0
  7625     06A7  00B2               	movwf	___fldiv@new_exp
  7626     06A8  3000               	movlw	0
  7627     06A9  00B3               	movwf	___fldiv@new_exp+1
  7628     06AA  3000               	movlw	0
  7629     06AB  00A7               	movwf	___fldiv@b+3
  7630     06AC  3000               	movlw	0
  7631     06AD  00A6               	movwf	___fldiv@b+2
  7632     06AE  3000               	movlw	0
  7633     06AF  00A5               	movwf	___fldiv@b+1
  7634     06B0  3000               	movlw	0
  7635     06B1  00A4               	movwf	___fldiv@b
  7636     06B2                     l3076:
  7637     06B2  1283               	bcf	3,5	;RP0=0, select bank0
  7638     06B3  1303               	bcf	3,6	;RP1=0, select bank0
  7639     06B4  0833               	movf	___fldiv@new_exp+1,w
  7640     06B5  3A80               	xorlw	128
  7641     06B6  00FF               	movwf	btemp+1
  7642     06B7  3080               	movlw	128
  7643     06B8  027F               	subwf	btemp+1,w
  7644     06B9  1D03               	skipz
  7645     06BA  2EBD               	goto	u3825
  7646     06BB  3001               	movlw	1
  7647     06BC  0232               	subwf	___fldiv@new_exp,w
  7648     06BD                     u3825:
  7649     06BD  1803               	skipnc
  7650     06BE  2EC0               	goto	u3821
  7651     06BF  2EC1               	goto	u3820
  7652     06C0                     u3821:
  7653     06C0  2ECE               	goto	l750
  7654     06C1                     u3820:
  7655     06C1                     l3078:
  7656     06C1  1283               	bcf	3,5	;RP0=0, select bank0
  7657     06C2  1303               	bcf	3,6	;RP1=0, select bank0
  7658     06C3  01B2               	clrf	___fldiv@new_exp
  7659     06C4  01B3               	clrf	___fldiv@new_exp+1
  7660     06C5                     l3080:
  7661     06C5  3000               	movlw	0
  7662     06C6  00A7               	movwf	___fldiv@b+3
  7663     06C7  3000               	movlw	0
  7664     06C8  00A6               	movwf	___fldiv@b+2
  7665     06C9  3000               	movlw	0
  7666     06CA  00A5               	movwf	___fldiv@b+1
  7667     06CB  3000               	movlw	0
  7668     06CC  00A4               	movwf	___fldiv@b
  7669     06CD                     l3082:
  7670     06CD  01B1               	clrf	___fldiv@sign
  7671     06CE                     l750:
  7672     06CE  1283               	bcf	3,5	;RP0=0, select bank0
  7673     06CF  1303               	bcf	3,6	;RP1=0, select bank0
  7674     06D0  0832               	movf	___fldiv@new_exp,w
  7675     06D1  00B8               	movwf	___fldiv@bexp
  7676     06D2                     l3084:
  7677     06D2  1C38               	btfss	___fldiv@bexp,0
  7678     06D3  2ED5               	goto	u3831
  7679     06D4  2ED6               	goto	u3830
  7680     06D5                     u3831:
  7681     06D5  2ED8               	goto	l3088
  7682     06D6                     u3830:
  7683     06D6                     l3086:
  7684     06D6  17A6               	bsf	___fldiv@b+2,7
  7685     06D7  2EDC               	goto	l3090
  7686     06D8                     l3088:
  7687     06D8  307F               	movlw	127
  7688     06D9  00FF               	movwf	btemp+1
  7689     06DA  087F               	movf	btemp+1,w
  7690     06DB  05A6               	andwf	___fldiv@b+2,f
  7691     06DC                     l3090:
  7692     06DC  0838               	movf	___fldiv@bexp,w
  7693     06DD  00A8               	movwf	??___fldiv
  7694     06DE  1003               	clrc
  7695     06DF  0C28               	rrf	??___fldiv,w
  7696     06E0  00A7               	movwf	___fldiv@b+3
  7697     06E1  2D7E               	goto	l2994
  7698     06E2                     l730:
  7699     06E2  0008               	return
  7700     06E3                     __end_of___fldiv:
  7701                           
  7702                           	psect	text29
  7703     1EE2                     __ptext29:	
  7704 ;; *************** function _UART_Write_Text *****************
  7705 ;; Defined at:
  7706 ;;		line 18 in file "uart_lib.c"
  7707 ;; Parameters:    Size  Location     Type
  7708 ;;  text            2    1[BANK0 ] PTR unsigned char 
  7709 ;;		 -> STR_34(5), STR_31(5), STR_30(5), STR_27(5), 
  7710 ;;		 -> main@combinedText_378(20), main@uartMessage_374(8), STR_21(5), main@combinedText(20), 
  7711 ;;		 -> main@uartMessage(8), STR_15(5), 
  7712 ;; Auto vars:     Size  Location     Type
  7713 ;;  i               2    6[BANK0 ] int 
  7714 ;; Return value:  Size  Location     Type
  7715 ;;                  1    wreg      void 
  7716 ;; Registers used:
  7717 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7718 ;; Tracked objects:
  7719 ;;		On entry : 0/0
  7720 ;;		On exit  : 0/0
  7721 ;;		Unchanged: 0/0
  7722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7723 ;;      Params:         0       2       0       0       0
  7724 ;;      Locals:         0       2       0       0       0
  7725 ;;      Temps:          0       3       0       0       0
  7726 ;;      Totals:         0       7       0       0       0
  7727 ;;Total ram usage:        7 bytes
  7728 ;; Hardware stack levels used: 1
  7729 ;; Hardware stack levels required when called: 3
  7730 ;; This function calls:
  7731 ;;		_UART_Write
  7732 ;; This function is called by:
  7733 ;;		_main
  7734 ;; This function uses a non-reentrant model
  7735 ;;
  7736                           
  7737     1EE2                     _UART_Write_Text:	
  7738                           ;psect for function _UART_Write_Text
  7739                           
  7740     1EE2                     l2834:	
  7741                           ;incstack = 0
  7742                           ; Regs used in _UART_Write_Text: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7743                           
  7744                           
  7745                           ;uart_lib.c: 18: void UART_Write_Text(char *text);uart_lib.c: 19: {;uart_lib.c: 20:   in
      +                          t i;;uart_lib.c: 21:   for(i=0;text[i]!='\0';i++)
  7746     1EE2  1283               	bcf	3,5	;RP0=0, select bank0
  7747     1EE3  1303               	bcf	3,6	;RP1=0, select bank0
  7748     1EE4  01A6               	clrf	UART_Write_Text@i
  7749     1EE5  01A7               	clrf	UART_Write_Text@i+1
  7750     1EE6  2F0B               	goto	l2840
  7751     1EE7                     l2836:
  7752                           
  7753                           ;uart_lib.c: 22:     UART_Write(text[i]);
  7754     1EE7  0826               	movf	UART_Write_Text@i,w
  7755     1EE8  0721               	addwf	UART_Write_Text@text,w
  7756     1EE9  00A4               	movwf	??_UART_Write_Text+1
  7757     1EEA  0822               	movf	UART_Write_Text@text+1,w
  7758     1EEB  00A3               	movwf	??_UART_Write_Text
  7759     1EEC  1803               	skipnc
  7760     1EED  0AA3               	incf	??_UART_Write_Text,f
  7761     1EEE  1FA6               	btfss	UART_Write_Text@i,7
  7762     1EEF  2EF1               	goto	u3370
  7763     1EF0  03A3               	decf	??_UART_Write_Text,f
  7764     1EF1                     u3370:
  7765     1EF1  1283               	bcf	3,5	;RP0=0, select bank0
  7766     1EF2  1303               	bcf	3,6	;RP1=0, select bank0
  7767     1EF3  0823               	movf	??_UART_Write_Text,w
  7768     1EF4  00A5               	movwf	??_UART_Write_Text+2
  7769     1EF5  0825               	movf	??_UART_Write_Text+2,w
  7770     1EF6  00FF               	movwf	btemp+1
  7771     1EF7  0824               	movf	??_UART_Write_Text+1,w
  7772     1EF8  0084               	movwf	4
  7773     1EF9  160A  158A  216B  160A  158A  	fcall	stringtab
  7774     1EFE  160A  158A  254E  160A  158A  	fcall	_UART_Write
  7775     1F03                     l2838:
  7776     1F03  3001               	movlw	1
  7777     1F04  1283               	bcf	3,5	;RP0=0, select bank0
  7778     1F05  1303               	bcf	3,6	;RP1=0, select bank0
  7779     1F06  07A6               	addwf	UART_Write_Text@i,f
  7780     1F07  1803               	skipnc
  7781     1F08  0AA7               	incf	UART_Write_Text@i+1,f
  7782     1F09  3000               	movlw	0
  7783     1F0A  07A7               	addwf	UART_Write_Text@i+1,f
  7784     1F0B                     l2840:
  7785     1F0B  0826               	movf	UART_Write_Text@i,w
  7786     1F0C  0721               	addwf	UART_Write_Text@text,w
  7787     1F0D  00A4               	movwf	??_UART_Write_Text+1
  7788     1F0E  0822               	movf	UART_Write_Text@text+1,w
  7789     1F0F  00A3               	movwf	??_UART_Write_Text
  7790     1F10  1803               	skipnc
  7791     1F11  0AA3               	incf	??_UART_Write_Text,f
  7792     1F12  1FA6               	btfss	UART_Write_Text@i,7
  7793     1F13  2F15               	goto	u3380
  7794     1F14  03A3               	decf	??_UART_Write_Text,f
  7795     1F15                     u3380:
  7796     1F15  1283               	bcf	3,5	;RP0=0, select bank0
  7797     1F16  1303               	bcf	3,6	;RP1=0, select bank0
  7798     1F17  0823               	movf	??_UART_Write_Text,w
  7799     1F18  00A5               	movwf	??_UART_Write_Text+2
  7800     1F19  0825               	movf	??_UART_Write_Text+2,w
  7801     1F1A  00FF               	movwf	btemp+1
  7802     1F1B  0824               	movf	??_UART_Write_Text+1,w
  7803     1F1C  0084               	movwf	4
  7804     1F1D  160A  158A  216B  160A  158A  	fcall	stringtab
  7805     1F22  3A00               	xorlw	0
  7806     1F23  1D03               	skipz
  7807     1F24  2F26               	goto	u3391
  7808     1F25  2F27               	goto	u3390
  7809     1F26                     u3391:
  7810     1F26  2EE7               	goto	l2836
  7811     1F27                     u3390:
  7812     1F27                     l25:
  7813     1F27  0008               	return
  7814     1F28                     __end_of_UART_Write_Text:
  7815                           
  7816                           	psect	text30
  7817     1D4E                     __ptext30:	
  7818 ;; *************** function _UART_Write *****************
  7819 ;; Defined at:
  7820 ;;		line 12 in file "uart_lib.c"
  7821 ;; Parameters:    Size  Location     Type
  7822 ;;  data            1    wreg     unsigned char 
  7823 ;; Auto vars:     Size  Location     Type
  7824 ;;  data            1    0[BANK0 ] unsigned char 
  7825 ;; Return value:  Size  Location     Type
  7826 ;;                  1    wreg      void 
  7827 ;; Registers used:
  7828 ;;		wreg
  7829 ;; Tracked objects:
  7830 ;;		On entry : 0/0
  7831 ;;		On exit  : 0/0
  7832 ;;		Unchanged: 0/0
  7833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7834 ;;      Params:         0       0       0       0       0
  7835 ;;      Locals:         0       1       0       0       0
  7836 ;;      Temps:          0       0       0       0       0
  7837 ;;      Totals:         0       1       0       0       0
  7838 ;;Total ram usage:        1 bytes
  7839 ;; Hardware stack levels used: 1
  7840 ;; Hardware stack levels required when called: 2
  7841 ;; This function calls:
  7842 ;;		Nothing
  7843 ;; This function is called by:
  7844 ;;		_UART_Write_Text
  7845 ;; This function uses a non-reentrant model
  7846 ;;
  7847                           
  7848     1D4E                     _UART_Write:	
  7849                           ;psect for function _UART_Write
  7850                           
  7851                           
  7852                           ;incstack = 0
  7853                           ; Regs used in _UART_Write: [wreg]
  7854                           ;UART_Write@data stored from wreg
  7855     1D4E  1283               	bcf	3,5	;RP0=0, select bank0
  7856     1D4F  1303               	bcf	3,6	;RP1=0, select bank0
  7857     1D50  00A0               	movwf	UART_Write@data
  7858     1D51                     l2772:
  7859     1D51                     l16:	
  7860                           ;uart_lib.c: 12: void UART_Write(char data);uart_lib.c: 13: {;uart_lib.c: 14:   while(!T
      +                          RMT);
  7861                           
  7862     1D51  1683               	bsf	3,5	;RP0=1, select bank1
  7863     1D52  1303               	bcf	3,6	;RP1=0, select bank1
  7864     1D53  1C98               	btfss	24,1	;volatile
  7865     1D54  2D56               	goto	u3251
  7866     1D55  2D57               	goto	u3250
  7867     1D56                     u3251:
  7868     1D56  2D51               	goto	l16
  7869     1D57                     u3250:
  7870     1D57                     l2774:
  7871                           
  7872                           ;uart_lib.c: 15:   TXREG = data;
  7873     1D57  1283               	bcf	3,5	;RP0=0, select bank0
  7874     1D58  1303               	bcf	3,6	;RP1=0, select bank0
  7875     1D59  0820               	movf	UART_Write@data,w
  7876     1D5A  0099               	movwf	25	;volatile
  7877     1D5B                     l19:
  7878     1D5B  0008               	return
  7879     1D5C                     __end_of_UART_Write:
  7880                           
  7881                           	psect	text31
  7882     1D5C                     __ptext31:	
  7883 ;; *************** function _UART_Initialize *****************
  7884 ;; Defined at:
  7885 ;;		line 4 in file "uart_lib.c"
  7886 ;; Parameters:    Size  Location     Type
  7887 ;;		None
  7888 ;; Auto vars:     Size  Location     Type
  7889 ;;		None
  7890 ;; Return value:  Size  Location     Type
  7891 ;;                  1    wreg      void 
  7892 ;; Registers used:
  7893 ;;		wreg, status,2
  7894 ;; Tracked objects:
  7895 ;;		On entry : 0/0
  7896 ;;		On exit  : 0/0
  7897 ;;		Unchanged: 0/0
  7898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7899 ;;      Params:         0       0       0       0       0
  7900 ;;      Locals:         0       0       0       0       0
  7901 ;;      Temps:          0       0       0       0       0
  7902 ;;      Totals:         0       0       0       0       0
  7903 ;;Total ram usage:        0 bytes
  7904 ;; Hardware stack levels used: 1
  7905 ;; Hardware stack levels required when called: 2
  7906 ;; This function calls:
  7907 ;;		Nothing
  7908 ;; This function is called by:
  7909 ;;		_main
  7910 ;; This function uses a non-reentrant model
  7911 ;;
  7912                           
  7913     1D5C                     _UART_Initialize:	
  7914                           ;psect for function _UART_Initialize
  7915                           
  7916     1D5C                     l2830:	
  7917                           ;incstack = 0
  7918                           ; Regs used in _UART_Initialize: [wreg+status,2]
  7919                           
  7920                           
  7921                           ;uart_lib.c: 6:     TXSTA=0b00100100;
  7922     1D5C  3024               	movlw	36
  7923     1D5D  1683               	bsf	3,5	;RP0=1, select bank1
  7924     1D5E  1303               	bcf	3,6	;RP1=0, select bank1
  7925     1D5F  0098               	movwf	24	;volatile
  7926                           
  7927                           ;uart_lib.c: 7:     RCSTA=0b10010000;
  7928     1D60  3090               	movlw	144
  7929     1D61  1283               	bcf	3,5	;RP0=0, select bank0
  7930     1D62  1303               	bcf	3,6	;RP1=0, select bank0
  7931     1D63  0098               	movwf	24	;volatile
  7932                           
  7933                           ;uart_lib.c: 8:     SPBRG=12;
  7934     1D64  300C               	movlw	12
  7935     1D65  1683               	bsf	3,5	;RP0=1, select bank1
  7936     1D66  1303               	bcf	3,6	;RP1=0, select bank1
  7937     1D67  0099               	movwf	25	;volatile
  7938     1D68                     l2832:
  7939                           
  7940                           ;uart_lib.c: 9:     TXREG=0x00;
  7941     1D68  1283               	bcf	3,5	;RP0=0, select bank0
  7942     1D69  1303               	bcf	3,6	;RP1=0, select bank0
  7943     1D6A  0199               	clrf	25	;volatile
  7944     1D6B                     l13:
  7945     1D6B  0008               	return
  7946     1D6C                     __end_of_UART_Initialize:
  7947                           
  7948                           	psect	text32
  7949     1143                     __ptext32:	
  7950 ;; *************** function _Lcd_Init *****************
  7951 ;; Defined at:
  7952 ;;		line 61 in file "./lcd.h"
  7953 ;; Parameters:    Size  Location     Type
  7954 ;;		None
  7955 ;; Auto vars:     Size  Location     Type
  7956 ;;		None
  7957 ;; Return value:  Size  Location     Type
  7958 ;;                  1    wreg      void 
  7959 ;; Registers used:
  7960 ;;		wreg, status,2, status,0, pclath, cstack
  7961 ;; Tracked objects:
  7962 ;;		On entry : 0/0
  7963 ;;		On exit  : 0/0
  7964 ;;		Unchanged: 0/0
  7965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7966 ;;      Params:         0       0       0       0       0
  7967 ;;      Locals:         0       0       0       0       0
  7968 ;;      Temps:          0       2       0       0       0
  7969 ;;      Totals:         0       2       0       0       0
  7970 ;;Total ram usage:        2 bytes
  7971 ;; Hardware stack levels used: 1
  7972 ;; Hardware stack levels required when called: 4
  7973 ;; This function calls:
  7974 ;;		_Lcd_Cmd
  7975 ;;		_Lcd_Port
  7976 ;; This function is called by:
  7977 ;;		_main
  7978 ;; This function uses a non-reentrant model
  7979 ;;
  7980                           
  7981     1143                     _Lcd_Init:	
  7982                           ;psect for function _Lcd_Init
  7983                           
  7984     1143                     l2842:	
  7985                           ;incstack = 0
  7986                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  7987                           
  7988                           
  7989                           ;./lcd.h: 63:   Lcd_Port(0x00);
  7990     1143  3000               	movlw	0
  7991     1144  160A  158A  25F3  160A  118A  	fcall	_Lcd_Port
  7992     1149                     l2844:
  7993                           
  7994                           ;./lcd.h: 64:    _delay((unsigned long)((20)*(4000000/4000.0)));
  7995     1149  301A               	movlw	26
  7996     114A  1283               	bcf	3,5	;RP0=0, select bank0
  7997     114B  1303               	bcf	3,6	;RP1=0, select bank0
  7998     114C  00A5               	movwf	??_Lcd_Init+1
  7999     114D  30F7               	movlw	247
  8000     114E  00A4               	movwf	??_Lcd_Init
  8001     114F                     u5137:
  8002     114F  0BA4               	decfsz	??_Lcd_Init,f
  8003     1150  294F               	goto	u5137
  8004     1151  0BA5               	decfsz	??_Lcd_Init+1,f
  8005     1152  294F               	goto	u5137
  8006     1153  2954               	nop2
  8007     1154                     l2846:
  8008                           
  8009                           ;./lcd.h: 65:   Lcd_Cmd(0x03);
  8010     1154  3003               	movlw	3
  8011     1155  160A  158A  25BB  160A  118A  	fcall	_Lcd_Cmd
  8012                           
  8013                           ;./lcd.h: 66:  _delay((unsigned long)((5)*(4000000/4000.0)));
  8014     115A  3007               	movlw	7
  8015     115B  1283               	bcf	3,5	;RP0=0, select bank0
  8016     115C  1303               	bcf	3,6	;RP1=0, select bank0
  8017     115D  00A5               	movwf	??_Lcd_Init+1
  8018     115E  307C               	movlw	124
  8019     115F  00A4               	movwf	??_Lcd_Init
  8020     1160                     u5147:
  8021     1160  0BA4               	decfsz	??_Lcd_Init,f
  8022     1161  2960               	goto	u5147
  8023     1162  0BA5               	decfsz	??_Lcd_Init+1,f
  8024     1163  2960               	goto	u5147
  8025     1164  0000               	nop
  8026     1165                     l2848:
  8027                           
  8028                           ;./lcd.h: 67:   Lcd_Cmd(0x03);
  8029     1165  3003               	movlw	3
  8030     1166  160A  158A  25BB  160A  118A  	fcall	_Lcd_Cmd
  8031     116B                     l2850:
  8032                           
  8033                           ;./lcd.h: 68:  _delay((unsigned long)((11)*(4000000/4000.0)));
  8034     116B  300F               	movlw	15
  8035     116C  1283               	bcf	3,5	;RP0=0, select bank0
  8036     116D  1303               	bcf	3,6	;RP1=0, select bank0
  8037     116E  00A5               	movwf	??_Lcd_Init+1
  8038     116F  3047               	movlw	71
  8039     1170  00A4               	movwf	??_Lcd_Init
  8040     1171                     u5157:
  8041     1171  0BA4               	decfsz	??_Lcd_Init,f
  8042     1172  2971               	goto	u5157
  8043     1173  0BA5               	decfsz	??_Lcd_Init+1,f
  8044     1174  2971               	goto	u5157
  8045                           
  8046                           ;./lcd.h: 69:   Lcd_Cmd(0x03);
  8047     1175  3003               	movlw	3
  8048     1176  160A  158A  25BB  160A  118A  	fcall	_Lcd_Cmd
  8049                           
  8050                           ;./lcd.h: 71:   Lcd_Cmd(0x02);
  8051     117B  3002               	movlw	2
  8052     117C  160A  158A  25BB  160A  118A  	fcall	_Lcd_Cmd
  8053                           
  8054                           ;./lcd.h: 72:   Lcd_Cmd(0x02);
  8055     1181  3002               	movlw	2
  8056     1182  160A  158A  25BB  160A  118A  	fcall	_Lcd_Cmd
  8057                           
  8058                           ;./lcd.h: 73:   Lcd_Cmd(0x08);
  8059     1187  3008               	movlw	8
  8060     1188  160A  158A  25BB  160A  118A  	fcall	_Lcd_Cmd
  8061                           
  8062                           ;./lcd.h: 74:   Lcd_Cmd(0x00);
  8063     118D  3000               	movlw	0
  8064     118E  160A  158A  25BB  160A  118A  	fcall	_Lcd_Cmd
  8065                           
  8066                           ;./lcd.h: 75:   Lcd_Cmd(0x0C);
  8067     1193  300C               	movlw	12
  8068     1194  160A  158A  25BB  160A  118A  	fcall	_Lcd_Cmd
  8069                           
  8070                           ;./lcd.h: 76:   Lcd_Cmd(0x00);
  8071     1199  3000               	movlw	0
  8072     119A  160A  158A  25BB  160A  118A  	fcall	_Lcd_Cmd
  8073                           
  8074                           ;./lcd.h: 77:   Lcd_Cmd(0x06);
  8075     119F  3006               	movlw	6
  8076     11A0  160A  158A  25BB  160A  118A  	fcall	_Lcd_Cmd
  8077     11A5                     l161:
  8078     11A5  0008               	return
  8079     11A6                     __end_of_Lcd_Init:
  8080                           
  8081                           	psect	text33
  8082     1DBB                     __ptext33:	
  8083 ;; *************** function _Lcd_Cmd *****************
  8084 ;; Defined at:
  8085 ;;		line 25 in file "./lcd.h"
  8086 ;; Parameters:    Size  Location     Type
  8087 ;;  a               1    wreg     unsigned char 
  8088 ;; Auto vars:     Size  Location     Type
  8089 ;;  a               1    3[BANK0 ] unsigned char 
  8090 ;; Return value:  Size  Location     Type
  8091 ;;                  1    wreg      void 
  8092 ;; Registers used:
  8093 ;;		wreg, status,2, status,0, pclath, cstack
  8094 ;; Tracked objects:
  8095 ;;		On entry : 0/0
  8096 ;;		On exit  : 0/0
  8097 ;;		Unchanged: 0/0
  8098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8099 ;;      Params:         0       0       0       0       0
  8100 ;;      Locals:         0       1       0       0       0
  8101 ;;      Temps:          0       2       0       0       0
  8102 ;;      Totals:         0       3       0       0       0
  8103 ;;Total ram usage:        3 bytes
  8104 ;; Hardware stack levels used: 1
  8105 ;; Hardware stack levels required when called: 3
  8106 ;; This function calls:
  8107 ;;		_Lcd_Port
  8108 ;; This function is called by:
  8109 ;;		_Lcd_Clear
  8110 ;;		_Lcd_Set_Cursor
  8111 ;;		_Lcd_Init
  8112 ;; This function uses a non-reentrant model
  8113 ;;
  8114                           
  8115     1DBB                     _Lcd_Cmd:	
  8116                           ;psect for function _Lcd_Cmd
  8117                           
  8118                           
  8119                           ;incstack = 0
  8120                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  8121                           ;Lcd_Cmd@a stored from wreg
  8122     1DBB  1283               	bcf	3,5	;RP0=0, select bank0
  8123     1DBC  1303               	bcf	3,6	;RP1=0, select bank0
  8124     1DBD  00A3               	movwf	Lcd_Cmd@a
  8125     1DBE                     l2670:
  8126                           
  8127                           ;./lcd.h: 25: void Lcd_Cmd(char a);./lcd.h: 26: {;./lcd.h: 27:  RB5 = 0;
  8128     1DBE  1286               	bcf	6,5	;volatile
  8129     1DBF                     l2672:
  8130                           
  8131                           ;./lcd.h: 28:  Lcd_Port(a);
  8132     1DBF  0823               	movf	Lcd_Cmd@a,w
  8133     1DC0  160A  158A  25F3  160A  158A  	fcall	_Lcd_Port
  8134     1DC5                     l2674:
  8135                           
  8136                           ;./lcd.h: 29:  RB4 = 1;
  8137     1DC5  1283               	bcf	3,5	;RP0=0, select bank0
  8138     1DC6  1303               	bcf	3,6	;RP1=0, select bank0
  8139     1DC7  1606               	bsf	6,4	;volatile
  8140     1DC8                     l2676:
  8141                           
  8142                           ;./lcd.h: 30:         _delay((unsigned long)((4)*(4000000/4000.0)));
  8143     1DC8  3006               	movlw	6
  8144     1DC9  1283               	bcf	3,5	;RP0=0, select bank0
  8145     1DCA  1303               	bcf	3,6	;RP1=0, select bank0
  8146     1DCB  00A2               	movwf	??_Lcd_Cmd+1
  8147     1DCC  302F               	movlw	47
  8148     1DCD  00A1               	movwf	??_Lcd_Cmd
  8149     1DCE                     u5167:
  8150     1DCE  0BA1               	decfsz	??_Lcd_Cmd,f
  8151     1DCF  2DCE               	goto	u5167
  8152     1DD0  0BA2               	decfsz	??_Lcd_Cmd+1,f
  8153     1DD1  2DCE               	goto	u5167
  8154     1DD2  2DD3               	nop2
  8155     1DD3                     l2678:
  8156                           
  8157                           ;./lcd.h: 31:         RB4 = 0;
  8158     1DD3  1283               	bcf	3,5	;RP0=0, select bank0
  8159     1DD4  1303               	bcf	3,6	;RP1=0, select bank0
  8160     1DD5  1206               	bcf	6,4	;volatile
  8161     1DD6                     l149:
  8162     1DD6  0008               	return
  8163     1DD7                     __end_of_Lcd_Cmd:
  8164                           
  8165                           	psect	text34
  8166     1DF3                     __ptext34:	
  8167 ;; *************** function _Lcd_Port *****************
  8168 ;; Defined at:
  8169 ;;		line 3 in file "./lcd.h"
  8170 ;; Parameters:    Size  Location     Type
  8171 ;;  a               1    wreg     unsigned char 
  8172 ;; Auto vars:     Size  Location     Type
  8173 ;;  a               1    0[BANK0 ] unsigned char 
  8174 ;; Return value:  Size  Location     Type
  8175 ;;                  1    wreg      void 
  8176 ;; Registers used:
  8177 ;;		wreg
  8178 ;; Tracked objects:
  8179 ;;		On entry : 0/0
  8180 ;;		On exit  : 0/0
  8181 ;;		Unchanged: 0/0
  8182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8183 ;;      Params:         0       0       0       0       0
  8184 ;;      Locals:         0       1       0       0       0
  8185 ;;      Temps:          0       0       0       0       0
  8186 ;;      Totals:         0       1       0       0       0
  8187 ;;Total ram usage:        1 bytes
  8188 ;; Hardware stack levels used: 1
  8189 ;; Hardware stack levels required when called: 2
  8190 ;; This function calls:
  8191 ;;		Nothing
  8192 ;; This function is called by:
  8193 ;;		_Lcd_Cmd
  8194 ;;		_Lcd_Init
  8195 ;;		_Lcd_Write_Char
  8196 ;; This function uses a non-reentrant model
  8197 ;;
  8198                           
  8199     1DF3                     _Lcd_Port:	
  8200                           ;psect for function _Lcd_Port
  8201                           
  8202                           
  8203                           ;incstack = 0
  8204                           ; Regs used in _Lcd_Port: [wreg]
  8205                           ;Lcd_Port@a stored from wreg
  8206     1DF3  1283               	bcf	3,5	;RP0=0, select bank0
  8207     1DF4  1303               	bcf	3,6	;RP1=0, select bank0
  8208     1DF5  00A0               	movwf	Lcd_Port@a
  8209     1DF6                     l2566:
  8210                           
  8211                           ;./lcd.h: 3: void Lcd_Port(char a);./lcd.h: 4: {;./lcd.h: 5:  if(a & 1)
  8212     1DF6  1C20               	btfss	Lcd_Port@a,0
  8213     1DF7  2DF9               	goto	u2971
  8214     1DF8  2DFA               	goto	u2970
  8215     1DF9                     u2971:
  8216     1DF9  2DFC               	goto	l138
  8217     1DFA                     u2970:
  8218     1DFA                     l2568:
  8219                           
  8220                           ;./lcd.h: 6:   RB3 = 1;
  8221     1DFA  1586               	bsf	6,3	;volatile
  8222     1DFB  2DFD               	goto	l139
  8223     1DFC                     l138:	
  8224                           ;./lcd.h: 7:  else
  8225                           
  8226                           
  8227                           ;./lcd.h: 8:   RB3 = 0;
  8228     1DFC  1186               	bcf	6,3	;volatile
  8229     1DFD                     l139:
  8230                           
  8231                           ;./lcd.h: 10:  if(a & 2)
  8232     1DFD  1CA0               	btfss	Lcd_Port@a,1
  8233     1DFE  2E00               	goto	u2981
  8234     1DFF  2E01               	goto	u2980
  8235     1E00                     u2981:
  8236     1E00  2E03               	goto	l140
  8237     1E01                     u2980:
  8238     1E01                     l2570:
  8239                           
  8240                           ;./lcd.h: 11:   RB2 = 1;
  8241     1E01  1506               	bsf	6,2	;volatile
  8242     1E02  2E04               	goto	l141
  8243     1E03                     l140:	
  8244                           ;./lcd.h: 12:  else
  8245                           
  8246                           
  8247                           ;./lcd.h: 13:   RB2 = 0;
  8248     1E03  1106               	bcf	6,2	;volatile
  8249     1E04                     l141:
  8250                           
  8251                           ;./lcd.h: 15:  if(a & 4)
  8252     1E04  1D20               	btfss	Lcd_Port@a,2
  8253     1E05  2E07               	goto	u2991
  8254     1E06  2E08               	goto	u2990
  8255     1E07                     u2991:
  8256     1E07  2E0A               	goto	l142
  8257     1E08                     u2990:
  8258     1E08                     l2572:
  8259                           
  8260                           ;./lcd.h: 16:   RB1 = 1;
  8261     1E08  1486               	bsf	6,1	;volatile
  8262     1E09  2E0B               	goto	l143
  8263     1E0A                     l142:	
  8264                           ;./lcd.h: 17:  else
  8265                           
  8266                           
  8267                           ;./lcd.h: 18:   RB1 = 0;
  8268     1E0A  1086               	bcf	6,1	;volatile
  8269     1E0B                     l143:
  8270                           
  8271                           ;./lcd.h: 20:  if(a & 8)
  8272     1E0B  1DA0               	btfss	Lcd_Port@a,3
  8273     1E0C  2E0E               	goto	u3001
  8274     1E0D  2E0F               	goto	u3000
  8275     1E0E                     u3001:
  8276     1E0E  2E11               	goto	l144
  8277     1E0F                     u3000:
  8278     1E0F                     l2574:
  8279                           
  8280                           ;./lcd.h: 21:   RB0 = 1;
  8281     1E0F  1406               	bsf	6,0	;volatile
  8282     1E10  2E12               	goto	l146
  8283     1E11                     l144:	
  8284                           ;./lcd.h: 22:  else
  8285                           
  8286                           
  8287                           ;./lcd.h: 23:   RB0 = 0;
  8288     1E11  1006               	bcf	6,0	;volatile
  8289     1E12                     l146:
  8290     1E12  0008               	return
  8291     1E13                     __end_of_Lcd_Port:
  8292                           
  8293                           	psect	text35
  8294     06E3                     __ptext35:	
  8295 ;; *************** function _timer_isr *****************
  8296 ;; Defined at:
  8297 ;;		line 96 in file "main1.c"
  8298 ;; Parameters:    Size  Location     Type
  8299 ;;		None
  8300 ;; Auto vars:     Size  Location     Type
  8301 ;;		None
  8302 ;; Return value:  Size  Location     Type
  8303 ;;                  1    wreg      void 
  8304 ;; Registers used:
  8305 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8306 ;; Tracked objects:
  8307 ;;		On entry : 0/0
  8308 ;;		On exit  : 0/0
  8309 ;;		Unchanged: 0/0
  8310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8311 ;;      Params:         0       0       0       0       0
  8312 ;;      Locals:         2       0       0       0       0
  8313 ;;      Temps:          5       0       0       0       0
  8314 ;;      Totals:         7       0       0       0       0
  8315 ;;Total ram usage:        7 bytes
  8316 ;; Hardware stack levels used: 1
  8317 ;; Hardware stack levels required when called: 1
  8318 ;; This function calls:
  8319 ;;		_incrementTime
  8320 ;;		i1_readEEPROM
  8321 ;;		i1_writeEEPROM
  8322 ;; This function is called by:
  8323 ;;		Interrupt level 1
  8324 ;; This function uses a non-reentrant model
  8325 ;;
  8326                           
  8327     06E3                     _timer_isr:	
  8328                           ;psect for function _timer_isr
  8329                           
  8330     06E3                     i1l3306:
  8331                           
  8332                           ;main1.c: 97:     if (T0IF) {
  8333     06E3  1D0B               	btfss	11,2	;volatile
  8334     06E4  2EE6               	goto	u436_21
  8335     06E5  2EE7               	goto	u436_20
  8336     06E6                     u436_21:
  8337     06E6  2FA0               	goto	i1l207
  8338     06E7                     u436_20:
  8339     06E7                     i1l3308:
  8340                           
  8341                           ;main1.c: 98:         T0IF = 0;
  8342     06E7  110B               	bcf	11,2	;volatile
  8343     06E8                     i1l3310:
  8344                           
  8345                           ;main1.c: 99:         TMR0 =61;
  8346     06E8  303D               	movlw	61
  8347     06E9  1283               	bcf	3,5	;RP0=0, select bank0
  8348     06EA  1303               	bcf	3,6	;RP1=0, select bank0
  8349     06EB  0081               	movwf	1	;volatile
  8350                           
  8351                           ;main1.c: 102:         kesmeSayaci++;
  8352     06EC  3001               	movlw	1
  8353     06ED  1683               	bsf	3,5	;RP0=1, select bank3
  8354     06EE  1703               	bsf	3,6	;RP1=1, select bank3
  8355     06EF  07C6               	addwf	_kesmeSayaci^(0+384),f
  8356     06F0  1803               	skipnc
  8357     06F1  0AC7               	incf	(_kesmeSayaci+1)^(0+384),f
  8358     06F2  3000               	movlw	0
  8359     06F3  07C7               	addwf	(_kesmeSayaci+1)^(0+384),f
  8360     06F4                     i1l3312:
  8361                           
  8362                           ;main1.c: 103:         if (kesmeSayaci==20){
  8363     06F4  3014               	movlw	20
  8364     06F5  0646               	xorwf	_kesmeSayaci^(0+384),w
  8365     06F6  0447               	iorwf	(_kesmeSayaci+1)^(0+384),w
  8366     06F7  1D03               	btfss	3,2
  8367     06F8  2EFA               	goto	u437_21
  8368     06F9  2EFB               	goto	u437_20
  8369     06FA                     u437_21:
  8370     06FA  2FA0               	goto	i1l207
  8371     06FB                     u437_20:
  8372     06FB                     i1l3314:
  8373                           
  8374                           ;main1.c: 104:             kesmeSayaci = 0 ;
  8375     06FB  01C6               	clrf	_kesmeSayaci^(0+384)
  8376     06FC  01C7               	clrf	(_kesmeSayaci+1)^(0+384)
  8377     06FD                     i1l3316:
  8378                           
  8379                           ;main1.c: 105:             incrementTime(&currentTime);
  8380     06FD  30CB               	movlw	(low (_currentTime| (0+256)))& (0+255)
  8381     06FE  160A  118A  21A6  120A  118A  	fcall	_incrementTime
  8382     0703                     i1l3318:
  8383                           
  8384                           ;main1.c: 106:  eepromWRclc++;
  8385     0703  3001               	movlw	1
  8386     0704  1683               	bsf	3,5	;RP0=1, select bank3
  8387     0705  1703               	bsf	3,6	;RP1=1, select bank3
  8388     0706  07C8               	addwf	_eepromWRclc^(0+384),f
  8389     0707  1803               	skipnc
  8390     0708  0AC9               	incf	(_eepromWRclc+1)^(0+384),f
  8391     0709  3000               	movlw	0
  8392     070A  07C9               	addwf	(_eepromWRclc+1)^(0+384),f
  8393     070B                     i1l3320:
  8394                           
  8395                           ;main1.c: 107:             if (eepromWRclc==60){
  8396     070B  303C               	movlw	60
  8397     070C  0648               	xorwf	_eepromWRclc^(0+384),w
  8398     070D  0449               	iorwf	(_eepromWRclc+1)^(0+384),w
  8399     070E  1D03               	btfss	3,2
  8400     070F  2F11               	goto	u438_21
  8401     0710  2F12               	goto	u438_20
  8402     0711                     u438_21:
  8403     0711  2F14               	goto	i1l3324
  8404     0712                     u438_20:
  8405     0712                     i1l3322:
  8406                           
  8407                           ;main1.c: 108:                 eepromWRclc=0;
  8408     0712  01C8               	clrf	_eepromWRclc^(0+384)
  8409     0713  01C9               	clrf	(_eepromWRclc+1)^(0+384)
  8410     0714                     i1l3324:
  8411                           
  8412                           ;main1.c: 112:         writeEEPROM(epromBaslaAdress , currentTime.hours);
  8413     0714  087C               	movf	_epromBaslaAdress+1,w
  8414     0715  00F1               	movwf	i1writeEEPROM@address+1
  8415     0716  087B               	movf	_epromBaslaAdress,w
  8416     0717  00F0               	movwf	i1writeEEPROM@address
  8417     0718  084E               	movf	((_currentTime+1)^(0+384)+2),w
  8418     0719  00F3               	movwf	i1writeEEPROM@data+1
  8419     071A  084D               	movf	(_currentTime^(0+384)+2),w
  8420     071B  00F2               	movwf	i1writeEEPROM@data
  8421     071C  160A  158A  25A5  120A  118A  	fcall	i1_writeEEPROM
  8422     0721                     i1l3326:
  8423                           
  8424                           ;main1.c: 113:         writeEEPROM(epromBaslaAdress + 1, currentTime.minutes);
  8425     0721  087B               	movf	_epromBaslaAdress,w
  8426     0722  3E01               	addlw	1
  8427     0723  00F0               	movwf	i1writeEEPROM@address
  8428     0724  087C               	movf	_epromBaslaAdress+1,w
  8429     0725  1803               	skipnc
  8430     0726  3E01               	addlw	1
  8431     0727  3E00               	addlw	0
  8432     0728  00F1               	movwf	i1writeEEPROM@address+1
  8433     0729  1683               	bsf	3,5	;RP0=1, select bank3
  8434     072A  1703               	bsf	3,6	;RP1=1, select bank3
  8435     072B  0850               	movf	((_currentTime+1)^(0+384)+4),w
  8436     072C  00F3               	movwf	i1writeEEPROM@data+1
  8437     072D  084F               	movf	(_currentTime^(0+384)+4),w
  8438     072E  00F2               	movwf	i1writeEEPROM@data
  8439     072F  160A  158A  25A5  120A  118A  	fcall	i1_writeEEPROM
  8440     0734                     i1l3328:
  8441                           
  8442                           ;main1.c: 114:         writeEEPROM(epromBaslaAdress + 2, currentTime.seconds);
  8443     0734  087B               	movf	_epromBaslaAdress,w
  8444     0735  3E02               	addlw	2
  8445     0736  00F0               	movwf	i1writeEEPROM@address
  8446     0737  087C               	movf	_epromBaslaAdress+1,w
  8447     0738  1803               	skipnc
  8448     0739  3E01               	addlw	1
  8449     073A  3E00               	addlw	0
  8450     073B  00F1               	movwf	i1writeEEPROM@address+1
  8451     073C  1683               	bsf	3,5	;RP0=1, select bank3
  8452     073D  1703               	bsf	3,6	;RP1=1, select bank3
  8453     073E  0852               	movf	((_currentTime+1)^(0+384)+6),w
  8454     073F  00F3               	movwf	i1writeEEPROM@data+1
  8455     0740  0851               	movf	(_currentTime^(0+384)+6),w
  8456     0741  00F2               	movwf	i1writeEEPROM@data
  8457     0742  160A  158A  25A5  120A  118A  	fcall	i1_writeEEPROM
  8458     0747                     i1l3330:
  8459                           
  8460                           ;main1.c: 115:         writeEEPROM(epromBaslaAdress + 3, currentTime.carpan);
  8461     0747  087B               	movf	_epromBaslaAdress,w
  8462     0748  3E03               	addlw	3
  8463     0749  00F0               	movwf	i1writeEEPROM@address
  8464     074A  087C               	movf	_epromBaslaAdress+1,w
  8465     074B  1803               	skipnc
  8466     074C  3E01               	addlw	1
  8467     074D  3E00               	addlw	0
  8468     074E  00F1               	movwf	i1writeEEPROM@address+1
  8469     074F  1683               	bsf	3,5	;RP0=1, select bank3
  8470     0750  1703               	bsf	3,6	;RP1=1, select bank3
  8471     0751  084C               	movf	(_currentTime+1)^(0+384),w
  8472     0752  00F3               	movwf	i1writeEEPROM@data+1
  8473     0753  084B               	movf	_currentTime^(0+384),w
  8474     0754  00F2               	movwf	i1writeEEPROM@data
  8475     0755  160A  158A  25A5  120A  118A  	fcall	i1_writeEEPROM
  8476     075A                     i1l3332:
  8477                           
  8478                           ;main1.c: 117:         if( readEEPROM(readEEPROM(epromBaslaAdress)==200 )){
  8479     075A  087C               	movf	_epromBaslaAdress+1,w
  8480     075B  00F1               	movwf	i1readEEPROM@address+1
  8481     075C  087B               	movf	_epromBaslaAdress,w
  8482     075D  00F0               	movwf	i1readEEPROM@address
  8483     075E  160A  158A  256C  120A  118A  	fcall	i1_readEEPROM
  8484     0763  30C8               	movlw	200
  8485     0764  0670               	xorwf	?i1_readEEPROM,w
  8486     0765  0471               	iorwf	?i1_readEEPROM+1,w
  8487     0766  1903               	btfsc	3,2
  8488     0767  2F69               	goto	u439_21
  8489     0768  2F6B               	goto	u439_20
  8490     0769                     u439_21:
  8491     0769  3001               	movlw	1
  8492     076A  2F6C               	goto	u440_20
  8493     076B                     u439_20:
  8494     076B  3000               	movlw	0
  8495     076C                     u440_20:
  8496     076C  00F4               	movwf	??_timer_isr
  8497     076D  01F5               	clrf	??_timer_isr+1
  8498     076E  0874               	movf	??_timer_isr,w
  8499     076F  00F9               	movwf	_timer_isr$1182
  8500     0770  0875               	movf	??_timer_isr+1,w
  8501     0771  00FA               	movwf	_timer_isr$1182+1
  8502     0772                     i1l3334:
  8503                           
  8504                           ;main1.c: 117:         if( readEEPROM(readEEPROM(epromBaslaAdress)==200 )){
  8505     0772  087A               	movf	_timer_isr$1182+1,w
  8506     0773  00F1               	movwf	i1readEEPROM@address+1
  8507     0774  0879               	movf	_timer_isr$1182,w
  8508     0775  00F0               	movwf	i1readEEPROM@address
  8509     0776  160A  158A  256C  120A  118A  	fcall	i1_readEEPROM
  8510     077B  0870               	movf	?i1_readEEPROM,w
  8511     077C  0471               	iorwf	?i1_readEEPROM+1,w
  8512     077D  1903               	btfsc	3,2
  8513     077E  2F80               	goto	u441_21
  8514     077F  2F81               	goto	u441_20
  8515     0780                     u441_21:
  8516     0780  2FA0               	goto	i1l207
  8517     0781                     u441_20:
  8518     0781                     i1l3336:
  8519                           
  8520                           ;main1.c: 119:         epromBaslaAdress= epromBaslaAdress +(readEEPROM(epromBaslaAdress+
      +                          3))*4;
  8521     0781  087B               	movf	_epromBaslaAdress,w
  8522     0782  3E03               	addlw	3
  8523     0783  00F0               	movwf	i1readEEPROM@address
  8524     0784  087C               	movf	_epromBaslaAdress+1,w
  8525     0785  1803               	skipnc
  8526     0786  3E01               	addlw	1
  8527     0787  3E00               	addlw	0
  8528     0788  00F1               	movwf	i1readEEPROM@address+1
  8529     0789  160A  158A  256C  120A  118A  	fcall	i1_readEEPROM
  8530     078E  0870               	movf	?i1_readEEPROM,w
  8531     078F  00F4               	movwf	??_timer_isr
  8532     0790  0871               	movf	?i1_readEEPROM+1,w
  8533     0791  00F5               	movwf	??_timer_isr+1
  8534     0792  1003               	clrc
  8535     0793  0DF4               	rlf	??_timer_isr,f
  8536     0794  0DF5               	rlf	??_timer_isr+1,f
  8537     0795  1003               	clrc
  8538     0796  0DF4               	rlf	??_timer_isr,f
  8539     0797  0DF5               	rlf	??_timer_isr+1,f
  8540     0798  087B               	movf	_epromBaslaAdress,w
  8541     0799  0774               	addwf	??_timer_isr,w
  8542     079A  00FB               	movwf	_epromBaslaAdress
  8543     079B  087C               	movf	_epromBaslaAdress+1,w
  8544     079C  1803               	skipnc
  8545     079D  0A7C               	incf	_epromBaslaAdress+1,w
  8546     079E  0775               	addwf	??_timer_isr+1,w
  8547     079F  00FC               	movwf	_epromBaslaAdress+1
  8548     07A0                     i1l207:
  8549     07A0  0878               	movf	??_timer_isr+4,w
  8550     07A1  008A               	movwf	10
  8551     07A2  0877               	movf	??_timer_isr+3,w
  8552     07A3  0084               	movwf	4
  8553     07A4  0E76               	swapf	??_timer_isr+2,w
  8554     07A5  0083               	movwf	3
  8555     07A6  0EFE               	swapf	btemp,f
  8556     07A7  0E7E               	swapf	btemp,w
  8557     07A8  0009               	retfie
  8558     07A9                     __end_of_timer_isr:
  8559                           
  8560                           	psect	intentry
  8561     0004                     __pintentry:	
  8562                           ;incstack = 0
  8563 ;; hardware stack exceeded
  8564                           ; Regs used in _timer_isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8565                           
  8566     0004                     interrupt_function:
  8567     007E                     saved_w	set	btemp
  8568     0004  00FE               	movwf	btemp
  8569     0005  0E03               	swapf	3,w
  8570     0006  00F6               	movwf	??_timer_isr+2
  8571     0007  0804               	movf	4,w
  8572     0008  00F7               	movwf	??_timer_isr+3
  8573     0009  080A               	movf	10,w
  8574     000A  00F8               	movwf	??_timer_isr+4
  8575     000B  120A  118A  2EE3   	ljmp	_timer_isr
  8576                           
  8577                           	psect	text36
  8578     1DA5                     __ptext36:	
  8579 ;; *************** function i1_writeEEPROM *****************
  8580 ;; Defined at:
  8581 ;;		line 55 in file "main1.c"
  8582 ;; Parameters:    Size  Location     Type
  8583 ;;  address         2    0[COMMON] unsigned int 
  8584 ;;  data            2    2[COMMON] unsigned int 
  8585 ;; Auto vars:     Size  Location     Type
  8586 ;;		None
  8587 ;; Return value:  Size  Location     Type
  8588 ;;                  1    wreg      void 
  8589 ;; Registers used:
  8590 ;;		wreg
  8591 ;; Tracked objects:
  8592 ;;		On entry : 0/0
  8593 ;;		On exit  : 0/0
  8594 ;;		Unchanged: 0/0
  8595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8596 ;;      Params:         4       0       0       0       0
  8597 ;;      Locals:         0       0       0       0       0
  8598 ;;      Temps:          0       0       0       0       0
  8599 ;;      Totals:         4       0       0       0       0
  8600 ;;Total ram usage:        4 bytes
  8601 ;; Hardware stack levels used: 1
  8602 ;; This function calls:
  8603 ;;		Nothing
  8604 ;; This function is called by:
  8605 ;;		_timer_isr
  8606 ;; This function uses a non-reentrant model
  8607 ;;
  8608                           
  8609     1DA5                     i1_writeEEPROM:	
  8610                           ;psect for function i1_writeEEPROM
  8611                           
  8612     1DA5                     i1l3288:	
  8613                           ;incstack = 0
  8614 ;; hardware stack exceeded
  8615                           ; Regs used in i1_writeEEPROM: [wreg]
  8616                           
  8617                           
  8618                           ;main1.c: 57:     EEADR = address;
  8619     1DA5  0870               	movf	i1writeEEPROM@address,w
  8620     1DA6  1283               	bcf	3,5	;RP0=0, select bank2
  8621     1DA7  1703               	bsf	3,6	;RP1=1, select bank2
  8622     1DA8  008D               	movwf	13	;volatile
  8623                           
  8624                           ;main1.c: 58:     EEDATA = data;
  8625     1DA9  0872               	movf	i1writeEEPROM@data,w
  8626     1DAA  008C               	movwf	12	;volatile
  8627     1DAB                     i1l3290:
  8628                           
  8629                           ;main1.c: 59:     WREN = 1;
  8630     1DAB  1683               	bsf	3,5	;RP0=1, select bank3
  8631     1DAC  1703               	bsf	3,6	;RP1=1, select bank3
  8632     1DAD  150C               	bsf	12,2	;volsfr
  8633     1DAE                     i1l3292:
  8634                           
  8635                           ;main1.c: 60:     GIE = 0;
  8636     1DAE  138B               	bcf	11,7	;volatile
  8637                           
  8638                           ;main1.c: 61:     EECON2 = 0x55;
  8639     1DAF  3055               	movlw	85
  8640     1DB0  008D               	movwf	13	;volsfr
  8641                           
  8642                           ;main1.c: 62:     EECON2 = 0xAA;
  8643     1DB1  30AA               	movlw	170
  8644     1DB2  008D               	movwf	13	;volsfr
  8645     1DB3                     i1l3294:
  8646                           
  8647                           ;main1.c: 63:     WR = 1;
  8648     1DB3  148C               	bsf	12,1	;volsfr
  8649     1DB4                     i1l3296:
  8650                           
  8651                           ;main1.c: 64:     GIE = 1;
  8652     1DB4  178B               	bsf	11,7	;volatile
  8653     1DB5                     i1l3298:
  8654                           
  8655                           ;main1.c: 65:     WREN = 0;
  8656     1DB5  110C               	bcf	12,2	;volsfr
  8657     1DB6                     i1l186:	
  8658                           ;main1.c: 66:     while (WR == 1);
  8659                           
  8660     1DB6  188C               	btfsc	12,1	;volsfr
  8661     1DB7  2DB9               	goto	u435_21
  8662     1DB8  2DBA               	goto	u435_20
  8663     1DB9                     u435_21:
  8664     1DB9  2DB6               	goto	i1l186
  8665     1DBA                     u435_20:
  8666     1DBA                     i1l189:
  8667     1DBA  0008               	return
  8668     1DBB                     __end_ofi1_writeEEPROM:
  8669                           
  8670                           	psect	text37
  8671     1D6C                     __ptext37:	
  8672 ;; *************** function i1_readEEPROM *****************
  8673 ;; Defined at:
  8674 ;;		line 69 in file "main1.c"
  8675 ;; Parameters:    Size  Location     Type
  8676 ;;  address         2    0[COMMON] unsigned int 
  8677 ;; Auto vars:     Size  Location     Type
  8678 ;;		None
  8679 ;; Return value:  Size  Location     Type
  8680 ;;                  2    0[COMMON] unsigned int 
  8681 ;; Registers used:
  8682 ;;		wreg
  8683 ;; Tracked objects:
  8684 ;;		On entry : 0/0
  8685 ;;		On exit  : 0/0
  8686 ;;		Unchanged: 0/0
  8687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8688 ;;      Params:         2       0       0       0       0
  8689 ;;      Locals:         0       0       0       0       0
  8690 ;;      Temps:          2       0       0       0       0
  8691 ;;      Totals:         4       0       0       0       0
  8692 ;;Total ram usage:        4 bytes
  8693 ;; Hardware stack levels used: 1
  8694 ;; This function calls:
  8695 ;;		Nothing
  8696 ;; This function is called by:
  8697 ;;		_timer_isr
  8698 ;; This function uses a non-reentrant model
  8699 ;;
  8700                           
  8701     1D6C                     i1_readEEPROM:	
  8702                           ;psect for function i1_readEEPROM
  8703                           
  8704     1D6C                     i1l3300:	
  8705                           ;incstack = 0
  8706 ;; hardware stack exceeded
  8707                           ; Regs used in i1_readEEPROM: [wreg]
  8708                           
  8709                           
  8710                           ;main1.c: 71:     EEADR = address;
  8711     1D6C  0870               	movf	i1readEEPROM@address,w
  8712     1D6D  1283               	bcf	3,5	;RP0=0, select bank2
  8713     1D6E  1703               	bsf	3,6	;RP1=1, select bank2
  8714     1D6F  008D               	movwf	13	;volatile
  8715     1D70                     i1l3302:
  8716                           
  8717                           ;main1.c: 72:     RD = 1;
  8718     1D70  1683               	bsf	3,5	;RP0=1, select bank3
  8719     1D71  1703               	bsf	3,6	;RP1=1, select bank3
  8720     1D72  140C               	bsf	12,0	;volsfr
  8721                           
  8722                           ;main1.c: 73:     return EEDATA;
  8723     1D73  1283               	bcf	3,5	;RP0=0, select bank2
  8724     1D74  1703               	bsf	3,6	;RP1=1, select bank2
  8725     1D75  080C               	movf	12,w	;volatile
  8726     1D76  00F2               	movwf	??i1_readEEPROM
  8727     1D77  01F3               	clrf	??i1_readEEPROM+1
  8728     1D78  0872               	movf	??i1_readEEPROM,w
  8729     1D79  00F0               	movwf	?i1_readEEPROM
  8730     1D7A  0873               	movf	??i1_readEEPROM+1,w
  8731     1D7B  00F1               	movwf	?i1_readEEPROM+1
  8732     1D7C                     i1l192:
  8733     1D7C  0008               	return
  8734     1D7D                     __end_ofi1_readEEPROM:
  8735                           
  8736                           	psect	text38
  8737     11A6                     __ptext38:	
  8738 ;; *************** function _incrementTime *****************
  8739 ;; Defined at:
  8740 ;;		line 76 in file "main1.c"
  8741 ;; Parameters:    Size  Location     Type
  8742 ;;  time            1    wreg     PTR struct Time
  8743 ;;		 -> currentTime(8), 
  8744 ;; Auto vars:     Size  Location     Type
  8745 ;;  time            1    2[COMMON] PTR struct Time
  8746 ;;		 -> currentTime(8), 
  8747 ;; Return value:  Size  Location     Type
  8748 ;;                  1    wreg      void 
  8749 ;; Registers used:
  8750 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8751 ;; Tracked objects:
  8752 ;;		On entry : 0/0
  8753 ;;		On exit  : 0/0
  8754 ;;		Unchanged: 0/0
  8755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8756 ;;      Params:         0       0       0       0       0
  8757 ;;      Locals:         1       0       0       0       0
  8758 ;;      Temps:          2       0       0       0       0
  8759 ;;      Totals:         3       0       0       0       0
  8760 ;;Total ram usage:        3 bytes
  8761 ;; Hardware stack levels used: 1
  8762 ;; This function calls:
  8763 ;;		Nothing
  8764 ;; This function is called by:
  8765 ;;		_timer_isr
  8766 ;; This function uses a non-reentrant model
  8767 ;;
  8768                           
  8769     11A6                     _incrementTime:	
  8770                           ;psect for function _incrementTime
  8771                           
  8772                           
  8773                           ;incstack = 0
  8774 ;; hardware stack exceeded
  8775                           ; Regs used in _incrementTime: [wreg-fsr0h+status,2+status,0]
  8776                           ;incrementTime@time stored from wreg
  8777     11A6  00F2               	movwf	incrementTime@time
  8778     11A7                     i1l2894:
  8779                           
  8780                           ;main1.c: 77:     time->seconds++;
  8781     11A7  0872               	movf	incrementTime@time,w
  8782     11A8  3E06               	addlw	6
  8783     11A9  0084               	movwf	4
  8784     11AA  3001               	movlw	1
  8785     11AB  1783               	bsf	3,7	;select IRP bank2
  8786     11AC  0780               	addwf	0,f
  8787     11AD  0A84               	incf	4,f
  8788     11AE  1803               	skipnc
  8789     11AF  0A80               	incf	0,f
  8790                           
  8791                           ;main1.c: 78:     if (time->seconds >= 60) {
  8792     11B0  0872               	movf	incrementTime@time,w
  8793     11B1  3E06               	addlw	6
  8794     11B2  0084               	movwf	4
  8795     11B3  0800               	movf	0,w
  8796     11B4  00F0               	movwf	??_incrementTime
  8797     11B5  0A84               	incf	4,f
  8798     11B6  0800               	movf	0,w
  8799     11B7  00F1               	movwf	??_incrementTime+1
  8800     11B8  3000               	movlw	0
  8801     11B9  0271               	subwf	??_incrementTime+1,w
  8802     11BA  303C               	movlw	60
  8803     11BB  1903               	skipnz
  8804     11BC  0270               	subwf	??_incrementTime,w
  8805     11BD  1C03               	skipc
  8806     11BE  29C0               	goto	u342_21
  8807     11BF  29C1               	goto	u342_20
  8808     11C0                     u342_21:
  8809     11C0  2A0C               	goto	i1l198
  8810     11C1                     u342_20:
  8811     11C1                     i1l2896:
  8812                           
  8813                           ;main1.c: 79:         time->seconds = 0;
  8814     11C1  0872               	movf	incrementTime@time,w
  8815     11C2  3E06               	addlw	6
  8816     11C3  0084               	movwf	4
  8817     11C4  0180               	clrf	0
  8818     11C5  0A84               	incf	4,f
  8819     11C6  0180               	clrf	0
  8820                           
  8821                           ;main1.c: 81:         time->minutes++;
  8822     11C7  0872               	movf	incrementTime@time,w
  8823     11C8  3E04               	addlw	4
  8824     11C9  0084               	movwf	4
  8825     11CA  3001               	movlw	1
  8826     11CB  0780               	addwf	0,f
  8827     11CC  0A84               	incf	4,f
  8828     11CD  1803               	skipnc
  8829     11CE  0A80               	incf	0,f
  8830                           
  8831                           ;main1.c: 82:         if (time->minutes >= 60) {
  8832     11CF  0872               	movf	incrementTime@time,w
  8833     11D0  3E04               	addlw	4
  8834     11D1  0084               	movwf	4
  8835     11D2  0800               	movf	0,w
  8836     11D3  00F0               	movwf	??_incrementTime
  8837     11D4  0A84               	incf	4,f
  8838     11D5  0800               	movf	0,w
  8839     11D6  00F1               	movwf	??_incrementTime+1
  8840     11D7  3000               	movlw	0
  8841     11D8  0271               	subwf	??_incrementTime+1,w
  8842     11D9  303C               	movlw	60
  8843     11DA  1903               	skipnz
  8844     11DB  0270               	subwf	??_incrementTime,w
  8845     11DC  1C03               	skipc
  8846     11DD  29DF               	goto	u343_21
  8847     11DE  29E0               	goto	u343_20
  8848     11DF                     u343_21:
  8849     11DF  2A0C               	goto	i1l198
  8850     11E0                     u343_20:
  8851     11E0                     i1l2898:
  8852                           
  8853                           ;main1.c: 83:             time->minutes = 0;
  8854     11E0  0872               	movf	incrementTime@time,w
  8855     11E1  3E04               	addlw	4
  8856     11E2  0084               	movwf	4
  8857     11E3  0180               	clrf	0
  8858     11E4  0A84               	incf	4,f
  8859     11E5  0180               	clrf	0
  8860                           
  8861                           ;main1.c: 85:             time->hours++;
  8862     11E6  0872               	movf	incrementTime@time,w
  8863     11E7  3E02               	addlw	2
  8864     11E8  0084               	movwf	4
  8865     11E9  3001               	movlw	1
  8866     11EA  0780               	addwf	0,f
  8867     11EB  0A84               	incf	4,f
  8868     11EC  1803               	skipnc
  8869     11ED  0A80               	incf	0,f
  8870                           
  8871                           ;main1.c: 86:             if (time-> hours >= 250){
  8872     11EE  0872               	movf	incrementTime@time,w
  8873     11EF  3E02               	addlw	2
  8874     11F0  0084               	movwf	4
  8875     11F1  0800               	movf	0,w
  8876     11F2  00F0               	movwf	??_incrementTime
  8877     11F3  0A84               	incf	4,f
  8878     11F4  0800               	movf	0,w
  8879     11F5  00F1               	movwf	??_incrementTime+1
  8880     11F6  3000               	movlw	0
  8881     11F7  0271               	subwf	??_incrementTime+1,w
  8882     11F8  30FA               	movlw	250
  8883     11F9  1903               	skipnz
  8884     11FA  0270               	subwf	??_incrementTime,w
  8885     11FB  1C03               	skipc
  8886     11FC  29FE               	goto	u344_21
  8887     11FD  29FF               	goto	u344_20
  8888     11FE                     u344_21:
  8889     11FE  2A0C               	goto	i1l198
  8890     11FF                     u344_20:
  8891     11FF                     i1l2900:
  8892                           
  8893                           ;main1.c: 87:                 time-> hours = 0;
  8894     11FF  0872               	movf	incrementTime@time,w
  8895     1200  3E02               	addlw	2
  8896     1201  0084               	movwf	4
  8897     1202  0180               	clrf	0
  8898     1203  0A84               	incf	4,f
  8899     1204  0180               	clrf	0
  8900                           
  8901                           ;main1.c: 88:                 time->carpan++;
  8902     1205  0872               	movf	incrementTime@time,w
  8903     1206  0084               	movwf	4
  8904     1207  3001               	movlw	1
  8905     1208  0780               	addwf	0,f
  8906     1209  0A84               	incf	4,f
  8907     120A  1803               	skipnc
  8908     120B  0A80               	incf	0,f
  8909     120C                     i1l198:
  8910     120C  0008               	return
  8911     120D                     __end_of_incrementTime:
  8912     007E                     btemp	set	126	;btemp
  8913     007E                     wtemp0	set	126
  8914                           
  8915                           	psect	config
  8916                           
  8917                           ;Config register CONFIG @ 0x2007
  8918                           ;	Oscillator Selection bits
  8919                           ;	FOSC = XT, XT oscillator
  8920                           ;	Watchdog Timer Enable bit
  8921                           ;	WDTE = OFF, WDT disabled
  8922                           ;	Power-up Timer Enable bit
  8923                           ;	PWRTE = OFF, PWRT disabled
  8924                           ;	Brown-out Reset Enable bit
  8925                           ;	BOREN = ON, BOR enabled
  8926                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  8927                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  8928                           ;	Data EEPROM Memory Code Protection bit
  8929                           ;	CPD = OFF, Data EEPROM code protection off
  8930                           ;	Flash Program Memory Write Enable bits
  8931                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  8932                           ;	In-Circuit Debugger Mode bit
  8933                           ;	DEBUG = 0x1, unprogrammed default
  8934                           ;	Flash Program Memory Code Protection bit
  8935                           ;	CP = OFF, Code protection off
  8936     2007                     	org	8199
  8937     2007  3F79               	dw	16249
  8938                           
  8939                           	psect	maintext_split_1
  8940     0035                     u4440:
  8941     0035                     l3472:
  8942                           
  8943                           ;main1.c: 258:         if ( RE2 == 0 && RE0 == 0 && RC0 == 0 && RE1 == 0) {
  8944     0035  1283               	bcf	3,5	;RP0=0, select bank0
  8945     0036  1303               	bcf	3,6	;RP1=0, select bank0
  8946     0037  1909               	btfsc	9,2	;volatile
  8947     0038  283A               	goto	u4451
  8948     0039  283B               	goto	u4450
  8949     003A                     u4451:
  8950     003A  284C               	goto	l3482
  8951     003B                     u4450:
  8952     003B                     l3474:
  8953     003B  1809               	btfsc	9,0	;volatile
  8954     003C  283E               	goto	u4461
  8955     003D  283F               	goto	u4460
  8956     003E                     u4461:
  8957     003E  284C               	goto	l3482
  8958     003F                     u4460:
  8959     003F                     l3476:
  8960     003F  1807               	btfsc	7,0	;volatile
  8961     0040  2842               	goto	u4471
  8962     0041  2843               	goto	u4470
  8963     0042                     u4471:
  8964     0042  284C               	goto	l3482
  8965     0043                     u4470:
  8966     0043                     l3478:
  8967     0043  1889               	btfsc	9,1	;volatile
  8968     0044  2846               	goto	u4481
  8969     0045  2847               	goto	u4480
  8970     0046                     u4481:
  8971     0046  284C               	goto	l3482
  8972     0047                     u4480:
  8973     0047                     l3480:
  8974                           
  8975                           ;main1.c: 259:             ilkAcilis = 0;
  8976     0047  1683               	bsf	3,5	;RP0=1, select bank3
  8977     0048  1703               	bsf	3,6	;RP1=1, select bank3
  8978     0049  01AE               	clrf	main@ilkAcilis^(0+384)
  8979     004A  01AF               	clrf	(main@ilkAcilis+1)^(0+384)
  8980                           
  8981                           ;main1.c: 260:         } else {
  8982     004B  2885               	goto	l218
  8983     004C                     l3482:
  8984                           
  8985                           ;main1.c: 262:              Lcd_Set_Cursor(1,1);
  8986     004C  01A4               	clrf	Lcd_Set_Cursor@b
  8987     004D  0AA4               	incf	Lcd_Set_Cursor@b,f
  8988     004E  3001               	movlw	1
  8989     004F  160A  118A  2042  120A  118A  	fcall	_Lcd_Set_Cursor
  8990     0054                     l3484:
  8991                           
  8992                           ;main1.c: 263:     Lcd_Write_String("STOP DURUMUNA GETIR");
  8993     0054  308F               	movlw	low (STR_6| (0+32768))
  8994     0055  1283               	bcf	3,5	;RP0=0, select bank0
  8995     0056  1303               	bcf	3,6	;RP1=0, select bank0
  8996     0057  00A5               	movwf	Lcd_Write_String@a
  8997     0058  3098               	movlw	high (STR_6| (0+32768))
  8998     0059  00A6               	movwf	Lcd_Write_String@a+1
  8999     005A  160A  158A  276E  120A  118A  	fcall	_Lcd_Write_String
  9000     005F                     l3486:
  9001                           
  9002                           ;main1.c: 264:     Lcd_Set_Cursor(2,1);
  9003     005F  1283               	bcf	3,5	;RP0=0, select bank0
  9004     0060  1303               	bcf	3,6	;RP1=0, select bank0
  9005     0061  01A4               	clrf	Lcd_Set_Cursor@b
  9006     0062  0AA4               	incf	Lcd_Set_Cursor@b,f
  9007     0063  3002               	movlw	2
  9008     0064  160A  118A  2042  120A  118A  	fcall	_Lcd_Set_Cursor
  9009                           
  9010                           ;main1.c: 265:     Lcd_Write_String("PUT IT IN STOP STATE");
  9011     0069  307A               	movlw	low (STR_7| (0+32768))
  9012     006A  1283               	bcf	3,5	;RP0=0, select bank0
  9013     006B  1303               	bcf	3,6	;RP1=0, select bank0
  9014     006C  00A5               	movwf	Lcd_Write_String@a
  9015     006D  3098               	movlw	high (STR_7| (0+32768))
  9016     006E  00A6               	movwf	Lcd_Write_String@a+1
  9017     006F  160A  158A  276E  120A  118A  	fcall	_Lcd_Write_String
  9018     0074                     l3488:
  9019                           
  9020                           ;main1.c: 266:     _delay((unsigned long)((500)*(4000000/4000.0)));
  9021     0074  3003               	movlw	3
  9022     0075  1683               	bsf	3,5	;RP0=1, select bank1
  9023     0076  1303               	bcf	3,6	;RP1=0, select bank1
  9024     0077  00A2               	movwf	(??_main^(0+128)+2)
  9025     0078  308A               	movlw	138
  9026     0079  00A1               	movwf	(??_main^(0+128)+1)
  9027     007A  3055               	movlw	85
  9028     007B  00A0               	movwf	??_main^(0+128)
  9029     007C                     u5037:
  9030     007C  0BA0               	decfsz	??_main^(0+128),f
  9031     007D  287C               	goto	u5037
  9032     007E  0BA1               	decfsz	(??_main^(0+128)+1),f
  9033     007F  287C               	goto	u5037
  9034     0080  0BA2               	decfsz	(??_main^(0+128)+2),f
  9035     0081  287C               	goto	u5037
  9036     0082  120A  158A  2FFD   	goto	l221
  9037     0085                     l218:	
  9038                           ;main1.c: 269:     }
  9039                           
  9040                           
  9041                           ;main1.c: 271: if( !RC3 && !RD0 && limitler == 0){
  9042     0085  1283               	bcf	3,5	;RP0=0, select bank0
  9043     0086  1303               	bcf	3,6	;RP1=0, select bank0
  9044     0087  1987               	btfsc	7,3	;volatile
  9045     0088  288A               	goto	u4491
  9046     0089  288D               	goto	u4490
  9047     008A                     u4491:
  9048     008A  120A  158A  2EF5   	goto	l222
  9049     008D                     u4490:
  9050     008D                     l3492:
  9051     008D  1808               	btfsc	8,0	;volatile
  9052     008E  2890               	goto	u4501
  9053     008F  2891               	goto	u4500
  9054     0090                     u4501:
  9055     0090  288A               	goto	u4491
  9056     0091                     u4500:
  9057     0091                     l3494:
  9058     0091  1683               	bsf	3,5	;RP0=1, select bank3
  9059     0092  1703               	bsf	3,6	;RP1=1, select bank3
  9060     0093  084A               	movf	_limitler^(0+384),w
  9061     0094  1D03               	btfss	3,2
  9062     0095  2897               	goto	u4511
  9063     0096  2898               	goto	u4510
  9064     0097                     u4511:
  9065     0097  288A               	goto	u4491
  9066     0098                     u4510:
  9067     0098                     l3496:
  9068                           
  9069                           ;main1.c: 272:   if ( RE2 == 0 && RE0 == 0 && RC0 == 0 && RE1 == 0) {
  9070     0098  1283               	bcf	3,5	;RP0=0, select bank0
  9071     0099  1303               	bcf	3,6	;RP1=0, select bank0
  9072     009A  1909               	btfsc	9,2	;volatile
  9073     009B  289D               	goto	u4521
  9074     009C  289E               	goto	u4520
  9075     009D                     u4521:
  9076     009D  28AD               	goto	l3506
  9077     009E                     u4520:
  9078     009E                     l3498:
  9079     009E  1809               	btfsc	9,0	;volatile
  9080     009F  28A1               	goto	u4531
  9081     00A0  28A2               	goto	u4530
  9082     00A1                     u4531:
  9083     00A1  28AD               	goto	l3506
  9084     00A2                     u4530:
  9085     00A2                     l3500:
  9086     00A2  1807               	btfsc	7,0	;volatile
  9087     00A3  28A5               	goto	u4541
  9088     00A4  28A6               	goto	u4540
  9089     00A5                     u4541:
  9090     00A5  28AD               	goto	l3506
  9091     00A6                     u4540:
  9092     00A6                     l3502:
  9093     00A6  1889               	btfsc	9,1	;volatile
  9094     00A7  28A9               	goto	u4551
  9095     00A8  28AA               	goto	u4550
  9096     00A9                     u4551:
  9097     00A9  28AD               	goto	l3506
  9098     00AA                     u4550:
  9099     00AA                     l3504:
  9100                           
  9101                           ;main1.c: 273:             limitler = 0;
  9102     00AA  1683               	bsf	3,5	;RP0=1, select bank3
  9103     00AB  1703               	bsf	3,6	;RP1=1, select bank3
  9104     00AC  01CA               	clrf	_limitler^(0+384)
  9105     00AD                     l3506:
  9106                           
  9107                           ;main1.c: 277:     int dakika = readEEPROM(epromBaslaAdress+1);
  9108     00AD  087B               	movf	_epromBaslaAdress,w
  9109     00AE  3E01               	addlw	1
  9110     00AF  1283               	bcf	3,5	;RP0=0, select bank0
  9111     00B0  1303               	bcf	3,6	;RP1=0, select bank0
  9112     00B1  00A6               	movwf	readEEPROM@address
  9113     00B2  087C               	movf	_epromBaslaAdress+1,w
  9114     00B3  1803               	skipnc
  9115     00B4  3E01               	addlw	1
  9116     00B5  3E00               	addlw	0
  9117     00B6  00A7               	movwf	readEEPROM@address+1
  9118     00B7  160A  158A  2590  120A  118A  	fcall	_readEEPROM
  9119     00BC  1283               	bcf	3,5	;RP0=0, select bank0
  9120     00BD  1303               	bcf	3,6	;RP1=0, select bank0
  9121     00BE  0827               	movf	?_readEEPROM+1,w
  9122     00BF  1683               	bsf	3,5	;RP0=1, select bank3
  9123     00C0  1703               	bsf	3,6	;RP1=1, select bank3
  9124     00C1  00A5               	movwf	(main@dakika+1)^(0+384)
  9125     00C2  1283               	bcf	3,5	;RP0=0, select bank0
  9126     00C3  1303               	bcf	3,6	;RP1=0, select bank0
  9127     00C4  0826               	movf	?_readEEPROM,w
  9128     00C5  1683               	bsf	3,5	;RP0=1, select bank3
  9129     00C6  1703               	bsf	3,6	;RP1=1, select bank3
  9130     00C7  00A4               	movwf	main@dakika^(0+384)
  9131     00C8                     l3508:
  9132                           
  9133                           ;main1.c: 278:     int realSaat = readEEPROM((epromBaslaAdress+3)*250+readEEPROM(epromBa
      +                          slaAdress));
  9134     00C8  087C               	movf	_epromBaslaAdress+1,w
  9135     00C9  1283               	bcf	3,5	;RP0=0, select bank0
  9136     00CA  1303               	bcf	3,6	;RP1=0, select bank0
  9137     00CB  00A1               	movwf	___wmul@multiplier+1
  9138     00CC  087B               	movf	_epromBaslaAdress,w
  9139     00CD  00A0               	movwf	___wmul@multiplier
  9140     00CE  30FA               	movlw	250
  9141     00CF  00A2               	movwf	___wmul@multiplicand
  9142     00D0  3000               	movlw	0
  9143     00D1  00A3               	movwf	___wmul@multiplicand+1
  9144     00D2  160A  158A  2659  120A  118A  	fcall	___wmul
  9145     00D7  1283               	bcf	3,5	;RP0=0, select bank0
  9146     00D8  1303               	bcf	3,6	;RP1=0, select bank0
  9147     00D9  0820               	movf	?___wmul,w
  9148     00DA  1683               	bsf	3,5	;RP0=1, select bank1
  9149     00DB  1303               	bcf	3,6	;RP1=0, select bank1
  9150     00DC  00A0               	movwf	??_main^(0+128)
  9151     00DD  1283               	bcf	3,5	;RP0=0, select bank0
  9152     00DE  1303               	bcf	3,6	;RP1=0, select bank0
  9153     00DF  0821               	movf	?___wmul+1,w
  9154     00E0  1683               	bsf	3,5	;RP0=1, select bank1
  9155     00E1  1303               	bcf	3,6	;RP1=0, select bank1
  9156     00E2  00A1               	movwf	(??_main^(0+128)+1)
  9157     00E3  087C               	movf	_epromBaslaAdress+1,w
  9158     00E4  1283               	bcf	3,5	;RP0=0, select bank0
  9159     00E5  1303               	bcf	3,6	;RP1=0, select bank0
  9160     00E6  00A7               	movwf	readEEPROM@address+1
  9161     00E7  087B               	movf	_epromBaslaAdress,w
  9162     00E8  00A6               	movwf	readEEPROM@address
  9163     00E9  160A  158A  2590  120A  118A  	fcall	_readEEPROM
  9164     00EE  1283               	bcf	3,5	;RP0=0, select bank0
  9165     00EF  1303               	bcf	3,6	;RP1=0, select bank0
  9166     00F0  0826               	movf	?_readEEPROM,w
  9167     00F1  1683               	bsf	3,5	;RP0=1, select bank1
  9168     00F2  1303               	bcf	3,6	;RP1=0, select bank1
  9169     00F3  0720               	addwf	??_main^(0+128),w
  9170     00F4  00A2               	movwf	(??_main+2)^(0+128)
  9171     00F5  1283               	bcf	3,5	;RP0=0, select bank0
  9172     00F6  1303               	bcf	3,6	;RP1=0, select bank0
  9173     00F7  0827               	movf	?_readEEPROM+1,w
  9174     00F8  1803               	skipnc
  9175     00F9  0A27               	incf	?_readEEPROM+1,w
  9176     00FA  1683               	bsf	3,5	;RP0=1, select bank1
  9177     00FB  1303               	bcf	3,6	;RP1=0, select bank1
  9178     00FC  0721               	addwf	(??_main+1)^(0+128),w
  9179     00FD  00A3               	movwf	(??_main+3)^(0+128)
  9180     00FE  0822               	movf	(??_main+2)^(0+128),w
  9181     00FF  3EEE               	addlw	238
  9182     0100  1683               	bsf	3,5	;RP0=1, select bank3
  9183     0101  1703               	bsf	3,6	;RP1=1, select bank3
  9184     0102  00AC               	movwf	_main$1169^(0+384)
  9185     0103  1683               	bsf	3,5	;RP0=1, select bank1
  9186     0104  1303               	bcf	3,6	;RP1=0, select bank1
  9187     0105  0823               	movf	(??_main+3)^(0+128),w
  9188     0106  1803               	skipnc
  9189     0107  3E01               	addlw	1
  9190     0108  3E02               	addlw	2
  9191     0109  1683               	bsf	3,5	;RP0=1, select bank3
  9192     010A  1703               	bsf	3,6	;RP1=1, select bank3
  9193     010B  00AD               	movwf	(_main$1169+1)^(0+384)
  9194     010C                     l3510:
  9195                           
  9196                           ;main1.c: 278:     int realSaat = readEEPROM((epromBaslaAdress+3)*250+readEEPROM(epromBa
      +                          slaAdress));
  9197     010C  082D               	movf	(_main$1169+1)^(0+384),w
  9198     010D  1283               	bcf	3,5	;RP0=0, select bank0
  9199     010E  1303               	bcf	3,6	;RP1=0, select bank0
  9200     010F  00A7               	movwf	readEEPROM@address+1
  9201     0110  1683               	bsf	3,5	;RP0=1, select bank3
  9202     0111  1703               	bsf	3,6	;RP1=1, select bank3
  9203     0112  082C               	movf	_main$1169^(0+384),w
  9204     0113  1283               	bcf	3,5	;RP0=0, select bank0
  9205     0114  1303               	bcf	3,6	;RP1=0, select bank0
  9206     0115  00A6               	movwf	readEEPROM@address
  9207     0116  160A  158A  2590  120A  118A  	fcall	_readEEPROM
  9208     011B  1283               	bcf	3,5	;RP0=0, select bank0
  9209     011C  1303               	bcf	3,6	;RP1=0, select bank0
  9210     011D  0827               	movf	?_readEEPROM+1,w
  9211     011E  1683               	bsf	3,5	;RP0=1, select bank3
  9212     011F  1703               	bsf	3,6	;RP1=1, select bank3
  9213     0120  00C3               	movwf	(main@realSaat+1)^(0+384)
  9214     0121  1283               	bcf	3,5	;RP0=0, select bank0
  9215     0122  1303               	bcf	3,6	;RP1=0, select bank0
  9216     0123  0826               	movf	?_readEEPROM,w
  9217     0124  1683               	bsf	3,5	;RP0=1, select bank3
  9218     0125  1703               	bsf	3,6	;RP1=1, select bank3
  9219     0126  00C2               	movwf	main@realSaat^(0+384)
  9220     0127                     l3512:
  9221                           
  9222                           ;main1.c: 283:         sprintf(lcdText, "%5uh %02um", realSaat, dakika);
  9223     0127  300D               	movlw	low (STR_8| (0+32768))
  9224     0128  1283               	bcf	3,5	;RP0=0, select bank0
  9225     0129  1303               	bcf	3,6	;RP1=0, select bank0
  9226     012A  00D5               	movwf	sprintf@fmt
  9227     012B  3099               	movlw	high (STR_8| (0+32768))
  9228     012C  00D6               	movwf	sprintf@fmt+1
  9229     012D  1683               	bsf	3,5	;RP0=1, select bank3
  9230     012E  1703               	bsf	3,6	;RP1=1, select bank3
  9231     012F  0843               	movf	(main@realSaat+1)^(0+384),w
  9232     0130  1283               	bcf	3,5	;RP0=0, select bank0
  9233     0131  1303               	bcf	3,6	;RP1=0, select bank0
  9234     0132  00D8               	movwf	?_sprintf+3
  9235     0133  1683               	bsf	3,5	;RP0=1, select bank3
  9236     0134  1703               	bsf	3,6	;RP1=1, select bank3
  9237     0135  0842               	movf	main@realSaat^(0+384),w
  9238     0136  1283               	bcf	3,5	;RP0=0, select bank0
  9239     0137  1303               	bcf	3,6	;RP1=0, select bank0
  9240     0138  00D7               	movwf	?_sprintf+2
  9241     0139  1683               	bsf	3,5	;RP0=1, select bank3
  9242     013A  1703               	bsf	3,6	;RP1=1, select bank3
  9243     013B  0825               	movf	(main@dakika+1)^(0+384),w
  9244     013C  1283               	bcf	3,5	;RP0=0, select bank0
  9245     013D  1303               	bcf	3,6	;RP1=0, select bank0
  9246     013E  00DA               	movwf	?_sprintf+5
  9247     013F  1683               	bsf	3,5	;RP0=1, select bank3
  9248     0140  1703               	bsf	3,6	;RP1=1, select bank3
  9249     0141  0824               	movf	main@dakika^(0+384),w
  9250     0142  1283               	bcf	3,5	;RP0=0, select bank0
  9251     0143  1303               	bcf	3,6	;RP1=0, select bank0
  9252     0144  00D9               	movwf	?_sprintf+4
  9253     0145  30CE               	movlw	(low (main@lcdText| 0))& (0+255)
  9254     0146  160A  158A  2613  120A  118A  	fcall	_sprintf
  9255     014B                     l3514:
  9256                           
  9257                           ;main1.c: 286:      Lcd_Set_Cursor(1, 10);
  9258     014B  300A               	movlw	10
  9259     014C  1283               	bcf	3,5	;RP0=0, select bank0
  9260     014D  1303               	bcf	3,6	;RP1=0, select bank0
  9261     014E  00A4               	movwf	Lcd_Set_Cursor@b
  9262     014F  3001               	movlw	1
  9263     0150  160A  118A  2042  120A  118A  	fcall	_Lcd_Set_Cursor
  9264     0155                     l3516:
  9265                           
  9266                           ;main1.c: 287:      Lcd_Write_String("  ");
  9267     0155  30D2               	movlw	low ((STR_18+12)| (0+32768))
  9268     0156  1283               	bcf	3,5	;RP0=0, select bank0
  9269     0157  1303               	bcf	3,6	;RP1=0, select bank0
  9270     0158  00A5               	movwf	Lcd_Write_String@a
  9271     0159  3098               	movlw	high ((STR_18+12)| (0+32768))
  9272     015A  00A6               	movwf	Lcd_Write_String@a+1
  9273     015B  160A  158A  276E  120A  118A  	fcall	_Lcd_Write_String
  9274     0160                     l3518:
  9275                           
  9276                           ;main1.c: 288:      Lcd_Set_Cursor(1, 11);
  9277     0160  300B               	movlw	11
  9278     0161  1283               	bcf	3,5	;RP0=0, select bank0
  9279     0162  1303               	bcf	3,6	;RP1=0, select bank0
  9280     0163  00A4               	movwf	Lcd_Set_Cursor@b
  9281     0164  3001               	movlw	1
  9282     0165  160A  118A  2042  120A  118A  	fcall	_Lcd_Set_Cursor
  9283     016A                     l3520:
  9284                           
  9285                           ;main1.c: 289:      Lcd_Write_String(lcdText);
  9286     016A  30CE               	movlw	(low (main@lcdText| 0))& (0+255)
  9287     016B  1283               	bcf	3,5	;RP0=0, select bank0
  9288     016C  1303               	bcf	3,6	;RP1=0, select bank0
  9289     016D  00A5               	movwf	Lcd_Write_String@a
  9290     016E  3000               	movlw	0
  9291     016F  00A6               	movwf	Lcd_Write_String@a+1
  9292     0170  160A  158A  276E  120A  118A  	fcall	_Lcd_Write_String
  9293     0175                     l3522:
  9294                           
  9295                           ;main1.c: 293:     if ( ( realSaat % 500 == 0 && realSaat != 0
  9296     0175  30F4               	movlw	244
  9297     0176  1283               	bcf	3,5	;RP0=0, select bank0
  9298     0177  1303               	bcf	3,6	;RP1=0, select bank0
  9299     0178  00AA               	movwf	___awmod@divisor
  9300     0179  3001               	movlw	1
  9301     017A  00AB               	movwf	___awmod@divisor+1
  9302     017B  1683               	bsf	3,5	;RP0=1, select bank3
  9303     017C  1703               	bsf	3,6	;RP1=1, select bank3
  9304     017D  0843               	movf	(main@realSaat+1)^(0+384),w
  9305     017E  1283               	bcf	3,5	;RP0=0, select bank0
  9306     017F  1303               	bcf	3,6	;RP1=0, select bank0
  9307     0180  00AD               	movwf	___awmod@dividend+1
  9308     0181  1683               	bsf	3,5	;RP0=1, select bank3
  9309     0182  1703               	bsf	3,6	;RP1=1, select bank3
  9310     0183  0842               	movf	main@realSaat^(0+384),w
  9311     0184  1283               	bcf	3,5	;RP0=0, select bank0
  9312     0185  1303               	bcf	3,6	;RP1=0, select bank0
  9313     0186  00AC               	movwf	___awmod@dividend
  9314     0187  160A  118A  20E8  120A  118A  	fcall	___awmod
  9315     018C  1283               	bcf	3,5	;RP0=0, select bank0
  9316     018D  1303               	bcf	3,6	;RP1=0, select bank0
  9317     018E  082A               	movf	?___awmod,w
  9318     018F  042B               	iorwf	?___awmod+1,w
  9319     0190  1D03               	btfss	3,2
  9320     0191  2993               	goto	u4561
  9321     0192  2994               	goto	u4560
  9322     0193                     u4561:
  9323     0193  299C               	goto	l3526
  9324     0194                     u4560:
  9325     0194                     l3524:
  9326     0194  1683               	bsf	3,5	;RP0=1, select bank3
  9327     0195  1703               	bsf	3,6	;RP1=1, select bank3
  9328     0196  0842               	movf	main@realSaat^(0+384),w
  9329     0197  0443               	iorwf	(main@realSaat+1)^(0+384),w
  9330     0198  1D03               	btfss	3,2
  9331     0199  299B               	goto	u4571
  9332     019A  299C               	goto	u4570
  9333     019B                     u4571:
  9334     019B  29EC               	goto	l3534
  9335     019C                     u4570:
  9336     019C                     l3526:
  9337     019C  30F4               	movlw	244
  9338     019D  1283               	bcf	3,5	;RP0=0, select bank0
  9339     019E  1303               	bcf	3,6	;RP1=0, select bank0
  9340     019F  00AA               	movwf	___awmod@divisor
  9341     01A0  3001               	movlw	1
  9342     01A1  00AB               	movwf	___awmod@divisor+1
  9343     01A2  1683               	bsf	3,5	;RP0=1, select bank3
  9344     01A3  1703               	bsf	3,6	;RP1=1, select bank3
  9345     01A4  0843               	movf	(main@realSaat+1)^(0+384),w
  9346     01A5  1283               	bcf	3,5	;RP0=0, select bank0
  9347     01A6  1303               	bcf	3,6	;RP1=0, select bank0
  9348     01A7  00AD               	movwf	___awmod@dividend+1
  9349     01A8  1683               	bsf	3,5	;RP0=1, select bank3
  9350     01A9  1703               	bsf	3,6	;RP1=1, select bank3
  9351     01AA  0842               	movf	main@realSaat^(0+384),w
  9352     01AB  1283               	bcf	3,5	;RP0=0, select bank0
  9353     01AC  1303               	bcf	3,6	;RP1=0, select bank0
  9354     01AD  00AC               	movwf	___awmod@dividend
  9355     01AE  160A  118A  20E8  120A  118A  	fcall	___awmod
  9356     01B3  1283               	bcf	3,5	;RP0=0, select bank0
  9357     01B4  1303               	bcf	3,6	;RP1=0, select bank0
  9358     01B5  032A               	decf	?___awmod,w
  9359     01B6  042B               	iorwf	?___awmod+1,w
  9360     01B7  1D03               	btfss	3,2
  9361     01B8  29BA               	goto	u4581
  9362     01B9  29BB               	goto	u4580
  9363     01BA                     u4581:
  9364     01BA  29C3               	goto	l3530
  9365     01BB                     u4580:
  9366     01BB                     l3528:
  9367     01BB  1683               	bsf	3,5	;RP0=1, select bank3
  9368     01BC  1703               	bsf	3,6	;RP1=1, select bank3
  9369     01BD  0342               	decf	main@realSaat^(0+384),w
  9370     01BE  0443               	iorwf	(main@realSaat+1)^(0+384),w
  9371     01BF  1D03               	btfss	3,2
  9372     01C0  29C2               	goto	u4591
  9373     01C1  29C3               	goto	u4590
  9374     01C2                     u4591:
  9375     01C2  29EC               	goto	l3534
  9376     01C3                     u4590:
  9377     01C3                     l3530:
  9378     01C3  30F4               	movlw	244
  9379     01C4  1283               	bcf	3,5	;RP0=0, select bank0
  9380     01C5  1303               	bcf	3,6	;RP1=0, select bank0
  9381     01C6  00AA               	movwf	___awmod@divisor
  9382     01C7  3001               	movlw	1
  9383     01C8  00AB               	movwf	___awmod@divisor+1
  9384     01C9  1683               	bsf	3,5	;RP0=1, select bank3
  9385     01CA  1703               	bsf	3,6	;RP1=1, select bank3
  9386     01CB  0843               	movf	(main@realSaat+1)^(0+384),w
  9387     01CC  1283               	bcf	3,5	;RP0=0, select bank0
  9388     01CD  1303               	bcf	3,6	;RP1=0, select bank0
  9389     01CE  00AD               	movwf	___awmod@dividend+1
  9390     01CF  1683               	bsf	3,5	;RP0=1, select bank3
  9391     01D0  1703               	bsf	3,6	;RP1=1, select bank3
  9392     01D1  0842               	movf	main@realSaat^(0+384),w
  9393     01D2  1283               	bcf	3,5	;RP0=0, select bank0
  9394     01D3  1303               	bcf	3,6	;RP1=0, select bank0
  9395     01D4  00AC               	movwf	___awmod@dividend
  9396     01D5  160A  118A  20E8  120A  118A  	fcall	___awmod
  9397     01DA  3002               	movlw	2
  9398     01DB  1283               	bcf	3,5	;RP0=0, select bank0
  9399     01DC  1303               	bcf	3,6	;RP1=0, select bank0
  9400     01DD  062A               	xorwf	?___awmod,w
  9401     01DE  042B               	iorwf	?___awmod+1,w
  9402     01DF  1D03               	btfss	3,2
  9403     01E0  29E2               	goto	u4601
  9404     01E1  29E3               	goto	u4600
  9405     01E2                     u4601:
  9406     01E2  29F7               	goto	l3538
  9407     01E3                     u4600:
  9408     01E3                     l3532:
  9409     01E3  3002               	movlw	2
  9410     01E4  1683               	bsf	3,5	;RP0=1, select bank3
  9411     01E5  1703               	bsf	3,6	;RP1=1, select bank3
  9412     01E6  0642               	xorwf	main@realSaat^(0+384),w
  9413     01E7  0443               	iorwf	(main@realSaat+1)^(0+384),w
  9414     01E8  1903               	btfsc	3,2
  9415     01E9  29EB               	goto	u4611
  9416     01EA  29EC               	goto	u4610
  9417     01EB                     u4611:
  9418     01EB  29F7               	goto	l3538
  9419     01EC                     u4610:
  9420     01EC                     l3534:
  9421     01EC  084F               	movf	(_currentTime^(0+384)+4),w
  9422     01ED  0450               	iorwf	((_currentTime+1)^(0+384)+4),w
  9423     01EE  1D03               	btfss	3,2
  9424     01EF  29F1               	goto	u4621
  9425     01F0  29F2               	goto	u4620
  9426     01F1                     u4621:
  9427     01F1  29F7               	goto	l3538
  9428     01F2                     u4620:
  9429     01F2                     l3536:
  9430                           
  9431                           ;main1.c: 296:      ) && currentTime.minutes == 0 ) {;main1.c: 297:     yagBakim();
  9432     01F2  120A  118A  27A9  120A  118A  	fcall	_yagBakim
  9433     01F7                     l3538:
  9434                           
  9435                           ;main1.c: 304:     ADCON0bits.CHS = 0b0010;
  9436     01F7  1283               	bcf	3,5	;RP0=0, select bank0
  9437     01F8  1303               	bcf	3,6	;RP1=0, select bank0
  9438     01F9  081F               	movf	31,w	;volatile
  9439     01FA  39C7               	andlw	-57
  9440     01FB  3810               	iorlw	16
  9441     01FC  009F               	movwf	31	;volatile
  9442     01FD                     l3540:
  9443                           
  9444                           ;main1.c: 305:     _delay((unsigned long)((50)*(4000000/4000000.0)));
  9445     01FD  300F               	movlw	15
  9446     01FE  1683               	bsf	3,5	;RP0=1, select bank1
  9447     01FF  1303               	bcf	3,6	;RP1=0, select bank1
  9448     0200  00A0               	movwf	??_main^(0+128)
  9449     0201                     u5047:
  9450     0201  0BA0               	decfsz	??_main^(0+128),f
  9451     0202  2A01               	goto	u5047
  9452     0203  2A04               	nop2
  9453     0204                     l3542:
  9454                           
  9455                           ;main1.c: 306:     ADCON0bits.GO = 1;
  9456     0204  1283               	bcf	3,5	;RP0=0, select bank0
  9457     0205  1303               	bcf	3,6	;RP1=0, select bank0
  9458     0206  151F               	bsf	31,2	;volatile
  9459     0207                     l231:	
  9460                           ;main1.c: 307:     while (ADCON0bits.GO);
  9461                           
  9462     0207  191F               	btfsc	31,2	;volatile
  9463     0208  2A0A               	goto	u4631
  9464     0209  2A0B               	goto	u4630
  9465     020A                     u4631:
  9466     020A  2A07               	goto	l231
  9467     020B                     u4630:
  9468     020B                     l3544:
  9469                           
  9470                           ;main1.c: 308:     adcValue3 = (ADRESH << 8) | ADRESL;
  9471     020B  1683               	bsf	3,5	;RP0=1, select bank1
  9472     020C  1303               	bcf	3,6	;RP1=0, select bank1
  9473     020D  081E               	movf	30,w	;volatile
  9474     020E  00A0               	movwf	??_main^(0+128)
  9475     020F  01A1               	clrf	(??_main^(0+128)+1)
  9476     0210  1283               	bcf	3,5	;RP0=0, select bank0
  9477     0211  1303               	bcf	3,6	;RP1=0, select bank0
  9478     0212  081E               	movf	30,w	;volatile
  9479     0213  1683               	bsf	3,5	;RP0=1, select bank1
  9480     0214  1303               	bcf	3,6	;RP1=0, select bank1
  9481     0215  00A2               	movwf	(??_main+2)^(0+128)
  9482     0216  01A3               	clrf	((??_main+2)^(0+128)+1)
  9483     0217  0822               	movf	(??_main+2)^(0+128),w
  9484     0218  00A3               	movwf	((??_main+2)^(0+128)+1)
  9485     0219  01A2               	clrf	(??_main+2)^(0+128)
  9486     021A  0820               	movf	??_main^(0+128),w
  9487     021B  0422               	iorwf	(??_main+2)^(0+128),w
  9488     021C  1283               	bcf	3,5	;RP0=0, select bank0
  9489     021D  1303               	bcf	3,6	;RP1=0, select bank0
  9490     021E  00A0               	movwf	___xxtofl@val
  9491     021F  1683               	bsf	3,5	;RP0=1, select bank1
  9492     0220  1303               	bcf	3,6	;RP1=0, select bank1
  9493     0221  0821               	movf	(??_main+1)^(0+128),w
  9494     0222  0423               	iorwf	(??_main+3)^(0+128),w
  9495     0223  1283               	bcf	3,5	;RP0=0, select bank0
  9496     0224  1303               	bcf	3,6	;RP1=0, select bank0
  9497     0225  00A1               	movwf	___xxtofl@val+1
  9498     0226  01A2               	clrf	___xxtofl@val+2
  9499     0227  1BA1               	btfsc	___xxtofl@val+1,7
  9500     0228  03A2               	decf	___xxtofl@val+2,f
  9501     0229  0822               	movf	___xxtofl@val+2,w
  9502     022A  00A3               	movwf	___xxtofl@val+3
  9503     022B  3001               	movlw	1
  9504     022C  160A  118A  23D8  120A  118A  	fcall	___xxtofl
  9505     0231  1283               	bcf	3,5	;RP0=0, select bank0
  9506     0232  1303               	bcf	3,6	;RP1=0, select bank0
  9507     0233  0823               	movf	?___xxtofl+3,w
  9508     0234  1683               	bsf	3,5	;RP0=1, select bank3
  9509     0235  1703               	bsf	3,6	;RP1=1, select bank3
  9510     0236  0093               	movwf	(main@adcValue3+3)^(0+384)
  9511     0237  1283               	bcf	3,5	;RP0=0, select bank0
  9512     0238  1303               	bcf	3,6	;RP1=0, select bank0
  9513     0239  0822               	movf	?___xxtofl+2,w
  9514     023A  1683               	bsf	3,5	;RP0=1, select bank3
  9515     023B  1703               	bsf	3,6	;RP1=1, select bank3
  9516     023C  0092               	movwf	(main@adcValue3+2)^(0+384)
  9517     023D  1283               	bcf	3,5	;RP0=0, select bank0
  9518     023E  1303               	bcf	3,6	;RP1=0, select bank0
  9519     023F  0821               	movf	?___xxtofl+1,w
  9520     0240  1683               	bsf	3,5	;RP0=1, select bank3
  9521     0241  1703               	bsf	3,6	;RP1=1, select bank3
  9522     0242  0091               	movwf	(main@adcValue3+1)^(0+384)
  9523     0243  1283               	bcf	3,5	;RP0=0, select bank0
  9524     0244  1303               	bcf	3,6	;RP1=0, select bank0
  9525     0245  0820               	movf	?___xxtofl,w
  9526     0246  1683               	bsf	3,5	;RP0=1, select bank3
  9527     0247  1703               	bsf	3,6	;RP1=1, select bank3
  9528     0248  0090               	movwf	main@adcValue3^(0+384)
  9529                           
  9530                           ;main1.c: 309:     float oranValue = adcValue3/1024.0;
  9531     0249  3044               	movlw	68
  9532     024A  1283               	bcf	3,5	;RP0=0, select bank0
  9533     024B  1303               	bcf	3,6	;RP1=0, select bank0
  9534     024C  00A3               	movwf	___fldiv@a+3
  9535     024D  3080               	movlw	128
  9536     024E  00A2               	movwf	___fldiv@a+2
  9537     024F  3000               	movlw	0
  9538     0250  00A1               	movwf	___fldiv@a+1
  9539     0251  3000               	movlw	0
  9540     0252  00A0               	movwf	___fldiv@a
  9541     0253  1683               	bsf	3,5	;RP0=1, select bank3
  9542     0254  1703               	bsf	3,6	;RP1=1, select bank3
  9543     0255  0813               	movf	(main@adcValue3+3)^(0+384),w
  9544     0256  1283               	bcf	3,5	;RP0=0, select bank0
  9545     0257  1303               	bcf	3,6	;RP1=0, select bank0
  9546     0258  00A7               	movwf	___fldiv@b+3
  9547     0259  1683               	bsf	3,5	;RP0=1, select bank3
  9548     025A  1703               	bsf	3,6	;RP1=1, select bank3
  9549     025B  0812               	movf	(main@adcValue3+2)^(0+384),w
  9550     025C  1283               	bcf	3,5	;RP0=0, select bank0
  9551     025D  1303               	bcf	3,6	;RP1=0, select bank0
  9552     025E  00A6               	movwf	___fldiv@b+2
  9553     025F  1683               	bsf	3,5	;RP0=1, select bank3
  9554     0260  1703               	bsf	3,6	;RP1=1, select bank3
  9555     0261  0811               	movf	(main@adcValue3+1)^(0+384),w
  9556     0262  1283               	bcf	3,5	;RP0=0, select bank0
  9557     0263  1303               	bcf	3,6	;RP1=0, select bank0
  9558     0264  00A5               	movwf	___fldiv@b+1
  9559     0265  1683               	bsf	3,5	;RP0=1, select bank3
  9560     0266  1703               	bsf	3,6	;RP1=1, select bank3
  9561     0267  0810               	movf	main@adcValue3^(0+384),w
  9562     0268  1283               	bcf	3,5	;RP0=0, select bank0
  9563     0269  1303               	bcf	3,6	;RP1=0, select bank0
  9564     026A  00A4               	movwf	___fldiv@b
  9565     026B  120A  118A  2514  120A  118A  	fcall	___fldiv
  9566     0270  1283               	bcf	3,5	;RP0=0, select bank0
  9567     0271  1303               	bcf	3,6	;RP1=0, select bank0
  9568     0272  0823               	movf	?___fldiv+3,w
  9569     0273  1683               	bsf	3,5	;RP0=1, select bank3
  9570     0274  1703               	bsf	3,6	;RP1=1, select bank3
  9571     0275  0097               	movwf	(main@oranValue+3)^(0+384)
  9572     0276  1283               	bcf	3,5	;RP0=0, select bank0
  9573     0277  1303               	bcf	3,6	;RP1=0, select bank0
  9574     0278  0822               	movf	?___fldiv+2,w
  9575     0279  1683               	bsf	3,5	;RP0=1, select bank3
  9576     027A  1703               	bsf	3,6	;RP1=1, select bank3
  9577     027B  0096               	movwf	(main@oranValue+2)^(0+384)
  9578     027C  1283               	bcf	3,5	;RP0=0, select bank0
  9579     027D  1303               	bcf	3,6	;RP1=0, select bank0
  9580     027E  0821               	movf	?___fldiv+1,w
  9581     027F  1683               	bsf	3,5	;RP0=1, select bank3
  9582     0280  1703               	bsf	3,6	;RP1=1, select bank3
  9583     0281  0095               	movwf	(main@oranValue+1)^(0+384)
  9584     0282  1283               	bcf	3,5	;RP0=0, select bank0
  9585     0283  1303               	bcf	3,6	;RP1=0, select bank0
  9586     0284  0820               	movf	?___fldiv,w
  9587     0285  1683               	bsf	3,5	;RP0=1, select bank3
  9588     0286  1703               	bsf	3,6	;RP1=1, select bank3
  9589     0287  0094               	movwf	main@oranValue^(0+384)
  9590     0288                     l3546:
  9591                           
  9592                           ;main1.c: 312:     ADCON0bits.CHS = 0b0011;
  9593     0288  1283               	bcf	3,5	;RP0=0, select bank0
  9594     0289  1303               	bcf	3,6	;RP1=0, select bank0
  9595     028A  081F               	movf	31,w	;volatile
  9596     028B  39C7               	andlw	-57
  9597     028C  3818               	iorlw	24
  9598     028D  009F               	movwf	31	;volatile
  9599     028E                     l3548:
  9600                           
  9601                           ;main1.c: 313:     _delay((unsigned long)((50)*(4000000/4000000.0)));
  9602     028E  300F               	movlw	15
  9603     028F  1683               	bsf	3,5	;RP0=1, select bank1
  9604     0290  1303               	bcf	3,6	;RP1=0, select bank1
  9605     0291  00A0               	movwf	??_main^(0+128)
  9606     0292                     u5057:
  9607     0292  0BA0               	decfsz	??_main^(0+128),f
  9608     0293  2A92               	goto	u5057
  9609     0294  2A95               	nop2
  9610     0295                     l3550:
  9611                           
  9612                           ;main1.c: 314:     ADCON0bits.GO = 1;
  9613     0295  1283               	bcf	3,5	;RP0=0, select bank0
  9614     0296  1303               	bcf	3,6	;RP1=0, select bank0
  9615     0297  151F               	bsf	31,2	;volatile
  9616     0298                     l234:	
  9617                           ;main1.c: 315:     while (ADCON0bits.GO);
  9618                           
  9619     0298  191F               	btfsc	31,2	;volatile
  9620     0299  2A9B               	goto	u4641
  9621     029A  2A9C               	goto	u4640
  9622     029B                     u4641:
  9623     029B  2A98               	goto	l234
  9624     029C                     u4640:
  9625     029C                     l3552:
  9626                           
  9627                           ;main1.c: 316:     adcValue2 = (ADRESH << 8) | ADRESL;
  9628     029C  081E               	movf	30,w	;volatile
  9629     029D  1683               	bsf	3,5	;RP0=1, select bank3
  9630     029E  1703               	bsf	3,6	;RP1=1, select bank3
  9631     029F  00A1               	movwf	(main@adcValue2+1)^(0+384)
  9632     02A0  1683               	bsf	3,5	;RP0=1, select bank1
  9633     02A1  1303               	bcf	3,6	;RP1=0, select bank1
  9634     02A2  081E               	movf	30,w	;volatile
  9635     02A3  1683               	bsf	3,5	;RP0=1, select bank3
  9636     02A4  1703               	bsf	3,6	;RP1=1, select bank3
  9637     02A5  00A0               	movwf	main@adcValue2^(0+384)
  9638     02A6                     l3554:
  9639                           
  9640                           ;main1.c: 318:     float integerPart = adcValue2*oranValue*3;
  9641     02A6  0817               	movf	(main@oranValue+3)^(0+384),w
  9642     02A7  1283               	bcf	3,5	;RP0=0, select bank0
  9643     02A8  1303               	bcf	3,6	;RP1=0, select bank0
  9644     02A9  00BD               	movwf	___flmul@b+3
  9645     02AA  1683               	bsf	3,5	;RP0=1, select bank3
  9646     02AB  1703               	bsf	3,6	;RP1=1, select bank3
  9647     02AC  0816               	movf	(main@oranValue+2)^(0+384),w
  9648     02AD  1283               	bcf	3,5	;RP0=0, select bank0
  9649     02AE  1303               	bcf	3,6	;RP1=0, select bank0
  9650     02AF  00BC               	movwf	___flmul@b+2
  9651     02B0  1683               	bsf	3,5	;RP0=1, select bank3
  9652     02B1  1703               	bsf	3,6	;RP1=1, select bank3
  9653     02B2  0815               	movf	(main@oranValue+1)^(0+384),w
  9654     02B3  1283               	bcf	3,5	;RP0=0, select bank0
  9655     02B4  1303               	bcf	3,6	;RP1=0, select bank0
  9656     02B5  00BB               	movwf	___flmul@b+1
  9657     02B6  1683               	bsf	3,5	;RP0=1, select bank3
  9658     02B7  1703               	bsf	3,6	;RP1=1, select bank3
  9659     02B8  0814               	movf	main@oranValue^(0+384),w
  9660     02B9  1283               	bcf	3,5	;RP0=0, select bank0
  9661     02BA  1303               	bcf	3,6	;RP1=0, select bank0
  9662     02BB  00BA               	movwf	___flmul@b
  9663     02BC  1683               	bsf	3,5	;RP0=1, select bank3
  9664     02BD  1703               	bsf	3,6	;RP1=1, select bank3
  9665     02BE  0820               	movf	main@adcValue2^(0+384),w
  9666     02BF  1283               	bcf	3,5	;RP0=0, select bank0
  9667     02C0  1303               	bcf	3,6	;RP1=0, select bank0
  9668     02C1  00A0               	movwf	___xxtofl@val
  9669     02C2  1683               	bsf	3,5	;RP0=1, select bank3
  9670     02C3  1703               	bsf	3,6	;RP1=1, select bank3
  9671     02C4  0821               	movf	(main@adcValue2+1)^(0+384),w
  9672     02C5  1283               	bcf	3,5	;RP0=0, select bank0
  9673     02C6  1303               	bcf	3,6	;RP1=0, select bank0
  9674     02C7  00A1               	movwf	___xxtofl@val+1
  9675     02C8  3000               	movlw	0
  9676     02C9  1BA1               	btfsc	___xxtofl@val+1,7
  9677     02CA  30FF               	movlw	255
  9678     02CB  00A2               	movwf	___xxtofl@val+2
  9679     02CC  00A3               	movwf	___xxtofl@val+3
  9680     02CD  3001               	movlw	1
  9681     02CE  160A  118A  23D8  120A  118A  	fcall	___xxtofl
  9682     02D3  1283               	bcf	3,5	;RP0=0, select bank0
  9683     02D4  1303               	bcf	3,6	;RP1=0, select bank0
  9684     02D5  0823               	movf	?___xxtofl+3,w
  9685     02D6  00C1               	movwf	___flmul@a+3
  9686     02D7  0822               	movf	?___xxtofl+2,w
  9687     02D8  00C0               	movwf	___flmul@a+2
  9688     02D9  0821               	movf	?___xxtofl+1,w
  9689     02DA  00BF               	movwf	___flmul@a+1
  9690     02DB  0820               	movf	?___xxtofl,w
  9691     02DC  00BE               	movwf	___flmul@a
  9692     02DD  120A  158A  2031  120A  118A  	fcall	___flmul
  9693     02E2  1283               	bcf	3,5	;RP0=0, select bank0
  9694     02E3  1303               	bcf	3,6	;RP1=0, select bank0
  9695     02E4  083D               	movf	?___flmul+3,w
  9696     02E5  1683               	bsf	3,5	;RP0=1, select bank3
  9697     02E6  1703               	bsf	3,6	;RP1=1, select bank3
  9698     02E7  009F               	movwf	(_main$1170+3)^(0+384)
  9699     02E8  1283               	bcf	3,5	;RP0=0, select bank0
  9700     02E9  1303               	bcf	3,6	;RP1=0, select bank0
  9701     02EA  083C               	movf	?___flmul+2,w
  9702     02EB  1683               	bsf	3,5	;RP0=1, select bank3
  9703     02EC  1703               	bsf	3,6	;RP1=1, select bank3
  9704     02ED  009E               	movwf	(_main$1170+2)^(0+384)
  9705     02EE  1283               	bcf	3,5	;RP0=0, select bank0
  9706     02EF  1303               	bcf	3,6	;RP1=0, select bank0
  9707     02F0  083B               	movf	?___flmul+1,w
  9708     02F1  1683               	bsf	3,5	;RP0=1, select bank3
  9709     02F2  1703               	bsf	3,6	;RP1=1, select bank3
  9710     02F3  009D               	movwf	(_main$1170+1)^(0+384)
  9711     02F4  1283               	bcf	3,5	;RP0=0, select bank0
  9712     02F5  1303               	bcf	3,6	;RP1=0, select bank0
  9713     02F6  083A               	movf	?___flmul,w
  9714     02F7  1683               	bsf	3,5	;RP0=1, select bank3
  9715     02F8  1703               	bsf	3,6	;RP1=1, select bank3
  9716     02F9  009C               	movwf	_main$1170^(0+384)
  9717     02FA                     l3556:
  9718                           
  9719                           ;main1.c: 318:     float integerPart = adcValue2*oranValue*3;
  9720     02FA  3040               	movlw	64
  9721     02FB  1283               	bcf	3,5	;RP0=0, select bank0
  9722     02FC  1303               	bcf	3,6	;RP1=0, select bank0
  9723     02FD  00BD               	movwf	___flmul@b+3
  9724     02FE  3040               	movlw	64
  9725     02FF  00BC               	movwf	___flmul@b+2
  9726     0300  3000               	movlw	0
  9727     0301  00BB               	movwf	___flmul@b+1
  9728     0302  3000               	movlw	0
  9729     0303  00BA               	movwf	___flmul@b
  9730     0304  1683               	bsf	3,5	;RP0=1, select bank3
  9731     0305  1703               	bsf	3,6	;RP1=1, select bank3
  9732     0306  081F               	movf	(_main$1170+3)^(0+384),w
  9733     0307  1283               	bcf	3,5	;RP0=0, select bank0
  9734     0308  1303               	bcf	3,6	;RP1=0, select bank0
  9735     0309  00C1               	movwf	___flmul@a+3
  9736     030A  1683               	bsf	3,5	;RP0=1, select bank3
  9737     030B  1703               	bsf	3,6	;RP1=1, select bank3
  9738     030C  081E               	movf	(_main$1170+2)^(0+384),w
  9739     030D  1283               	bcf	3,5	;RP0=0, select bank0
  9740     030E  1303               	bcf	3,6	;RP1=0, select bank0
  9741     030F  00C0               	movwf	___flmul@a+2
  9742     0310  1683               	bsf	3,5	;RP0=1, select bank3
  9743     0311  1703               	bsf	3,6	;RP1=1, select bank3
  9744     0312  081D               	movf	(_main$1170+1)^(0+384),w
  9745     0313  1283               	bcf	3,5	;RP0=0, select bank0
  9746     0314  1303               	bcf	3,6	;RP1=0, select bank0
  9747     0315  00BF               	movwf	___flmul@a+1
  9748     0316  1683               	bsf	3,5	;RP0=1, select bank3
  9749     0317  1703               	bsf	3,6	;RP1=1, select bank3
  9750     0318  081C               	movf	_main$1170^(0+384),w
  9751     0319  1283               	bcf	3,5	;RP0=0, select bank0
  9752     031A  1303               	bcf	3,6	;RP1=0, select bank0
  9753     031B  00BE               	movwf	___flmul@a
  9754     031C  120A  158A  2031  120A  118A  	fcall	___flmul
  9755     0321  1283               	bcf	3,5	;RP0=0, select bank0
  9756     0322  1303               	bcf	3,6	;RP1=0, select bank0
  9757     0323  083D               	movf	?___flmul+3,w
  9758     0324  1683               	bsf	3,5	;RP0=1, select bank3
  9759     0325  1703               	bsf	3,6	;RP1=1, select bank3
  9760     0326  00BB               	movwf	(main@integerPart+3)^(0+384)
  9761     0327  1283               	bcf	3,5	;RP0=0, select bank0
  9762     0328  1303               	bcf	3,6	;RP1=0, select bank0
  9763     0329  083C               	movf	?___flmul+2,w
  9764     032A  1683               	bsf	3,5	;RP0=1, select bank3
  9765     032B  1703               	bsf	3,6	;RP1=1, select bank3
  9766     032C  00BA               	movwf	(main@integerPart+2)^(0+384)
  9767     032D  1283               	bcf	3,5	;RP0=0, select bank0
  9768     032E  1303               	bcf	3,6	;RP1=0, select bank0
  9769     032F  083B               	movf	?___flmul+1,w
  9770     0330  1683               	bsf	3,5	;RP0=1, select bank3
  9771     0331  1703               	bsf	3,6	;RP1=1, select bank3
  9772     0332  00B9               	movwf	(main@integerPart+1)^(0+384)
  9773     0333  1283               	bcf	3,5	;RP0=0, select bank0
  9774     0334  1303               	bcf	3,6	;RP1=0, select bank0
  9775     0335  083A               	movf	?___flmul,w
  9776     0336  1683               	bsf	3,5	;RP0=1, select bank3
  9777     0337  1703               	bsf	3,6	;RP1=1, select bank3
  9778     0338  00B8               	movwf	main@integerPart^(0+384)
  9779     0339                     l3558:
  9780                           
  9781                           ;main1.c: 320:     int binler = (int)integerPart/1000;
  9782     0339  30E8               	movlw	232
  9783     033A  1283               	bcf	3,5	;RP0=0, select bank0
  9784     033B  1303               	bcf	3,6	;RP1=0, select bank0
  9785     033C  00AA               	movwf	___awdiv@divisor
  9786     033D  3003               	movlw	3
  9787     033E  00AB               	movwf	___awdiv@divisor+1
  9788     033F  1683               	bsf	3,5	;RP0=1, select bank3
  9789     0340  1703               	bsf	3,6	;RP1=1, select bank3
  9790     0341  083B               	movf	(main@integerPart+3)^(0+384),w
  9791     0342  1283               	bcf	3,5	;RP0=0, select bank0
  9792     0343  1303               	bcf	3,6	;RP1=0, select bank0
  9793     0344  00A3               	movwf	___fltol@f1+3
  9794     0345  1683               	bsf	3,5	;RP0=1, select bank3
  9795     0346  1703               	bsf	3,6	;RP1=1, select bank3
  9796     0347  083A               	movf	(main@integerPart+2)^(0+384),w
  9797     0348  1283               	bcf	3,5	;RP0=0, select bank0
  9798     0349  1303               	bcf	3,6	;RP1=0, select bank0
  9799     034A  00A2               	movwf	___fltol@f1+2
  9800     034B  1683               	bsf	3,5	;RP0=1, select bank3
  9801     034C  1703               	bsf	3,6	;RP1=1, select bank3
  9802     034D  0839               	movf	(main@integerPart+1)^(0+384),w
  9803     034E  1283               	bcf	3,5	;RP0=0, select bank0
  9804     034F  1303               	bcf	3,6	;RP1=0, select bank0
  9805     0350  00A1               	movwf	___fltol@f1+1
  9806     0351  1683               	bsf	3,5	;RP0=1, select bank3
  9807     0352  1703               	bsf	3,6	;RP1=1, select bank3
  9808     0353  0838               	movf	main@integerPart^(0+384),w
  9809     0354  1283               	bcf	3,5	;RP0=0, select bank0
  9810     0355  1303               	bcf	3,6	;RP1=0, select bank0
  9811     0356  00A0               	movwf	___fltol@f1
  9812     0357  160A  118A  22E4  120A  118A  	fcall	___fltol
  9813     035C  1283               	bcf	3,5	;RP0=0, select bank0
  9814     035D  1303               	bcf	3,6	;RP1=0, select bank0
  9815     035E  0821               	movf	?___fltol+1,w
  9816     035F  00AD               	movwf	___awdiv@dividend+1
  9817     0360  0820               	movf	?___fltol,w
  9818     0361  00AC               	movwf	___awdiv@dividend
  9819     0362  160A  118A  220D  120A  118A  	fcall	___awdiv
  9820     0367  1283               	bcf	3,5	;RP0=0, select bank0
  9821     0368  1303               	bcf	3,6	;RP1=0, select bank0
  9822     0369  082B               	movf	?___awdiv+1,w
  9823     036A  1683               	bsf	3,5	;RP0=1, select bank3
  9824     036B  1703               	bsf	3,6	;RP1=1, select bank3
  9825     036C  00B7               	movwf	(main@binler+1)^(0+384)
  9826     036D  1283               	bcf	3,5	;RP0=0, select bank0
  9827     036E  1303               	bcf	3,6	;RP1=0, select bank0
  9828     036F  082A               	movf	?___awdiv,w
  9829     0370  1683               	bsf	3,5	;RP0=1, select bank3
  9830     0371  1703               	bsf	3,6	;RP1=1, select bank3
  9831     0372  00B6               	movwf	main@binler^(0+384)
  9832     0373                     l3560:
  9833                           
  9834                           ;main1.c: 321:     int yuzler = ((int)integerPart-binler*1000)/100;
  9835     0373  3064               	movlw	100
  9836     0374  1283               	bcf	3,5	;RP0=0, select bank0
  9837     0375  1303               	bcf	3,6	;RP1=0, select bank0
  9838     0376  00AA               	movwf	___awdiv@divisor
  9839     0377  3000               	movlw	0
  9840     0378  00AB               	movwf	___awdiv@divisor+1
  9841     0379  1683               	bsf	3,5	;RP0=1, select bank3
  9842     037A  1703               	bsf	3,6	;RP1=1, select bank3
  9843     037B  083B               	movf	(main@integerPart+3)^(0+384),w
  9844     037C  1283               	bcf	3,5	;RP0=0, select bank0
  9845     037D  1303               	bcf	3,6	;RP1=0, select bank0
  9846     037E  00A3               	movwf	___fltol@f1+3
  9847     037F  1683               	bsf	3,5	;RP0=1, select bank3
  9848     0380  1703               	bsf	3,6	;RP1=1, select bank3
  9849     0381  083A               	movf	(main@integerPart+2)^(0+384),w
  9850     0382  1283               	bcf	3,5	;RP0=0, select bank0
  9851     0383  1303               	bcf	3,6	;RP1=0, select bank0
  9852     0384  00A2               	movwf	___fltol@f1+2
  9853     0385  1683               	bsf	3,5	;RP0=1, select bank3
  9854     0386  1703               	bsf	3,6	;RP1=1, select bank3
  9855     0387  0839               	movf	(main@integerPart+1)^(0+384),w
  9856     0388  1283               	bcf	3,5	;RP0=0, select bank0
  9857     0389  1303               	bcf	3,6	;RP1=0, select bank0
  9858     038A  00A1               	movwf	___fltol@f1+1
  9859     038B  1683               	bsf	3,5	;RP0=1, select bank3
  9860     038C  1703               	bsf	3,6	;RP1=1, select bank3
  9861     038D  0838               	movf	main@integerPart^(0+384),w
  9862     038E  1283               	bcf	3,5	;RP0=0, select bank0
  9863     038F  1303               	bcf	3,6	;RP1=0, select bank0
  9864     0390  00A0               	movwf	___fltol@f1
  9865     0391  160A  118A  22E4  120A  118A  	fcall	___fltol
  9866     0396  1283               	bcf	3,5	;RP0=0, select bank0
  9867     0397  1303               	bcf	3,6	;RP1=0, select bank0
  9868     0398  0820               	movf	?___fltol,w
  9869     0399  1683               	bsf	3,5	;RP0=1, select bank1
  9870     039A  1303               	bcf	3,6	;RP1=0, select bank1
  9871     039B  00A0               	movwf	??_main^(0+128)
  9872     039C  1283               	bcf	3,5	;RP0=0, select bank0
  9873     039D  1303               	bcf	3,6	;RP1=0, select bank0
  9874     039E  0821               	movf	?___fltol+1,w
  9875     039F  1683               	bsf	3,5	;RP0=1, select bank1
  9876     03A0  1303               	bcf	3,6	;RP1=0, select bank1
  9877     03A1  00A1               	movwf	(??_main^(0+128)+1)
  9878     03A2  1283               	bcf	3,5	;RP0=0, select bank0
  9879     03A3  1303               	bcf	3,6	;RP1=0, select bank0
  9880     03A4  0822               	movf	?___fltol+2,w
  9881     03A5  1683               	bsf	3,5	;RP0=1, select bank1
  9882     03A6  1303               	bcf	3,6	;RP1=0, select bank1
  9883     03A7  00A2               	movwf	(??_main^(0+128)+2)
  9884     03A8  1283               	bcf	3,5	;RP0=0, select bank0
  9885     03A9  1303               	bcf	3,6	;RP1=0, select bank0
  9886     03AA  0823               	movf	?___fltol+3,w
  9887     03AB  1683               	bsf	3,5	;RP0=1, select bank1
  9888     03AC  1303               	bcf	3,6	;RP1=0, select bank1
  9889     03AD  00A3               	movwf	(??_main^(0+128)+3)
  9890     03AE  1683               	bsf	3,5	;RP0=1, select bank3
  9891     03AF  1703               	bsf	3,6	;RP1=1, select bank3
  9892     03B0  0837               	movf	(main@binler+1)^(0+384),w
  9893     03B1  1283               	bcf	3,5	;RP0=0, select bank0
  9894     03B2  1303               	bcf	3,6	;RP1=0, select bank0
  9895     03B3  00A1               	movwf	___wmul@multiplier+1
  9896     03B4  1683               	bsf	3,5	;RP0=1, select bank3
  9897     03B5  1703               	bsf	3,6	;RP1=1, select bank3
  9898     03B6  0836               	movf	main@binler^(0+384),w
  9899     03B7  1283               	bcf	3,5	;RP0=0, select bank0
  9900     03B8  1303               	bcf	3,6	;RP1=0, select bank0
  9901     03B9  00A0               	movwf	___wmul@multiplier
  9902     03BA  3018               	movlw	24
  9903     03BB  00A2               	movwf	___wmul@multiplicand
  9904     03BC  30FC               	movlw	252
  9905     03BD  00A3               	movwf	___wmul@multiplicand+1
  9906     03BE  160A  158A  2659  120A  118A  	fcall	___wmul
  9907     03C3  1283               	bcf	3,5	;RP0=0, select bank0
  9908     03C4  1303               	bcf	3,6	;RP1=0, select bank0
  9909     03C5  0820               	movf	?___wmul,w
  9910     03C6  1683               	bsf	3,5	;RP0=1, select bank1
  9911     03C7  1303               	bcf	3,6	;RP1=0, select bank1
  9912     03C8  0720               	addwf	??_main^(0+128),w
  9913     03C9  1283               	bcf	3,5	;RP0=0, select bank0
  9914     03CA  1303               	bcf	3,6	;RP1=0, select bank0
  9915     03CB  00AC               	movwf	___awdiv@dividend
  9916     03CC  0821               	movf	?___wmul+1,w
  9917     03CD  1803               	skipnc
  9918     03CE  0A21               	incf	?___wmul+1,w
  9919     03CF  1683               	bsf	3,5	;RP0=1, select bank1
  9920     03D0  1303               	bcf	3,6	;RP1=0, select bank1
  9921     03D1  0721               	addwf	(??_main+1)^(0+128),w
  9922     03D2  1283               	bcf	3,5	;RP0=0, select bank0
  9923     03D3  1303               	bcf	3,6	;RP1=0, select bank0
  9924     03D4  00AD               	movwf	___awdiv@dividend+1
  9925     03D5  160A  118A  220D  120A  118A  	fcall	___awdiv
  9926     03DA  1283               	bcf	3,5	;RP0=0, select bank0
  9927     03DB  1303               	bcf	3,6	;RP1=0, select bank0
  9928     03DC  082B               	movf	?___awdiv+1,w
  9929     03DD  1683               	bsf	3,5	;RP0=1, select bank3
  9930     03DE  1703               	bsf	3,6	;RP1=1, select bank3
  9931     03DF  00B5               	movwf	(main@yuzler+1)^(0+384)
  9932     03E0  1283               	bcf	3,5	;RP0=0, select bank0
  9933     03E1  1303               	bcf	3,6	;RP1=0, select bank0
  9934     03E2  082A               	movf	?___awdiv,w
  9935     03E3  1683               	bsf	3,5	;RP0=1, select bank3
  9936     03E4  1703               	bsf	3,6	;RP1=1, select bank3
  9937     03E5  00B4               	movwf	main@yuzler^(0+384)
  9938     03E6                     l3562:
  9939                           
  9940                           ;main1.c: 322:     int onlar = ((int)integerPart-binler*1000-yuzler*100)/10;
  9941     03E6  300A               	movlw	10
  9942     03E7  1283               	bcf	3,5	;RP0=0, select bank0
  9943     03E8  1303               	bcf	3,6	;RP1=0, select bank0
  9944     03E9  00AA               	movwf	___awdiv@divisor
  9945     03EA  3000               	movlw	0
  9946     03EB  00AB               	movwf	___awdiv@divisor+1
  9947     03EC  1683               	bsf	3,5	;RP0=1, select bank3
  9948     03ED  1703               	bsf	3,6	;RP1=1, select bank3
  9949     03EE  083B               	movf	(main@integerPart+3)^(0+384),w
  9950     03EF  1283               	bcf	3,5	;RP0=0, select bank0
  9951     03F0  1303               	bcf	3,6	;RP1=0, select bank0
  9952     03F1  00A3               	movwf	___fltol@f1+3
  9953     03F2  1683               	bsf	3,5	;RP0=1, select bank3
  9954     03F3  1703               	bsf	3,6	;RP1=1, select bank3
  9955     03F4  083A               	movf	(main@integerPart+2)^(0+384),w
  9956     03F5  1283               	bcf	3,5	;RP0=0, select bank0
  9957     03F6  1303               	bcf	3,6	;RP1=0, select bank0
  9958     03F7  00A2               	movwf	___fltol@f1+2
  9959     03F8  1683               	bsf	3,5	;RP0=1, select bank3
  9960     03F9  1703               	bsf	3,6	;RP1=1, select bank3
  9961     03FA  0839               	movf	(main@integerPart+1)^(0+384),w
  9962     03FB  1283               	bcf	3,5	;RP0=0, select bank0
  9963     03FC  1303               	bcf	3,6	;RP1=0, select bank0
  9964     03FD  00A1               	movwf	___fltol@f1+1
  9965     03FE  1683               	bsf	3,5	;RP0=1, select bank3
  9966     03FF  1703               	bsf	3,6	;RP1=1, select bank3
  9967     0400  0838               	movf	main@integerPart^(0+384),w
  9968     0401  1283               	bcf	3,5	;RP0=0, select bank0
  9969     0402  1303               	bcf	3,6	;RP1=0, select bank0
  9970     0403  00A0               	movwf	___fltol@f1
  9971     0404  160A  118A  22E4  120A  118A  	fcall	___fltol
  9972     0409  1283               	bcf	3,5	;RP0=0, select bank0
  9973     040A  1303               	bcf	3,6	;RP1=0, select bank0
  9974     040B  0820               	movf	?___fltol,w
  9975     040C  1683               	bsf	3,5	;RP0=1, select bank1
  9976     040D  1303               	bcf	3,6	;RP1=0, select bank1
  9977     040E  00A0               	movwf	??_main^(0+128)
  9978     040F  1283               	bcf	3,5	;RP0=0, select bank0
  9979     0410  1303               	bcf	3,6	;RP1=0, select bank0
  9980     0411  0821               	movf	?___fltol+1,w
  9981     0412  1683               	bsf	3,5	;RP0=1, select bank1
  9982     0413  1303               	bcf	3,6	;RP1=0, select bank1
  9983     0414  00A1               	movwf	(??_main^(0+128)+1)
  9984     0415  1283               	bcf	3,5	;RP0=0, select bank0
  9985     0416  1303               	bcf	3,6	;RP1=0, select bank0
  9986     0417  0822               	movf	?___fltol+2,w
  9987     0418  1683               	bsf	3,5	;RP0=1, select bank1
  9988     0419  1303               	bcf	3,6	;RP1=0, select bank1
  9989     041A  00A2               	movwf	(??_main^(0+128)+2)
  9990     041B  1283               	bcf	3,5	;RP0=0, select bank0
  9991     041C  1303               	bcf	3,6	;RP1=0, select bank0
  9992     041D  0823               	movf	?___fltol+3,w
  9993     041E  1683               	bsf	3,5	;RP0=1, select bank1
  9994     041F  1303               	bcf	3,6	;RP1=0, select bank1
  9995     0420  00A3               	movwf	(??_main^(0+128)+3)
  9996     0421  1683               	bsf	3,5	;RP0=1, select bank3
  9997     0422  1703               	bsf	3,6	;RP1=1, select bank3
  9998     0423  0837               	movf	(main@binler+1)^(0+384),w
  9999     0424  1283               	bcf	3,5	;RP0=0, select bank0
 10000     0425  1303               	bcf	3,6	;RP1=0, select bank0
 10001     0426  00A1               	movwf	___wmul@multiplier+1
 10002     0427  1683               	bsf	3,5	;RP0=1, select bank3
 10003     0428  1703               	bsf	3,6	;RP1=1, select bank3
 10004     0429  0836               	movf	main@binler^(0+384),w
 10005     042A  1283               	bcf	3,5	;RP0=0, select bank0
 10006     042B  1303               	bcf	3,6	;RP1=0, select bank0
 10007     042C  00A0               	movwf	___wmul@multiplier
 10008     042D  3018               	movlw	24
 10009     042E  00A2               	movwf	___wmul@multiplicand
 10010     042F  30FC               	movlw	252
 10011     0430  00A3               	movwf	___wmul@multiplicand+1
 10012     0431  160A  158A  2659  120A  118A  	fcall	___wmul
 10013     0436  1283               	bcf	3,5	;RP0=0, select bank0
 10014     0437  1303               	bcf	3,6	;RP1=0, select bank0
 10015     0438  0820               	movf	?___wmul,w
 10016     0439  1683               	bsf	3,5	;RP0=1, select bank1
 10017     043A  1303               	bcf	3,6	;RP1=0, select bank1
 10018     043B  0720               	addwf	??_main^(0+128),w
 10019     043C  00A4               	movwf	(??_main+4)^(0+128)
 10020     043D  1283               	bcf	3,5	;RP0=0, select bank0
 10021     043E  1303               	bcf	3,6	;RP1=0, select bank0
 10022     043F  0821               	movf	?___wmul+1,w
 10023     0440  1803               	skipnc
 10024     0441  0A21               	incf	?___wmul+1,w
 10025     0442  1683               	bsf	3,5	;RP0=1, select bank1
 10026     0443  1303               	bcf	3,6	;RP1=0, select bank1
 10027     0444  0721               	addwf	(??_main+1)^(0+128),w
 10028     0445  00A5               	movwf	(??_main+5)^(0+128)
 10029     0446  1683               	bsf	3,5	;RP0=1, select bank3
 10030     0447  1703               	bsf	3,6	;RP1=1, select bank3
 10031     0448  0835               	movf	(main@yuzler+1)^(0+384),w
 10032     0449  1283               	bcf	3,5	;RP0=0, select bank0
 10033     044A  1303               	bcf	3,6	;RP1=0, select bank0
 10034     044B  00A1               	movwf	___wmul@multiplier+1
 10035     044C  1683               	bsf	3,5	;RP0=1, select bank3
 10036     044D  1703               	bsf	3,6	;RP1=1, select bank3
 10037     044E  0834               	movf	main@yuzler^(0+384),w
 10038     044F  1283               	bcf	3,5	;RP0=0, select bank0
 10039     0450  1303               	bcf	3,6	;RP1=0, select bank0
 10040     0451  00A0               	movwf	___wmul@multiplier
 10041     0452  309C               	movlw	156
 10042     0453  00A2               	movwf	___wmul@multiplicand
 10043     0454  30FF               	movlw	255
 10044     0455  00A3               	movwf	___wmul@multiplicand+1
 10045     0456  160A  158A  2659  120A  118A  	fcall	___wmul
 10046     045B  1283               	bcf	3,5	;RP0=0, select bank0
 10047     045C  1303               	bcf	3,6	;RP1=0, select bank0
 10048     045D  0820               	movf	?___wmul,w
 10049     045E  1683               	bsf	3,5	;RP0=1, select bank1
 10050     045F  1303               	bcf	3,6	;RP1=0, select bank1
 10051     0460  0724               	addwf	(??_main+4)^(0+128),w
 10052     0461  1283               	bcf	3,5	;RP0=0, select bank0
 10053     0462  1303               	bcf	3,6	;RP1=0, select bank0
 10054     0463  00AC               	movwf	___awdiv@dividend
 10055     0464  0821               	movf	?___wmul+1,w
 10056     0465  1803               	skipnc
 10057     0466  0A21               	incf	?___wmul+1,w
 10058     0467  1683               	bsf	3,5	;RP0=1, select bank1
 10059     0468  1303               	bcf	3,6	;RP1=0, select bank1
 10060     0469  0725               	addwf	(??_main+5)^(0+128),w
 10061     046A  1283               	bcf	3,5	;RP0=0, select bank0
 10062     046B  1303               	bcf	3,6	;RP1=0, select bank0
 10063     046C  00AD               	movwf	___awdiv@dividend+1
 10064     046D  160A  118A  220D  120A  118A  	fcall	___awdiv
 10065     0472  1283               	bcf	3,5	;RP0=0, select bank0
 10066     0473  1303               	bcf	3,6	;RP1=0, select bank0
 10067     0474  082B               	movf	?___awdiv+1,w
 10068     0475  1683               	bsf	3,5	;RP0=1, select bank3
 10069     0476  1703               	bsf	3,6	;RP1=1, select bank3
 10070     0477  00A7               	movwf	(main@onlar+1)^(0+384)
 10071     0478  1283               	bcf	3,5	;RP0=0, select bank0
 10072     0479  1303               	bcf	3,6	;RP1=0, select bank0
 10073     047A  082A               	movf	?___awdiv,w
 10074     047B  1683               	bsf	3,5	;RP0=1, select bank3
 10075     047C  1703               	bsf	3,6	;RP1=1, select bank3
 10076     047D  00A6               	movwf	main@onlar^(0+384)
 10077     047E                     l3564:
 10078                           
 10079                           ;main1.c: 323:     int birler = (int)integerPart%10;
 10080     047E  300A               	movlw	10
 10081     047F  1283               	bcf	3,5	;RP0=0, select bank0
 10082     0480  1303               	bcf	3,6	;RP1=0, select bank0
 10083     0481  00AA               	movwf	___awmod@divisor
 10084     0482  3000               	movlw	0
 10085     0483  00AB               	movwf	___awmod@divisor+1
 10086     0484  1683               	bsf	3,5	;RP0=1, select bank3
 10087     0485  1703               	bsf	3,6	;RP1=1, select bank3
 10088     0486  083B               	movf	(main@integerPart+3)^(0+384),w
 10089     0487  1283               	bcf	3,5	;RP0=0, select bank0
 10090     0488  1303               	bcf	3,6	;RP1=0, select bank0
 10091     0489  00A3               	movwf	___fltol@f1+3
 10092     048A  1683               	bsf	3,5	;RP0=1, select bank3
 10093     048B  1703               	bsf	3,6	;RP1=1, select bank3
 10094     048C  083A               	movf	(main@integerPart+2)^(0+384),w
 10095     048D  1283               	bcf	3,5	;RP0=0, select bank0
 10096     048E  1303               	bcf	3,6	;RP1=0, select bank0
 10097     048F  00A2               	movwf	___fltol@f1+2
 10098     0490  1683               	bsf	3,5	;RP0=1, select bank3
 10099     0491  1703               	bsf	3,6	;RP1=1, select bank3
 10100     0492  0839               	movf	(main@integerPart+1)^(0+384),w
 10101     0493  1283               	bcf	3,5	;RP0=0, select bank0
 10102     0494  1303               	bcf	3,6	;RP1=0, select bank0
 10103     0495  00A1               	movwf	___fltol@f1+1
 10104     0496  1683               	bsf	3,5	;RP0=1, select bank3
 10105     0497  1703               	bsf	3,6	;RP1=1, select bank3
 10106     0498  0838               	movf	main@integerPart^(0+384),w
 10107     0499  1283               	bcf	3,5	;RP0=0, select bank0
 10108     049A  1303               	bcf	3,6	;RP1=0, select bank0
 10109     049B  00A0               	movwf	___fltol@f1
 10110     049C  160A  118A  22E4  120A  118A  	fcall	___fltol
 10111     04A1  1283               	bcf	3,5	;RP0=0, select bank0
 10112     04A2  1303               	bcf	3,6	;RP1=0, select bank0
 10113     04A3  0821               	movf	?___fltol+1,w
 10114     04A4  00AD               	movwf	___awmod@dividend+1
 10115     04A5  0820               	movf	?___fltol,w
 10116     04A6  00AC               	movwf	___awmod@dividend
 10117     04A7  160A  118A  20E8  120A  118A  	fcall	___awmod
 10118     04AC  1283               	bcf	3,5	;RP0=0, select bank0
 10119     04AD  1303               	bcf	3,6	;RP1=0, select bank0
 10120     04AE  082B               	movf	?___awmod+1,w
 10121     04AF  1683               	bsf	3,5	;RP0=1, select bank3
 10122     04B0  1703               	bsf	3,6	;RP1=1, select bank3
 10123     04B1  00A9               	movwf	(main@birler+1)^(0+384)
 10124     04B2  1283               	bcf	3,5	;RP0=0, select bank0
 10125     04B3  1303               	bcf	3,6	;RP1=0, select bank0
 10126     04B4  082A               	movf	?___awmod,w
 10127     04B5  1683               	bsf	3,5	;RP0=1, select bank3
 10128     04B6  1703               	bsf	3,6	;RP1=1, select bank3
 10129     04B7  00A8               	movwf	main@birler^(0+384)
 10130     04B8                     l3566:
 10131                           
 10132                           ;main1.c: 329:         ADCON0bits.CHS = 0b0001;
 10133     04B8  1283               	bcf	3,5	;RP0=0, select bank0
 10134     04B9  1303               	bcf	3,6	;RP1=0, select bank0
 10135     04BA  081F               	movf	31,w	;volatile
 10136     04BB  39C7               	andlw	-57
 10137     04BC  3808               	iorlw	8
 10138     04BD  009F               	movwf	31	;volatile
 10139     04BE                     l3568:
 10140                           
 10141                           ;main1.c: 330:         _delay((unsigned long)((50)*(4000000/4000000.0)));
 10142     04BE  300F               	movlw	15
 10143     04BF  1683               	bsf	3,5	;RP0=1, select bank1
 10144     04C0  1303               	bcf	3,6	;RP1=0, select bank1
 10145     04C1  00A0               	movwf	??_main^(0+128)
 10146     04C2                     u5067:
 10147     04C2  0BA0               	decfsz	??_main^(0+128),f
 10148     04C3  2CC2               	goto	u5067
 10149     04C4  2CC5               	nop2
 10150     04C5                     l3570:
 10151                           
 10152                           ;main1.c: 331:         ADCON0bits.GO = 1;
 10153     04C5  1283               	bcf	3,5	;RP0=0, select bank0
 10154     04C6  1303               	bcf	3,6	;RP1=0, select bank0
 10155     04C7  151F               	bsf	31,2	;volatile
 10156     04C8                     l237:	
 10157                           ;main1.c: 332:         while (ADCON0bits.GO);
 10158                           
 10159     04C8  191F               	btfsc	31,2	;volatile
 10160     04C9  2CCB               	goto	u4651
 10161     04CA  2CCC               	goto	u4650
 10162     04CB                     u4651:
 10163     04CB  2CC8               	goto	l237
 10164     04CC                     u4650:
 10165     04CC                     l3572:
 10166                           
 10167                           ;main1.c: 333:         adcValue1 = (ADRESH << 8) | ADRESL;
 10168     04CC  1683               	bsf	3,5	;RP0=1, select bank1
 10169     04CD  1303               	bcf	3,6	;RP1=0, select bank1
 10170     04CE  081E               	movf	30,w	;volatile
 10171     04CF  00A0               	movwf	??_main^(0+128)
 10172     04D0  01A1               	clrf	(??_main^(0+128)+1)
 10173     04D1  1283               	bcf	3,5	;RP0=0, select bank0
 10174     04D2  1303               	bcf	3,6	;RP1=0, select bank0
 10175     04D3  081E               	movf	30,w	;volatile
 10176     04D4  1683               	bsf	3,5	;RP0=1, select bank1
 10177     04D5  1303               	bcf	3,6	;RP1=0, select bank1
 10178     04D6  00A2               	movwf	(??_main+2)^(0+128)
 10179     04D7  01A3               	clrf	((??_main+2)^(0+128)+1)
 10180     04D8  0822               	movf	(??_main+2)^(0+128),w
 10181     04D9  00A3               	movwf	((??_main+2)^(0+128)+1)
 10182     04DA  01A2               	clrf	(??_main+2)^(0+128)
 10183     04DB  0820               	movf	??_main^(0+128),w
 10184     04DC  0422               	iorwf	(??_main+2)^(0+128),w
 10185     04DD  1283               	bcf	3,5	;RP0=0, select bank0
 10186     04DE  1303               	bcf	3,6	;RP1=0, select bank0
 10187     04DF  00A0               	movwf	___xxtofl@val
 10188     04E0  1683               	bsf	3,5	;RP0=1, select bank1
 10189     04E1  1303               	bcf	3,6	;RP1=0, select bank1
 10190     04E2  0821               	movf	(??_main+1)^(0+128),w
 10191     04E3  0423               	iorwf	(??_main+3)^(0+128),w
 10192     04E4  1283               	bcf	3,5	;RP0=0, select bank0
 10193     04E5  1303               	bcf	3,6	;RP1=0, select bank0
 10194     04E6  00A1               	movwf	___xxtofl@val+1
 10195     04E7  01A2               	clrf	___xxtofl@val+2
 10196     04E8  1BA1               	btfsc	___xxtofl@val+1,7
 10197     04E9  03A2               	decf	___xxtofl@val+2,f
 10198     04EA  0822               	movf	___xxtofl@val+2,w
 10199     04EB  00A3               	movwf	___xxtofl@val+3
 10200     04EC  3001               	movlw	1
 10201     04ED  160A  118A  23D8  120A  118A  	fcall	___xxtofl
 10202     04F2  1283               	bcf	3,5	;RP0=0, select bank0
 10203     04F3  1303               	bcf	3,6	;RP1=0, select bank0
 10204     04F4  0823               	movf	?___xxtofl+3,w
 10205     04F5  1683               	bsf	3,5	;RP0=1, select bank3
 10206     04F6  1703               	bsf	3,6	;RP1=1, select bank3
 10207     04F7  00B3               	movwf	(main@adcValue1+3)^(0+384)
 10208     04F8  1283               	bcf	3,5	;RP0=0, select bank0
 10209     04F9  1303               	bcf	3,6	;RP1=0, select bank0
 10210     04FA  0822               	movf	?___xxtofl+2,w
 10211     04FB  1683               	bsf	3,5	;RP0=1, select bank3
 10212     04FC  1703               	bsf	3,6	;RP1=1, select bank3
 10213     04FD  00B2               	movwf	(main@adcValue1+2)^(0+384)
 10214     04FE  1283               	bcf	3,5	;RP0=0, select bank0
 10215     04FF  1303               	bcf	3,6	;RP1=0, select bank0
 10216     0500  0821               	movf	?___xxtofl+1,w
 10217     0501  1683               	bsf	3,5	;RP0=1, select bank3
 10218     0502  1703               	bsf	3,6	;RP1=1, select bank3
 10219     0503  00B1               	movwf	(main@adcValue1+1)^(0+384)
 10220     0504  1283               	bcf	3,5	;RP0=0, select bank0
 10221     0505  1303               	bcf	3,6	;RP1=0, select bank0
 10222     0506  0820               	movf	?___xxtofl,w
 10223     0507  1683               	bsf	3,5	;RP0=1, select bank3
 10224     0508  1703               	bsf	3,6	;RP1=1, select bank3
 10225     0509  00B0               	movwf	main@adcValue1^(0+384)
 10226     050A                     l3574:
 10227                           
 10228                           ;main1.c: 334:         if (RE2==0 && RC0== 0 ){
 10229     050A  1283               	bcf	3,5	;RP0=0, select bank0
 10230     050B  1303               	bcf	3,6	;RP1=0, select bank0
 10231     050C  1909               	btfsc	9,2	;volatile
 10232     050D  2D11               	goto	u4661
 10233     050E  120A  158A  2B76   	goto	u4660
 10234     0511                     u4661:
 10235     0511  120A  158A  2BA4   	goto	l240
 10236                           
 10237                           	psect	maintext_split_2
 10238     0B76                     u4660:
 10239     0B76                     l3576:
 10240     0B76  1807               	btfsc	7,0	;volatile
 10241     0B77  2B79               	goto	u4671
 10242     0B78  2B7A               	goto	u4670
 10243     0B79                     u4671:
 10244     0B79  2BA4               	goto	l240
 10245     0B7A                     u4670:
 10246     0B7A                     l3578:
 10247                           
 10248                           ;main1.c: 335:         displayValue = (int)adcValue1 >> 1;
 10249     0B7A  1683               	bsf	3,5	;RP0=1, select bank3
 10250     0B7B  1703               	bsf	3,6	;RP1=1, select bank3
 10251     0B7C  0833               	movf	(main@adcValue1+3)^(0+384),w
 10252     0B7D  1283               	bcf	3,5	;RP0=0, select bank0
 10253     0B7E  1303               	bcf	3,6	;RP1=0, select bank0
 10254     0B7F  00A3               	movwf	___fltol@f1+3
 10255     0B80  1683               	bsf	3,5	;RP0=1, select bank3
 10256     0B81  1703               	bsf	3,6	;RP1=1, select bank3
 10257     0B82  0832               	movf	(main@adcValue1+2)^(0+384),w
 10258     0B83  1283               	bcf	3,5	;RP0=0, select bank0
 10259     0B84  1303               	bcf	3,6	;RP1=0, select bank0
 10260     0B85  00A2               	movwf	___fltol@f1+2
 10261     0B86  1683               	bsf	3,5	;RP0=1, select bank3
 10262     0B87  1703               	bsf	3,6	;RP1=1, select bank3
 10263     0B88  0831               	movf	(main@adcValue1+1)^(0+384),w
 10264     0B89  1283               	bcf	3,5	;RP0=0, select bank0
 10265     0B8A  1303               	bcf	3,6	;RP1=0, select bank0
 10266     0B8B  00A1               	movwf	___fltol@f1+1
 10267     0B8C  1683               	bsf	3,5	;RP0=1, select bank3
 10268     0B8D  1703               	bsf	3,6	;RP1=1, select bank3
 10269     0B8E  0830               	movf	main@adcValue1^(0+384),w
 10270     0B8F  1283               	bcf	3,5	;RP0=0, select bank0
 10271     0B90  1303               	bcf	3,6	;RP1=0, select bank0
 10272     0B91  00A0               	movwf	___fltol@f1
 10273     0B92  160A  118A  22E4  120A  158A  	fcall	___fltol
 10274     0B97  1283               	bcf	3,5	;RP0=0, select bank0
 10275     0B98  1303               	bcf	3,6	;RP1=0, select bank0
 10276     0B99  0D21               	rlf	?___fltol+1,w
 10277     0B9A  0C21               	rrf	?___fltol+1,w
 10278     0B9B  1683               	bsf	3,5	;RP0=1, select bank3
 10279     0B9C  1703               	bsf	3,6	;RP1=1, select bank3
 10280     0B9D  00C1               	movwf	(main@displayValue+1)^(0+384)
 10281     0B9E  1283               	bcf	3,5	;RP0=0, select bank0
 10282     0B9F  1303               	bcf	3,6	;RP1=0, select bank0
 10283     0BA0  0C20               	rrf	?___fltol,w
 10284     0BA1  1683               	bsf	3,5	;RP0=1, select bank3
 10285     0BA2  1703               	bsf	3,6	;RP1=1, select bank3
 10286     0BA3  00C0               	movwf	main@displayValue^(0+384)
 10287     0BA4                     l240:	
 10288                           ;main1.c: 336:         }
 10289                           
 10290                           
 10291                           ;main1.c: 337:         float gostermeliklcd = adcValue1 / 1024 * 1000;
 10292     0BA4  3044               	movlw	68
 10293     0BA5  1283               	bcf	3,5	;RP0=0, select bank0
 10294     0BA6  1303               	bcf	3,6	;RP1=0, select bank0
 10295     0BA7  00BD               	movwf	___flmul@b+3
 10296     0BA8  307A               	movlw	122
 10297     0BA9  00BC               	movwf	___flmul@b+2
 10298     0BAA  3000               	movlw	0
 10299     0BAB  00BB               	movwf	___flmul@b+1
 10300     0BAC  3000               	movlw	0
 10301     0BAD  00BA               	movwf	___flmul@b
 10302     0BAE  3044               	movlw	68
 10303     0BAF  00A3               	movwf	___fldiv@a+3
 10304     0BB0  3080               	movlw	128
 10305     0BB1  00A2               	movwf	___fldiv@a+2
 10306     0BB2  3000               	movlw	0
 10307     0BB3  00A1               	movwf	___fldiv@a+1
 10308     0BB4  3000               	movlw	0
 10309     0BB5  00A0               	movwf	___fldiv@a
 10310     0BB6  1683               	bsf	3,5	;RP0=1, select bank3
 10311     0BB7  1703               	bsf	3,6	;RP1=1, select bank3
 10312     0BB8  0833               	movf	(main@adcValue1+3)^(0+384),w
 10313     0BB9  1283               	bcf	3,5	;RP0=0, select bank0
 10314     0BBA  1303               	bcf	3,6	;RP1=0, select bank0
 10315     0BBB  00A7               	movwf	___fldiv@b+3
 10316     0BBC  1683               	bsf	3,5	;RP0=1, select bank3
 10317     0BBD  1703               	bsf	3,6	;RP1=1, select bank3
 10318     0BBE  0832               	movf	(main@adcValue1+2)^(0+384),w
 10319     0BBF  1283               	bcf	3,5	;RP0=0, select bank0
 10320     0BC0  1303               	bcf	3,6	;RP1=0, select bank0
 10321     0BC1  00A6               	movwf	___fldiv@b+2
 10322     0BC2  1683               	bsf	3,5	;RP0=1, select bank3
 10323     0BC3  1703               	bsf	3,6	;RP1=1, select bank3
 10324     0BC4  0831               	movf	(main@adcValue1+1)^(0+384),w
 10325     0BC5  1283               	bcf	3,5	;RP0=0, select bank0
 10326     0BC6  1303               	bcf	3,6	;RP1=0, select bank0
 10327     0BC7  00A5               	movwf	___fldiv@b+1
 10328     0BC8  1683               	bsf	3,5	;RP0=1, select bank3
 10329     0BC9  1703               	bsf	3,6	;RP1=1, select bank3
 10330     0BCA  0830               	movf	main@adcValue1^(0+384),w
 10331     0BCB  1283               	bcf	3,5	;RP0=0, select bank0
 10332     0BCC  1303               	bcf	3,6	;RP1=0, select bank0
 10333     0BCD  00A4               	movwf	___fldiv@b
 10334     0BCE  120A  118A  2514  120A  158A  	fcall	___fldiv
 10335     0BD3  1283               	bcf	3,5	;RP0=0, select bank0
 10336     0BD4  1303               	bcf	3,6	;RP1=0, select bank0
 10337     0BD5  0823               	movf	?___fldiv+3,w
 10338     0BD6  00C1               	movwf	___flmul@a+3
 10339     0BD7  0822               	movf	?___fldiv+2,w
 10340     0BD8  00C0               	movwf	___flmul@a+2
 10341     0BD9  0821               	movf	?___fldiv+1,w
 10342     0BDA  00BF               	movwf	___flmul@a+1
 10343     0BDB  0820               	movf	?___fldiv,w
 10344     0BDC  00BE               	movwf	___flmul@a
 10345     0BDD  120A  158A  2031  120A  158A  	fcall	___flmul
 10346     0BE2  1283               	bcf	3,5	;RP0=0, select bank0
 10347     0BE3  1303               	bcf	3,6	;RP1=0, select bank0
 10348     0BE4  083D               	movf	?___flmul+3,w
 10349     0BE5  1683               	bsf	3,5	;RP0=1, select bank3
 10350     0BE6  1703               	bsf	3,6	;RP1=1, select bank3
 10351     0BE7  009B               	movwf	(main@gostermeliklcd+3)^(0+384)
 10352     0BE8  1283               	bcf	3,5	;RP0=0, select bank0
 10353     0BE9  1303               	bcf	3,6	;RP1=0, select bank0
 10354     0BEA  083C               	movf	?___flmul+2,w
 10355     0BEB  1683               	bsf	3,5	;RP0=1, select bank3
 10356     0BEC  1703               	bsf	3,6	;RP1=1, select bank3
 10357     0BED  009A               	movwf	(main@gostermeliklcd+2)^(0+384)
 10358     0BEE  1283               	bcf	3,5	;RP0=0, select bank0
 10359     0BEF  1303               	bcf	3,6	;RP1=0, select bank0
 10360     0BF0  083B               	movf	?___flmul+1,w
 10361     0BF1  1683               	bsf	3,5	;RP0=1, select bank3
 10362     0BF2  1703               	bsf	3,6	;RP1=1, select bank3
 10363     0BF3  0099               	movwf	(main@gostermeliklcd+1)^(0+384)
 10364     0BF4  1283               	bcf	3,5	;RP0=0, select bank0
 10365     0BF5  1303               	bcf	3,6	;RP1=0, select bank0
 10366     0BF6  083A               	movf	?___flmul,w
 10367     0BF7  1683               	bsf	3,5	;RP0=1, select bank3
 10368     0BF8  1703               	bsf	3,6	;RP1=1, select bank3
 10369     0BF9  0098               	movwf	main@gostermeliklcd^(0+384)
 10370     0BFA                     l3580:
 10371                           
 10372                           ;main1.c: 342:         Lcd_Set_Cursor(2, 1);
 10373     0BFA  1283               	bcf	3,5	;RP0=0, select bank0
 10374     0BFB  1303               	bcf	3,6	;RP1=0, select bank0
 10375     0BFC  01A4               	clrf	Lcd_Set_Cursor@b
 10376     0BFD  0AA4               	incf	Lcd_Set_Cursor@b,f
 10377     0BFE  3002               	movlw	2
 10378     0BFF  160A  118A  2042  120A  158A  	fcall	_Lcd_Set_Cursor
 10379     0C04                     l3582:
 10380                           
 10381                           ;main1.c: 343:         Lcd_Write_String("FeedRate:");
 10382     0C04  3018               	movlw	low (STR_10| (0+32768))
 10383     0C05  1283               	bcf	3,5	;RP0=0, select bank0
 10384     0C06  1303               	bcf	3,6	;RP1=0, select bank0
 10385     0C07  00A5               	movwf	Lcd_Write_String@a
 10386     0C08  3099               	movlw	high (STR_10| (0+32768))
 10387     0C09  00A6               	movwf	Lcd_Write_String@a+1
 10388     0C0A  160A  158A  276E  120A  158A  	fcall	_Lcd_Write_String
 10389     0C0F                     l3584:
 10390                           
 10391                           ;main1.c: 344:         char adcString1[4];;main1.c: 345:         sprintf(adcString1, "%0
      +                          03u", (int)gostermeliklcd);
 10392     0C0F  3058               	movlw	low (STR_11| (0+32768))
 10393     0C10  1283               	bcf	3,5	;RP0=0, select bank0
 10394     0C11  1303               	bcf	3,6	;RP1=0, select bank0
 10395     0C12  00D5               	movwf	sprintf@fmt
 10396     0C13  3099               	movlw	high (STR_11| (0+32768))
 10397     0C14  00D6               	movwf	sprintf@fmt+1
 10398     0C15  1683               	bsf	3,5	;RP0=1, select bank3
 10399     0C16  1703               	bsf	3,6	;RP1=1, select bank3
 10400     0C17  081B               	movf	(main@gostermeliklcd+3)^(0+384),w
 10401     0C18  1283               	bcf	3,5	;RP0=0, select bank0
 10402     0C19  1303               	bcf	3,6	;RP1=0, select bank0
 10403     0C1A  00A3               	movwf	___fltol@f1+3
 10404     0C1B  1683               	bsf	3,5	;RP0=1, select bank3
 10405     0C1C  1703               	bsf	3,6	;RP1=1, select bank3
 10406     0C1D  081A               	movf	(main@gostermeliklcd+2)^(0+384),w
 10407     0C1E  1283               	bcf	3,5	;RP0=0, select bank0
 10408     0C1F  1303               	bcf	3,6	;RP1=0, select bank0
 10409     0C20  00A2               	movwf	___fltol@f1+2
 10410     0C21  1683               	bsf	3,5	;RP0=1, select bank3
 10411     0C22  1703               	bsf	3,6	;RP1=1, select bank3
 10412     0C23  0819               	movf	(main@gostermeliklcd+1)^(0+384),w
 10413     0C24  1283               	bcf	3,5	;RP0=0, select bank0
 10414     0C25  1303               	bcf	3,6	;RP1=0, select bank0
 10415     0C26  00A1               	movwf	___fltol@f1+1
 10416     0C27  1683               	bsf	3,5	;RP0=1, select bank3
 10417     0C28  1703               	bsf	3,6	;RP1=1, select bank3
 10418     0C29  0818               	movf	main@gostermeliklcd^(0+384),w
 10419     0C2A  1283               	bcf	3,5	;RP0=0, select bank0
 10420     0C2B  1303               	bcf	3,6	;RP1=0, select bank0
 10421     0C2C  00A0               	movwf	___fltol@f1
 10422     0C2D  160A  118A  22E4  120A  158A  	fcall	___fltol
 10423     0C32  1283               	bcf	3,5	;RP0=0, select bank0
 10424     0C33  1303               	bcf	3,6	;RP1=0, select bank0
 10425     0C34  0821               	movf	?___fltol+1,w
 10426     0C35  00D8               	movwf	?_sprintf+3
 10427     0C36  0820               	movf	?___fltol,w
 10428     0C37  00D7               	movwf	?_sprintf+2
 10429     0C38  30EC               	movlw	(low (main@adcString1| 0))& (0+255)
 10430     0C39  160A  158A  2613  120A  158A  	fcall	_sprintf
 10431     0C3E                     l3586:
 10432                           
 10433                           ;main1.c: 346:         Lcd_Set_Cursor(2, 10);
 10434     0C3E  300A               	movlw	10
 10435     0C3F  1283               	bcf	3,5	;RP0=0, select bank0
 10436     0C40  1303               	bcf	3,6	;RP1=0, select bank0
 10437     0C41  00A4               	movwf	Lcd_Set_Cursor@b
 10438     0C42  3002               	movlw	2
 10439     0C43  160A  118A  2042  120A  158A  	fcall	_Lcd_Set_Cursor
 10440     0C48                     l3588:
 10441                           
 10442                           ;main1.c: 347:         Lcd_Write_String(adcString1);
 10443     0C48  30EC               	movlw	(low (main@adcString1| 0))& (0+255)
 10444     0C49  1283               	bcf	3,5	;RP0=0, select bank0
 10445     0C4A  1303               	bcf	3,6	;RP1=0, select bank0
 10446     0C4B  00A5               	movwf	Lcd_Write_String@a
 10447     0C4C  3000               	movlw	0
 10448     0C4D  00A6               	movwf	Lcd_Write_String@a+1
 10449     0C4E  160A  158A  276E  120A  158A  	fcall	_Lcd_Write_String
 10450     0C53                     l3590:
 10451                           
 10452                           ;main1.c: 350:         Lcd_Set_Cursor(1, 1);
 10453     0C53  1283               	bcf	3,5	;RP0=0, select bank0
 10454     0C54  1303               	bcf	3,6	;RP1=0, select bank0
 10455     0C55  01A4               	clrf	Lcd_Set_Cursor@b
 10456     0C56  0AA4               	incf	Lcd_Set_Cursor@b,f
 10457     0C57  3001               	movlw	1
 10458     0C58  160A  118A  2042  120A  158A  	fcall	_Lcd_Set_Cursor
 10459     0C5D                     l3592:
 10460                           
 10461                           ;main1.c: 351:         Lcd_Write_String("RPM:");
 10462     0C5D  3063               	movlw	low (STR_12| (0+32768))
 10463     0C5E  1283               	bcf	3,5	;RP0=0, select bank0
 10464     0C5F  1303               	bcf	3,6	;RP1=0, select bank0
 10465     0C60  00A5               	movwf	Lcd_Write_String@a
 10466     0C61  3099               	movlw	high (STR_12| (0+32768))
 10467     0C62  00A6               	movwf	Lcd_Write_String@a+1
 10468     0C63  160A  158A  276E  120A  158A  	fcall	_Lcd_Write_String
 10469     0C68                     l3594:
 10470                           
 10471                           ;main1.c: 352:         char rpmString[5];;main1.c: 353: sprintf(rpmString, "%u%u%u.%u", 
      +                          binler,yuzler,onlar,birler);
 10472     0C68  3036               	movlw	low (STR_13| (0+32768))
 10473     0C69  1283               	bcf	3,5	;RP0=0, select bank0
 10474     0C6A  1303               	bcf	3,6	;RP1=0, select bank0
 10475     0C6B  00D5               	movwf	sprintf@fmt
 10476     0C6C  3099               	movlw	high (STR_13| (0+32768))
 10477     0C6D  00D6               	movwf	sprintf@fmt+1
 10478     0C6E  1683               	bsf	3,5	;RP0=1, select bank3
 10479     0C6F  1703               	bsf	3,6	;RP1=1, select bank3
 10480     0C70  0837               	movf	(main@binler+1)^(0+384),w
 10481     0C71  1283               	bcf	3,5	;RP0=0, select bank0
 10482     0C72  1303               	bcf	3,6	;RP1=0, select bank0
 10483     0C73  00D8               	movwf	?_sprintf+3
 10484     0C74  1683               	bsf	3,5	;RP0=1, select bank3
 10485     0C75  1703               	bsf	3,6	;RP1=1, select bank3
 10486     0C76  0836               	movf	main@binler^(0+384),w
 10487     0C77  1283               	bcf	3,5	;RP0=0, select bank0
 10488     0C78  1303               	bcf	3,6	;RP1=0, select bank0
 10489     0C79  00D7               	movwf	?_sprintf+2
 10490     0C7A  1683               	bsf	3,5	;RP0=1, select bank3
 10491     0C7B  1703               	bsf	3,6	;RP1=1, select bank3
 10492     0C7C  0835               	movf	(main@yuzler+1)^(0+384),w
 10493     0C7D  1283               	bcf	3,5	;RP0=0, select bank0
 10494     0C7E  1303               	bcf	3,6	;RP1=0, select bank0
 10495     0C7F  00DA               	movwf	?_sprintf+5
 10496     0C80  1683               	bsf	3,5	;RP0=1, select bank3
 10497     0C81  1703               	bsf	3,6	;RP1=1, select bank3
 10498     0C82  0834               	movf	main@yuzler^(0+384),w
 10499     0C83  1283               	bcf	3,5	;RP0=0, select bank0
 10500     0C84  1303               	bcf	3,6	;RP1=0, select bank0
 10501     0C85  00D9               	movwf	?_sprintf+4
 10502     0C86  1683               	bsf	3,5	;RP0=1, select bank3
 10503     0C87  1703               	bsf	3,6	;RP1=1, select bank3
 10504     0C88  0827               	movf	(main@onlar+1)^(0+384),w
 10505     0C89  1283               	bcf	3,5	;RP0=0, select bank0
 10506     0C8A  1303               	bcf	3,6	;RP1=0, select bank0
 10507     0C8B  00DC               	movwf	?_sprintf+7
 10508     0C8C  1683               	bsf	3,5	;RP0=1, select bank3
 10509     0C8D  1703               	bsf	3,6	;RP1=1, select bank3
 10510     0C8E  0826               	movf	main@onlar^(0+384),w
 10511     0C8F  1283               	bcf	3,5	;RP0=0, select bank0
 10512     0C90  1303               	bcf	3,6	;RP1=0, select bank0
 10513     0C91  00DB               	movwf	?_sprintf+6
 10514     0C92  1683               	bsf	3,5	;RP0=1, select bank3
 10515     0C93  1703               	bsf	3,6	;RP1=1, select bank3
 10516     0C94  0829               	movf	(main@birler+1)^(0+384),w
 10517     0C95  1283               	bcf	3,5	;RP0=0, select bank0
 10518     0C96  1303               	bcf	3,6	;RP1=0, select bank0
 10519     0C97  00DE               	movwf	?_sprintf+9
 10520     0C98  1683               	bsf	3,5	;RP0=1, select bank3
 10521     0C99  1703               	bsf	3,6	;RP1=1, select bank3
 10522     0C9A  0828               	movf	main@birler^(0+384),w
 10523     0C9B  1283               	bcf	3,5	;RP0=0, select bank0
 10524     0C9C  1303               	bcf	3,6	;RP1=0, select bank0
 10525     0C9D  00DD               	movwf	?_sprintf+8
 10526     0C9E  30E7               	movlw	(low (main@rpmString| 0))& (0+255)
 10527     0C9F  160A  158A  2613  120A  158A  	fcall	_sprintf
 10528     0CA4                     l3596:
 10529                           
 10530                           ;main1.c: 355: Lcd_Set_Cursor(1, 5);
 10531     0CA4  3005               	movlw	5
 10532     0CA5  1283               	bcf	3,5	;RP0=0, select bank0
 10533     0CA6  1303               	bcf	3,6	;RP1=0, select bank0
 10534     0CA7  00A4               	movwf	Lcd_Set_Cursor@b
 10535     0CA8  3001               	movlw	1
 10536     0CA9  160A  118A  2042  120A  158A  	fcall	_Lcd_Set_Cursor
 10537     0CAE                     l3598:
 10538                           
 10539                           ;main1.c: 356: Lcd_Write_String(rpmString);
 10540     0CAE  30E7               	movlw	(low (main@rpmString| 0))& (0+255)
 10541     0CAF  1283               	bcf	3,5	;RP0=0, select bank0
 10542     0CB0  1303               	bcf	3,6	;RP1=0, select bank0
 10543     0CB1  00A5               	movwf	Lcd_Write_String@a
 10544     0CB2  3000               	movlw	0
 10545     0CB3  00A6               	movwf	Lcd_Write_String@a+1
 10546     0CB4  160A  158A  276E  120A  158A  	fcall	_Lcd_Write_String
 10547     0CB9                     l3600:
 10548                           
 10549                           ;main1.c: 363:  if (RC1 == 1 && (RE0 == 1 || RE2 == 1)) {
 10550     0CB9  1283               	bcf	3,5	;RP0=0, select bank0
 10551     0CBA  1303               	bcf	3,6	;RP1=0, select bank0
 10552     0CBB  1C87               	btfss	7,1	;volatile
 10553     0CBC  2CBE               	goto	u4681
 10554     0CBD  2CBF               	goto	u4680
 10555     0CBE                     u4681:
 10556     0CBE  2CEC               	goto	l241
 10557     0CBF                     u4680:
 10558     0CBF                     l3602:
 10559     0CBF  1809               	btfsc	9,0	;volatile
 10560     0CC0  2CC2               	goto	u4691
 10561     0CC1  2CC3               	goto	u4690
 10562     0CC2                     u4691:
 10563     0CC2  2CC7               	goto	l243
 10564     0CC3                     u4690:
 10565     0CC3                     l3604:
 10566     0CC3  1D09               	btfss	9,2	;volatile
 10567     0CC4  2CC6               	goto	u4701
 10568     0CC5  2CC7               	goto	u4700
 10569     0CC6                     u4701:
 10570     0CC6  2CEC               	goto	l241
 10571     0CC7                     u4700:
 10572     0CC7                     l243:
 10573                           
 10574                           ;main1.c: 364:      limitler=1;
 10575     0CC7  1683               	bsf	3,5	;RP0=1, select bank3
 10576     0CC8  1703               	bsf	3,6	;RP1=1, select bank3
 10577     0CC9  01CA               	clrf	_limitler^(0+384)
 10578     0CCA  0ACA               	incf	_limitler^(0+384),f
 10579     0CCB                     l3606:
 10580                           
 10581                           ;main1.c: 365:             Lcd_Set_Cursor(2, 13);
 10582     0CCB  300D               	movlw	13
 10583     0CCC  1283               	bcf	3,5	;RP0=0, select bank0
 10584     0CCD  1303               	bcf	3,6	;RP1=0, select bank0
 10585     0CCE  00A4               	movwf	Lcd_Set_Cursor@b
 10586     0CCF  3002               	movlw	2
 10587     0CD0  160A  118A  2042  120A  158A  	fcall	_Lcd_Set_Cursor
 10588     0CD5                     l3608:
 10589                           
 10590                           ;main1.c: 366:             Lcd_Write_String(" FWD LMT");
 10591     0CD5  3040               	movlw	low (STR_14| (0+32768))
 10592     0CD6  1283               	bcf	3,5	;RP0=0, select bank0
 10593     0CD7  1303               	bcf	3,6	;RP1=0, select bank0
 10594     0CD8  00A5               	movwf	Lcd_Write_String@a
 10595     0CD9  3099               	movlw	high (STR_14| (0+32768))
 10596     0CDA  00A6               	movwf	Lcd_Write_String@a+1
 10597     0CDB  160A  158A  276E  120A  158A  	fcall	_Lcd_Write_String
 10598     0CE0                     l3610:
 10599                           
 10600                           ;main1.c: 367:             UART_Write_Text("s0\r\n");
 10601     0CE0  305E               	movlw	low (STR_15| (0+32768))
 10602     0CE1  1283               	bcf	3,5	;RP0=0, select bank0
 10603     0CE2  1303               	bcf	3,6	;RP1=0, select bank0
 10604     0CE3  00A1               	movwf	UART_Write_Text@text
 10605     0CE4  3099               	movlw	high (STR_15| (0+32768))
 10606     0CE5  00A2               	movwf	UART_Write_Text@text+1
 10607     0CE6  160A  158A  26E2  120A  158A  	fcall	_UART_Write_Text
 10608                           
 10609                           ;main1.c: 369:         } else if ((RE2 == 1 && RE0 == 1) || (RE2 == 1 && RE1 == 0)) {
 10610     0CEB  2ED1               	goto	l3688
 10611     0CEC                     l241:
 10612     0CEC  1D09               	btfss	9,2	;volatile
 10613     0CED  2CEF               	goto	u4711
 10614     0CEE  2CF0               	goto	u4710
 10615     0CEF                     u4711:
 10616     0CEF  2CF4               	goto	l249
 10617     0CF0                     u4710:
 10618     0CF0                     l3612:
 10619     0CF0  1809               	btfsc	9,0	;volatile
 10620     0CF1  2CF3               	goto	u4721
 10621     0CF2  2CF4               	goto	u4720
 10622     0CF3                     u4721:
 10623     0CF3  2CFC               	goto	l3616
 10624     0CF4                     u4720:
 10625     0CF4                     l249:
 10626     0CF4  1D09               	btfss	9,2	;volatile
 10627     0CF5  2CF7               	goto	u4731
 10628     0CF6  2CF8               	goto	u4730
 10629     0CF7                     u4731:
 10630     0CF7  2D52               	goto	l245
 10631     0CF8                     u4730:
 10632     0CF8                     l3614:
 10633     0CF8  1889               	btfsc	9,1	;volatile
 10634     0CF9  2CFB               	goto	u4741
 10635     0CFA  2CFC               	goto	u4740
 10636     0CFB                     u4741:
 10637     0CFB  2D52               	goto	l245
 10638     0CFC                     u4740:
 10639     0CFC                     l3616:
 10640                           
 10641                           ;main1.c: 370:             Lcd_Set_Cursor(2, 13);
 10642     0CFC  300D               	movlw	13
 10643     0CFD  00A4               	movwf	Lcd_Set_Cursor@b
 10644     0CFE  3002               	movlw	2
 10645     0CFF  160A  118A  2042  120A  158A  	fcall	_Lcd_Set_Cursor
 10646     0D04                     l3618:
 10647                           
 10648                           ;main1.c: 371:             Lcd_Write_String(" FWD 1.6K");
 10649     0D04  3022               	movlw	low (STR_16| (0+32768))
 10650     0D05  1283               	bcf	3,5	;RP0=0, select bank0
 10651     0D06  1303               	bcf	3,6	;RP1=0, select bank0
 10652     0D07  00A5               	movwf	Lcd_Write_String@a
 10653     0D08  3099               	movlw	high (STR_16| (0+32768))
 10654     0D09  00A6               	movwf	Lcd_Write_String@a+1
 10655     0D0A  160A  158A  276E  120A  158A  	fcall	_Lcd_Write_String
 10656     0D0F                     l3620:
 10657                           
 10658                           ;main1.c: 372:             if (displayValue < 800) {
 10659     0D0F  3003               	movlw	3
 10660     0D10  1683               	bsf	3,5	;RP0=1, select bank3
 10661     0D11  1703               	bsf	3,6	;RP1=1, select bank3
 10662     0D12  0241               	subwf	(main@displayValue+1)^(0+384),w
 10663     0D13  3020               	movlw	32
 10664     0D14  1903               	skipnz
 10665     0D15  0240               	subwf	main@displayValue^(0+384),w
 10666     0D16  1803               	skipnc
 10667     0D17  2D19               	goto	u4751
 10668     0D18  2D1A               	goto	u4750
 10669     0D19                     u4751:
 10670     0D19  2ED1               	goto	l3688
 10671     0D1A                     u4750:
 10672     0D1A                     l3622:
 10673                           
 10674                           ;main1.c: 373:                 char uartMessage[8];;main1.c: 374:                 displa
      +                          yValue += 80;
 10675     0D1A  3050               	movlw	80
 10676     0D1B  07C0               	addwf	main@displayValue^(0+384),f
 10677     0D1C  1803               	skipnc
 10678     0D1D  0AC1               	incf	(main@displayValue+1)^(0+384),f
 10679     0D1E  3000               	movlw	0
 10680     0D1F  07C1               	addwf	(main@displayValue+1)^(0+384),f
 10681                           
 10682                           ;main1.c: 376:                 if (displayValue > 800) {
 10683     0D20  3003               	movlw	3
 10684     0D21  0241               	subwf	(main@displayValue+1)^(0+384),w
 10685     0D22  3021               	movlw	33
 10686     0D23  1903               	skipnz
 10687     0D24  0240               	subwf	main@displayValue^(0+384),w
 10688     0D25  1C03               	skipc
 10689     0D26  2D28               	goto	u4761
 10690     0D27  2D29               	goto	u4760
 10691     0D28                     u4761:
 10692     0D28  2D2D               	goto	l3626
 10693     0D29                     u4760:
 10694     0D29                     l3624:
 10695                           
 10696                           ;main1.c: 377:                     displayValue = 800;
 10697     0D29  3020               	movlw	32
 10698     0D2A  00C0               	movwf	main@displayValue^(0+384)
 10699     0D2B  3003               	movlw	3
 10700     0D2C  00C1               	movwf	(main@displayValue^(0+384)+1)
 10701     0D2D                     l3626:
 10702                           
 10703                           ;main1.c: 379:                 sprintf(uartMessage, "s%d\r\n", displayValue);
 10704     0D2D  3052               	movlw	low (STR_17| (0+32768))
 10705     0D2E  1283               	bcf	3,5	;RP0=0, select bank0
 10706     0D2F  1303               	bcf	3,6	;RP1=0, select bank0
 10707     0D30  00D5               	movwf	sprintf@fmt
 10708     0D31  3099               	movlw	high (STR_17| (0+32768))
 10709     0D32  00D6               	movwf	sprintf@fmt+1
 10710     0D33  1683               	bsf	3,5	;RP0=1, select bank3
 10711     0D34  1703               	bsf	3,6	;RP1=1, select bank3
 10712     0D35  0841               	movf	(main@displayValue+1)^(0+384),w
 10713     0D36  1283               	bcf	3,5	;RP0=0, select bank0
 10714     0D37  1303               	bcf	3,6	;RP1=0, select bank0
 10715     0D38  00D8               	movwf	?_sprintf+3
 10716     0D39  1683               	bsf	3,5	;RP0=1, select bank3
 10717     0D3A  1703               	bsf	3,6	;RP1=1, select bank3
 10718     0D3B  0840               	movf	main@displayValue^(0+384),w
 10719     0D3C  1283               	bcf	3,5	;RP0=0, select bank0
 10720     0D3D  1303               	bcf	3,6	;RP1=0, select bank0
 10721     0D3E  00D7               	movwf	?_sprintf+2
 10722     0D3F  30D7               	movlw	(low (main@uartMessage| 0))& (0+255)
 10723     0D40  160A  158A  2613  120A  158A  	fcall	_sprintf
 10724     0D45                     l3628:
 10725                           
 10726                           ;main1.c: 380:                 UART_Write_Text(uartMessage);
 10727     0D45  30D7               	movlw	(low (main@uartMessage| 0))& (0+255)
 10728     0D46  1283               	bcf	3,5	;RP0=0, select bank0
 10729     0D47  1303               	bcf	3,6	;RP1=0, select bank0
 10730     0D48  00A1               	movwf	UART_Write_Text@text
 10731     0D49  3000               	movlw	0
 10732     0D4A  00A2               	movwf	UART_Write_Text@text+1
 10733     0D4B  160A  158A  26E2  120A  158A  	fcall	_UART_Write_Text
 10734     0D50  2ED1               	goto	l3688
 10735     0D51                     l250:	
 10736                           ;main1.c: 381:             }
 10737                           
 10738                           
 10739                           ;main1.c: 383:         } else if (RE0 == 1) {
 10740     0D51  2ED1               	goto	l3688
 10741     0D52                     l245:
 10742     0D52  1C09               	btfss	9,0	;volatile
 10743     0D53  2D55               	goto	u4771
 10744     0D54  2D56               	goto	u4770
 10745     0D55                     u4771:
 10746     0D55  2D8D               	goto	l253
 10747     0D56                     u4770:
 10748     0D56                     l3630:
 10749                           
 10750                           ;main1.c: 384:             Lcd_Set_Cursor(2, 13);
 10751     0D56  300D               	movlw	13
 10752     0D57  00A4               	movwf	Lcd_Set_Cursor@b
 10753     0D58  3002               	movlw	2
 10754     0D59  160A  118A  2042  120A  158A  	fcall	_Lcd_Set_Cursor
 10755     0D5E                     l3632:
 10756                           
 10757                           ;main1.c: 385:             Lcd_Write_String(" FWD          ");
 10758     0D5E  30C6               	movlw	low (STR_18| (0+32768))
 10759     0D5F  1283               	bcf	3,5	;RP0=0, select bank0
 10760     0D60  1303               	bcf	3,6	;RP1=0, select bank0
 10761     0D61  00A5               	movwf	Lcd_Write_String@a
 10762     0D62  3098               	movlw	high (STR_18| (0+32768))
 10763     0D63  00A6               	movwf	Lcd_Write_String@a+1
 10764     0D64  160A  158A  276E  120A  158A  	fcall	_Lcd_Write_String
 10765     0D69                     l3634:
 10766                           
 10767                           ;main1.c: 386:             char combinedText[20];;main1.c: 387:             sprintf(comb
      +                          inedText, "s%d\r\n", displayValue);
 10768     0D69  3052               	movlw	low (STR_17| (0+32768))
 10769     0D6A  1283               	bcf	3,5	;RP0=0, select bank0
 10770     0D6B  1303               	bcf	3,6	;RP1=0, select bank0
 10771     0D6C  00D5               	movwf	sprintf@fmt
 10772     0D6D  3099               	movlw	high (STR_17| (0+32768))
 10773     0D6E  00D6               	movwf	sprintf@fmt+1
 10774     0D6F  1683               	bsf	3,5	;RP0=1, select bank3
 10775     0D70  1703               	bsf	3,6	;RP1=1, select bank3
 10776     0D71  0841               	movf	(main@displayValue+1)^(0+384),w
 10777     0D72  1283               	bcf	3,5	;RP0=0, select bank0
 10778     0D73  1303               	bcf	3,6	;RP1=0, select bank0
 10779     0D74  00D8               	movwf	?_sprintf+3
 10780     0D75  1683               	bsf	3,5	;RP0=1, select bank3
 10781     0D76  1703               	bsf	3,6	;RP1=1, select bank3
 10782     0D77  0840               	movf	main@displayValue^(0+384),w
 10783     0D78  1283               	bcf	3,5	;RP0=0, select bank0
 10784     0D79  1303               	bcf	3,6	;RP1=0, select bank0
 10785     0D7A  00D7               	movwf	?_sprintf+2
 10786     0D7B  30A6               	movlw	(low (main@combinedText| 0))& (0+255)
 10787     0D7C  160A  158A  2613  120A  158A  	fcall	_sprintf
 10788     0D81                     l3636:
 10789                           
 10790                           ;main1.c: 388:             UART_Write_Text(combinedText);
 10791     0D81  30A6               	movlw	(low (main@combinedText| 0))& (0+255)
 10792     0D82  1283               	bcf	3,5	;RP0=0, select bank0
 10793     0D83  1303               	bcf	3,6	;RP1=0, select bank0
 10794     0D84  00A1               	movwf	UART_Write_Text@text
 10795     0D85  3000               	movlw	0
 10796     0D86  00A2               	movwf	UART_Write_Text@text+1
 10797     0D87  160A  158A  26E2  120A  158A  	fcall	_UART_Write_Text
 10798                           
 10799                           ;main1.c: 391:         } else if (RC2 == 1 && (RE1 == 1 || RC0 == 1)) {
 10800     0D8C  2ED1               	goto	l3688
 10801     0D8D                     l253:
 10802     0D8D  1D07               	btfss	7,2	;volatile
 10803     0D8E  2D90               	goto	u4781
 10804     0D8F  2D91               	goto	u4780
 10805     0D90                     u4781:
 10806     0D90  2DBE               	goto	l255
 10807     0D91                     u4780:
 10808     0D91                     l3638:
 10809     0D91  1889               	btfsc	9,1	;volatile
 10810     0D92  2D94               	goto	u4791
 10811     0D93  2D95               	goto	u4790
 10812     0D94                     u4791:
 10813     0D94  2D99               	goto	l257
 10814     0D95                     u4790:
 10815     0D95                     l3640:
 10816     0D95  1C07               	btfss	7,0	;volatile
 10817     0D96  2D98               	goto	u4801
 10818     0D97  2D99               	goto	u4800
 10819     0D98                     u4801:
 10820     0D98  2DBE               	goto	l255
 10821     0D99                     u4800:
 10822     0D99                     l257:
 10823                           
 10824                           ;main1.c: 392:             limitler=1;
 10825     0D99  1683               	bsf	3,5	;RP0=1, select bank3
 10826     0D9A  1703               	bsf	3,6	;RP1=1, select bank3
 10827     0D9B  01CA               	clrf	_limitler^(0+384)
 10828     0D9C  0ACA               	incf	_limitler^(0+384),f
 10829     0D9D                     l3642:
 10830                           
 10831                           ;main1.c: 393:             Lcd_Set_Cursor(2, 13);
 10832     0D9D  300D               	movlw	13
 10833     0D9E  1283               	bcf	3,5	;RP0=0, select bank0
 10834     0D9F  1303               	bcf	3,6	;RP1=0, select bank0
 10835     0DA0  00A4               	movwf	Lcd_Set_Cursor@b
 10836     0DA1  3002               	movlw	2
 10837     0DA2  160A  118A  2042  120A  158A  	fcall	_Lcd_Set_Cursor
 10838     0DA7                     l3644:
 10839                           
 10840                           ;main1.c: 394:             Lcd_Write_String(" REW LMT");
 10841     0DA7  3049               	movlw	low (STR_20| (0+32768))
 10842     0DA8  1283               	bcf	3,5	;RP0=0, select bank0
 10843     0DA9  1303               	bcf	3,6	;RP1=0, select bank0
 10844     0DAA  00A5               	movwf	Lcd_Write_String@a
 10845     0DAB  3099               	movlw	high (STR_20| (0+32768))
 10846     0DAC  00A6               	movwf	Lcd_Write_String@a+1
 10847     0DAD  160A  158A  276E  120A  158A  	fcall	_Lcd_Write_String
 10848     0DB2                     l3646:
 10849                           
 10850                           ;main1.c: 395:             UART_Write_Text("s0\r\n");
 10851     0DB2  305E               	movlw	low (STR_15| (0+32768))
 10852     0DB3  1283               	bcf	3,5	;RP0=0, select bank0
 10853     0DB4  1303               	bcf	3,6	;RP1=0, select bank0
 10854     0DB5  00A1               	movwf	UART_Write_Text@text
 10855     0DB6  3099               	movlw	high (STR_15| (0+32768))
 10856     0DB7  00A2               	movwf	UART_Write_Text@text+1
 10857     0DB8  160A  158A  26E2  120A  158A  	fcall	_UART_Write_Text
 10858                           
 10859                           ;main1.c: 397:         } else if ((RC0 == 1 && RE1 == 1) || (RC0 == 1 && RE0 == 0)) {
 10860     0DBD  2ED1               	goto	l3688
 10861     0DBE                     l255:
 10862     0DBE  1C07               	btfss	7,0	;volatile
 10863     0DBF  2DC1               	goto	u4811
 10864     0DC0  2DC2               	goto	u4810
 10865     0DC1                     u4811:
 10866     0DC1  2DC6               	goto	l263
 10867     0DC2                     u4810:
 10868     0DC2                     l3648:
 10869     0DC2  1889               	btfsc	9,1	;volatile
 10870     0DC3  2DC5               	goto	u4821
 10871     0DC4  2DC6               	goto	u4820
 10872     0DC5                     u4821:
 10873     0DC5  2DCE               	goto	l3652
 10874     0DC6                     u4820:
 10875     0DC6                     l263:
 10876     0DC6  1C07               	btfss	7,0	;volatile
 10877     0DC7  2DC9               	goto	u4831
 10878     0DC8  2DCA               	goto	u4830
 10879     0DC9                     u4831:
 10880     0DC9  2E5F               	goto	l259
 10881     0DCA                     u4830:
 10882     0DCA                     l3650:
 10883     0DCA  1809               	btfsc	9,0	;volatile
 10884     0DCB  2DCD               	goto	u4841
 10885     0DCC  2DCE               	goto	u4840
 10886     0DCD                     u4841:
 10887     0DCD  2E5F               	goto	l259
 10888     0DCE                     u4840:
 10889     0DCE                     l3652:
 10890                           
 10891                           ;main1.c: 398:             Lcd_Set_Cursor(2, 13);
 10892     0DCE  300D               	movlw	13
 10893     0DCF  00A4               	movwf	Lcd_Set_Cursor@b
 10894     0DD0  3002               	movlw	2
 10895     0DD1  160A  118A  2042  120A  158A  	fcall	_Lcd_Set_Cursor
 10896     0DD6                     l3654:
 10897                           
 10898                           ;main1.c: 399:             Lcd_Write_String(" REW 1.6K");
 10899     0DD6  302C               	movlw	low (STR_22| (0+32768))
 10900     0DD7  1283               	bcf	3,5	;RP0=0, select bank0
 10901     0DD8  1303               	bcf	3,6	;RP1=0, select bank0
 10902     0DD9  00A5               	movwf	Lcd_Write_String@a
 10903     0DDA  3099               	movlw	high (STR_22| (0+32768))
 10904     0DDB  00A6               	movwf	Lcd_Write_String@a+1
 10905     0DDC  160A  158A  276E  120A  158A  	fcall	_Lcd_Write_String
 10906     0DE1                     l3656:
 10907                           
 10908                           ;main1.c: 400:             int negativeFeedValue = -displayValue;
 10909     0DE1  1683               	bsf	3,5	;RP0=1, select bank3
 10910     0DE2  1703               	bsf	3,6	;RP1=1, select bank3
 10911     0DE3  0940               	comf	main@displayValue^(0+384),w
 10912     0DE4  1683               	bsf	3,5	;RP0=1, select bank1
 10913     0DE5  1303               	bcf	3,6	;RP1=0, select bank1
 10914     0DE6  00A0               	movwf	??_main^(0+128)
 10915     0DE7  1683               	bsf	3,5	;RP0=1, select bank3
 10916     0DE8  1703               	bsf	3,6	;RP1=1, select bank3
 10917     0DE9  0941               	comf	(main@displayValue+1)^(0+384),w
 10918     0DEA  1683               	bsf	3,5	;RP0=1, select bank1
 10919     0DEB  1303               	bcf	3,6	;RP1=0, select bank1
 10920     0DEC  00A1               	movwf	(??_main^(0+128)+1)
 10921     0DED  0AA0               	incf	??_main^(0+128),f
 10922     0DEE  1903               	skipnz
 10923     0DEF  0AA1               	incf	(??_main^(0+128)+1),f
 10924     0DF0  0820               	movf	??_main^(0+128),w
 10925     0DF1  1683               	bsf	3,5	;RP0=1, select bank3
 10926     0DF2  1703               	bsf	3,6	;RP1=1, select bank3
 10927     0DF3  00BE               	movwf	main@negativeFeedValue^(0+384)
 10928     0DF4  1683               	bsf	3,5	;RP0=1, select bank1
 10929     0DF5  1303               	bcf	3,6	;RP1=0, select bank1
 10930     0DF6  0821               	movf	(??_main+1)^(0+128),w
 10931     0DF7  1683               	bsf	3,5	;RP0=1, select bank3
 10932     0DF8  1703               	bsf	3,6	;RP1=1, select bank3
 10933     0DF9  00BF               	movwf	(main@negativeFeedValue+1)^(0+384)
 10934     0DFA                     l3658:
 10935                           
 10936                           ;main1.c: 401:             if (negativeFeedValue > -800) {
 10937     0DFA  083F               	movf	(main@negativeFeedValue+1)^(0+384),w
 10938     0DFB  3A80               	xorlw	128
 10939     0DFC  00FF               	movwf	btemp+1
 10940     0DFD  307C               	movlw	124
 10941     0DFE  027F               	subwf	btemp+1,w
 10942     0DFF  1D03               	skipz
 10943     0E00  2E03               	goto	u4855
 10944     0E01  30E1               	movlw	225
 10945     0E02  023E               	subwf	main@negativeFeedValue^(0+384),w
 10946     0E03                     u4855:
 10947     0E03  1C03               	skipc
 10948     0E04  2E06               	goto	u4851
 10949     0E05  2E07               	goto	u4850
 10950     0E06                     u4851:
 10951     0E06  2D51               	goto	l250
 10952     0E07                     u4850:
 10953     0E07                     l3660:
 10954                           
 10955                           ;main1.c: 402:                 char uartMessage[8];;main1.c: 403:                 negati
      +                          veFeedValue -= 80;
 10956     0E07  30B0               	movlw	176
 10957     0E08  1683               	bsf	3,5	;RP0=1, select bank3
 10958     0E09  1703               	bsf	3,6	;RP1=1, select bank3
 10959     0E0A  07BE               	addwf	main@negativeFeedValue^(0+384),f
 10960     0E0B  1803               	skipnc
 10961     0E0C  0ABF               	incf	(main@negativeFeedValue+1)^(0+384),f
 10962     0E0D  30FF               	movlw	255
 10963     0E0E  07BF               	addwf	(main@negativeFeedValue+1)^(0+384),f
 10964     0E0F                     l3662:
 10965                           
 10966                           ;main1.c: 404:                 if (negativeFeedValue < -800) {
 10967     0E0F  083F               	movf	(main@negativeFeedValue+1)^(0+384),w
 10968     0E10  3A80               	xorlw	128
 10969     0E11  00FF               	movwf	btemp+1
 10970     0E12  307C               	movlw	124
 10971     0E13  027F               	subwf	btemp+1,w
 10972     0E14  1D03               	skipz
 10973     0E15  2E18               	goto	u4865
 10974     0E16  30E0               	movlw	224
 10975     0E17  023E               	subwf	main@negativeFeedValue^(0+384),w
 10976     0E18                     u4865:
 10977     0E18  1803               	skipnc
 10978     0E19  2E1B               	goto	u4861
 10979     0E1A  2E1C               	goto	u4860
 10980     0E1B                     u4861:
 10981     0E1B  2E22               	goto	l3666
 10982     0E1C                     u4860:
 10983     0E1C                     l3664:
 10984                           
 10985                           ;main1.c: 405:                     negativeFeedValue = -800;
 10986     0E1C  30E0               	movlw	224
 10987     0E1D  1683               	bsf	3,5	;RP0=1, select bank3
 10988     0E1E  1703               	bsf	3,6	;RP1=1, select bank3
 10989     0E1F  00BE               	movwf	main@negativeFeedValue^(0+384)
 10990     0E20  30FC               	movlw	252
 10991     0E21  00BF               	movwf	(main@negativeFeedValue^(0+384)+1)
 10992     0E22                     l3666:
 10993                           
 10994                           ;main1.c: 407:                 displayValue=-negativeFeedValue;
 10995     0E22  1683               	bsf	3,5	;RP0=1, select bank3
 10996     0E23  1703               	bsf	3,6	;RP1=1, select bank3
 10997     0E24  093E               	comf	main@negativeFeedValue^(0+384),w
 10998     0E25  1683               	bsf	3,5	;RP0=1, select bank1
 10999     0E26  1303               	bcf	3,6	;RP1=0, select bank1
 11000     0E27  00A0               	movwf	??_main^(0+128)
 11001     0E28  1683               	bsf	3,5	;RP0=1, select bank3
 11002     0E29  1703               	bsf	3,6	;RP1=1, select bank3
 11003     0E2A  093F               	comf	(main@negativeFeedValue+1)^(0+384),w
 11004     0E2B  1683               	bsf	3,5	;RP0=1, select bank1
 11005     0E2C  1303               	bcf	3,6	;RP1=0, select bank1
 11006     0E2D  00A1               	movwf	(??_main^(0+128)+1)
 11007     0E2E  0AA0               	incf	??_main^(0+128),f
 11008     0E2F  1903               	skipnz
 11009     0E30  0AA1               	incf	(??_main^(0+128)+1),f
 11010     0E31  0820               	movf	??_main^(0+128),w
 11011     0E32  1683               	bsf	3,5	;RP0=1, select bank3
 11012     0E33  1703               	bsf	3,6	;RP1=1, select bank3
 11013     0E34  00C0               	movwf	main@displayValue^(0+384)
 11014     0E35  1683               	bsf	3,5	;RP0=1, select bank1
 11015     0E36  1303               	bcf	3,6	;RP1=0, select bank1
 11016     0E37  0821               	movf	(??_main+1)^(0+128),w
 11017     0E38  1683               	bsf	3,5	;RP0=1, select bank3
 11018     0E39  1703               	bsf	3,6	;RP1=1, select bank3
 11019     0E3A  00C1               	movwf	(main@displayValue+1)^(0+384)
 11020     0E3B                     l3668:
 11021                           
 11022                           ;main1.c: 408:                 sprintf(uartMessage, "s%d\r\n", negativeFeedValue);
 11023     0E3B  3052               	movlw	low (STR_17| (0+32768))
 11024     0E3C  1283               	bcf	3,5	;RP0=0, select bank0
 11025     0E3D  1303               	bcf	3,6	;RP1=0, select bank0
 11026     0E3E  00D5               	movwf	sprintf@fmt
 11027     0E3F  3099               	movlw	high (STR_17| (0+32768))
 11028     0E40  00D6               	movwf	sprintf@fmt+1
 11029     0E41  1683               	bsf	3,5	;RP0=1, select bank3
 11030     0E42  1703               	bsf	3,6	;RP1=1, select bank3
 11031     0E43  083F               	movf	(main@negativeFeedValue+1)^(0+384),w
 11032     0E44  1283               	bcf	3,5	;RP0=0, select bank0
 11033     0E45  1303               	bcf	3,6	;RP1=0, select bank0
 11034     0E46  00D8               	movwf	?_sprintf+3
 11035     0E47  1683               	bsf	3,5	;RP0=1, select bank3
 11036     0E48  1703               	bsf	3,6	;RP1=1, select bank3
 11037     0E49  083E               	movf	main@negativeFeedValue^(0+384),w
 11038     0E4A  1283               	bcf	3,5	;RP0=0, select bank0
 11039     0E4B  1303               	bcf	3,6	;RP1=0, select bank0
 11040     0E4C  00D7               	movwf	?_sprintf+2
 11041     0E4D  30DF               	movlw	(low (main@uartMessage_374| 0))& (0+255)
 11042     0E4E  160A  158A  2613  120A  158A  	fcall	_sprintf
 11043     0E53                     l3670:
 11044                           
 11045                           ;main1.c: 409:                 UART_Write_Text(uartMessage);
 11046     0E53  30DF               	movlw	(low (main@uartMessage_374| 0))& (0+255)
 11047     0E54  1283               	bcf	3,5	;RP0=0, select bank0
 11048     0E55  1303               	bcf	3,6	;RP1=0, select bank0
 11049     0E56  00A1               	movwf	UART_Write_Text@text
 11050     0E57  3000               	movlw	0
 11051     0E58  00A2               	movwf	UART_Write_Text@text+1
 11052     0E59  160A  158A  26E2  120A  158A  	fcall	_UART_Write_Text
 11053     0E5E  2ED1               	goto	l3688
 11054     0E5F                     l259:
 11055     0E5F  1C89               	btfss	9,1	;volatile
 11056     0E60  2E62               	goto	u4871
 11057     0E61  2E63               	goto	u4870
 11058     0E62                     u4871:
 11059     0E62  2EB3               	goto	l3682
 11060     0E63                     u4870:
 11061     0E63                     l3672:
 11062                           
 11063                           ;main1.c: 413:             Lcd_Set_Cursor(2, 13);
 11064     0E63  300D               	movlw	13
 11065     0E64  00A4               	movwf	Lcd_Set_Cursor@b
 11066     0E65  3002               	movlw	2
 11067     0E66  160A  118A  2042  120A  158A  	fcall	_Lcd_Set_Cursor
 11068     0E6B                     l3674:
 11069                           
 11070                           ;main1.c: 414:             Lcd_Write_String(" REW         ");
 11071     0E6B  30E4               	movlw	low (STR_24| (0+32768))
 11072     0E6C  1283               	bcf	3,5	;RP0=0, select bank0
 11073     0E6D  1303               	bcf	3,6	;RP1=0, select bank0
 11074     0E6E  00A5               	movwf	Lcd_Write_String@a
 11075     0E6F  3098               	movlw	high (STR_24| (0+32768))
 11076     0E70  00A6               	movwf	Lcd_Write_String@a+1
 11077     0E71  160A  158A  276E  120A  158A  	fcall	_Lcd_Write_String
 11078     0E76                     l3676:
 11079                           
 11080                           ;main1.c: 415:             int negativeDisplayValue = -displayValue;
 11081     0E76  1683               	bsf	3,5	;RP0=1, select bank3
 11082     0E77  1703               	bsf	3,6	;RP1=1, select bank3
 11083     0E78  0940               	comf	main@displayValue^(0+384),w
 11084     0E79  1683               	bsf	3,5	;RP0=1, select bank1
 11085     0E7A  1303               	bcf	3,6	;RP1=0, select bank1
 11086     0E7B  00A0               	movwf	??_main^(0+128)
 11087     0E7C  1683               	bsf	3,5	;RP0=1, select bank3
 11088     0E7D  1703               	bsf	3,6	;RP1=1, select bank3
 11089     0E7E  0941               	comf	(main@displayValue+1)^(0+384),w
 11090     0E7F  1683               	bsf	3,5	;RP0=1, select bank1
 11091     0E80  1303               	bcf	3,6	;RP1=0, select bank1
 11092     0E81  00A1               	movwf	(??_main^(0+128)+1)
 11093     0E82  0AA0               	incf	??_main^(0+128),f
 11094     0E83  1903               	skipnz
 11095     0E84  0AA1               	incf	(??_main^(0+128)+1),f
 11096     0E85  0820               	movf	??_main^(0+128),w
 11097     0E86  1683               	bsf	3,5	;RP0=1, select bank3
 11098     0E87  1703               	bsf	3,6	;RP1=1, select bank3
 11099     0E88  00AA               	movwf	main@negativeDisplayValue^(0+384)
 11100     0E89  1683               	bsf	3,5	;RP0=1, select bank1
 11101     0E8A  1303               	bcf	3,6	;RP1=0, select bank1
 11102     0E8B  0821               	movf	(??_main+1)^(0+128),w
 11103     0E8C  1683               	bsf	3,5	;RP0=1, select bank3
 11104     0E8D  1703               	bsf	3,6	;RP1=1, select bank3
 11105     0E8E  00AB               	movwf	(main@negativeDisplayValue+1)^(0+384)
 11106     0E8F                     l3678:
 11107                           
 11108                           ;main1.c: 416:             char combinedText[20];;main1.c: 417:             sprintf(comb
      +                          inedText, "s%d\r\n", negativeDisplayValue);
 11109     0E8F  3052               	movlw	low (STR_17| (0+32768))
 11110     0E90  1283               	bcf	3,5	;RP0=0, select bank0
 11111     0E91  1303               	bcf	3,6	;RP1=0, select bank0
 11112     0E92  00D5               	movwf	sprintf@fmt
 11113     0E93  3099               	movlw	high (STR_17| (0+32768))
 11114     0E94  00D6               	movwf	sprintf@fmt+1
 11115     0E95  1683               	bsf	3,5	;RP0=1, select bank3
 11116     0E96  1703               	bsf	3,6	;RP1=1, select bank3
 11117     0E97  082B               	movf	(main@negativeDisplayValue+1)^(0+384),w
 11118     0E98  1283               	bcf	3,5	;RP0=0, select bank0
 11119     0E99  1303               	bcf	3,6	;RP1=0, select bank0
 11120     0E9A  00D8               	movwf	?_sprintf+3
 11121     0E9B  1683               	bsf	3,5	;RP0=1, select bank3
 11122     0E9C  1703               	bsf	3,6	;RP1=1, select bank3
 11123     0E9D  082A               	movf	main@negativeDisplayValue^(0+384),w
 11124     0E9E  1283               	bcf	3,5	;RP0=0, select bank0
 11125     0E9F  1303               	bcf	3,6	;RP1=0, select bank0
 11126     0EA0  00D7               	movwf	?_sprintf+2
 11127     0EA1  30BA               	movlw	(low (main@combinedText_378| 0))& (0+255)
 11128     0EA2  160A  158A  2613  120A  158A  	fcall	_sprintf
 11129     0EA7                     l3680:
 11130                           
 11131                           ;main1.c: 418:             UART_Write_Text(combinedText);
 11132     0EA7  30BA               	movlw	(low (main@combinedText_378| 0))& (0+255)
 11133     0EA8  1283               	bcf	3,5	;RP0=0, select bank0
 11134     0EA9  1303               	bcf	3,6	;RP1=0, select bank0
 11135     0EAA  00A1               	movwf	UART_Write_Text@text
 11136     0EAB  3000               	movlw	0
 11137     0EAC  00A2               	movwf	UART_Write_Text@text+1
 11138     0EAD  160A  158A  26E2  120A  158A  	fcall	_UART_Write_Text
 11139                           
 11140                           ;main1.c: 419:         } else {
 11141     0EB2  2ED1               	goto	l3688
 11142     0EB3                     l3682:
 11143                           
 11144                           ;main1.c: 421:             Lcd_Set_Cursor(2, 13);
 11145     0EB3  300D               	movlw	13
 11146     0EB4  00A4               	movwf	Lcd_Set_Cursor@b
 11147     0EB5  3002               	movlw	2
 11148     0EB6  160A  118A  2042  120A  158A  	fcall	_Lcd_Set_Cursor
 11149     0EBB                     l3684:
 11150                           
 11151                           ;main1.c: 422:             Lcd_Write_String(" STOP       ");
 11152     0EBB  3000               	movlw	low (STR_26| (0+32768))
 11153     0EBC  1283               	bcf	3,5	;RP0=0, select bank0
 11154     0EBD  1303               	bcf	3,6	;RP1=0, select bank0
 11155     0EBE  00A5               	movwf	Lcd_Write_String@a
 11156     0EBF  3099               	movlw	high (STR_26| (0+32768))
 11157     0EC0  00A6               	movwf	Lcd_Write_String@a+1
 11158     0EC1  160A  158A  276E  120A  158A  	fcall	_Lcd_Write_String
 11159     0EC6                     l3686:
 11160                           
 11161                           ;main1.c: 423:             UART_Write_Text("s0\r\n");
 11162     0EC6  305E               	movlw	low (STR_15| (0+32768))
 11163     0EC7  1283               	bcf	3,5	;RP0=0, select bank0
 11164     0EC8  1303               	bcf	3,6	;RP1=0, select bank0
 11165     0EC9  00A1               	movwf	UART_Write_Text@text
 11166     0ECA  3099               	movlw	high (STR_15| (0+32768))
 11167     0ECB  00A2               	movwf	UART_Write_Text@text+1
 11168     0ECC  160A  158A  26E2  120A  158A  	fcall	_UART_Write_Text
 11169     0ED1                     l3688:
 11170                           
 11171                           ;main1.c: 430:         if((RC1==1) &&( RE0==1 || RE2 )){
 11172     0ED1  1283               	bcf	3,5	;RP0=0, select bank0
 11173     0ED2  1303               	bcf	3,6	;RP1=0, select bank0
 11174     0ED3  1C87               	btfss	7,1	;volatile
 11175     0ED4  2ED6               	goto	u4881
 11176     0ED5  2ED7               	goto	u4880
 11177     0ED6                     u4881:
 11178     0ED6  2EE3               	goto	l269
 11179     0ED7                     u4880:
 11180     0ED7                     l3690:
 11181     0ED7  1809               	btfsc	9,0	;volatile
 11182     0ED8  2EDA               	goto	u4891
 11183     0ED9  2EDB               	goto	u4890
 11184     0EDA                     u4891:
 11185     0EDA  2EDF               	goto	l271
 11186     0EDB                     u4890:
 11187     0EDB                     l3692:
 11188     0EDB  1D09               	btfss	9,2	;volatile
 11189     0EDC  2EDE               	goto	u4901
 11190     0EDD  2EDF               	goto	u4900
 11191     0EDE                     u4901:
 11192     0EDE  2EE3               	goto	l269
 11193     0EDF                     u4900:
 11194     0EDF                     l271:
 11195                           
 11196                           ;main1.c: 432:             RA4=1;
 11197     0EDF  1283               	bcf	3,5	;RP0=0, select bank0
 11198     0EE0  1303               	bcf	3,6	;RP1=0, select bank0
 11199     0EE1  1605               	bsf	5,4	;volatile
 11200                           
 11201                           ;main1.c: 433:         }
 11202     0EE2  2EF2               	goto	l272
 11203     0EE3                     l269:	
 11204                           ;main1.c: 434:         else if(( RC2==1) && (RE1==1 || RC0)){
 11205                           
 11206     0EE3  1D07               	btfss	7,2	;volatile
 11207     0EE4  2EE6               	goto	u4911
 11208     0EE5  2EE7               	goto	u4910
 11209     0EE6                     u4911:
 11210     0EE6  2EF0               	goto	l273
 11211     0EE7                     u4910:
 11212     0EE7                     l3694:
 11213     0EE7  1889               	btfsc	9,1	;volatile
 11214     0EE8  2EEA               	goto	u4921
 11215     0EE9  2EEB               	goto	u4920
 11216     0EEA                     u4921:
 11217     0EEA  2EDF               	goto	l271
 11218     0EEB                     u4920:
 11219     0EEB                     l3696:
 11220     0EEB  1C07               	btfss	7,0	;volatile
 11221     0EEC  2EEE               	goto	u4931
 11222     0EED  2EEF               	goto	u4930
 11223     0EEE                     u4931:
 11224     0EEE  2EF0               	goto	l273
 11225     0EEF                     u4930:
 11226     0EEF  2EDF               	goto	l271
 11227     0EF0                     l273:	
 11228                           ;main1.c: 438:         else {
 11229                           
 11230                           
 11231                           ;main1.c: 439:             RA4=0;
 11232     0EF0  1205               	bcf	5,4	;volatile
 11233     0EF1  2EF2               	goto	l272
 11234     0EF2                     l272:
 11235                           
 11236                           ;main1.c: 443:   }
 11237     0EF2  160A  118A  2FA6   	goto	l3454
 11238     0EF5                     l222:	
 11239                           ;main1.c: 444: else if( RC3==1) {
 11240                           
 11241     0EF5  1283               	bcf	3,5	;RP0=0, select bank0
 11242     0EF6  1303               	bcf	3,6	;RP1=0, select bank0
 11243     0EF7  1D87               	btfss	7,3	;volatile
 11244     0EF8  2EFA               	goto	u4941
 11245     0EF9  2EFB               	goto	u4940
 11246     0EFA                     u4941:
 11247     0EFA  2F51               	goto	l278
 11248     0EFB                     u4940:
 11249     0EFB                     l3698:
 11250                           
 11251                           ;main1.c: 449:     Lcd_Set_Cursor(1,1);
 11252     0EFB  01A4               	clrf	Lcd_Set_Cursor@b
 11253     0EFC  0AA4               	incf	Lcd_Set_Cursor@b,f
 11254     0EFD  3001               	movlw	1
 11255     0EFE  160A  118A  2042  120A  158A  	fcall	_Lcd_Set_Cursor
 11256     0F03                     l3700:
 11257                           
 11258                           ;main1.c: 450:             Lcd_Write_String("   FEED RATE ERROR       ");
 11259     0F03  301B               	movlw	low (STR_28| (0+32768))
 11260     0F04  1283               	bcf	3,5	;RP0=0, select bank0
 11261     0F05  1303               	bcf	3,6	;RP1=0, select bank0
 11262     0F06  00A5               	movwf	Lcd_Write_String@a
 11263     0F07  3098               	movlw	high (STR_28| (0+32768))
 11264     0F08  00A6               	movwf	Lcd_Write_String@a+1
 11265     0F09  160A  158A  276E  120A  158A  	fcall	_Lcd_Write_String
 11266     0F0E                     l3702:
 11267                           
 11268                           ;main1.c: 451:     Lcd_Set_Cursor(2,1);
 11269     0F0E  1283               	bcf	3,5	;RP0=0, select bank0
 11270     0F0F  1303               	bcf	3,6	;RP1=0, select bank0
 11271     0F10  01A4               	clrf	Lcd_Set_Cursor@b
 11272     0F11  0AA4               	incf	Lcd_Set_Cursor@b,f
 11273     0F12  3002               	movlw	2
 11274     0F13  160A  118A  2042  120A  158A  	fcall	_Lcd_Set_Cursor
 11275                           
 11276                           ;main1.c: 452:             Lcd_Write_String("   ILERLEME HATASI        ");
 11277     0F18  3000               	movlw	low (STR_29| (0+32768))
 11278     0F19  1283               	bcf	3,5	;RP0=0, select bank0
 11279     0F1A  1303               	bcf	3,6	;RP1=0, select bank0
 11280     0F1B  00A5               	movwf	Lcd_Write_String@a
 11281     0F1C  3098               	movlw	high (STR_29| (0+32768))
 11282     0F1D  00A6               	movwf	Lcd_Write_String@a+1
 11283     0F1E  160A  158A  276E  120A  158A  	fcall	_Lcd_Write_String
 11284                           
 11285                           ;main1.c: 453:      UART_Write_Text("s0\r\n");
 11286     0F23  305E               	movlw	low (STR_15| (0+32768))
 11287     0F24  1283               	bcf	3,5	;RP0=0, select bank0
 11288     0F25  1303               	bcf	3,6	;RP1=0, select bank0
 11289     0F26  00A1               	movwf	UART_Write_Text@text
 11290     0F27  3099               	movlw	high (STR_15| (0+32768))
 11291     0F28  00A2               	movwf	UART_Write_Text@text+1
 11292     0F29  160A  158A  26E2  120A  158A  	fcall	_UART_Write_Text
 11293     0F2E                     l3704:
 11294                           
 11295                           ;main1.c: 454:       RA4=1;
 11296     0F2E  1283               	bcf	3,5	;RP0=0, select bank0
 11297     0F2F  1303               	bcf	3,6	;RP1=0, select bank0
 11298     0F30  1605               	bsf	5,4	;volatile
 11299     0F31                     l3706:
 11300                           
 11301                           ;main1.c: 455:       _delay((unsigned long)((1000)*(4000000/4000.0)));
 11302     0F31  3006               	movlw	6
 11303     0F32  1683               	bsf	3,5	;RP0=1, select bank1
 11304     0F33  1303               	bcf	3,6	;RP1=0, select bank1
 11305     0F34  00A2               	movwf	(??_main^(0+128)+2)
 11306     0F35  3013               	movlw	19
 11307     0F36  00A1               	movwf	(??_main^(0+128)+1)
 11308     0F37  30AD               	movlw	173
 11309     0F38  00A0               	movwf	??_main^(0+128)
 11310     0F39                     u5077:
 11311     0F39  0BA0               	decfsz	??_main^(0+128),f
 11312     0F3A  2F39               	goto	u5077
 11313     0F3B  0BA1               	decfsz	(??_main^(0+128)+1),f
 11314     0F3C  2F39               	goto	u5077
 11315     0F3D  0BA2               	decfsz	(??_main^(0+128)+2),f
 11316     0F3E  2F39               	goto	u5077
 11317     0F3F                     l3708:
 11318                           
 11319                           ;main1.c: 456:       RA4=0;
 11320     0F3F  1283               	bcf	3,5	;RP0=0, select bank0
 11321     0F40  1303               	bcf	3,6	;RP1=0, select bank0
 11322     0F41  1205               	bcf	5,4	;volatile
 11323     0F42                     l3710:
 11324                           
 11325                           ;main1.c: 457:       _delay((unsigned long)((3000)*(4000000/4000.0)));
 11326     0F42  3010               	movlw	16
 11327     0F43  1683               	bsf	3,5	;RP0=1, select bank1
 11328     0F44  1303               	bcf	3,6	;RP1=0, select bank1
 11329     0F45  00A2               	movwf	(??_main^(0+128)+2)
 11330     0F46  3039               	movlw	57
 11331     0F47  00A1               	movwf	(??_main^(0+128)+1)
 11332     0F48  300D               	movlw	13
 11333     0F49  00A0               	movwf	??_main^(0+128)
 11334     0F4A                     u5087:
 11335     0F4A  0BA0               	decfsz	??_main^(0+128),f
 11336     0F4B  2F4A               	goto	u5087
 11337     0F4C  0BA1               	decfsz	(??_main^(0+128)+1),f
 11338     0F4D  2F4A               	goto	u5087
 11339     0F4E  0BA2               	decfsz	(??_main^(0+128)+2),f
 11340     0F4F  2F4A               	goto	u5087
 11341     0F50  2EDF               	goto	l271
 11342     0F51                     l278:	
 11343                           ;main1.c: 463:      else if (RD0 == 1 ){
 11344                           
 11345     0F51  1C08               	btfss	8,0	;volatile
 11346     0F52  2F54               	goto	u4951
 11347     0F53  2F55               	goto	u4950
 11348     0F54                     u4951:
 11349     0F54  2F89               	goto	l3732
 11350     0F55                     u4950:
 11351     0F55                     l3714:
 11352                           
 11353                           ;main1.c: 464:     UART_Write_Text("s0\r\n");
 11354     0F55  305E               	movlw	low (STR_15| (0+32768))
 11355     0F56  00A1               	movwf	UART_Write_Text@text
 11356     0F57  3099               	movlw	high (STR_15| (0+32768))
 11357     0F58  00A2               	movwf	UART_Write_Text@text+1
 11358     0F59  160A  158A  26E2  120A  158A  	fcall	_UART_Write_Text
 11359     0F5E                     l3716:
 11360                           
 11361                           ;main1.c: 465:     Lcd_Set_Cursor(1,1);
 11362     0F5E  1283               	bcf	3,5	;RP0=0, select bank0
 11363     0F5F  1303               	bcf	3,6	;RP1=0, select bank0
 11364     0F60  01A4               	clrf	Lcd_Set_Cursor@b
 11365     0F61  0AA4               	incf	Lcd_Set_Cursor@b,f
 11366     0F62  3001               	movlw	1
 11367     0F63  160A  118A  2042  120A  158A  	fcall	_Lcd_Set_Cursor
 11368     0F68                     l3718:
 11369                           
 11370                           ;main1.c: 466:             Lcd_Write_String("   ROTATION ERROR      ");
 11371     0F68  304D               	movlw	low (STR_32| (0+32768))
 11372     0F69  1283               	bcf	3,5	;RP0=0, select bank0
 11373     0F6A  1303               	bcf	3,6	;RP1=0, select bank0
 11374     0F6B  00A5               	movwf	Lcd_Write_String@a
 11375     0F6C  3098               	movlw	high (STR_32| (0+32768))
 11376     0F6D  00A6               	movwf	Lcd_Write_String@a+1
 11377     0F6E  160A  158A  276E  120A  158A  	fcall	_Lcd_Write_String
 11378                           
 11379                           ;main1.c: 467:     Lcd_Set_Cursor(2,1);
 11380     0F73  1283               	bcf	3,5	;RP0=0, select bank0
 11381     0F74  1303               	bcf	3,6	;RP1=0, select bank0
 11382     0F75  01A4               	clrf	Lcd_Set_Cursor@b
 11383     0F76  0AA4               	incf	Lcd_Set_Cursor@b,f
 11384     0F77  3002               	movlw	2
 11385     0F78  160A  118A  2042  120A  158A  	fcall	_Lcd_Set_Cursor
 11386     0F7D                     l3720:
 11387                           
 11388                           ;main1.c: 468:             Lcd_Write_String("   DONME HATASI        ");
 11389     0F7D  3035               	movlw	low (STR_33| (0+32768))
 11390     0F7E  1283               	bcf	3,5	;RP0=0, select bank0
 11391     0F7F  1303               	bcf	3,6	;RP1=0, select bank0
 11392     0F80  00A5               	movwf	Lcd_Write_String@a
 11393     0F81  3098               	movlw	high (STR_33| (0+32768))
 11394     0F82  00A6               	movwf	Lcd_Write_String@a+1
 11395     0F83  160A  158A  276E  120A  158A  	fcall	_Lcd_Write_String
 11396     0F88  2F2E               	goto	l3704
 11397     0F89                     l3732:
 11398     0F89  1683               	bsf	3,5	;RP0=1, select bank3
 11399     0F8A  1703               	bsf	3,6	;RP1=1, select bank3
 11400     0F8B  034A               	decf	_limitler^(0+384),w
 11401     0F8C  1D03               	btfss	3,2
 11402     0F8D  2F8F               	goto	u4961
 11403     0F8E  2F90               	goto	u4960
 11404     0F8F                     u4961:
 11405     0F8F  2EF2               	goto	l272
 11406     0F90                     u4960:
 11407     0F90                     l3734:
 11408                           
 11409                           ;main1.c: 481:          UART_Write_Text("s0\r\n");
 11410     0F90  305E               	movlw	low (STR_15| (0+32768))
 11411     0F91  1283               	bcf	3,5	;RP0=0, select bank0
 11412     0F92  1303               	bcf	3,6	;RP1=0, select bank0
 11413     0F93  00A1               	movwf	UART_Write_Text@text
 11414     0F94  3099               	movlw	high (STR_15| (0+32768))
 11415     0F95  00A2               	movwf	UART_Write_Text@text+1
 11416     0F96  160A  158A  26E2  120A  158A  	fcall	_UART_Write_Text
 11417     0F9B                     l3736:
 11418                           
 11419                           ;main1.c: 482:          Lcd_Set_Cursor(1,1);
 11420     0F9B  1283               	bcf	3,5	;RP0=0, select bank0
 11421     0F9C  1303               	bcf	3,6	;RP1=0, select bank0
 11422     0F9D  01A4               	clrf	Lcd_Set_Cursor@b
 11423     0F9E  0AA4               	incf	Lcd_Set_Cursor@b,f
 11424     0F9F  3001               	movlw	1
 11425     0FA0  160A  118A  2042  120A  158A  	fcall	_Lcd_Set_Cursor
 11426     0FA5                     l3738:
 11427                           
 11428                           ;main1.c: 483:          Lcd_Write_String("STOP DURUMUNA GETIR ");
 11429     0FA5  3065               	movlw	low (STR_35| (0+32768))
 11430     0FA6  1283               	bcf	3,5	;RP0=0, select bank0
 11431     0FA7  1303               	bcf	3,6	;RP1=0, select bank0
 11432     0FA8  00A5               	movwf	Lcd_Write_String@a
 11433     0FA9  3098               	movlw	high (STR_35| (0+32768))
 11434     0FAA  00A6               	movwf	Lcd_Write_String@a+1
 11435     0FAB  160A  158A  276E  120A  158A  	fcall	_Lcd_Write_String
 11436                           
 11437                           ;main1.c: 484:         Lcd_Set_Cursor(2,1);
 11438     0FB0  1283               	bcf	3,5	;RP0=0, select bank0
 11439     0FB1  1303               	bcf	3,6	;RP1=0, select bank0
 11440     0FB2  01A4               	clrf	Lcd_Set_Cursor@b
 11441     0FB3  0AA4               	incf	Lcd_Set_Cursor@b,f
 11442     0FB4  3002               	movlw	2
 11443     0FB5  160A  118A  2042  120A  158A  	fcall	_Lcd_Set_Cursor
 11444     0FBA                     l3740:
 11445                           
 11446                           ;main1.c: 485:         Lcd_Write_String("PUT IT IN STOP STATE");
 11447     0FBA  307A               	movlw	low (STR_7| (0+32768))
 11448     0FBB  1283               	bcf	3,5	;RP0=0, select bank0
 11449     0FBC  1303               	bcf	3,6	;RP1=0, select bank0
 11450     0FBD  00A5               	movwf	Lcd_Write_String@a
 11451     0FBE  3098               	movlw	high (STR_7| (0+32768))
 11452     0FBF  00A6               	movwf	Lcd_Write_String@a+1
 11453     0FC0  160A  158A  276E  120A  158A  	fcall	_Lcd_Write_String
 11454     0FC5                     l3742:
 11455                           
 11456                           ;main1.c: 486:          RA4=1;
 11457     0FC5  1283               	bcf	3,5	;RP0=0, select bank0
 11458     0FC6  1303               	bcf	3,6	;RP1=0, select bank0
 11459     0FC7  1605               	bsf	5,4	;volatile
 11460     0FC8                     l3744:
 11461                           
 11462                           ;main1.c: 487:       _delay((unsigned long)((1000)*(4000000/4000.0)));
 11463     0FC8  3006               	movlw	6
 11464     0FC9  1683               	bsf	3,5	;RP0=1, select bank1
 11465     0FCA  1303               	bcf	3,6	;RP1=0, select bank1
 11466     0FCB  00A2               	movwf	(??_main^(0+128)+2)
 11467     0FCC  3013               	movlw	19
 11468     0FCD  00A1               	movwf	(??_main^(0+128)+1)
 11469     0FCE  30AD               	movlw	173
 11470     0FCF  00A0               	movwf	??_main^(0+128)
 11471     0FD0                     u5097:
 11472     0FD0  0BA0               	decfsz	??_main^(0+128),f
 11473     0FD1  2FD0               	goto	u5097
 11474     0FD2  0BA1               	decfsz	(??_main^(0+128)+1),f
 11475     0FD3  2FD0               	goto	u5097
 11476     0FD4  0BA2               	decfsz	(??_main^(0+128)+2),f
 11477     0FD5  2FD0               	goto	u5097
 11478     0FD6                     l3746:
 11479                           
 11480                           ;main1.c: 488:       RA4=0;
 11481     0FD6  1283               	bcf	3,5	;RP0=0, select bank0
 11482     0FD7  1303               	bcf	3,6	;RP1=0, select bank0
 11483     0FD8  1205               	bcf	5,4	;volatile
 11484     0FD9                     l3748:
 11485                           
 11486                           ;main1.c: 489:       _delay((unsigned long)((1000)*(4000000/4000.0)));
 11487     0FD9  3006               	movlw	6
 11488     0FDA  1683               	bsf	3,5	;RP0=1, select bank1
 11489     0FDB  1303               	bcf	3,6	;RP1=0, select bank1
 11490     0FDC  00A2               	movwf	(??_main^(0+128)+2)
 11491     0FDD  3013               	movlw	19
 11492     0FDE  00A1               	movwf	(??_main^(0+128)+1)
 11493     0FDF  30AD               	movlw	173
 11494     0FE0  00A0               	movwf	??_main^(0+128)
 11495     0FE1                     u5107:
 11496     0FE1  0BA0               	decfsz	??_main^(0+128),f
 11497     0FE2  2FE1               	goto	u5107
 11498     0FE3  0BA1               	decfsz	(??_main^(0+128)+1),f
 11499     0FE4  2FE1               	goto	u5107
 11500     0FE5  0BA2               	decfsz	(??_main^(0+128)+2),f
 11501     0FE6  2FE1               	goto	u5107
 11502     0FE7                     l3750:
 11503                           
 11504                           ;main1.c: 490:       if ( RE2 == 0 && RE0 == 0 && RC0 == 0 && RE1 == 0) {
 11505     0FE7  1283               	bcf	3,5	;RP0=0, select bank0
 11506     0FE8  1303               	bcf	3,6	;RP1=0, select bank0
 11507     0FE9  1909               	btfsc	9,2	;volatile
 11508     0FEA  2FEC               	goto	u4971
 11509     0FEB  2FED               	goto	u4970
 11510     0FEC                     u4971:
 11511     0FEC  2EF2               	goto	l272
 11512     0FED                     u4970:
 11513     0FED                     l3752:
 11514     0FED  1809               	btfsc	9,0	;volatile
 11515     0FEE  2FF0               	goto	u4981
 11516     0FEF  2FF1               	goto	u4980
 11517     0FF0                     u4981:
 11518     0FF0  2EF2               	goto	l272
 11519     0FF1                     u4980:
 11520     0FF1                     l3754:
 11521     0FF1  1807               	btfsc	7,0	;volatile
 11522     0FF2  2FF4               	goto	u4991
 11523     0FF3  2FF5               	goto	u4990
 11524     0FF4                     u4991:
 11525     0FF4  2EF2               	goto	l272
 11526     0FF5                     u4990:
 11527     0FF5                     l3756:
 11528     0FF5  1889               	btfsc	9,1	;volatile
 11529     0FF6  2FF8               	goto	u5001
 11530     0FF7  2FF9               	goto	u5000
 11531     0FF8                     u5001:
 11532     0FF8  2EF2               	goto	l272
 11533     0FF9                     u5000:
 11534     0FF9                     l3758:
 11535                           
 11536                           ;main1.c: 491:             limitler = 0;
 11537     0FF9  1683               	bsf	3,5	;RP0=1, select bank3
 11538     0FFA  1703               	bsf	3,6	;RP1=1, select bank3
 11539     0FFB  01CA               	clrf	_limitler^(0+384)
 11540     0FFC  2EF2               	goto	l272
 11541     0FFD                     l221:
 11542     0FFD  120A  118A  280E   	ljmp	start
 11543     1000                     __end_of_main:

Data Sizes:
    Strings     363
    Constant    0
    Data        2
    BSS         50
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      13
    BANK0            80     77      80
    BANK1            80     80      80
    BANK3            96     52      67
    BANK2            96      0      32

Pointer List with Targets:

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    f$.$buffer	PTR unsigned char  size(1) Largest target is 0

    f$.$source	PTR const unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(1) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    incrementTime@time	PTR struct Time size(1) Largest target is 8
		 -> currentTime(BANK3[8]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 27
		 -> main@adcString1(BANK1[4]), main@lcdText(BANK1[9]), main@rpmString(BANK1[5]), STR_1(CODE[19]), 
		 -> STR_10(CODE[10]), STR_12(CODE[5]), STR_14(CODE[9]), STR_16(CODE[10]), 
		 -> STR_18(CODE[15]), STR_2(CODE[14]), STR_20(CODE[9]), STR_22(CODE[10]), 
		 -> STR_24(CODE[14]), STR_26(CODE[13]), STR_28(CODE[26]), STR_29(CODE[27]), 
		 -> STR_3(CODE[16]), STR_32(CODE[24]), STR_33(CODE[24]), STR_35(CODE[21]), 
		 -> STR_36(CODE[21]), STR_4(CODE[15]), STR_5(CODE[3]), STR_6(CODE[20]), 
		 -> STR_7(CODE[21]), STR_9(CODE[3]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S810$buffer	PTR unsigned char  size(1) Largest target is 0

    S810$source	PTR const unsigned char  size(1) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_11(CODE[6]), STR_13(CODE[10]), STR_17(CODE[6]), STR_19(CODE[6]), 
		 -> STR_23(CODE[6]), STR_25(CODE[6]), STR_8(CODE[11]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 20
		 -> main@adcString1(BANK1[4]), main@combinedText(BANK1[20]), main@combinedText_378(BANK1[20]), main@lcdText(BANK1[9]), 
		 -> main@rpmString(BANK1[5]), main@uartMessage(BANK1[8]), main@uartMessage_374(BANK1[8]), 

    UART_Write_Text@text	PTR unsigned char  size(2) Largest target is 20
		 -> main@combinedText(BANK1[20]), main@combinedText_378(BANK1[20]), main@uartMessage(BANK1[8]), main@uartMessage_374(BANK1[8]), 
		 -> STR_15(CODE[5]), STR_21(CODE[5]), STR_27(CODE[5]), STR_30(CODE[5]), 
		 -> STR_31(CODE[5]), STR_34(CODE[5]), 

    utoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 11
		 -> STR_11(CODE[6]), STR_13(CODE[10]), STR_17(CODE[6]), STR_19(CODE[6]), 
		 -> STR_23(CODE[6]), STR_25(CODE[6]), STR_8(CODE[11]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 11
		 -> STR_11(CODE[6]), STR_13(CODE[10]), STR_17(CODE[6]), STR_19(CODE[6]), 
		 -> STR_23(CODE[6]), STR_25(CODE[6]), STR_8(CODE[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_11(CODE[6]), STR_13(CODE[10]), STR_17(CODE[6]), STR_19(CODE[6]), 
		 -> STR_23(CODE[6]), STR_25(CODE[6]), STR_8(CODE[11]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _timer_isr in COMMON

    _timer_isr->i1_readEEPROM
    _timer_isr->i1_writeEEPROM

Critical Paths under _main in BANK0

    _main->_sprintf
    _yagBakim->_Lcd_Write_String
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _utoa->_pad
    _read_prec_or_width->___wmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    ___awmod->___fltol
    ___awdiv->___fltol
    _readEEPROM->___wmul
    ___flmul->___fldiv
    _UART_Write_Text->_UART_Write
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _timer_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _timer_isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _timer_isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _timer_isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               134   134      0   33387
                                              0 BANK1     80    80      0
                                              0 BANK3     52    52      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                    _UART_Initialize
                    _UART_Write_Text
                            ___awdiv
                            ___awmod
                            ___fldiv
                            ___flmul
                            ___fltol
                             ___wmul
                           ___xxtofl
                         _readEEPROM
                            _sprintf
                        _writeEEPROM
                           _yagBakim
 ---------------------------------------------------------------------------------
 (1) _yagBakim                                             2     2      0    4756
                                             12 BANK0      2     2      0
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     7     5      2    2244
                                              5 BANK0      7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       4     4      0     178
                                              1 BANK0      4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       6     5      1    2356
                                              4 BANK0      6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _writeEEPROM                                          4     0      4     596
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             26    16     10   11932
                                             53 BANK0     24    14     10
                            ___fltol (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             6     3      3   10966
                                             47 BANK0      6     3      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           15    13      2   10648
                                             33 BANK0     14    12      2
                               _dtoa
                              _fputc
                 _read_prec_or_width
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                 8     6      2    3211
                                             22 BANK0      8     6      2
                            ___lwdiv
                            ___lwmod
                                _pad
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     311
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     314
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   8     6      2    1141
                                              6 BANK0      8     6      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     852
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                11     9      2    4852
                                             22 BANK0     11     9      2
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  7     4      3    2228
                                             15 BANK0      7     4      3
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     6      1     997
                                              8 BANK0      7     6      1
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                8     5      3     682
                                              0 BANK0      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             16 BANK0      4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4    1056
                                             10 BANK0      6     2      4
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     908
                                             10 BANK0      8     4      4
                            ___fltol (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _readEEPROM                                           4     2      2     780
                                              6 BANK0      4     2      2
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     550
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     685
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             26    18      8    2721
                                             26 BANK0     26    18      8
                          __Umul8_16
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) __Umul8_16                                            9     7      2     799
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             26    18      8    1425
                                              0 BANK0     26    18      8
 ---------------------------------------------------------------------------------
 (1) _UART_Write_Text                                      7     5      2     872
                                              1 BANK0      7     5      2
                         _UART_Write
 ---------------------------------------------------------------------------------
 (2) _UART_Write                                           1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     110
                                              1 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0      88
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _timer_isr                                            7     7      0     628
                                              4 COMMON     7     7      0
                      _incrementTime
                       i1_readEEPROM
                      i1_writeEEPROM
 ---------------------------------------------------------------------------------
 (10) i1_writeEEPROM                                       4     0      4     252
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (10) i1_readEEPROM                                        4     2      2     100
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (10) _incrementTime                                       3     3      0     253
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _UART_Initialize
   _UART_Write_Text
     _UART_Write
   ___awdiv
     ___fltol (ARG)
     ___wmul (ARG)
   ___awmod
     ___fltol (ARG)
   ___fldiv
   ___flmul
     __Umul8_16
     ___fldiv (ARG)
     ___xxtofl (ARG)
   ___fltol
   ___wmul
   ___xxtofl
   _readEEPROM
     ___wmul (ARG)
   _sprintf
     ___fltol (ARG)
     _vfprintf (ARG)
       _vfpfcnvrt
         _dtoa
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc
         _read_prec_or_width
           ___wmul
         _utoa
           ___lwdiv
           ___lwmod
           _pad
   _writeEEPROM
   _yagBakim
     _Lcd_Clear
     _Lcd_Set_Cursor
     _Lcd_Write_String

 _timer_isr (ROOT)
   _incrementTime
   i1_readEEPROM
   i1_writeEEPROM

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60     34      43       9       69.8%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0      20      11       33.3%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     50      50       7      100.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4D      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      B       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0     110      12        0.0%
ABS                  0      0     110       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Oct 10 16:06:58 2023

              ___fldiv@aexp 0039                ___fldiv@bexp 0038                           pc 0002  
              ___fldiv@sign 0031                          l13 1D6B                          l16 1D51  
                        l25 1F27                          l19 1D5B                          _RD 0C60  
                        _WR 0C61                ___awdiv@sign 002F                          fsr 0004  
       ___wmul@multiplicand 0022         __Umul8_16@word_mpld 0026                         l140 1E03  
                       l141 1E04                         l221 0FFD                         l142 1E0A  
                       l222 0EF5                         l143 1E0B                         l231 0207  
                       l144 1E11                         l152 1D4D                         l240 0BA4  
                       l161 11A5                         l241 0CEC                         l146 1E12  
                       l138 1DFC                         l170 1FB3                         l250 0D51  
                       l234 0298                         l218 0085                         l139 1DFD  
                       l243 0CC7                         l164 1EE1                         l149 1DD6  
                       l253 0D8D                         l245 0D52                         l237 04C8  
                       l158 108D                         l175 07FA                         l271 0EDF  
                       l263 0DC6                         l255 0DBE                         l192 1DA4  
                       l272 0EF2                         l273 0EF0                         l257 0D99  
                       l249 0CF4                         l186 1DEE                         l371 1E67  
                       l259 0E5F                         l524 1275                         l373 1E7F  
                       l189 1DF2                         l269 0EE3                         l278 0F51  
                       l537 1142                         l730 06E2                         l651 1F6D  
                       l572 1346                         l812 13FC                         l900 1587  
                       l565 135B                         l661 1041                         l750 06CE  
                       l814 1491                         l902 1591                         l575 135B  
                       l744 065C                         l728 056A                         l920 1E58  
                       l825 145B                         l826 1467                         l834 1E33  
                       l908 1693                         l774 0AE5                         l950 07FD  
                       l854 1FCB                         l862 14BD                         l927 1D8F  
                       l768 0B75                         l857 1FF1                         l866 14BB  
                       l787 1E96                         l939 10E7                         l947 0830  
                       l859 1FFF                         l875 1554                         l789 1EA8  
                       l893 12E3                         l885 13D7                         _GIE 005F  
                       _RB0 0030                         _RB1 0031                         _RB2 0032  
                       _RA4 002C                         _RC0 0038                         _RB3 0033  
                       _RC1 0039                         _RB4 0034                         _RC2 003A  
                       _RD0 0040                         _RB5 0035                         _RC3 003B  
                       _RE0 0048                         _RE1 0049                         _RE2 004A  
                       _abs 1D7D                         _pad 1FB4                         fsr0 0004  
                       indf 0000                ___awmod@sign 002F                ___flmul@aexp 004C  
              ___flmul@bexp 004D                ___flmul@sign 0047                ___flmul@temp 0052  
              ___flmul@prod 004E                 main@lcdText 00CE                ___fltol@exp1 0029  
                      ?_abs 0030                        l3000 058B                        l3010 05B3  
                      l3002 0590                        l3020 05DC                        l3012 05BB  
                      l3100 0836                        l3030 05FD                        l3022 05E0  
                      l3014 05C3                        l3006 0599                        l3110 0849  
                      l3102 083A                        l3040 061F                        l3032 060B  
                      l3024 05E1                        l3016 05C5                        l3008 05AB  
                      l3200 0ACE                        l3120 0864                        l3112 0851  
                      l3104 083E                        l2400 1E5D                        l3042 0628  
                      l3050 063C                        l3018 05CA                        l3026 05EA  
                      l3034 060F                        l3210 0AFD                        l3202 0AE2  
                      l3130 087B                        l3122 0868                        l3114 0853  
                      l3106 083F                        l2402 1E61                        l3052 0640  
                      l3044 062C                        l3036 0615                        l3028 05FC  
                      l3220 0B38                        l3212 0B01                        l3132 087D  
                      l3124 0869                        l3116 085B                        l3108 0844  
                      l2420 121B                        l2412 120D                        l2404 1E6E  
                      l2500 1F35                        l3070 0691                        l3062 0661  
                      l3054 0641                        l3046 062D                        l3038 061D  
                      l3230 0B63                        l3222 0B47                        l3214 0B1A  
                      l3206 0AEA                        l3150 08EA                        l3142 0898  
                      l3134 0885                        l3126 086E                        l3118 0860  
                      l2430 1230                        l2422 121F                        l2414 1210  
                      l2406 1E75                        l2510 1F5B                        l2502 1F3C  
                      l3080 06C5                        l3064 0666                        l3072 0697  
                      l3056 0645                        l3048 0636                        l3232 0B64  
                      l3224 0B51                        l3208 0AEF                        l3216 0B20  
                      l3160 0963                        l3152 0914                        l3144 08A6  
                      l3136 088A                        l3128 0873                        l3240 13DB  
                      l2440 1253                        l2432 1233                        l2424 1224  
                      l2416 1214                        l2600 14F3                        l2408 1E7B  
                      l2512 1F5C                        l2504 1F40                        l2520 1006  
                      l3400 1724                        l3090 06DC                        l3082 06CD  
                      l3074 06A4                        l3066 0674                        l3058 0659  
                      l3226 0B53                        l3234 0B69                        l3218 0B2D  
                      l3170 09DF                        l3162 0980                        l3154 0930  
                      l3146 08B3                        l3138 088F                        l3242 13E0  
                      l2450 126C                        l2442 1259                        l2434 123A  
                      l2426 1228                        l2418 1219                        l2610 152E  
                      l2602 1506                        l2514 1F63                        l2506 1F44  
                      l2530 1020                        l2522 100E                        l3410 172D  
                      l3402 1725                        l3084 06D2                        l3076 06B2  
                      l3068 0678                        l3236 0B6D                        l3228 0B5F  
                      l3180 0A91                        l3172 0A0A                        l3164 098E  
                      l3156 094C                        l3148 08CE                        l3260 1424  
                      l3252 140D                        l3244 13E4                        l2452 1271  
                      l2444 125A                        l2436 123E                        l2428 122A  
                      l2460 10EF                        l2380 109A                        l2604 1514  
                      l2612 1534                        l2508 1F55                        l2516 1F69  
                      l2532 102A                        l2524 1011                        l2700 1558  
                      l3500 00A2                        l3420 1761                        l3412 1737  
                      l3404 1726                        l3340 1697                        l3086 06D6  
                      l3078 06C1                        l3190 0AB6                        l3182 0A9A  
                      l3174 0A18                        l3166 09AB                        l3158 0955  
                      l3270 1451                        l3262 1428                        l3254 1410  
                      l3246 13F4                        l2446 1261                        l2438 1242  
                      l2470 1105                        l2462 10F4                        l2382 10A1  
                      l2390 080A                        l2550 1FCE                        l2542 1FB7  
                      l2614 153B                        l2606 151C                        l2534 1030  
                      l2526 1018                        l2630 1373                        l2622 135F  
                      l2710 1588                        l2702 156E                        l3510 010C  
                      l3502 00A6                        l3430 1788                        l3422 176C  
                      l3414 1742                        l3406 1727                        l3350 169C  
                      l3342 1698                        l3088 06D8                        l3192 0ABF  
                      l3184 0AA8                        l3176 0A43                        l3168 09C2  
                      l3280 1484                        l3272 1455                        l3264 1436  
                      l3256 1414                        l3248 1404                        l2448 1267  
                      l2480 1121                        l2472 1108                        l2464 10F6  
                      l2456 10E8                        l2560 1D83                        l2384 10B0  
                      l2376 108E                        l2392 080D                        l2552 1FDB  
                      l2544 1FBB                        l2616 1541                        l2608 1521  
                      l2536 1037                        l2528 101C                        l2640 13AA  
                      l2632 1389                        l2624 1361                        l2720 15C4  
                      l2704 1576                        l2800 1F73                        l3600 0CB9  
                      l3520 016A                        l3512 0127                        l3504 00AA  
                      l3440 179A                        l3432 178C                        l3424 177A  
                      l3416 174C                        l3408 1728                        l3360 16A1  
                      l3352 169D                        l3344 1699                        l2570 1E01  
                      l2810 1E8C                        l3186 0AB1                        l3194 0AC5  
                      l3178 0A69                        l3098 0831                        l3282 1488  
                      l3274 145F                        l3266 143F                        l3258 141D  
                      l2490 113E                        l2482 1127                        l2474 110F  
                      l2466 10FA                        l2458 10EB                        l2562 1D84  
                      l2386 10CE                        l2378 1095                        l2394 081B  
                      l2554 1FE3                        l2546 1FC3                        l2618 1547  
                      l2538 103D                        l2642 13B0                        l2634 138A  
                      l2626 1369                        l2730 15E5                        l2722 15C8  
                      l2714 1594                        l2706 157D                        l2802 1F8F  
                      l3610 0CE0                        l3602 0CBF                        l3530 01C3  
                      l3522 0175                        l3514 014B                        l3506 00AD  
                      l3450 179F                        l3442 179B                        l3434 178F  
                      l3426 177F                        l3418 1757                        l3370 16AC  
                      l3362 16A2                        l3354 169E                        l3346 169A  
                      l3338 1694                        l2572 1E08                        l2812 1E90  
                      l3196 0AC9                        l3188 0AB5                        l3284 1489  
                      l3276 1469                        l3268 1446                        l2484 112E  
                      l2476 1113                        l2468 10FF                        l2396 0823  
                      l2556 1FF7                        l2548 1FC9                        l2580 14A2  
                      l2660 12A7                        l2652 1279                        l2644 13B5  
                      l2636 1390                        l2628 136D                        l2740 161C  
                      l2732 15F3                        l2724 15C9                        l2716 15B1  
                      l2708 1583                        l2820 1E37                        l2804 1F97  
                      l3700 0F03                        l3620 0D0F                        l3612 0CF0  
                      l3604 0CC3                        l3540 01FD                        l3532 01E3  
                      l3524 0194                        l3516 0155                        l3508 00C8  
                      l3460 17AA                        l3452 17A0                        l3444 179C  
                      l3436 1793                        l3428 1783                        l3380 16B2  
                      l3372 16AD                        l3364 16A3                        l3356 169F  
                      l3348 169B                        l2574 1E0F                        l2566 1DF6  
                      l2670 1DBE                        l2830 1D5C                        l2814 1E9F  
                      l2806 1E83                        l3198 0ACA                        l3278 147F  
                      l2478 1117                        l2486 1134                        l2558 1D7D  
                      l2590 14C1                        l2582 14A7                        l2398 1E59  
                      l2662 12BE                        l2654 127B                        l2494 1F28  
                      l2646 13C2                        l2638 13A3                        l2742 162A  
                      l2734 1601                        l2726 15CE                        l2718 15B6  
                      l2822 1E3C                        l2910 1E2A                        l2902 1E16  
                      l3710 0F42                        l3702 0F0E                        l3630 0D56  
                      l3622 0D1A                        l3614 0CF8                        l3606 0CCB  
                      l3550 0295                        l3542 0204                        l3534 01EC  
                      l3526 019C                        l3518 0160                        l3470 17F4  
                      l3462 17C7                        l3454 17A6                        l3446 179D  
                      l3438 1799                        l3390 1707                        l3382 16C1  
                      l3374 16AE                        l3366 16A8                        l3358 16A0  
                      l2568 1DFA                        l2672 1DBF                        l2832 1D68  
                      l2840 1F0B                        l2816 1EA4                        l2808 1E85  
                      l2920 12F8                        l2488 1139                        l2592 14C5  
                      l2584 14AD                        l2576 1495                        l2656 1291  
                      l2664 12C6                        l2496 1F2C                        l2648 13C8  
                      l2752 1654                        l2744 1638                        l2736 1611  
                      l2728 15D7                        l3800 15AC                        l2824 1E46  
                      l2904 1E1A                        l2680 1EAC                        l3720 0F7D  
                      l3704 0F2E                        l3640 0D95                        l3632 0D5E  
                      l3624 0D29                        l3616 0CFC                        l3608 0CD5  
                      l3560 0373                        l3552 029C                        l3544 020B  
                      l3536 01F2                        l3528 01BB                        l3480 0047  
                      l3472 0035                        l3464 17CD                        l3448 179E  
                      l3392 171E                        l3384 16C4                        l3376 16AF  
                      l3368 16AB                        l2674 1DC5                        l2850 116B  
                      l2842 1143                        l2834 1EE2                        l2930 131A  
                      l2922 130B                        l2914 12E4                        l2594 14CB  
                      l2586 14B2                        l2578 1497                        l2666 12DF  
                      l2658 1299                        l2498 1F32                        l3802 1664  
                      l2746 1649                        l2754 1669                        l2826 1E56  
                      l2906 1E1C                        l2690 1ECB                        l2682 1EB2  
                      l3714 0F55                        l3706 0F31                        l3650 0DCA  
                      l3642 0D9D                        l3634 0D69                        l3626 0D2D  
                      l3618 0D04                        l3570 04C5                        l3562 03E6  
                      l3554 02A6                        l3546 0288                        l3538 01F7  
                      l3474 003B                        l3482 004C                        l3466 17DF  
                      l3394 1721                        l3386 16D9                        l3378 16B0  
                      l2676 1DC8                        l2844 1149                        l2772 1D51  
                      l2836 1EE7                        l2940 1334                        l2924 130C  
                      l2916 12EF                        l2596 14EC                        l2588 14B7  
                      l2908 1E1E                        l2780 104A                        l2692 1ECE  
                      l2684 1EB3                        l2860 07B2                        l2852 07A9  
                      l3740 0FBA                        l3716 0F5E                        l3732 0F89  
                      l3708 0F3F                        l3660 0E07                        l3652 0DCE  
                      l3644 0DA7                        l3636 0D81                        l3628 0D45  
                      l3580 0BFA                        l3572 04CC                        l3564 047E  
                      l3556 02FA                        l3548 028E                        l3492 008D  
                      l3484 0054                        l3476 003F                        l3468 17E7  
                      l3396 1722                        l3388 16F0                        l2678 1DD3  
                      l2846 1154                        l2774 1D57                        l2838 1F03  
                      l2950 1350                        l2926 1314                        l2598 14ED  
                      l2758 1674                        l2790 106F                        l2782 1057  
                      l2694 1ED4                        l2686 1EC1                        l2870 07E5  
                      l2862 07BC                        l2854 07AE                        l3750 0FE7  
                      l3742 0FC5                        l3734 0F90                        l3718 0F68  
                      l3670 0E53                        l3662 0E0F                        l3654 0DD6  
                      l3646 0DB2                        l3638 0D91                        l3590 0C53  
                      l3582 0C04                        l3574 050A                        l3566 04B8  
                      l3558 0339                        l3494 0091                        l3486 005F  
                      l3478 0043                        l3398 1723                        ?_pad 002F  
                      l2848 1165                        l2960 0522                        l2952 0514  
                      l2936 1322                        l2928 1316                        l2880 1DE6  
                      l2776 1D41                        l2792 107C                        l2784 105A  
                      l2696 1ED7                        l2688 1EC4                        l2872 07F2  
                      l2864 07C7                        l3752 0FED                        l3744 0FC8  
                      l3736 0F9B                        l3680 0EA7                        l3672 0E63  
                      l3664 0E1C                        l3656 0DE1                        l3648 0DC2  
                      l3592 0C5D                        l3584 0C0F                        l3576 0B76  
                      l3568 04BE                        l3496 0098                        l3488 0074  
                      l2962 0527                        l2970 0537                        l2954 0519  
                      l2946 133B                        l2938 132B                        l2890 1D96  
                      l2882 1DEB                        l2794 107F                        l2786 1060  
                      l2778 1045                        l2698 1EDE                        l2874 07F7  
                      l2866 07DC                        l3754 0FF1                        l3746 0FD6  
                      l3738 0FA5                        l3690 0ED7                        l3674 0E6B  
                      l3682 0EB3                        l3666 0E22                        l3658 0DFA  
                      l3594 0C68                        l3586 0C3E                        l3578 0B7A  
                      l3498 009E                        l2980 054D                        l2972 053F  
                      l2964 052C                        l2956 051D                        l2948 134B  
                      l2884 1DEC                        l2876 1DD7                        l2796 1085  
                      l2788 1069                        l2868 07DF                        l3756 0FF5  
                      l3748 0FD9                        l3692 0EDB                        l3684 0EBB  
                      l3676 0E76                        l3668 0E3B                        l3596 0CA4  
                      l3588 0C48                        l2982 0552                        l2990 0562  
                      l2974 0544                        l2966 0534                        l2958 0521  
                      l2886 1DED                        l2878 1DE3                        l2798 1F6E  
                      l3758 0FF9                        l3694 0EE7                        l3686 0EC6  
                      l3678 0E8F                        l3598 0CAE                        l2992 0572  
                      l2984 0557                        l2976 0548                        l2968 0535  
                      l2888 1D90                        l3696 0EEB                        l3688 0ED1  
                      l2994 057E                        l2986 055F                        l2978 054C  
                      l3698 0EFB                        l2996 0582                        l2988 0560  
                      STR_1 18A3                        STR_2 18F2                        STR_3 18B6  
                      STR_4 18D5                        STR_5 1968                        STR_6 188F  
                      STR_7 187A                        STR_8 190D                        STR_9 18D2  
                      _T0IF 005A                        u3000 1E0F                        u3001 1E0E  
                      u3010 149C                        u3011 149A                        u3100 153B  
                      u3020 149D                        u3101 153A                        u3030 14A7  
                      u3110 13AA                        u3031 14A6                        u3111 13A9  
                      u3040 14B2                        u3120 13B0                        u3200 15B6  
                      u4001 09D1                        u3041 14B1                        u3121 13AF  
                      u3201 15B5                        u4002 09D8                        u3050 1514  
                      u3130 13B5                        u3210 15C8                        u4011 09FC  
                      u4003 09DF                        u3051 1513                        u3131 13B4  
                      u3211 15C7                        u4012 0A03                        u3060 151C  
                      u3140 13C2                        u3220 15E5                        u3300 1F7D  
                      u4021 0A27                        u4013 0A0A                        u3061 151B  
                      u3141 13C1                        u3221 15E4                        u4110 0AC9  
                      u4030 0A4F                        u4022 0A2E                        u2510 1095  
                      u3070 1521                        u3150 13C8                        u3230 15F3  
                      u3310 1FA1                        u4111 0AC8                        u4023 0A35  
                      u2511 1094                        u3071 1520                        u3055 1510  
                      u3151 13C7                        u3231 15F2                        u4200 0B63  
                      u4120 0ACE                        u2600 1214                        u2520 109A  
                      u3080 152E                        u3160 1291                        u3240 162A  
                      u3320 1FB3                        u3400 07F2                        u5000 0FF9  
                      u4201 0B62                        u4121 0ACD                        u4105 0AB8  
                      u4041 0A5B                        u2601 1213                        u2521 1099  
                      u3081 152D                        u3161 1290                        u3145 13BE  
                      u3241 1629                        u3321 1FB2                        u3401 07F1  
                      u5001 0FF8                        u3250 1D57                        u3330 1E90  
                      u4130 0AE2                        u4050 0A77                        u4042 0A62  
                      u4210 13E0                        u2610 121F                        u2530 10B0  
                      u3090 1534                        u3170 12DF                        u3410 1DF2  
                      u3251 1D56                        u3331 1E8F                        u4131 0AE1  
                      u4043 0A69                        u4035 0A4A                        u4211 13DF  
                      u2611 121E                        u2531 10AF                        u3091 1533  
                      u3171 12DE                        u3411 1DF1                        u4140 0AE9  
                      u3500 1333                        u4300 145B                        u4220 13E4  
                      u2620 1230                        u2700 10EF                        u2540 10CE  
                      u3260 104A                        u4141 0AE8                        u4061 0A83  
                      u3501 1332                        u4301 145A                        u4221 13E3  
                      u2621 122F                        u2701 10EE                        u2541 10CD  
                      u3085 152A                        u3261 1049                        u3405 07EE  
                      u3350 1EA4                        u4150 0AEF                        u4062 0A8A  
                      u3510 133A                        u4310 145F                        u4230 1404  
                      u2710 10FA                        u2550 0830                        u3190 156E  
                      u3351 1EA3                        u4151 0AEE                        u4063 0A91  
                      u4055 0A72                        u3511 1339                        u4311 145E  
                      u4231 1403                        u2711 10F9                        u2551 082F  
                      u3191 156D                        u3600 0557                        u4160 0B01  
                      u4320 1474                        u2640 1242                        u2720 1105  
                      u2560 1E61                        u3360 1E56                        u3280 106F  
                      u3601 0556                        u3345 1E97                        u4161 0B00  
                      u2641 1241                        u2721 1104                        u2545 10CA  
                      u2561 1E60                        u3361 1E55                        u3281 106E  
                      u3185 1EB6                        u5017 16BA                        u3370 1EF1  
                      u3610 0572                        u4170 0B10                        u4090 0AB5  
                      u3530 134B                        u3450 12EF                        u4330 1484  
                      u4250 1423                        u2810 1F44                        u3611 0571  
                      u4091 0AB4                        u4075 0A93                        u3531 134A  
                      u3451 12EE                        u4331 1483                        u4251 1422  
                      u2635 1234                        u2811 1F43                        u3275 1050  
                      u5107 0FE1                        u5027 1774                        u3380 1F15  
                      u3700 061D                        u3620 0590                        u4180 0B2D  
                      u3540 1350                        u3460 1306                        u4340 1488  
                      u2660 1253                        u2740 1117                        u4500 0091  
                      u4420 17CD                        u3701 061C                        u3621 058F  
                      u4181 0B2C                        u4085 0AAA                        u3541 134F  
                      u3525 133D                        u4341 1487                        u4325 146F  
                      u4245 1415                        u2661 1252                        u2741 1116  
                      u2805 1F36                        u5117 1EC8                        u4501 0090  
                      u5037 007C                        u4421 17CC                        u3390 1F27  
                      u3630 05CA                        u3550 0521                        u4190 0B47  
                      u3470 131A                        u4270 1445                        u2750 1121  
                      u2590 1E7B                        u2830 1F55                        u2910 103D  
                      u4510 0098                        u4430 17F4                        u3391 1F26  
                      u3631 05C9                        u3551 0520                        u4191 0B46  
                      u4175 0B0B                        u3471 1319                        u4271 1444  
                      u2655 1243                        u2751 1120                        u2735 1109  
                      u2591 1E7A                        u2575 1E68                        u2831 1F54  
                      u2911 103C                        u3295 1075                        u5127 1EDB  
                      u5047 0201                        u4511 0097                        u4431 17F3  
                      u3800 0687                        u3720 062C                        u3560 0527  
                      u3480 1321                        u2680 1267                        u2920 1FBB  
                      u4600 01E3                        u4520 009E                        u4440 0035  
                      u5137 114F                        u3721 062B                        u3561 0526  
                      u4185 0B29                        u3481 1320                        u3465 1301  
                      u4265 1437                        u2681 1266                        u2665 124F  
                      u2921 1FBA                        u2585 1E6F                        u2825 1F45  
                      u2905 1031                        u5057 0292                        u4601 01E2  
                      u4521 009D                        u4441 17FD                        u3810 06A4  
                      u3570 052C                        u4290 1455                        u2690 126C  
                      u2770 1134                        u2930 1FC9                        u2850 1F69  
                      u4610 01EC                        u4530 00A2                        u4450 003B  
                      u5147 1160                        u3811 06A3                        u3715 0621  
                      u3571 052B                        u4195 0B43                        u4291 1454  
                      u2691 126B                        u2675 125B                        u2771 1133  
                      u2755 111D                        u2931 1FC8                        u2851 1F68  
                      u2835 1F51                        u5067 04C2                        u4611 01EB  
                      u4531 00A1                        u4451 003A                        u4435 17F0  
                      u3820 06C1                        u3740 0640                        u3660 05E0  
                      u3580 054C                        u3900 088A                        u2780 1139  
                      u2940 1FF1                        u2860 100E                        u4700 0CC7  
                      u4620 01F2                        u4540 00A6                        u4460 003F  
                      u5157 1171                        u3821 06C0                        u3805 0682  
                      u3741 063F                        u3661 05DF                        u3645 05CC  
                      u3581 054B                        u3901 0889                        u4285 144A  
                      u2781 1138                        u2765 1128                        u2941 1FF0  
                      u2845 1F5D                        u2861 100D                        u5077 0F39  
                      u4701 0CC6                        u4621 01F1                        u4541 00A5  
                      u4461 003E                        u3830 06D6                        u3750 0645  
                      u3590 0552                        u3910 088F                        u2950 1FF7  
                      u2790 1F32                        u4710 0CF0                        u4630 020B  
                      u4550 00AA                        u4470 0043                        u5167 1DCE  
                      u3831 06D5                        u3815 06A0                        u3751 0644  
                      u3735 062F                        u3655 05D5                        u3591 0551  
                      u3911 088E                        u3495 1323                        u2951 1FF6  
                      u2791 1F31                        u5087 0F4A                        u4711 0CEF  
                      u4631 020A                        u4551 00A9                        u4471 0042  
                      u3760 0659                        u3680 05FC                        u3840 083E  
                      u2960 1D83                        u2880 1020                        u4800 0D99  
                      u4720 0CF4                        u4640 029C                        u4560 0194  
                      u4480 0047                        u3825 06BD                        u3761 0658  
                      u3681 05FB                        u3921 08DC                        u3841 083D  
                      u2961 1D82                        u2945 1FED                        u2881 101F  
                      u5097 0FD0                        u4801 0D98                        u4721 0CF3  
                      u4641 029B                        u4561 0193                        u4481 0046  
                      u2970 1DFA                        u3770 0660                        u3690 0615  
                      u3922 08E3                        u3850 0844                        u2890 102A  
                      u4810 0DC2                        u4730 0CF8                        u4650 04CC  
                      u4570 019C                        u4490 008D                        u2971 1DF9  
                      u3771 065F                        u3691 0614                        u3675 05E3  
                      u3931 08F8                        u3923 08EA                        u3851 0843  
                      u2891 1029                        u2875 1012                        u4811 0DC1  
                      u4731 0CF7                        u4651 04CB                        u4571 019B  
                      u4491 008A                        u2980 1E01                        u3780 0666  
                      u3932 08FF                        u3860 0849                        u4900 0EDF  
                      u4820 0DC6                        u4740 0CFC                        u4660 0B76  
                      u4580 01BB                        u2981 1E00                        u3781 0665  
                      u3685 05F8                        u3941 0922                        u3933 0906  
                      u3861 0848                        u4901 0EDE                        u4821 0DC5  
                      u4741 0CFB                        u4661 0511                        u4581 01BA  
                      u2990 1E08                        u3790 0678                        u3942 0929  
                      u3870 0868                        u4910 0EE7                        u4830 0DCA  
                      u4750 0D1A                        u4670 0B7A                        u4590 01C3  
                      u2991 1E07                        u3791 0677                        u3951 093E  
                      u3943 0930                        u3871 0867                        u2895 1026  
                      u4911 0EE6                        u4831 0DC9                        u4751 0D19  
                      u4671 0B79                        u4591 01C2                        u3952 0945  
                      u3880 086E                        u4920 0EEB                        u4840 0DCE  
                      u4760 0D29                        u4680 0CBF                        u3953 094C  
                      u3881 086D                        u4921 0EEA                        u4841 0DCD  
                      u4761 0D28                        u4681 0CBE                        u3890 0873  
                      u4930 0EEF                        u4850 0E07                        u4770 0D56  
                      u4690 0CC3                        u3971 0972                        u3891 0872  
                      u4931 0EEE                        u4851 0E06                        u4771 0D55  
                      u4691 0CC2                        u3972 0979                        u4940 0EFB  
                      u4860 0E1C                        u4780 0D91                        u3981 099D  
                      u3973 0980                        u3965 094E                        u4941 0EFA  
                      u4861 0E1B                        u4781 0D90                        u3982 09A4  
                      u4950 0F55                        u4870 0E63                        u4790 0D95  
                      u3983 09AB                        u4951 0F54                        u4871 0E62  
                      u4855 0E03                        u4791 0D94                        u4960 0F90  
                      u4880 0ED7                        u4961 0F8F                        u4881 0ED6  
                      u4865 0E18                        u4970 0FED                        u4890 0EDB  
                      u3995 09AD                        u4971 0FEC                        u4891 0EDA  
                      u4980 0FF1                        u4981 0FF0                        u4990 0FF5  
                      u4991 0FF4                        _TMR0 0001                        _TRMT 04C1  
                      _WREN 0C62                        abs@a 0030           ?_Lcd_Write_String 0025  
                      _dbuf 0110                        _main 1694                        _dtoa 1492  
                      _prec 01C4                        pad@i 0033                        pad@p 0030  
                      btemp 007E                        _utoa 135C                        start 000E  
        ??_Lcd_Write_String 0027             ___fldiv@new_exp 0032             __end_of_Lcd_Cmd 1DD7  
               _writeEEPROM 1DD7     __end_of_UART_Write_Text 1F28                       ??_abs 0032  
                     ??_pad 0032            ?_UART_Initialize 0070               ___fltol@sign1 0028  
        writeEEPROM@address 0020                       ?_main 0070                       ?_dtoa 0036  
           __end_of___fldiv 06E3             __end_of___awdiv 1276                       _EEADR 010D  
                     STR_10 1918                       STR_11 1958                       STR_12 1963  
                     STR_20 1949                       STR_21 195E                       STR_13 1936  
                     STR_30 195E                       STR_14 1940                       STR_22 192C  
                     STR_31 195E                       STR_23 1952                       STR_15 195E  
                     STR_16 1922                       STR_24 18E4                       STR_32 184D  
                     STR_25 1952                       STR_17 1952                       STR_33 1835  
                     STR_34 195E                       STR_26 1900                       STR_18 18C6  
                     STR_27 195E                       STR_19 1952                       STR_35 1865  
                     STR_36 187A                       STR_28 181B             __end_of___awmod 1143  
                     STR_29 1800             __end_of___flmul 0B76             __end_of___fltol 135C  
                     ?_utoa 0036             ___awdiv@divisor 002A             __end_of___lwdiv 1F6E  
                     i1l207 07A0                       i1l192 1D7C             __end_of___lwmod 1042  
                     i1l186 1DB6                       i1l189 1DBA                       i1l198 120C  
           ___awdiv@counter 002E                       _RCSTA 0018                vfpfcnvrt@fmt 0041  
                     _SPBRG 0099                       _TRISB 0086                       _TRISD 0088  
                     _TXREG 0019                       _TXSTA 0098                main@realSaat 01C2  
               ?_UART_Write 0070                       _flags 006F                main@olmazlar 01A2  
       read_prec_or_width@c 002A         read_prec_or_width@n 002B                       _fputc 108E  
                     _fputs 0807                       pad@fp 0035                       _width 006D  
                     _putch 07FD                       dtoa@d 0036                       dtoa@i 003F  
                     dtoa@p 003B                       dtoa@s 003E                       dtoa@w 003C  
             main@adcValue1 01B0               main@adcValue2 01A0               main@adcValue3 0190  
                     pclath 000A                       utoa@d 0036                       utoa@i 003C  
                     utoa@p 0039                       utoa@w 003A                       status 0003  
                     wtemp0 007E             __end_of_sprintf 1E34            __end_of_Lcd_Init 11A6  
          __end_of_Lcd_Port 1E13             __initialization 0011       __end_ofi1_writeEEPROM 1DBB  
              __end_of_main 1000                __end_of_dtoa 1555                __end_of_utoa 13D8  
                    ??_main 00A0                      ??_dtoa 0038                      ??_utoa 0038  
              i1_readEEPROM 1D6C               main@ilkAcilis 01AE  __end_of_read_prec_or_width 12E4  
                    ?_fputc 0020                      ?_fputs 0028                      _ADRESH 001E  
                    _ADRESL 009E                      _EEDATA 010C                      _EECON2 018D  
          ___awdiv@dividend 002C                      ?_putch 0070                      i1l3300 1D6C  
                    i1l3302 1D70                      i1l3310 06E8                      i1l3320 070B  
                    i1l3312 06F4                      i1l3330 0747                      i1l3322 0712  
                    i1l3314 06FB                      i1l3306 06E3                      i1l3332 075A  
                    i1l3324 0714                      i1l3316 06FD                      i1l3308 06E7  
                    i1l3334 0772                      i1l3326 0721                      i1l3318 0703  
                    i1l3336 0781                      i1l3328 0734                      i1l3290 1DAB  
                    i1l2900 11FF                      i1l3292 1DAE                      i1l3294 1DB3  
                    i1l3296 1DB4                      i1l3288 1DA5                      i1l3298 1DB5  
                    i1l2894 11A7                      i1l2896 11C1                      i1l2898 11E0  
                    u342_20 11C1                      u342_21 11C0                      u343_20 11E0  
                    u343_21 11DF                      u344_20 11FF                      u440_20 076C  
                    u344_21 11FE                      u441_20 0781                      u441_21 0780  
                    u435_20 1DBA                      u435_21 1DB9                      u436_20 06E7  
                    u436_21 06E6                      u437_20 06FB                      u437_21 06FA  
                    u438_20 0712                      u438_21 0711                      u439_20 076B  
                    u439_21 0769                   ??_Lcd_Cmd 0021               vfpfcnvrt@done 0047  
                    _TRISA0 0428                      _TRISA1 0429                      _TRISA2 042A  
                    _TRISA3 042B                      _TRISA4 042C                      _TRISC0 0438  
                    _TRISC1 0439                      _TRISA5 042D                      _TRISC2 043A  
                    _TRISD0 0440                      _TRISC3 043B                      _TRISE0 0448  
                    _TRISC4 043C                      _TRISE1 0449                      _TRISC5 043D  
                    _TRISE2 044A                      _TRISC6 043E                      _TRISC7 043F  
          __end_of___xxtofl 1492                vfprintf@cfmt 0053                      ___wmul 1E59  
                 ??___fldiv 0028                   ??___awdiv 002E                   ??___awmod 002E  
                 ??___flmul 0042            ?_UART_Write_Text 0021                   ??___fltol 0024  
             main@oranValue 0194                   ??___lwdiv 0024                   ??___lwmod 0024  
      read_prec_or_width@ap 0026            ___awdiv@quotient 0030             ___awmod@divisor 002A  
           ___awmod@counter 002E               _incrementTime 11A6                      pad@buf 002F  
          __end_of_yagBakim 07FB                      dtoa@fp 003A                      fputc@c 0020  
             main@rpmString 00E7                      fputs@c 002B                      fputs@i 002C  
                    fputs@s 002E                __pdataCOMMON 007B                      saved_w 007E  
            main@adcString1 00EC                      putch@c 0070            __end_of_vfprintf 1E59  
                    utoa@fp 0038                   ??_sprintf 005F             Lcd_Set_Cursor@a 0026  
           Lcd_Set_Cursor@b 0024             Lcd_Set_Cursor@y 0028             Lcd_Set_Cursor@z 0027  
              ___xxtofl@arg 002A                ___xxtofl@exp 0029                ___xxtofl@val 0020  
   __end_of__initialization 0031           __end_of_Lcd_Clear 1D4E                  ___fltol@f1 0020  
           writeEEPROM@data 0022              __pcstackCOMMON 0070               __end_of_fputc 10E8  
             __end_of_fputs 0831               __end_of_putch 07FE              ?_incrementTime 0070  
            _Lcd_Set_Cursor 1042           incrementTime@time 0072              _OPTION_REGbits 0081  
        main@gostermeliklcd 0198                   ?_Lcd_Init 0070                   ?_Lcd_Port 0070  
                   ??_fputc 0023                     ??_fputs 0029                     ??_putch 0020  
          main@combinedText 00A6                  __pbssBANK0 006D                  __pbssBANK2 0110  
                __pbssBANK3 01C4           __end_of__Umul8_16 1EA9                  __pmaintext 1694  
              ?_writeEEPROM 0020                     ?___wmul 0020                  __pintentry 0004  
    __end_of_Lcd_Set_Cursor 108E            main@displayValue 01C0                   ?___xxtofl 0020  
              ??_UART_Write 0020                  ??_Lcd_Init 0024                  ??_Lcd_Port 0020  
                __stringtab 196B              _Lcd_Write_Char 1EA9                     _Lcd_Cmd 1DBB  
                _readEEPROM 1D90                   ?_yagBakim 0070                     ___fldiv 0514  
                   ___awdiv 120D             ??_incrementTime 0070                     ___awmod 10E8  
                   ___flmul 0831                     ___fltol 12E4          __end_of_UART_Write 1D5C  
                   ___lwdiv 1F28                     ___lwmod 1006                   ?_vfprintf 004F  
           ?_Lcd_Set_Cursor 0024                     __ptext1 07A9                     __ptext2 1F6E  
                   __ptext3 1EA9                     __ptext4 1042                     __ptext5 1D41  
                   __ptext6 1DD7                     __ptext7 1E13                     __ptext8 1E34  
                   __ptext9 1555       read_prec_or_width@fmt 002D                  ??___xxtofl 0024  
          ___awmod@dividend 002C       main@negativeFeedValue 01BE                     _sprintf 1E13  
                   clrloop0 1D3A      __end_of_Lcd_Write_Char 1EE2        end_of_initialization 0031  
                   fputc@fp 0022                     fputs@fp 0028            _epromBaslaAdress 007B  
        _read_prec_or_width 1276                  ??_yagBakim 002C           __end_of_timer_isr 07A9  
         __end_of_vfpfcnvrt 1694         ?_read_prec_or_width 0026                     psplit$0 F0038  
                   psplit$1 380039            vfpfcnvrt@convarg 0048                   Lcd_Port@a 0020  
              __pstringtext 1800                  ??_vfprintf 0052              UART_Write@data 0020  
             ___xxtofl@sign 0028        ??_read_prec_or_width 0028                 ___fldiv@grs 0034  
               ___fldiv@rem 002D        pnum$maintext_split_1 0038        pnum$maintext_split_2 0039  
         readEEPROM@address 0026             ?_Lcd_Write_Char 0070           Lcd_Write_String@a 0025  
         Lcd_Write_String@i 002A                 ___flmul@grs 0048                  main@dakika 01A4  
                main@binler 01B6                  main@birler 01A8                 ?_readEEPROM 0026  
                main@yuzler 01B4                   _Lcd_Clear 1D41                 vfpfcnvrt@ap 0042  
               vfpfcnvrt@cp 004D                 vfpfcnvrt@fp 004C              __end_of___wmul 1E80  
          _Lcd_Write_String 1F6E               __pidataCOMMON 07FB         start_initialization 0011  
               __end_of_abs 1D90                 __end_of_pad 2000           ??_UART_Initialize 0020  
               vfprintf@fmt 004F                  ?_Lcd_Clear 0070               i1_writeEEPROM 1DA5  
                  ??___wmul 0024                   __Umul8_16 1E80             Lcd_Write_Char@a 0024  
           Lcd_Write_Char@y 0023                   ___fldiv@a 0020                   ___fldiv@b 0024  
                 ___flmul@a 003E                   ___flmul@b 003A                   ___latbits 0002  
             __pcstackBANK0 0020               __pcstackBANK1 00A0               __pcstackBANK3 0190  
                  ?_Lcd_Cmd 0070                   _main$1170 019C                   _main$1169 01AC  
          ___lwdiv@dividend 0022    main@negativeDisplayValue 01AA              ?i1_writeEEPROM 0070  
          ??_Lcd_Set_Cursor 0025                    ?___fldiv 0020                    ?___awdiv 002A  
                  ?___awmod 002A                    ?___flmul 003A                    ?___fltol 0020  
                ?__Umul8_16 0020                    ?___lwdiv 0020                    ?___lwmod 0020  
                 __pstrings 196B               ?i1_readEEPROM 0070            ___lwdiv@quotient 0024  
                  ?_sprintf 0055           ??_UART_Write_Text 0023           interrupt_function 0004  
               _eepromWRclc 01C8              ___wmul@product 0024                   clear_ram0 1D39  
           main@epromAdresi 01BC                    Lcd_Cmd@a 0023                 ??_Lcd_Clear 0024  
            _timer_isr$1182 0079                   _timer_isr 06E3       __end_of_incrementTime 120D  
                 _vfpfcnvrt 1555              ??i1_readEEPROM 0072                  _ADCON0bits 001F  
               __stringbase 197D                  _ADCON1bits 009F           ___wmul@multiplier 0020  
          ??_Lcd_Write_Char 0021                   main@onlar 01A6                    _Lcd_Init 1143  
                  _Lcd_Port 1DF3             main@integerPart 01B8    __end_of_Lcd_Write_String 1FB4  
              ??_readEEPROM 0028             ??i1_writeEEPROM 0074                  vfprintf@ap 0051  
                vfprintf@fp 0052                 _kesmeSayaci 01C6                 ??__Umul8_16 0022  
                ?_timer_isr 0070                pnum$maintext 000F                  ?_vfpfcnvrt 0041  
      i1writeEEPROM@address 0070          __end_of__stringtab 197D             _UART_Initialize 1D5C  
                sprintf@fmt 0055                 _currentTime 01CB                    ___xxtofl 13D8  
                 yagBakim@i 002C          __end_of_readEEPROM 1DA5                    _dtoa$889 0038  
           ___lwdiv@divisor 0020             ___lwdiv@counter 0026                    __ptext10 135C  
                  __ptext11 1006                    __ptext20 1D7D                    __ptext12 1F28  
                  __ptext21 10E8                    __ptext13 1276                    __ptext30 1D4E  
                  __ptext22 120D                    __ptext14 1E59                    __ptext31 1D5C  
                  __ptext23 1D90                    __ptext15 1492                    __ptext32 1143  
                  __ptext24 13D8                    __ptext16 1FB4                    __ptext33 1DBB  
                  __ptext25 12E4                    __ptext17 0807                    __ptext34 1DF3  
                  __ptext26 0831                    __ptext18 108E                    __ptext35 06E3  
                  __ptext27 1E80                    __ptext19 07FD                    __ptext36 1DA5  
                  __ptext28 0514                    __ptext37 1D6C                    __ptext29 1EE2  
                  __ptext38 11A6           i1writeEEPROM@data 0072         UART_Write_Text@text 0021  
                  _limitler 01CA                    _yagBakim 07A9               ??_writeEEPROM 0024  
           main@uartMessage 00D7         i1readEEPROM@address 0070                    _vfprintf 1E34  
                _INTCONbits 000B          Lcd_Write_Char@temp 0022                    intlevel1 0000  
                 sprintf@ap 0060            ___lwmod@dividend 0022        __end_ofi1_readEEPROM 1D7D  
                 stringcode 1975                 ??_timer_isr 0074     __end_of_UART_Initialize 1D6C  
               ??_vfpfcnvrt 0043         main@uartMessage_374 00DF          Lcd_Set_Cursor@temp 0029  
      main@combinedText_378 00BA         __end_of_writeEEPROM 1DF3      __Umul8_16@multiplicand 0020  
           _UART_Write_Text 1EE2                    sprintf@f 0062                    sprintf@s 0061  
           ___lwmod@divisor 0020             ___lwmod@counter 0024                    stringtab 196B  
                _UART_Write 1D4E            UART_Write_Text@i 0026        __Umul8_16@multiplier 0028  
         __Umul8_16@product 0024  
